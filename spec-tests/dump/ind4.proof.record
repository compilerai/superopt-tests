==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x10 $x12)))
 (let (($x19 (and $x9 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x8 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x13)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x10 $x12)))
 (let (($x19 (and $x9 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x152 (= false true)))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x86 (concat ?x85 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x91 (concat ?x88 ?x86))))
 (let ((?x120 (bvadd ?x92 (_ bv4 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x124))))
 (let (($x131 (= (_ bv0 32) ?x130)))
 (let ((?x132 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x132 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x104 (and $x62 $x100)))
 (let (($x139 (=> $x104 $x138)))
 (let (($x133 (= ?x132 (_ bv0 32))))
 (let (($x119 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x134 (= $x119 $x133)))
 (let (($x135 (=> $x104 $x134)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x109))))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.0 ?x115)))
 (let (($x117 (=> $x104 $x116)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x94 (_ bv1 32))))
 (let (($x102 (= $x100 $x101)))
 (let (($x103 (=> $x62 $x102)))
 (let (($x60 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x98 (and $x62 $x80)))
 (let (($x99 (=> $x98 $x60)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x62 $x96)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x73)))
 (let (($x77 (= input.spec-%var-l-1.2.0 ?x76)))
 (let (($x78 (=> $x62 $x77)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x57 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x57 (_ bv1 32))))
 (let (($x64 (= $x62 $x63)))
 (let (($x55 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x61 (=> $x55 $x60)))
 (let (($x58 (= ?x57 (_ bv0 32))))
 (let (($x59 (= $x55 $x58)))
 (let (($x145 (and (and (and (and (and (and $x59 $x61) $x64) $x78) $x97) $x99) $x103)))
 (let (($x148 (and (and (and $x145 $x117) $x135) $x139)))
 (let (($x149 (= $x148 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x49 (concat ?x48 (concat ?x6 (concat ?x11 ?x5)))))
 (let (($x51 (= ?x49 input.dst.llvm-%l)))
 (let (($x52 (= $x51 true)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x29 (= (_ bv0 32) ?x32)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (and $x36 $x45)))
 (let (($x14 (and $x25 $x29)))
 (let (($x21 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x21 $x14)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x28)))))))
 (let (($x44 (and $x35 $x43)))
 (let (($x17 (= $x44 true)))
 (let (($x53 (and $x17 $x52)))
 (let (($x150 (and $x53 $x149)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x151 (and $x12 $x150)))
 (let (($x153 (=> $x151 $x152)))
 (not $x153))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x152 (= false true)))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x86 (concat ?x85 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x91 (concat ?x88 ?x86))))
 (let ((?x120 (bvadd ?x92 (_ bv4 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x124))))
 (let (($x131 (= (_ bv0 32) ?x130)))
 (let ((?x132 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x132 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x104 (and $x62 $x100)))
 (let (($x139 (=> $x104 $x138)))
 (let (($x133 (= ?x132 (_ bv0 32))))
 (let (($x119 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x134 (= $x119 $x133)))
 (let (($x135 (=> $x104 $x134)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x109))))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.0 ?x115)))
 (let (($x117 (=> $x104 $x116)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x94 (_ bv1 32))))
 (let (($x102 (= $x100 $x101)))
 (let (($x103 (=> $x62 $x102)))
 (let (($x60 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x98 (and $x62 $x80)))
 (let (($x99 (=> $x98 $x60)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x62 $x96)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x73)))
 (let (($x77 (= input.spec-%var-l-1.2.0 ?x76)))
 (let (($x78 (=> $x62 $x77)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x57 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (bvuge ?x57 (_ bv1 32))))
 (let (($x64 (= $x62 $x63)))
 (let (($x55 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x61 (=> $x55 $x60)))
 (let (($x58 (= ?x57 (_ bv0 32))))
 (let (($x59 (= $x55 $x58)))
 (let (($x145 (and (and (and (and (and (and $x59 $x61) $x64) $x78) $x97) $x99) $x103)))
 (let (($x148 (and (and (and $x145 $x117) $x135) $x139)))
 (let (($x149 (= $x148 true)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x49 (concat ?x48 (concat ?x6 (concat ?x11 ?x5)))))
 (let (($x51 (= ?x49 input.dst.llvm-%l)))
 (let (($x52 (= $x51 true)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x29 (= (_ bv0 32) ?x32)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x25 (and $x36 $x45)))
 (let (($x14 (and $x25 $x29)))
 (let (($x21 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x21 $x14)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x28)))))))
 (let (($x44 (and $x35 $x43)))
 (let (($x17 (= $x44 true)))
 (let (($x53 (and $x17 $x52)))
 (let (($x150 (and $x53 $x149)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x151 (and $x12 $x150)))
 (let (($x153 (=> $x151 $x152)))
 (not $x153))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x158 (= false true)))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x99 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x63 $x99)))
 (let (($x137 (and $x102 $x116)))
 (let (($x138 (not $x137)))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x147 (and $x102 $x132)))
 (let (($x136 (not $x147)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x89 (concat ?x85 ?x88))))
 (let ((?x117 (bvadd ?x92 (_ bv4 32))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x120))))
 (let (($x121 (= (_ bv0 32) ?x123)))
 (let ((?x124 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x124 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x135 (=> $x102 $x134)))
 (let (($x127 (= ?x124 (_ bv0 32))))
 (let (($x130 (= $x116 $x127)))
 (let (($x131 (=> $x102 $x130)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x113))))
 (let (($x109 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x112 (=> $x102 $x109)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x144 (bvuge ?x94 (_ bv1 32))))
 (let (($x100 (= $x99 $x144)))
 (let (($x101 (=> $x63 $x100)))
 (let (($x140 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x143 (and $x63 $x80)))
 (let (($x98 (=> $x143 $x140)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x63 $x96)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x78 (= input.spec-%var-l-1.2.0 ?x77)))
 (let (($x142 (=> $x63 $x78)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x59 (_ bv1 32))))
 (let (($x141 (= $x63 $x64)))
 (let (($x57 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x62 (=> $x57 $x140)))
 (let (($x60 (= ?x59 (_ bv0 32))))
 (let (($x61 (= $x57 $x60)))
 (let (($x152 (and (and (and (and (and (and $x61 $x62) $x141) $x142) $x97) $x98) $x101)))
 (let (($x20 (and (and (and (and (and $x152 $x112) $x131) $x135) $x136) $x138)))
 (let (($x155 (= $x20 true)))
 (let ((?x10 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x32 (concat ?x25 (concat ?x26 (concat ?x48 ?x10)))))
 (let (($x53 (= ?x32 input.dst.llvm-%l)))
 (let (($x54 (= $x53 true)))
 (let ((?x29 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x46 (= (_ bv0 32) ?x29)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (and $x30 $x51)))
 (let (($x66 (and $x52 $x46)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x47 $x66)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x40 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x31)))))))
 (let (($x14 (and $x40 $x15)))
 (let (($x43 (= $x14 true)))
 (let (($x55 (and $x43 $x54)))
 (let (($x156 (and $x55 $x155)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x157 (and $x13 $x156)))
 (let (($x159 (=> $x157 $x158)))
 (not $x159))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x158 (= false true)))
 (let (($x116 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x99 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x63 $x99)))
 (let (($x137 (and $x102 $x116)))
 (let (($x138 (not $x137)))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x147 (and $x102 $x132)))
 (let (($x136 (not $x147)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x92 (concat ?x89 (concat ?x85 ?x88))))
 (let ((?x117 (bvadd ?x92 (_ bv4 32))))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x120))))
 (let (($x121 (= (_ bv0 32) ?x123)))
 (let ((?x124 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x124 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x135 (=> $x102 $x134)))
 (let (($x127 (= ?x124 (_ bv0 32))))
 (let (($x130 (= $x116 $x127)))
 (let (($x131 (=> $x102 $x130)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x113))))
 (let (($x109 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x112 (=> $x102 $x109)))
 (let (($x93 (= (_ bv0 32) ?x92)))
 (let ((?x94 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x144 (bvuge ?x94 (_ bv1 32))))
 (let (($x100 (= $x99 $x144)))
 (let (($x101 (=> $x63 $x100)))
 (let (($x140 (= false false)))
 (let (($x80 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x143 (and $x63 $x80)))
 (let (($x98 (=> $x143 $x140)))
 (let (($x95 (= ?x94 (_ bv0 32))))
 (let (($x96 (= $x80 $x95)))
 (let (($x97 (=> $x63 $x96)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x78 (= input.spec-%var-l-1.2.0 ?x77)))
 (let (($x142 (=> $x63 $x78)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x59 (_ bv1 32))))
 (let (($x141 (= $x63 $x64)))
 (let (($x57 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x62 (=> $x57 $x140)))
 (let (($x60 (= ?x59 (_ bv0 32))))
 (let (($x61 (= $x57 $x60)))
 (let (($x152 (and (and (and (and (and (and $x61 $x62) $x141) $x142) $x97) $x98) $x101)))
 (let (($x20 (and (and (and (and (and $x152 $x112) $x131) $x135) $x136) $x138)))
 (let (($x155 (= $x20 true)))
 (let ((?x10 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x48 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x32 (concat ?x25 (concat ?x26 (concat ?x48 ?x10)))))
 (let (($x53 (= ?x32 input.dst.llvm-%l)))
 (let (($x54 (= $x53 true)))
 (let ((?x29 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x46 (= (_ bv0 32) ?x29)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x52 (and $x30 $x51)))
 (let (($x66 (and $x52 $x46)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x47 $x66)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x40 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x31)))))))
 (let (($x14 (and $x40 $x15)))
 (let (($x43 (= $x14 true)))
 (let (($x55 (and $x43 $x54)))
 (let (($x156 (and $x55 $x155)))
 (let (($x13 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x157 (and $x13 $x156)))
 (let (($x159 (=> $x157 $x158)))
 (not $x159))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00008f84)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00000005
              #x8f)
       #x00000004
       #x80))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00008f84)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00008f87)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x30 (= (_ bv0 32) ?x50)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (and $x16 $x24)))
 (let (($x51 (and $x35 $x30)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x8 $x51)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x41 $x40)))))))
 (let (($x160 (and $x33 $x10)))
 (let (($x74 (= $x160 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x97 (concat ?x96 (concat ?x93 ?x83))))
 (let ((?x126 (bvadd ?x97 (_ bv4 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x118))))
 (let (($x124 (= (_ bv0 32) ?x121)))
 (let ((?x127 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x127 (_ bv1 32))))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x76 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x107 (and $x76 $x101)))
 (let (($x135 (=> $x107 $x134)))
 (let (($x130 (= ?x127 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x131 (= $x117 $x130)))
 (let (($x154 (=> $x107 $x131)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x105))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x112)))
 (let (($x115 (=> $x107 $x153)))
 (let (($x150 (= (_ bv0 32) ?x97)))
 (let ((?x143 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (bvuge ?x143 (_ bv1 32))))
 (let (($x102 (= $x101 $x152)))
 (let (($x103 (=> $x76 $x102)))
 (let (($x65 (= false false)))
 (let (($x84 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x76 $x84)))
 (let (($x100 (=> $x144 $x65)))
 (let (($x98 (= ?x143 (_ bv0 32))))
 (let (($x151 (= $x84 $x98)))
 (let (($x99 (=> $x76 $x151)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x82 (= input.spec-%var-l-1.2.0 ?x81)))
 (let (($x86 (=> $x76 $x82)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x64 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x64 (_ bv1 32))))
 (let (($x67 (= $x76 $x69)))
 (let (($x139 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x73 (=> $x139 $x65)))
 (let (($x141 (= ?x64 (_ bv0 32))))
 (let (($x148 (= $x139 $x141)))
 (let (($x138 (and (and (and (and (and (and $x148 $x73) $x67) $x86) $x99) $x100) $x103)))
 (let (($x156 (and (and (and $x138 $x115) $x154) $x135)))
 (let (($x157 (= $x156 true)))
 (let ((?x32 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x25 (concat ?x44 (concat ?x56 (concat ?x6 ?x32)))))
 (let (($x66 (= input.dst.llvm-%l ?x25)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x15 (and $x21 $x66)))
 (let (($x61 (and (and (and $x33 true) $x10) $x15)))
 (let (($x140 (= $x61 true)))
 (let (($x158 (and $x140 $x157)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x159 (and $x27 $x158)))
 (let (($x22 (=> $x159 $x74)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x30 (= (_ bv0 32) ?x50)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (and $x16 $x24)))
 (let (($x51 (and $x35 $x30)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x8 $x51)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x41 $x40)))))))
 (let (($x160 (and $x33 $x10)))
 (let (($x74 (= $x160 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x97 (concat ?x96 (concat ?x93 ?x83))))
 (let ((?x126 (bvadd ?x97 (_ bv4 32))))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x118))))
 (let (($x124 (= (_ bv0 32) ?x121)))
 (let ((?x127 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x127 (_ bv1 32))))
 (let (($x132 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x134 (= $x132 $x133)))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x76 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x107 (and $x76 $x101)))
 (let (($x135 (=> $x107 $x134)))
 (let (($x130 (= ?x127 (_ bv0 32))))
 (let (($x117 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x131 (= $x117 $x130)))
 (let (($x154 (=> $x107 $x131)))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv1 32))) (select input.dst.llvm-mem ?x97))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x97 (_ bv2 32))) ?x105))))
 (let (($x153 (= input.spec-%var-l-1.2.1.2.0 ?x112)))
 (let (($x115 (=> $x107 $x153)))
 (let (($x150 (= (_ bv0 32) ?x97)))
 (let ((?x143 (ite $x150 (_ bv0 32) (_ bv1 32))))
 (let (($x152 (bvuge ?x143 (_ bv1 32))))
 (let (($x102 (= $x101 $x152)))
 (let (($x103 (=> $x76 $x102)))
 (let (($x65 (= false false)))
 (let (($x84 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x76 $x84)))
 (let (($x100 (=> $x144 $x65)))
 (let (($x98 (= ?x143 (_ bv0 32))))
 (let (($x151 (= $x84 $x98)))
 (let (($x99 (=> $x76 $x151)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x82 (= input.spec-%var-l-1.2.0 ?x81)))
 (let (($x86 (=> $x76 $x82)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x64 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x64 (_ bv1 32))))
 (let (($x67 (= $x76 $x69)))
 (let (($x139 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x73 (=> $x139 $x65)))
 (let (($x141 (= ?x64 (_ bv0 32))))
 (let (($x148 (= $x139 $x141)))
 (let (($x138 (and (and (and (and (and (and $x148 $x73) $x67) $x86) $x99) $x100) $x103)))
 (let (($x156 (and (and (and $x138 $x115) $x154) $x135)))
 (let (($x157 (= $x156 true)))
 (let ((?x32 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x25 (concat ?x44 (concat ?x56 (concat ?x6 ?x32)))))
 (let (($x66 (= input.dst.llvm-%l ?x25)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x15 (and $x21 $x66)))
 (let (($x61 (and (and (and $x33 true) $x10) $x15)))
 (let (($x140 (= $x61 true)))
 (let (($x158 (and $x140 $x157)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x159 (and $x27 $x158)))
 (let (($x22 (=> $x159 $x74)))
 (not $x22)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x72 (= $x148 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x150 (concat ?x97 (concat ?x87 ?x90))))
 (let ((?x20 (bvadd ?x150 (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x125))))
 (let (($x118 (= (_ bv0 32) ?x122)))
 (let ((?x120 (ite $x118 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x120 (_ bv1 32))))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x154 (= $x130 $x131)))
 (let (($x137 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x67 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (and $x67 $x137)))
 (let (($x155 (=> $x103 $x154)))
 (let (($x121 (= ?x120 (_ bv0 32))))
 (let (($x115 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x115 $x121)))
 (let (($x127 (=> $x103 $x124)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x109))))
 (let (($x111 (= input.spec-%var-l-1.2.1.2.0 ?x105)))
 (let (($x112 (=> $x103 $x111)))
 (let (($x143 (= (_ bv0 32) ?x150)))
 (let ((?x98 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x98 (_ bv1 32))))
 (let (($x152 (= $x137 $x101)))
 (let (($x102 (=> $x67 $x152)))
 (let (($x76 (= false false)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x67 $x85)))
 (let (($x100 (=> $x144 $x76)))
 (let (($x151 (= ?x98 (_ bv0 32))))
 (let (($x99 (= $x85 $x151)))
 (let (($x23 (=> $x67 $x99)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x136 (= input.spec-%var-l-1.2.0 ?x86)))
 (let (($x89 (=> $x67 $x136)))
 (let ((?x65 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x65 (_ bv1 32))))
 (let (($x71 (= $x67 $x147)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x69 (=> $x141 $x76)))
 (let (($x73 (= ?x65 (_ bv0 32))))
 (let (($x7 (= $x141 $x73)))
 (let (($x157 (and (and (and (and (and (and $x7 $x69) $x71) $x89) $x23) $x100) $x102)))
 (let (($x160 (and (and (and $x157 $x112) $x127) $x155)))
 (let (($x74 (= $x160 true)))
 (let ((?x44 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x25 (concat ?x32 (concat ?x55 ?x44)))))
 (let (($x15 (= input.dst.llvm-%l ?x66)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x61 (and $x21 $x15)))
 (let ((?x30 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x30)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x31 $x35)))
 (let (($x10 (and $x50 $x51)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x43 $x10)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x59)))))))
 (let (($x139 (and (and (and $x16 true) $x60) $x61)))
 (let (($x63 (= $x139 true)))
 (let (($x22 (and $x63 $x74)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x9 (and $x27 $x22)))
 (let (($x19 (=> $x9 $x72)))
 (not $x19))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x72 (= $x148 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x150 (concat ?x97 (concat ?x87 ?x90))))
 (let ((?x20 (bvadd ?x150 (_ bv4 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x125))))
 (let (($x118 (= (_ bv0 32) ?x122)))
 (let ((?x120 (ite $x118 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x120 (_ bv1 32))))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x154 (= $x130 $x131)))
 (let (($x137 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x67 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (and $x67 $x137)))
 (let (($x155 (=> $x103 $x154)))
 (let (($x121 (= ?x120 (_ bv0 32))))
 (let (($x115 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x115 $x121)))
 (let (($x127 (=> $x103 $x124)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv1 32))) (select input.dst.llvm-mem ?x150))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x150 (_ bv2 32))) ?x109))))
 (let (($x111 (= input.spec-%var-l-1.2.1.2.0 ?x105)))
 (let (($x112 (=> $x103 $x111)))
 (let (($x143 (= (_ bv0 32) ?x150)))
 (let ((?x98 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x98 (_ bv1 32))))
 (let (($x152 (= $x137 $x101)))
 (let (($x102 (=> $x67 $x152)))
 (let (($x76 (= false false)))
 (let (($x85 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x67 $x85)))
 (let (($x100 (=> $x144 $x76)))
 (let (($x151 (= ?x98 (_ bv0 32))))
 (let (($x99 (= $x85 $x151)))
 (let (($x23 (=> $x67 $x99)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x136 (= input.spec-%var-l-1.2.0 ?x86)))
 (let (($x89 (=> $x67 $x136)))
 (let ((?x65 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x65 (_ bv1 32))))
 (let (($x71 (= $x67 $x147)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x69 (=> $x141 $x76)))
 (let (($x73 (= ?x65 (_ bv0 32))))
 (let (($x7 (= $x141 $x73)))
 (let (($x157 (and (and (and (and (and (and $x7 $x69) $x71) $x89) $x23) $x100) $x102)))
 (let (($x160 (and (and (and $x157 $x112) $x127) $x155)))
 (let (($x74 (= $x160 true)))
 (let ((?x44 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x25 (concat ?x32 (concat ?x55 ?x44)))))
 (let (($x15 (= input.dst.llvm-%l ?x66)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x61 (and $x21 $x15)))
 (let ((?x30 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x30)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x24)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x31 $x35)))
 (let (($x10 (and $x50 $x51)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x43 $x10)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x59)))))))
 (let (($x139 (and (and (and $x16 true) $x60) $x61)))
 (let (($x63 (= $x139 true)))
 (let (($x22 (and $x63 $x74)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x9 (and $x27 $x22)))
 (let (($x19 (=> $x9 $x72)))
 (not $x19))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xff)
              #xffff7ff9
              #x7f)
       #xffff7ff8
       #xf8))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffff7ff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffff7ffb)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x7 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x162 (= $x7 true)))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x156 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x71 $x156)))
 (let (($x154 (and $x102 $x112)))
 (let (($x155 (not $x154)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (and $x102 $x121)))
 (let (($x131 (not $x130)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x92 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x150 (concat ?x96 ?x92))))
 (let ((?x158 (bvadd ?x143 (_ bv4 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x128))))
 (let (($x125 (= (_ bv0 32) ?x116)))
 (let ((?x146 (ite $x125 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x146 (_ bv1 32))))
 (let (($x127 (= $x121 $x124)))
 (let (($x159 (=> $x102 $x127)))
 (let (($x122 (= ?x146 (_ bv0 32))))
 (let (($x118 (= $x112 $x122)))
 (let (($x120 (=> $x102 $x118)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x114))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.0 ?x109)))
 (let (($x105 (=> $x102 $x110)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x151 (_ bv1 32))))
 (let (($x101 (= $x156 $x137)))
 (let (($x152 (=> $x71 $x101)))
 (let (($x67 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x71 $x91)))
 (let (($x100 (=> $x144 $x67)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x71 $x23)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x134 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x84 (=> $x71 $x134)))
 (let ((?x76 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x76 (_ bv1 32))))
 (let (($x79 (= $x71 $x133)))
 (let (($x73 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x147 (=> $x73 $x67)))
 (let (($x69 (= ?x76 (_ bv0 32))))
 (let (($x132 (= $x73 $x69)))
 (let (($x19 (and (and (and (and (and (and $x132 $x147) $x79) $x84) $x135) $x100) $x152)))
 (let (($x46 (and (and (and (and (and $x19 $x105) $x120) $x159) $x131) $x155)))
 (let (($x48 (= $x46 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x66 (concat ?x44 (concat ?x6 ?x25)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x21 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x57 $x60)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x14)))))))
 (let (($x141 (and (and (and $x31 true) $x62) $x139)))
 (let (($x148 (= $x141 true)))
 (let (($x17 (and $x148 $x48)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x161 (and $x27 $x17)))
 (let (($x163 (=> $x161 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x7 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x162 (= $x7 true)))
 (let (($x112 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x156 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x102 (and $x71 $x156)))
 (let (($x154 (and $x102 $x112)))
 (let (($x155 (not $x154)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (and $x102 $x121)))
 (let (($x131 (not $x130)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x92 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x150 (concat ?x96 ?x92))))
 (let ((?x158 (bvadd ?x143 (_ bv4 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x128))))
 (let (($x125 (= (_ bv0 32) ?x116)))
 (let ((?x146 (ite $x125 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x146 (_ bv1 32))))
 (let (($x127 (= $x121 $x124)))
 (let (($x159 (=> $x102 $x127)))
 (let (($x122 (= ?x146 (_ bv0 32))))
 (let (($x118 (= $x112 $x122)))
 (let (($x120 (=> $x102 $x118)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x114))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.0 ?x109)))
 (let (($x105 (=> $x102 $x110)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x151 (_ bv1 32))))
 (let (($x101 (= $x156 $x137)))
 (let (($x152 (=> $x71 $x101)))
 (let (($x67 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x144 (and $x71 $x91)))
 (let (($x100 (=> $x144 $x67)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x71 $x23)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x68)))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x149)))
 (let (($x134 (= input.spec-%var-l-1.2.0 ?x89)))
 (let (($x84 (=> $x71 $x134)))
 (let ((?x76 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x76 (_ bv1 32))))
 (let (($x79 (= $x71 $x133)))
 (let (($x73 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x147 (=> $x73 $x67)))
 (let (($x69 (= ?x76 (_ bv0 32))))
 (let (($x132 (= $x73 $x69)))
 (let (($x19 (and (and (and (and (and (and $x132 $x147) $x79) $x84) $x135) $x100) $x152)))
 (let (($x46 (and (and (and (and (and $x19 $x105) $x120) $x159) $x131) $x155)))
 (let (($x48 (= $x46 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x66 (concat ?x44 (concat ?x6 ?x25)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x21 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x21 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x57 $x60)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x14)))))))
 (let (($x141 (and (and (and $x31 true) $x62) $x139)))
 (let (($x148 (= $x141 true)))
 (let (($x17 (and $x148 $x48)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x161 (and $x27 $x17)))
 (let (($x163 (=> $x161 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4096 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv536870913 32) (_ bv16 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv536870915 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xbf401870)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x40)
                                #xbf401877
                                #x00)
                         #xbf401875
                         #x00)
                  #xbf401873
                  #xbf)))
(let ((a!2 (store (store (store (store a!1 #x00000005 #x00) #xbf401874 #x00)
                         #xbf401871
                         #x18)
                  #xbf401876
                  #x00)))
  (store (store (store (store a!2 #x00000006 #x00) #x00000007 #x91)
                #x00000004
                #x00)
         #xbf401870
         #x70))))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xbfbfbfbf)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xbf401870)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xbf401870)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xbf401870)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xbf401873)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x17 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x161 (= (_ bv0 4) ?x17)))
 (let (($x162 (= $x161 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x90 (concat ?x87 ?x96))))
 (let ((?x105 (bvadd ?x143 (_ bv4 32))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x158))))
 (let (($x153 (= (_ bv0 32) ?x20)))
 (let ((?x128 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x128 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x118 (= $x146 $x122)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x101 (and $x133 $x100)))
 (let (($x120 (=> $x101 $x118)))
 (let (($x119 (= ?x128 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x116 (= $x110 $x119)))
 (let (($x125 (=> $x101 $x116)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x106))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x103)))
 (let (($x108 (=> $x101 $x114)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x151 (_ bv1 32))))
 (let (($x156 (= $x100 $x72)))
 (let (($x137 (=> $x133 $x156)))
 (let (($x160 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x133 $x91)))
 (let (($x144 (=> $x9 $x160)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x133 $x23)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x134)))
 (let (($x22 (=> $x133 $x84)))
 (let (($x69 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x132 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x79 (bvuge ?x132 (_ bv1 32))))
 (let (($x74 (= $x133 $x79)))
 (let (($x76 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x71 (=> $x76 $x160)))
 (let (($x67 (= ?x132 (_ bv0 32))))
 (let (($x147 (= $x76 $x67)))
 (let (($x12 (and (and (and (and (and (and $x147 $x71) $x74) $x22) $x135) $x144) $x137)))
 (let (($x29 (and (and (and $x12 $x108) $x125) $x120)))
 (let (($x154 (= $x29 true)))
 (let ((?x54 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x56 (concat ?x6 (concat ?x53 ?x54)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x26 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x43 $x60)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x57 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x16)))))))
 (let (($x65 (and (and (and $x57 true) $x62) $x139)))
 (let (($x73 (= $x65 true)))
 (let (($x155 (and $x73 $x154)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x46 (and $x82 $x155)))
 (let (($x163 (=> $x46 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x17 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x161 (= (_ bv0 4) ?x17)))
 (let (($x162 (= $x161 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x143 (concat ?x90 (concat ?x87 ?x96))))
 (let ((?x105 (bvadd ?x143 (_ bv4 32))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x158))))
 (let (($x153 (= (_ bv0 32) ?x20)))
 (let ((?x128 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x128 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x118 (= $x146 $x122)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x101 (and $x133 $x100)))
 (let (($x120 (=> $x101 $x118)))
 (let (($x119 (= ?x128 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x116 (= $x110 $x119)))
 (let (($x125 (=> $x101 $x116)))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv1 32))) (select input.dst.llvm-mem ?x143))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x143 (_ bv2 32))) ?x106))))
 (let (($x114 (= input.spec-%var-l-1.2.1.2.0 ?x103)))
 (let (($x108 (=> $x101 $x114)))
 (let (($x98 (= (_ bv0 32) ?x143)))
 (let ((?x151 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x151 (_ bv1 32))))
 (let (($x156 (= $x100 $x72)))
 (let (($x137 (=> $x133 $x156)))
 (let (($x160 (= false false)))
 (let (($x91 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x133 $x91)))
 (let (($x144 (=> $x9 $x160)))
 (let (($x99 (= ?x151 (_ bv0 32))))
 (let (($x23 (= $x91 $x99)))
 (let (($x135 (=> $x133 $x23)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x134)))
 (let (($x22 (=> $x133 $x84)))
 (let (($x69 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x132 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x79 (bvuge ?x132 (_ bv1 32))))
 (let (($x74 (= $x133 $x79)))
 (let (($x76 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x71 (=> $x76 $x160)))
 (let (($x67 (= ?x132 (_ bv0 32))))
 (let (($x147 (= $x76 $x67)))
 (let (($x12 (and (and (and (and (and (and $x147 $x71) $x74) $x22) $x135) $x144) $x137)))
 (let (($x29 (and (and (and $x12 $x108) $x125) $x120)))
 (let (($x154 (= $x29 true)))
 (let ((?x54 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x15 (concat ?x56 (concat ?x6 (concat ?x53 ?x54)))))
 (let (($x61 (= input.dst.llvm-%l ?x15)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x139 (and $x26 $x61)))
 (let ((?x51 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x51)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x37 $x50)))
 (let (($x60 (and $x30 $x10)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x43 $x60)))
 (let (($x16 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x57 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x16)))))))
 (let (($x65 (and (and (and $x57 true) $x62) $x139)))
 (let (($x73 (= $x65 true)))
 (let (($x155 (and $x73 $x154)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x46 (and $x82 $x155)))
 (let (($x163 (=> $x46 $x162)))
 (not $x163))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000001000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001011) #b00000000)
 (default #b00001000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00008e0c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #x00008e0d
                     #x8e)
              #x00008e0e
              #x10)
       #x00008e0c
       #x08))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00108e08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00008e0f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00008e0c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x41 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x36 (= (_ bv0 4) ?x41)))
 (let (($x165 (= $x36 true)))
 (let (($x108 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x137 (and $x74 $x159)))
 (let (($x118 (and $x137 $x108)))
 (let (($x120 (not $x118)))
 (let (($x119 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x146 (and $x137 $x119)))
 (let (($x122 (not $x146)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x143 (concat ?x83 ?x150))))
 (let ((?x130 (bvadd ?x98 (_ bv4 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x123))))
 (let (($x158 (= (_ bv0 32) ?x13)))
 (let ((?x129 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x129 (_ bv1 32))))
 (let (($x125 (= $x119 $x116)))
 (let (($x131 (=> $x137 $x125)))
 (let (($x20 (= ?x129 (_ bv0 32))))
 (let (($x153 (= $x108 $x20)))
 (let (($x128 (=> $x137 $x153)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x104))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x103 (=> $x137 $x113)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x99 (_ bv1 32))))
 (let (($x72 (= $x159 $x100)))
 (let (($x156 (=> $x74 $x72)))
 (let (($x133 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x74 $x95)))
 (let (($x144 (=> $x9 $x133)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x74 $x135)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x124 (= input.spec-%var-l-1.2.0 ?x22)))
 (let (($x85 (=> $x74 $x124)))
 (let (($x147 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x160 (_ bv1 32))))
 (let (($x81 (= $x74 $x121)))
 (let (($x67 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x79 (=> $x67 $x133)))
 (let (($x71 (= ?x160 (_ bv0 32))))
 (let (($x80 (= $x67 $x71)))
 (let (($x17 (and (and (and (and (and (and $x80 $x79) $x81) $x85) $x127) $x144) $x156)))
 (let (($x86 (and (and (and (and (and $x17 $x103) $x128) $x131) $x122) $x120)))
 (let (($x27 (= $x86 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x15 (concat ?x54 (concat ?x39 ?x56)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x26 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x33 $x62)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x31)))))))
 (let (($x76 (and (and (and $x37 true) $x148) $x65)))
 (let (($x69 (= $x76 true)))
 (let (($x18 (and $x69 $x27)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x82 $x18)))
 (let (($x166 (=> $x42 $x165)))
 (not $x166))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x41 ((_ extract 3 0) input.dst.llvm-%l)))
 (let (($x36 (= (_ bv0 4) ?x41)))
 (let (($x165 (= $x36 true)))
 (let (($x108 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x137 (and $x74 $x159)))
 (let (($x118 (and $x137 $x108)))
 (let (($x120 (not $x118)))
 (let (($x119 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x146 (and $x137 $x119)))
 (let (($x122 (not $x146)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x83 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x143 (concat ?x83 ?x150))))
 (let ((?x130 (bvadd ?x98 (_ bv4 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x123))))
 (let (($x158 (= (_ bv0 32) ?x13)))
 (let ((?x129 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x129 (_ bv1 32))))
 (let (($x125 (= $x119 $x116)))
 (let (($x131 (=> $x137 $x125)))
 (let (($x20 (= ?x129 (_ bv0 32))))
 (let (($x153 (= $x108 $x20)))
 (let (($x128 (=> $x137 $x153)))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x104))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.0 ?x106)))
 (let (($x103 (=> $x137 $x113)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x99 (_ bv1 32))))
 (let (($x72 (= $x159 $x100)))
 (let (($x156 (=> $x74 $x72)))
 (let (($x133 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x9 (and $x74 $x95)))
 (let (($x144 (=> $x9 $x133)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x74 $x135)))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x70)))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x68)))
 (let (($x124 (= input.spec-%var-l-1.2.0 ?x22)))
 (let (($x85 (=> $x74 $x124)))
 (let (($x147 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x160 (_ bv1 32))))
 (let (($x81 (= $x74 $x121)))
 (let (($x67 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x79 (=> $x67 $x133)))
 (let (($x71 (= ?x160 (_ bv0 32))))
 (let (($x80 (= $x67 $x71)))
 (let (($x17 (and (and (and (and (and (and $x80 $x79) $x81) $x85) $x127) $x144) $x156)))
 (let (($x86 (and (and (and (and (and $x17 $x103) $x128) $x131) $x122) $x120)))
 (let (($x27 (= $x86 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x15 (concat ?x54 (concat ?x39 ?x56)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x26 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x26 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x33 $x62)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x31)))))))
 (let (($x76 (and (and (and $x37 true) $x148) $x65)))
 (let (($x69 (= $x76 true)))
 (let (($x18 (and $x69 $x27)))
 (let (($x82 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x82 $x18)))
 (let (($x166 (=> $x42 $x165)))
 (not $x166))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000001000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b10000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b10000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000100) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000101) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000110) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000111) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000000011) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001000) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001001) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001010) #b00000000)
 (= (@fun_43 #b00000000000000000000000000001011) #b00000000)
 (default #b00001000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000750c)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x0000750d
              #x7d)
       #x0000750c
       #x08))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00007d08)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000750f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000750c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv8 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x18 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x42 (= (_ bv0 3) ?x18)))
 (let (($x52 (= $x42 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x96 (concat ?x87 ?x83))))
 (let ((?x103 (bvadd ?x98 (_ bv4 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x130))))
 (let (($x109 (= (_ bv0 32) ?x105)))
 (let ((?x123 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x123 (_ bv1 32))))
 (let (($x129 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x153 (= $x129 $x20)))
 (let (($x144 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x121 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x72 (and $x121 $x144)))
 (let (($x128 (=> $x72 $x153)))
 (let (($x126 (= ?x123 (_ bv0 32))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x13 (= $x113 $x126)))
 (let (($x158 (=> $x72 $x13)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x157))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.0 ?x101)))
 (let (($x102 (=> $x72 $x104)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x99 (_ bv1 32))))
 (let (($x159 (= $x144 $x48)))
 (let (($x100 (=> $x121 $x159)))
 (let (($x29 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x46 (and $x121 $x95)))
 (let (($x9 (=> $x46 $x29)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x121 $x135)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x75)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x85 (= input.spec-%var-l-1.2.0 ?x124)))
 (let (($x155 (=> $x121 $x85)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x80 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x80 (_ bv1 32))))
 (let (($x154 (= $x121 $x81)))
 (let (($x160 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x74 (=> $x160 $x29)))
 (let (($x133 (= ?x80 (_ bv0 32))))
 (let (($x79 (= $x160 $x133)))
 (let (($x163 (and (and (and (and (and (and $x79 $x74) $x154) $x155) $x127) $x9) $x100)))
 (let (($x164 (and (and (and $x163 $x102) $x158) $x128)))
 (let (($x118 (= $x164 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x55 (concat ?x39 (concat ?x66 ?x25)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x45 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x45 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x43 $x62)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x57)))))))
 (let (($x132 (and (and (and $x33 true) $x148) $x65)))
 (let (($x67 (= $x132 true)))
 (let (($x120 (and $x67 $x118)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x86 (and $x89 $x120)))
 (let (($x41 (=> $x86 $x52)))
 (not $x41))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x18 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x42 (= (_ bv0 3) ?x18)))
 (let (($x52 (= $x42 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x96 (concat ?x87 ?x83))))
 (let ((?x103 (bvadd ?x98 (_ bv4 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv1 32))) (select input.dst.llvm-mem ?x103))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x103 (_ bv2 32))) ?x130))))
 (let (($x109 (= (_ bv0 32) ?x105)))
 (let ((?x123 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x123 (_ bv1 32))))
 (let (($x129 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x153 (= $x129 $x20)))
 (let (($x144 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x121 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x72 (and $x121 $x144)))
 (let (($x128 (=> $x72 $x153)))
 (let (($x126 (= ?x123 (_ bv0 32))))
 (let (($x113 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x13 (= $x113 $x126)))
 (let (($x158 (=> $x72 $x13)))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x157))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.0 ?x101)))
 (let (($x102 (=> $x72 $x104)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x99 (_ bv1 32))))
 (let (($x159 (= $x144 $x48)))
 (let (($x100 (=> $x121 $x159)))
 (let (($x29 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x46 (and $x121 $x95)))
 (let (($x9 (=> $x46 $x29)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x121 $x135)))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x70 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x75)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x70)))
 (let (($x85 (= input.spec-%var-l-1.2.0 ?x124)))
 (let (($x155 (=> $x121 $x85)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x80 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x81 (bvuge ?x80 (_ bv1 32))))
 (let (($x154 (= $x121 $x81)))
 (let (($x160 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x74 (=> $x160 $x29)))
 (let (($x133 (= ?x80 (_ bv0 32))))
 (let (($x79 (= $x160 $x133)))
 (let (($x163 (and (and (and (and (and (and $x79 $x74) $x154) $x155) $x127) $x9) $x100)))
 (let (($x164 (and (and (and $x163 $x102) $x158) $x128)))
 (let (($x118 (= $x164 true)))
 (let ((?x25 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x55 (concat ?x39 (concat ?x66 ?x25)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x45 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x45 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x43 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x43 $x62)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x33 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x57)))))))
 (let (($x132 (and (and (and $x33 true) $x148) $x65)))
 (let (($x67 (= $x132 true)))
 (let (($x120 (and $x67 $x118)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x86 (and $x89 $x120)))
 (let (($x41 (=> $x86 $x52)))
 (not $x41))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x41 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x36 (= $x41 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x87 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x90 (concat ?x93 ?x87))))
 (let ((?x102 (bvadd ?x98 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv1 32))) (select input.dst.llvm-mem ?x102))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv2 32))) ?x103))))
 (let (($x161 (= (_ bv0 32) ?x108)))
 (let ((?x130 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x130 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x13 (= $x123 $x126)))
 (let (($x9 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (and $x81 $x9)))
 (let (($x158 (=> $x159 $x13)))
 (let (($x115 (= ?x130 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x105 (= $x104 $x115)))
 (let (($x109 (=> $x159 $x105)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x152))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.0 ?x17)))
 (let (($x145 (=> $x159 $x157)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x99 (_ bv1 32))))
 (let (($x144 (= $x9 $x131)))
 (let (($x48 (=> $x81 $x144)))
 (let (($x162 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x81 $x95)))
 (let (($x46 (=> $x125 $x162)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x81 $x135)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x85)))
 (let (($x116 (=> $x81 $x155)))
 (let (($x133 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x79 (ite $x133 (_ bv0 32) (_ bv1 32))))
 (let (($x154 (bvuge ?x79 (_ bv1 32))))
 (let (($x119 (= $x81 $x154)))
 (let (($x80 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x121 (=> $x80 $x162)))
 (let (($x29 (= ?x79 (_ bv0 32))))
 (let (($x74 (= $x80 $x29)))
 (let (($x164 (and (and (and (and (and (and $x74 $x121) $x119) $x116) $x127) $x46) $x48)))
 (let (($x86 (and (and (and $x164 $x145) $x109) $x158)))
 (let (($x27 (= $x86 true)))
 (let ((?x6 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x56 (concat ?x66 (concat ?x54 ?x6)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x38 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x8 $x62)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x47)))))))
 (let (($x147 (and (and (and $x43 true) $x148) $x65)))
 (let (($x160 (= $x147 true)))
 (let (($x18 (and $x160 $x27)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x5 $x18)))
 (let (($x82 (=> $x42 $x36)))
 (not $x82)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x41 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x36 (= $x41 true)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x87 (concat ?x88 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x98 (concat ?x90 (concat ?x93 ?x87))))
 (let ((?x102 (bvadd ?x98 (_ bv4 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv1 32))) (select input.dst.llvm-mem ?x102))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x102 (_ bv2 32))) ?x103))))
 (let (($x161 (= (_ bv0 32) ?x108)))
 (let ((?x130 (ite $x161 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x130 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x13 (= $x123 $x126)))
 (let (($x9 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x159 (and $x81 $x9)))
 (let (($x158 (=> $x159 $x13)))
 (let (($x115 (= ?x130 (_ bv0 32))))
 (let (($x104 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x105 (= $x104 $x115)))
 (let (($x109 (=> $x159 $x105)))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x152))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.0 ?x17)))
 (let (($x145 (=> $x159 $x157)))
 (let (($x151 (= (_ bv0 32) ?x98)))
 (let ((?x99 (ite $x151 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x99 (_ bv1 32))))
 (let (($x144 (= $x9 $x131)))
 (let (($x48 (=> $x81 $x144)))
 (let (($x162 (= false false)))
 (let (($x95 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x81 $x95)))
 (let (($x46 (=> $x125 $x162)))
 (let (($x23 (= ?x99 (_ bv0 32))))
 (let (($x135 (= $x95 $x23)))
 (let (($x127 (=> $x81 $x135)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x85)))
 (let (($x116 (=> $x81 $x155)))
 (let (($x133 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x79 (ite $x133 (_ bv0 32) (_ bv1 32))))
 (let (($x154 (bvuge ?x79 (_ bv1 32))))
 (let (($x119 (= $x81 $x154)))
 (let (($x80 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x121 (=> $x80 $x162)))
 (let (($x29 (= ?x79 (_ bv0 32))))
 (let (($x74 (= $x80 $x29)))
 (let (($x164 (and (and (and (and (and (and $x74 $x121) $x119) $x116) $x127) $x46) $x48)))
 (let (($x86 (and (and (and $x164 $x145) $x109) $x158)))
 (let (($x27 (= $x86 true)))
 (let ((?x6 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x56 (concat ?x66 (concat ?x54 ?x6)))))
 (let (($x139 (= input.dst.llvm-%l ?x61)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x65 (and $x38 $x139)))
 (let ((?x10 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x10)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x24 $x30)))
 (let (($x62 (and $x51 $x60)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x8 $x62)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x141 $x47)))))))
 (let (($x147 (and (and (and $x43 true) $x148) $x65)))
 (let (($x160 (= $x147 true)))
 (let (($x18 (and $x160 $x27)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x42 (and $x5 $x18)))
 (let (($x82 (=> $x42 $x36)))
 (not $x82)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var253X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var250X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var250X.0 () (_ BitVec 32))
(declare-fun input.ind-%var250X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var253X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x200 (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv4 32))))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var253X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var253X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x207 (concat ?x206 (concat ?x203 ?x201))))
 (let (($x208 (= ?x207 ?x207)))
 (let (($x178 (= (_ bv0 32) input.ind-%var253X)))
 (let ((?x179 (ite $x178 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x179 (_ bv1 32))))
 (let (($x209 (=> $x183 $x208)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var253X))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv2 32))) ?x188)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv3 32))) ?x191)))
 (let (($x195 (= ?x194 ?x194)))
 (let (($x196 (=> $x183 $x195)))
 (let (($x184 (= $x183 $x183)))
 (let (($x81 (= false false)))
 (let (($x180 (= ?x179 (_ bv0 32))))
 (let (($x182 (=> $x180 $x81)))
 (let (($x212 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x180 $x180)) $x182) $x184)))
 (let (($x214 (and (and $x212 $x196) $x209)))
 (let (($x169 (= input.ind-%var250X.2.1 input.ind-%var250X.2.1)))
 (let (($x166 (bvuge input.ind-%var250X.0 (_ bv1 32))))
 (let (($x170 (=> $x166 $x169)))
 (let (($x34 (= input.ind-%var250X.2.0 input.ind-%var250X.2.0)))
 (let (($x32 (=> $x166 $x34)))
 (let (($x167 (= $x166 $x166)))
 (let (($x26 (= input.ind-%var250X.0 (_ bv0 32))))
 (let (($x165 (=> $x26 $x81)))
 (let (($x172 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x26 $x26)) $x165)))
 (let (($x175 (and (and (and $x172 $x167) $x32) $x170)))
 (let (($x215 (and $x175 $x214)))
 (let (($x14 (not true)))
 (let (($x216 (or $x14 $x215)))
 (let (($x217 (and true $x216)))
 (let (($x218 (= $x217 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x98 (concat ?x150 ?x96))))
 (let ((?x118 (bvadd ?x151 (_ bv4 32))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x112))))
 (let (($x103 (= (_ bv0 32) ?x146)))
 (let ((?x111 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x111 (_ bv1 32))))
 (let (($x115 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x109 (= $x115 $x105)))
 (let (($x128 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x119 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x48 (and $x119 $x128)))
 (let (($x120 (=> $x48 $x109)))
 (let (($x108 (= ?x111 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x161 (= $x145 $x108)))
 (let (($x130 (=> $x48 $x161)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x12))))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.0 ?x152)))
 (let (($x17 (=> $x48 $x107)))
 (let (($x99 (= (_ bv0 32) ?x151)))
 (let ((?x23 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x23 (_ bv1 32))))
 (let (($x131 (= $x128 $x9)))
 (let (($x144 (=> $x119 $x131)))
 (let (($x94 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x119 $x94)))
 (let (($x46 (=> $x125 $x81)))
 (let (($x135 (= ?x23 (_ bv0 32))))
 (let (($x127 (= $x94 $x135)))
 (let (($x153 (=> $x119 $x127)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x20 (= input.spec-%var-l-1.2.0 ?x116)))
 (let (($x91 (=> $x119 $x20)))
 (let (($x74 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x162 (_ bv1 32))))
 (let (($x149 (= $x119 $x129)))
 (let (($x29 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x154 (=> $x29 $x81)))
 (let (($x121 (= ?x162 (_ bv0 32))))
 (let (($x122 (= $x29 $x121)))
 (let (($x27 (and (and (and (and (and (and $x122 $x154) $x149) $x91) $x153) $x46) $x144)))
 (let (($x52 (and (and (and $x27 $x17) $x130) $x120)))
 (let (($x41 (= $x52 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x61 (concat ?x6 (concat ?x15 ?x56)))))
 (let (($x65 (= input.dst.llvm-%l ?x139)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x147 (and $x38 $x65)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x60)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x35 $x51)))
 (let (($x148 (and $x10 $x62)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x63 $x148)))
 (let (($x33 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x24 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x33)))))))
 (let (($x80 (and (and (and $x24 true) $x67) $x147)))
 (let (($x133 (= $x80 true)))
 (let (($x36 (and $x133 $x41)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x82 (and $x5 $x36)))
 (let (($x219 (=> $x82 $x218)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var253X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var250X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var250X.0 () (_ BitVec 32))
(declare-fun input.ind-%var250X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var253X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x201 (concat ?x200 (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv4 32))))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var253X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var253X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x207 (concat ?x206 (concat ?x203 ?x201))))
 (let (($x208 (= ?x207 ?x207)))
 (let (($x178 (= (_ bv0 32) input.ind-%var253X)))
 (let ((?x179 (ite $x178 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x179 (_ bv1 32))))
 (let (($x209 (=> $x183 $x208)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var253X))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv2 32))) ?x188)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var253X (_ bv3 32))) ?x191)))
 (let (($x195 (= ?x194 ?x194)))
 (let (($x196 (=> $x183 $x195)))
 (let (($x184 (= $x183 $x183)))
 (let (($x81 (= false false)))
 (let (($x180 (= ?x179 (_ bv0 32))))
 (let (($x182 (=> $x180 $x81)))
 (let (($x212 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x180 $x180)) $x182) $x184)))
 (let (($x214 (and (and $x212 $x196) $x209)))
 (let (($x169 (= input.ind-%var250X.2.1 input.ind-%var250X.2.1)))
 (let (($x166 (bvuge input.ind-%var250X.0 (_ bv1 32))))
 (let (($x170 (=> $x166 $x169)))
 (let (($x34 (= input.ind-%var250X.2.0 input.ind-%var250X.2.0)))
 (let (($x32 (=> $x166 $x34)))
 (let (($x167 (= $x166 $x166)))
 (let (($x26 (= input.ind-%var250X.0 (_ bv0 32))))
 (let (($x165 (=> $x26 $x81)))
 (let (($x172 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x26 $x26)) $x165)))
 (let (($x175 (and (and (and $x172 $x167) $x32) $x170)))
 (let (($x215 (and $x175 $x214)))
 (let (($x14 (not true)))
 (let (($x216 (or $x14 $x215)))
 (let (($x217 (and true $x216)))
 (let (($x218 (= $x217 true)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x96 (concat ?x93 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x98 (concat ?x150 ?x96))))
 (let ((?x118 (bvadd ?x151 (_ bv4 32))))
 (let ((?x112 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv1 32))) (select input.dst.llvm-mem ?x118))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x118 (_ bv2 32))) ?x112))))
 (let (($x103 (= (_ bv0 32) ?x146)))
 (let ((?x111 (ite $x103 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x111 (_ bv1 32))))
 (let (($x115 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x109 (= $x115 $x105)))
 (let (($x128 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x119 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x48 (and $x119 $x128)))
 (let (($x120 (=> $x48 $x109)))
 (let (($x108 (= ?x111 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x161 (= $x145 $x108)))
 (let (($x130 (=> $x48 $x161)))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x12))))
 (let (($x107 (= input.spec-%var-l-1.2.1.2.0 ?x152)))
 (let (($x17 (=> $x48 $x107)))
 (let (($x99 (= (_ bv0 32) ?x151)))
 (let ((?x23 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x23 (_ bv1 32))))
 (let (($x131 (= $x128 $x9)))
 (let (($x144 (=> $x119 $x131)))
 (let (($x94 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x119 $x94)))
 (let (($x46 (=> $x125 $x81)))
 (let (($x135 (= ?x23 (_ bv0 32))))
 (let (($x127 (= $x94 $x135)))
 (let (($x153 (=> $x119 $x127)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x20 (= input.spec-%var-l-1.2.0 ?x116)))
 (let (($x91 (=> $x119 $x20)))
 (let (($x74 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x129 (bvuge ?x162 (_ bv1 32))))
 (let (($x149 (= $x119 $x129)))
 (let (($x29 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x154 (=> $x29 $x81)))
 (let (($x121 (= ?x162 (_ bv0 32))))
 (let (($x122 (= $x29 $x121)))
 (let (($x27 (and (and (and (and (and (and $x122 $x154) $x149) $x91) $x153) $x46) $x144)))
 (let (($x52 (and (and (and $x27 $x17) $x130) $x120)))
 (let (($x41 (= $x52 true)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x61 (concat ?x6 (concat ?x15 ?x56)))))
 (let (($x65 (= input.dst.llvm-%l ?x139)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x147 (and $x38 $x65)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x60)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x51 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x35 $x51)))
 (let (($x148 (and $x10 $x62)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x63 $x148)))
 (let (($x33 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x24 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x33)))))))
 (let (($x80 (and (and (and $x24 true) $x67) $x147)))
 (let (($x133 (= $x80 true)))
 (let (($x36 (and $x133 $x41)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x82 (and $x5 $x36)))
 (let (($x219 (=> $x82 $x218)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var253X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.ind-%var250X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var250X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var250X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x1b497f70)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #xd4000007
                     #xd4)
              #xd4000003
              #xd4)
       #xd4000007
       #xd4))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd4000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd4000000)
  (define-fun input.ind-%var250X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var250X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var253X () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var250X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var297X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var294X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var294X.0 () (_ BitVec 32))
(declare-fun input.ind-%var294X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var297X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x203 (concat ?x202 (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv4 32))))))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var297X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var297X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x207 (concat ?x204 (concat ?x200 ?x203))))
 (let (($x208 (= ?x207 ?x207)))
 (let (($x210 (= (_ bv0 32) input.ind-%var297X)))
 (let ((?x182 (ite $x210 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x182 (_ bv1 32))))
 (let (($x209 (=> $x212 $x208)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var297X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv2 32))) ?x186)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv3 32))) ?x188)))
 (let (($x196 (= ?x195 ?x195)))
 (let (($x213 (=> $x212 $x196)))
 (let (($x192 (= $x212 $x212)))
 (let (($x119 (= false false)))
 (let (($x211 (= ?x182 (_ bv0 32))))
 (let (($x184 (=> $x211 $x119)))
 (let (($x215 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x211 $x211)) $x184)))
 (let (($x218 (and (and (and $x215 $x192) $x213) $x209)))
 (let (($x169 (= input.ind-%var294X.2.1 input.ind-%var294X.2.1)))
 (let (($x173 (bvuge input.ind-%var294X.0 (_ bv1 32))))
 (let (($x170 (=> $x173 $x169)))
 (let (($x32 (= input.ind-%var294X.2.0 input.ind-%var294X.2.0)))
 (let (($x174 (=> $x173 $x32)))
 (let (($x58 (= $x173 $x173)))
 (let (($x172 (= input.ind-%var294X.0 (_ bv0 32))))
 (let (($x167 (=> $x172 $x119)))
 (let (($x176 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x172 $x172)) $x167)))
 (let (($x179 (and (and (and $x176 $x58) $x174) $x170)))
 (let (($x219 (and $x179 $x218)))
 (let (($x26 (not true)))
 (let (($x220 (or $x26 $x219)))
 (let (($x124 (and true $x220)))
 (let (($x40 (= $x124 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x143 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x151 (concat ?x90 ?x143))))
 (let ((?x18 (bvadd ?x99 (_ bv4 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x106))))
 (let (($x112 (= (_ bv0 32) ?x101)))
 (let ((?x110 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x110 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (= $x108 $x161)))
 (let (($x86 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x144 (and $x149 $x86)))
 (let (($x42 (=> $x144 $x130)))
 (let (($x146 (= ?x110 (_ bv0 32))))
 (let (($x17 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x103 (= $x17 $x146)))
 (let (($x111 (=> $x144 $x103)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x163))))
 (let (($x72 (= input.spec-%var-l-1.2.1.2.0 ?x12)))
 (let (($x152 (=> $x144 $x72)))
 (let (($x23 (= (_ bv0 32) ?x99)))
 (let ((?x135 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x135 (_ bv1 32))))
 (let (($x9 (= $x86 $x128)))
 (let (($x131 (=> $x149 $x9)))
 (let (($x92 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x149 $x92)))
 (let (($x46 (=> $x125 $x119)))
 (let (($x127 (= ?x135 (_ bv0 32))))
 (let (($x153 (= $x92 $x127)))
 (let (($x158 (=> $x149 $x153)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x13 (= input.spec-%var-l-1.2.0 ?x91)))
 (let (($x95 (=> $x149 $x13)))
 (let (($x122 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x81 (ite $x122 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x81 (_ bv1 32))))
 (let (($x70 (= $x149 $x126)))
 (let (($x121 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x129 (=> $x121 $x119)))
 (let (($x154 (= ?x81 (_ bv0 32))))
 (let (($x123 (= $x121 $x154)))
 (let (($x41 (and (and (and (and (and (and $x123 $x129) $x70) $x95) $x158) $x46) $x131)))
 (let (($x14 (and (and (and $x41 $x152) $x111) $x42)))
 (let (($x68 (= $x14 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x139 (concat ?x56 (concat ?x54 ?x61)))))
 (let (($x147 (= input.dst.llvm-%l ?x65)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x80 (and $x38 $x147)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x62)))
 (let ((?x51 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x51)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x50 $x10)))
 (let (($x67 (and $x60 $x148)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x16 $x67)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x132)))))))
 (let (($x29 (and (and (and $x35 true) $x71) $x80)))
 (let (($x74 (= $x29 true)))
 (let (($x89 (and $x74 $x68)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x59 (and $x5 $x89)))
 (let (($x31 (=> $x59 $x40)))
 (not $x31))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var297X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var294X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var294X.0 () (_ BitVec 32))
(declare-fun input.ind-%var294X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var297X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x203 (concat ?x202 (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv4 32))))))
 (let ((?x200 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var297X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var297X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x207 (concat ?x204 (concat ?x200 ?x203))))
 (let (($x208 (= ?x207 ?x207)))
 (let (($x210 (= (_ bv0 32) input.ind-%var297X)))
 (let ((?x182 (ite $x210 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x182 (_ bv1 32))))
 (let (($x209 (=> $x212 $x208)))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var297X))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv2 32))) ?x186)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var297X (_ bv3 32))) ?x188)))
 (let (($x196 (= ?x195 ?x195)))
 (let (($x213 (=> $x212 $x196)))
 (let (($x192 (= $x212 $x212)))
 (let (($x119 (= false false)))
 (let (($x211 (= ?x182 (_ bv0 32))))
 (let (($x184 (=> $x211 $x119)))
 (let (($x215 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x211 $x211)) $x184)))
 (let (($x218 (and (and (and $x215 $x192) $x213) $x209)))
 (let (($x169 (= input.ind-%var294X.2.1 input.ind-%var294X.2.1)))
 (let (($x173 (bvuge input.ind-%var294X.0 (_ bv1 32))))
 (let (($x170 (=> $x173 $x169)))
 (let (($x32 (= input.ind-%var294X.2.0 input.ind-%var294X.2.0)))
 (let (($x174 (=> $x173 $x32)))
 (let (($x58 (= $x173 $x173)))
 (let (($x172 (= input.ind-%var294X.0 (_ bv0 32))))
 (let (($x167 (=> $x172 $x119)))
 (let (($x176 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x172 $x172)) $x167)))
 (let (($x179 (and (and (and $x176 $x58) $x174) $x170)))
 (let (($x219 (and $x179 $x218)))
 (let (($x26 (not true)))
 (let (($x220 (or $x26 $x219)))
 (let (($x124 (and true $x220)))
 (let (($x40 (= $x124 true)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x143 (concat ?x150 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x151 (concat ?x90 ?x143))))
 (let ((?x18 (bvadd ?x99 (_ bv4 32))))
 (let ((?x106 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv1 32))) (select input.dst.llvm-mem ?x18))))
 (let ((?x101 (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x18 (_ bv2 32))) ?x106))))
 (let (($x112 (= (_ bv0 32) ?x101)))
 (let ((?x110 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x110 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x130 (= $x108 $x161)))
 (let (($x86 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x144 (and $x149 $x86)))
 (let (($x42 (=> $x144 $x130)))
 (let (($x146 (= ?x110 (_ bv0 32))))
 (let (($x17 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x103 (= $x17 $x146)))
 (let (($x111 (=> $x144 $x103)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x163))))
 (let (($x72 (= input.spec-%var-l-1.2.1.2.0 ?x12)))
 (let (($x152 (=> $x144 $x72)))
 (let (($x23 (= (_ bv0 32) ?x99)))
 (let ((?x135 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x135 (_ bv1 32))))
 (let (($x9 (= $x86 $x128)))
 (let (($x131 (=> $x149 $x9)))
 (let (($x92 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x149 $x92)))
 (let (($x46 (=> $x125 $x119)))
 (let (($x127 (= ?x135 (_ bv0 32))))
 (let (($x153 (= $x92 $x127)))
 (let (($x158 (=> $x149 $x153)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x91 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x13 (= input.spec-%var-l-1.2.0 ?x91)))
 (let (($x95 (=> $x149 $x13)))
 (let (($x122 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x81 (ite $x122 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x81 (_ bv1 32))))
 (let (($x70 (= $x149 $x126)))
 (let (($x121 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x129 (=> $x121 $x119)))
 (let (($x154 (= ?x81 (_ bv0 32))))
 (let (($x123 (= $x121 $x154)))
 (let (($x41 (and (and (and (and (and (and $x123 $x129) $x70) $x95) $x158) $x46) $x131)))
 (let (($x14 (and (and (and $x41 $x152) $x111) $x42)))
 (let (($x68 (= $x14 true)))
 (let ((?x61 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x139 (concat ?x56 (concat ?x54 ?x61)))))
 (let (($x147 (= input.dst.llvm-%l ?x65)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x80 (and $x38 $x147)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x62)))
 (let ((?x51 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x51)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x50 $x10)))
 (let (($x67 (and $x60 $x148)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x16 $x67)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x132)))))))
 (let (($x29 (and (and (and $x35 true) $x71) $x80)))
 (let (($x74 (= $x29 true)))
 (let (($x89 (and $x74 $x68)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x59 (and $x5 $x89)))
 (let (($x31 (=> $x59 $x40)))
 (not $x31))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var327X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var327X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var327X.2.0 () (_ BitVec 32))
(declare-fun input.ind-%var327X.0 () (_ BitVec 32))
(declare-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var324X () (_ BitVec 32))
(declare-fun input.ind-%var324X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var324X.0 () (_ BitVec 32))
(declare-fun input.ind-%var324X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var327X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x232 (concat ?x231 (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv4 32))))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var327X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var327X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x237 (concat ?x234 ?x232))))
 (let (($x240 (= ?x238 input.ind-%var327X.2.1)))
 (let (($x203 (= (_ bv0 32) input.ind-%var327X)))
 (let ((?x198 (ite $x203 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x198 (_ bv1 32))))
 (let (($x241 (=> $x220 $x240)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var327X))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv2 32))) ?x28)))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv3 32))) ?x221)))
 (let (($x226 (= ?x224 input.ind-%var327X.2.0)))
 (let (($x227 (=> $x220 $x226)))
 (let (($x124 (bvuge input.ind-%var327X.0 (_ bv1 32))))
 (let (($x40 (= $x220 $x124)))
 (let (($x149 (= false false)))
 (let (($x207 (= ?x198 (_ bv0 32))))
 (let (($x219 (=> $x207 $x149)))
 (let (($x209 (= input.ind-%var327X.0 (_ bv0 32))))
 (let (($x218 (= $x207 $x209)))
 (let (($x202 (= input.dst.llvm-%l spec-%var-l-0.L3%5%bbentry)))
 (let (($x246 (and (and (and (and (and $x202 $x218) $x219) $x40) $x227) $x241)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var324X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x189 (concat ?x185 (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv4 32))))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var324X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var324X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x196 (concat ?x195 (concat ?x193 ?x189))))
 (let (($x213 (= input.ind-%var324X.2.1 ?x196)))
 (let (($x178 (bvuge input.ind-%var324X.0 (_ bv1 32))))
 (let (($x217 (=> $x178 $x213)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var324X))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv2 32))) ?x210)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv3 32))) ?x183)))
 (let (($x212 (= input.ind-%var324X.2.0 ?x215)))
 (let (($x192 (=> $x178 $x212)))
 (let (($x58 (= (_ bv0 32) input.ind-%var324X)))
 (let ((?x177 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x177 (_ bv1 32))))
 (let (($x169 (= $x178 $x168)))
 (let (($x176 (= input.ind-%var324X.0 (_ bv0 32))))
 (let (($x174 (=> $x176 $x149)))
 (let (($x34 (= ?x177 (_ bv0 32))))
 (let (($x32 (= $x176 $x34)))
 (let (($x175 (= input.spec-%var-l-1 input.dst.llvm-%l)))
 (let (($x200 (and (and (and (and (and $x175 $x32) $x174) $x169) $x192) $x217)))
 (let (($x247 (and $x200 $x246)))
 (let (($x172 (not true)))
 (let (($x248 (or $x172 $x247)))
 (let (($x249 (and true $x248)))
 (let (($x250 (= $x249 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x23 (concat ?x99 (concat ?x98 ?x88))))
 (let ((?x36 (bvadd ?x23 (_ bv4 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x104))))
 (let (($x106 (= (_ bv0 32) ?x157)))
 (let ((?x117 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x117 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x111 (= $x146 $x103)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x70 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x70 $x52)))
 (let (($x82 (=> $x131 $x111)))
 (let (($x101 (= ?x117 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x112 (= $x152 $x101)))
 (let (($x110 (=> $x131 $x112)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv1 32))) (select input.dst.llvm-mem ?x23))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv2 32))) ?x159))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x163)))
 (let (($x12 (=> $x131 $x100)))
 (let (($x135 (= (_ bv0 32) ?x23)))
 (let ((?x127 (ite $x135 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x127 (_ bv1 32))))
 (let (($x128 (= $x52 $x86)))
 (let (($x9 (=> $x70 $x128)))
 (let (($x83 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x70 $x83)))
 (let (($x46 (=> $x125 $x149)))
 (let (($x153 (= ?x127 (_ bv0 32))))
 (let (($x158 (= $x83 $x153)))
 (let (($x120 (=> $x70 $x158)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x95)))
 (let (($x94 (=> $x70 $x109)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x119 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x119 (_ bv1 32))))
 (let (($x85 (= $x70 $x105)))
 (let (($x154 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x126 (=> $x154 $x149)))
 (let (($x129 (= ?x119 (_ bv0 32))))
 (let (($x115 (= $x154 $x129)))
 (let (($x68 (and (and (and (and (and (and $x115 $x126) $x85) $x94) $x120) $x46) $x9)))
 (let (($x26 (and (and (and $x68 $x12) $x110) $x82)))
 (let (($x21 (= $x26 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x65 (concat ?x61 (concat ?x15 ?x139)))))
 (let (($x80 (= input.dst.llvm-%l ?x147)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x29 (and $x38 $x80)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x148)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (and $x30 $x60)))
 (let (($x71 (and $x62 $x67)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x47 $x71)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x50 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x160)))))))
 (let (($x121 (and (and (and $x50 true) $x79) $x29)))
 (let (($x122 (= $x121 true)))
 (let (($x171 (and $x122 $x21)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x165 (and $x5 $x171)))
 (let (($x251 (=> $x165 $x250)))
 (not $x251))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var327X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var327X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var327X.2.0 () (_ BitVec 32))
(declare-fun input.ind-%var327X.0 () (_ BitVec 32))
(declare-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var324X () (_ BitVec 32))
(declare-fun input.ind-%var324X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var324X.0 () (_ BitVec 32))
(declare-fun input.ind-%var324X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var327X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x232 (concat ?x231 (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv4 32))))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var327X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var327X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x237 (concat ?x234 ?x232))))
 (let (($x240 (= ?x238 input.ind-%var327X.2.1)))
 (let (($x203 (= (_ bv0 32) input.ind-%var327X)))
 (let ((?x198 (ite $x203 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x198 (_ bv1 32))))
 (let (($x241 (=> $x220 $x240)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var327X))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv2 32))) ?x28)))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd input.ind-%var327X (_ bv3 32))) ?x221)))
 (let (($x226 (= ?x224 input.ind-%var327X.2.0)))
 (let (($x227 (=> $x220 $x226)))
 (let (($x124 (bvuge input.ind-%var327X.0 (_ bv1 32))))
 (let (($x40 (= $x220 $x124)))
 (let (($x149 (= false false)))
 (let (($x207 (= ?x198 (_ bv0 32))))
 (let (($x219 (=> $x207 $x149)))
 (let (($x209 (= input.ind-%var327X.0 (_ bv0 32))))
 (let (($x218 (= $x207 $x209)))
 (let (($x202 (= input.dst.llvm-%l spec-%var-l-0.L3%5%bbentry)))
 (let (($x246 (and (and (and (and (and $x202 $x218) $x219) $x40) $x227) $x241)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var324X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x189 (concat ?x185 (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv4 32))))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var324X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var324X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x196 (concat ?x195 (concat ?x193 ?x189))))
 (let (($x213 (= input.ind-%var324X.2.1 ?x196)))
 (let (($x178 (bvuge input.ind-%var324X.0 (_ bv1 32))))
 (let (($x217 (=> $x178 $x213)))
 (let ((?x210 (concat (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var324X))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv2 32))) ?x210)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd input.ind-%var324X (_ bv3 32))) ?x183)))
 (let (($x212 (= input.ind-%var324X.2.0 ?x215)))
 (let (($x192 (=> $x178 $x212)))
 (let (($x58 (= (_ bv0 32) input.ind-%var324X)))
 (let ((?x177 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x168 (bvuge ?x177 (_ bv1 32))))
 (let (($x169 (= $x178 $x168)))
 (let (($x176 (= input.ind-%var324X.0 (_ bv0 32))))
 (let (($x174 (=> $x176 $x149)))
 (let (($x34 (= ?x177 (_ bv0 32))))
 (let (($x32 (= $x176 $x34)))
 (let (($x175 (= input.spec-%var-l-1 input.dst.llvm-%l)))
 (let (($x200 (and (and (and (and (and $x175 $x32) $x174) $x169) $x192) $x217)))
 (let (($x247 (and $x200 $x246)))
 (let (($x172 (not true)))
 (let (($x248 (or $x172 $x247)))
 (let (($x249 (and true $x248)))
 (let (($x250 (= $x249 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x88 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x23 (concat ?x99 (concat ?x98 ?x88))))
 (let ((?x36 (bvadd ?x23 (_ bv4 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x104))))
 (let (($x106 (= (_ bv0 32) ?x157)))
 (let ((?x117 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x117 (_ bv1 32))))
 (let (($x146 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x111 (= $x146 $x103)))
 (let (($x52 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x70 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x131 (and $x70 $x52)))
 (let (($x82 (=> $x131 $x111)))
 (let (($x101 (= ?x117 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x112 (= $x152 $x101)))
 (let (($x110 (=> $x131 $x112)))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv1 32))) (select input.dst.llvm-mem ?x23))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x23 (_ bv2 32))) ?x159))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x163)))
 (let (($x12 (=> $x131 $x100)))
 (let (($x135 (= (_ bv0 32) ?x23)))
 (let ((?x127 (ite $x135 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x127 (_ bv1 32))))
 (let (($x128 (= $x52 $x86)))
 (let (($x9 (=> $x70 $x128)))
 (let (($x83 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x70 $x83)))
 (let (($x46 (=> $x125 $x149)))
 (let (($x153 (= ?x127 (_ bv0 32))))
 (let (($x158 (= $x83 $x153)))
 (let (($x120 (=> $x70 $x158)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x95 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x95)))
 (let (($x94 (=> $x70 $x109)))
 (let (($x123 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x119 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x119 (_ bv1 32))))
 (let (($x85 (= $x70 $x105)))
 (let (($x154 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x126 (=> $x154 $x149)))
 (let (($x129 (= ?x119 (_ bv0 32))))
 (let (($x115 (= $x154 $x129)))
 (let (($x68 (and (and (and (and (and (and $x115 $x126) $x85) $x94) $x120) $x46) $x9)))
 (let (($x26 (and (and (and $x68 $x12) $x110) $x82)))
 (let (($x21 (= $x26 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x65 (concat ?x61 (concat ?x15 ?x139)))))
 (let (($x80 (= input.dst.llvm-%l ?x147)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x29 (and $x38 $x80)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x148)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x62 (and $x30 $x60)))
 (let (($x71 (and $x62 $x67)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x79 (and $x47 $x71)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x50 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x24 $x160)))))))
 (let (($x121 (and (and (and $x50 true) $x79) $x29)))
 (let (($x122 (= $x121 true)))
 (let (($x171 (and $x122 $x21)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x165 (and $x5 $x171)))
 (let (($x251 (=> $x165 $x250)))
 (not $x251))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.ind-%var327X.2.1 #b10000000000000000000000000000000)
(= input.ind-%var327X #b10000000000000000000000000000000)
(= input.ind-%var327X.2.0 #b10000000000000000000000000000000)
(= input.ind-%var327X.0 #b00000000000000000000000000000000)
(= spec-%var-l-0.L3%5%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.ind-%var324X #b10000000000000000000000000000000)
(= input.ind-%var324X.2.1 #b10000000000000000000000000000000)
(= input.ind-%var324X.0 #b00000000000000000000000000000000)
(= input.ind-%var324X.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x18e23000)
  (define-fun input.ind-%var327X.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.ind-%var324X.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x3ebc79e5)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xff)
                                #x18e23002
                                #xe2)
                         #x18e23003
                         #x18)
                  #x18e23000
                  #x00)))
  (store a!1 #x18e23001 #x30)))
  (define-fun input.ind-%var327X () (_ BitVec 32)
    #xffffffff)
  (define-fun input.ind-%var324X () (_ BitVec 32)
    #xffffffff)
  (define-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32)
    #x18e23000)
  (define-fun input.ind-%var327X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var327X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var324X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var324X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x18e23000)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x18e23000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x18e23000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x18e23003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x18e23000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var327X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var327X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv7 32) (_ bv255 8)) (_ bv6 32) (_ bv255 8)) (_ bv5 32) (_ bv255 8)) (_ bv8 32) (_ bv255 8)))
(define-fun input.ind-%var327X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var327X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun spec-%var-l-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var324X () (_ BitVec 32) (_ bv1 32))
(define-fun input.ind-%var324X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var324X.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.ind-%var324X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var389X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var386X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var386X.0 () (_ BitVec 32))
(declare-fun input.ind-%var386X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var389X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x203 (concat ?x205 (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv4 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var389X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var389X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x218 (concat ?x207 ?x203))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x183 (= (_ bv0 32) input.ind-%var389X)))
 (let ((?x215 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x215 (_ bv1 32))))
 (let (($x243 (=> $x216 $x219)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var389X))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv2 32))) ?x193)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv3 32))) ?x194)))
 (let (($x213 (= ?x196 ?x196)))
 (let (($x217 (=> $x216 $x213)))
 (let (($x191 (= $x216 $x216)))
 (let (($x70 (= false false)))
 (let (($x212 (= ?x215 (_ bv0 32))))
 (let (($x199 (=> $x212 $x70)))
 (let (($x40 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x212 $x212)) $x199) $x191)))
 (let (($x222 (and (and $x40 $x217) $x243)))
 (let (($x170 (= input.ind-%var386X.2.1 input.ind-%var386X.2.1)))
 (let (($x174 (bvuge input.ind-%var386X.0 (_ bv1 32))))
 (let (($x214 (=> $x174 $x170)))
 (let (($x168 (= input.ind-%var386X.2.0 input.ind-%var386X.2.0)))
 (let (($x169 (=> $x174 $x168)))
 (let (($x201 (= $x174 $x174)))
 (let (($x34 (= input.ind-%var386X.0 (_ bv0 32))))
 (let (($x197 (=> $x34 $x70)))
 (let (($x182 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x34 $x34)) $x197)))
 (let (($x181 (and (and (and $x182 $x201) $x169) $x214)))
 (let (($x223 (and $x181 $x222)))
 (let (($x176 (not true)))
 (let (($x141 (or $x176 $x223)))
 (let (($x25 (and true $x141)))
 (let (($x53 (= $x25 true)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x98 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x135 (concat ?x23 (concat ?x151 ?x93))))
 (let ((?x89 (bvadd ?x135 (_ bv4 32))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x145))))
 (let (($x104 (= (_ bv0 32) ?x107)))
 (let ((?x114 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x114 (_ bv1 32))))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x110 (= $x101 $x112)))
 (let (($x14 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x85 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x9 (and $x85 $x14)))
 (let (($x59 (=> $x9 $x110)))
 (let (($x157 (= ?x114 (_ bv0 32))))
 (let (($x12 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x106 (= $x12 $x157)))
 (let (($x117 (=> $x9 $x106)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x48))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.0 ?x159)))
 (let (($x163 (=> $x9 $x164)))
 (let (($x127 (= (_ bv0 32) ?x135)))
 (let ((?x153 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x153 (_ bv1 32))))
 (let (($x86 (= $x14 $x52)))
 (let (($x128 (=> $x85 $x86)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x85 $x97)))
 (let (($x46 (=> $x125 $x70)))
 (let (($x158 (= ?x153 (_ bv0 32))))
 (let (($x120 (= $x97 $x158)))
 (let (($x42 (=> $x85 $x120)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x94)))
 (let (($x92 (=> $x85 $x130)))
 (let (($x115 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x149 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x149 (_ bv1 32))))
 (let (($x116 (= $x85 $x161)))
 (let (($x129 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x105 (=> $x129 $x70)))
 (let (($x126 (= ?x149 (_ bv0 32))))
 (let (($x108 (= $x129 $x126)))
 (let (($x21 (and (and (and (and (and (and $x108 $x105) $x116) $x92) $x42) $x46) $x128)))
 (let (($x172 (and (and (and $x21 $x163) $x117) $x59)))
 (let (($x166 (= $x172 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x147 (concat ?x139 (concat ?x54 ?x65)))))
 (let (($x29 (= input.dst.llvm-%l ?x80)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x121 (and $x38 $x29)))
 (let ((?x67 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x67)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x62 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x60)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x51 $x62)))
 (let (($x79 (and $x148 $x71)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x33 $x79)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x30 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x133)))))))
 (let (($x154 (and (and (and $x30 true) $x162) $x121)))
 (let (($x123 (= $x154 true)))
 (let (($x175 (and $x123 $x166)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x167 (and $x5 $x175)))
 (let (($x155 (=> $x167 $x53)))
 (not $x155))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var389X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var386X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var386X.0 () (_ BitVec 32))
(declare-fun input.ind-%var386X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var389X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x203 (concat ?x205 (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv4 32))))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var389X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var389X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x218 (concat ?x207 ?x203))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x183 (= (_ bv0 32) input.ind-%var389X)))
 (let ((?x215 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x216 (bvuge ?x215 (_ bv1 32))))
 (let (($x243 (=> $x216 $x219)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var389X))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv2 32))) ?x193)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.ind-%var389X (_ bv3 32))) ?x194)))
 (let (($x213 (= ?x196 ?x196)))
 (let (($x217 (=> $x216 $x213)))
 (let (($x191 (= $x216 $x216)))
 (let (($x70 (= false false)))
 (let (($x212 (= ?x215 (_ bv0 32))))
 (let (($x199 (=> $x212 $x70)))
 (let (($x40 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x212 $x212)) $x199) $x191)))
 (let (($x222 (and (and $x40 $x217) $x243)))
 (let (($x170 (= input.ind-%var386X.2.1 input.ind-%var386X.2.1)))
 (let (($x174 (bvuge input.ind-%var386X.0 (_ bv1 32))))
 (let (($x214 (=> $x174 $x170)))
 (let (($x168 (= input.ind-%var386X.2.0 input.ind-%var386X.2.0)))
 (let (($x169 (=> $x174 $x168)))
 (let (($x201 (= $x174 $x174)))
 (let (($x34 (= input.ind-%var386X.0 (_ bv0 32))))
 (let (($x197 (=> $x34 $x70)))
 (let (($x182 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x34 $x34)) $x197)))
 (let (($x181 (and (and (and $x182 $x201) $x169) $x214)))
 (let (($x223 (and $x181 $x222)))
 (let (($x176 (not true)))
 (let (($x141 (or $x176 $x223)))
 (let (($x25 (and true $x141)))
 (let (($x53 (= $x25 true)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x98 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x135 (concat ?x23 (concat ?x151 ?x93))))
 (let ((?x89 (bvadd ?x135 (_ bv4 32))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x145))))
 (let (($x104 (= (_ bv0 32) ?x107)))
 (let ((?x114 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x114 (_ bv1 32))))
 (let (($x101 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x110 (= $x101 $x112)))
 (let (($x14 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x85 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x9 (and $x85 $x14)))
 (let (($x59 (=> $x9 $x110)))
 (let (($x157 (= ?x114 (_ bv0 32))))
 (let (($x12 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x106 (= $x12 $x157)))
 (let (($x117 (=> $x9 $x106)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv1 32))) (select input.dst.llvm-mem ?x135))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x135 (_ bv2 32))) ?x48))))
 (let (($x164 (= input.spec-%var-l-1.2.1.2.0 ?x159)))
 (let (($x163 (=> $x9 $x164)))
 (let (($x127 (= (_ bv0 32) ?x135)))
 (let ((?x153 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x153 (_ bv1 32))))
 (let (($x86 (= $x14 $x52)))
 (let (($x128 (=> $x85 $x86)))
 (let (($x97 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x85 $x97)))
 (let (($x46 (=> $x125 $x70)))
 (let (($x158 (= ?x153 (_ bv0 32))))
 (let (($x120 (= $x97 $x158)))
 (let (($x42 (=> $x85 $x120)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x94)))
 (let (($x92 (=> $x85 $x130)))
 (let (($x115 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x149 (ite $x115 (_ bv0 32) (_ bv1 32))))
 (let (($x161 (bvuge ?x149 (_ bv1 32))))
 (let (($x116 (= $x85 $x161)))
 (let (($x129 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x105 (=> $x129 $x70)))
 (let (($x126 (= ?x149 (_ bv0 32))))
 (let (($x108 (= $x129 $x126)))
 (let (($x21 (and (and (and (and (and (and $x108 $x105) $x116) $x92) $x42) $x46) $x128)))
 (let (($x172 (and (and (and $x21 $x163) $x117) $x59)))
 (let (($x166 (= $x172 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x80 (concat ?x147 (concat ?x139 (concat ?x54 ?x65)))))
 (let (($x29 (= input.dst.llvm-%l ?x80)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x121 (and $x38 $x29)))
 (let ((?x67 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x67)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x62 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x60)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x51 $x62)))
 (let (($x79 (and $x148 $x71)))
 (let (($x33 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x33 $x79)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x30 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x133)))))))
 (let (($x154 (and (and (and $x30 true) $x162) $x121)))
 (let (($x123 (= $x154 true)))
 (let (($x175 (and $x123 $x166)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x167 (and $x5 $x175)))
 (let (($x155 (=> $x167 $x53)))
 (not $x155))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var389X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.ind-%var386X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var386X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var386X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x1b497f70)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #xd4000007
                     #xd4)
              #xd4000003
              #xd4)
       #xd4000007
       #xd4))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd4000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd4000000)
  (define-fun input.ind-%var389X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var386X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var386X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var386X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var433X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var430X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var430X.0 () (_ BitVec 32))
(declare-fun input.ind-%var430X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var433X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x198 (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var433X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var433X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x208 (concat ?x205 ?x207))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x220 (= (_ bv0 32) input.ind-%var433X)))
 (let ((?x199 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x199 (_ bv1 32))))
 (let (($x243 (=> $x40 $x219)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var433X))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv2 32))) ?x195)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv3 32))) ?x193)))
 (let (($x217 (= ?x213 ?x213)))
 (let (($x244 (=> $x40 $x217)))
 (let (($x189 (= $x40 $x40)))
 (let (($x85 (= false false)))
 (let (($x124 (= ?x199 (_ bv0 32))))
 (let (($x191 (=> $x124 $x85)))
 (let (($x223 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x124 $x124)) $x191)))
 (let (($x53 (and (and (and $x223 $x189) $x244) $x243)))
 (let (($x170 (= input.ind-%var430X.2.1 input.ind-%var430X.2.1)))
 (let (($x211 (bvuge input.ind-%var430X.0 (_ bv1 32))))
 (let (($x214 (=> $x211 $x170)))
 (let (($x169 (= input.ind-%var430X.2.0 input.ind-%var430X.2.0)))
 (let (($x180 (=> $x211 $x169)))
 (let (($x178 (= $x211 $x211)))
 (let (($x182 (= input.ind-%var430X.0 (_ bv0 32))))
 (let (($x201 (=> $x182 $x85)))
 (let (($x179 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x182 $x182)) $x201)))
 (let (($x215 (and (and (and $x179 $x178) $x180) $x214)))
 (let (($x155 (and $x215 $x53)))
 (let (($x34 (not true)))
 (let (($x31 (or $x34 $x155)))
 (let (($x13 (and true $x31)))
 (let (($x37 (= $x13 true)))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x151 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x135 (concat ?x99 ?x150))))
 (let ((?x171 (bvadd ?x127 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x17))))
 (let (($x145 (= (_ bv0 32) ?x72)))
 (let ((?x113 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x113 (_ bv1 32))))
 (let (($x157 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x117 (= $x157 $x106)))
 (let (($x26 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x116 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (and $x116 $x26)))
 (let (($x165 (=> $x128 $x117)))
 (let (($x107 (= ?x113 (_ bv0 32))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x163 $x107)))
 (let (($x114 (=> $x128 $x104)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x144))))
 (let (($x27 (= input.spec-%var-l-1.2.1.2.0 ?x48)))
 (let (($x159 (=> $x128 $x27)))
 (let (($x153 (= (_ bv0 32) ?x127)))
 (let ((?x158 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x158 (_ bv1 32))))
 (let (($x52 (= $x26 $x14)))
 (let (($x86 (=> $x116 $x52)))
 (let (($x87 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x116 $x87)))
 (let (($x46 (=> $x125 $x85)))
 (let (($x120 (= ?x158 (_ bv0 32))))
 (let (($x42 (= $x87 $x120)))
 (let (($x82 (=> $x116 $x42)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x111 (= input.spec-%var-l-1.2.0 ?x92)))
 (let (($x83 (=> $x116 $x111)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x70 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x70 (_ bv1 32))))
 (let (($x91 (= $x116 $x103)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x161 (=> $x126 $x85)))
 (let (($x105 (= ?x70 (_ bv0 32))))
 (let (($x146 (= $x126 $x105)))
 (let (($x166 (and (and (and (and (and (and $x146 $x161) $x91) $x83) $x82) $x46) $x86)))
 (let (($x176 (and (and (and $x166 $x159) $x114) $x165)))
 (let (($x173 (= $x176 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x29 (concat ?x80 (concat ?x65 (concat ?x15 ?x147)))))
 (let (($x121 (= input.dst.llvm-%l ?x29)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x154 (and $x38 $x121)))
 (let ((?x71 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x79 (= (_ bv0 32) ?x71)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x10 $x148)))
 (let (($x162 (and $x67 $x79)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x132 $x162)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x50 $x74)))))))
 (let (($x129 (and (and (and $x51 true) $x81) $x154)))
 (let (($x115 (= $x129 true)))
 (let (($x58 (and $x115 $x173)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x177 (and $x5 $x58)))
 (let (($x43 (=> $x177 $x37)))
 (not $x43))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var433X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var430X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var430X.0 () (_ BitVec 32))
(declare-fun input.ind-%var430X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var433X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x207 (concat ?x198 (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv4 32))))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var433X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var433X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x208 (concat ?x205 ?x207))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x220 (= (_ bv0 32) input.ind-%var433X)))
 (let ((?x199 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x40 (bvuge ?x199 (_ bv1 32))))
 (let (($x243 (=> $x40 $x219)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var433X))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv2 32))) ?x195)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd input.ind-%var433X (_ bv3 32))) ?x193)))
 (let (($x217 (= ?x213 ?x213)))
 (let (($x244 (=> $x40 $x217)))
 (let (($x189 (= $x40 $x40)))
 (let (($x85 (= false false)))
 (let (($x124 (= ?x199 (_ bv0 32))))
 (let (($x191 (=> $x124 $x85)))
 (let (($x223 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x124 $x124)) $x191)))
 (let (($x53 (and (and (and $x223 $x189) $x244) $x243)))
 (let (($x170 (= input.ind-%var430X.2.1 input.ind-%var430X.2.1)))
 (let (($x211 (bvuge input.ind-%var430X.0 (_ bv1 32))))
 (let (($x214 (=> $x211 $x170)))
 (let (($x169 (= input.ind-%var430X.2.0 input.ind-%var430X.2.0)))
 (let (($x180 (=> $x211 $x169)))
 (let (($x178 (= $x211 $x211)))
 (let (($x182 (= input.ind-%var430X.0 (_ bv0 32))))
 (let (($x201 (=> $x182 $x85)))
 (let (($x179 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x182 $x182)) $x201)))
 (let (($x215 (and (and (and $x179 $x178) $x180) $x214)))
 (let (($x155 (and $x215 $x53)))
 (let (($x34 (not true)))
 (let (($x31 (or $x34 $x155)))
 (let (($x13 (and true $x31)))
 (let (($x37 (= $x13 true)))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x150 (concat ?x151 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x135 (concat ?x99 ?x150))))
 (let ((?x171 (bvadd ?x127 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x17))))
 (let (($x145 (= (_ bv0 32) ?x72)))
 (let ((?x113 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x113 (_ bv1 32))))
 (let (($x157 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x117 (= $x157 $x106)))
 (let (($x26 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x116 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (and $x116 $x26)))
 (let (($x165 (=> $x128 $x117)))
 (let (($x107 (= ?x113 (_ bv0 32))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x163 $x107)))
 (let (($x114 (=> $x128 $x104)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem ?x127))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x127 (_ bv2 32))) ?x144))))
 (let (($x27 (= input.spec-%var-l-1.2.1.2.0 ?x48)))
 (let (($x159 (=> $x128 $x27)))
 (let (($x153 (= (_ bv0 32) ?x127)))
 (let ((?x158 (ite $x153 (_ bv0 32) (_ bv1 32))))
 (let (($x14 (bvuge ?x158 (_ bv1 32))))
 (let (($x52 (= $x26 $x14)))
 (let (($x86 (=> $x116 $x52)))
 (let (($x87 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x116 $x87)))
 (let (($x46 (=> $x125 $x85)))
 (let (($x120 (= ?x158 (_ bv0 32))))
 (let (($x42 (= $x87 $x120)))
 (let (($x82 (=> $x116 $x42)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x142)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x111 (= input.spec-%var-l-1.2.0 ?x92)))
 (let (($x83 (=> $x116 $x111)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x70 (ite $x108 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x70 (_ bv1 32))))
 (let (($x91 (= $x116 $x103)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x161 (=> $x126 $x85)))
 (let (($x105 (= ?x70 (_ bv0 32))))
 (let (($x146 (= $x126 $x105)))
 (let (($x166 (and (and (and (and (and (and $x146 $x161) $x91) $x83) $x82) $x46) $x86)))
 (let (($x176 (and (and (and $x166 $x159) $x114) $x165)))
 (let (($x173 (= $x176 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x29 (concat ?x80 (concat ?x65 (concat ?x15 ?x147)))))
 (let (($x121 (= input.dst.llvm-%l ?x29)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x154 (and $x38 $x121)))
 (let ((?x71 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x79 (= (_ bv0 32) ?x71)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (and $x10 $x148)))
 (let (($x162 (and $x67 $x79)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x132 $x162)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x50 $x74)))))))
 (let (($x129 (and (and (and $x51 true) $x81) $x154)))
 (let (($x115 (= $x129 true)))
 (let (($x58 (and $x115 $x173)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x177 (and $x5 $x58)))
 (let (($x43 (=> $x177 $x37)))
 (not $x43))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var459X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var456X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var456X.0 () (_ BitVec 32))
(declare-fun input.ind-%var456X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var459X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x202 (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv4 32))))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var459X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var459X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x206 (concat ?x198 ?x205))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x222 (= (_ bv0 32) input.ind-%var459X)))
 (let ((?x191 (ite $x222 (_ bv0 32) (_ bv1 32))))
 (let (($x141 (bvuge ?x191 (_ bv1 32))))
 (let (($x243 (=> $x141 $x219)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var459X))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv2 32))) ?x187)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv3 32))) ?x195)))
 (let (($x244 (= ?x217 ?x217)))
 (let (($x25 (=> $x141 $x244)))
 (let (($x194 (= $x141 $x141)))
 (let (($x116 (= false false)))
 (let (($x223 (= ?x191 (_ bv0 32))))
 (let (($x189 (=> $x223 $x116)))
 (let (($x155 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x223 $x223)) $x189)))
 (let (($x37 (and (and (and $x155 $x194) $x25) $x243)))
 (let (($x170 (= input.ind-%var456X.2.1 input.ind-%var456X.2.1)))
 (let (($x210 (bvuge input.ind-%var456X.0 (_ bv1 32))))
 (let (($x214 (=> $x210 $x170)))
 (let (($x180 (= input.ind-%var456X.2.0 input.ind-%var456X.2.0)))
 (let (($x183 (=> $x210 $x180)))
 (let (($x168 (= $x210 $x210)))
 (let (($x179 (= input.ind-%var456X.0 (_ bv0 32))))
 (let (($x178 (=> $x179 $x116)))
 (let (($x212 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x179 $x179)) $x178)))
 (let (($x199 (and (and (and $x212 $x168) $x183) $x214)))
 (let (($x43 (and $x199 $x37)))
 (let (($x182 (not true)))
 (let (($x66 (or $x182 $x43)))
 (let (($x109 (and true $x66)))
 (let (($x76 (= $x109 true)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x127 (concat ?x23 ?x90))))
 (let ((?x175 (bvadd ?x153 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x152))))
 (let (($x17 (= (_ bv0 32) ?x100)))
 (let ((?x102 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x102 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x114 (= $x107 $x104)))
 (let (($x172 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x91 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x86 (and $x91 $x172)))
 (let (($x167 (=> $x86 $x114)))
 (let (($x72 (= ?x102 (_ bv0 32))))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x145 (= $x159 $x72)))
 (let (($x113 (=> $x86 $x145)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x131))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.0 ?x144)))
 (let (($x48 (=> $x86 $x41)))
 (let (($x158 (= (_ bv0 32) ?x153)))
 (let ((?x120 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x120 (_ bv1 32))))
 (let (($x14 (= $x172 $x26)))
 (let (($x52 (=> $x91 $x14)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x91 $x96)))
 (let (($x46 (=> $x125 $x116)))
 (let (($x42 (= ?x120 (_ bv0 32))))
 (let (($x82 (= $x96 $x42)))
 (let (($x59 (=> $x91 $x82)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x110 (= input.spec-%var-l-1.2.0 ?x83)))
 (let (($x97 (=> $x91 $x110)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x85 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x85 (_ bv1 32))))
 (let (($x95 (= $x91 $x112)))
 (let (($x105 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x103 (=> $x105 $x116)))
 (let (($x161 (= ?x85 (_ bv0 32))))
 (let (($x101 (= $x105 $x161)))
 (let (($x173 (and (and (and (and (and (and $x101 $x103) $x95) $x97) $x59) $x46) $x52)))
 (let (($x34 (and (and (and $x173 $x48) $x113) $x167)))
 (let (($x32 (= $x34 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x121 (concat ?x29 (concat ?x147 (concat ?x54 ?x80)))))
 (let (($x154 (= input.dst.llvm-%l ?x121)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x129 (and $x38 $x154)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x79)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (and $x60 $x67)))
 (let (($x81 (and $x71 $x162)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x160 $x81)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x122)))))))
 (let (($x126 (and (and (and $x10 true) $x119) $x129)))
 (let (($x108 (= $x126 true)))
 (let (($x184 (and $x108 $x32)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x197 (and $x5 $x184)))
 (let (($x24 (=> $x197 $x76)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var459X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var456X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var456X.0 () (_ BitVec 32))
(declare-fun input.ind-%var456X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var459X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x205 (concat ?x202 (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv4 32))))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var459X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var459X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x206 (concat ?x198 ?x205))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x222 (= (_ bv0 32) input.ind-%var459X)))
 (let ((?x191 (ite $x222 (_ bv0 32) (_ bv1 32))))
 (let (($x141 (bvuge ?x191 (_ bv1 32))))
 (let (($x243 (=> $x141 $x219)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var459X))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv2 32))) ?x187)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd input.ind-%var459X (_ bv3 32))) ?x195)))
 (let (($x244 (= ?x217 ?x217)))
 (let (($x25 (=> $x141 $x244)))
 (let (($x194 (= $x141 $x141)))
 (let (($x116 (= false false)))
 (let (($x223 (= ?x191 (_ bv0 32))))
 (let (($x189 (=> $x223 $x116)))
 (let (($x155 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x223 $x223)) $x189)))
 (let (($x37 (and (and (and $x155 $x194) $x25) $x243)))
 (let (($x170 (= input.ind-%var456X.2.1 input.ind-%var456X.2.1)))
 (let (($x210 (bvuge input.ind-%var456X.0 (_ bv1 32))))
 (let (($x214 (=> $x210 $x170)))
 (let (($x180 (= input.ind-%var456X.2.0 input.ind-%var456X.2.0)))
 (let (($x183 (=> $x210 $x180)))
 (let (($x168 (= $x210 $x210)))
 (let (($x179 (= input.ind-%var456X.0 (_ bv0 32))))
 (let (($x178 (=> $x179 $x116)))
 (let (($x212 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x179 $x179)) $x178)))
 (let (($x199 (and (and (and $x212 $x168) $x183) $x214)))
 (let (($x43 (and $x199 $x37)))
 (let (($x182 (not true)))
 (let (($x66 (or $x182 $x43)))
 (let (($x109 (and true $x66)))
 (let (($x76 (= $x109 true)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x90 (concat ?x99 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x153 (concat ?x127 (concat ?x23 ?x90))))
 (let ((?x175 (bvadd ?x153 (_ bv4 32))))
 (let ((?x152 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv1 32))) (select input.dst.llvm-mem ?x175))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x175 (_ bv2 32))) ?x152))))
 (let (($x17 (= (_ bv0 32) ?x100)))
 (let ((?x102 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x102 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x114 (= $x107 $x104)))
 (let (($x172 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x91 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x86 (and $x91 $x172)))
 (let (($x167 (=> $x86 $x114)))
 (let (($x72 (= ?x102 (_ bv0 32))))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x145 (= $x159 $x72)))
 (let (($x113 (=> $x86 $x145)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x131))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.0 ?x144)))
 (let (($x48 (=> $x86 $x41)))
 (let (($x158 (= (_ bv0 32) ?x153)))
 (let ((?x120 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x26 (bvuge ?x120 (_ bv1 32))))
 (let (($x14 (= $x172 $x26)))
 (let (($x52 (=> $x91 $x14)))
 (let (($x96 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x91 $x96)))
 (let (($x46 (=> $x125 $x116)))
 (let (($x42 (= ?x120 (_ bv0 32))))
 (let (($x82 (= $x96 $x42)))
 (let (($x59 (=> $x91 $x82)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x110 (= input.spec-%var-l-1.2.0 ?x83)))
 (let (($x97 (=> $x91 $x110)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x85 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x112 (bvuge ?x85 (_ bv1 32))))
 (let (($x95 (= $x91 $x112)))
 (let (($x105 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x103 (=> $x105 $x116)))
 (let (($x161 (= ?x85 (_ bv0 32))))
 (let (($x101 (= $x105 $x161)))
 (let (($x173 (and (and (and (and (and (and $x101 $x103) $x95) $x97) $x59) $x46) $x52)))
 (let (($x34 (and (and (and $x173 $x48) $x113) $x167)))
 (let (($x32 (= $x34 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x121 (concat ?x29 (concat ?x147 (concat ?x54 ?x80)))))
 (let (($x154 (= input.dst.llvm-%l ?x121)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x129 (and $x38 $x154)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x162 (= (_ bv0 32) ?x79)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (and $x60 $x67)))
 (let (($x81 (and $x71 $x162)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (and $x160 $x81)))
 (let (($x122 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x122)))))))
 (let (($x126 (and (and (and $x10 true) $x119) $x129)))
 (let (($x108 (= $x126 true)))
 (let (($x184 (and $x108 $x32)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x197 (and $x5 $x184)))
 (let (($x24 (=> $x197 $x76)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x179 (= false true)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x98 (concat ?x23 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x153 (concat ?x135 ?x98))))
 (let ((?x58 (bvadd ?x158 (_ bv4 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv1 32))) (select input.dst.llvm-mem ?x58))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv2 32))) ?x12))))
 (let (($x152 (= (_ bv0 32) ?x164)))
 (let ((?x118 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x145 (bvuge ?x118 (_ bv1 32))))
 (let (($x72 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x113 (= $x72 $x145)))
 (let (($x176 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x95 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x52 (and $x95 $x176)))
 (let (($x177 (=> $x52 $x113)))
 (let (($x100 (= ?x118 (_ bv0 32))))
 (let (($x48 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x17 (= $x48 $x100)))
 (let (($x102 (=> $x52 $x17)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x9))))
 (let (($x68 (= input.spec-%var-l-1.2.1.2.0 ?x131)))
 (let (($x144 (=> $x52 $x68)))
 (let (($x120 (= (_ bv0 32) ?x158)))
 (let ((?x42 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x42 (_ bv1 32))))
 (let (($x26 (= $x176 $x172)))
 (let (($x14 (=> $x95 $x26)))
 (let (($x91 (= false false)))
 (let (($x143 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x95 $x143)))
 (let (($x46 (=> $x125 $x91)))
 (let (($x82 (= ?x42 (_ bv0 32))))
 (let (($x59 (= $x143 $x82)))
 (let (($x165 (=> $x95 $x59)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x117 (= input.spec-%var-l-1.2.0 ?x97)))
 (let (($x87 (=> $x95 $x117)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x116 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x116 (_ bv1 32))))
 (let (($x94 (= $x95 $x106)))
 (let (($x161 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x161 $x91)))
 (let (($x103 (= ?x116 (_ bv0 32))))
 (let (($x157 (= $x161 $x103)))
 (let (($x32 (and (and (and (and (and (and $x157 $x112) $x94) $x87) $x165) $x46) $x14)))
 (let (($x182 (and (and (and $x32 $x144) $x102) $x177)))
 (let (($x174 (= $x182 true)))
 (let ((?x29 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x121 (concat ?x80 (concat ?x15 ?x29)))))
 (let (($x129 (= input.dst.llvm-%l ?x154)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x126 (and $x38 $x129)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x162)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x62 $x71)))
 (let (($x119 (and $x79 $x81)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x149 (and $x133 $x119)))
 (let (($x123 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x51 $x123)))))))
 (let (($x105 (and (and (and $x60 true) $x149) $x126)))
 (let (($x146 (= $x105 true)))
 (let (($x181 (and $x146 $x174)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x201 (and $x5 $x181)))
 (let (($x211 (=> $x201 $x179)))
 (not $x211))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x179 (= false true)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x98 (concat ?x23 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x153 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x158 (concat ?x153 (concat ?x135 ?x98))))
 (let ((?x58 (bvadd ?x158 (_ bv4 32))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv1 32))) (select input.dst.llvm-mem ?x58))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x58 (_ bv2 32))) ?x12))))
 (let (($x152 (= (_ bv0 32) ?x164)))
 (let ((?x118 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x145 (bvuge ?x118 (_ bv1 32))))
 (let (($x72 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x113 (= $x72 $x145)))
 (let (($x176 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x95 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x52 (and $x95 $x176)))
 (let (($x177 (=> $x52 $x113)))
 (let (($x100 (= ?x118 (_ bv0 32))))
 (let (($x48 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x17 (= $x48 $x100)))
 (let (($x102 (=> $x52 $x17)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv1 32))) (select input.dst.llvm-mem ?x158))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x158 (_ bv2 32))) ?x9))))
 (let (($x68 (= input.spec-%var-l-1.2.1.2.0 ?x131)))
 (let (($x144 (=> $x52 $x68)))
 (let (($x120 (= (_ bv0 32) ?x158)))
 (let ((?x42 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x172 (bvuge ?x42 (_ bv1 32))))
 (let (($x26 (= $x176 $x172)))
 (let (($x14 (=> $x95 $x26)))
 (let (($x91 (= false false)))
 (let (($x143 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x95 $x143)))
 (let (($x46 (=> $x125 $x91)))
 (let (($x82 (= ?x42 (_ bv0 32))))
 (let (($x59 (= $x143 $x82)))
 (let (($x165 (=> $x95 $x59)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x117 (= input.spec-%var-l-1.2.0 ?x97)))
 (let (($x87 (=> $x95 $x117)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x116 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x106 (bvuge ?x116 (_ bv1 32))))
 (let (($x94 (= $x95 $x106)))
 (let (($x161 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x112 (=> $x161 $x91)))
 (let (($x103 (= ?x116 (_ bv0 32))))
 (let (($x157 (= $x161 $x103)))
 (let (($x32 (and (and (and (and (and (and $x157 $x112) $x94) $x87) $x165) $x46) $x14)))
 (let (($x182 (and (and (and $x32 $x144) $x102) $x177)))
 (let (($x174 (= $x182 true)))
 (let ((?x29 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x121 (concat ?x80 (concat ?x15 ?x29)))))
 (let (($x129 (= input.dst.llvm-%l ?x154)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x126 (and $x38 $x129)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x162)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x67)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x62 $x71)))
 (let (($x119 (and $x79 $x81)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x149 (and $x133 $x119)))
 (let (($x123 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x60 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x51 $x123)))))))
 (let (($x105 (and (and (and $x60 true) $x149) $x126)))
 (let (($x146 (= $x105 true)))
 (let (($x181 (and $x146 $x174)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x201 (and $x5 $x181)))
 (let (($x211 (=> $x201 $x179)))
 (not $x211))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x168 (= false true)))
 (let (($x144 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x34 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x14 (and $x94 $x34)))
 (let (($x113 (and $x14 $x144)))
 (let (($x177 (not $x113)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x72 (and $x14 $x100)))
 (let (($x145 (not $x72)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x151 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x120 (concat ?x158 (concat ?x127 ?x151))))
 (let ((?x184 (bvadd ?x120 (_ bv4 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x163))))
 (let (($x12 (= (_ bv0 32) ?x27)))
 (let ((?x18 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x17 (bvuge ?x18 (_ bv1 32))))
 (let (($x102 (= $x100 $x17)))
 (let (($x197 (=> $x14 $x102)))
 (let (($x164 (= ?x18 (_ bv0 32))))
 (let (($x152 (= $x144 $x164)))
 (let (($x118 (=> $x14 $x152)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x128))))
 (let (($x21 (= input.spec-%var-l-1.2.1.2.0 ?x9)))
 (let (($x131 (=> $x14 $x21)))
 (let (($x42 (= (_ bv0 32) ?x120)))
 (let ((?x82 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x176 (bvuge ?x82 (_ bv1 32))))
 (let (($x172 (= $x34 $x176)))
 (let (($x26 (=> $x94 $x172)))
 (let (($x95 (= false false)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x94 $x88)))
 (let (($x46 (=> $x125 $x95)))
 (let (($x59 (= ?x82 (_ bv0 32))))
 (let (($x165 (= $x88 $x59)))
 (let (($x167 (=> $x94 $x165)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x114 (= input.spec-%var-l-1.2.0 ?x87)))
 (let (($x96 (=> $x94 $x114)))
 (let (($x157 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x91 (ite $x157 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x91 (_ bv1 32))))
 (let (($x92 (= $x94 $x104)))
 (let (($x103 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x106 (=> $x103 $x95)))
 (let (($x112 (= ?x91 (_ bv0 32))))
 (let (($x107 (= $x103 $x112)))
 (let (($x211 (and (and (and (and (and (and $x107 $x106) $x92) $x96) $x167) $x46) $x26)))
 (let (($x61 (and (and (and (and (and $x211 $x131) $x118) $x197) $x145) $x177)))
 (let (($x178 (= $x61 true)))
 (let ((?x121 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x154 (concat ?x29 (concat ?x54 ?x121)))))
 (let (($x126 (= input.dst.llvm-%l ?x129)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x105 (and $x38 $x126)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x81)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x148 $x79)))
 (let (($x149 (and $x162 $x119)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x74 $x149)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x62 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x115)))))))
 (let (($x161 (and (and (and $x62 true) $x70) $x105)))
 (let (($x101 (= $x161 true)))
 (let (($x212 (and $x101 $x178)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x210 (and $x5 $x212)))
 (let (($x192 (=> $x210 $x168)))
 (not $x192))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x168 (= false true)))
 (let (($x144 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x34 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x14 (and $x94 $x34)))
 (let (($x113 (and $x14 $x144)))
 (let (($x177 (not $x113)))
 (let (($x100 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x72 (and $x14 $x100)))
 (let (($x145 (not $x72)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x151 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x120 (concat ?x158 (concat ?x127 ?x151))))
 (let ((?x184 (bvadd ?x120 (_ bv4 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv1 32))) (select input.dst.llvm-mem ?x184))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x184 (_ bv2 32))) ?x163))))
 (let (($x12 (= (_ bv0 32) ?x27)))
 (let ((?x18 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x17 (bvuge ?x18 (_ bv1 32))))
 (let (($x102 (= $x100 $x17)))
 (let (($x197 (=> $x14 $x102)))
 (let (($x164 (= ?x18 (_ bv0 32))))
 (let (($x152 (= $x144 $x164)))
 (let (($x118 (=> $x14 $x152)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x128))))
 (let (($x21 (= input.spec-%var-l-1.2.1.2.0 ?x9)))
 (let (($x131 (=> $x14 $x21)))
 (let (($x42 (= (_ bv0 32) ?x120)))
 (let ((?x82 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x176 (bvuge ?x82 (_ bv1 32))))
 (let (($x172 (= $x34 $x176)))
 (let (($x26 (=> $x94 $x172)))
 (let (($x95 (= false false)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x125 (and $x94 $x88)))
 (let (($x46 (=> $x125 $x95)))
 (let (($x59 (= ?x82 (_ bv0 32))))
 (let (($x165 (= $x88 $x59)))
 (let (($x167 (=> $x94 $x165)))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x136)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x75)))
 (let (($x114 (= input.spec-%var-l-1.2.0 ?x87)))
 (let (($x96 (=> $x94 $x114)))
 (let (($x157 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x91 (ite $x157 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x91 (_ bv1 32))))
 (let (($x92 (= $x94 $x104)))
 (let (($x103 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x106 (=> $x103 $x95)))
 (let (($x112 (= ?x91 (_ bv0 32))))
 (let (($x107 (= $x103 $x112)))
 (let (($x211 (and (and (and (and (and (and $x107 $x106) $x92) $x96) $x167) $x46) $x26)))
 (let (($x61 (and (and (and (and (and $x211 $x131) $x118) $x197) $x145) $x177)))
 (let (($x178 (= $x61 true)))
 (let ((?x121 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x154 (concat ?x29 (concat ?x54 ?x121)))))
 (let (($x126 (= input.dst.llvm-%l ?x129)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x105 (and $x38 $x126)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x81)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x148 $x79)))
 (let (($x149 (and $x162 $x119)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x74 $x149)))
 (let (($x115 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x62 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x115)))))))
 (let (($x161 (and (and (and $x62 true) $x70) $x105)))
 (let (($x101 (= $x161 true)))
 (let (($x212 (and $x101 $x178)))
 (let (($x5 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x210 (and $x5 $x212)))
 (let (($x192 (=> $x210 $x168)))
 (not $x192))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv536870915 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var591X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var588X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var588X.0 () (_ BitVec 32))
(declare-fun input.ind-%var588X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var591X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x198 (concat ?x218 (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv4 32))))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var591X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var591X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x209 (concat ?x202 ?x198))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x53 (= (_ bv0 32) input.ind-%var591X)))
 (let ((?x189 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x189 (_ bv1 32))))
 (let (($x243 (=> $x31 $x219)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var591X))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv2 32))) ?x190)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv3 32))) ?x187)))
 (let (($x25 (= ?x244 ?x244)))
 (let (($x13 (=> $x31 $x25)))
 (let (($x193 (= $x31 $x31)))
 (let (($x182 (= false false)))
 (let (($x155 (= ?x189 (_ bv0 32))))
 (let (($x194 (=> $x155 $x182)))
 (let (($x66 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x155 $x155)) $x194) $x193)))
 (let (($x76 (and (and $x66 $x13) $x243)))
 (let (($x170 (= input.ind-%var588X.2.1 input.ind-%var588X.2.1)))
 (let (($x30 (bvuge input.ind-%var588X.0 (_ bv1 32))))
 (let (($x214 (=> $x30 $x170)))
 (let (($x183 (= input.ind-%var588X.2.0 input.ind-%var588X.2.0)))
 (let (($x220 (=> $x30 $x183)))
 (let (($x139 (= $x30 $x30)))
 (let (($x192 (= input.ind-%var588X.0 (_ bv0 32))))
 (let (($x8 (=> $x192 $x182)))
 (let (($x124 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x192 $x192)) $x8)))
 (let (($x191 (and (and (and $x124 $x139) $x220) $x214)))
 (let (($x24 (and $x191 $x76)))
 (let (($x178 (not true)))
 (let (($x6 (or $x178 $x24)))
 (let (($x130 (and true $x6)))
 (let (($x140 (= $x130 true)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x23 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x120 (concat ?x98 (concat ?x135 ?x127))))
 (let ((?x131 (bvadd ?x120 (_ bv4 32))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem ?x131))))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv2 32))) ?x184))))
 (let (($x41 (= (_ bv0 32) ?x58)))
 (let ((?x163 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x163 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x152 (= $x18 $x164)))
 (let (($x46 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x104 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x172 (and $x104 $x46)))
 (let (($x118 (=> $x172 $x152)))
 (let (($x36 (= ?x163 (_ bv0 32))))
 (let (($x21 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x27 (= $x21 $x36)))
 (let (($x12 (=> $x172 $x27)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x137))))
 (let (($x128 (= input.spec-%var-l-1.2.1.2.0 ?x52)))
 (let (($x166 (=> $x172 $x128)))
 (let (($x42 (= (_ bv0 32) ?x120)))
 (let ((?x82 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (bvuge ?x82 (_ bv1 32))))
 (let (($x34 (= $x46 $x179)))
 (let (($x176 (=> $x104 $x34)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x104 $x88)))
 (let (($x125 (=> $x201 $x182)))
 (let (($x59 (= ?x82 (_ bv0 32))))
 (let (($x165 (= $x88 $x59)))
 (let (($x167 (=> $x104 $x165)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x136)))
 (let (($x96 (= input.spec-%var-l-1.2.0 ?x114)))
 (let (($x181 (=> $x104 $x96)))
 (let (($x112 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x107 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x107 (_ bv1 32))))
 (let (($x174 (= $x104 $x92)))
 (let (($x91 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x94 (=> $x91 $x182)))
 (let (($x95 (= ?x107 (_ bv0 32))))
 (let (($x106 (= $x91 $x95)))
 (let (($x11 (and (and (and (and (and (and $x106 $x94) $x174) $x181) $x167) $x125) $x176)))
 (let (($x50 (and (and (and $x11 $x166) $x12) $x118)))
 (let (($x113 (= $x50 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x147 (concat ?x54 (concat ?x39 ?x65)))))
 (let (($x126 (= input.dst.llvm-%l ?x129)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x105 (and $x64 $x126)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x81)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x148 $x79)))
 (let (($x149 (and $x162 $x119)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x133 $x149)))
 (let (($x60 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x74 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x60)))))))
 (let (($x116 (and (and (and $x74 true) $x70) $x105)))
 (let (($x103 (= $x116 true)))
 (let (($x177 (and $x103 $x113)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x61 (and $x134 $x177)))
 (let (($x35 (=> $x61 $x140)))
 (not $x35))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var591X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var588X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var588X.0 () (_ BitVec 32))
(declare-fun input.ind-%var588X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var591X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x198 (concat ?x218 (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv4 32))))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var591X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x209 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var591X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x209 (concat ?x202 ?x198))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x53 (= (_ bv0 32) input.ind-%var591X)))
 (let ((?x189 (ite $x53 (_ bv0 32) (_ bv1 32))))
 (let (($x31 (bvuge ?x189 (_ bv1 32))))
 (let (($x243 (=> $x31 $x219)))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var591X))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv2 32))) ?x190)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.ind-%var591X (_ bv3 32))) ?x187)))
 (let (($x25 (= ?x244 ?x244)))
 (let (($x13 (=> $x31 $x25)))
 (let (($x193 (= $x31 $x31)))
 (let (($x182 (= false false)))
 (let (($x155 (= ?x189 (_ bv0 32))))
 (let (($x194 (=> $x155 $x182)))
 (let (($x66 (and (and (and (= input.dst.llvm-%l (_ bv0 32)) (= $x155 $x155)) $x194) $x193)))
 (let (($x76 (and (and $x66 $x13) $x243)))
 (let (($x170 (= input.ind-%var588X.2.1 input.ind-%var588X.2.1)))
 (let (($x30 (bvuge input.ind-%var588X.0 (_ bv1 32))))
 (let (($x214 (=> $x30 $x170)))
 (let (($x183 (= input.ind-%var588X.2.0 input.ind-%var588X.2.0)))
 (let (($x220 (=> $x30 $x183)))
 (let (($x139 (= $x30 $x30)))
 (let (($x192 (= input.ind-%var588X.0 (_ bv0 32))))
 (let (($x8 (=> $x192 $x182)))
 (let (($x124 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x192 $x192)) $x8)))
 (let (($x191 (and (and (and $x124 $x139) $x220) $x214)))
 (let (($x24 (and $x191 $x76)))
 (let (($x178 (not true)))
 (let (($x6 (or $x178 $x24)))
 (let (($x130 (and true $x6)))
 (let (($x140 (= $x130 true)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x23 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x120 (concat ?x98 (concat ?x135 ?x127))))
 (let ((?x131 (bvadd ?x120 (_ bv4 32))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem ?x131))))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv2 32))) ?x184))))
 (let (($x41 (= (_ bv0 32) ?x58)))
 (let ((?x163 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x163 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x152 (= $x18 $x164)))
 (let (($x46 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x104 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x172 (and $x104 $x46)))
 (let (($x118 (=> $x172 $x152)))
 (let (($x36 (= ?x163 (_ bv0 32))))
 (let (($x21 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x27 (= $x21 $x36)))
 (let (($x12 (=> $x172 $x27)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv1 32))) (select input.dst.llvm-mem ?x120))))
 (let ((?x52 (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x120 (_ bv2 32))) ?x137))))
 (let (($x128 (= input.spec-%var-l-1.2.1.2.0 ?x52)))
 (let (($x166 (=> $x172 $x128)))
 (let (($x42 (= (_ bv0 32) ?x120)))
 (let ((?x82 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x179 (bvuge ?x82 (_ bv1 32))))
 (let (($x34 (= $x46 $x179)))
 (let (($x176 (=> $x104 $x34)))
 (let (($x88 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x104 $x88)))
 (let (($x125 (=> $x201 $x182)))
 (let (($x59 (= ?x82 (_ bv0 32))))
 (let (($x165 (= $x88 $x59)))
 (let (($x167 (=> $x104 $x165)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x78)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x136)))
 (let (($x96 (= input.spec-%var-l-1.2.0 ?x114)))
 (let (($x181 (=> $x104 $x96)))
 (let (($x112 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x107 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x107 (_ bv1 32))))
 (let (($x174 (= $x104 $x92)))
 (let (($x91 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x94 (=> $x91 $x182)))
 (let (($x95 (= ?x107 (_ bv0 32))))
 (let (($x106 (= $x91 $x95)))
 (let (($x11 (and (and (and (and (and (and $x106 $x94) $x174) $x181) $x167) $x125) $x176)))
 (let (($x50 (and (and (and $x11 $x166) $x12) $x118)))
 (let (($x113 (= $x50 true)))
 (let ((?x65 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x147 (concat ?x54 (concat ?x39 ?x65)))))
 (let (($x126 (= input.dst.llvm-%l ?x129)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x105 (and $x64 $x126)))
 (let ((?x81 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x81)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x79 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x148 $x79)))
 (let (($x149 (and $x162 $x119)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x133 $x149)))
 (let (($x60 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x74 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x60)))))))
 (let (($x116 (and (and (and $x74 true) $x70) $x105)))
 (let (($x103 (= $x116 true)))
 (let (($x177 (and $x103 $x113)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x61 (and $x134 $x177)))
 (let (($x35 (=> $x61 $x140)))
 (not $x35))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11000000000000000000000000000011)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_43)
(function @fun_43
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_43 #b11000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var591X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1073741824 32) (_ bv8 8)))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv8 32))
(define-fun input.ind-%var588X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var588X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var588X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1073741827 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x1b497f70)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
                     #xd4000007
                     #xd4)
              #xd4000003
              #xd4)
       #xd4000007
       #xd4))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xd4000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd4000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd4000000)
  (define-fun input.ind-%var591X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var588X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var588X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var588X.2.1 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var634X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var631X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var631X.0 () (_ BitVec 32))
(declare-fun input.ind-%var631X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var634X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x208 (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv4 32))))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var634X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var634X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x203 (concat ?x218 ?x202))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x37 (= (_ bv0 32) input.ind-%var634X)))
 (let ((?x194 (ite $x37 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x194 (_ bv1 32))))
 (let (($x243 (=> $x66 $x219)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var634X))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv2 32))) ?x185)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv3 32))) ?x190)))
 (let (($x13 (= ?x25 ?x25)))
 (let (($x109 (=> $x66 $x13)))
 (let (($x195 (= $x66 $x66)))
 (let (($x104 (= false false)))
 (let (($x43 (= ?x194 (_ bv0 32))))
 (let (($x193 (=> $x43 $x104)))
 (let (($x24 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x43 $x43)) $x193)))
 (let (($x140 (and (and (and $x24 $x195) $x109) $x243)))
 (let (($x170 (= input.ind-%var631X.2.1 input.ind-%var631X.2.1)))
 (let (($x216 (bvuge input.ind-%var631X.0 (_ bv1 32))))
 (let (($x214 (=> $x216 $x170)))
 (let (($x220 (= input.ind-%var631X.2.0 input.ind-%var631X.2.0)))
 (let (($x222 (=> $x216 $x220)))
 (let (($x180 (= $x216 $x216)))
 (let (($x124 (= input.ind-%var631X.0 (_ bv0 32))))
 (let (($x139 (=> $x124 $x104)))
 (let (($x223 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x124 $x124)) $x139)))
 (let (($x189 (and (and (and $x223 $x180) $x222) $x214)))
 (let (($x35 (and $x189 $x140)))
 (let (($x192 (not true)))
 (let (($x56 (or $x192 $x35)))
 (let (($x97 (and true $x56)))
 (let (($x5 (= $x97 true)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x158 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x42 (concat ?x120 (concat ?x90 ?x158))))
 (let ((?x72 (bvadd ?x42 (_ bv4 32))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x89))))
 (let (($x184 (= (_ bv0 32) ?x215)))
 (let ((?x171 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x27 (bvuge ?x171 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x12 (= $x36 $x27)))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x176 (and $x174 $x197)))
 (let (($x145 (=> $x176 $x12)))
 (let (($x58 (= ?x171 (_ bv0 32))))
 (let (($x166 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x41 (= $x166 $x58)))
 (let (($x163 (=> $x176 $x41)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x156))))
 (let (($x19 (= input.spec-%var-l-1.2.1.2.0 ?x137)))
 (let (($x52 (=> $x176 $x19)))
 (let (($x82 (= (_ bv0 32) ?x42)))
 (let ((?x59 (ite $x82 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x59 (_ bv1 32))))
 (let (($x179 (= $x197 $x46)))
 (let (($x34 (=> $x174 $x179)))
 (let (($x93 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x174 $x93)))
 (let (($x125 (=> $x201 $x104)))
 (let (($x165 (= ?x59 (_ bv0 32))))
 (let (($x167 (= $x93 $x165)))
 (let (($x102 (=> $x174 $x167)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x136)))
 (let (($x17 (= input.spec-%var-l-1.2.0 ?x181)))
 (let (($x143 (=> $x174 $x17)))
 (let (($x106 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x182 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x182 (_ bv1 32))))
 (let (($x83 (= $x174 $x100)))
 (let (($x95 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x92 (=> $x95 $x104)))
 (let (($x94 (= ?x182 (_ bv0 32))))
 (let (($x111 (= $x95 $x94)))
 (let (($x113 (and (and (and (and (and (and $x111 $x92) $x83) $x143) $x102) $x125) $x34)))
 (let (($x178 (and (and (and $x113 $x52) $x163) $x145)))
 (let (($x212 (= $x178 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x126 (concat ?x129 (concat ?x65 (concat ?x55 ?x147)))))
 (let (($x105 (= input.dst.llvm-%l ?x126)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x116 (and $x64 $x105)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x149 (= (_ bv0 32) ?x119)))
 (let ((?x79 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x162 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x79)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x67 $x162)))
 (let (($x70 (and $x81 $x149)))
 (let (($x10 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x101 (and $x10 $x70)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x148 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x62)))))))
 (let (($x91 (and (and (and $x148 true) $x101) $x116)))
 (let (($x112 (= $x91 true)))
 (let (($x210 (and $x112 $x212)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x168 (and $x134 $x210)))
 (let (($x16 (=> $x168 $x5)))
 (not $x16))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var634X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var631X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var631X.0 () (_ BitVec 32))
(declare-fun input.ind-%var631X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var634X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x202 (concat ?x208 (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv4 32))))))
 (let ((?x218 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var634X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var634X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x203 (concat ?x218 ?x202))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x37 (= (_ bv0 32) input.ind-%var634X)))
 (let ((?x194 (ite $x37 (_ bv0 32) (_ bv1 32))))
 (let (($x66 (bvuge ?x194 (_ bv1 32))))
 (let (($x243 (=> $x66 $x219)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var634X))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv2 32))) ?x185)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd input.ind-%var634X (_ bv3 32))) ?x190)))
 (let (($x13 (= ?x25 ?x25)))
 (let (($x109 (=> $x66 $x13)))
 (let (($x195 (= $x66 $x66)))
 (let (($x104 (= false false)))
 (let (($x43 (= ?x194 (_ bv0 32))))
 (let (($x193 (=> $x43 $x104)))
 (let (($x24 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x43 $x43)) $x193)))
 (let (($x140 (and (and (and $x24 $x195) $x109) $x243)))
 (let (($x170 (= input.ind-%var631X.2.1 input.ind-%var631X.2.1)))
 (let (($x216 (bvuge input.ind-%var631X.0 (_ bv1 32))))
 (let (($x214 (=> $x216 $x170)))
 (let (($x220 (= input.ind-%var631X.2.0 input.ind-%var631X.2.0)))
 (let (($x222 (=> $x216 $x220)))
 (let (($x180 (= $x216 $x216)))
 (let (($x124 (= input.ind-%var631X.0 (_ bv0 32))))
 (let (($x139 (=> $x124 $x104)))
 (let (($x223 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x124 $x124)) $x139)))
 (let (($x189 (and (and (and $x223 $x180) $x222) $x214)))
 (let (($x35 (and $x189 $x140)))
 (let (($x192 (not true)))
 (let (($x56 (or $x192 $x35)))
 (let (($x97 (and true $x56)))
 (let (($x5 (= $x97 true)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x158 (concat ?x135 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x42 (concat ?x120 (concat ?x90 ?x158))))
 (let ((?x72 (bvadd ?x42 (_ bv4 32))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x89))))
 (let (($x184 (= (_ bv0 32) ?x215)))
 (let ((?x171 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x27 (bvuge ?x171 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x12 (= $x36 $x27)))
 (let (($x197 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x176 (and $x174 $x197)))
 (let (($x145 (=> $x176 $x12)))
 (let (($x58 (= ?x171 (_ bv0 32))))
 (let (($x166 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x41 (= $x166 $x58)))
 (let (($x163 (=> $x176 $x41)))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x156))))
 (let (($x19 (= input.spec-%var-l-1.2.1.2.0 ?x137)))
 (let (($x52 (=> $x176 $x19)))
 (let (($x82 (= (_ bv0 32) ?x42)))
 (let ((?x59 (ite $x82 (_ bv0 32) (_ bv1 32))))
 (let (($x46 (bvuge ?x59 (_ bv1 32))))
 (let (($x179 (= $x197 $x46)))
 (let (($x34 (=> $x174 $x179)))
 (let (($x93 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x174 $x93)))
 (let (($x125 (=> $x201 $x104)))
 (let (($x165 (= ?x59 (_ bv0 32))))
 (let (($x167 (= $x93 $x165)))
 (let (($x102 (=> $x174 $x167)))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x84)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x136)))
 (let (($x17 (= input.spec-%var-l-1.2.0 ?x181)))
 (let (($x143 (=> $x174 $x17)))
 (let (($x106 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x182 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x182 (_ bv1 32))))
 (let (($x83 (= $x174 $x100)))
 (let (($x95 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x92 (=> $x95 $x104)))
 (let (($x94 (= ?x182 (_ bv0 32))))
 (let (($x111 (= $x95 $x94)))
 (let (($x113 (and (and (and (and (and (and $x111 $x92) $x83) $x143) $x102) $x125) $x34)))
 (let (($x178 (and (and (and $x113 $x52) $x163) $x145)))
 (let (($x212 (= $x178 true)))
 (let ((?x147 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x126 (concat ?x129 (concat ?x65 (concat ?x55 ?x147)))))
 (let (($x105 (= input.dst.llvm-%l ?x126)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x116 (and $x64 $x105)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x149 (= (_ bv0 32) ?x119)))
 (let ((?x79 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x162 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x79)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x67 $x162)))
 (let (($x70 (and $x81 $x149)))
 (let (($x10 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x101 (and $x10 $x70)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x148 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x132 $x62)))))))
 (let (($x91 (and (and (and $x148 true) $x101) $x116)))
 (let (($x112 (= $x91 true)))
 (let (($x210 (and $x112 $x212)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x168 (and $x134 $x210)))
 (let (($x16 (=> $x168 $x5)))
 (not $x16))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var659X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var656X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var656X.0 () (_ BitVec 32))
(declare-fun input.ind-%var656X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var659X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x206 (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv4 32))))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var659X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var659X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x207 (concat ?x208 ?x218))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x76 (= (_ bv0 32) input.ind-%var659X)))
 (let ((?x193 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x193 (_ bv1 32))))
 (let (($x243 (=> $x6 $x219)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var659X))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv2 32))) ?x188)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv3 32))) ?x185)))
 (let (($x109 (= ?x13 ?x13)))
 (let (($x130 (=> $x6 $x109)))
 (let (($x187 (= $x6 $x6)))
 (let (($x174 (= false false)))
 (let (($x24 (= ?x193 (_ bv0 32))))
 (let (($x195 (=> $x24 $x174)))
 (let (($x35 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x24 $x24)) $x195)))
 (let (($x5 (and (and (and $x35 $x187) $x130) $x243)))
 (let (($x170 (= input.ind-%var656X.2.1 input.ind-%var656X.2.1)))
 (let (($x40 (bvuge input.ind-%var656X.0 (_ bv1 32))))
 (let (($x214 (=> $x40 $x170)))
 (let (($x222 (= input.ind-%var656X.2.0 input.ind-%var656X.2.0)))
 (let (($x53 (=> $x40 $x222)))
 (let (($x183 (= $x40 $x40)))
 (let (($x223 (= input.ind-%var656X.0 (_ bv0 32))))
 (let (($x180 (=> $x223 $x174)))
 (let (($x155 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x223 $x223)) $x180)))
 (let (($x194 (and (and (and $x155 $x183) $x53) $x214)))
 (let (($x16 (and $x194 $x5)))
 (let (($x124 (not true)))
 (let (($x45 (or $x124 $x16)))
 (let (($x87 (and true $x45)))
 (let (($x63 (= $x87 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x99 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x82 (concat ?x42 (concat ?x98 ?x99))))
 (let ((?x177 (bvadd ?x82 (_ bv4 32))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv1 32))) (select input.dst.llvm-mem ?x177))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv2 32))) ?x68))))
 (let (($x89 (= (_ bv0 32) ?x9)))
 (let ((?x175 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x41 (bvuge ?x175 (_ bv1 32))))
 (let (($x58 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x163 (= $x58 $x41)))
 (let (($x50 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x83 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x34 (and $x83 $x50)))
 (let (($x61 (=> $x34 $x163)))
 (let (($x215 (= ?x175 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x52 $x215)))
 (let (($x171 (=> $x34 $x184)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv1 32))) (select input.dst.llvm-mem ?x82))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv2 32))) ?x211))))
 (let (($x14 (= input.spec-%var-l-1.2.1.2.0 ?x156)))
 (let (($x137 (=> $x34 $x14)))
 (let (($x59 (= (_ bv0 32) ?x82)))
 (let ((?x165 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x197 (bvuge ?x165 (_ bv1 32))))
 (let (($x46 (= $x50 $x197)))
 (let (($x179 (=> $x83 $x46)))
 (let (($x150 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x83 $x150)))
 (let (($x125 (=> $x201 $x174)))
 (let (($x167 (= ?x165 (_ bv0 32))))
 (let (($x102 (= $x150 $x167)))
 (let (($x118 (=> $x83 $x102)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x136)))
 (let (($x152 (= input.spec-%var-l-1.2.0 ?x143)))
 (let (($x88 (=> $x83 $x152)))
 (let (($x111 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x104 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x104 (_ bv1 32))))
 (let (($x75 (= $x83 $x164)))
 (let (($x94 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x100 (=> $x94 $x174)))
 (let (($x92 (= ?x104 (_ bv0 32))))
 (let (($x18 (= $x94 $x92)))
 (let (($x212 (and (and (and (and (and (and $x18 $x100) $x75) $x88) $x118) $x125) $x179)))
 (let (($x192 (and (and (and $x212 $x137) $x171) $x61)))
 (let (($x169 (= $x192 true)))
 (let ((?x129 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x105 (concat ?x126 (concat ?x147 (concat ?x39 ?x129)))))
 (let (($x116 (= input.dst.llvm-%l ?x105)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x91 (and $x64 $x116)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x149)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x81 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x162)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x71 $x81)))
 (let (($x101 (and $x119 $x70)))
 (let (($x123 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x123 $x101)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x67 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x161)))))))
 (let (($x95 (and (and (and $x67 true) $x157) $x91)))
 (let (($x106 (= $x95 true)))
 (let (($x199 (and $x106 $x169)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x8 (and $x134 $x199)))
 (let (($x47 (=> $x8 $x63)))
 (not $x47))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var659X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var656X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var656X.0 () (_ BitVec 32))
(declare-fun input.ind-%var656X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var659X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x206 (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv4 32))))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var659X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var659X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x242 (concat ?x207 (concat ?x208 ?x218))))
 (let (($x219 (= ?x242 ?x242)))
 (let (($x76 (= (_ bv0 32) input.ind-%var659X)))
 (let ((?x193 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x6 (bvuge ?x193 (_ bv1 32))))
 (let (($x243 (=> $x6 $x219)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var659X))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv2 32))) ?x188)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.ind-%var659X (_ bv3 32))) ?x185)))
 (let (($x109 (= ?x13 ?x13)))
 (let (($x130 (=> $x6 $x109)))
 (let (($x187 (= $x6 $x6)))
 (let (($x174 (= false false)))
 (let (($x24 (= ?x193 (_ bv0 32))))
 (let (($x195 (=> $x24 $x174)))
 (let (($x35 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x24 $x24)) $x195)))
 (let (($x5 (and (and (and $x35 $x187) $x130) $x243)))
 (let (($x170 (= input.ind-%var656X.2.1 input.ind-%var656X.2.1)))
 (let (($x40 (bvuge input.ind-%var656X.0 (_ bv1 32))))
 (let (($x214 (=> $x40 $x170)))
 (let (($x222 (= input.ind-%var656X.2.0 input.ind-%var656X.2.0)))
 (let (($x53 (=> $x40 $x222)))
 (let (($x183 (= $x40 $x40)))
 (let (($x223 (= input.ind-%var656X.0 (_ bv0 32))))
 (let (($x180 (=> $x223 $x174)))
 (let (($x155 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x223 $x223)) $x180)))
 (let (($x194 (and (and (and $x155 $x183) $x53) $x214)))
 (let (($x16 (and $x194 $x5)))
 (let (($x124 (not true)))
 (let (($x45 (or $x124 $x16)))
 (let (($x87 (and true $x45)))
 (let (($x63 (= $x87 true)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x99 (concat ?x90 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x82 (concat ?x42 (concat ?x98 ?x99))))
 (let ((?x177 (bvadd ?x82 (_ bv4 32))))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv1 32))) (select input.dst.llvm-mem ?x177))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x177 (_ bv2 32))) ?x68))))
 (let (($x89 (= (_ bv0 32) ?x9)))
 (let ((?x175 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x41 (bvuge ?x175 (_ bv1 32))))
 (let (($x58 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x163 (= $x58 $x41)))
 (let (($x50 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x83 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x34 (and $x83 $x50)))
 (let (($x61 (=> $x34 $x163)))
 (let (($x215 (= ?x175 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x52 $x215)))
 (let (($x171 (=> $x34 $x184)))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv1 32))) (select input.dst.llvm-mem ?x82))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x82 (_ bv2 32))) ?x211))))
 (let (($x14 (= input.spec-%var-l-1.2.1.2.0 ?x156)))
 (let (($x137 (=> $x34 $x14)))
 (let (($x59 (= (_ bv0 32) ?x82)))
 (let ((?x165 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x197 (bvuge ?x165 (_ bv1 32))))
 (let (($x46 (= $x50 $x197)))
 (let (($x179 (=> $x83 $x46)))
 (let (($x150 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x83 $x150)))
 (let (($x125 (=> $x201 $x174)))
 (let (($x167 (= ?x165 (_ bv0 32))))
 (let (($x102 (= $x150 $x167)))
 (let (($x118 (=> $x83 $x102)))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x136 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x77)))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x136)))
 (let (($x152 (= input.spec-%var-l-1.2.0 ?x143)))
 (let (($x88 (=> $x83 $x152)))
 (let (($x111 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x104 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x104 (_ bv1 32))))
 (let (($x75 (= $x83 $x164)))
 (let (($x94 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x100 (=> $x94 $x174)))
 (let (($x92 (= ?x104 (_ bv0 32))))
 (let (($x18 (= $x94 $x92)))
 (let (($x212 (and (and (and (and (and (and $x18 $x100) $x75) $x88) $x118) $x125) $x179)))
 (let (($x192 (and (and (and $x212 $x137) $x171) $x61)))
 (let (($x169 (= $x192 true)))
 (let ((?x129 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x126 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x105 (concat ?x126 (concat ?x147 (concat ?x39 ?x129)))))
 (let (($x116 (= input.dst.llvm-%l ?x105)))
 (let (($x64 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x91 (and $x64 $x116)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x149)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x81 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x162)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x71 $x81)))
 (let (($x101 (and $x119 $x70)))
 (let (($x123 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x123 $x101)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x67 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x161)))))))
 (let (($x95 (and (and (and $x67 true) $x157) $x91)))
 (let (($x106 (= $x95 true)))
 (let (($x199 (and $x106 $x169)))
 (let (($x134 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x8 (and $x134 $x199)))
 (let (($x47 (=> $x8 $x63)))
 (not $x47))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x126 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x29 (not $x126)))
 (let (($x259 (= $x29 false)))
 (let (($x260 (= $x259 true)))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x209))))
 (let ((?x228 (bvadd ?x205 (_ bv4 32))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x234))))
 (let (($x239 (= (_ bv0 32) ?x238)))
 (let ((?x240 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x240 (_ bv1 32))))
 (let (($x53 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x53 $x248)))
 (let (($x144 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x120 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (and $x120 $x144)))
 (let (($x250 (=> $x128 $x249)))
 (let (($x241 (= ?x240 (_ bv0 32))))
 (let (($x169 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x169 $x241)))
 (let (($x247 (=> $x128 $x246)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x33))))
 (let (($x227 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x245 (=> $x128 $x227)))
 (let (($x242 (= (_ bv0 32) ?x205)))
 (let ((?x219 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x45 (bvuge ?x219 (_ bv1 32))))
 (let (($x87 (= $x144 $x45)))
 (let (($x63 (=> $x120 $x87)))
 (let (($x243 (= ?x219 (_ bv0 32))))
 (let (($x113 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x5 (= $x113 $x243)))
 (let (($x16 (=> $x120 $x5)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x109 (concat (select input.dst.llvm-mem ?x54) (concat ?x188 (concat ?x186 ?x196)))))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x109)))
 (let (($x97 (=> $x120 $x130)))
 (let ((?x6 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x6 (_ bv0 32))))
 (let (($x151 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x25 (= $x151 $x190)))
 (let (($x187 (bvuge ?x6 (_ bv1 32))))
 (let (($x56 (= $x120 $x187)))
 (let (($x23 (= false false)))
 (let (($x21 (and $x120 $x113)))
 (let (($x131 (=> $x21 $x23)))
 (let (($x90 (=> $x151 $x23)))
 (let (($x44 (and (and (and (and (and (and $x90 $x131) $x56) $x25) $x97) $x16) $x63)))
 (let (($x255 (and (and (and $x44 $x245) $x247) $x250)))
 (let (($x256 (= $x255 true)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x11 (concat ?x138 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x14 (concat ?x156 (concat ?x176 ?x11))))
 (let ((?x199 (bvadd ?x14 (_ bv4 32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x199 (_ bv1 32))) (select input.dst.llvm-mem ?x199))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x199 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x199 (_ bv2 32))) ?x191))))
 (let (($x40 (= (_ bv0 32) ?x155)))
 (let ((?x183 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x37 (bvuge ?x183 (_ bv1 32))))
 (let (($x204 (= $x53 $x37)))
 (let (($x170 (=> $x128 $x204)))
 (let (($x141 (= ?x183 (_ bv0 32))))
 (let (($x220 (= $x169 $x141)))
 (let (($x222 (=> $x128 $x220)))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv1 32))) (select input.dst.llvm-mem ?x14))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv2 32))) ?x175))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.0 ?x41)))
 (let (($x61 (=> $x128 $x163)))
 (let (($x137 (= (_ bv0 32) ?x14)))
 (let ((?x210 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x210 (_ bv1 32))))
 (let (($x166 (= $x144 $x48)))
 (let (($x72 (=> $x120 $x166)))
 (let (($x19 (= ?x210 (_ bv0 32))))
 (let (($x52 (= $x113 $x19)))
 (let (($x177 (=> $x120 $x52)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x118)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x178)))
 (let (($x179 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x212 (=> $x120 $x179)))
 (let (($x127 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x42 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x42 (_ bv1 32))))
 (let (($x158 (= $x120 $x99)))
 (let (($x76 (and (and (and (and (and (= $x151 (= ?x42 (_ bv0 32))) $x90) $x158) $x212) $x177) $x131)))
 (let (($x140 (and (and (and (and $x76 $x72) $x61) $x222) $x170)))
 (let (($x195 (= $x140 true)))
 (let ((?x152 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x88 (= (_ bv0 3) ?x152)))
 (let (($x12 (= $x88 true)))
 (let ((?x36 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x17 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x36 (_ bv3 32)))))
 (let (($x77 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x17)))))))
 (let (($x83 (=> (and $x29 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x181 $x17)))))))
 (let (($x164 (= $x83 true)))
 (let (($x18 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x174 (= $x18 true)))
 (let (($x116 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x111 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x154 (=> (and $x29 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32)))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x39 (= $x154 true)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x107 (= (_ bv0 32) ?x119)))
 (let ((?x79 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x162 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x79)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x123 $x162)))
 (let (($x85 (and $x81 $x107)))
 (let (($x70 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x70 $x85)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x62 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x160 $x157)))))))
 (let (($x7 (and $x62 $x69)))
 (let (($x64 (= $x7 true)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x132 (= $x96 true)))
 (let (($x38 (and $x132 $x64)))
 (let (($x104 (and $x38 $x39)))
 (let (($x100 (and $x104 $x174)))
 (let (($x136 (and $x100 $x164)))
 (let (($x93 (and $x136 $x12)))
 (let (($x35 (and $x93 $x195)))
 (let (($x257 (and $x35 $x256)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x258 (and $x108 $x257)))
 (let (($x261 (=> $x258 $x260)))
 (not $x261))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x126 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x29 (not $x126)))
 (let (($x259 (= $x29 false)))
 (let (($x260 (= $x259 true)))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x209))))
 (let ((?x228 (bvadd ?x205 (_ bv4 32))))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x234))))
 (let (($x239 (= (_ bv0 32) ?x238)))
 (let ((?x240 (ite $x239 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x240 (_ bv1 32))))
 (let (($x53 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x53 $x248)))
 (let (($x144 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x120 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x128 (and $x120 $x144)))
 (let (($x250 (=> $x128 $x249)))
 (let (($x241 (= ?x240 (_ bv0 32))))
 (let (($x169 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x169 $x241)))
 (let (($x247 (=> $x128 $x246)))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv1 32))) (select input.dst.llvm-mem ?x205))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x205 (_ bv2 32))) ?x33))))
 (let (($x227 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x245 (=> $x128 $x227)))
 (let (($x242 (= (_ bv0 32) ?x205)))
 (let ((?x219 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x45 (bvuge ?x219 (_ bv1 32))))
 (let (($x87 (= $x144 $x45)))
 (let (($x63 (=> $x120 $x87)))
 (let (($x243 (= ?x219 (_ bv0 32))))
 (let (($x113 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x5 (= $x113 $x243)))
 (let (($x16 (=> $x120 $x5)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x54 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x109 (concat (select input.dst.llvm-mem ?x54) (concat ?x188 (concat ?x186 ?x196)))))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x109)))
 (let (($x97 (=> $x120 $x130)))
 (let ((?x6 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (= ?x6 (_ bv0 32))))
 (let (($x151 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x25 (= $x151 $x190)))
 (let (($x187 (bvuge ?x6 (_ bv1 32))))
 (let (($x56 (= $x120 $x187)))
 (let (($x23 (= false false)))
 (let (($x21 (and $x120 $x113)))
 (let (($x131 (=> $x21 $x23)))
 (let (($x90 (=> $x151 $x23)))
 (let (($x44 (and (and (and (and (and (and $x90 $x131) $x56) $x25) $x97) $x16) $x63)))
 (let (($x255 (and (and (and $x44 $x245) $x247) $x250)))
 (let (($x256 (= $x255 true)))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x11 (concat ?x138 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x14 (concat ?x156 (concat ?x176 ?x11))))
 (let ((?x199 (bvadd ?x14 (_ bv4 32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x199 (_ bv1 32))) (select input.dst.llvm-mem ?x199))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x199 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x199 (_ bv2 32))) ?x191))))
 (let (($x40 (= (_ bv0 32) ?x155)))
 (let ((?x183 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x37 (bvuge ?x183 (_ bv1 32))))
 (let (($x204 (= $x53 $x37)))
 (let (($x170 (=> $x128 $x204)))
 (let (($x141 (= ?x183 (_ bv0 32))))
 (let (($x220 (= $x169 $x141)))
 (let (($x222 (=> $x128 $x220)))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv1 32))) (select input.dst.llvm-mem ?x14))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x14 (_ bv2 32))) ?x175))))
 (let (($x163 (= input.spec-%var-l-1.2.1.2.0 ?x41)))
 (let (($x61 (=> $x128 $x163)))
 (let (($x137 (= (_ bv0 32) ?x14)))
 (let ((?x210 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (bvuge ?x210 (_ bv1 32))))
 (let (($x166 (= $x144 $x48)))
 (let (($x72 (=> $x120 $x166)))
 (let (($x19 (= ?x210 (_ bv0 32))))
 (let (($x52 (= $x113 $x19)))
 (let (($x177 (=> $x120 $x52)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x118)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x178)))
 (let (($x179 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x212 (=> $x120 $x179)))
 (let (($x127 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x42 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x99 (bvuge ?x42 (_ bv1 32))))
 (let (($x158 (= $x120 $x99)))
 (let (($x76 (and (and (and (and (and (= $x151 (= ?x42 (_ bv0 32))) $x90) $x158) $x212) $x177) $x131)))
 (let (($x140 (and (and (and (and $x76 $x72) $x61) $x222) $x170)))
 (let (($x195 (= $x140 true)))
 (let ((?x152 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x88 (= (_ bv0 3) ?x152)))
 (let (($x12 (= $x88 true)))
 (let ((?x36 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x17 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x36 (_ bv3 32)))))
 (let (($x77 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x17)))))))
 (let (($x83 (=> (and $x29 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x181 $x17)))))))
 (let (($x164 (= $x83 true)))
 (let (($x18 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x174 (= $x18 true)))
 (let (($x116 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x111 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x154 (=> (and $x29 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32)))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x39 (= $x154 true)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x107 (= (_ bv0 32) ?x119)))
 (let ((?x79 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x162 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x79)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x123 $x162)))
 (let (($x85 (and $x81 $x107)))
 (let (($x70 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x70 $x85)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x62 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x160 $x157)))))))
 (let (($x7 (and $x62 $x69)))
 (let (($x64 (= $x7 true)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x132 (= $x96 true)))
 (let (($x38 (and $x132 $x64)))
 (let (($x104 (and $x38 $x39)))
 (let (($x100 (and $x104 $x174)))
 (let (($x136 (and $x100 $x164)))
 (let (($x93 (and $x136 $x12)))
 (let (($x35 (and $x93 $x195)))
 (let (($x257 (and $x35 $x256)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x258 (and $x108 $x257)))
 (let (($x261 (=> $x258 $x260)))
 (not $x261))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10011001010001001000100100110000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00010100101000010010000000011011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00010100101000010010000000011000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00010100101000010010000000011000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_50)
(function @fun_50
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv256 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0ae9685c)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x30000008)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x1a1a1a1a)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x30000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x30000001
                                #x1a)
                         #x3000000a
                         #x1a)
                  #x3000000b
                  #x98)))
(let ((a!2 (store (store (store (store a!1 #x1a121a1f #x1a) #x30000006 #x12)
                         #x30000004
                         #x1a)
                  #x30000007
                  #x1a)))
(let ((a!3 (store (store (store (store a!2 #x1a121a1d #x1a) #x30000008 #x1a)
                         #x3000000b
                         #x98)
                  #x3000000c
                  #x07)))
(let ((a!4 (store (store (store (store a!3 #x30000003 #x98) #x3000000c #x07)
                         #x3000000f
                         #x30)
                  #x30000005
                  #x1a)))
(let ((a!5 (store (store (store (store a!4 #x30000009 #x1a) #x30000008 #x1a)
                         #x1a121a20
                         #x94)
                  #x30000002
                  #x1a)))
(let ((a!6 (store (store (store (store a!5 #x1a121a1a #x1a) #x30000009 #x1a)
                         #x30000000
                         #x1a)
                  #x1a121a1c
                  #x1a)))
  (store (store (store (store a!6 #x1a121a1b #x1a) #x30000007 #x1a)
                #x1a121a1e
                #x1a)
         #x3000000a
         #x1a))))))))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x981a1a1a)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0ae9685c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0ae9685f)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x112 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x115 (not $x112)))
 (let (($x267 (= $x115 false)))
 (let (($x268 (= $x267 true)))
 (let ((?x38 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x209))))
 (let ((?x232 (bvadd ?x5 (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv1 32))) (select input.dst.llvm-mem ?x232))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv2 32))) ?x237))))
 (let (($x240 (= (_ bv0 32) ?x239)))
 (let ((?x241 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x241 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x40 $x248)))
 (let (($x21 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x99 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x48 (and $x99 $x21)))
 (let (($x250 (=> $x48 $x249)))
 (let (($x246 (= ?x241 (_ bv0 32))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x247 (= $x41 $x246)))
 (let (($x254 (=> $x48 $x247)))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x122))))
 (let (($x253 (= input.spec-%var-l-1.2.1.2.0 ?x245)))
 (let (($x228 (=> $x48 $x253)))
 (let (($x16 (= (_ bv0 32) ?x5)))
 (let ((?x73 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x73 (_ bv1 32))))
 (let (($x224 (= $x21 $x44)))
 (let (($x225 (=> $x99 $x224)))
 (let (($x45 (= ?x73 (_ bv0 32))))
 (let (($x34 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x87 (= $x34 $x45)))
 (let (($x63 (=> $x99 $x87)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x126 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x218 (concat (select input.dst.llvm-mem ?x126) (concat ?x97 (concat ?x185 ?x196)))))
 (let (($x208 (= input.spec-%var-l-1.2.0 ?x218)))
 (let (($x203 (=> $x99 $x208)))
 (let ((?x13 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x13 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x186 (= $x127 $x217)))
 (let (($x244 (bvuge ?x13 (_ bv1 32))))
 (let (($x188 (= $x99 $x244)))
 (let (($x53 (and $x48 $x41)))
 (let (($x37 (not $x53)))
 (let (($x222 (and $x48 $x40)))
 (let (($x66 (not $x222)))
 (let (($x214 (= false false)))
 (let (($x177 (and $x99 $x34)))
 (let (($x31 (=> $x177 $x214)))
 (let (($x120 (=> $x127 $x214)))
 (let (($x260 (and (and (and (and (and (and $x120 $x31) $x66) $x37) $x188) $x186) $x203)))
 (let (($x263 (and (and (and (and (and $x260 $x63) $x225) $x228) $x254) $x250)))
 (let (($x264 (= $x263 true)))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x32 (concat ?x156 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x11 (concat ?x86 ?x32))))
 (let ((?x163 (bvadd ?x211 (_ bv4 32))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x169))))
 (let (($x30 (= (_ bv0 32) ?x124)))
 (let ((?x8 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x8 (_ bv1 32))))
 (let (($x141 (= $x40 $x183)))
 (let (($x220 (=> $x48 $x141)))
 (let (($x191 (= ?x8 (_ bv0 32))))
 (let (($x216 (= $x41 $x191)))
 (let (($x155 (=> $x48 $x216)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x68))))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.0 ?x89)))
 (let (($x175 (=> $x48 $x159)))
 (let (($x14 (= (_ bv0 32) ?x211)))
 (let ((?x137 (ite $x14 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x137 (_ bv1 32))))
 (let (($x76 (= $x21 $x131)))
 (let (($x144 (=> $x99 $x76)))
 (let (($x210 (= ?x137 (_ bv0 32))))
 (let (($x19 (= $x34 $x210)))
 (let (($x52 (=> $x99 $x19)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x201)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x165)))
 (let (($x179 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x212 (=> $x99 $x179)))
 (let (($x135 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x98 (ite $x135 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (bvuge ?x98 (_ bv1 32))))
 (let (($x194 (= $x99 $x158)))
 (let (($x35 (and (and (and (and (and (= $x127 (= ?x98 (_ bv0 32))) $x120) $x194) $x212) $x52) $x31)))
 (let (($x190 (and (and (and (and (and (and $x35 $x144) $x175) $x155) $x220) $x66) $x37)))
 (let (($x25 (= $x190 true)))
 (let ((?x12 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x93 (= (_ bv0 3) ?x12)))
 (let (($x150 (= $x93 true)))
 (let ((?x27 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x78 (bvugt ?x27 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x27 (_ bv3 32)))))
 (let (($x143 (=> (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x78)))))))
 (let (($x117 (=> (and $x115 (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x84 $x78)))))))
 (let (($x114 (= $x117 true)))
 (let (($x100 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x36 (= $x100 true)))
 (let (($x106 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x126)))
 (let (($x92 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32))) (or false (or false (and true (or $x95 $x106)))))))
 (let (($x7 (=> (and $x115 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32)))) (or false (or false (and true (or $x95 $x106)))))))
 (let (($x64 (= $x7 true)))
 (let ((?x110 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x110)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x96 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x162)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (and $x79 $x96)))
 (let (($x74 (and $x132 $x81)))
 (let (($x65 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (and $x65 $x74)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x54 $x133)))))))
 (let (($x103 (and $x71 $x51)))
 (let (($x119 (= $x103 true)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (= $x108 true)))
 (let (($x107 (and $x134 $x119)))
 (let (($x18 (and $x107 $x64)))
 (let (($x75 (and $x18 $x36)))
 (let (($x152 (and $x75 $x114)))
 (let (($x151 (and $x152 $x150)))
 (let (($x20 (and $x151 $x25)))
 (let (($x265 (and $x20 $x264)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x266 (and $x10 $x265)))
 (let (($x269 (=> $x266 $x268)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x112 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x115 (not $x112)))
 (let (($x267 (= $x115 false)))
 (let (($x268 (= $x267 true)))
 (let ((?x38 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv1 32))) (select input.dst.llvm-mem ?x38))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x38 (_ bv2 32))) ?x209))))
 (let ((?x232 (bvadd ?x5 (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv1 32))) (select input.dst.llvm-mem ?x232))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv2 32))) ?x237))))
 (let (($x240 (= (_ bv0 32) ?x239)))
 (let ((?x241 (ite $x240 (_ bv0 32) (_ bv1 32))))
 (let (($x248 (bvuge ?x241 (_ bv1 32))))
 (let (($x40 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x249 (= $x40 $x248)))
 (let (($x21 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x99 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x48 (and $x99 $x21)))
 (let (($x250 (=> $x48 $x249)))
 (let (($x246 (= ?x241 (_ bv0 32))))
 (let (($x41 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x247 (= $x41 $x246)))
 (let (($x254 (=> $x48 $x247)))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x122))))
 (let (($x253 (= input.spec-%var-l-1.2.1.2.0 ?x245)))
 (let (($x228 (=> $x48 $x253)))
 (let (($x16 (= (_ bv0 32) ?x5)))
 (let ((?x73 (ite $x16 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x73 (_ bv1 32))))
 (let (($x224 (= $x21 $x44)))
 (let (($x225 (=> $x99 $x224)))
 (let (($x45 (= ?x73 (_ bv0 32))))
 (let (($x34 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x87 (= $x34 $x45)))
 (let (($x63 (=> $x99 $x87)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x126 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x218 (concat (select input.dst.llvm-mem ?x126) (concat ?x97 (concat ?x185 ?x196)))))
 (let (($x208 (= input.spec-%var-l-1.2.0 ?x218)))
 (let (($x203 (=> $x99 $x208)))
 (let ((?x13 (ite $x112 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (= ?x13 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x186 (= $x127 $x217)))
 (let (($x244 (bvuge ?x13 (_ bv1 32))))
 (let (($x188 (= $x99 $x244)))
 (let (($x53 (and $x48 $x41)))
 (let (($x37 (not $x53)))
 (let (($x222 (and $x48 $x40)))
 (let (($x66 (not $x222)))
 (let (($x214 (= false false)))
 (let (($x177 (and $x99 $x34)))
 (let (($x31 (=> $x177 $x214)))
 (let (($x120 (=> $x127 $x214)))
 (let (($x260 (and (and (and (and (and (and $x120 $x31) $x66) $x37) $x188) $x186) $x203)))
 (let (($x263 (and (and (and (and (and $x260 $x63) $x225) $x228) $x254) $x250)))
 (let (($x264 (= $x263 true)))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x32 (concat ?x156 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x211 (concat ?x11 (concat ?x86 ?x32))))
 (let ((?x163 (bvadd ?x211 (_ bv4 32))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x169))))
 (let (($x30 (= (_ bv0 32) ?x124)))
 (let ((?x8 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x183 (bvuge ?x8 (_ bv1 32))))
 (let (($x141 (= $x40 $x183)))
 (let (($x220 (=> $x48 $x141)))
 (let (($x191 (= ?x8 (_ bv0 32))))
 (let (($x216 (= $x41 $x191)))
 (let (($x155 (=> $x48 $x216)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x89 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x68))))
 (let (($x159 (= input.spec-%var-l-1.2.1.2.0 ?x89)))
 (let (($x175 (=> $x48 $x159)))
 (let (($x14 (= (_ bv0 32) ?x211)))
 (let ((?x137 (ite $x14 (_ bv0 32) (_ bv1 32))))
 (let (($x131 (bvuge ?x137 (_ bv1 32))))
 (let (($x76 (= $x21 $x131)))
 (let (($x144 (=> $x99 $x76)))
 (let (($x210 (= ?x137 (_ bv0 32))))
 (let (($x19 (= $x34 $x210)))
 (let (($x52 (=> $x99 $x19)))
 (let ((?x201 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x165 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x201)))
 (let ((?x46 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x165)))
 (let (($x179 (= input.spec-%var-l-1.2.0 ?x46)))
 (let (($x212 (=> $x99 $x179)))
 (let (($x135 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x98 (ite $x135 (_ bv0 32) (_ bv1 32))))
 (let (($x158 (bvuge ?x98 (_ bv1 32))))
 (let (($x194 (= $x99 $x158)))
 (let (($x35 (and (and (and (and (and (= $x127 (= ?x98 (_ bv0 32))) $x120) $x194) $x212) $x52) $x31)))
 (let (($x190 (and (and (and (and (and (and $x35 $x144) $x175) $x155) $x220) $x66) $x37)))
 (let (($x25 (= $x190 true)))
 (let ((?x12 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x93 (= (_ bv0 3) ?x12)))
 (let (($x150 (= $x93 true)))
 (let ((?x27 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x78 (bvugt ?x27 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x27 (_ bv3 32)))))
 (let (($x143 (=> (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x84 $x78)))))))
 (let (($x117 (=> (and $x115 (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x84 $x78)))))))
 (let (($x114 (= $x117 true)))
 (let (($x100 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x36 (= $x100 true)))
 (let (($x106 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x126)))
 (let (($x92 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32))) (or false (or false (and true (or $x95 $x106)))))))
 (let (($x7 (=> (and $x115 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x38 (_ bv1 32)))) (or false (or false (and true (or $x95 $x106)))))))
 (let (($x64 (= $x7 true)))
 (let ((?x110 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x81 (= (_ bv0 32) ?x110)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x96 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x162)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (and $x79 $x96)))
 (let (($x74 (and $x132 $x81)))
 (let (($x65 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (and $x65 $x74)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x71 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x54 $x133)))))))
 (let (($x103 (and $x71 $x51)))
 (let (($x119 (= $x103 true)))
 (let (($x108 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (= $x108 true)))
 (let (($x107 (and $x134 $x119)))
 (let (($x18 (and $x107 $x64)))
 (let (($x75 (and $x18 $x36)))
 (let (($x152 (and $x75 $x114)))
 (let (($x151 (and $x152 $x150)))
 (let (($x20 (and $x151 $x25)))
 (let (($x265 (and $x20 $x264)))
 (let (($x10 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x266 (and $x10 $x265)))
 (let (($x269 (=> $x266 $x268)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10011001010001001000100100110000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00010100101000010010000000011011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00010100101000010010000000011000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00010100101000010010000000011000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_50)
(function @fun_50
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv32 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x54 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x82))))
 (let ((?x297 ((_ extract 2 0) ?x102)))
 (let (($x298 (= (_ bv0 3) ?x297)))
 (let (($x299 (= $x298 true)))
 (let ((?x55 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv1 32))) (select input.dst.llvm-mem ?x55))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv2 32))) ?x253))))
 (let ((?x267 (bvadd ?x233 (_ bv4 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem ?x267))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv2 32))) ?x29))))
 (let (($x276 (= (_ bv0 32) ?x275)))
 (let ((?x277 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x277 (_ bv1 32))))
 (let (($x218 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x282 (= $x218 $x281)))
 (let (($x8 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x31 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (and $x31 $x8)))
 (let (($x283 (=> $x187 $x282)))
 (let (($x278 (= ?x277 (_ bv0 32))))
 (let (($x256 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x279 (= $x256 $x278)))
 (let (($x280 (=> $x187 $x279)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x254))))
 (let (($x265 (= input.spec-%var-l-1.2.1.2.0 ?x264)))
 (let (($x266 (=> $x187 $x265)))
 (let (($x236 (= (_ bv0 32) ?x233)))
 (let ((?x230 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x230 (_ bv1 32))))
 (let (($x239 (= $x8 $x234)))
 (let (($x240 (=> $x31 $x239)))
 (let (($x231 (= ?x230 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x215 $x231)))
 (let (($x237 (=> $x31 $x235)))
 (let ((?x44 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x133 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem ?x133) (concat ?x227 (concat ?x225 ?x44)))))
 (let (($x80 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x121 (=> $x31 $x80)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x73 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (= ?x73 (_ bv0 32))))
 (let (($x211 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x261 (= $x211 $x63)))
 (let (($x45 (bvuge ?x73 (_ bv1 32))))
 (let (($x87 (= $x31 $x45)))
 (let (($x195 (= false false)))
 (let (($x124 (and $x31 $x215)))
 (let (($x30 (=> $x124 $x195)))
 (let (($x177 (=> $x211 $x195)))
 (let (($x289 (and (and (and (and (and (and $x177 $x30) $x87) $x261) $x121) $x237) $x240)))
 (let (($x292 (and (and (and $x289 $x266) $x280) $x283)))
 (let (($x293 (= $x292 true)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x171 (concat ?x6 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x199 (concat ?x163 ?x171))))
 (let ((?x257 (bvadd ?x189 (_ bv4 32))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x258))))
 (let (($x213 (= (_ bv0 32) ?x97)))
 (let ((?x185 (ite $x213 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x185 (_ bv1 32))))
 (let (($x203 (= $x218 $x208)))
 (let (($x260 (=> $x187 $x203)))
 (let (($x196 (= ?x185 (_ bv0 32))))
 (let (($x109 (= $x256 $x196)))
 (let (($x57 (=> $x187 $x109)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x56))))
 (let (($x25 (= input.spec-%var-l-1.2.1.2.0 ?x190)))
 (let (($x20 (=> $x187 $x25)))
 (let (($x24 (= (_ bv0 32) ?x189)))
 (let ((?x192 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x192 (_ bv1 32))))
 (let (($x216 (= $x8 $x191)))
 (let (($x155 (=> $x31 $x216)))
 (let (($x61 (= ?x192 (_ bv0 32))))
 (let (($x169 (= $x215 $x61)))
 (let (($x180 (=> $x31 $x169)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x48)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x9)))
 (let (($x128 (= input.spec-%var-l-1.2.0 ?x193)))
 (let (($x72 (=> $x31 $x128)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x210 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x35 (bvuge ?x210 (_ bv1 32))))
 (let (($x21 (= $x31 $x35)))
 (let (($x207 (and (and (and (and (and (= $x211 (= ?x210 (_ bv0 32))) $x177) $x21) $x72) $x180) $x30)))
 (let (($x242 (and (and (and (and $x207 $x155) $x20) $x57) $x260)))
 (let (($x5 (= $x242 true)))
 (let ((?x26 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (= (_ bv0 3) ?x26)))
 (let (($x173 (= $x156 true)))
 (let (($x179 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x12 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x153 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x12) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x12))))
 (let (($x127 (and true $x153)))
 (let (($x165 (and $x153 $x127)))
 (let (($x50 (= (bvand ?x102 (_ bv4294967288 32)) ?x102)))
 (let (($x204 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x201 (and $x204 $x50)))
 (let (($x90 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv4 32))) (bvult ?x54 (bvsub ?x54 (_ bv4 32))))))
 (let (($x113 (and (and (and (and (and $x127 $x90) $x204) $x201) $x165) $x179)))
 (let (($x10 (not $x101)))
 (let (($x172 (=> $x10 $x113)))
 (let (($x11 (= $x172 true)))
 (let (($x114 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x152 (= $x114 true)))
 (let (($x164 (= $x10 true)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x136)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x181 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x75 $x181)))
 (let (($x84 (and $x17 $x142)))
 (let (($x106 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x106 $x84)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x36 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x92)))))))
 (let (($x22 (and $x36 $x78)))
 (let (($x77 (= $x22 true)))
 (let (($x15 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x104 (= $x15 true)))
 (let (($x83 (and $x104 $x77)))
 (let (($x143 (and $x83 $x164)))
 (let (($x88 (and $x143 $x152)))
 (let (($x176 (and $x88 $x11)))
 (let (($x32 (and $x176 $x173)))
 (let (($x16 (and $x32 $x5)))
 (let (($x294 (and $x16 $x293)))
 (let (($x62 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x62 $x294)))
 (let (($x74 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x110 (bvadd ?x54 (_ bv3 32))))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x112 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x81 $x74)))))))
 (let (($x91 (=> (and $x10 (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x81 $x74)))))))
 (let (($x116 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x133)))
 (let (($x79 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x108 (=> (and $x10 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32)))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x162 (and $x108 $x91)))
 (let (($x296 (and $x162 $x295)))
 (let (($x300 (=> $x296 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x54 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv1 32))) (select input.dst.llvm-mem ?x54))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x54 (_ bv2 32))) ?x82))))
 (let ((?x297 ((_ extract 2 0) ?x102)))
 (let (($x298 (= (_ bv0 3) ?x297)))
 (let (($x299 (= $x298 true)))
 (let ((?x55 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv1 32))) (select input.dst.llvm-mem ?x55))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv2 32))) ?x253))))
 (let ((?x267 (bvadd ?x233 (_ bv4 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv1 32))) (select input.dst.llvm-mem ?x267))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x267 (_ bv2 32))) ?x29))))
 (let (($x276 (= (_ bv0 32) ?x275)))
 (let ((?x277 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x281 (bvuge ?x277 (_ bv1 32))))
 (let (($x218 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x282 (= $x218 $x281)))
 (let (($x8 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x31 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (and $x31 $x8)))
 (let (($x283 (=> $x187 $x282)))
 (let (($x278 (= ?x277 (_ bv0 32))))
 (let (($x256 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x279 (= $x256 $x278)))
 (let (($x280 (=> $x187 $x279)))
 (let ((?x254 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x254))))
 (let (($x265 (= input.spec-%var-l-1.2.1.2.0 ?x264)))
 (let (($x266 (=> $x187 $x265)))
 (let (($x236 (= (_ bv0 32) ?x233)))
 (let ((?x230 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x230 (_ bv1 32))))
 (let (($x239 (= $x8 $x234)))
 (let (($x240 (=> $x31 $x239)))
 (let (($x231 (= ?x230 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x215 $x231)))
 (let (($x237 (=> $x31 $x235)))
 (let ((?x44 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x133 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem ?x133) (concat ?x227 (concat ?x225 ?x44)))))
 (let (($x80 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x121 (=> $x31 $x80)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x73 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x63 (= ?x73 (_ bv0 32))))
 (let (($x211 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x261 (= $x211 $x63)))
 (let (($x45 (bvuge ?x73 (_ bv1 32))))
 (let (($x87 (= $x31 $x45)))
 (let (($x195 (= false false)))
 (let (($x124 (and $x31 $x215)))
 (let (($x30 (=> $x124 $x195)))
 (let (($x177 (=> $x211 $x195)))
 (let (($x289 (and (and (and (and (and (and $x177 $x30) $x87) $x261) $x121) $x237) $x240)))
 (let (($x292 (and (and (and $x289 $x266) $x280) $x283)))
 (let (($x293 (= $x292 true)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x171 (concat ?x6 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x199 (concat ?x163 ?x171))))
 (let ((?x257 (bvadd ?x189 (_ bv4 32))))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x258))))
 (let (($x213 (= (_ bv0 32) ?x97)))
 (let ((?x185 (ite $x213 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x185 (_ bv1 32))))
 (let (($x203 (= $x218 $x208)))
 (let (($x260 (=> $x187 $x203)))
 (let (($x196 (= ?x185 (_ bv0 32))))
 (let (($x109 (= $x256 $x196)))
 (let (($x57 (=> $x187 $x109)))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x190 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x56))))
 (let (($x25 (= input.spec-%var-l-1.2.1.2.0 ?x190)))
 (let (($x20 (=> $x187 $x25)))
 (let (($x24 (= (_ bv0 32) ?x189)))
 (let ((?x192 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x191 (bvuge ?x192 (_ bv1 32))))
 (let (($x216 (= $x8 $x191)))
 (let (($x155 (=> $x31 $x216)))
 (let (($x61 (= ?x192 (_ bv0 32))))
 (let (($x169 (= $x215 $x61)))
 (let (($x180 (=> $x31 $x169)))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x48)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x9)))
 (let (($x128 (= input.spec-%var-l-1.2.0 ?x193)))
 (let (($x72 (=> $x31 $x128)))
 (let (($x137 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x210 (ite $x137 (_ bv0 32) (_ bv1 32))))
 (let (($x35 (bvuge ?x210 (_ bv1 32))))
 (let (($x21 (= $x31 $x35)))
 (let (($x207 (and (and (and (and (and (= $x211 (= ?x210 (_ bv0 32))) $x177) $x21) $x72) $x180) $x30)))
 (let (($x242 (and (and (and (and $x207 $x155) $x20) $x57) $x260)))
 (let (($x5 (= $x242 true)))
 (let ((?x26 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (= (_ bv0 3) ?x26)))
 (let (($x173 (= $x156 true)))
 (let (($x179 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x12 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x153 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x12) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x12))))
 (let (($x127 (and true $x153)))
 (let (($x165 (and $x153 $x127)))
 (let (($x50 (= (bvand ?x102 (_ bv4294967288 32)) ?x102)))
 (let (($x204 (= (bvand ?x54 (_ bv4294967292 32)) ?x54)))
 (let (($x201 (and $x204 $x50)))
 (let (($x90 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x54 (bvsub ?x54 (_ bv4 32))) (bvult ?x54 (bvsub ?x54 (_ bv4 32))))))
 (let (($x113 (and (and (and (and (and $x127 $x90) $x204) $x201) $x165) $x179)))
 (let (($x10 (not $x101)))
 (let (($x172 (=> $x10 $x113)))
 (let (($x11 (= $x172 true)))
 (let (($x114 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x152 (= $x114 true)))
 (let (($x164 (= $x10 true)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x136)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x181 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x75 $x181)))
 (let (($x84 (and $x17 $x142)))
 (let (($x106 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x106 $x84)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x36 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x92)))))))
 (let (($x22 (and $x36 $x78)))
 (let (($x77 (= $x22 true)))
 (let (($x15 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x104 (= $x15 true)))
 (let (($x83 (and $x104 $x77)))
 (let (($x143 (and $x83 $x164)))
 (let (($x88 (and $x143 $x152)))
 (let (($x176 (and $x88 $x11)))
 (let (($x32 (and $x176 $x173)))
 (let (($x16 (and $x32 $x5)))
 (let (($x294 (and $x16 $x293)))
 (let (($x62 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x62 $x294)))
 (let (($x74 (bvugt ?x54 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x110 (bvadd ?x54 (_ bv3 32))))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x112 (=> (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x81 $x74)))))))
 (let (($x91 (=> (and $x10 (bvule ?x54 (bvsub (bvadd ?x54 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x81 $x74)))))))
 (let (($x116 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x133)))
 (let (($x79 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x108 (=> (and $x10 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x55 (_ bv1 32)))) (or false (or false (and true (or $x105 $x116)))))))
 (let (($x162 (and $x108 $x91)))
 (let (($x296 (and $x162 $x295)))
 (let (($x300 (=> $x296 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x33 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x146 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem ?x146) (concat ?x44 (concat ?x227 ?x33)))))
 (let ((?x300 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x28)))
 (let (($x301 (= (_ bv0 32) ?x300)))
 (let (($x148 (= $x301 true)))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x228))))
 (let ((?x264 (bvadd ?x232 (_ bv4 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x267))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x29 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x29 (_ bv1 32))))
 (let (($x185 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x278 (= $x185 $x277)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x21 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x216 (and $x21 $x30)))
 (let (($x279 (=> $x216 $x278)))
 (let (($x272 (= ?x29 (_ bv0 32))))
 (let (($x25 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x25 $x272)))
 (let (($x276 (=> $x216 $x275)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv1 32))) (select input.dst.llvm-mem ?x232))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv2 32))) ?x250))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x241)))
 (let (($x249 (=> $x216 $x254)))
 (let (($x233 (= (_ bv0 32) ?x232)))
 (let ((?x236 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x236 (_ bv1 32))))
 (let (($x288 (= $x30 $x237)))
 (let (($x234 (=> $x21 $x288)))
 (let (($x230 (= ?x236 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x231 (= $x215 $x230)))
 (let (($x235 (=> $x21 $x231)))
 (let (($x80 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x121 (=> $x21 $x80)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x87 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (= ?x87 (_ bv0 32))))
 (let (($x210 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x286 (= $x210 $x261)))
 (let (($x285 (bvuge ?x87 (_ bv1 32))))
 (let (($x63 (= $x21 $x285)))
 (let (($x31 (= false false)))
 (let (($x205 (and $x21 $x215)))
 (let (($x124 (=> $x205 $x31)))
 (let (($x35 (=> $x210 $x31)))
 (let (($x292 (and (and (and (and (and (and $x35 $x124) $x63) $x286) $x121) $x235) $x234)))
 (let (($x295 (and (and (and $x292 $x249) $x276) $x279)))
 (let (($x296 (= $x295 true)))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x163 (concat ?x41 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x139 (concat ?x6 ?x163))))
 (let ((?x20 (bvadd ?x189 (_ bv4 32))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x257))))
 (let (($x13 (= (_ bv0 32) ?x188)))
 (let ((?x258 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x258 (_ bv1 32))))
 (let (($x109 (= $x185 $x196)))
 (let (($x57 (=> $x216 $x109)))
 (let (($x259 (= ?x258 (_ bv0 32))))
 (let (($x97 (= $x25 $x259)))
 (let (($x213 (=> $x216 $x97)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x53))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.0 ?x183)))
 (let (($x252 (=> $x216 $x56)))
 (let (($x24 (= (_ bv0 32) ?x189)))
 (let ((?x192 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x192 (_ bv1 32))))
 (let (($x8 (= $x30 $x207)))
 (let (($x191 (=> $x21 $x8)))
 (let (($x61 (= ?x192 (_ bv0 32))))
 (let (($x169 (= $x215 $x61)))
 (let (($x180 (=> $x21 $x169)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x144)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x48)))
 (let (($x72 (= input.spec-%var-l-1.2.0 ?x128)))
 (let (($x206 (=> $x21 $x72)))
 (let (($x52 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x195 (ite $x52 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x195 (_ bv1 32))))
 (let (($x131 (= $x21 $x243)))
 (let (($x260 (and (and (and (and (and (= $x210 (= ?x195 (_ bv0 32))) $x35) $x131) $x206) $x180) $x124)))
 (let (($x284 (and (and (and (and $x260 $x191) $x252) $x213) $x57)))
 (let (($x73 (= $x284 true)))
 (let ((?x32 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (= (_ bv0 3) ?x32)))
 (let (($x211 (= $x138 true)))
 (let (($x86 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (= $x86 true)))
 (let (($x201 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x88 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x151 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88))))
 (let (($x153 (and true $x151)))
 (let (($x145 (and $x151 $x153)))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x167))))
 (let (($x102 (= (bvand ?x158 (_ bv4294967288 32)) ?x158)))
 (let (($x214 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x197 (and $x214 $x102)))
 (let (($x23 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv4 32))) (bvult ?x65 (bvsub ?x65 (_ bv4 32))))))
 (let (($x179 (and (and (and (and (and $x153 $x23) $x214) $x197) $x145) $x201)))
 (let (($x10 (not $x101)))
 (let (($x113 (=> $x10 $x179)))
 (let (($x172 (= $x113 true)))
 (let (($x117 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x114 (= $x117 true)))
 (let (($x83 (= $x10 true)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x136)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x181 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x75 $x181)))
 (let (($x84 (and $x17 $x142)))
 (let (($x111 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x111 $x84)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x106 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x7)))))))
 (let (($x22 (and $x106 $x78)))
 (let (($x77 (= $x22 true)))
 (let (($x164 (and $x77 $x83)))
 (let (($x152 (and $x164 $x114)))
 (let (($x11 (and $x152 $x172)))
 (let (($x156 (and $x11 $x26)))
 (let (($x14 (and $x156 $x211)))
 (let (($x45 (and $x14 $x73)))
 (let (($x297 (and $x45 $x296)))
 (let (($x15 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x298 (and $x15 $x297)))
 (let (($x119 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd ?x65 (_ bv3 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x62 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x119)))))))
 (let (($x85 (=> (and $x10 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x119)))))))
 (let (($x71 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x146)))
 (let (($x132 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32))) (or false (or false (and true (or $x70 $x71)))))))
 (let (($x69 (=> (and $x10 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32)))) (or false (or false (and true (or $x70 $x71)))))))
 (let (($x110 (and $x69 $x85)))
 (let (($x299 (and $x110 $x298)))
 (let (($x94 (=> $x299 $x148)))
 (not $x94)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x33 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x146 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x28 (concat (select input.dst.llvm-mem ?x146) (concat ?x44 (concat ?x227 ?x33)))))
 (let ((?x300 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x28)))
 (let (($x301 (= (_ bv0 32) ?x300)))
 (let (($x148 (= $x301 true)))
 (let ((?x160 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv1 32))) (select input.dst.llvm-mem ?x160))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x160 (_ bv2 32))) ?x228))))
 (let ((?x264 (bvadd ?x232 (_ bv4 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv1 32))) (select input.dst.llvm-mem ?x264))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x264 (_ bv2 32))) ?x267))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x29 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x29 (_ bv1 32))))
 (let (($x185 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x278 (= $x185 $x277)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x21 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x216 (and $x21 $x30)))
 (let (($x279 (=> $x216 $x278)))
 (let (($x272 (= ?x29 (_ bv0 32))))
 (let (($x25 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x25 $x272)))
 (let (($x276 (=> $x216 $x275)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv1 32))) (select input.dst.llvm-mem ?x232))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x232 (_ bv2 32))) ?x250))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x241)))
 (let (($x249 (=> $x216 $x254)))
 (let (($x233 (= (_ bv0 32) ?x232)))
 (let ((?x236 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x236 (_ bv1 32))))
 (let (($x288 (= $x30 $x237)))
 (let (($x234 (=> $x21 $x288)))
 (let (($x230 (= ?x236 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x231 (= $x215 $x230)))
 (let (($x235 (=> $x21 $x231)))
 (let (($x80 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x121 (=> $x21 $x80)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x87 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (= ?x87 (_ bv0 32))))
 (let (($x210 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x286 (= $x210 $x261)))
 (let (($x285 (bvuge ?x87 (_ bv1 32))))
 (let (($x63 (= $x21 $x285)))
 (let (($x31 (= false false)))
 (let (($x205 (and $x21 $x215)))
 (let (($x124 (=> $x205 $x31)))
 (let (($x35 (=> $x210 $x31)))
 (let (($x292 (and (and (and (and (and (and $x35 $x124) $x63) $x286) $x121) $x235) $x234)))
 (let (($x295 (and (and (and $x292 $x249) $x276) $x279)))
 (let (($x296 (= $x295 true)))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x163 (concat ?x41 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x139 (concat ?x6 ?x163))))
 (let ((?x20 (bvadd ?x189 (_ bv4 32))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x257))))
 (let (($x13 (= (_ bv0 32) ?x188)))
 (let ((?x258 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x258 (_ bv1 32))))
 (let (($x109 (= $x185 $x196)))
 (let (($x57 (=> $x216 $x109)))
 (let (($x259 (= ?x258 (_ bv0 32))))
 (let (($x97 (= $x25 $x259)))
 (let (($x213 (=> $x216 $x97)))
 (let ((?x53 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x53))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.0 ?x183)))
 (let (($x252 (=> $x216 $x56)))
 (let (($x24 (= (_ bv0 32) ?x189)))
 (let ((?x192 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x192 (_ bv1 32))))
 (let (($x8 (= $x30 $x207)))
 (let (($x191 (=> $x21 $x8)))
 (let (($x61 (= ?x192 (_ bv0 32))))
 (let (($x169 (= $x215 $x61)))
 (let (($x180 (=> $x21 $x169)))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x144)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x48)))
 (let (($x72 (= input.spec-%var-l-1.2.0 ?x128)))
 (let (($x206 (=> $x21 $x72)))
 (let (($x52 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x195 (ite $x52 (_ bv0 32) (_ bv1 32))))
 (let (($x243 (bvuge ?x195 (_ bv1 32))))
 (let (($x131 (= $x21 $x243)))
 (let (($x260 (and (and (and (and (and (= $x210 (= ?x195 (_ bv0 32))) $x35) $x131) $x206) $x180) $x124)))
 (let (($x284 (and (and (and (and $x260 $x191) $x252) $x213) $x57)))
 (let (($x73 (= $x284 true)))
 (let ((?x32 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x138 (= (_ bv0 3) ?x32)))
 (let (($x211 (= $x138 true)))
 (let (($x86 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x26 (= $x86 true)))
 (let (($x201 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x88 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x151 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x88))))
 (let (($x153 (and true $x151)))
 (let (($x145 (and $x151 $x153)))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x158 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x167))))
 (let (($x102 (= (bvand ?x158 (_ bv4294967288 32)) ?x158)))
 (let (($x214 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x197 (and $x214 $x102)))
 (let (($x23 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv4 32))) (bvult ?x65 (bvsub ?x65 (_ bv4 32))))))
 (let (($x179 (and (and (and (and (and $x153 $x23) $x214) $x197) $x145) $x201)))
 (let (($x10 (not $x101)))
 (let (($x113 (=> $x10 $x179)))
 (let (($x172 (= $x113 true)))
 (let (($x117 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x114 (= $x117 true)))
 (let (($x83 (= $x10 true)))
 (let ((?x136 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x136)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x181 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x75 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (and $x75 $x181)))
 (let (($x84 (and $x17 $x142)))
 (let (($x111 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x111 $x84)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x106 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x92 $x7)))))))
 (let (($x22 (and $x106 $x78)))
 (let (($x77 (= $x22 true)))
 (let (($x164 (and $x77 $x83)))
 (let (($x152 (and $x164 $x114)))
 (let (($x11 (and $x152 $x172)))
 (let (($x156 (and $x11 $x26)))
 (let (($x14 (and $x156 $x211)))
 (let (($x45 (and $x14 $x73)))
 (let (($x297 (and $x45 $x296)))
 (let (($x15 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x298 (and $x15 $x297)))
 (let (($x119 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd ?x65 (_ bv3 32))))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x62 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x119)))))))
 (let (($x85 (=> (and $x10 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x119)))))))
 (let (($x71 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x146)))
 (let (($x132 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32))) (or false (or false (and true (or $x70 $x71)))))))
 (let (($x69 (=> (and $x10 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x160 (_ bv1 32)))) (or false (or false (and true (or $x70 $x71)))))))
 (let (($x110 (and $x69 $x85)))
 (let (($x299 (and $x110 $x298)))
 (let (($x94 (=> $x299 $x148)))
 (not $x94)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2 32) (_ bv1 8)) (_ bv9 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1024 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv256 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv19 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x224 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x28 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x129) (concat ?x282 (concat ?x28 ?x224)))))
 (let ((?x305 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x49)))
 (let (($x306 (= (_ bv0 32) ?x305)))
 (let (($x307 (= $x306 true)))
 (let ((?x105 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x245))))
 (let ((?x269 (bvadd ?x235 (_ bv4 32))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x290))))
 (let (($x272 (= (_ bv0 32) ?x29)))
 (let ((?x275 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x275 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x279 (= $x258 $x278)))
 (let (($x124 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x8 (and $x131 $x124)))
 (let (($x295 (=> $x8 $x279)))
 (let (($x276 (= ?x275 (_ bv0 32))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x56 $x276)))
 (let (($x277 (=> $x8 $x294)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x239))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x271 (=> $x8 $x264)))
 (let (($x283 (= (_ bv0 32) ?x235)))
 (let ((?x237 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x237 (_ bv1 32))))
 (let (($x247 (= $x124 $x246)))
 (let (($x263 (=> $x131 $x247)))
 (let (($x288 (= ?x237 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (= $x215 $x288)))
 (let (($x292 (=> $x131 $x234)))
 (let (($x221 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x229 (=> $x131 $x221)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (= ?x225 (_ bv0 32))))
 (let (($x195 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x33 (= $x195 $x227)))
 (let (($x44 (bvuge ?x225 (_ bv1 32))))
 (let (($x226 (= $x131 $x44)))
 (let (($x196 (and $x8 $x56)))
 (let (($x109 (not $x196)))
 (let (($x16 (and $x8 $x258)))
 (let (($x185 (not $x16)))
 (let (($x21 (= false false)))
 (let (($x203 (and $x131 $x215)))
 (let (($x205 (=> $x203 $x21)))
 (let (($x243 (=> $x195 $x21)))
 (let (($x301 (and (and (and (and (and (and $x243 $x205) $x185) $x109) $x226) $x33) $x229)))
 (let (($x157 (and (and (and (and (and $x301 $x292) $x263) $x271) $x277) $x295)))
 (let (($x104 (= $x157 true)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x159 (concat ?x41 ?x6))))
 (let ((?x252 (bvadd ?x189 (_ bv4 32))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x20))))
 (let (($x202 (= (_ bv0 32) ?x256)))
 (let ((?x257 (ite $x202 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x257 (_ bv1 32))))
 (let (($x97 (= $x258 $x259)))
 (let (($x213 (=> $x8 $x97)))
 (let (($x217 (= ?x257 (_ bv0 32))))
 (let (($x188 (= $x56 $x217)))
 (let (($x13 (=> $x8 $x188)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x141))))
 (let (($x53 (= input.spec-%var-l-1.2.1.2.0 ?x200)))
 (let (($x66 (=> $x8 $x53)))
 (let (($x24 (= (_ bv0 32) ?x189)))
 (let ((?x192 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x260 (bvuge ?x192 (_ bv1 32))))
 (let (($x30 (= $x124 $x260)))
 (let (($x207 (=> $x131 $x30)))
 (let (($x61 (= ?x192 (_ bv0 32))))
 (let (($x169 (= $x215 $x61)))
 (let (($x180 (=> $x131 $x169)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x166)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x72)))
 (let (($x208 (=> $x131 $x206)))
 (let (($x219 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x31 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x218 (bvuge ?x31 (_ bv1 32))))
 (let (($x168 (= $x131 $x218)))
 (let (($x280 (and (and (and (and (and (= $x195 (= ?x31 (_ bv0 32))) $x243) $x168) $x208) $x180) $x205)))
 (let (($x286 (and (and (and (and (and (and $x280 $x207) $x66) $x13) $x213) $x185) $x109)))
 (let (($x281 (= $x286 true)))
 (let ((?x14 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= (_ bv0 3) ?x14)))
 (let (($x210 (= $x137 true)))
 (let (($x173 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x32 (= $x173 true)))
 (let (($x50 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x127 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150))))
 (let (($x42 (and true $x127)))
 (let (($x145 (and $x127 $x42)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x140))))
 (let (($x197 (= (bvand ?x82 (_ bv4294967288 32)) ?x82)))
 (let (($x120 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x34 (and $x120 $x197)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x11 (and (and (and (and (and $x42 $x212) $x120) $x34) $x145) $x50)))
 (let (($x10 (not $x101)))
 (let (($x176 (=> $x10 $x11)))
 (let (($x86 (= $x176 true)))
 (let (($x93 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x88 (= $x93 true)))
 (let (($x117 (= $x10 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x78)))
 (let ((?x136 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x142 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x136)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (and $x17 $x142)))
 (let (($x77 (and $x84 $x22)))
 (let (($x92 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (and $x92 $x77)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x36)))))))
 (let (($x164 (and $x181 $x83)))
 (let (($x143 (= $x164 true)))
 (let (($x114 (and $x143 $x117)))
 (let (($x12 (and $x114 $x88)))
 (let (($x26 (and $x12 $x86)))
 (let (($x138 (and $x26 $x32)))
 (let (($x19 (and $x138 $x210)))
 (let (($x47 (and $x19 $x281)))
 (let (($x302 (and $x47 $x104)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x303 (and $x154 $x302)))
 (let (($x91 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x107 (bvadd ?x96 (_ bv3 32))))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x15 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x112 $x91)))))))
 (let (($x115 (=> (and $x10 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x112 $x91)))))))
 (let (($x108 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x74 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32))) (or false (or false (and true (or $x79 $x108)))))))
 (let (($x133 (=> (and $x10 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32)))) (or false (or false (and true (or $x79 $x108)))))))
 (let (($x51 (and $x133 $x115)))
 (let (($x304 (and $x51 $x303)))
 (let (($x308 (=> $x304 $x307)))
 (not $x308)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x224 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x28 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x129) (concat ?x282 (concat ?x28 ?x224)))))
 (let ((?x305 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x49)))
 (let (($x306 (= (_ bv0 32) ?x305)))
 (let (($x307 (= $x306 true)))
 (let ((?x105 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv1 32))) (select input.dst.llvm-mem ?x105))))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x105 (_ bv2 32))) ?x245))))
 (let ((?x269 (bvadd ?x235 (_ bv4 32))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x290))))
 (let (($x272 (= (_ bv0 32) ?x29)))
 (let ((?x275 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x275 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x279 (= $x258 $x278)))
 (let (($x124 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x8 (and $x131 $x124)))
 (let (($x295 (=> $x8 $x279)))
 (let (($x276 (= ?x275 (_ bv0 32))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x56 $x276)))
 (let (($x277 (=> $x8 $x294)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x239))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x293)))
 (let (($x271 (=> $x8 $x264)))
 (let (($x283 (= (_ bv0 32) ?x235)))
 (let ((?x237 (ite $x283 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x237 (_ bv1 32))))
 (let (($x247 (= $x124 $x246)))
 (let (($x263 (=> $x131 $x247)))
 (let (($x288 (= ?x237 (_ bv0 32))))
 (let (($x215 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (= $x215 $x288)))
 (let (($x292 (=> $x131 $x234)))
 (let (($x221 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x229 (=> $x131 $x221)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x225 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x227 (= ?x225 (_ bv0 32))))
 (let (($x195 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x33 (= $x195 $x227)))
 (let (($x44 (bvuge ?x225 (_ bv1 32))))
 (let (($x226 (= $x131 $x44)))
 (let (($x196 (and $x8 $x56)))
 (let (($x109 (not $x196)))
 (let (($x16 (and $x8 $x258)))
 (let (($x185 (not $x16)))
 (let (($x21 (= false false)))
 (let (($x203 (and $x131 $x215)))
 (let (($x205 (=> $x203 $x21)))
 (let (($x243 (=> $x195 $x21)))
 (let (($x301 (and (and (and (and (and (and $x243 $x205) $x185) $x109) $x226) $x33) $x229)))
 (let (($x157 (and (and (and (and (and $x301 $x292) $x263) $x271) $x277) $x295)))
 (let (($x104 (= $x157 true)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x6 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x159 (concat ?x41 ?x6))))
 (let ((?x252 (bvadd ?x189 (_ bv4 32))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x20))))
 (let (($x202 (= (_ bv0 32) ?x256)))
 (let ((?x257 (ite $x202 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x257 (_ bv1 32))))
 (let (($x97 (= $x258 $x259)))
 (let (($x213 (=> $x8 $x97)))
 (let (($x217 (= ?x257 (_ bv0 32))))
 (let (($x188 (= $x56 $x217)))
 (let (($x13 (=> $x8 $x188)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x141))))
 (let (($x53 (= input.spec-%var-l-1.2.1.2.0 ?x200)))
 (let (($x66 (=> $x8 $x53)))
 (let (($x24 (= (_ bv0 32) ?x189)))
 (let ((?x192 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x260 (bvuge ?x192 (_ bv1 32))))
 (let (($x30 (= $x124 $x260)))
 (let (($x207 (=> $x131 $x30)))
 (let (($x61 (= ?x192 (_ bv0 32))))
 (let (($x169 (= $x215 $x61)))
 (let (($x180 (=> $x131 $x169)))
 (let ((?x166 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x166)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x72)))
 (let (($x208 (=> $x131 $x206)))
 (let (($x219 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x31 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x218 (bvuge ?x31 (_ bv1 32))))
 (let (($x168 (= $x131 $x218)))
 (let (($x280 (and (and (and (and (and (= $x195 (= ?x31 (_ bv0 32))) $x243) $x168) $x208) $x180) $x205)))
 (let (($x286 (and (and (and (and (and (and $x280 $x207) $x66) $x13) $x213) $x185) $x109)))
 (let (($x281 (= $x286 true)))
 (let ((?x14 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= (_ bv0 3) ?x14)))
 (let (($x210 (= $x137 true)))
 (let (($x173 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x32 (= $x173 true)))
 (let (($x50 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x150 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x127 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x150))))
 (let (($x42 (and true $x127)))
 (let (($x145 (and $x127 $x42)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x140))))
 (let (($x197 (= (bvand ?x82 (_ bv4294967288 32)) ?x82)))
 (let (($x120 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x34 (and $x120 $x197)))
 (let (($x212 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x11 (and (and (and (and (and $x42 $x212) $x120) $x34) $x145) $x50)))
 (let (($x10 (not $x101)))
 (let (($x176 (=> $x10 $x11)))
 (let (($x86 (= $x176 true)))
 (let (($x93 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x88 (= $x93 true)))
 (let (($x117 (= $x10 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x78)))
 (let ((?x136 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x142 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x136)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (and $x17 $x142)))
 (let (($x77 (and $x84 $x22)))
 (let (($x92 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (and $x92 $x77)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x36)))))))
 (let (($x164 (and $x181 $x83)))
 (let (($x143 (= $x164 true)))
 (let (($x114 (and $x143 $x117)))
 (let (($x12 (and $x114 $x88)))
 (let (($x26 (and $x12 $x86)))
 (let (($x138 (and $x26 $x32)))
 (let (($x19 (and $x138 $x210)))
 (let (($x47 (and $x19 $x281)))
 (let (($x302 (and $x47 $x104)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x303 (and $x154 $x302)))
 (let (($x91 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x107 (bvadd ?x96 (_ bv3 32))))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x15 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x112 $x91)))))))
 (let (($x115 (=> (and $x10 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x112 $x91)))))))
 (let (($x108 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x74 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32))) (or false (or false (and true (or $x79 $x108)))))))
 (let (($x133 (=> (and $x10 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x105 (_ bv1 32)))) (or false (or false (and true (or $x79 $x108)))))))
 (let (($x51 (and $x133 $x115)))
 (let (($x304 (and $x51 $x303)))
 (let (($x308 (=> $x304 $x307)))
 (not $x308)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4194307 32) (_ bv64 8)) (_ bv2147483651 32) (_ bv64 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2048 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1073741824 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0000000d)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x00000007
                                #xe5)
                         #x00000010
                         #x52)
                  #x00000005
                  #x88)))
  (store (store (store a!1 #x0000000b #x52) #x00000005 #x88) #x00000007 #xe5)))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x52000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x225 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x108 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x121 (concat (select input.dst.llvm-mem ?x108) (concat ?x33 (concat ?x226 ?x225)))))
 (let ((?x104 ((_ extract 24 0) ?x121)))
 (let ((?x302 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x104)))
 (let (($x303 (= (_ bv0 25) ?x302)))
 (let (($x304 (= $x303 true)))
 (let ((?x81 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x122))))
 (let ((?x250 (bvadd ?x231 (_ bv4 32))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x149))))
 (let (($x269 (= (_ bv0 32) ?x126)))
 (let ((?x270 (ite $x269 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x270 (_ bv1 32))))
 (let (($x217 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (= $x217 $x274)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x207 (and $x284 $x280)))
 (let (($x273 (=> $x207 $x266)))
 (let (($x268 (= ?x270 (_ bv0 32))))
 (let (($x66 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x265 (= $x66 $x268)))
 (let (($x267 (=> $x207 $x265)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv1 32))) (select input.dst.llvm-mem ?x231))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv2 32))) ?x234))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x94)))
 (let (($x249 (=> $x207 $x254)))
 (let (($x232 (= (_ bv0 32) ?x231)))
 (let ((?x233 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x233 (_ bv1 32))))
 (let (($x236 (= $x280 $x245)))
 (let (($x235 (=> $x284 $x236)))
 (let (($x287 (= ?x233 (_ bv0 32))))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x89 $x287)))
 (let (($x238 (=> $x284 $x228)))
 (let (($x282 (= input.spec-%var-l-1.2.0 ?x121)))
 (let (($x262 (=> $x284 $x282)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x281 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x281 (_ bv0 32))))
 (let (($x35 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (= $x35 $x297)))
 (let (($x47 (bvuge ?x281 (_ bv1 32))))
 (let (($x296 (= $x284 $x47)))
 (let (($x218 (= false false)))
 (let (($x203 (and $x284 $x89)))
 (let (($x205 (=> $x203 $x218)))
 (let (($x168 (=> $x35 $x218)))
 (let (($x276 (and (and (and (and (and (and $x168 $x205) $x296) $x298) $x262) $x238) $x235)))
 (let (($x123 (and (and (and $x276 $x249) $x267) $x273)))
 (let (($x278 (= $x123 true)))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x139 (concat ?x41 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x24 (concat ?x189 (concat ?x171 ?x139))))
 (let ((?x285 (bvadd ?x24 (_ bv4 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv1 32))) (select input.dst.llvm-mem ?x285))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv2 32))) ?x130))))
 (let (($x20 (= (_ bv0 32) ?x5)))
 (let ((?x198 (ite $x20 (_ bv0 32) (_ bv1 32))))
 (let (($x188 (bvuge ?x198 (_ bv1 32))))
 (let (($x13 (= $x217 $x188)))
 (let (($x63 (=> $x207 $x13)))
 (let (($x256 (= ?x198 (_ bv0 32))))
 (let (($x202 (= $x66 $x256)))
 (let (($x257 (=> $x207 $x202)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem ?x24))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv2 32))) ?x40))))
 (let (($x222 (= input.spec-%var-l-1.2.1.2.0 ?x141)))
 (let (($x200 (=> $x207 $x222)))
 (let (($x192 (= (_ bv0 32) ?x24)))
 (let ((?x61 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x61 (_ bv1 32))))
 (let (($x260 (= $x280 $x124)))
 (let (($x30 (=> $x284 $x260)))
 (let (($x169 (= ?x61 (_ bv0 32))))
 (let (($x180 (= $x89 $x169)))
 (let (($x45 (=> $x284 $x180)))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x76)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x73 (= input.spec-%var-l-1.2.0 ?x208)))
 (let (($x68 (=> $x284 $x73)))
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x243 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x243 (_ bv1 32))))
 (let (($x48 (= $x284 $x9)))
 (let (($x291 (and (and (and (and (and (= $x35 (= ?x243 (_ bv0 32))) $x168) $x48) $x68) $x45) $x205)))
 (let (($x196 (and (and (and (and $x291 $x30) $x200) $x257) $x63)))
 (let (($x109 (= $x196 true)))
 (let (($x195 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x177 (= $x195 true)))
 (let ((?x211 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x14 (= (_ bv0 3) ?x211)))
 (let (($x137 (= $x14 true)))
 (let (($x172 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x153 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x23 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x153) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x153))))
 (let (($x98 (and true $x23)))
 (let (($x113 (and $x23 $x98)))
 (let ((?x146 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x167))))
 (let (($x197 (= (bvand ?x82 (_ bv4294967288 32)) ?x82)))
 (let (($x179 (= (bvand ?x146 (_ bv4294967292 32)) ?x146)))
 (let (($x34 (and $x179 $x197)))
 (let (($x214 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x146 (bvsub ?x146 (_ bv4 32))) (bvult ?x146 (bvsub ?x146 (_ bv4 32))))))
 (let (($x86 (and (and (and (and (and $x98 $x214) $x179) $x34) $x113) $x172)))
 (let (($x60 (not $x156)))
 (let (($x26 (=> $x60 $x86)))
 (let (($x173 (= $x26 true)))
 (let (($x12 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x151 (= $x12 true)))
 (let (($x152 (= $x60 true)))
 (let ((?x77 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x77)))
 (let ((?x84 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x78 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (and $x142 $x78)))
 (let (($x164 (and $x22 $x83)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x18 $x164)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x111)))))))
 (let (($x117 (and $x136 $x143)))
 (let (($x114 (= $x117 true)))
 (let (($x93 (and $x114 $x152)))
 (let (($x150 (and $x93 $x151)))
 (let (($x32 (and $x150 $x173)))
 (let (($x210 (and $x32 $x137)))
 (let (($x219 (and $x210 $x177)))
 (let (($x286 (and $x219 $x109)))
 (let (($x279 (and $x286 $x278)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x7 $x279)))
 (let (($x62 (bvugt ?x146 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x91 (bvadd ?x146 (_ bv3 32))))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x100 (=> (bvule ?x146 (bvsub (bvadd ?x146 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x62)))))))
 (let (($x119 (=> (and $x60 (bvule ?x146 (bvsub (bvadd ?x146 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x162 $x62)))))))
 (let (($x132 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x103 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x81 (_ bv1 32))) (or false (or false (and true (or $x54 $x132)))))))
 (let (($x116 (=> (and $x60 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x81 (_ bv1 32)))) (or false (or false (and true (or $x54 $x132)))))))
 (let (($x38 (and $x116 $x119)))
 (let (($x157 (and $x38 $x295)))
 (let (($x305 (=> $x157 $x304)))
 (not $x305))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x225 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x108 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x121 (concat (select input.dst.llvm-mem ?x108) (concat ?x33 (concat ?x226 ?x225)))))
 (let ((?x104 ((_ extract 24 0) ?x121)))
 (let ((?x302 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x104)))
 (let (($x303 (= (_ bv0 25) ?x302)))
 (let (($x304 (= $x303 true)))
 (let ((?x81 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem ?x81))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x81 (_ bv2 32))) ?x122))))
 (let ((?x250 (bvadd ?x231 (_ bv4 32))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv1 32))) (select input.dst.llvm-mem ?x250))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x250 (_ bv2 32))) ?x149))))
 (let (($x269 (= (_ bv0 32) ?x126)))
 (let ((?x270 (ite $x269 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x270 (_ bv1 32))))
 (let (($x217 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x266 (= $x217 $x274)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x284 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x207 (and $x284 $x280)))
 (let (($x273 (=> $x207 $x266)))
 (let (($x268 (= ?x270 (_ bv0 32))))
 (let (($x66 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x265 (= $x66 $x268)))
 (let (($x267 (=> $x207 $x265)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv1 32))) (select input.dst.llvm-mem ?x231))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x231 (_ bv2 32))) ?x234))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x94)))
 (let (($x249 (=> $x207 $x254)))
 (let (($x232 (= (_ bv0 32) ?x231)))
 (let ((?x233 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x233 (_ bv1 32))))
 (let (($x236 (= $x280 $x245)))
 (let (($x235 (=> $x284 $x236)))
 (let (($x287 (= ?x233 (_ bv0 32))))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x89 $x287)))
 (let (($x238 (=> $x284 $x228)))
 (let (($x282 (= input.spec-%var-l-1.2.0 ?x121)))
 (let (($x262 (=> $x284 $x282)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x281 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x281 (_ bv0 32))))
 (let (($x35 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x298 (= $x35 $x297)))
 (let (($x47 (bvuge ?x281 (_ bv1 32))))
 (let (($x296 (= $x284 $x47)))
 (let (($x218 (= false false)))
 (let (($x203 (and $x284 $x89)))
 (let (($x205 (=> $x203 $x218)))
 (let (($x168 (=> $x35 $x218)))
 (let (($x276 (and (and (and (and (and (and $x168 $x205) $x296) $x298) $x262) $x238) $x235)))
 (let (($x123 (and (and (and $x276 $x249) $x267) $x273)))
 (let (($x278 (= $x123 true)))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x139 (concat ?x41 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x189 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x24 (concat ?x189 (concat ?x171 ?x139))))
 (let ((?x285 (bvadd ?x24 (_ bv4 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv1 32))) (select input.dst.llvm-mem ?x285))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x285 (_ bv2 32))) ?x130))))
 (let (($x20 (= (_ bv0 32) ?x5)))
 (let ((?x198 (ite $x20 (_ bv0 32) (_ bv1 32))))
 (let (($x188 (bvuge ?x198 (_ bv1 32))))
 (let (($x13 (= $x217 $x188)))
 (let (($x63 (=> $x207 $x13)))
 (let (($x256 (= ?x198 (_ bv0 32))))
 (let (($x202 (= $x66 $x256)))
 (let (($x257 (=> $x207 $x202)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem ?x24))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv2 32))) ?x40))))
 (let (($x222 (= input.spec-%var-l-1.2.1.2.0 ?x141)))
 (let (($x200 (=> $x207 $x222)))
 (let (($x192 (= (_ bv0 32) ?x24)))
 (let ((?x61 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x61 (_ bv1 32))))
 (let (($x260 (= $x280 $x124)))
 (let (($x30 (=> $x284 $x260)))
 (let (($x169 (= ?x61 (_ bv0 32))))
 (let (($x180 (= $x89 $x169)))
 (let (($x45 (=> $x284 $x180)))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x144 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x76)))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x144)))
 (let (($x73 (= input.spec-%var-l-1.2.0 ?x208)))
 (let (($x68 (=> $x284 $x73)))
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x243 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x243 (_ bv1 32))))
 (let (($x48 (= $x284 $x9)))
 (let (($x291 (and (and (and (and (and (= $x35 (= ?x243 (_ bv0 32))) $x168) $x48) $x68) $x45) $x205)))
 (let (($x196 (and (and (and (and $x291 $x30) $x200) $x257) $x63)))
 (let (($x109 (= $x196 true)))
 (let (($x195 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x177 (= $x195 true)))
 (let ((?x211 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x14 (= (_ bv0 3) ?x211)))
 (let (($x137 (= $x14 true)))
 (let (($x172 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x153 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x23 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x153) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x153))))
 (let (($x98 (and true $x23)))
 (let (($x113 (and $x23 $x98)))
 (let ((?x146 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x167))))
 (let (($x197 (= (bvand ?x82 (_ bv4294967288 32)) ?x82)))
 (let (($x179 (= (bvand ?x146 (_ bv4294967292 32)) ?x146)))
 (let (($x34 (and $x179 $x197)))
 (let (($x214 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x146 (bvsub ?x146 (_ bv4 32))) (bvult ?x146 (bvsub ?x146 (_ bv4 32))))))
 (let (($x86 (and (and (and (and (and $x98 $x214) $x179) $x34) $x113) $x172)))
 (let (($x60 (not $x156)))
 (let (($x26 (=> $x60 $x86)))
 (let (($x173 (= $x26 true)))
 (let (($x12 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x151 (= $x12 true)))
 (let (($x152 (= $x60 true)))
 (let ((?x77 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x77)))
 (let ((?x84 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x78 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x22 (and $x142 $x78)))
 (let (($x164 (and $x22 $x83)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x18 $x164)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x182 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x182 $x111)))))))
 (let (($x117 (and $x136 $x143)))
 (let (($x114 (= $x117 true)))
 (let (($x93 (and $x114 $x152)))
 (let (($x150 (and $x93 $x151)))
 (let (($x32 (and $x150 $x173)))
 (let (($x210 (and $x32 $x137)))
 (let (($x219 (and $x210 $x177)))
 (let (($x286 (and $x219 $x109)))
 (let (($x279 (and $x286 $x278)))
 (let (($x7 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x295 (and $x7 $x279)))
 (let (($x62 (bvugt ?x146 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x91 (bvadd ?x146 (_ bv3 32))))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x100 (=> (bvule ?x146 (bvsub (bvadd ?x146 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x162 $x62)))))))
 (let (($x119 (=> (and $x60 (bvule ?x146 (bvsub (bvadd ?x146 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x162 $x62)))))))
 (let (($x132 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x103 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x81 (_ bv1 32))) (or false (or false (and true (or $x54 $x132)))))))
 (let (($x116 (=> (and $x60 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x81 (_ bv1 32)))) (or false (or false (and true (or $x54 $x132)))))))
 (let (($x38 (and $x116 $x119)))
 (let (($x157 (and $x38 $x295)))
 (let (($x305 (=> $x157 $x304)))
 (not $x305))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 #b0000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000001000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b00000001)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2 32) (_ bv1 8)) (_ bv9 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25) (_ bv0 25))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv1024 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv256 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv19 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xb570f0fd)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xf0f0f0f0)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xb570f0f8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xe7)
                                #xf0e7f0f7
                                #x30)
                         #xb570f102
                         #xf0)
                  #xb570f0f3
                  #xf0)))
(let ((a!2 (store (store (store (store a!1 #xb570f100 #xf0) #xf0e7f0f5 #xf0)
                         #xb570f0fc
                         #xf0)
                  #xb570f0ff
                  #xf0)))
(let ((a!3 (store (store (store (store a!2 #xf0e7f0f3 #xf0) #xb570f0fd #xf0)
                         #xb570f0f4
                         #xf0)
                  #xb570f0fb
                  #xf0)))
(let ((a!4 (store (store (store (store a!3 #xb570f101 #xf0) #xb570f0f5 #xf0)
                         #xb570f104
                         #xb5)
                  #xb570f0f6
                  #x67)))
(let ((a!5 (store (store (store (store a!4 #xb570f0fd #xf0) #xb570f103 #x70)
                         #xb570f0fa
                         #xf0)
                  #xb570f0f2
                  #xf0)))
(let ((a!6 (store (store (store (store a!5 #xb570f0f1 #xf0) #xb570f0f7 #x30)
                         #xf0e7f0f6
                         #xf0)
                  #xf0e7f0f0
                  #xf0)))
(let ((a!7 (store (store (store (store a!6 #xb570f0f8 #xf0) #xf0e7f0f2 #xf0)
                         #xf0e7f0f1
                         #xf0)
                  #xb570f0f0
                  #xf0)))
  (store (store a!7 #xf0e7f0f4 #xf0) #xb570f0ff #xf0)))))))))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25)
    #b0000000000000000000000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf0f0e7f0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x69) (concat ?x272 (concat ?x121 ?x299)))))
 (let ((?x309 ((_ extract 24 0) ?x49)))
 (let ((?x67 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x309)))
 (let (($x55 (= (_ bv0 25) ?x67)))
 (let (($x95 (= $x55 true)))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x229))))
 (let ((?x271 (bvadd ?x238 (_ bv4 32))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x289))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x265 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x265 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x273 (= $x198 $x266)))
 (let (($x205 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x260 (and $x48 $x205)))
 (let (($x123 (=> $x260 $x273)))
 (let (($x267 (= ?x265 (_ bv0 32))))
 (let (($x222 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x277 (= $x222 $x267)))
 (let (($x274 (=> $x260 $x277)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x283))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x294)))
 (let (($x264 (=> $x260 $x250)))
 (let (($x275 (= (_ bv0 32) ?x238)))
 (let ((?x245 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x245 (_ bv1 32))))
 (let (($x263 (= $x205 $x247)))
 (let (($x292 (=> $x48 $x263)))
 (let (($x236 (= ?x245 (_ bv0 32))))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x89 $x236)))
 (let (($x276 (=> $x48 $x235)))
 (let (($x221 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x224 (=> $x48 $x221)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x227 (_ bv0 32))))
 (let (($x243 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x225 (= $x243 $x226)))
 (let (($x33 (bvuge ?x227 (_ bv1 32))))
 (let (($x44 (= $x48 $x33)))
 (let (($x188 (and $x260 $x222)))
 (let (($x13 (not $x188)))
 (let (($x261 (and $x260 $x198)))
 (let (($x217 (not $x261)))
 (let (($x284 (= false false)))
 (let (($x213 (and $x48 $x89)))
 (let (($x203 (=> $x213 $x284)))
 (let (($x9 (=> $x243 $x284)))
 (let (($x302 (and (and (and (and (and (and $x9 $x203) $x217) $x13) $x44) $x225) $x224)))
 (let (($x105 (and (and (and (and (and $x302 $x276) $x292) $x264) $x274) $x123)))
 (let (($x10 (= $x105 true)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x171 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x24 (concat ?x6 (concat ?x41 ?x171))))
 (let ((?x200 (bvadd ?x24 (_ bv4 32))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv1 32))) (select input.dst.llvm-mem ?x200))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv2 32))) ?x285))))
 (let (($x183 (= (_ bv0 32) ?x252)))
 (let ((?x130 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x130 (_ bv1 32))))
 (let (($x202 (= $x198 $x256)))
 (let (($x257 (=> $x260 $x202)))
 (let (($x244 (= ?x130 (_ bv0 32))))
 (let (($x5 (= $x222 $x244)))
 (let (($x20 (=> $x260 $x5)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem ?x24))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv2 32))) ?x155))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x8)))
 (let (($x216 (=> $x260 $x40)))
 (let (($x192 (= (_ bv0 32) ?x24)))
 (let ((?x61 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x61 (_ bv1 32))))
 (let (($x280 (= $x205 $x291)))
 (let (($x124 (=> $x48 $x280)))
 (let (($x169 (= ?x61 (_ bv0 32))))
 (let (($x180 (= $x89 $x169)))
 (let (($x45 (=> $x48 $x180)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x58)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x76)))
 (let (($x68 (= input.spec-%var-l-1.2.0 ?x73)))
 (let (($x97 (=> $x48 $x68)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x218 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x218 (_ bv1 32))))
 (let (($x128 (= $x48 $x259)))
 (let (($x290 (and (and (and (and (and (= $x243 (= ?x218 (_ bv0 32))) $x9) $x128) $x97) $x45) $x203)))
 (let (($x298 (and (and (and (and (and (and $x290 $x124) $x216) $x20) $x257) $x217) $x13)))
 (let (($x29 (= $x298 true)))
 (let (($x31 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x35 (= $x31 true)))
 (let ((?x210 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x19 (= (_ bv0 3) ?x210)))
 (let (($x52 (= $x19 true)))
 (let (($x145 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x43 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x42) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x42))))
 (let (($x212 (and true $x43)))
 (let (($x113 (and $x43 $x212)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x99))))
 (let (($x34 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x170 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x11 (and $x170 $x34)))
 (let (($x120 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x32 (and (and (and (and (and $x212 $x120) $x170) $x11) $x113) $x145)))
 (let (($x60 (not $x156)))
 (let (($x138 (=> $x60 $x32)))
 (let (($x211 (= $x138 true)))
 (let (($x135 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x153 (= $x135 true)))
 (let (($x12 (= $x60 true)))
 (let ((?x143 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x143)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x83 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x77)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (and $x22 $x83)))
 (let (($x114 (and $x164 $x117)))
 (let (($x182 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x152 (and $x182 $x114)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x92)))))))
 (let (($x93 (and $x78 $x152)))
 (let (($x88 (= $x93 true)))
 (let (($x151 (and $x88 $x12)))
 (let (($x127 (and $x151 $x153)))
 (let (($x14 (and $x127 $x211)))
 (let (($x195 (and $x14 $x52)))
 (let (($x209 (and $x195 $x35)))
 (let (($x253 (and $x209 $x29)))
 (let (($x64 (and $x253 $x10)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x307 (and $x36 $x64)))
 (let (($x15 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd ?x96 (_ bv3 32))))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x7 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x15)))))))
 (let (($x51 (=> (and $x60 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x110 $x15)))))))
 (let (($x74 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x112 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32))) (or false (or false (and true (or $x65 $x74)))))))
 (let (($x71 (=> (and $x60 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32)))) (or false (or false (and true (or $x65 $x74)))))))
 (let (($x91 (and $x71 $x51)))
 (let (($x308 (and $x91 $x307)))
 (let (($x310 (=> $x308 $x95)))
 (not $x310))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x272 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x69) (concat ?x272 (concat ?x121 ?x299)))))
 (let ((?x309 ((_ extract 24 0) ?x49)))
 (let ((?x67 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 ?x309)))
 (let (($x55 (= (_ bv0 25) ?x67)))
 (let (($x95 (= $x55 true)))
 (let ((?x129 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x229))))
 (let ((?x271 (bvadd ?x238 (_ bv4 32))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x289))))
 (let (($x268 (= (_ bv0 32) ?x270)))
 (let ((?x265 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x266 (bvuge ?x265 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x273 (= $x198 $x266)))
 (let (($x205 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x260 (and $x48 $x205)))
 (let (($x123 (=> $x260 $x273)))
 (let (($x267 (= ?x265 (_ bv0 32))))
 (let (($x222 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x277 (= $x222 $x267)))
 (let (($x274 (=> $x260 $x277)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x283))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x294)))
 (let (($x264 (=> $x260 $x250)))
 (let (($x275 (= (_ bv0 32) ?x238)))
 (let ((?x245 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x245 (_ bv1 32))))
 (let (($x263 (= $x205 $x247)))
 (let (($x292 (=> $x48 $x263)))
 (let (($x236 (= ?x245 (_ bv0 32))))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x89 $x236)))
 (let (($x276 (=> $x48 $x235)))
 (let (($x221 (= input.spec-%var-l-1.2.0 ?x49)))
 (let (($x224 (=> $x48 $x221)))
 (let (($x156 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x227 (ite $x156 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (= ?x227 (_ bv0 32))))
 (let (($x243 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x225 (= $x243 $x226)))
 (let (($x33 (bvuge ?x227 (_ bv1 32))))
 (let (($x44 (= $x48 $x33)))
 (let (($x188 (and $x260 $x222)))
 (let (($x13 (not $x188)))
 (let (($x261 (and $x260 $x198)))
 (let (($x217 (not $x261)))
 (let (($x284 (= false false)))
 (let (($x213 (and $x48 $x89)))
 (let (($x203 (=> $x213 $x284)))
 (let (($x9 (=> $x243 $x284)))
 (let (($x302 (and (and (and (and (and (and $x9 $x203) $x217) $x13) $x44) $x225) $x224)))
 (let (($x105 (and (and (and (and (and $x302 $x276) $x292) $x264) $x274) $x123)))
 (let (($x10 (= $x105 true)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x171 (concat ?x175 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x24 (concat ?x6 (concat ?x41 ?x171))))
 (let ((?x200 (bvadd ?x24 (_ bv4 32))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv1 32))) (select input.dst.llvm-mem ?x200))))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x200 (_ bv2 32))) ?x285))))
 (let (($x183 (= (_ bv0 32) ?x252)))
 (let ((?x130 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x130 (_ bv1 32))))
 (let (($x202 (= $x198 $x256)))
 (let (($x257 (=> $x260 $x202)))
 (let (($x244 (= ?x130 (_ bv0 32))))
 (let (($x5 (= $x222 $x244)))
 (let (($x20 (=> $x260 $x5)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv1 32))) (select input.dst.llvm-mem ?x24))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x24 (_ bv2 32))) ?x155))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x8)))
 (let (($x216 (=> $x260 $x40)))
 (let (($x192 (= (_ bv0 32) ?x24)))
 (let ((?x61 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x61 (_ bv1 32))))
 (let (($x280 (= $x205 $x291)))
 (let (($x124 (=> $x48 $x280)))
 (let (($x169 (= ?x61 (_ bv0 32))))
 (let (($x180 (= $x89 $x169)))
 (let (($x45 (=> $x48 $x180)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x58)))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x76)))
 (let (($x68 (= input.spec-%var-l-1.2.0 ?x73)))
 (let (($x97 (=> $x48 $x68)))
 (let (($x131 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x218 (ite $x131 (_ bv0 32) (_ bv1 32))))
 (let (($x259 (bvuge ?x218 (_ bv1 32))))
 (let (($x128 (= $x48 $x259)))
 (let (($x290 (and (and (and (and (and (= $x243 (= ?x218 (_ bv0 32))) $x9) $x128) $x97) $x45) $x203)))
 (let (($x298 (and (and (and (and (and (and $x290 $x124) $x216) $x20) $x257) $x217) $x13)))
 (let (($x29 (= $x298 true)))
 (let (($x31 (= (_ bv0 25) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0)))
 (let (($x35 (= $x31 true)))
 (let ((?x210 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x19 (= (_ bv0 3) ?x210)))
 (let (($x52 (= $x19 true)))
 (let (($x145 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x42 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x43 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x42) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x42))))
 (let (($x212 (and true $x43)))
 (let (($x113 (and $x43 $x212)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x99 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x99))))
 (let (($x34 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x170 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x11 (and $x170 $x34)))
 (let (($x120 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x32 (and (and (and (and (and $x212 $x120) $x170) $x11) $x113) $x145)))
 (let (($x60 (not $x156)))
 (let (($x138 (=> $x60 $x32)))
 (let (($x211 (= $x138 true)))
 (let (($x135 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x153 (= $x135 true)))
 (let (($x12 (= $x60 true)))
 (let ((?x143 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x143)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x83 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x77)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (and $x22 $x83)))
 (let (($x114 (and $x164 $x117)))
 (let (($x182 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x152 (and $x182 $x114)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x92)))))))
 (let (($x93 (and $x78 $x152)))
 (let (($x88 (= $x93 true)))
 (let (($x151 (and $x88 $x12)))
 (let (($x127 (and $x151 $x153)))
 (let (($x14 (and $x127 $x211)))
 (let (($x195 (and $x14 $x52)))
 (let (($x209 (and $x195 $x35)))
 (let (($x253 (and $x209 $x29)))
 (let (($x64 (and $x253 $x10)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x307 (and $x36 $x64)))
 (let (($x15 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd ?x96 (_ bv3 32))))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x7 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x110 $x15)))))))
 (let (($x51 (=> (and $x60 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x110 $x15)))))))
 (let (($x74 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x112 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32))) (or false (or false (and true (or $x65 $x74)))))))
 (let (($x71 (=> (and $x60 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x129 (_ bv1 32)))) (or false (or false (and true (or $x65 $x74)))))))
 (let (($x91 (and $x71 $x51)))
 (let (($x308 (and $x91 $x307)))
 (let (($x310 (=> $x308 $x95)))
 (not $x310))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 #b0000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000001000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b00000001)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483648 32) (_ bv1 8)) (_ bv4194304 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25) (_ bv0 25))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2048 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483656 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483659 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000ecc)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00004007)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x0000400a
              #x01)
       #x00004003
       #x01))
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry_24_0 () (_ BitVec 25)
    #b0000000000000000000000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x01000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000ecc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000ecf)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x108 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv1 32))) (select input.dst.llvm-mem ?x108))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv2 32))) ?x167))))
 (let (($x277 (bvule ?x125 (_ bv4294967294 32))))
 (let (($x274 (= $x277 true)))
 (let ((?x107 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x230))))
 (let ((?x303 (bvadd ?x282 (_ bv4 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv1 32))) (select input.dst.llvm-mem ?x303))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv2 32))) ?x304))))
 (let (($x148 (= (_ bv0 32) ?x288)))
 (let ((?x283 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x264 (bvuge ?x283 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x305 (= $x66 $x264)))
 (let (($x61 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x286 (and $x258 $x61)))
 (let (($x271 (=> $x286 $x305)))
 (let (($x94 (= ?x283 (_ bv0 32))))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x207 $x94)))
 (let (($x250 (=> $x286 $x294)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x80))))
 (let (($x235 (= input.spec-%var-l-1.2.1.2.0 ?x236)))
 (let (($x276 (=> $x286 $x235)))
 (let (($x301 (= (_ bv0 32) ?x282)))
 (let ((?x49 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x49 (_ bv1 32))))
 (let (($x228 (= $x61 $x287)))
 (let (($x231 (=> $x258 $x228)))
 (let (($x221 (= ?x49 (_ bv0 32))))
 (let (($x76 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x76 $x221)))
 (let (($x302 (=> $x258 $x224)))
 (let ((?x13 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x279 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x74 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x33 (concat (select input.dst.llvm-mem ?x74) (concat ?x279 (concat ?x29 ?x13)))))
 (let (($x44 (= input.spec-%var-l-1.2.0 ?x33)))
 (let (($x157 (=> $x258 $x44)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x161 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x161 (_ bv0 32))))
 (let (($x35 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x188 (= $x35 $x297)))
 (let (($x261 (bvuge ?x161 (_ bv1 32))))
 (let (($x217 (= $x258 $x261)))
 (let (($x218 (= false false)))
 (let (($x24 (and $x258 $x76)))
 (let (($x192 (=> $x24 $x218)))
 (let (($x168 (=> $x35 $x218)))
 (let (($x240 (and (and (and (and (and (and $x168 $x192) $x217) $x188) $x157) $x302) $x231)))
 (let (($x293 (and (and (and $x240 $x276) $x250) $x271)))
 (let (($x270 (= $x293 true)))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x215 (concat ?x109 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x41 (concat ?x199 (concat ?x163 ?x215))))
 (let ((?x87 (bvadd ?x41 (_ bv4 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv1 32))) (select input.dst.llvm-mem ?x87))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv2 32))) ?x8))))
 (let (($x186 (= (_ bv0 32) ?x200)))
 (let ((?x56 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x56 (_ bv1 32))))
 (let (($x285 (= $x66 $x185)))
 (let (($x255 (=> $x286 $x285)))
 (let (($x190 (= ?x56 (_ bv0 32))))
 (let (($x25 (= $x207 $x190)))
 (let (($x53 (=> $x286 $x25)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv1 32))) (select input.dst.llvm-mem ?x41))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv2 32))) ?x291))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.0 ?x191)))
 (let (($x242 (=> $x286 $x187)))
 (let (($x189 (= (_ bv0 32) ?x41)))
 (let ((?x175 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x175 (_ bv1 32))))
 (let (($x180 (= $x61 $x169)))
 (let (($x45 (=> $x258 $x180)))
 (let (($x223 (= ?x175 (_ bv0 32))))
 (let (($x171 (= $x76 $x223)))
 (let (($x159 (=> $x258 $x171)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x208)))
 (let (($x166 (= input.spec-%var-l-1.2.0 ?x193)))
 (let (($x206 (=> $x258 $x166)))
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x243 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x243 (_ bv1 32))))
 (let (($x9 (= $x258 $x284)))
 (let (($x5 (and (and (and (and (and (= $x35 (= ?x243 (_ bv0 32))) $x168) $x9) $x206) $x159) $x192)))
 (let (($x256 (and (and (and (and $x5 $x45) $x242) $x53) $x255)))
 (let (($x202 (= $x256 true)))
 (let ((?x52 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x195 (= (_ bv0 3) ?x52)))
 (let (($x177 (= $x195 true)))
 (let (($x173 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x98 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x214 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x98) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x98))))
 (let (($x201 (and true $x214)))
 (let (($x26 (and $x214 $x201)))
 (let (($x34 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x86 (= (bvand ?x108 (_ bv4294967292 32)) ?x108)))
 (let (($x11 (and $x86 $x34)))
 (let (($x179 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x108 (bvsub ?x108 (_ bv4 32))) (bvult ?x108 (bvsub ?x108 (_ bv4 32))))))
 (let (($x211 (and (and (and (and (and $x201 $x179) $x86) $x11) $x26) $x173)))
 (let (($x156 (not $x101)))
 (let (($x14 (=> $x156 $x211)))
 (let (($x137 (= $x14 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x23 (= $x127 true)))
 (let (($x150 (= $x156 true)))
 (let ((?x114 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x152 (= (_ bv0 32) ?x114)))
 (let ((?x164 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x143 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x164)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x83 $x143)))
 (let (($x93 (and $x117 $x152)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x181 $x93)))
 (let (($x18 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x18)))))))
 (let (($x12 (and $x77 $x88)))
 (let (($x151 (= $x12 true)))
 (let (($x135 (and $x151 $x150)))
 (let (($x42 (and $x135 $x23)))
 (let (($x210 (and $x42 $x137)))
 (let (($x219 (and $x210 $x177)))
 (let (($x257 (and $x219 $x202)))
 (let (($x268 (and $x257 $x270)))
 (let (($x111 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x265 (and $x111 $x268)))
 (let (($x100 (bvugt ?x108 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x108 (_ bv3 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x174 (=> (bvule ?x108 (bvsub (bvadd ?x108 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x100)))))))
 (let (($x62 (=> (and $x156 (bvule ?x108 (bvsub (bvadd ?x108 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x115 $x100)))))))
 (let (($x103 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x74)))
 (let (($x162 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32))) (or false (or false (and true (or $x133 $x103)))))))
 (let (($x134 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32)))) (or false (or false (and true (or $x133 $x103)))))))
 (let (($x154 (and $x134 $x62)))
 (let (($x267 (and $x154 $x265)))
 (let (($x306 (=> $x267 $x274)))
 (not $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x108 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x167 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv1 32))) (select input.dst.llvm-mem ?x108))))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x108 (_ bv2 32))) ?x167))))
 (let (($x277 (bvule ?x125 (_ bv4294967294 32))))
 (let (($x274 (= $x277 true)))
 (let ((?x107 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x230))))
 (let ((?x303 (bvadd ?x282 (_ bv4 32))))
 (let ((?x304 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv1 32))) (select input.dst.llvm-mem ?x303))))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x303 (_ bv2 32))) ?x304))))
 (let (($x148 (= (_ bv0 32) ?x288)))
 (let ((?x283 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x264 (bvuge ?x283 (_ bv1 32))))
 (let (($x66 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x305 (= $x66 $x264)))
 (let (($x61 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x286 (and $x258 $x61)))
 (let (($x271 (=> $x286 $x305)))
 (let (($x94 (= ?x283 (_ bv0 32))))
 (let (($x207 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x294 (= $x207 $x94)))
 (let (($x250 (=> $x286 $x294)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv1 32))) (select input.dst.llvm-mem ?x282))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x282 (_ bv2 32))) ?x80))))
 (let (($x235 (= input.spec-%var-l-1.2.1.2.0 ?x236)))
 (let (($x276 (=> $x286 $x235)))
 (let (($x301 (= (_ bv0 32) ?x282)))
 (let ((?x49 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x49 (_ bv1 32))))
 (let (($x228 (= $x61 $x287)))
 (let (($x231 (=> $x258 $x228)))
 (let (($x221 (= ?x49 (_ bv0 32))))
 (let (($x76 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x76 $x221)))
 (let (($x302 (=> $x258 $x224)))
 (let ((?x13 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x279 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x74 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x33 (concat (select input.dst.llvm-mem ?x74) (concat ?x279 (concat ?x29 ?x13)))))
 (let (($x44 (= input.spec-%var-l-1.2.0 ?x33)))
 (let (($x157 (=> $x258 $x44)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x161 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (= ?x161 (_ bv0 32))))
 (let (($x35 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x188 (= $x35 $x297)))
 (let (($x261 (bvuge ?x161 (_ bv1 32))))
 (let (($x217 (= $x258 $x261)))
 (let (($x218 (= false false)))
 (let (($x24 (and $x258 $x76)))
 (let (($x192 (=> $x24 $x218)))
 (let (($x168 (=> $x35 $x218)))
 (let (($x240 (and (and (and (and (and (and $x168 $x192) $x217) $x188) $x157) $x302) $x231)))
 (let (($x293 (and (and (and $x240 $x276) $x250) $x271)))
 (let (($x270 (= $x293 true)))
 (let ((?x109 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x215 (concat ?x109 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x41 (concat ?x199 (concat ?x163 ?x215))))
 (let ((?x87 (bvadd ?x41 (_ bv4 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv1 32))) (select input.dst.llvm-mem ?x87))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x87 (_ bv2 32))) ?x8))))
 (let (($x186 (= (_ bv0 32) ?x200)))
 (let ((?x56 (ite $x186 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x56 (_ bv1 32))))
 (let (($x285 (= $x66 $x185)))
 (let (($x255 (=> $x286 $x285)))
 (let (($x190 (= ?x56 (_ bv0 32))))
 (let (($x25 (= $x207 $x190)))
 (let (($x53 (=> $x286 $x25)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv1 32))) (select input.dst.llvm-mem ?x41))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv2 32))) ?x291))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.0 ?x191)))
 (let (($x242 (=> $x286 $x187)))
 (let (($x189 (= (_ bv0 32) ?x41)))
 (let ((?x175 (ite $x189 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x175 (_ bv1 32))))
 (let (($x180 (= $x61 $x169)))
 (let (($x45 (=> $x258 $x180)))
 (let (($x223 (= ?x175 (_ bv0 32))))
 (let (($x171 (= $x76 $x223)))
 (let (($x159 (=> $x258 $x171)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x208)))
 (let (($x166 (= input.spec-%var-l-1.2.0 ?x193)))
 (let (($x206 (=> $x258 $x166)))
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x243 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x243 (_ bv1 32))))
 (let (($x9 (= $x258 $x284)))
 (let (($x5 (and (and (and (and (and (= $x35 (= ?x243 (_ bv0 32))) $x168) $x9) $x206) $x159) $x192)))
 (let (($x256 (and (and (and (and $x5 $x45) $x242) $x53) $x255)))
 (let (($x202 (= $x256 true)))
 (let ((?x52 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x195 (= (_ bv0 3) ?x52)))
 (let (($x177 (= $x195 true)))
 (let (($x173 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x98 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x214 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x98) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x98))))
 (let (($x201 (and true $x214)))
 (let (($x26 (and $x214 $x201)))
 (let (($x34 (= (bvand ?x125 (_ bv4294967288 32)) ?x125)))
 (let (($x86 (= (bvand ?x108 (_ bv4294967292 32)) ?x108)))
 (let (($x11 (and $x86 $x34)))
 (let (($x179 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x108 (bvsub ?x108 (_ bv4 32))) (bvult ?x108 (bvsub ?x108 (_ bv4 32))))))
 (let (($x211 (and (and (and (and (and $x201 $x179) $x86) $x11) $x26) $x173)))
 (let (($x156 (not $x101)))
 (let (($x14 (=> $x156 $x211)))
 (let (($x137 (= $x14 true)))
 (let (($x127 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x23 (= $x127 true)))
 (let (($x150 (= $x156 true)))
 (let ((?x114 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x152 (= (_ bv0 32) ?x114)))
 (let ((?x164 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x143 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x164)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (and $x83 $x143)))
 (let (($x93 (and $x117 $x152)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x181 $x93)))
 (let (($x18 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x18)))))))
 (let (($x12 (and $x77 $x88)))
 (let (($x151 (= $x12 true)))
 (let (($x135 (and $x151 $x150)))
 (let (($x42 (and $x135 $x23)))
 (let (($x210 (and $x42 $x137)))
 (let (($x219 (and $x210 $x177)))
 (let (($x257 (and $x219 $x202)))
 (let (($x268 (and $x257 $x270)))
 (let (($x111 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x265 (and $x111 $x268)))
 (let (($x100 (bvugt ?x108 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x108 (_ bv3 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x174 (=> (bvule ?x108 (bvsub (bvadd ?x108 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x100)))))))
 (let (($x62 (=> (and $x156 (bvule ?x108 (bvsub (bvadd ?x108 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x115 $x100)))))))
 (let (($x103 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x74)))
 (let (($x162 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32))) (or false (or false (and true (or $x133 $x103)))))))
 (let (($x134 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x107 (_ bv1 32)))) (or false (or false (and true (or $x133 $x103)))))))
 (let (($x154 (and $x134 $x62)))
 (let (($x267 (and $x154 $x265)))
 (let (($x306 (=> $x267 $x274)))
 (not $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var914X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var911X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var911X.0 () (_ BitVec 32))
(declare-fun input.ind-%var911X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var908X () (_ BitVec 32))
(declare-fun input.ind-%var905X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var905X.0 () (_ BitVec 32))
(declare-fun input.ind-%var905X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var914X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x395 (concat ?x394 (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv4 32))))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var914X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var914X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x401 (concat ?x400 (concat ?x397 ?x395))))
 (let (($x402 (= ?x401 ?x401)))
 (let (($x372 (= (_ bv0 32) input.ind-%var914X)))
 (let ((?x373 (ite $x372 (_ bv0 32) (_ bv1 32))))
 (let (($x377 (bvuge ?x373 (_ bv1 32))))
 (let (($x403 (=> $x377 $x402)))
 (let ((?x382 (concat (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var914X))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv2 32))) ?x382)))
 (let ((?x388 (concat (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv3 32))) ?x385)))
 (let (($x389 (= ?x388 ?x388)))
 (let (($x390 (=> $x377 $x389)))
 (let (($x378 (= $x377 $x377)))
 (let (($x57 (= false false)))
 (let (($x374 (= ?x373 (_ bv0 32))))
 (let (($x376 (=> $x374 $x57)))
 (let (($x375 (= $x374 $x374)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x204))))
 (let (($x370 (= input.dst.llvm-%l ?x102)))
 (let (($x408 (and (and (and (and (and $x370 $x375) $x376) $x378) $x390) $x403)))
 (let (($x363 (= input.ind-%var911X.2.1 input.ind-%var911X.2.1)))
 (let (($x357 (bvuge input.ind-%var911X.0 (_ bv1 32))))
 (let (($x364 (=> $x357 $x363)))
 (let (($x360 (= input.ind-%var911X.2.0 input.ind-%var911X.2.0)))
 (let (($x361 (=> $x357 $x360)))
 (let (($x358 (= $x357 $x357)))
 (let (($x354 (= input.ind-%var911X.0 (_ bv0 32))))
 (let (($x356 (=> $x354 $x57)))
 (let (($x366 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x354 $x354)) $x356)))
 (let (($x369 (and (and (and $x366 $x358) $x361) $x364)))
 (let (($x409 (and $x369 $x408)))
 (let ((?x337 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var908X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x338 (concat ?x337 (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv4 32))))))
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var908X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x343 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var908X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x344 (concat ?x343 (concat ?x340 ?x338))))
 (let (($x345 (= ?x344 ?x344)))
 (let (($x315 (= (_ bv0 32) input.ind-%var908X)))
 (let ((?x316 (ite $x315 (_ bv0 32) (_ bv1 32))))
 (let (($x320 (bvuge ?x316 (_ bv1 32))))
 (let (($x346 (=> $x320 $x345)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var908X))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv2 32))) ?x325)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv3 32))) ?x328)))
 (let (($x332 (= ?x331 ?x331)))
 (let (($x333 (=> $x320 $x332)))
 (let (($x321 (= $x320 $x320)))
 (let (($x317 (= ?x316 (_ bv0 32))))
 (let (($x319 (=> $x317 $x57)))
 (let (($x318 (= $x317 $x317)))
 (let (($x313 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102)))
 (let (($x351 (and (and (and (and (and $x313 $x318) $x319) $x321) $x333) $x346)))
 (let (($x55 (= input.ind-%var905X.2.1 input.ind-%var905X.2.1)))
 (let (($x10 (bvuge input.ind-%var905X.0 (_ bv1 32))))
 (let (($x95 (=> $x10 $x55)))
 (let (($x308 (= input.ind-%var905X.2.0 input.ind-%var905X.2.0)))
 (let (($x309 (=> $x10 $x308)))
 (let (($x64 (= $x10 $x10)))
 (let (($x273 (= input.ind-%var905X.0 (_ bv0 32))))
 (let (($x105 (=> $x273 $x57)))
 (let (($x311 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x273 $x273)) $x105)))
 (let (($x312 (and (and (and $x311 $x64) $x309) $x95)))
 (let (($x352 (and $x312 $x351)))
 (let (($x266 (not true)))
 (let (($x411 (or (or $x266 $x352) $x409)))
 (let (($x412 (and true $x411)))
 (let (($x413 (= $x412 true)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x300 (concat ?x230 (concat ?x225 ?x262))))
 (let ((?x236 (bvadd ?x300 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x303))))
 (let (($x247 (= (_ bv0 32) ?x292)))
 (let ((?x304 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x304 (_ bv1 32))))
 (let (($x8 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x94 (= $x8 $x283)))
 (let (($x171 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x218 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x192 (and $x218 $x171)))
 (let (($x294 (=> $x192 $x94)))
 (let (($x234 (= ?x304 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x203 $x234)))
 (let (($x148 (=> $x192 $x288)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x275))))
 (let (($x80 (= input.spec-%var-l-1.2.1.2.0 ?x232)))
 (let (($x238 (=> $x192 $x80)))
 (let (($x282 (= (_ bv0 32) ?x300)))
 (let ((?x301 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x301 (_ bv1 32))))
 (let (($x241 (= $x171 $x302)))
 (let (($x287 (=> $x218 $x241)))
 (let (($x252 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x258 (and $x218 $x252)))
 (let (($x284 (=> $x258 $x57)))
 (let (($x49 (= ?x301 (_ bv0 32))))
 (let (($x221 (= $x252 $x49)))
 (let (($x224 (=> $x218 $x221)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x278)))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x29)))
 (let (($x33 (= input.spec-%var-l-1.2.0 ?x295)))
 (let (($x44 (=> $x218 $x33)))
 (let (($x126 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x161 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x161 (_ bv1 32))))
 (let (($x297 (= $x218 $x269)))
 (let (($x243 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x131 (=> $x243 $x57)))
 (let (($x261 (= ?x161 (_ bv0 32))))
 (let (($x217 (= $x243 $x261)))
 (let (($x293 (and (and (and (and (and (and $x217 $x131) $x297) $x44) $x224) $x284) $x287)))
 (let (($x265 (and (and (and $x293 $x238) $x148) $x294)))
 (let (($x267 (= $x265 true)))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x199))))
 (let ((?x291 (bvadd ?x215 (_ bv4 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x242))))
 (let (($x40 (= (_ bv0 32) ?x222)))
 (let ((?x216 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x216 (_ bv1 32))))
 (let (($x200 (= $x8 $x47)))
 (let (($x186 (=> $x192 $x200)))
 (let (($x155 (= ?x216 (_ bv0 32))))
 (let (($x37 (= $x203 $x155)))
 (let (($x16 (=> $x192 $x37)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x45))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.0 ?x280)))
 (let (($x290 (=> $x192 $x124)))
 (let (($x139 (= (_ bv0 32) ?x215)))
 (let ((?x41 (ite $x139 (_ bv0 32) (_ bv1 32))))
 (let (($x159 (bvuge ?x41 (_ bv1 32))))
 (let (($x244 (= $x171 $x159)))
 (let (($x24 (=> $x218 $x244)))
 (let (($x189 (= ?x41 (_ bv0 32))))
 (let (($x175 (= $x252 $x189)))
 (let (($x223 (=> $x218 $x175)))
 (let ((?x144 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x116 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x206 (concat (select input.dst.llvm-mem ?x116) (concat ?x208 (concat ?x128 ?x144)))))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x58 (=> $x218 $x130)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x9 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x251 (= ?x9 (_ bv0 32))))
 (let (($x184 (= $x243 $x251)))
 (let (($x53 (and (and (and (and $x131 $x284) (= $x218 (bvuge ?x9 (_ bv1 32)))) $x184) $x58)))
 (let (($x255 (and (and (and (and (and $x53 $x223) $x24) $x290) $x16) $x186)))
 (let (($x256 (= $x255 true)))
 (let ((?x219 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x31 (= (_ bv0 3) ?x219)))
 (let (($x35 (= $x31 true)))
 (let (($x113 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x212 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x46 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x212) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x212))))
 (let (($x120 (and true $x46)))
 (let (($x26 (and $x46 $x120)))
 (let (($x11 (= (bvand ?x102 (_ bv4294967288 32)) ?x102)))
 (let (($x194 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x32 (and $x194 $x11)))
 (let (($x170 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x210 (and (and (and (and (and $x120 $x170) $x194) $x32) $x26) $x113)))
 (let (($x156 (not $x101)))
 (let (($x19 (=> $x156 $x210)))
 (let (($x52 (= $x19 true)))
 (let (($x90 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x98 (= $x90 true)))
 (let (($x127 (= $x156 true)))
 (let ((?x88 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x88)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (and $x117 $x152)))
 (let (($x151 (and $x93 $x12)))
 (let (($x27 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (and $x27 $x151)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x143 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x106 $x182)))))))
 (let (($x135 (and $x143 $x150)))
 (let (($x153 (= $x135 true)))
 (let (($x23 (and $x153 $x127)))
 (let (($x43 (and $x23 $x98)))
 (let (($x195 (and $x43 $x52)))
 (let (($x209 (and $x195 $x35)))
 (let (($x202 (and $x209 $x256)))
 (let (($x277 (and $x202 $x267)))
 (let (($x92 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x274 (and $x92 $x277)))
 (let (($x7 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x119 (bvadd ?x96 (_ bv3 32))))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x111 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x91 (=> (and $x156 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x112 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x110 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32))) (or false (or false (and true (or $x146 $x112)))))))
 (let (($x132 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32)))) (or false (or false (and true (or $x146 $x112)))))))
 (let (($x15 (and $x132 $x91)))
 (let (($x306 (and $x15 $x274)))
 (let (($x414 (=> $x306 $x413)))
 (not $x414)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var914X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var911X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var911X.0 () (_ BitVec 32))
(declare-fun input.ind-%var911X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var908X () (_ BitVec 32))
(declare-fun input.ind-%var905X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var905X.0 () (_ BitVec 32))
(declare-fun input.ind-%var905X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var914X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x395 (concat ?x394 (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv4 32))))))
 (let ((?x397 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var914X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x400 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var914X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x401 (concat ?x400 (concat ?x397 ?x395))))
 (let (($x402 (= ?x401 ?x401)))
 (let (($x372 (= (_ bv0 32) input.ind-%var914X)))
 (let ((?x373 (ite $x372 (_ bv0 32) (_ bv1 32))))
 (let (($x377 (bvuge ?x373 (_ bv1 32))))
 (let (($x403 (=> $x377 $x402)))
 (let ((?x382 (concat (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var914X))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv2 32))) ?x382)))
 (let ((?x388 (concat (select input.dst.llvm-mem (bvadd input.ind-%var914X (_ bv3 32))) ?x385)))
 (let (($x389 (= ?x388 ?x388)))
 (let (($x390 (=> $x377 $x389)))
 (let (($x378 (= $x377 $x377)))
 (let (($x57 (= false false)))
 (let (($x374 (= ?x373 (_ bv0 32))))
 (let (($x376 (=> $x374 $x57)))
 (let (($x375 (= $x374 $x374)))
 (let ((?x96 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x204))))
 (let (($x370 (= input.dst.llvm-%l ?x102)))
 (let (($x408 (and (and (and (and (and $x370 $x375) $x376) $x378) $x390) $x403)))
 (let (($x363 (= input.ind-%var911X.2.1 input.ind-%var911X.2.1)))
 (let (($x357 (bvuge input.ind-%var911X.0 (_ bv1 32))))
 (let (($x364 (=> $x357 $x363)))
 (let (($x360 (= input.ind-%var911X.2.0 input.ind-%var911X.2.0)))
 (let (($x361 (=> $x357 $x360)))
 (let (($x358 (= $x357 $x357)))
 (let (($x354 (= input.ind-%var911X.0 (_ bv0 32))))
 (let (($x356 (=> $x354 $x57)))
 (let (($x366 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x354 $x354)) $x356)))
 (let (($x369 (and (and (and $x366 $x358) $x361) $x364)))
 (let (($x409 (and $x369 $x408)))
 (let ((?x337 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var908X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x338 (concat ?x337 (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv4 32))))))
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var908X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x343 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var908X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x344 (concat ?x343 (concat ?x340 ?x338))))
 (let (($x345 (= ?x344 ?x344)))
 (let (($x315 (= (_ bv0 32) input.ind-%var908X)))
 (let ((?x316 (ite $x315 (_ bv0 32) (_ bv1 32))))
 (let (($x320 (bvuge ?x316 (_ bv1 32))))
 (let (($x346 (=> $x320 $x345)))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var908X))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv2 32))) ?x325)))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd input.ind-%var908X (_ bv3 32))) ?x328)))
 (let (($x332 (= ?x331 ?x331)))
 (let (($x333 (=> $x320 $x332)))
 (let (($x321 (= $x320 $x320)))
 (let (($x317 (= ?x316 (_ bv0 32))))
 (let (($x319 (=> $x317 $x57)))
 (let (($x318 (= $x317 $x317)))
 (let (($x313 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102)))
 (let (($x351 (and (and (and (and (and $x313 $x318) $x319) $x321) $x333) $x346)))
 (let (($x55 (= input.ind-%var905X.2.1 input.ind-%var905X.2.1)))
 (let (($x10 (bvuge input.ind-%var905X.0 (_ bv1 32))))
 (let (($x95 (=> $x10 $x55)))
 (let (($x308 (= input.ind-%var905X.2.0 input.ind-%var905X.2.0)))
 (let (($x309 (=> $x10 $x308)))
 (let (($x64 (= $x10 $x10)))
 (let (($x273 (= input.ind-%var905X.0 (_ bv0 32))))
 (let (($x105 (=> $x273 $x57)))
 (let (($x311 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x273 $x273)) $x105)))
 (let (($x312 (and (and (and $x311 $x64) $x309) $x95)))
 (let (($x352 (and $x312 $x351)))
 (let (($x266 (not true)))
 (let (($x411 (or (or $x266 $x352) $x409)))
 (let (($x412 (and true $x411)))
 (let (($x413 (= $x412 true)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x262 (concat ?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x300 (concat ?x230 (concat ?x225 ?x262))))
 (let ((?x236 (bvadd ?x300 (_ bv4 32))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv1 32))) (select input.dst.llvm-mem ?x236))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x236 (_ bv2 32))) ?x303))))
 (let (($x247 (= (_ bv0 32) ?x292)))
 (let ((?x304 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x304 (_ bv1 32))))
 (let (($x8 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x94 (= $x8 $x283)))
 (let (($x171 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x218 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x192 (and $x218 $x171)))
 (let (($x294 (=> $x192 $x94)))
 (let (($x234 (= ?x304 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x288 (= $x203 $x234)))
 (let (($x148 (=> $x192 $x288)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x275))))
 (let (($x80 (= input.spec-%var-l-1.2.1.2.0 ?x232)))
 (let (($x238 (=> $x192 $x80)))
 (let (($x282 (= (_ bv0 32) ?x300)))
 (let ((?x301 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x301 (_ bv1 32))))
 (let (($x241 (= $x171 $x302)))
 (let (($x287 (=> $x218 $x241)))
 (let (($x252 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x258 (and $x218 $x252)))
 (let (($x284 (=> $x258 $x57)))
 (let (($x49 (= ?x301 (_ bv0 32))))
 (let (($x221 (= $x252 $x49)))
 (let (($x224 (=> $x218 $x221)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x278)))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x29)))
 (let (($x33 (= input.spec-%var-l-1.2.0 ?x295)))
 (let (($x44 (=> $x218 $x33)))
 (let (($x126 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x161 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x161 (_ bv1 32))))
 (let (($x297 (= $x218 $x269)))
 (let (($x243 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x131 (=> $x243 $x57)))
 (let (($x261 (= ?x161 (_ bv0 32))))
 (let (($x217 (= $x243 $x261)))
 (let (($x293 (and (and (and (and (and (and $x217 $x131) $x297) $x44) $x224) $x284) $x287)))
 (let (($x265 (and (and (and $x293 $x238) $x148) $x294)))
 (let (($x267 (= $x265 true)))
 (let ((?x69 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv1 32))) (select input.dst.llvm-mem ?x69))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x69 (_ bv2 32))) ?x199))))
 (let ((?x291 (bvadd ?x215 (_ bv4 32))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x242))))
 (let (($x40 (= (_ bv0 32) ?x222)))
 (let ((?x216 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x216 (_ bv1 32))))
 (let (($x200 (= $x8 $x47)))
 (let (($x186 (=> $x192 $x200)))
 (let (($x155 (= ?x216 (_ bv0 32))))
 (let (($x37 (= $x203 $x155)))
 (let (($x16 (=> $x192 $x37)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x45))))
 (let (($x124 (= input.spec-%var-l-1.2.1.2.0 ?x280)))
 (let (($x290 (=> $x192 $x124)))
 (let (($x139 (= (_ bv0 32) ?x215)))
 (let ((?x41 (ite $x139 (_ bv0 32) (_ bv1 32))))
 (let (($x159 (bvuge ?x41 (_ bv1 32))))
 (let (($x244 (= $x171 $x159)))
 (let (($x24 (=> $x218 $x244)))
 (let (($x189 (= ?x41 (_ bv0 32))))
 (let (($x175 (= $x252 $x189)))
 (let (($x223 (=> $x218 $x175)))
 (let ((?x144 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x116 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x206 (concat (select input.dst.llvm-mem ?x116) (concat ?x208 (concat ?x128 ?x144)))))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x58 (=> $x218 $x130)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x9 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x251 (= ?x9 (_ bv0 32))))
 (let (($x184 (= $x243 $x251)))
 (let (($x53 (and (and (and (and $x131 $x284) (= $x218 (bvuge ?x9 (_ bv1 32)))) $x184) $x58)))
 (let (($x255 (and (and (and (and (and $x53 $x223) $x24) $x290) $x16) $x186)))
 (let (($x256 (= $x255 true)))
 (let ((?x219 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x31 (= (_ bv0 3) ?x219)))
 (let (($x35 (= $x31 true)))
 (let (($x113 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x212 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x46 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x212) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x212))))
 (let (($x120 (and true $x46)))
 (let (($x26 (and $x46 $x120)))
 (let (($x11 (= (bvand ?x102 (_ bv4294967288 32)) ?x102)))
 (let (($x194 (= (bvand ?x96 (_ bv4294967292 32)) ?x96)))
 (let (($x32 (and $x194 $x11)))
 (let (($x170 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x96 (bvsub ?x96 (_ bv4 32))) (bvult ?x96 (bvsub ?x96 (_ bv4 32))))))
 (let (($x210 (and (and (and (and (and $x120 $x170) $x194) $x32) $x26) $x113)))
 (let (($x156 (not $x101)))
 (let (($x19 (=> $x156 $x210)))
 (let (($x52 (= $x19 true)))
 (let (($x90 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x98 (= $x90 true)))
 (let (($x127 (= $x156 true)))
 (let ((?x88 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x88)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x93 (and $x117 $x152)))
 (let (($x151 (and $x93 $x12)))
 (let (($x27 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x150 (and $x27 $x151)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x143 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x106 $x182)))))))
 (let (($x135 (and $x143 $x150)))
 (let (($x153 (= $x135 true)))
 (let (($x23 (and $x153 $x127)))
 (let (($x43 (and $x23 $x98)))
 (let (($x195 (and $x43 $x52)))
 (let (($x209 (and $x195 $x35)))
 (let (($x202 (and $x209 $x256)))
 (let (($x277 (and $x202 $x267)))
 (let (($x92 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x274 (and $x92 $x277)))
 (let (($x7 (bvugt ?x96 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x119 (bvadd ?x96 (_ bv3 32))))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x119)))
 (let (($x111 (=> (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x91 (=> (and $x156 (bvule ?x96 (bvsub (bvadd ?x96 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x7)))))))
 (let (($x112 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x110 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32))) (or false (or false (and true (or $x146 $x112)))))))
 (let (($x132 (=> (and $x156 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x69 (_ bv1 32)))) (or false (or false (and true (or $x146 $x112)))))))
 (let (($x15 (and $x132 $x91)))
 (let (($x306 (and $x15 $x274)))
 (let (($x414 (=> $x306 $x413)))
 (not $x414)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var914X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv4294967280 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var911X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var911X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var911X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var908X () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var905X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var905X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var905X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xa0a0a0a6)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xa0a0a0a0)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xa0a0a0a8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xa0))
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xa0a0a0a0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.ind-%var905X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var905X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var911X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var914X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var911X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var905X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var911X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var908X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x59))))
 (let ((?x13 ((_ extract 2 0) ?x197)))
 (let (($x253 (= (_ bv0 3) ?x13)))
 (let (($x279 (= $x253 true)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x73 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x139 (concat ?x215 (concat ?x76 ?x73))))
 (let ((?x291 (bvadd ?x139 (_ bv4 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x220))))
 (let (($x40 (= (_ bv0 32) ?x222)))
 (let ((?x216 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x216 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x285 $x8)))
 (let (($x244 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x5 (and $x63 $x244)))
 (let (($x200 (=> $x5 $x47)))
 (let (($x155 (= ?x216 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x37 (= $x203 $x155)))
 (let (($x16 (=> $x5 $x37)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x169))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.0 ?x124)))
 (let (($x185 (=> $x5 $x290)))
 (let (($x41 (= (_ bv0 32) ?x139)))
 (let ((?x189 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x189 (_ bv1 32))))
 (let (($x66 (= $x244 $x24)))
 (let (($x192 (=> $x63 $x66)))
 (let (($x9 (= false false)))
 (let (($x53 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x171 (and $x63 $x53)))
 (let (($x159 (=> $x171 $x9)))
 (let (($x175 (= ?x189 (_ bv0 32))))
 (let (($x223 (= $x53 $x175)))
 (let (($x198 (=> $x63 $x223)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x128)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x193)))
 (let (($x130 (=> $x63 $x206)))
 (let (($x252 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x258 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (bvuge ?x258 (_ bv1 32))))
 (let (($x251 (= $x63 $x190)))
 (let (($x218 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x183 (=> $x218 $x9)))
 (let (($x284 (= ?x258 (_ bv0 32))))
 (let (($x56 (= $x218 $x284)))
 (let (($x126 (and (and (and (and (and (and $x56 $x183) $x251) $x130) $x198) $x159) $x192)))
 (let (($x217 (and (and (and $x126 $x185) $x16) $x200)))
 (let (($x250 (= $x217 true)))
 (let ((?x209 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x21 (= (_ bv0 3) ?x209)))
 (let (($x243 (= $x21 true)))
 (let (($x138 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x165 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x172 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x165) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x165))))
 (let (($x176 (and true $x172)))
 (let (($x26 (and $x172 $x176)))
 (let (($x32 (= (bvand ?x197 (_ bv4294967288 32)) ?x197)))
 (let (($x140 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x14 (and $x140 $x32)))
 (let (($x145 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x195 (and (and (and (and (and $x176 $x145) $x140) $x14) $x26) $x138)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x101)))
 (let (($x177 (=> $x156 $x195)))
 (let (($x219 (= $x177 true)))
 (let (($x214 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x212 (= $x214 true)))
 (let (($x90 (= $x156 true)))
 (let ((?x150 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x150)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x151 (and $x93 $x12)))
 (let (($x153 (and $x151 $x135)))
 (let (($x106 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (and $x106 $x153)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x152 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x83)))))))
 (let (($x23 (and $x152 $x127)))
 (let (($x42 (= $x23 true)))
 (let (($x98 (and $x42 $x90)))
 (let (($x201 (and $x98 $x212)))
 (let (($x31 (and $x201 $x219)))
 (let (($x57 (and $x31 $x243)))
 (let (($x269 (and $x57 $x250)))
 (let (($x142 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x297 (and $x142 $x269)))
 (let (($x62 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd ?x85 (_ bv3 32))))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x92 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x62)))))))
 (let (($x36 (=> (and $x156 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x174 $x62)))))))
 (let (($x134 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x115 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x100 (=> $x115 (or false (or false (and true (or $x162 $x134)))))))
 (let (($x74 (=> (and $x156 $x115) (or false (or false (and true (or $x162 $x134)))))))
 (let (($x119 (and $x74 $x36)))
 (let (($x289 (and $x119 $x297)))
 (let (($x298 (=> $x289 $x279)))
 (not $x298)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem ?x85))))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x85 (_ bv2 32))) ?x59))))
 (let ((?x13 ((_ extract 2 0) ?x197)))
 (let (($x253 (= (_ bv0 3) ?x13)))
 (let (($x279 (= $x253 true)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x73 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x139 (concat ?x215 (concat ?x76 ?x73))))
 (let ((?x291 (bvadd ?x139 (_ bv4 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv1 32))) (select input.dst.llvm-mem ?x291))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x291 (_ bv2 32))) ?x220))))
 (let (($x40 (= (_ bv0 32) ?x222)))
 (let ((?x216 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x216 (_ bv1 32))))
 (let (($x285 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x47 (= $x285 $x8)))
 (let (($x244 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x5 (and $x63 $x244)))
 (let (($x200 (=> $x5 $x47)))
 (let (($x155 (= ?x216 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x37 (= $x203 $x155)))
 (let (($x16 (=> $x5 $x37)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x169))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.0 ?x124)))
 (let (($x185 (=> $x5 $x290)))
 (let (($x41 (= (_ bv0 32) ?x139)))
 (let ((?x189 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x189 (_ bv1 32))))
 (let (($x66 (= $x244 $x24)))
 (let (($x192 (=> $x63 $x66)))
 (let (($x9 (= false false)))
 (let (($x53 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x171 (and $x63 $x53)))
 (let (($x159 (=> $x171 $x9)))
 (let (($x175 (= ?x189 (_ bv0 32))))
 (let (($x223 (= $x53 $x175)))
 (let (($x198 (=> $x63 $x223)))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x196)))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x128)))
 (let (($x206 (= input.spec-%var-l-1.2.0 ?x193)))
 (let (($x130 (=> $x63 $x206)))
 (let (($x252 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x258 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (bvuge ?x258 (_ bv1 32))))
 (let (($x251 (= $x63 $x190)))
 (let (($x218 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x183 (=> $x218 $x9)))
 (let (($x284 (= ?x258 (_ bv0 32))))
 (let (($x56 (= $x218 $x284)))
 (let (($x126 (and (and (and (and (and (and $x56 $x183) $x251) $x130) $x198) $x159) $x192)))
 (let (($x217 (and (and (and $x126 $x185) $x16) $x200)))
 (let (($x250 (= $x217 true)))
 (let ((?x209 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x21 (= (_ bv0 3) ?x209)))
 (let (($x243 (= $x21 true)))
 (let (($x138 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x165 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x172 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x165) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x165))))
 (let (($x176 (and true $x172)))
 (let (($x26 (and $x172 $x176)))
 (let (($x32 (= (bvand ?x197 (_ bv4294967288 32)) ?x197)))
 (let (($x140 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x14 (and $x140 $x32)))
 (let (($x145 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x195 (and (and (and (and (and $x176 $x145) $x140) $x14) $x26) $x138)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x101)))
 (let (($x177 (=> $x156 $x195)))
 (let (($x219 (= $x177 true)))
 (let (($x214 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x212 (= $x214 true)))
 (let (($x90 (= $x156 true)))
 (let ((?x150 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x150)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x151 (and $x93 $x12)))
 (let (($x153 (and $x151 $x135)))
 (let (($x106 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x127 (and $x106 $x153)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x152 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x181 $x83)))))))
 (let (($x23 (and $x152 $x127)))
 (let (($x42 (= $x23 true)))
 (let (($x98 (and $x42 $x90)))
 (let (($x201 (and $x98 $x212)))
 (let (($x31 (and $x201 $x219)))
 (let (($x57 (and $x31 $x243)))
 (let (($x269 (and $x57 $x250)))
 (let (($x142 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x297 (and $x142 $x269)))
 (let (($x62 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd ?x85 (_ bv3 32))))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x92 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x62)))))))
 (let (($x36 (=> (and $x156 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x174 $x62)))))))
 (let (($x134 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x115 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x100 (=> $x115 (or false (or false (and true (or $x162 $x134)))))))
 (let (($x74 (=> (and $x156 $x115) (or false (or false (and true (or $x162 $x134)))))))
 (let (($x119 (and $x74 $x36)))
 (let (($x289 (and $x119 $x297)))
 (let (($x298 (=> $x289 $x279)))
 (not $x298)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x82))))
 (let (($x298 (bvule ?x34 (_ bv4294967294 32))))
 (let (($x248 (= $x298 true)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x6 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x139 (concat ?x199 (concat ?x163 ?x76))))
 (let ((?x185 (bvadd ?x139 (_ bv4 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x291))))
 (let (($x87 (= (_ bv0 32) ?x296)))
 (let ((?x220 (ite $x87 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x220 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x37 (= $x216 $x155)))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x251 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x66 (and $x251 $x159)))
 (let (($x16 (=> $x66 $x37)))
 (let (($x281 (= ?x220 (_ bv0 32))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x222 (= $x290 $x281)))
 (let (($x40 (=> $x66 $x222)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x213))))
 (let (($x169 (= input.spec-%var-l-1.2.1.2.0 ?x30)))
 (let (($x45 (=> $x66 $x169)))
 (let (($x41 (= (_ bv0 32) ?x139)))
 (let ((?x189 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x189 (_ bv1 32))))
 (let (($x244 (= $x159 $x257)))
 (let (($x24 (=> $x251 $x244)))
 (let (($x63 (= false false)))
 (let (($x53 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x202 (and $x251 $x53)))
 (let (($x171 (=> $x202 $x63)))
 (let (($x175 (= ?x189 (_ bv0 32))))
 (let (($x223 (= $x53 $x175)))
 (let (($x198 (=> $x251 $x223)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x72)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x196)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x256 (=> $x251 $x130)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x9 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x9 (_ bv1 32))))
 (let (($x184 (= $x251 $x255)))
 (let (($x258 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x190 (=> $x258 $x63)))
 (let (($x183 (= ?x9 (_ bv0 32))))
 (let (($x186 (= $x258 $x183)))
 (let (($x217 (and (and (and (and (and (and $x186 $x190) $x184) $x256) $x198) $x171) $x24)))
 (let (($x297 (and (and (and $x217 $x45) $x40) $x16)))
 (let (($x289 (= $x297 true)))
 (let ((?x57 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x131 (= (_ bv0 3) ?x57)))
 (let (($x218 (= $x131 true)))
 (let (($x137 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x179 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x50 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x179) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x179))))
 (let (($x173 (and true $x50)))
 (let (($x26 (and $x50 $x173)))
 (let (($x14 (= (bvand ?x34 (_ bv4294967288 32)) ?x34)))
 (let (($x125 (= (bvand ?x115 (_ bv4294967292 32)) ?x115)))
 (let (($x19 (and $x125 $x14)))
 (let (($x211 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x115 (bvsub ?x115 (_ bv4 32))) (bvult ?x115 (bvsub ?x115 (_ bv4 32))))))
 (let (($x31 (and (and (and (and (and $x173 $x211) $x125) $x19) $x26) $x137)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x101)))
 (let (($x35 (=> $x156 $x31)))
 (let (($x209 (= $x35 true)))
 (let (($x46 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x165 (= $x46 true)))
 (let (($x214 (= $x156 true)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x23 (= (_ bv0 32) ?x127)))
 (let ((?x150 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x150)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (and $x151 $x135)))
 (let (($x42 (and $x153 $x23)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x90 (and $x181 $x42)))
 (let (($x117 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x117)))))))
 (let (($x98 (and $x12 $x90)))
 (let (($x43 (= $x98 true)))
 (let (($x212 (and $x43 $x214)))
 (let (($x120 (and $x212 $x165)))
 (let (($x21 (and $x120 $x209)))
 (let (($x168 (and $x21 $x218)))
 (let (($x13 (and $x168 $x289)))
 (let (($x77 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x253 (and $x77 $x13)))
 (let (($x91 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x154 (bvadd ?x115 (_ bv3 32))))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x154)))
 (let (($x142 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x91)))))))
 (let (($x39 (=> (and $x156 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x111 $x91)))))))
 (let (($x132 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x38 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x7 (=> $x38 (or false (or false (and true (or $x110 $x132)))))))
 (let (($x116 (=> (and $x156 $x38) (or false (or false (and true (or $x110 $x132)))))))
 (let (($x51 (and $x116 $x39)))
 (let (($x279 (and $x51 $x253)))
 (let (($x79 (=> $x279 $x248)))
 (not $x79))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x82))))
 (let (($x298 (bvule ?x34 (_ bv4294967294 32))))
 (let (($x248 (= $x298 true)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x6 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x139 (concat ?x199 (concat ?x163 ?x76))))
 (let ((?x185 (bvadd ?x139 (_ bv4 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv1 32))) (select input.dst.llvm-mem ?x185))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x185 (_ bv2 32))) ?x291))))
 (let (($x87 (= (_ bv0 32) ?x296)))
 (let ((?x220 (ite $x87 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x220 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x37 (= $x216 $x155)))
 (let (($x159 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x251 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x66 (and $x251 $x159)))
 (let (($x16 (=> $x66 $x37)))
 (let (($x281 (= ?x220 (_ bv0 32))))
 (let (($x290 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x222 (= $x290 $x281)))
 (let (($x40 (=> $x66 $x222)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv1 32))) (select input.dst.llvm-mem ?x139))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x139 (_ bv2 32))) ?x213))))
 (let (($x169 (= input.spec-%var-l-1.2.1.2.0 ?x30)))
 (let (($x45 (=> $x66 $x169)))
 (let (($x41 (= (_ bv0 32) ?x139)))
 (let ((?x189 (ite $x41 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x189 (_ bv1 32))))
 (let (($x244 (= $x159 $x257)))
 (let (($x24 (=> $x251 $x244)))
 (let (($x63 (= false false)))
 (let (($x53 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x202 (and $x251 $x53)))
 (let (($x171 (=> $x202 $x63)))
 (let (($x175 (= ?x189 (_ bv0 32))))
 (let (($x223 (= $x53 $x175)))
 (let (($x198 (=> $x251 $x223)))
 (let ((?x72 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x196 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x72)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x196)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x206)))
 (let (($x256 (=> $x251 $x130)))
 (let (($x56 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x9 (ite $x56 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x9 (_ bv1 32))))
 (let (($x184 (= $x251 $x255)))
 (let (($x258 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x190 (=> $x258 $x63)))
 (let (($x183 (= ?x9 (_ bv0 32))))
 (let (($x186 (= $x258 $x183)))
 (let (($x217 (and (and (and (and (and (and $x186 $x190) $x184) $x256) $x198) $x171) $x24)))
 (let (($x297 (and (and (and $x217 $x45) $x40) $x16)))
 (let (($x289 (= $x297 true)))
 (let ((?x57 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x131 (= (_ bv0 3) ?x57)))
 (let (($x218 (= $x131 true)))
 (let (($x137 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x179 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x50 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x179) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x179))))
 (let (($x173 (and true $x50)))
 (let (($x26 (and $x50 $x173)))
 (let (($x14 (= (bvand ?x34 (_ bv4294967288 32)) ?x34)))
 (let (($x125 (= (bvand ?x115 (_ bv4294967292 32)) ?x115)))
 (let (($x19 (and $x125 $x14)))
 (let (($x211 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x115 (bvsub ?x115 (_ bv4 32))) (bvult ?x115 (bvsub ?x115 (_ bv4 32))))))
 (let (($x31 (and (and (and (and (and $x173 $x211) $x125) $x19) $x26) $x137)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x156 (not $x101)))
 (let (($x35 (=> $x156 $x31)))
 (let (($x209 (= $x35 true)))
 (let (($x46 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x165 (= $x46 true)))
 (let (($x214 (= $x156 true)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x23 (= (_ bv0 32) ?x127)))
 (let ((?x150 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x150)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (and $x151 $x135)))
 (let (($x42 (and $x153 $x23)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x90 (and $x181 $x42)))
 (let (($x117 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x117)))))))
 (let (($x98 (and $x12 $x90)))
 (let (($x43 (= $x98 true)))
 (let (($x212 (and $x43 $x214)))
 (let (($x120 (and $x212 $x165)))
 (let (($x21 (and $x120 $x209)))
 (let (($x168 (and $x21 $x218)))
 (let (($x13 (and $x168 $x289)))
 (let (($x77 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x253 (and $x77 $x13)))
 (let (($x91 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x154 (bvadd ?x115 (_ bv3 32))))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x154)))
 (let (($x142 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x111 $x91)))))))
 (let (($x39 (=> (and $x156 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x111 $x91)))))))
 (let (($x132 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x38 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x7 (=> $x38 (or false (or false (and true (or $x110 $x132)))))))
 (let (($x116 (=> (and $x156 $x38) (or false (or false (and true (or $x110 $x132)))))))
 (let (($x51 (and $x116 $x39)))
 (let (($x279 (and $x51 $x253)))
 (let (($x79 (=> $x279 $x248)))
 (not $x79))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1032X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var1029X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var1029X.0 () (_ BitVec 32))
(declare-fun input.ind-%var1029X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1032X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x281 (concat ?x220 (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv4 32))))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1032X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1032X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x37 (concat ?x155 (concat ?x40 ?x281))))
 (let (($x16 (= ?x37 ?x37)))
 (let (($x260 (= (_ bv0 32) input.ind-%var1032X)))
 (let ((?x126 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x126 (_ bv1 32))))
 (let (($x297 (=> $x169 $x16)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1032X))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv2 32))) ?x185)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv3 32))) ?x242)))
 (let (($x161 (= ?x203 ?x203)))
 (let (($x291 (=> $x169 $x161)))
 (let (($x45 (= $x169 $x169)))
 (let (($x43 (= false false)))
 (let (($x213 (= ?x126 (_ bv0 32))))
 (let (($x30 (=> $x213 $x43)))
 (let (($x13 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x213 $x213)) $x30)))
 (let (($x298 (and (and (and $x13 $x45) $x291) $x297)))
 (let (($x24 (= input.ind-%var1029X.2.1 input.ind-%var1029X.2.1)))
 (let (($x202 (bvuge input.ind-%var1029X.0 (_ bv1 32))))
 (let (($x217 (=> $x202 $x24)))
 (let (($x159 (= input.ind-%var1029X.2.0 input.ind-%var1029X.2.0)))
 (let (($x257 (=> $x202 $x159)))
 (let (($x171 (= $x202 $x202)))
 (let (($x223 (= input.ind-%var1029X.0 (_ bv0 32))))
 (let (($x47 (=> $x223 $x43)))
 (let (($x192 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x223 $x223)) $x47)))
 (let (($x280 (and (and (and $x192 $x171) $x257) $x217)))
 (let (($x248 (and $x280 $x298)))
 (let (($x139 (not true)))
 (let (($x79 (or $x139 $x248)))
 (let (($x107 (and true $x79)))
 (let (($x103 (= $x107 true)))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x158 (concat ?x167 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x82 (concat ?x178 ?x158))))
 (let ((?x190 (bvadd ?x99 (_ bv4 32))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv1 32))) (select input.dst.llvm-mem ?x190))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv2 32))) ?x184))))
 (let (($x208 (= (_ bv0 32) ?x25)))
 (let ((?x259 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x259 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x256 (= $x206 $x130)))
 (let (($x219 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x212 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x35 (and $x212 $x219)))
 (let (($x8 (=> $x35 $x256)))
 (let (($x48 (= ?x259 (_ bv0 32))))
 (let (($x63 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x72 (= $x63 $x48)))
 (let (($x196 (=> $x35 $x72)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x131))))
 (let (($x9 (= input.spec-%var-l-1.2.1.2.0 ?x56)))
 (let (($x183 (=> $x35 $x9)))
 (let (($x34 (= (_ bv0 32) ?x99)))
 (let ((?x11 (ite $x34 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x11 (_ bv1 32))))
 (let (($x137 (= $x219 $x52)))
 (let (($x31 (=> $x212 $x137)))
 (let (($x210 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x177 (and $x212 $x210)))
 (let (($x26 (=> $x177 $x43)))
 (let (($x32 (= ?x11 (_ bv0 32))))
 (let (($x14 (= $x210 $x32)))
 (let (($x19 (=> $x212 $x14)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x170)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x145)))
 (let (($x211 (= input.spec-%var-l-1.2.0 ?x194)))
 (let (($x138 (=> $x212 $x211)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x42 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x201 (bvuge ?x42 (_ bv1 32))))
 (let (($x46 (= $x212 $x201)))
 (let (($x127 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x214 (=> $x127 $x43)))
 (let (($x90 (= ?x42 (_ bv0 32))))
 (let (($x98 (= $x127 $x90)))
 (let (($x89 (and (and (and (and (and (and $x98 $x214) $x46) $x138) $x19) $x26) $x31)))
 (let (($x6 (and (and (and $x89 $x183) $x196) $x8)))
 (let (($x97 (= $x6 true)))
 (let ((?x77 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x106 (concat ?x117 (concat ?x143 ?x77)))))
 (let (($x12 (= input.dst.llvm-%l ?x93)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x84 (and $x39 $x12)))
 (let ((?x111 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x111)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (and $x115 $x18)))
 (let (($x15 (and $x154 $x91)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x92 (and $x71 $x15)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x132)))))))
 (let (($x150 (and (and (and $x116 true) $x92) $x84)))
 (let (($x135 (= $x150 true)))
 (let (($x76 (and $x135 $x97)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x68 (and $x101 $x76)))
 (let (($x69 (=> $x68 $x103)))
 (not $x69))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1032X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var1029X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var1029X.0 () (_ BitVec 32))
(declare-fun input.ind-%var1029X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1032X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x281 (concat ?x220 (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv4 32))))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1032X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1032X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x37 (concat ?x155 (concat ?x40 ?x281))))
 (let (($x16 (= ?x37 ?x37)))
 (let (($x260 (= (_ bv0 32) input.ind-%var1032X)))
 (let ((?x126 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x126 (_ bv1 32))))
 (let (($x297 (=> $x169 $x16)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1032X))))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv2 32))) ?x185)))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1032X (_ bv3 32))) ?x242)))
 (let (($x161 (= ?x203 ?x203)))
 (let (($x291 (=> $x169 $x161)))
 (let (($x45 (= $x169 $x169)))
 (let (($x43 (= false false)))
 (let (($x213 (= ?x126 (_ bv0 32))))
 (let (($x30 (=> $x213 $x43)))
 (let (($x13 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x213 $x213)) $x30)))
 (let (($x298 (and (and (and $x13 $x45) $x291) $x297)))
 (let (($x24 (= input.ind-%var1029X.2.1 input.ind-%var1029X.2.1)))
 (let (($x202 (bvuge input.ind-%var1029X.0 (_ bv1 32))))
 (let (($x217 (=> $x202 $x24)))
 (let (($x159 (= input.ind-%var1029X.2.0 input.ind-%var1029X.2.0)))
 (let (($x257 (=> $x202 $x159)))
 (let (($x171 (= $x202 $x202)))
 (let (($x223 (= input.ind-%var1029X.0 (_ bv0 32))))
 (let (($x47 (=> $x223 $x43)))
 (let (($x192 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x223 $x223)) $x47)))
 (let (($x280 (and (and (and $x192 $x171) $x257) $x217)))
 (let (($x248 (and $x280 $x298)))
 (let (($x139 (not true)))
 (let (($x79 (or $x139 $x248)))
 (let (($x107 (and true $x79)))
 (let (($x103 (= $x107 true)))
 (let ((?x167 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x158 (concat ?x167 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x99 (concat ?x82 (concat ?x178 ?x158))))
 (let ((?x190 (bvadd ?x99 (_ bv4 32))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv1 32))) (select input.dst.llvm-mem ?x190))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x190 (_ bv2 32))) ?x184))))
 (let (($x208 (= (_ bv0 32) ?x25)))
 (let ((?x259 (ite $x208 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x259 (_ bv1 32))))
 (let (($x206 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x256 (= $x206 $x130)))
 (let (($x219 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x212 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x35 (and $x212 $x219)))
 (let (($x8 (=> $x35 $x256)))
 (let (($x48 (= ?x259 (_ bv0 32))))
 (let (($x63 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x72 (= $x63 $x48)))
 (let (($x196 (=> $x35 $x72)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv1 32))) (select input.dst.llvm-mem ?x99))))
 (let ((?x56 (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x99 (_ bv2 32))) ?x131))))
 (let (($x9 (= input.spec-%var-l-1.2.1.2.0 ?x56)))
 (let (($x183 (=> $x35 $x9)))
 (let (($x34 (= (_ bv0 32) ?x99)))
 (let ((?x11 (ite $x34 (_ bv0 32) (_ bv1 32))))
 (let (($x52 (bvuge ?x11 (_ bv1 32))))
 (let (($x137 (= $x219 $x52)))
 (let (($x31 (=> $x212 $x137)))
 (let (($x210 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x177 (and $x212 $x210)))
 (let (($x26 (=> $x177 $x43)))
 (let (($x32 (= ?x11 (_ bv0 32))))
 (let (($x14 (= $x210 $x32)))
 (let (($x19 (=> $x212 $x14)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x170)))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x145)))
 (let (($x211 (= input.spec-%var-l-1.2.0 ?x194)))
 (let (($x138 (=> $x212 $x211)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x42 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x201 (bvuge ?x42 (_ bv1 32))))
 (let (($x46 (= $x212 $x201)))
 (let (($x127 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x214 (=> $x127 $x43)))
 (let (($x90 (= ?x42 (_ bv0 32))))
 (let (($x98 (= $x127 $x90)))
 (let (($x89 (and (and (and (and (and (and $x98 $x214) $x46) $x138) $x19) $x26) $x31)))
 (let (($x6 (and (and (and $x89 $x183) $x196) $x8)))
 (let (($x97 (= $x6 true)))
 (let ((?x77 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x106 (concat ?x117 (concat ?x143 ?x77)))))
 (let (($x12 (= input.dst.llvm-%l ?x93)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x84 (and $x39 $x12)))
 (let ((?x111 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x111)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (and $x115 $x18)))
 (let (($x15 (and $x154 $x91)))
 (let (($x71 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x92 (and $x71 $x15)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x116 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x132)))))))
 (let (($x150 (and (and (and $x116 true) $x92) $x84)))
 (let (($x135 (= $x150 true)))
 (let (($x76 (and $x135 $x97)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x68 (and $x101 $x76)))
 (let (($x69 (=> $x68 $x103)))
 (not $x69))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 33
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1058X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var1055X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var1055X.0 () (_ BitVec 32))
(declare-fun input.ind-%var1055X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1058X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x40 (concat ?x222 (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv4 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1058X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1058X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x37 (concat ?x269 (concat ?x220 ?x40))))
 (let (($x16 (= ?x37 ?x37)))
 (let (($x289 (= (_ bv0 32) input.ind-%var1058X)))
 (let ((?x30 (ite $x289 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x30 (_ bv1 32))))
 (let (($x297 (=> $x253 $x16)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1058X))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv2 32))) ?x124)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv3 32))) ?x185)))
 (let (($x291 (= ?x161 ?x161)))
 (let (($x279 (=> $x253 $x291)))
 (let (($x207 (= $x253 $x253)))
 (let (($x212 (= false false)))
 (let (($x13 (= ?x30 (_ bv0 32))))
 (let (($x45 (=> $x13 $x212)))
 (let (($x248 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x13 $x13)) $x45)))
 (let (($x103 (and (and (and $x248 $x207) $x279) $x297)))
 (let (($x24 (= input.ind-%var1055X.2.1 input.ind-%var1055X.2.1)))
 (let (($x20 (bvuge input.ind-%var1055X.0 (_ bv1 32))))
 (let (($x217 (=> $x20 $x24)))
 (let (($x257 (= input.ind-%var1055X.2.0 input.ind-%var1055X.2.0)))
 (let (($x286 (=> $x20 $x257)))
 (let (($x200 (= $x20 $x20)))
 (let (($x192 (= input.ind-%var1055X.0 (_ bv0 32))))
 (let (($x171 (=> $x192 $x212)))
 (let (($x180 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x192 $x192)) $x171)))
 (let (($x126 (and (and (and $x180 $x200) $x286) $x217)))
 (let (($x69 (and $x126 $x103)))
 (let (($x223 (not true)))
 (let (($x114 (or $x223 $x69)))
 (let (($x120 (and true $x114)))
 (let (($x156 (= $x120 true)))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x197 (concat ?x178 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x34 (concat ?x99 (concat ?x102 ?x197))))
 (let ((?x163 (bvadd ?x34 (_ bv4 32))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x193))))
 (let (($x184 (= (_ bv0 32) ?x261)))
 (let ((?x128 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x128 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x196 (= $x48 $x72)))
 (let (($x199 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x46 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x31 (and $x46 $x199)))
 (let (($x215 (=> $x31 $x196)))
 (let (($x25 (= ?x128 (_ bv0 32))))
 (let (($x183 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x208 (= $x183 $x25)))
 (let (($x259 (=> $x31 $x208)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x284))))
 (let (($x252 (= input.spec-%var-l-1.2.1.2.0 ?x131)))
 (let (($x56 (=> $x31 $x252)))
 (let (($x11 (= (_ bv0 32) ?x34)))
 (let ((?x32 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x32 (_ bv1 32))))
 (let (($x52 (= $x199 $x219)))
 (let (($x137 (=> $x46 $x52)))
 (let (($x125 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x177 (and $x46 $x125)))
 (let (($x26 (=> $x177 $x212)))
 (let (($x14 (= ?x32 (_ bv0 32))))
 (let (($x19 (= $x125 $x14)))
 (let (($x73 (=> $x46 $x19)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x176)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x145)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x138)))
 (let (($x140 (=> $x46 $x109)))
 (let (($x98 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x43 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x53 (bvuge ?x43 (_ bv1 32))))
 (let (($x165 (= $x46 $x53)))
 (let (($x90 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x201 (=> $x90 $x212)))
 (let (($x214 (= ?x43 (_ bv0 32))))
 (let (($x58 (= $x90 $x214)))
 (let (($x97 (and (and (and (and (and (and $x58 $x201) $x165) $x140) $x73) $x26) $x137)))
 (let (($x139 (and (and (and $x97 $x56) $x259) $x215)))
 (let (($x41 (= $x139 true)))
 (let ((?x106 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x12 (concat ?x93 (concat ?x77 (concat ?x27 ?x106)))))
 (let (($x84 (= input.dst.llvm-%l ?x12)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x150 (and $x39 $x84)))
 (let ((?x91 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x91)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x154 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (and $x174 $x154)))
 (let (($x92 (and $x111 $x15)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x151 (and $x134 $x92)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x74)))))))
 (let (($x127 (and (and (and $x115 true) $x151) $x150)))
 (let (($x23 (= $x127 true)))
 (let (($x189 (and $x23 $x41)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x175 (and $x101 $x189)))
 (let (($x146 (=> $x175 $x156)))
 (not $x146))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1058X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var1055X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var1055X.0 () (_ BitVec 32))
(declare-fun input.ind-%var1055X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1058X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x40 (concat ?x222 (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv4 32))))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1058X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1058X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x37 (concat ?x269 (concat ?x220 ?x40))))
 (let (($x16 (= ?x37 ?x37)))
 (let (($x289 (= (_ bv0 32) input.ind-%var1058X)))
 (let ((?x30 (ite $x289 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x30 (_ bv1 32))))
 (let (($x297 (=> $x253 $x16)))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1058X))))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv2 32))) ?x124)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1058X (_ bv3 32))) ?x185)))
 (let (($x291 (= ?x161 ?x161)))
 (let (($x279 (=> $x253 $x291)))
 (let (($x207 (= $x253 $x253)))
 (let (($x212 (= false false)))
 (let (($x13 (= ?x30 (_ bv0 32))))
 (let (($x45 (=> $x13 $x212)))
 (let (($x248 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x13 $x13)) $x45)))
 (let (($x103 (and (and (and $x248 $x207) $x279) $x297)))
 (let (($x24 (= input.ind-%var1055X.2.1 input.ind-%var1055X.2.1)))
 (let (($x20 (bvuge input.ind-%var1055X.0 (_ bv1 32))))
 (let (($x217 (=> $x20 $x24)))
 (let (($x257 (= input.ind-%var1055X.2.0 input.ind-%var1055X.2.0)))
 (let (($x286 (=> $x20 $x257)))
 (let (($x200 (= $x20 $x20)))
 (let (($x192 (= input.ind-%var1055X.0 (_ bv0 32))))
 (let (($x171 (=> $x192 $x212)))
 (let (($x180 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x192 $x192)) $x171)))
 (let (($x126 (and (and (and $x180 $x200) $x286) $x217)))
 (let (($x69 (and $x126 $x103)))
 (let (($x223 (not true)))
 (let (($x114 (or $x223 $x69)))
 (let (($x120 (and true $x114)))
 (let (($x156 (= $x120 true)))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x197 (concat ?x178 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x34 (concat ?x99 (concat ?x102 ?x197))))
 (let ((?x163 (bvadd ?x34 (_ bv4 32))))
 (let ((?x193 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv1 32))) (select input.dst.llvm-mem ?x163))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x163 (_ bv2 32))) ?x193))))
 (let (($x184 (= (_ bv0 32) ?x261)))
 (let ((?x128 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x72 (bvuge ?x128 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x196 (= $x48 $x72)))
 (let (($x199 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x46 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x31 (and $x46 $x199)))
 (let (($x215 (=> $x31 $x196)))
 (let (($x25 (= ?x128 (_ bv0 32))))
 (let (($x183 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x208 (= $x183 $x25)))
 (let (($x259 (=> $x31 $x208)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv1 32))) (select input.dst.llvm-mem ?x34))))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x34 (_ bv2 32))) ?x284))))
 (let (($x252 (= input.spec-%var-l-1.2.1.2.0 ?x131)))
 (let (($x56 (=> $x31 $x252)))
 (let (($x11 (= (_ bv0 32) ?x34)))
 (let ((?x32 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x32 (_ bv1 32))))
 (let (($x52 (= $x199 $x219)))
 (let (($x137 (=> $x46 $x52)))
 (let (($x125 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x177 (and $x46 $x125)))
 (let (($x26 (=> $x177 $x212)))
 (let (($x14 (= ?x32 (_ bv0 32))))
 (let (($x19 (= $x125 $x14)))
 (let (($x73 (=> $x46 $x19)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x176)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x145)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x138)))
 (let (($x140 (=> $x46 $x109)))
 (let (($x98 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x43 (ite $x98 (_ bv0 32) (_ bv1 32))))
 (let (($x53 (bvuge ?x43 (_ bv1 32))))
 (let (($x165 (= $x46 $x53)))
 (let (($x90 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x201 (=> $x90 $x212)))
 (let (($x214 (= ?x43 (_ bv0 32))))
 (let (($x58 (= $x90 $x214)))
 (let (($x97 (and (and (and (and (and (and $x58 $x201) $x165) $x140) $x73) $x26) $x137)))
 (let (($x139 (and (and (and $x97 $x56) $x259) $x215)))
 (let (($x41 (= $x139 true)))
 (let ((?x106 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x12 (concat ?x93 (concat ?x77 (concat ?x27 ?x106)))))
 (let (($x84 (= input.dst.llvm-%l ?x12)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x150 (and $x39 $x84)))
 (let ((?x91 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x91)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x154 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x111 (and $x174 $x154)))
 (let (($x92 (and $x111 $x15)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x151 (and $x134 $x92)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x100 $x74)))))))
 (let (($x127 (and (and (and $x115 true) $x151) $x150)))
 (let (($x23 (= $x127 true)))
 (let (($x189 (and $x23 $x41)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x175 (and $x101 $x189)))
 (let (($x146 (=> $x175 $x156)))
 (not $x146))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 34
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1084X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var1081X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var1081X.0 () (_ BitVec 32))
(declare-fun input.ind-%var1081X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1084X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x87 (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv4 32))))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1084X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1084X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x37 (concat ?x296 (concat ?x222 ?x220))))
 (let (($x16 (= ?x37 ?x37)))
 (let (($x298 (= (_ bv0 32) input.ind-%var1084X)))
 (let ((?x45 (ite $x298 (_ bv0 32) (_ bv1 32))))
 (let (($x79 (bvuge ?x45 (_ bv1 32))))
 (let (($x297 (=> $x79 $x16)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1084X))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv2 32))) ?x187)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv3 32))) ?x124)))
 (let (($x279 (= ?x291 ?x291)))
 (let (($x107 (=> $x79 $x279)))
 (let (($x242 (= $x79 $x79)))
 (let (($x46 (= false false)))
 (let (($x248 (= ?x45 (_ bv0 32))))
 (let (($x207 (=> $x248 $x46)))
 (let (($x69 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x248 $x248)) $x207)))
 (let (($x156 (and (and (and $x69 $x242) $x107) $x297)))
 (let (($x24 (= input.ind-%var1081X.2.1 input.ind-%var1081X.2.1)))
 (let (($x5 (bvuge input.ind-%var1081X.0 (_ bv1 32))))
 (let (($x217 (=> $x5 $x24)))
 (let (($x286 (= input.ind-%var1081X.2.0 input.ind-%var1081X.2.0)))
 (let (($x260 (=> $x5 $x286)))
 (let (($x159 (= $x5 $x5)))
 (let (($x180 (= input.ind-%var1081X.0 (_ bv0 32))))
 (let (($x200 (=> $x180 $x46)))
 (let (($x213 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x180 $x180)) $x200)))
 (let (($x30 (and (and (and $x213 $x159) $x260) $x217)))
 (let (($x146 (and $x30 $x156)))
 (let (($x192 (not true)))
 (let (($x182 (or $x192 $x146)))
 (let (($x113 (and true $x182)))
 (let (($x133 (= $x113 true)))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x59 (concat ?x102 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x11 (concat ?x34 (concat ?x82 ?x59))))
 (let ((?x76 (bvadd ?x11 (_ bv4 32))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x251))))
 (let (($x193 (= (_ bv0 32) ?x186)))
 (let ((?x144 (ite $x193 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x144 (_ bv1 32))))
 (let (($x25 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x259 (= $x25 $x208)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x137 (and $x165 $x6)))
 (let (($x68 (=> $x137 $x259)))
 (let (($x261 (= ?x144 (_ bv0 32))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x56 $x261)))
 (let (($x128 (=> $x137 $x184)))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv1 32))) (select input.dst.llvm-mem ?x11))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv2 32))) ?x21))))
 (let (($x243 (= input.spec-%var-l-1.2.1.2.0 ?x284)))
 (let (($x131 (=> $x137 $x243)))
 (let (($x32 (= (_ bv0 32) ?x11)))
 (let ((?x14 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x199 (bvuge ?x14 (_ bv1 32))))
 (let (($x219 (= $x6 $x199)))
 (let (($x52 (=> $x165 $x219)))
 (let (($x195 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x177 (and $x165 $x195)))
 (let (($x26 (=> $x177 $x46)))
 (let (($x19 (= ?x14 (_ bv0 32))))
 (let (($x73 (= $x195 $x19)))
 (let (($x8 (=> $x165 $x73)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x179)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x145)))
 (let (($x256 (= input.spec-%var-l-1.2.0 ?x140)))
 (let (($x210 (=> $x165 $x256)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x212 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x212 (_ bv1 32))))
 (let (($x86 (= $x165 $x130)))
 (let (($x214 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x53 (=> $x214 $x46)))
 (let (($x201 (= ?x212 (_ bv0 32))))
 (let (($x206 (= $x214 $x201)))
 (let (($x41 (and (and (and (and (and (and $x206 $x53) $x86) $x210) $x8) $x26) $x52)))
 (let (($x223 (and (and (and $x41 $x131) $x128) $x68)))
 (let (($x198 (= $x223 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x84 (concat ?x12 (concat ?x106 (concat ?x143 ?x93)))))
 (let (($x150 (= input.dst.llvm-%l ?x84)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x127 (and $x39 $x150)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x92 (= (_ bv0 32) ?x15)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (and $x62 $x111)))
 (let (($x151 (and $x91 $x92)))
 (let (($x108 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x153 (and $x108 $x151)))
 (let (($x181 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x174 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x181)))))))
 (let (($x90 (and (and (and $x174 true) $x153) $x127)))
 (let (($x98 (= $x90 true)))
 (let (($x66 (and $x98 $x198)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x47 (and $x101 $x66)))
 (let (($x162 (=> $x47 $x133)))
 (not $x162))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var1084X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var1081X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var1081X.0 () (_ BitVec 32))
(declare-fun input.ind-%var1081X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1084X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x87 (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv4 32))))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1084X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var1084X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x37 (concat ?x296 (concat ?x222 ?x220))))
 (let (($x16 (= ?x37 ?x37)))
 (let (($x298 (= (_ bv0 32) input.ind-%var1084X)))
 (let ((?x45 (ite $x298 (_ bv0 32) (_ bv1 32))))
 (let (($x79 (bvuge ?x45 (_ bv1 32))))
 (let (($x297 (=> $x79 $x16)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var1084X))))
 (let ((?x124 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv2 32))) ?x187)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd input.ind-%var1084X (_ bv3 32))) ?x124)))
 (let (($x279 (= ?x291 ?x291)))
 (let (($x107 (=> $x79 $x279)))
 (let (($x242 (= $x79 $x79)))
 (let (($x46 (= false false)))
 (let (($x248 (= ?x45 (_ bv0 32))))
 (let (($x207 (=> $x248 $x46)))
 (let (($x69 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x248 $x248)) $x207)))
 (let (($x156 (and (and (and $x69 $x242) $x107) $x297)))
 (let (($x24 (= input.ind-%var1081X.2.1 input.ind-%var1081X.2.1)))
 (let (($x5 (bvuge input.ind-%var1081X.0 (_ bv1 32))))
 (let (($x217 (=> $x5 $x24)))
 (let (($x286 (= input.ind-%var1081X.2.0 input.ind-%var1081X.2.0)))
 (let (($x260 (=> $x5 $x286)))
 (let (($x159 (= $x5 $x5)))
 (let (($x180 (= input.ind-%var1081X.0 (_ bv0 32))))
 (let (($x200 (=> $x180 $x46)))
 (let (($x213 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x180 $x180)) $x200)))
 (let (($x30 (and (and (and $x213 $x159) $x260) $x217)))
 (let (($x146 (and $x30 $x156)))
 (let (($x192 (not true)))
 (let (($x182 (or $x192 $x146)))
 (let (($x113 (and true $x182)))
 (let (($x133 (= $x113 true)))
 (let ((?x102 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x59 (concat ?x102 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x11 (concat ?x34 (concat ?x82 ?x59))))
 (let ((?x76 (bvadd ?x11 (_ bv4 32))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x251))))
 (let (($x193 (= (_ bv0 32) ?x186)))
 (let ((?x144 (ite $x193 (_ bv0 32) (_ bv1 32))))
 (let (($x208 (bvuge ?x144 (_ bv1 32))))
 (let (($x25 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x259 (= $x25 $x208)))
 (let (($x6 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x137 (and $x165 $x6)))
 (let (($x68 (=> $x137 $x259)))
 (let (($x261 (= ?x144 (_ bv0 32))))
 (let (($x56 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x56 $x261)))
 (let (($x128 (=> $x137 $x184)))
 (let ((?x21 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv1 32))) (select input.dst.llvm-mem ?x11))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv2 32))) ?x21))))
 (let (($x243 (= input.spec-%var-l-1.2.1.2.0 ?x284)))
 (let (($x131 (=> $x137 $x243)))
 (let (($x32 (= (_ bv0 32) ?x11)))
 (let ((?x14 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x199 (bvuge ?x14 (_ bv1 32))))
 (let (($x219 (= $x6 $x199)))
 (let (($x52 (=> $x165 $x219)))
 (let (($x195 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x177 (and $x165 $x195)))
 (let (($x26 (=> $x177 $x46)))
 (let (($x19 (= ?x14 (_ bv0 32))))
 (let (($x73 (= $x195 $x19)))
 (let (($x8 (=> $x165 $x73)))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x179)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x145)))
 (let (($x256 (= input.spec-%var-l-1.2.0 ?x140)))
 (let (($x210 (=> $x165 $x256)))
 (let (($x58 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x212 (ite $x58 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x212 (_ bv1 32))))
 (let (($x86 (= $x165 $x130)))
 (let (($x214 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x53 (=> $x214 $x46)))
 (let (($x201 (= ?x212 (_ bv0 32))))
 (let (($x206 (= $x214 $x201)))
 (let (($x41 (and (and (and (and (and (and $x206 $x53) $x86) $x210) $x8) $x26) $x52)))
 (let (($x223 (and (and (and $x41 $x131) $x128) $x68)))
 (let (($x198 (= $x223 true)))
 (let ((?x93 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x12 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x84 (concat ?x12 (concat ?x106 (concat ?x143 ?x93)))))
 (let (($x150 (= input.dst.llvm-%l ?x84)))
 (let (($x39 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x127 (and $x39 $x150)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x92 (= (_ bv0 32) ?x15)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (and $x62 $x111)))
 (let (($x151 (and $x91 $x92)))
 (let (($x108 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x153 (and $x108 $x151)))
 (let (($x181 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x174 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x116 $x181)))))))
 (let (($x90 (and (and (and $x174 true) $x153) $x127)))
 (let (($x98 (= $x90 true)))
 (let (($x66 (and $x98 $x198)))
 (let (($x101 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x47 (and $x101 $x66)))
 (let (($x162 (=> $x47 $x133)))
 (not $x162))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 35
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x143 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x93 (not $x143)))
 (let (($x308 (= $x93 false)))
 (let (($x309 (= $x308 true)))
 (let ((?x72 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x220))))
 (let ((?x230 (bvadd ?x146 (_ bv4 32))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x299))))
 (let (($x49 (= (_ bv0 32) ?x301)))
 (let ((?x221 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (= ?x221 (_ bv0 32))))
 (let (($x274 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x306 (= $x274 $x224)))
 (let (($x304 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x249 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x148 (and $x249 $x304)))
 (let (($x266 (=> $x148 $x306)))
 (let (($x302 (bvuge ?x221 (_ bv1 32))))
 (let (($x265 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x267 (= $x265 $x302)))
 (let (($x277 (=> $x148 $x267)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x188))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x264)))
 (let (($x94 (=> $x148 $x283)))
 (let (($x182 (= (_ bv0 32) ?x146)))
 (let ((?x113 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x211 (bvuge ?x113 (_ bv1 32))))
 (let (($x234 (= $x304 $x211)))
 (let (($x288 (=> $x249 $x234)))
 (let (($x11 (= false false)))
 (let (($x235 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x292 (and $x249 $x235)))
 (let (($x247 (=> $x292 $x11)))
 (let (($x133 (= ?x113 (_ bv0 32))))
 (let (($x303 (= $x235 $x133)))
 (let (($x254 (=> $x249 $x303)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x138 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x296 (concat (select input.dst.llvm-mem ?x138) (concat ?x120 (concat ?x291 ?x187)))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x296)))
 (let (($x276 (=> $x249 $x237)))
 (let ((?x141 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x205 (bvuge ?x141 (_ bv1 32))))
 (let (($x263 (= $x249 $x205)))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x236 (=> $x238 $x11)))
 (let (($x250 (= ?x141 (_ bv0 32))))
 (let (($x270 (= $x238 $x250)))
 (let (($x310 (and (and (and (and (and (and $x270 $x236) $x263) $x276) $x254) $x247) $x288)))
 (let (($x10 (and (and (and $x310 $x94) $x277) $x266)))
 (let (($x64 (= $x10 true)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x241 (= $x30 $x302)))
 (let (($x251 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x14 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x144 (and $x14 $x251)))
 (let (($x287 (=> $x144 $x241)))
 (let (($x280 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x280 $x224)))
 (let (($x271 (=> $x144 $x305)))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.0 ?x264)))
 (let (($x226 (=> $x144 $x157)))
 (let (($x38 (= $x251 $x211)))
 (let (($x65 (=> $x14 $x38)))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x162 (= $x89 $x133)))
 (let (($x78 (=> $x14 $x162)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x296)))
 (let (($x222 (=> $x14 $x155)))
 (let (($x82 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x203 (= $x82 $x250)))
 (let (($x122 (and (and (and (=> $x82 $x11) (=> (and $x14 $x89) $x11)) (= $x14 $x205)) $x203)))
 (let (($x275 (and (and (and (and (and (and $x122 $x222) $x78) $x65) $x226) $x271) $x287)))
 (let (($x233 (= $x275 true)))
 (let ((?x209 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x284 (concat ?x209 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x76 (concat ?x56 (concat ?x131 ?x284))))
 (let ((?x171 (bvadd ?x76 (_ bv4 32))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x200))))
 (let (($x260 (= (_ bv0 32) ?x286)))
 (let ((?x289 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x289 (_ bv1 32))))
 (let (($x169 (= $x30 $x13)))
 (let (($x298 (=> $x144 $x169)))
 (let (($x244 (= ?x289 (_ bv0 32))))
 (let (($x24 (= $x280 $x244)))
 (let (($x217 (=> $x144 $x24)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x25))))
 (let (($x47 (= input.spec-%var-l-1.2.1.2.0 ?x66)))
 (let (($x192 (=> $x144 $x47)))
 (let (($x63 (= (_ bv0 32) ?x76)))
 (let ((?x190 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x190 (_ bv1 32))))
 (let (($x186 (= $x251 $x285)))
 (let (($x193 (=> $x14 $x186)))
 (let (($x163 (and $x14 $x89)))
 (let (($x9 (=> $x163 $x11)))
 (let (($x255 (= ?x190 (_ bv0 32))))
 (let (($x166 (= $x89 $x255)))
 (let (($x183 (=> $x14 $x166)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x6)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x41)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x258)))
 (let (($x218 (=> $x14 $x35)))
 (let (($x102 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x99 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x99 (_ bv1 32))))
 (let (($x73 (= $x14 $x19)))
 (let (($x103 (and (and (and (and (= $x82 (= ?x99 (_ bv0 32))) (=> $x82 $x11)) $x73) $x218) $x183)))
 (let (($x114 (and (and (and (and (and $x103 $x9) $x193) $x192) $x217) $x298)))
 (let (($x185 (= $x114 true)))
 (let ((?x118 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x204 (= (_ bv0 3) ?x118)))
 (let (($x158 (= $x204 true)))
 (let (($x210 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x196 (= $x210 true)))
 (let (($x50 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x145 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32))) (or false (or false (and true (or $x109 $x50)))))))
 (let (($x130 (=> (and $x93 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32)))) (or false (or false (and true (or $x109 $x50)))))))
 (let (($x86 (= $x130 true)))
 (let ((?x117 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x58 (bvugt ?x117 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x117 (_ bv3 32)))))
 (let (($x48 (=> (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x58)))))))
 (let (($x150 (=> (and $x93 (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x214 $x58)))))))
 (let (($x127 (= $x150 true)))
 (let (($x136 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x27 (= $x136 true)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x15)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (and $x62 $x111)))
 (let (($x119 (and $x91 $x36)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x142 (and $x74 $x119)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x42)))))))
 (let (($x39 (and $x108 $x142)))
 (let (($x51 (= $x39 true)))
 (let (($x151 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x153 (= $x151 true)))
 (let (($x88 (and $x153 $x51)))
 (let (($x106 (and $x88 $x27)))
 (let (($x165 (and $x106 $x127)))
 (let (($x140 (and $x165 $x86)))
 (let (($x125 (and $x140 $x196)))
 (let (($x34 (and $x125 $x158)))
 (let (($x161 (and $x34 $x185)))
 (let (($x232 (and $x161 $x233)))
 (let (($x160 (and $x232 $x64)))
 (let (($x92 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x307 (and $x92 $x160)))
 (let (($x17 (=> $x307 $x309)))
 (not $x17)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x143 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x93 (not $x143)))
 (let (($x308 (= $x93 false)))
 (let (($x309 (= $x308 true)))
 (let ((?x72 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x220))))
 (let ((?x230 (bvadd ?x146 (_ bv4 32))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x299))))
 (let (($x49 (= (_ bv0 32) ?x301)))
 (let ((?x221 (ite $x49 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (= ?x221 (_ bv0 32))))
 (let (($x274 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x306 (= $x274 $x224)))
 (let (($x304 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x249 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x148 (and $x249 $x304)))
 (let (($x266 (=> $x148 $x306)))
 (let (($x302 (bvuge ?x221 (_ bv1 32))))
 (let (($x265 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x267 (= $x265 $x302)))
 (let (($x277 (=> $x148 $x267)))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x188))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x264)))
 (let (($x94 (=> $x148 $x283)))
 (let (($x182 (= (_ bv0 32) ?x146)))
 (let ((?x113 (ite $x182 (_ bv0 32) (_ bv1 32))))
 (let (($x211 (bvuge ?x113 (_ bv1 32))))
 (let (($x234 (= $x304 $x211)))
 (let (($x288 (=> $x249 $x234)))
 (let (($x11 (= false false)))
 (let (($x235 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x292 (and $x249 $x235)))
 (let (($x247 (=> $x292 $x11)))
 (let (($x133 (= ?x113 (_ bv0 32))))
 (let (($x303 (= $x235 $x133)))
 (let (($x254 (=> $x249 $x303)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x291 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x138 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x296 (concat (select input.dst.llvm-mem ?x138) (concat ?x120 (concat ?x291 ?x187)))))
 (let (($x237 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x296)))
 (let (($x276 (=> $x249 $x237)))
 (let ((?x141 (ite $x143 (_ bv0 32) (_ bv1 32))))
 (let (($x205 (bvuge ?x141 (_ bv1 32))))
 (let (($x263 (= $x249 $x205)))
 (let (($x238 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x236 (=> $x238 $x11)))
 (let (($x250 (= ?x141 (_ bv0 32))))
 (let (($x270 (= $x238 $x250)))
 (let (($x310 (and (and (and (and (and (and $x270 $x236) $x263) $x276) $x254) $x247) $x288)))
 (let (($x10 (and (and (and $x310 $x94) $x277) $x266)))
 (let (($x64 (= $x10 true)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x241 (= $x30 $x302)))
 (let (($x251 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x14 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x144 (and $x14 $x251)))
 (let (($x287 (=> $x144 $x241)))
 (let (($x280 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x280 $x224)))
 (let (($x271 (=> $x144 $x305)))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.0 ?x264)))
 (let (($x226 (=> $x144 $x157)))
 (let (($x38 (= $x251 $x211)))
 (let (($x65 (=> $x14 $x38)))
 (let (($x89 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x162 (= $x89 $x133)))
 (let (($x78 (=> $x14 $x162)))
 (let (($x155 (= input.spec-%var-l-1.2.0 ?x296)))
 (let (($x222 (=> $x14 $x155)))
 (let (($x82 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x203 (= $x82 $x250)))
 (let (($x122 (and (and (and (=> $x82 $x11) (=> (and $x14 $x89) $x11)) (= $x14 $x205)) $x203)))
 (let (($x275 (and (and (and (and (and (and $x122 $x222) $x78) $x65) $x226) $x271) $x287)))
 (let (($x233 (= $x275 true)))
 (let ((?x209 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x284 (concat ?x209 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x76 (concat ?x56 (concat ?x131 ?x284))))
 (let ((?x171 (bvadd ?x76 (_ bv4 32))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv1 32))) (select input.dst.llvm-mem ?x171))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x171 (_ bv2 32))) ?x200))))
 (let (($x260 (= (_ bv0 32) ?x286)))
 (let ((?x289 (ite $x260 (_ bv0 32) (_ bv1 32))))
 (let (($x13 (bvuge ?x289 (_ bv1 32))))
 (let (($x169 (= $x30 $x13)))
 (let (($x298 (=> $x144 $x169)))
 (let (($x244 (= ?x289 (_ bv0 32))))
 (let (($x24 (= $x280 $x244)))
 (let (($x217 (=> $x144 $x24)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x25))))
 (let (($x47 (= input.spec-%var-l-1.2.1.2.0 ?x66)))
 (let (($x192 (=> $x144 $x47)))
 (let (($x63 (= (_ bv0 32) ?x76)))
 (let ((?x190 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x190 (_ bv1 32))))
 (let (($x186 (= $x251 $x285)))
 (let (($x193 (=> $x14 $x186)))
 (let (($x163 (and $x14 $x89)))
 (let (($x9 (=> $x163 $x11)))
 (let (($x255 (= ?x190 (_ bv0 32))))
 (let (($x166 (= $x89 $x255)))
 (let (($x183 (=> $x14 $x166)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x41 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x6)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x41)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x258)))
 (let (($x218 (=> $x14 $x35)))
 (let (($x102 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x99 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x19 (bvuge ?x99 (_ bv1 32))))
 (let (($x73 (= $x14 $x19)))
 (let (($x103 (and (and (and (and (= $x82 (= ?x99 (_ bv0 32))) (=> $x82 $x11)) $x73) $x218) $x183)))
 (let (($x114 (and (and (and (and (and $x103 $x9) $x193) $x192) $x217) $x298)))
 (let (($x185 (= $x114 true)))
 (let ((?x118 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x204 (= (_ bv0 3) ?x118)))
 (let (($x158 (= $x204 true)))
 (let (($x210 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x196 (= $x210 true)))
 (let (($x50 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x145 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32))) (or false (or false (and true (or $x109 $x50)))))))
 (let (($x130 (=> (and $x93 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32)))) (or false (or false (and true (or $x109 $x50)))))))
 (let (($x86 (= $x130 true)))
 (let ((?x117 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x58 (bvugt ?x117 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x117 (_ bv3 32)))))
 (let (($x48 (=> (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x214 $x58)))))))
 (let (($x150 (=> (and $x93 (bvule ?x117 (bvsub (bvadd ?x117 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x214 $x58)))))))
 (let (($x127 (= $x150 true)))
 (let (($x136 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x27 (= $x136 true)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x15)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (and $x62 $x111)))
 (let (($x119 (and $x91 $x36)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x142 (and $x74 $x119)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x174 $x42)))))))
 (let (($x39 (and $x108 $x142)))
 (let (($x51 (= $x39 true)))
 (let (($x151 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x153 (= $x151 true)))
 (let (($x88 (and $x153 $x51)))
 (let (($x106 (and $x88 $x27)))
 (let (($x165 (and $x106 $x127)))
 (let (($x140 (and $x165 $x86)))
 (let (($x125 (and $x140 $x196)))
 (let (($x34 (and $x125 $x158)))
 (let (($x161 (and $x34 $x185)))
 (let (($x232 (and $x161 $x233)))
 (let (($x160 (and $x232 $x64)))
 (let (($x92 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x307 (and $x92 $x160)))
 (let (($x17 (=> $x307 $x309)))
 (not $x17)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00111001101011111111111111100000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11011101101011111111111111100111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11011101101011111111111111100100)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11011101101011111111111111100100)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_50)
(function @fun_50
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv23 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv20 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv20 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 36
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x62 (not $x12)))
 (let (($x319 (= $x62 false)))
 (let (($x348 (= $x319 true)))
 (let (($x266 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x105 (and $x303 $x268)))
 (let (($x308 (and $x105 $x266)))
 (let (($x309 (not $x308)))
 (let (($x311 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x160 (and $x105 $x311)))
 (let (($x307 (not $x160)))
 (let ((?x109 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem ?x109))))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv2 32))) ?x220))))
 (let ((?x300 (bvadd ?x162 (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x225))))
 (let (($x221 (= (_ bv0 32) ?x49)))
 (let ((?x224 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x305 (= ?x224 (_ bv0 32))))
 (let (($x10 (= $x266 $x305)))
 (let (($x64 (=> $x105 $x10)))
 (let (($x302 (bvuge ?x224 (_ bv1 32))))
 (let (($x274 (= $x311 $x302)))
 (let (($x306 (=> $x105 $x274)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv1 32))) (select input.dst.llvm-mem ?x162))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv2 32))) ?x227))))
 (let (($x265 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x226)))
 (let (($x267 (=> $x105 $x265)))
 (let (($x78 (= (_ bv0 32) ?x162)))
 (let ((?x229 (ite $x78 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x229 (_ bv1 32))))
 (let (($x283 (= $x268 $x231)))
 (let (($x94 (=> $x303 $x283)))
 (let (($x45 (= false false)))
 (let (($x304 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x310 (and $x303 $x304)))
 (let (($x148 (=> $x310 $x45)))
 (let (($x211 (= ?x229 (_ bv0 32))))
 (let (($x234 (= $x304 $x211)))
 (let (($x288 (=> $x303 $x234)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x176 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem ?x176) (concat ?x222 (concat ?x191 ?x187)))))
 (let (($x292 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x156)))
 (let (($x247 (=> $x303 $x292)))
 (let ((?x40 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x40 (_ bv1 32))))
 (let (($x254 (= $x303 $x107)))
 (let (($x75 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x235 (=> $x75 $x45)))
 (let (($x124 (= ?x40 (_ bv0 32))))
 (let (($x239 (= $x75 $x124)))
 (let (($x95 (and (and (and (and (and (and $x239 $x235) $x254) $x247) $x288) $x148) $x94)))
 (let (($x316 (and (and (and (and (and $x95 $x267) $x306) $x64) $x307) $x309)))
 (let (($x317 (= $x316 true)))
 (let (($x260 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x241 (= $x260 $x302)))
 (let (($x163 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x19 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x285 (and $x19 $x163)))
 (let (($x287 (=> $x285 $x241)))
 (let (($x66 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x271 (= $x66 $x305)))
 (let (($x228 (=> $x285 $x271)))
 (let (($x240 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x230 (=> $x285 $x240)))
 (let (($x33 (= $x163 $x231)))
 (let (($x44 (=> $x19 $x33)))
 (let (($x168 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x38 (= $x168 $x211)))
 (let (($x65 (=> $x19 $x38)))
 (let (($x216 (= input.spec-%var-l-1.2.0 ?x156)))
 (let (($x37 (=> $x19 $x216)))
 (let (($x102 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x291 (= $x102 $x124)))
 (let (($x120 (= $x19 $x107)))
 (let (($x30 (and $x285 $x66)))
 (let (($x13 (not $x30)))
 (let (($x217 (and $x285 $x260)))
 (let (($x242 (not $x217)))
 (let (($x232 (and (and (and (=> $x102 $x45) (=> (and $x19 $x168) $x45)) $x242) $x13)))
 (let (($x249 (and (and (and (and (and (and $x232 $x120) $x291) $x37) $x65) $x44) $x230)))
 (let (($x60 (and (and $x249 $x228) $x287)))
 (let (($x246 (= $x60 true)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x284 (concat ?x21 ?x243))))
 (let ((?x47 (bvadd ?x189 (_ bv4 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x280))))
 (let (($x126 (= (_ bv0 32) ?x20)))
 (let ((?x180 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x289 (bvuge ?x180 (_ bv1 32))))
 (let (($x244 (= $x260 $x289)))
 (let (($x24 (=> $x285 $x244)))
 (let (($x200 (= ?x180 (_ bv0 32))))
 (let (($x159 (= $x66 $x200)))
 (let (($x286 (=> $x285 $x159)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x261))))
 (let (($x184 (= input.spec-%var-l-1.2.1.2.0 ?x175)))
 (let (($x25 (=> $x285 $x184)))
 (let (($x76 (= (_ bv0 32) ?x189)))
 (let ((?x63 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x63 (_ bv1 32))))
 (let (($x207 (= $x163 $x9)))
 (let (($x251 (=> $x19 $x207)))
 (let (($x183 (and $x19 $x168)))
 (let (($x103 (=> $x183 $x45)))
 (let (($x190 (= ?x63 (_ bv0 32))))
 (let (($x255 (= $x168 $x190)))
 (let (($x166 (=> $x19 $x255)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x219)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x177)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x258)))
 (let (($x218 (=> $x19 $x35)))
 (let (($x59 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x197 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x197 (_ bv1 32))))
 (let (($x248 (= $x19 $x73)))
 (let (($x185 (and (and (and (and (= $x102 (= ?x197 (_ bv0 32))) (=> $x102 $x45)) $x248) $x218) $x166)))
 (let (($x28 (and (and (and (and (and (and $x185 $x103) $x251) $x25) $x286) $x24) $x242)))
 (let (($x250 (and $x28 $x13)))
 (let (($x203 (= $x250 true)))
 (let ((?x158 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x34 (= (_ bv0 3) ?x158)))
 (let (($x178 (= $x34 true)))
 (let (($x125 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x195 (= $x125 true)))
 (let (($x173 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x176)))
 (let (($x256 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x109 (_ bv1 32))) (or false (or false (and true (or $x170 $x173)))))))
 (let (($x179 (=> (and $x62 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x109 (_ bv1 32)))) (or false (or false (and true (or $x170 $x173)))))))
 (let (($x138 (= $x179 true)))
 (let ((?x154 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x206 (bvugt ?x154 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x154 (_ bv3 32)))))
 (let (($x72 (=> (bvule ?x154 (bvsub (bvadd ?x154 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x201 $x206)))))))
 (let (($x53 (=> (and $x62 (bvule ?x154 (bvsub (bvadd ?x154 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x201 $x206)))))))
 (let (($x43 (= $x53 true)))
 (let (($x88 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x23 (= $x88 true)))
 (let ((?x111 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x111)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x151 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x85)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (and $x90 $x151)))
 (let (($x15 (and $x112 $x91)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (and $x153 $x15)))
 (let (($x134 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x70 $x134)))))))
 (let (($x119 (and $x117 $x36)))
 (let (($x142 (= $x119 true)))
 (let (($x106 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x83 (= $x106 true)))
 (let (($x39 (and $x83 $x142)))
 (let (($x108 (and $x39 $x23)))
 (let (($x194 (and $x108 $x43)))
 (let (($x210 (and $x194 $x138)))
 (let (($x118 (and $x210 $x195)))
 (let (($x82 (and $x118 $x178)))
 (let (($x122 (and $x82 $x203)))
 (let (($x237 (and $x122 $x246)))
 (let (($x318 (and $x237 $x317)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x347 (and $x27 $x318)))
 (let (($x320 (=> $x347 $x348)))
 (not $x320))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x62 (not $x12)))
 (let (($x319 (= $x62 false)))
 (let (($x348 (= $x319 true)))
 (let (($x266 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x303 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x105 (and $x303 $x268)))
 (let (($x308 (and $x105 $x266)))
 (let (($x309 (not $x308)))
 (let (($x311 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x160 (and $x105 $x311)))
 (let (($x307 (not $x160)))
 (let ((?x109 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x220 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem ?x109))))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv2 32))) ?x220))))
 (let ((?x300 (bvadd ?x162 (_ bv4 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x225))))
 (let (($x221 (= (_ bv0 32) ?x49)))
 (let ((?x224 (ite $x221 (_ bv0 32) (_ bv1 32))))
 (let (($x305 (= ?x224 (_ bv0 32))))
 (let (($x10 (= $x266 $x305)))
 (let (($x64 (=> $x105 $x10)))
 (let (($x302 (bvuge ?x224 (_ bv1 32))))
 (let (($x274 (= $x311 $x302)))
 (let (($x306 (=> $x105 $x274)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv1 32))) (select input.dst.llvm-mem ?x162))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x162 (_ bv2 32))) ?x227))))
 (let (($x265 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x226)))
 (let (($x267 (=> $x105 $x265)))
 (let (($x78 (= (_ bv0 32) ?x162)))
 (let ((?x229 (ite $x78 (_ bv0 32) (_ bv1 32))))
 (let (($x231 (bvuge ?x229 (_ bv1 32))))
 (let (($x283 (= $x268 $x231)))
 (let (($x94 (=> $x303 $x283)))
 (let (($x45 (= false false)))
 (let (($x304 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x310 (and $x303 $x304)))
 (let (($x148 (=> $x310 $x45)))
 (let (($x211 (= ?x229 (_ bv0 32))))
 (let (($x234 (= $x304 $x211)))
 (let (($x288 (=> $x303 $x234)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x176 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x156 (concat (select input.dst.llvm-mem ?x176) (concat ?x222 (concat ?x191 ?x187)))))
 (let (($x292 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x156)))
 (let (($x247 (=> $x303 $x292)))
 (let ((?x40 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x107 (bvuge ?x40 (_ bv1 32))))
 (let (($x254 (= $x303 $x107)))
 (let (($x75 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x235 (=> $x75 $x45)))
 (let (($x124 (= ?x40 (_ bv0 32))))
 (let (($x239 (= $x75 $x124)))
 (let (($x95 (and (and (and (and (and (and $x239 $x235) $x254) $x247) $x288) $x148) $x94)))
 (let (($x316 (and (and (and (and (and $x95 $x267) $x306) $x64) $x307) $x309)))
 (let (($x317 (= $x316 true)))
 (let (($x260 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x241 (= $x260 $x302)))
 (let (($x163 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x19 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x285 (and $x19 $x163)))
 (let (($x287 (=> $x285 $x241)))
 (let (($x66 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x271 (= $x66 $x305)))
 (let (($x228 (=> $x285 $x271)))
 (let (($x240 (= input.spec-%var-l-1.2.1.2.0 ?x226)))
 (let (($x230 (=> $x285 $x240)))
 (let (($x33 (= $x163 $x231)))
 (let (($x44 (=> $x19 $x33)))
 (let (($x168 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x38 (= $x168 $x211)))
 (let (($x65 (=> $x19 $x38)))
 (let (($x216 (= input.spec-%var-l-1.2.0 ?x156)))
 (let (($x37 (=> $x19 $x216)))
 (let (($x102 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x291 (= $x102 $x124)))
 (let (($x120 (= $x19 $x107)))
 (let (($x30 (and $x285 $x66)))
 (let (($x13 (not $x30)))
 (let (($x217 (and $x285 $x260)))
 (let (($x242 (not $x217)))
 (let (($x232 (and (and (and (=> $x102 $x45) (=> (and $x19 $x168) $x45)) $x242) $x13)))
 (let (($x249 (and (and (and (and (and (and $x232 $x120) $x291) $x37) $x65) $x44) $x230)))
 (let (($x60 (and (and $x249 $x228) $x287)))
 (let (($x246 (= $x60 true)))
 (let ((?x56 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x56 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x189 (concat ?x284 (concat ?x21 ?x243))))
 (let ((?x47 (bvadd ?x189 (_ bv4 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem ?x47))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x47 (_ bv2 32))) ?x280))))
 (let (($x126 (= (_ bv0 32) ?x20)))
 (let ((?x180 (ite $x126 (_ bv0 32) (_ bv1 32))))
 (let (($x289 (bvuge ?x180 (_ bv1 32))))
 (let (($x244 (= $x260 $x289)))
 (let (($x24 (=> $x285 $x244)))
 (let (($x200 (= ?x180 (_ bv0 32))))
 (let (($x159 (= $x66 $x200)))
 (let (($x286 (=> $x285 $x159)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv1 32))) (select input.dst.llvm-mem ?x189))))
 (let ((?x175 (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x189 (_ bv2 32))) ?x261))))
 (let (($x184 (= input.spec-%var-l-1.2.1.2.0 ?x175)))
 (let (($x25 (=> $x285 $x184)))
 (let (($x76 (= (_ bv0 32) ?x189)))
 (let ((?x63 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x9 (bvuge ?x63 (_ bv1 32))))
 (let (($x207 (= $x163 $x9)))
 (let (($x251 (=> $x19 $x207)))
 (let (($x183 (and $x19 $x168)))
 (let (($x103 (=> $x183 $x45)))
 (let (($x190 (= ?x63 (_ bv0 32))))
 (let (($x255 (= $x168 $x190)))
 (let (($x166 (=> $x19 $x255)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x219)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x177)))
 (let (($x35 (= input.spec-%var-l-1.2.0 ?x258)))
 (let (($x218 (=> $x19 $x35)))
 (let (($x59 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x197 (ite $x59 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x197 (_ bv1 32))))
 (let (($x248 (= $x19 $x73)))
 (let (($x185 (and (and (and (and (= $x102 (= ?x197 (_ bv0 32))) (=> $x102 $x45)) $x248) $x218) $x166)))
 (let (($x28 (and (and (and (and (and (and $x185 $x103) $x251) $x25) $x286) $x24) $x242)))
 (let (($x250 (and $x28 $x13)))
 (let (($x203 (= $x250 true)))
 (let ((?x158 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x34 (= (_ bv0 3) ?x158)))
 (let (($x178 (= $x34 true)))
 (let (($x125 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x195 (= $x125 true)))
 (let (($x173 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x176)))
 (let (($x256 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x109 (_ bv1 32))) (or false (or false (and true (or $x170 $x173)))))))
 (let (($x179 (=> (and $x62 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x109 (_ bv1 32)))) (or false (or false (and true (or $x170 $x173)))))))
 (let (($x138 (= $x179 true)))
 (let ((?x154 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x206 (bvugt ?x154 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x154 (_ bv3 32)))))
 (let (($x72 (=> (bvule ?x154 (bvsub (bvadd ?x154 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x201 $x206)))))))
 (let (($x53 (=> (and $x62 (bvule ?x154 (bvsub (bvadd ?x154 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x201 $x206)))))))
 (let (($x43 (= $x53 true)))
 (let (($x88 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x23 (= $x88 true)))
 (let ((?x111 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x111)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x151 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x85)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (and $x90 $x151)))
 (let (($x15 (and $x112 $x91)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x36 (and $x153 $x15)))
 (let (($x134 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x117 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x70 $x134)))))))
 (let (($x119 (and $x117 $x36)))
 (let (($x142 (= $x119 true)))
 (let (($x106 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x83 (= $x106 true)))
 (let (($x39 (and $x83 $x142)))
 (let (($x108 (and $x39 $x23)))
 (let (($x194 (and $x108 $x43)))
 (let (($x210 (and $x194 $x138)))
 (let (($x118 (and $x210 $x195)))
 (let (($x82 (and $x118 $x178)))
 (let (($x122 (and $x82 $x203)))
 (let (($x237 (and $x122 $x246)))
 (let (($x318 (and $x237 $x317)))
 (let (($x27 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x347 (and $x27 $x318)))
 (let (($x320 (=> $x347 $x348)))
 (not $x320))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00111001101011111111111111100000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11011101101011111111111111100111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11011101101011111111111111100100)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11011101101011111111111111100100)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_50)
(function @fun_50
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1024 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv32 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2051 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2048 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2048 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0000000b)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x75000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00000003
              #x75)
       #x00000003
       #x75))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x8affffff)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 37
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x241 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x313 (or $x241 $x96)))
 (let (($x266 (= $x313 true)))
 (let ((?x7 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x222))))
 (let ((?x33 (bvadd ?x156 (_ bv4 32))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x157))))
 (let (($x295 (= (_ bv0 32) ?x227)))
 (let ((?x226 (ite $x295 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (= ?x226 (_ bv0 32))))
 (let (($x310 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x148 (= $x310 $x240)))
 (let (($x254 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x292 (and $x241 $x254)))
 (let (($x55 (=> $x292 $x148)))
 (let (($x300 (bvuge ?x226 (_ bv1 32))))
 (let (($x234 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x288 (= $x234 $x300)))
 (let (($x100 (=> $x292 $x288)))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv1 32))) (select input.dst.llvm-mem ?x156))))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv2 32))) ?x182))))
 (let (($x132 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x65)))
 (let (($x123 (=> $x292 $x132)))
 (let (($x216 (= (_ bv0 32) ?x156)))
 (let ((?x37 (ite $x216 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x37 (_ bv1 32))))
 (let (($x67 (= $x254 $x16)))
 (let (($x273 (=> $x241 $x67)))
 (let (($x32 (= false false)))
 (let (($x75 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x17 (and $x241 $x75)))
 (let (($x303 (=> $x17 $x32)))
 (let (($x270 (= ?x37 (_ bv0 32))))
 (let (($x239 (= $x75 $x270)))
 (let (($x235 (=> $x241 $x239)))
 (let ((?x203 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x134 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x134) (concat ?x40 (concat ?x275 ?x203)))))
 (let (($x246 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x80)))
 (let (($x237 (=> $x241 $x246)))
 (let ((?x242 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x28 (bvuge ?x242 (_ bv1 32))))
 (let (($x287 (= $x241 $x28)))
 (let (($x228 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x302 (=> $x228 $x32)))
 (let (($x13 (= ?x242 (_ bv0 32))))
 (let (($x263 (= $x228 $x13)))
 (let (($x294 (and (and (and (and (and (and $x263 $x302) $x287) $x237) $x235) $x303) $x273)))
 (let (($x312 (and (and (and $x294 $x123) $x100) $x55)))
 (let (($x277 (= $x312 true)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x104 (= $x280 $x300)))
 (let (($x255 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x14 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (and $x14 $x255)))
 (let (($x301 (=> $x103 $x104)))
 (let (($x193 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x230 (= $x193 $x240)))
 (let (($x249 (=> $x103 $x230)))
 (let (($x236 (= input.spec-%var-l-1.2.1.2.0 ?x65)))
 (let (($x231 (=> $x103 $x236)))
 (let (($x146 (= $x255 $x16)))
 (let (($x281 (=> $x14 $x146)))
 (let (($x35 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x113 (= $x35 $x270)))
 (let (($x133 (=> $x14 $x113)))
 (let (($x124 (= input.spec-%var-l-1.2.0 ?x80)))
 (let (($x291 (=> $x14 $x124)))
 (let (($x167 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x250 (= $x167 $x13)))
 (let (($x149 (and (and (and (=> $x167 $x32) (=> (and $x14 $x35) $x32)) (= $x14 $x28)) $x250)))
 (let (($x221 (and (and (and (and (and (and $x149 $x291) $x133) $x281) $x231) $x249) $x301)))
 (let (($x224 (= $x221 true)))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x89 (concat ?x168 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x252 (concat ?x284 ?x89))))
 (let ((?x261 (bvadd ?x56 (_ bv4 32))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x261 (_ bv1 32))) (select input.dst.llvm-mem ?x261))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x261 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x261 (_ bv2 32))) ?x25))))
 (let (($x171 (= (_ bv0 32) ?x5)))
 (let ((?x61 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x61 (_ bv1 32))))
 (let (($x20 (= $x280 $x257)))
 (let (($x126 (=> $x103 $x20)))
 (let (($x79 (= ?x61 (_ bv0 32))))
 (let (($x202 (= $x193 $x79)))
 (let (($x192 (=> $x103 $x202)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x251))))
 (let (($x198 (= input.spec-%var-l-1.2.1.2.0 ?x223)))
 (let (($x69 (=> $x103 $x198)))
 (let (($x57 (= (_ bv0 32) ?x56)))
 (let ((?x243 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x166 (bvuge ?x243 (_ bv1 32))))
 (let (($x185 (= $x255 $x166)))
 (let (($x183 (=> $x14 $x185)))
 (let (($x63 (and $x14 $x35)))
 (let (($x190 (=> $x63 $x32)))
 (let (($x209 (= ?x243 (_ bv0 32))))
 (let (($x189 (= $x35 $x209)))
 (let (($x76 (=> $x14 $x189)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x6)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x139)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x137)))
 (let (($x177 (=> $x14 $x219)))
 (let (($x99 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x59 (_ bv1 32))))
 (let (($x19 (= $x14 $x169)))
 (let (($x286 (and (and (and (and (= $x167 (= ?x59 (_ bv0 32))) (=> $x167 $x32)) $x19) $x177) $x76)))
 (let (($x24 (and (and (and (and (and $x286 $x190) $x183) $x69) $x192) $x126)))
 (let (($x290 (= $x24 true)))
 (let ((?x204 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x158 (= (_ bv0 3) ?x204)))
 (let (($x34 (= $x158 true)))
 (let (($x196 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x125 (= $x196 true)))
 (let (($x256 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x179 (= $x256 true)))
 (let ((?x140 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x176 (= (_ bv0 32) ?x140)))
 (let ((?x194 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x109 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x194)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x43 $x109)))
 (let (($x170 (and $x50 $x176)))
 (let (($x214 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x214 $x170)))
 (let (($x206 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x201 $x206)))))))
 (let (($x172 (and $x53 $x173)))
 (let (($x145 (= $x172 true)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x62 (= $x12 true)))
 (let (($x130 (and $x62 $x145)))
 (let (($x138 (and $x130 $x179)))
 (let (($x195 (and $x138 $x125)))
 (let (($x178 (and $x195 $x34)))
 (let (($x217 (and $x178 $x290)))
 (let (($x305 (and $x217 $x224)))
 (let (($x311 (and $x305 $x277)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x274 (and $x108 $x311)))
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x15 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x115 (_ bv3 32)))))
 (let (($x88 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x15)))))))
 (let (($x106 (not $x96)))
 (let (($x98 (=> (and $x106 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x91 $x15)))))))
 (let (($x143 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x134)))
 (let (($x90 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x7 (_ bv1 32))) (or false (or false (and true (or $x110 $x143)))))))
 (let (($x101 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x7 (_ bv1 32)))) (or false (or false (and true (or $x110 $x143)))))))
 (let (($x85 (and $x101 $x98)))
 (let (($x306 (and $x85 $x274)))
 (let (($x10 (=> $x306 $x266)))
 (not $x10)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x241 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x313 (or $x241 $x96)))
 (let (($x266 (= $x313 true)))
 (let ((?x7 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x156 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x222))))
 (let ((?x33 (bvadd ?x156 (_ bv4 32))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv1 32))) (select input.dst.llvm-mem ?x33))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x33 (_ bv2 32))) ?x157))))
 (let (($x295 (= (_ bv0 32) ?x227)))
 (let ((?x226 (ite $x295 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (= ?x226 (_ bv0 32))))
 (let (($x310 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x148 (= $x310 $x240)))
 (let (($x254 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x292 (and $x241 $x254)))
 (let (($x55 (=> $x292 $x148)))
 (let (($x300 (bvuge ?x226 (_ bv1 32))))
 (let (($x234 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x288 (= $x234 $x300)))
 (let (($x100 (=> $x292 $x288)))
 (let ((?x182 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv1 32))) (select input.dst.llvm-mem ?x156))))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x156 (_ bv2 32))) ?x182))))
 (let (($x132 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x65)))
 (let (($x123 (=> $x292 $x132)))
 (let (($x216 (= (_ bv0 32) ?x156)))
 (let ((?x37 (ite $x216 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x37 (_ bv1 32))))
 (let (($x67 (= $x254 $x16)))
 (let (($x273 (=> $x241 $x67)))
 (let (($x32 (= false false)))
 (let (($x75 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x17 (and $x241 $x75)))
 (let (($x303 (=> $x17 $x32)))
 (let (($x270 (= ?x37 (_ bv0 32))))
 (let (($x239 (= $x75 $x270)))
 (let (($x235 (=> $x241 $x239)))
 (let ((?x203 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x275 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x134 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x134) (concat ?x40 (concat ?x275 ?x203)))))
 (let (($x246 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x80)))
 (let (($x237 (=> $x241 $x246)))
 (let ((?x242 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x28 (bvuge ?x242 (_ bv1 32))))
 (let (($x287 (= $x241 $x28)))
 (let (($x228 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x302 (=> $x228 $x32)))
 (let (($x13 (= ?x242 (_ bv0 32))))
 (let (($x263 (= $x228 $x13)))
 (let (($x294 (and (and (and (and (and (and $x263 $x302) $x287) $x237) $x235) $x303) $x273)))
 (let (($x312 (and (and (and $x294 $x123) $x100) $x55)))
 (let (($x277 (= $x312 true)))
 (let (($x280 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x104 (= $x280 $x300)))
 (let (($x255 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x14 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x103 (and $x14 $x255)))
 (let (($x301 (=> $x103 $x104)))
 (let (($x193 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x230 (= $x193 $x240)))
 (let (($x249 (=> $x103 $x230)))
 (let (($x236 (= input.spec-%var-l-1.2.1.2.0 ?x65)))
 (let (($x231 (=> $x103 $x236)))
 (let (($x146 (= $x255 $x16)))
 (let (($x281 (=> $x14 $x146)))
 (let (($x35 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x113 (= $x35 $x270)))
 (let (($x133 (=> $x14 $x113)))
 (let (($x124 (= input.spec-%var-l-1.2.0 ?x80)))
 (let (($x291 (=> $x14 $x124)))
 (let (($x167 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x250 (= $x167 $x13)))
 (let (($x149 (and (and (and (=> $x167 $x32) (=> (and $x14 $x35) $x32)) (= $x14 $x28)) $x250)))
 (let (($x221 (and (and (and (and (and (and $x149 $x291) $x133) $x281) $x231) $x249) $x301)))
 (let (($x224 (= $x221 true)))
 (let ((?x168 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x89 (concat ?x168 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x284 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x56 (concat ?x252 (concat ?x284 ?x89))))
 (let ((?x261 (bvadd ?x56 (_ bv4 32))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x261 (_ bv1 32))) (select input.dst.llvm-mem ?x261))))
 (let ((?x5 (concat (select input.dst.llvm-mem (bvadd ?x261 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x261 (_ bv2 32))) ?x25))))
 (let (($x171 (= (_ bv0 32) ?x5)))
 (let ((?x61 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x257 (bvuge ?x61 (_ bv1 32))))
 (let (($x20 (= $x280 $x257)))
 (let (($x126 (=> $x103 $x20)))
 (let (($x79 (= ?x61 (_ bv0 32))))
 (let (($x202 (= $x193 $x79)))
 (let (($x192 (=> $x103 $x202)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv1 32))) (select input.dst.llvm-mem ?x56))))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x56 (_ bv2 32))) ?x251))))
 (let (($x198 (= input.spec-%var-l-1.2.1.2.0 ?x223)))
 (let (($x69 (=> $x103 $x198)))
 (let (($x57 (= (_ bv0 32) ?x56)))
 (let ((?x243 (ite $x57 (_ bv0 32) (_ bv1 32))))
 (let (($x166 (bvuge ?x243 (_ bv1 32))))
 (let (($x185 (= $x255 $x166)))
 (let (($x183 (=> $x14 $x185)))
 (let (($x63 (and $x14 $x35)))
 (let (($x190 (=> $x63 $x32)))
 (let (($x209 (= ?x243 (_ bv0 32))))
 (let (($x189 (= $x35 $x209)))
 (let (($x76 (=> $x14 $x189)))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x6)))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x139)))
 (let (($x219 (= input.spec-%var-l-1.2.0 ?x137)))
 (let (($x177 (=> $x14 $x219)))
 (let (($x99 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x99 (_ bv0 32) (_ bv1 32))))
 (let (($x169 (bvuge ?x59 (_ bv1 32))))
 (let (($x19 (= $x14 $x169)))
 (let (($x286 (and (and (and (and (= $x167 (= ?x59 (_ bv0 32))) (=> $x167 $x32)) $x19) $x177) $x76)))
 (let (($x24 (and (and (and (and (and $x286 $x190) $x183) $x69) $x192) $x126)))
 (let (($x290 (= $x24 true)))
 (let ((?x204 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x158 (= (_ bv0 3) ?x204)))
 (let (($x34 (= $x158 true)))
 (let (($x196 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x125 (= $x196 true)))
 (let (($x256 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x179 (= $x256 true)))
 (let ((?x140 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x176 (= (_ bv0 32) ?x140)))
 (let ((?x194 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x109 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x194)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x43 $x109)))
 (let (($x170 (and $x50 $x176)))
 (let (($x214 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (and $x214 $x170)))
 (let (($x206 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x53 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x201 $x206)))))))
 (let (($x172 (and $x53 $x173)))
 (let (($x145 (= $x172 true)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x62 (= $x12 true)))
 (let (($x130 (and $x62 $x145)))
 (let (($x138 (and $x130 $x179)))
 (let (($x195 (and $x138 $x125)))
 (let (($x178 (and $x195 $x34)))
 (let (($x217 (and $x178 $x290)))
 (let (($x305 (and $x217 $x224)))
 (let (($x311 (and $x305 $x277)))
 (let (($x108 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x274 (and $x108 $x311)))
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x15 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x115 (_ bv3 32)))))
 (let (($x88 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x91 $x15)))))))
 (let (($x106 (not $x96)))
 (let (($x98 (=> (and $x106 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x91 $x15)))))))
 (let (($x143 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x134)))
 (let (($x90 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x7 (_ bv1 32))) (or false (or false (and true (or $x110 $x143)))))))
 (let (($x101 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x7 (_ bv1 32)))) (or false (or false (and true (or $x110 $x143)))))))
 (let (($x85 (and $x101 $x98)))
 (let (($x306 (and $x85 $x274)))
 (let (($x10 (=> $x306 $x266)))
 (not $x10)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 38
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x153 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x26))))
 (let ((?x335 ((_ extract 2 0) ?x137)))
 (let (($x338 (= (_ bv0 3) ?x335)))
 (let (($x341 (= $x338 true)))
 (let ((?x42 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x295))))
 (let ((?x235 (bvadd ?x300 (_ bv4 32))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x105))))
 (let (($x132 (= (_ bv0 32) ?x247)))
 (let ((?x123 (ite $x132 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (= ?x123 (_ bv0 32))))
 (let (($x327 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x323 (= $x327 $x265)))
 (let (($x347 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x58 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x320 (and $x58 $x347)))
 (let (($x324 (=> $x320 $x323)))
 (let (($x288 (bvuge ?x123 (_ bv1 32))))
 (let (($x329 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x330 (= $x329 $x288)))
 (let (($x326 (=> $x320 $x330)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x287))))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x276)))
 (let (($x84 (=> $x320 $x71)))
 (let (($x104 (= (_ bv0 32) ?x300)))
 (let ((?x301 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x301 (_ bv1 32))))
 (let (($x319 (= $x347 $x271)))
 (let (($x348 (=> $x58 $x319)))
 (let (($x185 (= false false)))
 (let (($x308 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x317 (and $x58 $x308)))
 (let (($x318 (=> $x317 $x185)))
 (let (($x221 (= ?x301 (_ bv0 32))))
 (let (($x309 (= $x308 $x221)))
 (let (($x316 (=> $x58 $x309)))
 (let ((?x236 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x93 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x93) (concat ?x278 (concat ?x299 ?x236)))))
 (let (($x160 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x307 (=> $x58 $x160)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x220 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x220 (_ bv1 32))))
 (let (($x18 (= $x58 $x269)))
 (let (($x64 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x83 (=> $x64 $x185)))
 (let (($x229 (= ?x220 (_ bv0 32))))
 (let (($x147 (= $x64 $x229)))
 (let (($x333 (and (and (and (and (and (and $x147 $x83) $x18) $x307) $x316) $x318) $x348)))
 (let (($x342 (and (and (and $x333 $x84) $x326) $x324)))
 (let (($x343 (= $x342 true)))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x100 (= $x216 $x288)))
 (let (($x257 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x260 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x290 (and $x260 $x257)))
 (let (($x267 (=> $x290 $x100)))
 (let (($x203 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x304 (= $x203 $x265)))
 (let (($x234 (=> $x290 $x304)))
 (let (($x75 (= input.spec-%var-l-1.2.1.2.0 ?x276)))
 (let (($x239 (=> $x290 $x75)))
 (let (($x228 (= $x257 $x271)))
 (let (($x263 (=> $x260 $x228)))
 (let (($x193 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x193 $x221)))
 (let (($x305 (=> $x260 $x224)))
 (let (($x264 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x44 (=> $x260 $x264)))
 (let (($x286 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x65 (= $x286 $x229)))
 (let (($x55 (and (and (and (=> $x286 $x185) (=> (and $x260 $x193) $x185)) (= $x260 $x269)) $x65)))
 (let (($x313 (and (and (and (and (and (and $x55 $x44) $x305) $x263) $x239) $x234) $x267)))
 (let (($x266 (= $x313 true)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x68 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x5 (concat ?x66 (concat ?x184 ?x68))))
 (let ((?x233 (bvadd ?x5 (_ bv4 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x291))))
 (let (($x155 (= (_ bv0 32) ?x297)))
 (let ((?x238 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x37 (bvuge ?x238 (_ bv1 32))))
 (let (($x270 (= $x216 $x37)))
 (let (($x113 (=> $x290 $x270)))
 (let (($x222 (= ?x238 (_ bv0 32))))
 (let (($x187 (= $x203 $x222)))
 (let (($x156 (=> $x290 $x187)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x30))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x232)))
 (let (($x122 (=> $x290 $x40)))
 (let (($x171 (= (_ bv0 32) ?x5)))
 (let ((?x61 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x61 (_ bv1 32))))
 (let (($x126 (= $x257 $x20)))
 (let (($x24 (=> $x260 $x126)))
 (let (($x244 (and $x260 $x193)))
 (let (($x280 (=> $x244 $x185)))
 (let (($x79 (= ?x61 (_ bv0 32))))
 (let (($x202 (= $x193 $x79)))
 (let (($x192 (=> $x260 $x202)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x9)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x251)))
 (let (($x69 (= input.spec-%var-l-1.2.0 ?x198)))
 (let (($x289 (=> $x260 $x69)))
 (let (($x190 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x205 (ite $x190 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x205 (_ bv1 32))))
 (let (($x161 (= $x260 $x103)))
 (let (($x146 (and (and (and (and (= $x286 (= ?x205 (_ bv0 32))) (=> $x286 $x185)) $x161) $x289) $x192)))
 (let (($x162 (and (and (and (and (and $x146 $x280) $x24) $x122) $x156) $x113)))
 (let (($x78 (= $x162 true)))
 (let ((?x57 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x243 (= (_ bv0 3) ?x57)))
 (let (($x209 (= $x243 true)))
 (let (($x21 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x102 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x11 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102))))
 (let (($x32 (and true $x11)))
 (let (($x35 (and $x11 $x32)))
 (let (($x159 (= (bvand ?x137 (_ bv4294967288 32)) ?x137)))
 (let (($x248 (= (bvand ?x153 (_ bv4294967292 32)) ?x153)))
 (let (($x258 (and $x248 $x159)))
 (let (($x19 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x153 (bvsub ?x153 (_ bv4 32))) (bvult ?x153 (bvsub ?x153 (_ bv4 32))))))
 (let (($x168 (and (and (and (and (and $x32 $x19) $x248) $x258) $x35) $x21)))
 (let (($x106 (not $x96)))
 (let (($x114 (=> $x106 $x168)))
 (let (($x89 (= $x114 true)))
 (let (($x178 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x178 true)))
 (let (($x204 (= $x106 true)))
 (let (($x125 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x195 (= $x125 true)))
 (let ((?x145 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x145)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x173 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x172 (and $x176 $x173)))
 (let (($x86 (and $x172 $x130)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x256 (and $x46 $x86)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x140 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x53 $x154)))))))
 (let (($x179 (and $x140 $x256)))
 (let (($x138 (= $x179 true)))
 (let (($x72 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x212 (= $x72 true)))
 (let (($x210 (and $x212 $x138)))
 (let (($x118 (and $x210 $x195)))
 (let (($x158 (and $x118 $x204)))
 (let (($x167 (and $x158 $x82)))
 (let (($x131 (and $x167 $x89)))
 (let (($x189 (and $x131 $x209)))
 (let (($x87 (and $x189 $x78)))
 (let (($x10 (and $x87 $x266)))
 (let (($x339 (and $x10 $x343)))
 (let (($x340 (and $x58 $x339)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x336 (and $x12 $x340)))
 (let (($x142 (bvugt ?x153 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x36 (bvadd ?x153 (_ bv3 32))))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x108 (=> (bvule ?x153 (bvsub (bvadd ?x153 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x142)))))))
 (let (($x51 (=> (and $x106 (bvule ?x153 (bvsub (bvadd ?x153 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x142)))))))
 (let (($x117 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x93)))
 (let (($x112 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x42 (_ bv1 32))) (or false (or false (and true (or $x74 $x117)))))))
 (let (($x174 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x42 (_ bv1 32)))) (or false (or false (and true (or $x74 $x117)))))))
 (let (($x111 (and $x174 $x51)))
 (let (($x337 (and $x111 $x336)))
 (let (($x344 (=> $x337 $x341)))
 (not $x344)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x153 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv1 32))) (select input.dst.llvm-mem ?x153))))
 (let ((?x137 (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x153 (_ bv2 32))) ?x26))))
 (let ((?x335 ((_ extract 2 0) ?x137)))
 (let (($x338 (= (_ bv0 3) ?x335)))
 (let (($x341 (= $x338 true)))
 (let ((?x42 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv1 32))) (select input.dst.llvm-mem ?x42))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x42 (_ bv2 32))) ?x295))))
 (let ((?x235 (bvadd ?x300 (_ bv4 32))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv1 32))) (select input.dst.llvm-mem ?x235))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x235 (_ bv2 32))) ?x105))))
 (let (($x132 (= (_ bv0 32) ?x247)))
 (let ((?x123 (ite $x132 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (= ?x123 (_ bv0 32))))
 (let (($x327 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x323 (= $x327 $x265)))
 (let (($x347 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x58 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x320 (and $x58 $x347)))
 (let (($x324 (=> $x320 $x323)))
 (let (($x288 (bvuge ?x123 (_ bv1 32))))
 (let (($x329 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x330 (= $x329 $x288)))
 (let (($x326 (=> $x320 $x330)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv1 32))) (select input.dst.llvm-mem ?x300))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x300 (_ bv2 32))) ?x287))))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x276)))
 (let (($x84 (=> $x320 $x71)))
 (let (($x104 (= (_ bv0 32) ?x300)))
 (let ((?x301 (ite $x104 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x301 (_ bv1 32))))
 (let (($x319 (= $x347 $x271)))
 (let (($x348 (=> $x58 $x319)))
 (let (($x185 (= false false)))
 (let (($x308 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x317 (and $x58 $x308)))
 (let (($x318 (=> $x317 $x185)))
 (let (($x221 (= ?x301 (_ bv0 32))))
 (let (($x309 (= $x308 $x221)))
 (let (($x316 (=> $x58 $x309)))
 (let ((?x236 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x93 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x93) (concat ?x278 (concat ?x299 ?x236)))))
 (let (($x160 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x307 (=> $x58 $x160)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x220 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x220 (_ bv1 32))))
 (let (($x18 (= $x58 $x269)))
 (let (($x64 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x83 (=> $x64 $x185)))
 (let (($x229 (= ?x220 (_ bv0 32))))
 (let (($x147 (= $x64 $x229)))
 (let (($x333 (and (and (and (and (and (and $x147 $x83) $x18) $x307) $x316) $x318) $x348)))
 (let (($x342 (and (and (and $x333 $x84) $x326) $x324)))
 (let (($x343 (= $x342 true)))
 (let (($x216 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x100 (= $x216 $x288)))
 (let (($x257 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x260 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x290 (and $x260 $x257)))
 (let (($x267 (=> $x290 $x100)))
 (let (($x203 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x304 (= $x203 $x265)))
 (let (($x234 (=> $x290 $x304)))
 (let (($x75 (= input.spec-%var-l-1.2.1.2.0 ?x276)))
 (let (($x239 (=> $x290 $x75)))
 (let (($x228 (= $x257 $x271)))
 (let (($x263 (=> $x260 $x228)))
 (let (($x193 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x193 $x221)))
 (let (($x305 (=> $x260 $x224)))
 (let (($x264 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x44 (=> $x260 $x264)))
 (let (($x286 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x65 (= $x286 $x229)))
 (let (($x55 (and (and (and (=> $x286 $x185) (=> (and $x260 $x193) $x185)) (= $x260 $x269)) $x65)))
 (let (($x313 (and (and (and (and (and (and $x55 $x44) $x305) $x263) $x239) $x234) $x267)))
 (let (($x266 (= $x313 true)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x68 (concat ?x141 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x66 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x5 (concat ?x66 (concat ?x184 ?x68))))
 (let ((?x233 (bvadd ?x5 (_ bv4 32))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x291))))
 (let (($x155 (= (_ bv0 32) ?x297)))
 (let ((?x238 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x37 (bvuge ?x238 (_ bv1 32))))
 (let (($x270 (= $x216 $x37)))
 (let (($x113 (=> $x290 $x270)))
 (let (($x222 (= ?x238 (_ bv0 32))))
 (let (($x187 (= $x203 $x222)))
 (let (($x156 (=> $x290 $x187)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv1 32))) (select input.dst.llvm-mem ?x5))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x5 (_ bv2 32))) ?x30))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.0 ?x232)))
 (let (($x122 (=> $x290 $x40)))
 (let (($x171 (= (_ bv0 32) ?x5)))
 (let ((?x61 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x61 (_ bv1 32))))
 (let (($x126 (= $x257 $x20)))
 (let (($x24 (=> $x260 $x126)))
 (let (($x244 (and $x260 $x193)))
 (let (($x280 (=> $x244 $x185)))
 (let (($x79 (= ?x61 (_ bv0 32))))
 (let (($x202 (= $x193 $x79)))
 (let (($x192 (=> $x260 $x202)))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x9)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x251)))
 (let (($x69 (= input.spec-%var-l-1.2.0 ?x198)))
 (let (($x289 (=> $x260 $x69)))
 (let (($x190 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x205 (ite $x190 (_ bv0 32) (_ bv1 32))))
 (let (($x103 (bvuge ?x205 (_ bv1 32))))
 (let (($x161 (= $x260 $x103)))
 (let (($x146 (and (and (and (and (= $x286 (= ?x205 (_ bv0 32))) (=> $x286 $x185)) $x161) $x289) $x192)))
 (let (($x162 (and (and (and (and (and $x146 $x280) $x24) $x122) $x156) $x113)))
 (let (($x78 (= $x162 true)))
 (let ((?x57 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x243 (= (_ bv0 3) ?x57)))
 (let (($x209 (= $x243 true)))
 (let (($x21 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x102 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x11 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102))))
 (let (($x32 (and true $x11)))
 (let (($x35 (and $x11 $x32)))
 (let (($x159 (= (bvand ?x137 (_ bv4294967288 32)) ?x137)))
 (let (($x248 (= (bvand ?x153 (_ bv4294967292 32)) ?x153)))
 (let (($x258 (and $x248 $x159)))
 (let (($x19 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x153 (bvsub ?x153 (_ bv4 32))) (bvult ?x153 (bvsub ?x153 (_ bv4 32))))))
 (let (($x168 (and (and (and (and (and $x32 $x19) $x248) $x258) $x35) $x21)))
 (let (($x106 (not $x96)))
 (let (($x114 (=> $x106 $x168)))
 (let (($x89 (= $x114 true)))
 (let (($x178 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x178 true)))
 (let (($x204 (= $x106 true)))
 (let (($x125 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x195 (= $x125 true)))
 (let ((?x145 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x145)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x173 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x172 (and $x176 $x173)))
 (let (($x86 (and $x172 $x130)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x256 (and $x46 $x86)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x140 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x53 $x154)))))))
 (let (($x179 (and $x140 $x256)))
 (let (($x138 (= $x179 true)))
 (let (($x72 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x212 (= $x72 true)))
 (let (($x210 (and $x212 $x138)))
 (let (($x118 (and $x210 $x195)))
 (let (($x158 (and $x118 $x204)))
 (let (($x167 (and $x158 $x82)))
 (let (($x131 (and $x167 $x89)))
 (let (($x189 (and $x131 $x209)))
 (let (($x87 (and $x189 $x78)))
 (let (($x10 (and $x87 $x266)))
 (let (($x339 (and $x10 $x343)))
 (let (($x340 (and $x58 $x339)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x336 (and $x12 $x340)))
 (let (($x142 (bvugt ?x153 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x36 (bvadd ?x153 (_ bv3 32))))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x108 (=> (bvule ?x153 (bvsub (bvadd ?x153 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x142)))))))
 (let (($x51 (=> (and $x106 (bvule ?x153 (bvsub (bvadd ?x153 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x142)))))))
 (let (($x117 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x93)))
 (let (($x112 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x42 (_ bv1 32))) (or false (or false (and true (or $x74 $x117)))))))
 (let (($x174 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x42 (_ bv1 32)))) (or false (or false (and true (or $x74 $x117)))))))
 (let (($x111 (and $x174 $x51)))
 (let (($x337 (and $x111 $x336)))
 (let (($x344 (=> $x337 $x341)))
 (not $x344)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 39
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x278 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x181 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x44 (concat (select input.dst.llvm-mem ?x181) (concat ?x152 (concat ?x299 ?x278)))))
 (let ((?x344 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x44)))
 (let (($x345 (= (_ bv0 32) ?x344)))
 (let (($x77 (= $x345 true)))
 (let ((?x110 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x29))))
 (let ((?x239 (bvadd ?x104 (_ bv4 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x292))))
 (let (($x273 (= (_ bv0 32) ?x105)))
 (let ((?x247 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (= ?x247 (_ bv0 32))))
 (let (($x349 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x329 (= $x349 $x132)))
 (let (($x318 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x319 (and $x48 $x318)))
 (let (($x330 (=> $x319 $x329)))
 (let (($x304 (bvuge ?x247 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x84 (= $x71 $x304)))
 (let (($x350 (=> $x319 $x84)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv1 32))) (select input.dst.llvm-mem ?x104))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv2 32))) ?x283))))
 (let (($x333 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x246)))
 (let (($x320 (=> $x319 $x333)))
 (let (($x301 (= (_ bv0 32) ?x104)))
 (let ((?x221 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x221 (_ bv1 32))))
 (let (($x332 (= $x318 $x271)))
 (let (($x347 (=> $x48 $x332)))
 (let (($x161 (= false false)))
 (let (($x308 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x331 (and $x48 $x308)))
 (let (($x317 (=> $x331 $x161)))
 (let (($x224 (= ?x221 (_ bv0 32))))
 (let (($x309 (= $x308 $x224)))
 (let (($x316 (=> $x48 $x309)))
 (let (($x307 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x44)))
 (let (($x328 (=> $x48 $x307)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x229 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (bvuge ?x229 (_ bv1 32))))
 (let (($x314 (= $x48 $x65)))
 (let (($x58 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x325 (=> $x58 $x161)))
 (let (($x188 (= ?x229 (_ bv0 32))))
 (let (($x18 (= $x58 $x188)))
 (let (($x342 (and (and (and (and (and (and $x18 $x325) $x314) $x328) $x316) $x317) $x347)))
 (let (($x340 (and (and (and $x342 $x320) $x350) $x330)))
 (let (($x336 (= $x340 true)))
 (let (($x187 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x234 (= $x187 $x304)))
 (let (($x257 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x259 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x225 (and $x259 $x257)))
 (let (($x306 (=> $x225 $x234)))
 (let (($x211 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x123 (= $x211 $x132)))
 (let (($x265 (=> $x225 $x123)))
 (let (($x276 (= input.spec-%var-l-1.2.1.2.0 ?x246)))
 (let (($x75 (=> $x225 $x276)))
 (let (($x228 (= $x257 $x271)))
 (let (($x263 (=> $x259 $x228)))
 (let (($x25 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x25 $x224)))
 (let (($x277 (=> $x259 $x305)))
 (let (($x312 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x249 (=> $x259 $x312)))
 (let (($x166 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x164 (= $x166 $x188)))
 (let (($x267 (and (and (and (=> $x166 $x161) (=> (and $x259 $x25) $x161)) (= $x259 $x65)) $x164)))
 (let (($x147 (and (and (and (and (and (and $x267 $x249) $x277) $x263) $x75) $x265) $x306)))
 (let (($x83 (= $x147 true)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x141 (concat ?x213 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x61 (concat ?x171 (concat ?x68 ?x141))))
 (let ((?x275 (bvadd ?x61 (_ bv4 32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x191))))
 (let (($x245 (= (_ bv0 32) ?x291)))
 (let ((?x297 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x156 (bvuge ?x297 (_ bv1 32))))
 (let (($x38 (= $x187 $x156)))
 (let (($x216 (=> $x225 $x38)))
 (let (($x155 (= ?x297 (_ bv0 32))))
 (let (($x238 (= $x211 $x155)))
 (let (($x222 (=> $x225 $x238)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x272))))
 (let (($x232 (= input.spec-%var-l-1.2.1.2.0 ?x250)))
 (let (($x40 (=> $x225 $x232)))
 (let (($x79 (= (_ bv0 32) ?x61)))
 (let ((?x202 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x202 (_ bv1 32))))
 (let (($x126 (= $x257 $x20)))
 (let (($x24 (=> $x259 $x126)))
 (let (($x280 (and $x259 $x25)))
 (let (($x281 (=> $x280 $x161)))
 (let (($x192 (= ?x202 (_ bv0 32))))
 (let (($x146 (= $x25 $x192)))
 (let (($x244 (=> $x259 $x146)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x128)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x198)))
 (let (($x144 (= input.spec-%var-l-1.2.0 ?x16)))
 (let (($x193 (=> $x259 $x144)))
 (let (($x183 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x133 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x133 (_ bv1 32))))
 (let (($x223 (= $x259 $x186)))
 (let (($x162 (and (and (and (and (= $x166 (= ?x133 (_ bv0 32))) (=> $x166 $x161)) $x223) $x193) $x244)))
 (let (($x269 (and (and (and (and (and $x162 $x281) $x24) $x40) $x222) $x216)))
 (let (($x182 (= $x269 true)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x190 (= $x63 true)))
 (let ((?x243 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x209 (= (_ bv0 3) ?x243)))
 (let (($x189 (= $x209 true)))
 (let (($x35 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x102 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x32 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102))))
 (let (($x180 (and true $x32)))
 (let (($x258 (and $x32 $x180)))
 (let ((?x151 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x215))))
 (let (($x177 (= (bvand ?x6 (_ bv4294967288 32)) ?x6)))
 (let (($x248 (= (bvand ?x151 (_ bv4294967292 32)) ?x151)))
 (let (($x159 (and $x248 $x177)))
 (let (($x252 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x151 (bvsub ?x151 (_ bv4 32))) (bvult ?x151 (bvsub ?x151 (_ bv4 32))))))
 (let (($x114 (and (and (and (and (and $x180 $x252) $x248) $x159) $x258) $x35)))
 (let (($x106 (not $x96)))
 (let (($x89 (=> $x106 $x114)))
 (let (($x131 (= $x89 true)))
 (let (($x82 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x167 (= $x82 true)))
 (let (($x158 (= $x106 true)))
 (let (($x195 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x118 (= $x195 true)))
 (let ((?x86 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x256 (= (_ bv0 32) ?x86)))
 (let ((?x172 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x172)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (and $x173 $x145)))
 (let (($x179 (and $x130 $x256)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (and $x127 $x179)))
 (let (($x194 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x170 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x194)))))))
 (let (($x210 (and $x170 $x138)))
 (let (($x196 (= $x210 true)))
 (let (($x204 (and $x196 $x118)))
 (let (($x34 (and $x204 $x158)))
 (let (($x99 (and $x34 $x167)))
 (let (($x56 (and $x99 $x131)))
 (let (($x76 (and $x56 $x189)))
 (let (($x205 (and $x76 $x190)))
 (let (($x148 (and $x205 $x182)))
 (let (($x322 (and $x148 $x83)))
 (let (($x337 (and $x322 $x336)))
 (let (($x335 (and $x48 $x337)))
 (let (($x72 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x338 (and $x72 $x335)))
 (let (($x98 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x151 (_ bv3 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x12 (=> (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x98)))))))
 (let (($x23 (=> (and $x106 (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x88 $x98)))))))
 (let (($x101 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x15 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x110 (_ bv1 32))) (or false (or false (and true (or $x90 $x101)))))))
 (let (($x134 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x110 (_ bv1 32)))) (or false (or false (and true (or $x90 $x101)))))))
 (let (($x36 (and $x134 $x23)))
 (let (($x341 (and $x36 $x338)))
 (let (($x27 (=> $x341 $x77)))
 (not $x27)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x278 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x181 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x44 (concat (select input.dst.llvm-mem ?x181) (concat ?x152 (concat ?x299 ?x278)))))
 (let ((?x344 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x44)))
 (let (($x345 (= (_ bv0 32) ?x344)))
 (let (($x77 (= $x345 true)))
 (let ((?x110 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv1 32))) (select input.dst.llvm-mem ?x110))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x110 (_ bv2 32))) ?x29))))
 (let ((?x239 (bvadd ?x104 (_ bv4 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x105 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x292))))
 (let (($x273 (= (_ bv0 32) ?x105)))
 (let ((?x247 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (= ?x247 (_ bv0 32))))
 (let (($x349 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x329 (= $x349 $x132)))
 (let (($x318 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x48 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x319 (and $x48 $x318)))
 (let (($x330 (=> $x319 $x329)))
 (let (($x304 (bvuge ?x247 (_ bv1 32))))
 (let (($x71 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x84 (= $x71 $x304)))
 (let (($x350 (=> $x319 $x84)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv1 32))) (select input.dst.llvm-mem ?x104))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x104 (_ bv2 32))) ?x283))))
 (let (($x333 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x246)))
 (let (($x320 (=> $x319 $x333)))
 (let (($x301 (= (_ bv0 32) ?x104)))
 (let ((?x221 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x221 (_ bv1 32))))
 (let (($x332 (= $x318 $x271)))
 (let (($x347 (=> $x48 $x332)))
 (let (($x161 (= false false)))
 (let (($x308 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x331 (and $x48 $x308)))
 (let (($x317 (=> $x331 $x161)))
 (let (($x224 (= ?x221 (_ bv0 32))))
 (let (($x309 (= $x308 $x224)))
 (let (($x316 (=> $x48 $x309)))
 (let (($x307 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x44)))
 (let (($x328 (=> $x48 $x307)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x229 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x65 (bvuge ?x229 (_ bv1 32))))
 (let (($x314 (= $x48 $x65)))
 (let (($x58 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x325 (=> $x58 $x161)))
 (let (($x188 (= ?x229 (_ bv0 32))))
 (let (($x18 (= $x58 $x188)))
 (let (($x342 (and (and (and (and (and (and $x18 $x325) $x314) $x328) $x316) $x317) $x347)))
 (let (($x340 (and (and (and $x342 $x320) $x350) $x330)))
 (let (($x336 (= $x340 true)))
 (let (($x187 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x234 (= $x187 $x304)))
 (let (($x257 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x259 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x225 (and $x259 $x257)))
 (let (($x306 (=> $x225 $x234)))
 (let (($x211 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x123 (= $x211 $x132)))
 (let (($x265 (=> $x225 $x123)))
 (let (($x276 (= input.spec-%var-l-1.2.1.2.0 ?x246)))
 (let (($x75 (=> $x225 $x276)))
 (let (($x228 (= $x257 $x271)))
 (let (($x263 (=> $x259 $x228)))
 (let (($x25 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (= $x25 $x224)))
 (let (($x277 (=> $x259 $x305)))
 (let (($x312 (= input.spec-%var-l-1.2.0 ?x44)))
 (let (($x249 (=> $x259 $x312)))
 (let (($x166 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x164 (= $x166 $x188)))
 (let (($x267 (and (and (and (=> $x166 $x161) (=> (and $x259 $x25) $x161)) (= $x259 $x65)) $x164)))
 (let (($x147 (and (and (and (and (and (and $x267 $x249) $x277) $x263) $x75) $x265) $x306)))
 (let (($x83 (= $x147 true)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x141 (concat ?x213 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x171 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x61 (concat ?x171 (concat ?x68 ?x141))))
 (let ((?x275 (bvadd ?x61 (_ bv4 32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x191))))
 (let (($x245 (= (_ bv0 32) ?x291)))
 (let ((?x297 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x156 (bvuge ?x297 (_ bv1 32))))
 (let (($x38 (= $x187 $x156)))
 (let (($x216 (=> $x225 $x38)))
 (let (($x155 (= ?x297 (_ bv0 32))))
 (let (($x238 (= $x211 $x155)))
 (let (($x222 (=> $x225 $x238)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv1 32))) (select input.dst.llvm-mem ?x61))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x61 (_ bv2 32))) ?x272))))
 (let (($x232 (= input.spec-%var-l-1.2.1.2.0 ?x250)))
 (let (($x40 (=> $x225 $x232)))
 (let (($x79 (= (_ bv0 32) ?x61)))
 (let ((?x202 (ite $x79 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x202 (_ bv1 32))))
 (let (($x126 (= $x257 $x20)))
 (let (($x24 (=> $x259 $x126)))
 (let (($x280 (and $x259 $x25)))
 (let (($x281 (=> $x280 $x161)))
 (let (($x192 (= ?x202 (_ bv0 32))))
 (let (($x146 (= $x25 $x192)))
 (let (($x244 (=> $x259 $x146)))
 (let ((?x128 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x128)))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x198)))
 (let (($x144 (= input.spec-%var-l-1.2.0 ?x16)))
 (let (($x193 (=> $x259 $x144)))
 (let (($x183 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x133 (ite $x183 (_ bv0 32) (_ bv1 32))))
 (let (($x186 (bvuge ?x133 (_ bv1 32))))
 (let (($x223 (= $x259 $x186)))
 (let (($x162 (and (and (and (and (= $x166 (= ?x133 (_ bv0 32))) (=> $x166 $x161)) $x223) $x193) $x244)))
 (let (($x269 (and (and (and (and (and $x162 $x281) $x24) $x40) $x222) $x216)))
 (let (($x182 (= $x269 true)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x190 (= $x63 true)))
 (let ((?x243 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x209 (= (_ bv0 3) ?x243)))
 (let (($x189 (= $x209 true)))
 (let (($x35 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x102 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x32 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x102))))
 (let (($x180 (and true $x32)))
 (let (($x258 (and $x32 $x180)))
 (let ((?x151 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x6 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x215))))
 (let (($x177 (= (bvand ?x6 (_ bv4294967288 32)) ?x6)))
 (let (($x248 (= (bvand ?x151 (_ bv4294967292 32)) ?x151)))
 (let (($x159 (and $x248 $x177)))
 (let (($x252 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x151 (bvsub ?x151 (_ bv4 32))) (bvult ?x151 (bvsub ?x151 (_ bv4 32))))))
 (let (($x114 (and (and (and (and (and $x180 $x252) $x248) $x159) $x258) $x35)))
 (let (($x106 (not $x96)))
 (let (($x89 (=> $x106 $x114)))
 (let (($x131 (= $x89 true)))
 (let (($x82 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x167 (= $x82 true)))
 (let (($x158 (= $x106 true)))
 (let (($x195 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x118 (= $x195 true)))
 (let ((?x86 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x256 (= (_ bv0 32) ?x86)))
 (let ((?x172 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x172)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (and $x173 $x145)))
 (let (($x179 (and $x130 $x256)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (and $x127 $x179)))
 (let (($x194 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x170 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x43 $x194)))))))
 (let (($x210 (and $x170 $x138)))
 (let (($x196 (= $x210 true)))
 (let (($x204 (and $x196 $x118)))
 (let (($x34 (and $x204 $x158)))
 (let (($x99 (and $x34 $x167)))
 (let (($x56 (and $x99 $x131)))
 (let (($x76 (and $x56 $x189)))
 (let (($x205 (and $x76 $x190)))
 (let (($x148 (and $x205 $x182)))
 (let (($x322 (and $x148 $x83)))
 (let (($x337 (and $x322 $x336)))
 (let (($x335 (and $x48 $x337)))
 (let (($x72 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x338 (and $x72 $x335)))
 (let (($x98 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd ?x151 (_ bv3 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x12 (=> (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x98)))))))
 (let (($x23 (=> (and $x106 (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x88 $x98)))))))
 (let (($x101 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x181)))
 (let (($x15 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x110 (_ bv1 32))) (or false (or false (and true (or $x90 $x101)))))))
 (let (($x134 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x110 (_ bv1 32)))) (or false (or false (and true (or $x90 $x101)))))))
 (let (($x36 (and $x134 $x23)))
 (let (($x341 (and $x36 $x338)))
 (let (($x27 (=> $x341 $x77)))
 (not $x27)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1310712 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv1310712 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv131072 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16777212 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16777212 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv16777215 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 40
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x44 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x115 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem ?x115) (concat ?x300 (concat ?x249 ?x44)))))
 (let ((?x366 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x226)))
 (let (($x357 (= (_ bv0 32) ?x366)))
 (let (($x358 (= $x357 true)))
 (let (($x340 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x214 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x321 (and $x214 $x333)))
 (let (($x341 (and $x321 $x340)))
 (let (($x344 (not $x341)))
 (let (($x349 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x335 (and $x321 $x349)))
 (let (($x338 (not $x335)))
 (let ((?x74 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x301))))
 (let ((?x67 (bvadd ?x271 (_ bv4 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x292))))
 (let (($x265 (= (_ bv0 32) ?x123)))
 (let ((?x64 (ite $x265 (_ bv0 32) (_ bv1 32))))
 (let (($x304 (= ?x64 (_ bv0 32))))
 (let (($x336 (= $x340 $x304)))
 (let (($x337 (=> $x321 $x336)))
 (let (($x147 (bvuge ?x64 (_ bv1 32))))
 (let (($x329 (= $x349 $x147)))
 (let (($x330 (=> $x321 $x329)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x241))))
 (let (($x84 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x303)))
 (let (($x350 (=> $x321 $x84)))
 (let (($x228 (= (_ bv0 32) ?x271)))
 (let ((?x263 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x60 (bvuge ?x263 (_ bv1 32))))
 (let (($x320 (= $x333 $x60)))
 (let (($x343 (=> $x214 $x320)))
 (let (($x223 (= false false)))
 (let (($x332 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x319 (and $x214 $x332)))
 (let (($x348 (=> $x319 $x223)))
 (let (($x10 (= ?x263 (_ bv0 32))))
 (let (($x347 (= $x332 $x10)))
 (let (($x342 (=> $x214 $x347)))
 (let (($x317 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x226)))
 (let (($x324 (=> $x214 $x317)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x231 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x231 (_ bv1 32))))
 (let (($x323 (= $x214 $x299)))
 (let (($x308 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x316 (=> $x308 $x223)))
 (let (($x236 (= ?x231 (_ bv0 32))))
 (let (($x309 (= $x308 $x236)))
 (let (($x7 (and (and (and (and (and (and $x309 $x316) $x323) $x324) $x342) $x348) $x343)))
 (let (($x410 (and (and (and (and (and $x7 $x350) $x330) $x337) $x338) $x344)))
 (let (($x353 (= $x410 true)))
 (let (($x238 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x83 (= $x238 $x147)))
 (let (($x257 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x207 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x87 (and $x207 $x257)))
 (let (($x322 (=> $x87 $x83)))
 (let (($x310 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x234 (= $x310 $x304)))
 (let (($x306 (=> $x87 $x234)))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x303)))
 (let (($x254 (=> $x87 $x95)))
 (let (($x268 (= $x257 $x60)))
 (let (($x237 (=> $x207 $x268)))
 (let (($x5 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x302 (= $x5 $x10)))
 (let (($x287 (=> $x207 $x302)))
 (let (($x240 (= input.spec-%var-l-1.2.0 ?x226)))
 (let (($x49 (=> $x207 $x240)))
 (let (($x103 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x129 (= $x103 $x236)))
 (let (($x278 (= $x207 $x299)))
 (let (($x216 (and $x87 $x310)))
 (let (($x269 (not $x216)))
 (let (($x156 (and $x87 $x238)))
 (let (($x38 (not $x156)))
 (let (($x18 (and (and (and (=> $x103 $x223) (=> (and $x207 $x5) $x223)) $x38) $x269)))
 (let (($x160 (and (and (and (and (and (and $x18 $x278) $x129) $x49) $x287) $x237) $x254)))
 (let (($x328 (and (and $x160 $x306) $x322)))
 (let (($x327 (= $x328 true)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x213 (concat ?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x202 (concat ?x79 (concat ?x141 ?x213))))
 (let ((?x122 (bvadd ?x202 (_ bv4 32))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x107))))
 (let (($x80 (= (_ bv0 32) ?x191)))
 (let ((?x291 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x291 (_ bv1 32))))
 (let (($x220 (= $x238 $x222)))
 (let (($x187 (=> $x87 $x220)))
 (let (($x245 (= ?x291 (_ bv0 32))))
 (let (($x297 (= $x310 $x245)))
 (let (($x155 (=> $x87 $x297)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem ?x202))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv2 32))) ?x13))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x28)))
 (let (($x232 (=> $x87 $x250)))
 (let (($x192 (= (_ bv0 32) ?x202)))
 (let ((?x146 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x146 (_ bv1 32))))
 (let (($x126 (= $x257 $x20)))
 (let (($x24 (=> $x207 $x126)))
 (let (($x281 (and $x207 $x5)))
 (let (($x78 (=> $x281 $x223)))
 (let (($x244 (= ?x146 (_ bv0 32))))
 (let (($x162 (= $x5 $x244)))
 (let (($x280 (=> $x207 $x162)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x163)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x16)))
 (let (($x261 (= input.spec-%var-l-1.2.0 ?x113)))
 (let (($x25 (=> $x207 $x261)))
 (let (($x282 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x37 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x37 (_ bv1 32))))
 (let (($x289 (= $x207 $x69)))
 (let (($x229 (and (and (and (and (= $x103 (= ?x37 (_ bv0 32))) (=> $x103 $x223)) $x289) $x25) $x280)))
 (let (($x267 (and (and (and (and (and (and $x229 $x78) $x24) $x232) $x155) $x187) $x38)))
 (let (($x264 (and $x267 $x269)))
 (let (($x33 (= $x264 true)))
 (let (($x185 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x183 (= $x185 true)))
 (let ((?x63 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x190 (= (_ bv0 3) ?x63)))
 (let (($x205 (= $x190 true)))
 (let (($x114 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x180 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x19 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x180) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x180))))
 (let (($x252 (and true $x19)))
 (let (($x284 (and $x19 $x252)))
 (let ((?x91 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x97))))
 (let (($x258 (= (bvand ?x177 (_ bv4294967288 32)) ?x177)))
 (let (($x298 (= (bvand ?x91 (_ bv4294967292 32)) ?x91)))
 (let (($x168 (and $x298 $x258)))
 (let (($x218 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x91 (bvsub ?x91 (_ bv4 32))) (bvult ?x91 (bvsub ?x91 (_ bv4 32))))))
 (let (($x243 (and (and (and (and (and $x252 $x218) $x298) $x168) $x284) $x114)))
 (let (($x106 (not $x96)))
 (let (($x209 (=> $x106 $x243)))
 (let (($x189 (= $x209 true)))
 (let (($x197 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x11 (= $x197 true)))
 (let (($x99 (= $x106 true)))
 (let (($x178 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x82 (= $x178 true)))
 (let ((?x196 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x125 (= (_ bv0 32) ?x196)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x210 (and $x256 $x138)))
 (let (($x195 (and $x210 $x125)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x109 $x195)))
 (let (($x50 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x86 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x50)))))))
 (let (($x204 (and $x86 $x118)))
 (let (($x158 (= $x204 true)))
 (let (($x167 (and $x158 $x82)))
 (let (($x59 (and $x167 $x99)))
 (let (($x32 (and $x59 $x11)))
 (let (($x76 (and $x32 $x189)))
 (let (($x255 (and $x76 $x205)))
 (let (($x133 (and $x255 $x183)))
 (let (($x152 (and $x133 $x33)))
 (let (($x315 (and $x152 $x327)))
 (let (($x354 (and $x315 $x353)))
 (let (($x355 (and $x214 $x354)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x365 (and $x154 $x355)))
 (let (($x51 (bvugt ?x91 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd ?x91 (_ bv3 32))))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x72 (=> (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x108 $x51)))))))
 (let (($x116 (=> (and $x106 (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x108 $x51)))))))
 (let (($x174 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x142 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32))) (or false (or false (and true (or $x112 $x174)))))))
 (let (($x93 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32)))) (or false (or false (and true (or $x112 $x174)))))))
 (let (($x39 (and $x93 $x116)))
 (let (($x356 (and $x39 $x365)))
 (let (($x367 (=> $x356 $x358)))
 (not $x367))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x44 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x249 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x115 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x226 (concat (select input.dst.llvm-mem ?x115) (concat ?x300 (concat ?x249 ?x44)))))
 (let ((?x366 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x226)))
 (let (($x357 (= (_ bv0 32) ?x366)))
 (let (($x358 (= $x357 true)))
 (let (($x340 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x214 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x321 (and $x214 $x333)))
 (let (($x341 (and $x321 $x340)))
 (let (($x344 (not $x341)))
 (let (($x349 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x335 (and $x321 $x349)))
 (let (($x338 (not $x335)))
 (let ((?x74 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x301))))
 (let ((?x67 (bvadd ?x271 (_ bv4 32))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x292))))
 (let (($x265 (= (_ bv0 32) ?x123)))
 (let ((?x64 (ite $x265 (_ bv0 32) (_ bv1 32))))
 (let (($x304 (= ?x64 (_ bv0 32))))
 (let (($x336 (= $x340 $x304)))
 (let (($x337 (=> $x321 $x336)))
 (let (($x147 (bvuge ?x64 (_ bv1 32))))
 (let (($x329 (= $x349 $x147)))
 (let (($x330 (=> $x321 $x329)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x241))))
 (let (($x84 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x303)))
 (let (($x350 (=> $x321 $x84)))
 (let (($x228 (= (_ bv0 32) ?x271)))
 (let ((?x263 (ite $x228 (_ bv0 32) (_ bv1 32))))
 (let (($x60 (bvuge ?x263 (_ bv1 32))))
 (let (($x320 (= $x333 $x60)))
 (let (($x343 (=> $x214 $x320)))
 (let (($x223 (= false false)))
 (let (($x332 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x319 (and $x214 $x332)))
 (let (($x348 (=> $x319 $x223)))
 (let (($x10 (= ?x263 (_ bv0 32))))
 (let (($x347 (= $x332 $x10)))
 (let (($x342 (=> $x214 $x347)))
 (let (($x317 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x226)))
 (let (($x324 (=> $x214 $x317)))
 (let (($x96 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x231 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (bvuge ?x231 (_ bv1 32))))
 (let (($x323 (= $x214 $x299)))
 (let (($x308 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x316 (=> $x308 $x223)))
 (let (($x236 (= ?x231 (_ bv0 32))))
 (let (($x309 (= $x308 $x236)))
 (let (($x7 (and (and (and (and (and (and $x309 $x316) $x323) $x324) $x342) $x348) $x343)))
 (let (($x410 (and (and (and (and (and $x7 $x350) $x330) $x337) $x338) $x344)))
 (let (($x353 (= $x410 true)))
 (let (($x238 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x83 (= $x238 $x147)))
 (let (($x257 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x207 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x87 (and $x207 $x257)))
 (let (($x322 (=> $x87 $x83)))
 (let (($x310 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x234 (= $x310 $x304)))
 (let (($x306 (=> $x87 $x234)))
 (let (($x95 (= input.spec-%var-l-1.2.1.2.0 ?x303)))
 (let (($x254 (=> $x87 $x95)))
 (let (($x268 (= $x257 $x60)))
 (let (($x237 (=> $x207 $x268)))
 (let (($x5 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x302 (= $x5 $x10)))
 (let (($x287 (=> $x207 $x302)))
 (let (($x240 (= input.spec-%var-l-1.2.0 ?x226)))
 (let (($x49 (=> $x207 $x240)))
 (let (($x103 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x129 (= $x103 $x236)))
 (let (($x278 (= $x207 $x299)))
 (let (($x216 (and $x87 $x310)))
 (let (($x269 (not $x216)))
 (let (($x156 (and $x87 $x238)))
 (let (($x38 (not $x156)))
 (let (($x18 (and (and (and (=> $x103 $x223) (=> (and $x207 $x5) $x223)) $x38) $x269)))
 (let (($x160 (and (and (and (and (and (and $x18 $x278) $x129) $x49) $x287) $x237) $x254)))
 (let (($x328 (and (and $x160 $x306) $x322)))
 (let (($x327 (= $x328 true)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x213 (concat ?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x202 (concat ?x79 (concat ?x141 ?x213))))
 (let ((?x122 (bvadd ?x202 (_ bv4 32))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x107))))
 (let (($x80 (= (_ bv0 32) ?x191)))
 (let ((?x291 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x222 (bvuge ?x291 (_ bv1 32))))
 (let (($x220 (= $x238 $x222)))
 (let (($x187 (=> $x87 $x220)))
 (let (($x245 (= ?x291 (_ bv0 32))))
 (let (($x297 (= $x310 $x245)))
 (let (($x155 (=> $x87 $x297)))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem ?x202))))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv2 32))) ?x13))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x28)))
 (let (($x232 (=> $x87 $x250)))
 (let (($x192 (= (_ bv0 32) ?x202)))
 (let ((?x146 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x20 (bvuge ?x146 (_ bv1 32))))
 (let (($x126 (= $x257 $x20)))
 (let (($x24 (=> $x207 $x126)))
 (let (($x281 (and $x207 $x5)))
 (let (($x78 (=> $x281 $x223)))
 (let (($x244 (= ?x146 (_ bv0 32))))
 (let (($x162 (= $x5 $x244)))
 (let (($x280 (=> $x207 $x162)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x16 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x163)))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x16)))
 (let (($x261 (= input.spec-%var-l-1.2.0 ?x113)))
 (let (($x25 (=> $x207 $x261)))
 (let (($x282 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x37 (ite $x282 (_ bv0 32) (_ bv1 32))))
 (let (($x69 (bvuge ?x37 (_ bv1 32))))
 (let (($x289 (= $x207 $x69)))
 (let (($x229 (and (and (and (and (= $x103 (= ?x37 (_ bv0 32))) (=> $x103 $x223)) $x289) $x25) $x280)))
 (let (($x267 (and (and (and (and (and (and $x229 $x78) $x24) $x232) $x155) $x187) $x38)))
 (let (($x264 (and $x267 $x269)))
 (let (($x33 (= $x264 true)))
 (let (($x185 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x183 (= $x185 true)))
 (let ((?x63 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x190 (= (_ bv0 3) ?x63)))
 (let (($x205 (= $x190 true)))
 (let (($x114 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x180 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x19 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x180) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x180))))
 (let (($x252 (and true $x19)))
 (let (($x284 (and $x19 $x252)))
 (let ((?x91 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x97 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x97))))
 (let (($x258 (= (bvand ?x177 (_ bv4294967288 32)) ?x177)))
 (let (($x298 (= (bvand ?x91 (_ bv4294967292 32)) ?x91)))
 (let (($x168 (and $x298 $x258)))
 (let (($x218 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x91 (bvsub ?x91 (_ bv4 32))) (bvult ?x91 (bvsub ?x91 (_ bv4 32))))))
 (let (($x243 (and (and (and (and (and $x252 $x218) $x298) $x168) $x284) $x114)))
 (let (($x106 (not $x96)))
 (let (($x209 (=> $x106 $x243)))
 (let (($x189 (= $x209 true)))
 (let (($x197 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x11 (= $x197 true)))
 (let (($x99 (= $x106 true)))
 (let (($x178 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x82 (= $x178 true)))
 (let ((?x196 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x125 (= (_ bv0 32) ?x196)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x256 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x210 (and $x256 $x138)))
 (let (($x195 (and $x210 $x125)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x109 $x195)))
 (let (($x50 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x86 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x50)))))))
 (let (($x204 (and $x86 $x118)))
 (let (($x158 (= $x204 true)))
 (let (($x167 (and $x158 $x82)))
 (let (($x59 (and $x167 $x99)))
 (let (($x32 (and $x59 $x11)))
 (let (($x76 (and $x32 $x189)))
 (let (($x255 (and $x76 $x205)))
 (let (($x133 (and $x255 $x183)))
 (let (($x152 (and $x133 $x33)))
 (let (($x315 (and $x152 $x327)))
 (let (($x354 (and $x315 $x353)))
 (let (($x355 (and $x214 $x354)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x365 (and $x154 $x355)))
 (let (($x51 (bvugt ?x91 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd ?x91 (_ bv3 32))))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x72 (=> (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x108 $x51)))))))
 (let (($x116 (=> (and $x106 (bvule ?x91 (bvsub (bvadd ?x91 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x108 $x51)))))))
 (let (($x174 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x142 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32))) (or false (or false (and true (or $x112 $x174)))))))
 (let (($x93 (=> (and $x106 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32)))) (or false (or false (and true (or $x112 $x174)))))))
 (let (($x39 (and $x93 $x116)))
 (let (($x356 (and $x39 $x365)))
 (let (($x367 (=> $x356 $x358)))
 (not $x367))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2093056 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv2093056 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16773120 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16773120 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv16773123 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0000000d)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000008)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x00000010
              #x44)
       #x0000000b
       #x44))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x44000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x44000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 41
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x288 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x34 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x68 (concat (select input.dst.llvm-mem ?x34) (concat ?x79 (concat ?x5 ?x288)))))
 (let ((?x435 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x68)))
 (let ((?x432 (bvadd input.spec-%var-sum-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x433 (bvmul (_ bv4294967295 32) ?x432)))
 (let ((?x434 (bvneg ?x433)))
 (let (($x436 (= ?x434 ?x435)))
 (let (($x437 (= $x436 true)))
 (let ((?x98 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x328))))
 (let ((?x324 (bvadd ?x316 (_ bv4 32))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv1 32))) (select input.dst.llvm-mem ?x324))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv2 32))) ?x347))))
 (let ((?x357 (bvadd ?x333 (_ bv4 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv1 32))) (select input.dst.llvm-mem ?x357))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv2 32))) ?x143))))
 (let (($x363 (= (_ bv0 32) ?x362)))
 (let ((?x364 (ite $x363 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (bvuge ?x364 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x22 (= $x81 $x375)))
 (let (($x395 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x408 (and $x390 $x395)))
 (let (($x416 (=> $x408 $x22)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x333 (_ bv1 32))) (select input.dst.llvm-mem ?x333))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x333 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x333 (_ bv2 32))) ?x321))))
 (let (($x415 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x349)))
 (let (($x54 (=> $x408 $x415)))
 (let (($x369 (= ?x364 (_ bv0 32))))
 (let (($x411 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x412 (= $x411 $x369)))
 (let (($x413 (=> $x408 $x412)))
 (let (($x354 (= (_ bv0 32) ?x333)))
 (let ((?x355 (ite $x354 (_ bv0 32) (_ bv1 32))))
 (let (($x372 (= ?x355 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x402 (= $x393 $x372)))
 (let (($x403 (=> $x390 $x402)))
 (let (($x365 (bvuge ?x355 (_ bv1 32))))
 (let (($x398 (= $x395 $x365)))
 (let (($x401 (=> $x390 $x398)))
 (let (($x86 (= false false)))
 (let (($x394 (and $x390 $x393)))
 (let (($x392 (=> $x394 $x86)))
 (let (($x388 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x396 (=> $x388 $x86)))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x337))))
 (let (($x399 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x344)))
 (let (($x400 (=> $x390 $x399)))
 (let (($x345 (= (_ bv0 32) ?x316)))
 (let ((?x214 (ite $x345 (_ bv0 32) (_ bv1 32))))
 (let (($x331 (bvuge ?x214 (_ bv1 32))))
 (let (($x407 (= $x390 $x331)))
 (let (($x323 (= ?x214 (_ bv0 32))))
 (let (($x389 (= $x388 $x323)))
 (let (($x422 (and (and (and (and (and (and $x389 $x407) $x400) $x396) $x392) $x401) $x403)))
 (let (($x425 (and (and (and $x422 $x413) $x54) $x416)))
 (let (($x130 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x426 (=> $x130 $x425)))
 (let (($x427 (= $x426 true)))
 (let (($x247 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x404 (= $x247 $x375)))
 (let (($x299 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x221 (and $x245 $x299)))
 (let (($x376 (=> $x221 $x404)))
 (let (($x58 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x373 (= $x58 $x372)))
 (let (($x374 (=> $x245 $x373)))
 (let (($x268 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x370 (= $x268 $x369)))
 (let (($x371 (=> $x221 $x370)))
 (let (($x356 (= $x299 $x365)))
 (let (($x366 (=> $x245 $x356)))
 (let (($x410 (= input.spec-%var-l-1.2.1.2.0 ?x344)))
 (let (($x353 (=> $x245 $x410)))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x349)))
 (let (($x330 (=> $x221 $x329)))
 (let (($x18 (and $x245 $x58)))
 (let (($x231 (=> $x18 $x86)))
 (let (($x100 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x100 $x86)))
 (let (($x386 (and (and (and (and (and (= $x100 $x323) (= $x245 $x331)) $x152) $x231) $x330) $x353)))
 (let (($x380 (and (and (and (and $x386 $x366) $x371) $x374) $x376)))
 (let (($x109 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x381 (=> $x109 $x380)))
 (let (($x379 (= $x381 true)))
 (let ((?x279 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x203 (concat ?x279 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x107 (concat ?x211 (concat ?x296 ?x203))))
 (let ((?x278 (bvadd ?x107 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x278 (_ bv1 32))) (select input.dst.llvm-mem ?x278))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd ?x278 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x278 (_ bv2 32))) ?x326))))
 (let ((?x237 (bvadd ?x44 (_ bv4 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x246))))
 (let (($x303 (= (_ bv0 32) ?x75)))
 (let ((?x95 (ite $x303 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x95 (_ bv1 32))))
 (let (($x17 (= $x247 $x132)))
 (let (($x105 (=> $x221 $x17)))
 (let (($x254 (= ?x95 (_ bv0 32))))
 (let (($x160 (= $x268 $x254)))
 (let (($x67 (=> $x221 $x160)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv1 32))) (select input.dst.llvm-mem ?x44))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv2 32))) ?x301))))
 (let (($x287 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x302)))
 (let (($x314 (=> $x221 $x287)))
 (let (($x313 (= (_ bv0 32) ?x44)))
 (let ((?x227 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (= ?x227 (_ bv0 32))))
 (let (($x277 (= $x58 $x48)))
 (let (($x266 (=> $x245 $x277)))
 (let (($x226 (bvuge ?x227 (_ bv1 32))))
 (let (($x240 (= $x299 $x226)))
 (let (($x49 (=> $x245 $x240)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x187))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x269)))
 (let (($x33 (=> $x245 $x264)))
 (let (($x233 (= (_ bv0 32) ?x107)))
 (let ((?x191 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (bvuge ?x191 (_ bv1 32))))
 (let (($x155 (= $x245 $x297)))
 (let (($x80 (= ?x191 (_ bv0 32))))
 (let (($x291 (= $x100 $x80)))
 (let (($x123 (and (and (and (and (and (and $x291 $x155) $x33) $x152) $x231) $x49) $x266)))
 (let (($x304 (and (and (and $x123 $x314) $x67) $x105)))
 (let (($x234 (=> $x109 $x304)))
 (let (($x306 (= $x234 true)))
 (let ((?x30 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x290 (bvneg ?x30)))
 (let (($x120 (= ?x290 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x28 (= $x120 true)))
 (let ((?x225 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x217 (= (_ bv0 3) ?x225)))
 (let (($x272 (= $x217 true)))
 (let (($x78 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x68)))
 (let (($x65 (=> $x130 $x78)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x163 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x163 (_ bv1 32))))
 (let (($x229 (= $x130 $x261)))
 (let (($x244 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x280 (=> $x244 $x86)))
 (let (($x16 (= ?x163 (_ bv0 32))))
 (let (($x162 (= $x244 $x16)))
 (let (($x126 (and (and (and $x162 $x280) $x229) $x65)))
 (let (($x24 (= $x126 true)))
 (let (($x184 (= input.spec-%var-l-1.2.0 ?x68)))
 (let (($x47 (=> $x109 $x184)))
 (let (($x25 (= $x109 $x261)))
 (let (($x170 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x194 (=> $x170 $x86)))
 (let (($x113 (= $x170 $x16)))
 (let (($x202 (and (and (and $x113 $x194) $x25) $x47)))
 (let (($x192 (= $x202 true)))
 (let (($x148 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x57 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x209 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x57) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x57))))
 (let (($x189 (and true $x209)))
 (let (($x69 (and $x209 $x189)))
 (let ((?x88 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv1 32))) (select input.dst.llvm-mem ?x88))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv2 32))) ?x103))))
 (let (($x182 (= (bvand ?x186 (_ bv4294967288 32)) ?x186)))
 (let (($x185 (= (bvand ?x88 (_ bv4294967292 32)) ?x88)))
 (let (($x207 (and $x185 $x182)))
 (let (($x205 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x88 (bvsub ?x88 (_ bv4 32))) (bvult ?x88 (bvsub ?x88 (_ bv4 32))))))
 (let (($x198 (and (and (and (and (and $x189 $x205) $x185) $x207) $x69) $x148)))
 (let (($x134 (not $x101)))
 (let (($x293 (=> $x134 $x198)))
 (let (($x285 (= $x293 true)))
 (let (($x168 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x56 (= $x168 true)))
 (let (($x159 (= $x134 true)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x6)))
 (let ((?x219 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x215 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x219)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (and $x41 $x215)))
 (let (($x8 (and $x199 $x139)))
 (let (($x19 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x52 (and $x19 $x8)))
 (let (($x248 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x248)))))))
 (let (($x97 (and $x131 $x52)))
 (let (($x137 (= $x97 true)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x118)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x82)))
 (let (($x102 (= input.spec-%var-l-1.2.0 ?x59)))
 (let (($x197 (=> $x109 $x102)))
 (let (($x127 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x173 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x173 (_ bv1 32))))
 (let (($x179 (= $x109 $x256)))
 (let (($x14 (and (and (and (= $x170 (= ?x173 (_ bv0 32))) $x194) $x179) $x197)))
 (let (($x180 (= $x14 true)))
 (let (($x177 (and $x180 $x137)))
 (let (($x21 (and $x177 $x159)))
 (let (($x284 (and $x21 $x56)))
 (let (($x251 (and $x284 $x285)))
 (let (($x146 (and $x251 $x192)))
 (let (($x55 (and $x146 $x24)))
 (let (($x242 (and $x55 $x272)))
 (let (($x250 (and $x242 $x28)))
 (let (($x307 (and $x250 $x306)))
 (let (($x382 (and $x307 $x379)))
 (let (($x428 (and $x382 $x427)))
 (let (($x429 (and $x130 $x428)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x430 (and $x140 $x429)))
 (let (($x12 (bvugt ?x88 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x88 (_ bv3 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x53 (=> (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x12)))))))
 (let (($x106 (=> (and $x134 (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x115 $x12)))))))
 (let (($x136 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x34)))
 (let (($x70 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x98 (_ bv1 32))) (or false (or false (and true (or $x96 $x136)))))))
 (let (($x181 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x98 (_ bv1 32)))) (or false (or false (and true (or $x96 $x136)))))))
 (let (($x15 (and $x181 $x106)))
 (let (($x431 (and $x15 $x430)))
 (let (($x438 (=> $x431 $x437)))
 (not $x438)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x288 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x34 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x68 (concat (select input.dst.llvm-mem ?x34) (concat ?x79 (concat ?x5 ?x288)))))
 (let ((?x435 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x68)))
 (let ((?x432 (bvadd input.spec-%var-sum-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x433 (bvmul (_ bv4294967295 32) ?x432)))
 (let ((?x434 (bvneg ?x433)))
 (let (($x436 (= ?x434 ?x435)))
 (let (($x437 (= $x436 true)))
 (let ((?x98 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x328 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem ?x98))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x98 (_ bv2 32))) ?x328))))
 (let ((?x324 (bvadd ?x316 (_ bv4 32))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv1 32))) (select input.dst.llvm-mem ?x324))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv2 32))) ?x347))))
 (let ((?x357 (bvadd ?x333 (_ bv4 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv1 32))) (select input.dst.llvm-mem ?x357))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv2 32))) ?x143))))
 (let (($x363 (= (_ bv0 32) ?x362)))
 (let ((?x364 (ite $x363 (_ bv0 32) (_ bv1 32))))
 (let (($x375 (bvuge ?x364 (_ bv1 32))))
 (let (($x81 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x22 (= $x81 $x375)))
 (let (($x395 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x408 (and $x390 $x395)))
 (let (($x416 (=> $x408 $x22)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x333 (_ bv1 32))) (select input.dst.llvm-mem ?x333))))
 (let ((?x349 (concat (select input.dst.llvm-mem (bvadd ?x333 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x333 (_ bv2 32))) ?x321))))
 (let (($x415 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x349)))
 (let (($x54 (=> $x408 $x415)))
 (let (($x369 (= ?x364 (_ bv0 32))))
 (let (($x411 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x412 (= $x411 $x369)))
 (let (($x413 (=> $x408 $x412)))
 (let (($x354 (= (_ bv0 32) ?x333)))
 (let ((?x355 (ite $x354 (_ bv0 32) (_ bv1 32))))
 (let (($x372 (= ?x355 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x402 (= $x393 $x372)))
 (let (($x403 (=> $x390 $x402)))
 (let (($x365 (bvuge ?x355 (_ bv1 32))))
 (let (($x398 (= $x395 $x365)))
 (let (($x401 (=> $x390 $x398)))
 (let (($x86 (= false false)))
 (let (($x394 (and $x390 $x393)))
 (let (($x392 (=> $x394 $x86)))
 (let (($x388 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x396 (=> $x388 $x86)))
 (let ((?x337 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv1 32))) (select input.dst.llvm-mem ?x316))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x316 (_ bv2 32))) ?x337))))
 (let (($x399 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x344)))
 (let (($x400 (=> $x390 $x399)))
 (let (($x345 (= (_ bv0 32) ?x316)))
 (let ((?x214 (ite $x345 (_ bv0 32) (_ bv1 32))))
 (let (($x331 (bvuge ?x214 (_ bv1 32))))
 (let (($x407 (= $x390 $x331)))
 (let (($x323 (= ?x214 (_ bv0 32))))
 (let (($x389 (= $x388 $x323)))
 (let (($x422 (and (and (and (and (and (and $x389 $x407) $x400) $x396) $x392) $x401) $x403)))
 (let (($x425 (and (and (and $x422 $x413) $x54) $x416)))
 (let (($x130 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x426 (=> $x130 $x425)))
 (let (($x427 (= $x426 true)))
 (let (($x247 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x404 (= $x247 $x375)))
 (let (($x299 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x221 (and $x245 $x299)))
 (let (($x376 (=> $x221 $x404)))
 (let (($x58 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x373 (= $x58 $x372)))
 (let (($x374 (=> $x245 $x373)))
 (let (($x268 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x370 (= $x268 $x369)))
 (let (($x371 (=> $x221 $x370)))
 (let (($x356 (= $x299 $x365)))
 (let (($x366 (=> $x245 $x356)))
 (let (($x410 (= input.spec-%var-l-1.2.1.2.0 ?x344)))
 (let (($x353 (=> $x245 $x410)))
 (let (($x329 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x349)))
 (let (($x330 (=> $x221 $x329)))
 (let (($x18 (and $x245 $x58)))
 (let (($x231 (=> $x18 $x86)))
 (let (($x100 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x152 (=> $x100 $x86)))
 (let (($x386 (and (and (and (and (and (= $x100 $x323) (= $x245 $x331)) $x152) $x231) $x330) $x353)))
 (let (($x380 (and (and (and (and $x386 $x366) $x371) $x374) $x376)))
 (let (($x109 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x381 (=> $x109 $x380)))
 (let (($x379 (= $x381 true)))
 (let ((?x279 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x203 (concat ?x279 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x107 (concat ?x211 (concat ?x296 ?x203))))
 (let ((?x278 (bvadd ?x107 (_ bv4 32))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x278 (_ bv1 32))) (select input.dst.llvm-mem ?x278))))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd ?x278 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x278 (_ bv2 32))) ?x326))))
 (let ((?x237 (bvadd ?x44 (_ bv4 32))))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x75 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x246))))
 (let (($x303 (= (_ bv0 32) ?x75)))
 (let ((?x95 (ite $x303 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (bvuge ?x95 (_ bv1 32))))
 (let (($x17 (= $x247 $x132)))
 (let (($x105 (=> $x221 $x17)))
 (let (($x254 (= ?x95 (_ bv0 32))))
 (let (($x160 (= $x268 $x254)))
 (let (($x67 (=> $x221 $x160)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv1 32))) (select input.dst.llvm-mem ?x44))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x44 (_ bv2 32))) ?x301))))
 (let (($x287 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x302)))
 (let (($x314 (=> $x221 $x287)))
 (let (($x313 (= (_ bv0 32) ?x44)))
 (let ((?x227 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x48 (= ?x227 (_ bv0 32))))
 (let (($x277 (= $x58 $x48)))
 (let (($x266 (=> $x245 $x277)))
 (let (($x226 (bvuge ?x227 (_ bv1 32))))
 (let (($x240 (= $x299 $x226)))
 (let (($x49 (=> $x245 $x240)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv1 32))) (select input.dst.llvm-mem ?x107))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x107 (_ bv2 32))) ?x187))))
 (let (($x264 (= input.spec-%var-l-1.2.1.2.0 ?x269)))
 (let (($x33 (=> $x245 $x264)))
 (let (($x233 (= (_ bv0 32) ?x107)))
 (let ((?x191 (ite $x233 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (bvuge ?x191 (_ bv1 32))))
 (let (($x155 (= $x245 $x297)))
 (let (($x80 (= ?x191 (_ bv0 32))))
 (let (($x291 (= $x100 $x80)))
 (let (($x123 (and (and (and (and (and (and $x291 $x155) $x33) $x152) $x231) $x49) $x266)))
 (let (($x304 (and (and (and $x123 $x314) $x67) $x105)))
 (let (($x234 (=> $x109 $x304)))
 (let (($x306 (= $x234 true)))
 (let ((?x30 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x290 (bvneg ?x30)))
 (let (($x120 (= ?x290 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x28 (= $x120 true)))
 (let ((?x225 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x217 (= (_ bv0 3) ?x225)))
 (let (($x272 (= $x217 true)))
 (let (($x78 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x68)))
 (let (($x65 (=> $x130 $x78)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x163 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x163 (_ bv1 32))))
 (let (($x229 (= $x130 $x261)))
 (let (($x244 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x280 (=> $x244 $x86)))
 (let (($x16 (= ?x163 (_ bv0 32))))
 (let (($x162 (= $x244 $x16)))
 (let (($x126 (and (and (and $x162 $x280) $x229) $x65)))
 (let (($x24 (= $x126 true)))
 (let (($x184 (= input.spec-%var-l-1.2.0 ?x68)))
 (let (($x47 (=> $x109 $x184)))
 (let (($x25 (= $x109 $x261)))
 (let (($x170 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x194 (=> $x170 $x86)))
 (let (($x113 (= $x170 $x16)))
 (let (($x202 (and (and (and $x113 $x194) $x25) $x47)))
 (let (($x192 (= $x202 true)))
 (let (($x148 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x57 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x209 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x57) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x57))))
 (let (($x189 (and true $x209)))
 (let (($x69 (and $x209 $x189)))
 (let ((?x88 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv1 32))) (select input.dst.llvm-mem ?x88))))
 (let ((?x186 (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x88 (_ bv2 32))) ?x103))))
 (let (($x182 (= (bvand ?x186 (_ bv4294967288 32)) ?x186)))
 (let (($x185 (= (bvand ?x88 (_ bv4294967292 32)) ?x88)))
 (let (($x207 (and $x185 $x182)))
 (let (($x205 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x88 (bvsub ?x88 (_ bv4 32))) (bvult ?x88 (bvsub ?x88 (_ bv4 32))))))
 (let (($x198 (and (and (and (and (and $x189 $x205) $x185) $x207) $x69) $x148)))
 (let (($x134 (not $x101)))
 (let (($x293 (=> $x134 $x198)))
 (let (($x285 (= $x293 true)))
 (let (($x168 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x56 (= $x168 true)))
 (let (($x159 (= $x134 true)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x6)))
 (let ((?x219 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x215 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x219)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (and $x41 $x215)))
 (let (($x8 (and $x199 $x139)))
 (let (($x19 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x52 (and $x19 $x8)))
 (let (($x248 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x248)))))))
 (let (($x97 (and $x131 $x52)))
 (let (($x137 (= $x97 true)))
 (let ((?x118 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x118)))
 (let ((?x59 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x82)))
 (let (($x102 (= input.spec-%var-l-1.2.0 ?x59)))
 (let (($x197 (=> $x109 $x102)))
 (let (($x127 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x173 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x256 (bvuge ?x173 (_ bv1 32))))
 (let (($x179 (= $x109 $x256)))
 (let (($x14 (and (and (and (= $x170 (= ?x173 (_ bv0 32))) $x194) $x179) $x197)))
 (let (($x180 (= $x14 true)))
 (let (($x177 (and $x180 $x137)))
 (let (($x21 (and $x177 $x159)))
 (let (($x284 (and $x21 $x56)))
 (let (($x251 (and $x284 $x285)))
 (let (($x146 (and $x251 $x192)))
 (let (($x55 (and $x146 $x24)))
 (let (($x242 (and $x55 $x272)))
 (let (($x250 (and $x242 $x28)))
 (let (($x307 (and $x250 $x306)))
 (let (($x382 (and $x307 $x379)))
 (let (($x428 (and $x382 $x427)))
 (let (($x429 (and $x130 $x428)))
 (let (($x140 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x430 (and $x140 $x429)))
 (let (($x12 (bvugt ?x88 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x88 (_ bv3 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x53 (=> (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x115 $x12)))))))
 (let (($x106 (=> (and $x134 (bvule ?x88 (bvsub (bvadd ?x88 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x115 $x12)))))))
 (let (($x136 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x96 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x34)))
 (let (($x70 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x98 (_ bv1 32))) (or false (or false (and true (or $x96 $x136)))))))
 (let (($x181 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x98 (_ bv1 32)))) (or false (or false (and true (or $x96 $x136)))))))
 (let (($x15 (and $x181 $x106)))
 (let (($x431 (and $x15 $x430)))
 (let (($x438 (=> $x431 $x437)))
 (not $x438)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 42
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x165 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv1 32))) (select input.dst.llvm-mem ?x165))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv2 32))) ?x284))))
 (let (($x340 (bvule ?x189 (_ bv4294967294 32))))
 (let (($x336 (= $x340 true)))
 (let ((?x74 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x227))))
 (let ((?x94 (bvadd ?x277 (_ bv4 32))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x62))))
 (let (($x95 (= (_ bv0 32) ?x303)))
 (let ((?x254 (ite $x95 (_ bv0 32) (_ bv1 32))))
 (let (($x160 (= ?x254 (_ bv0 32))))
 (let (($x150 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x339 (= $x150 $x160)))
 (let (($x324 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x127 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x342 (and $x127 $x324)))
 (let (($x71 (=> $x342 $x339)))
 (let (($x247 (bvuge ?x254 (_ bv1 32))))
 (let (($x347 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x319 (= $x347 $x247)))
 (let (($x333 (=> $x342 $x319)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x301))))
 (let (($x318 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x60)))
 (let (($x332 (=> $x342 $x318)))
 (let (($x266 (= (_ bv0 32) ?x277)))
 (let ((?x123 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (bvuge ?x123 (_ bv1 32))))
 (let (($x348 (= $x324 $x10)))
 (let (($x135 (=> $x127 $x348)))
 (let (($x148 (= false false)))
 (let (($x331 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x377 (and $x127 $x331)))
 (let (($x378 (=> $x377 $x148)))
 (let (($x221 (= ?x123 (_ bv0 32))))
 (let (($x317 (= $x331 $x221)))
 (let (($x405 (=> $x127 $x317)))
 (let ((?x292 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x93 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x93) (concat ?x157 (concat ?x278 ?x292)))))
 (let (($x214 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x323 (=> $x127 $x214)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x235 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x235 (_ bv1 32))))
 (let (($x316 (= $x127 $x212)))
 (let (($x147 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x176 (=> $x147 $x148)))
 (let (($x18 (= ?x235 (_ bv0 32))))
 (let (($x328 (= $x147 $x18)))
 (let (($x350 (and (and (and (and (and (and $x328 $x176) $x316) $x323) $x405) $x378) $x135)))
 (let (($x330 (and (and (and $x350 $x332) $x333) $x71)))
 (let (($x406 (= $x330 true)))
 (let (($x188 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x132 (= $x188 $x247)))
 (let (($x24 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x293 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x217 (and $x293 $x24)))
 (let (($x17 (=> $x217 $x132)))
 (let (($x211 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x67 (= $x211 $x160)))
 (let (($x64 (=> $x217 $x67)))
 (let (($x268 (= input.spec-%var-l-1.2.1.2.0 ?x60)))
 (let (($x237 (=> $x217 $x268)))
 (let (($x305 (= $x24 $x10)))
 (let (($x271 (=> $x293 $x305)))
 (let (($x175 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x175 $x221)))
 (let (($x263 (=> $x293 $x224)))
 (let (($x325 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x326 (=> $x293 $x325)))
 (let (($x182 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x231 (= $x182 $x18)))
 (let (($x234 (and (and (and (=> $x182 $x148) (=> (and $x293 $x175) $x148)) (= $x293 $x212)) $x231)))
 (let (($x315 (and (and (and (and (and (and $x234 $x326) $x263) $x271) $x237) $x64) $x17)))
 (let (($x83 (= $x315 true)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x192 (concat ?x202 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x280 (concat ?x206 ?x192))))
 (let ((?x262 (bvadd ?x257 (_ bv4 32))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x310))))
 (let (($x291 (= (_ bv0 32) ?x80)))
 (let ((?x245 (ite $x291 (_ bv0 32) (_ bv1 32))))
 (let (($x267 (bvuge ?x245 (_ bv1 32))))
 (let (($x216 (= $x188 $x267)))
 (let (($x164 (=> $x217 $x216)))
 (let (($x297 (= ?x245 (_ bv0 32))))
 (let (($x155 (= $x211 $x297)))
 (let (($x294 (=> $x217 $x155)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x30))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x232)))
 (let (($x40 (=> $x217 $x100)))
 (let (($x130 (= (_ bv0 32) ?x257)))
 (let ((?x229 (ite $x130 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x229 (_ bv1 32))))
 (let (($x87 (= $x24 $x55)))
 (let (($x225 (=> $x293 $x87)))
 (let (($x65 (and $x293 $x175)))
 (let (($x126 (=> $x65 $x148)))
 (let (($x20 (= ?x229 (_ bv0 32))))
 (let (($x281 (= $x175 $x20)))
 (let (($x78 (=> $x293 $x281)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x261)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x141)))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x66)))
 (let (($x288 (=> $x293 $x5)))
 (let (($x193 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x69 (ite $x193 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x69 (_ bv1 32))))
 (let (($x251 (= $x293 $x285)))
 (let (($x238 (and (and (and (and (= $x182 (= ?x69 (_ bv0 32))) (=> $x182 $x148)) $x251) $x288) $x78)))
 (let (($x33 (and (and (and (and (and $x238 $x126) $x225) $x40) $x294) $x164)))
 (let (($x274 (= $x33 true)))
 (let ((?x103 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x37 (= (_ bv0 3) ?x103)))
 (let (($x186 (= $x37 true)))
 (let (($x255 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x215 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169))))
 (let (($x199 (and true $x215)))
 (let (($x205 (and $x215 $x199)))
 (let (($x63 (= (bvand ?x189 (_ bv4294967288 32)) ?x189)))
 (let (($x159 (= (bvand ?x165 (_ bv4294967292 32)) ?x165)))
 (let (($x190 (and $x159 $x63)))
 (let (($x97 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x165 (bvsub ?x165 (_ bv4 32))) (bvult ?x165 (bvsub ?x165 (_ bv4 32))))))
 (let (($x161 (and (and (and (and (and $x199 $x97) $x159) $x190) $x205) $x255)))
 (let (($x134 (not $x101)))
 (let (($x282 (=> $x134 $x161)))
 (let (($x133 (= $x282 true)))
 (let (($x31 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x26 (= $x31 true)))
 (let (($x248 (= $x134 true)))
 (let ((?x14 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x14)))
 (let ((?x59 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x59)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (and $x82 $x102)))
 (let (($x252 (and $x197 $x180)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (and $x32 $x252)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x118 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x204)))))))
 (let (($x298 (and $x118 $x200)))
 (let (($x253 (= $x298 true)))
 (let ((?x145 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x86 (bvneg ?x145)))
 (let (($x11 (= ?x86 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x109 (= $x11 true)))
 (let (($x73 (and $x109 $x253)))
 (let (($x218 (and $x73 $x248)))
 (let (($x131 (and $x218 $x26)))
 (let (($x260 (and $x131 $x133)))
 (let (($x223 (and $x260 $x186)))
 (let (($x152 (and $x223 $x274)))
 (let (($x322 (and $x152 $x83)))
 (let (($x352 (and $x322 $x406)))
 (let (($x341 (and $x127 $x352)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x351 (and $x170 $x341)))
 (let (($x72 (bvugt ?x165 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x165 (_ bv3 32))))
 (let (($x36 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x140 (=> (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x36 $x72)))))))
 (let (($x39 (=> (and $x134 (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x36 $x72)))))))
 (let (($x92 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x93)))
 (let (($x117 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32))) (or false (or false (and true (or $x91 $x92)))))))
 (let (($x174 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32)))) (or false (or false (and true (or $x91 $x92)))))))
 (let (($x153 (and $x174 $x39)))
 (let (($x335 (and $x153 $x351)))
 (let (($x346 (=> $x335 $x336)))
 (not $x346)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x165 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv1 32))) (select input.dst.llvm-mem ?x165))))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x165 (_ bv2 32))) ?x284))))
 (let (($x340 (bvule ?x189 (_ bv4294967294 32))))
 (let (($x336 (= $x340 true)))
 (let ((?x74 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv1 32))) (select input.dst.llvm-mem ?x74))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x74 (_ bv2 32))) ?x227))))
 (let ((?x94 (bvadd ?x277 (_ bv4 32))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv1 32))) (select input.dst.llvm-mem ?x94))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x94 (_ bv2 32))) ?x62))))
 (let (($x95 (= (_ bv0 32) ?x303)))
 (let ((?x254 (ite $x95 (_ bv0 32) (_ bv1 32))))
 (let (($x160 (= ?x254 (_ bv0 32))))
 (let (($x150 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x339 (= $x150 $x160)))
 (let (($x324 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x127 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x342 (and $x127 $x324)))
 (let (($x71 (=> $x342 $x339)))
 (let (($x247 (bvuge ?x254 (_ bv1 32))))
 (let (($x347 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x319 (= $x347 $x247)))
 (let (($x333 (=> $x342 $x319)))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x301))))
 (let (($x318 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x60)))
 (let (($x332 (=> $x342 $x318)))
 (let (($x266 (= (_ bv0 32) ?x277)))
 (let ((?x123 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (bvuge ?x123 (_ bv1 32))))
 (let (($x348 (= $x324 $x10)))
 (let (($x135 (=> $x127 $x348)))
 (let (($x148 (= false false)))
 (let (($x331 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x377 (and $x127 $x331)))
 (let (($x378 (=> $x377 $x148)))
 (let (($x221 (= ?x123 (_ bv0 32))))
 (let (($x317 (= $x331 $x221)))
 (let (($x405 (=> $x127 $x317)))
 (let ((?x292 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x93 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x93) (concat ?x157 (concat ?x278 ?x292)))))
 (let (($x214 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x323 (=> $x127 $x214)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x235 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x235 (_ bv1 32))))
 (let (($x316 (= $x127 $x212)))
 (let (($x147 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x176 (=> $x147 $x148)))
 (let (($x18 (= ?x235 (_ bv0 32))))
 (let (($x328 (= $x147 $x18)))
 (let (($x350 (and (and (and (and (and (and $x328 $x176) $x316) $x323) $x405) $x378) $x135)))
 (let (($x330 (and (and (and $x350 $x332) $x333) $x71)))
 (let (($x406 (= $x330 true)))
 (let (($x188 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x132 (= $x188 $x247)))
 (let (($x24 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x293 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x217 (and $x293 $x24)))
 (let (($x17 (=> $x217 $x132)))
 (let (($x211 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x67 (= $x211 $x160)))
 (let (($x64 (=> $x217 $x67)))
 (let (($x268 (= input.spec-%var-l-1.2.1.2.0 ?x60)))
 (let (($x237 (=> $x217 $x268)))
 (let (($x305 (= $x24 $x10)))
 (let (($x271 (=> $x293 $x305)))
 (let (($x175 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x175 $x221)))
 (let (($x263 (=> $x293 $x224)))
 (let (($x325 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x326 (=> $x293 $x325)))
 (let (($x182 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x231 (= $x182 $x18)))
 (let (($x234 (and (and (and (=> $x182 $x148) (=> (and $x293 $x175) $x148)) (= $x293 $x212)) $x231)))
 (let (($x315 (and (and (and (and (and (and $x234 $x326) $x263) $x271) $x237) $x64) $x17)))
 (let (($x83 (= $x315 true)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x192 (concat ?x202 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x280 (concat ?x206 ?x192))))
 (let ((?x262 (bvadd ?x257 (_ bv4 32))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x310))))
 (let (($x291 (= (_ bv0 32) ?x80)))
 (let ((?x245 (ite $x291 (_ bv0 32) (_ bv1 32))))
 (let (($x267 (bvuge ?x245 (_ bv1 32))))
 (let (($x216 (= $x188 $x267)))
 (let (($x164 (=> $x217 $x216)))
 (let (($x297 (= ?x245 (_ bv0 32))))
 (let (($x155 (= $x211 $x297)))
 (let (($x294 (=> $x217 $x155)))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv1 32))) (select input.dst.llvm-mem ?x257))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x257 (_ bv2 32))) ?x30))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x232)))
 (let (($x40 (=> $x217 $x100)))
 (let (($x130 (= (_ bv0 32) ?x257)))
 (let ((?x229 (ite $x130 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x229 (_ bv1 32))))
 (let (($x87 (= $x24 $x55)))
 (let (($x225 (=> $x293 $x87)))
 (let (($x65 (and $x293 $x175)))
 (let (($x126 (=> $x65 $x148)))
 (let (($x20 (= ?x229 (_ bv0 32))))
 (let (($x281 (= $x175 $x20)))
 (let (($x78 (=> $x293 $x281)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x261)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x141)))
 (let (($x5 (= input.spec-%var-l-1.2.0 ?x66)))
 (let (($x288 (=> $x293 $x5)))
 (let (($x193 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x69 (ite $x193 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x69 (_ bv1 32))))
 (let (($x251 (= $x293 $x285)))
 (let (($x238 (and (and (and (and (= $x182 (= ?x69 (_ bv0 32))) (=> $x182 $x148)) $x251) $x288) $x78)))
 (let (($x33 (and (and (and (and (and $x238 $x126) $x225) $x40) $x294) $x164)))
 (let (($x274 (= $x33 true)))
 (let ((?x103 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x37 (= (_ bv0 3) ?x103)))
 (let (($x186 (= $x37 true)))
 (let (($x255 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x169 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x215 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x169))))
 (let (($x199 (and true $x215)))
 (let (($x205 (and $x215 $x199)))
 (let (($x63 (= (bvand ?x189 (_ bv4294967288 32)) ?x189)))
 (let (($x159 (= (bvand ?x165 (_ bv4294967292 32)) ?x165)))
 (let (($x190 (and $x159 $x63)))
 (let (($x97 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x165 (bvsub ?x165 (_ bv4 32))) (bvult ?x165 (bvsub ?x165 (_ bv4 32))))))
 (let (($x161 (and (and (and (and (and $x199 $x97) $x159) $x190) $x205) $x255)))
 (let (($x134 (not $x101)))
 (let (($x282 (=> $x134 $x161)))
 (let (($x133 (= $x282 true)))
 (let (($x31 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x26 (= $x31 true)))
 (let (($x248 (= $x134 true)))
 (let ((?x14 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x14)))
 (let ((?x59 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x59)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (and $x82 $x102)))
 (let (($x252 (and $x197 $x180)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x200 (and $x32 $x252)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x118 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x204)))))))
 (let (($x298 (and $x118 $x200)))
 (let (($x253 (= $x298 true)))
 (let ((?x145 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x86 (bvneg ?x145)))
 (let (($x11 (= ?x86 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x109 (= $x11 true)))
 (let (($x73 (and $x109 $x253)))
 (let (($x218 (and $x73 $x248)))
 (let (($x131 (and $x218 $x26)))
 (let (($x260 (and $x131 $x133)))
 (let (($x223 (and $x260 $x186)))
 (let (($x152 (and $x223 $x274)))
 (let (($x322 (and $x152 $x83)))
 (let (($x352 (and $x322 $x406)))
 (let (($x341 (and $x127 $x352)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x351 (and $x170 $x341)))
 (let (($x72 (bvugt ?x165 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x165 (_ bv3 32))))
 (let (($x36 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x140 (=> (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x36 $x72)))))))
 (let (($x39 (=> (and $x134 (bvule ?x165 (bvsub (bvadd ?x165 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x36 $x72)))))))
 (let (($x92 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x93)))
 (let (($x117 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32))) (or false (or false (and true (or $x91 $x92)))))))
 (let (($x174 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x74 (_ bv1 32)))) (or false (or false (and true (or $x91 $x92)))))))
 (let (($x153 (and $x174 $x39)))
 (let (($x335 (and $x153 $x351)))
 (let (($x346 (=> $x335 $x336)))
 (not $x346)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 43
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2628X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2625X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2625X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2625X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var2622X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2619X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2619X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2619X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var2616X () (_ BitVec 32))
(declare-fun input.ind-%var2613X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2613X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2613X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x593 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2628X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x594 (concat ?x593 (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv4 32))))))
 (let ((?x596 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2628X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x599 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2628X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x600 (concat ?x599 (concat ?x596 ?x594))))
 (let (($x601 (= ?x600 ?x600)))
 (let (($x571 (= (_ bv0 32) input.ind-%var2628X)))
 (let ((?x572 (ite $x571 (_ bv0 32) (_ bv1 32))))
 (let (($x576 (bvuge ?x572 (_ bv1 32))))
 (let (($x602 (=> $x576 $x601)))
 (let ((?x581 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2628X))))
 (let ((?x584 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv2 32))) ?x581)))
 (let ((?x587 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv3 32))) ?x584)))
 (let (($x588 (= ?x587 ?x587)))
 (let (($x589 (=> $x576 $x588)))
 (let (($x577 (= $x576 $x576)))
 (let (($x128 (= false false)))
 (let (($x573 (= ?x572 (_ bv0 32))))
 (let (($x575 (=> $x573 $x128)))
 (let (($x574 (= $x573 $x573)))
 (let ((?x111 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv1 32))) (select input.dst.llvm-mem ?x111))))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv2 32))) ?x258))))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x233))))
 (let (($x453 (= ?x296 ?x63)))
 (let (($x607 (and (and (and (and (and $x453 $x574) $x575) $x577) $x589) $x602)))
 (let (($x563 (= input.ind-%var2625X.2.1 input.ind-%var2625X.2.1)))
 (let (($x557 (bvuge input.ind-%var2625X.0 (_ bv1 32))))
 (let (($x564 (=> $x557 $x563)))
 (let (($x560 (= input.ind-%var2625X.2.0 input.ind-%var2625X.2.0)))
 (let (($x561 (=> $x557 $x560)))
 (let (($x558 (= $x557 $x557)))
 (let (($x554 (= input.ind-%var2625X.0 (_ bv0 32))))
 (let (($x556 (=> $x554 $x128)))
 (let (($x555 (= $x554 $x554)))
 (let (($x552 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x569 (and (and (and (and (and $x552 $x555) $x556) $x558) $x561) $x564)))
 (let (($x608 (and $x569 $x607)))
 (let (($x86 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x609 (and $x86 $x608)))
 (let ((?x535 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2622X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x536 (concat ?x535 (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv4 32))))))
 (let ((?x538 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2622X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x541 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2622X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x542 (concat ?x541 (concat ?x538 ?x536))))
 (let (($x543 (= ?x542 ?x542)))
 (let (($x513 (= (_ bv0 32) input.ind-%var2622X)))
 (let ((?x514 (ite $x513 (_ bv0 32) (_ bv1 32))))
 (let (($x518 (bvuge ?x514 (_ bv1 32))))
 (let (($x544 (=> $x518 $x543)))
 (let ((?x523 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2622X))))
 (let ((?x526 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv2 32))) ?x523)))
 (let ((?x529 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv3 32))) ?x526)))
 (let (($x530 (= ?x529 ?x529)))
 (let (($x531 (=> $x518 $x530)))
 (let (($x519 (= $x518 $x518)))
 (let (($x515 (= ?x514 (_ bv0 32))))
 (let (($x517 (=> $x515 $x128)))
 (let (($x516 (= $x515 $x515)))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x84 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x343 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x323 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x7 (concat ?x323 (concat ?x343 ?x127))))
 (let (($x511 (= ?x7 ?x63)))
 (let (($x549 (and (and (and (and (and $x511 $x516) $x517) $x519) $x531) $x544)))
 (let (($x504 (= input.ind-%var2619X.2.1 input.ind-%var2619X.2.1)))
 (let (($x498 (bvuge input.ind-%var2619X.0 (_ bv1 32))))
 (let (($x505 (=> $x498 $x504)))
 (let (($x501 (= input.ind-%var2619X.2.0 input.ind-%var2619X.2.0)))
 (let (($x502 (=> $x498 $x501)))
 (let (($x499 (= $x498 $x498)))
 (let (($x495 (= input.ind-%var2619X.0 (_ bv0 32))))
 (let (($x497 (=> $x495 $x128)))
 (let (($x496 (= $x495 $x495)))
 (let (($x438 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x510 (and (and (and (and (and $x438 $x496) $x497) $x499) $x502) $x505)))
 (let (($x550 (and $x510 $x549)))
 (let (($x148 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x551 (and $x148 $x550)))
 (let ((?x477 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2616X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x478 (concat ?x477 (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv4 32))))))
 (let ((?x480 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2616X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x483 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2616X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x484 (concat ?x483 (concat ?x480 ?x478))))
 (let (($x485 (= ?x484 ?x484)))
 (let (($x455 (= (_ bv0 32) input.ind-%var2616X)))
 (let ((?x456 (ite $x455 (_ bv0 32) (_ bv1 32))))
 (let (($x460 (bvuge ?x456 (_ bv1 32))))
 (let (($x486 (=> $x460 $x485)))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2616X))))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv2 32))) ?x465)))
 (let ((?x471 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv3 32))) ?x468)))
 (let (($x472 (= ?x471 ?x471)))
 (let (($x473 (=> $x460 $x472)))
 (let (($x461 (= $x460 $x460)))
 (let (($x457 (= ?x456 (_ bv0 32))))
 (let (($x459 (=> $x457 $x128)))
 (let (($x491 (and (and (and (and (and $x453 (= $x457 $x457)) $x459) $x461) $x473) $x486)))
 (let (($x446 (= input.ind-%var2613X.2.1 input.ind-%var2613X.2.1)))
 (let (($x440 (bvuge input.ind-%var2613X.0 (_ bv1 32))))
 (let (($x447 (=> $x440 $x446)))
 (let (($x443 (= input.ind-%var2613X.2.0 input.ind-%var2613X.2.0)))
 (let (($x444 (=> $x440 $x443)))
 (let (($x441 (= $x440 $x440)))
 (let (($x142 (= input.ind-%var2613X.0 (_ bv0 32))))
 (let (($x45 (=> $x142 $x128)))
 (let (($x452 (and (and (and (and (and $x438 (= $x142 $x142)) $x45) $x441) $x444) $x447)))
 (let (($x492 (and $x452 $x491)))
 (let (($x493 (and $x148 $x492)))
 (let (($x435 (not true)))
 (let (($x612 (or (or (or $x435 $x493) $x551) $x609)))
 (let (($x613 (and true $x612)))
 (let (($x614 (= $x613 true)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x296 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x296 (_ bv4 32))))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x296 (_ bv4 32)) (_ bv2 32))) ?x58)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x296 (_ bv4 32)) (_ bv3 32))) ?x231)))
 (let ((?x228 (bvadd ?x249 (_ bv4 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x104))))
 (let (($x94 (= (_ bv0 32) ?x309)))
 (let ((?x283 (ite $x94 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x283 (_ bv1 32))))
 (let (($x423 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x414 (= $x423 $x246)))
 (let (($x420 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x391 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x402 (and $x391 $x420)))
 (let (($x415 (=> $x402 $x414)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x292))))
 (let (($x412 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x306)))
 (let (($x413 (=> $x402 $x412)))
 (let (($x75 (= ?x283 (_ bv0 32))))
 (let (($x422 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x408 (= $x422 $x75)))
 (let (($x409 (=> $x402 $x408)))
 (let (($x307 (= (_ bv0 32) ?x249)))
 (let ((?x10 (ite $x307 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (= ?x10 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x401 (= $x393 $x276)))
 (let (($x421 (=> $x391 $x401)))
 (let (($x305 (bvuge ?x10 (_ bv1 32))))
 (let (($x395 (= $x420 $x305)))
 (let (($x398 (=> $x391 $x395)))
 (let (($x394 (and $x391 $x393)))
 (let (($x392 (=> $x394 $x128)))
 (let (($x407 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x419 (=> $x407 $x128)))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x300))))
 (let (($x418 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x221)))
 (let (($x396 (=> $x391 $x418)))
 (let (($x310 (= (_ bv0 32) ?x296)))
 (let ((?x107 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (bvuge ?x107 (_ bv1 32))))
 (let (($x399 (= $x391 $x297)))
 (let (($x80 (= ?x107 (_ bv0 32))))
 (let (($x417 (= $x407 $x80)))
 (let (($x425 (and (and (and (and (and (and $x417 $x399) $x396) $x419) $x392) $x398) $x421)))
 (let (($x428 (and (and (and $x425 $x409) $x413) $x415)))
 (let (($x429 (=> $x86 $x428)))
 (let (($x430 (= $x429 true)))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x7 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x7 (_ bv4 32))))))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x7 (_ bv4 32)) (_ bv2 32))) ?x150)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x7 (_ bv4 32)) (_ bv3 32))) ?x330)))
 (let ((?x357 (bvadd ?x341 (_ bv4 32))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv1 32))) (select input.dst.llvm-mem ?x357))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv2 32))) ?x43))))
 (let (($x363 (= (_ bv0 32) ?x362)))
 (let ((?x364 (ite $x363 (_ bv0 32) (_ bv1 32))))
 (let (($x383 (bvuge ?x364 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x62 $x383)))
 (let (($x164 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x33 (and $x245 $x164)))
 (let (($x373 (=> $x33 $x372)))
 (let (($x369 (= ?x364 (_ bv0 32))))
 (let (($x265 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x370 (= $x265 $x369)))
 (let (($x371 (=> $x33 $x370)))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv1 32))) (select input.dst.llvm-mem ?x341))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv2 32))) ?x410))))
 (let (($x366 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x356)))
 (let (($x387 (=> $x33 $x366)))
 (let (($x351 (= (_ bv0 32) ?x341)))
 (let ((?x335 (ite $x351 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x335 (_ bv0 32))))
 (let (($x188 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x108 (= $x188 $x337)))
 (let (($x151 (=> $x245 $x108)))
 (let (($x340 (bvuge ?x335 (_ bv1 32))))
 (let (($x336 (= $x164 $x340)))
 (let (($x346 (=> $x245 $x336)))
 (let (($x267 (and $x245 $x188)))
 (let (($x216 (=> $x267 $x128)))
 (let (($x269 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (=> $x269 $x128)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x348))))
 (let (($x349 (= input.spec-%var-l-1.2.1.2.0 ?x332)))
 (let (($x27 (=> $x245 $x349)))
 (let (($x77 (= (_ bv0 32) ?x7)))
 (let ((?x331 (ite $x77 (_ bv0 32) (_ bv1 32))))
 (let (($x320 (bvuge ?x331 (_ bv1 32))))
 (let (($x377 (= $x245 $x320)))
 (let (($x317 (= ?x331 (_ bv0 32))))
 (let (($x405 (= $x269 $x317)))
 (let (($x380 (and (and (and (and (and (and $x405 $x377) $x27) $x294) $x216) $x346) $x151)))
 (let (($x382 (and (and (and $x380 $x387) $x371) $x373)))
 (let (($x385 (=> $x148 $x382)))
 (let (($x388 (= $x385 true)))
 (let (($x303 (= $x62 $x246)))
 (let (($x95 (=> $x33 $x303)))
 (let (($x311 (= $x188 $x276)))
 (let (($x241 (=> $x245 $x311)))
 (let (($x239 (= $x265 $x75)))
 (let (($x334 (=> $x33 $x239)))
 (let (($x271 (= $x164 $x305)))
 (let (($x308 (=> $x245 $x271)))
 (let (($x224 (= input.spec-%var-l-1.2.1.2.0 ?x221)))
 (let (($x263 (=> $x245 $x224)))
 (let (($x273 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x306)))
 (let (($x48 (=> $x33 $x273)))
 (let (($x327 (and (and (and (and (and (= $x269 $x80) (= $x245 $x297)) $x294) $x216) $x48) $x263)))
 (let (($x315 (and (and (and (and $x327 $x308) $x334) $x241) $x95)))
 (let (($x83 (=> $x148 $x315)))
 (let (($x322 (= $x83 true)))
 (let ((?x30 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (= (_ bv0 3) ?x30)))
 (let (($x232 (= $x120 true)))
 (let ((?x285 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x112 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x113 (concat (select input.dst.llvm-mem ?x112) (concat ?x79 (concat ?x222 ?x285)))))
 (let (($x272 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x113)))
 (let (($x28 (=> $x86 $x272)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x207 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x198 (bvuge ?x207 (_ bv1 32))))
 (let (($x38 (= $x86 $x198)))
 (let (($x55 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x225 (=> $x55 $x128)))
 (let (($x193 (= ?x207 (_ bv0 32))))
 (let (($x87 (= $x55 $x193)))
 (let (($x13 (and (and (and $x87 $x225) $x38) $x28)))
 (let (($x149 (= $x13 true)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x184)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x257)))
 (let (($x281 (= input.spec-%var-l-1.2.0 ?x20)))
 (let (($x78 (=> $x148 $x281)))
 (let (($x171 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x175 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x280 (bvuge ?x175 (_ bv1 32))))
 (let (($x146 (= $x148 $x280)))
 (let (($x182 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x182 $x128)))
 (let (($x68 (= ?x175 (_ bv0 32))))
 (let (($x162 (= $x182 $x68)))
 (let (($x126 (and (and (and $x162 $x289) $x146) $x78)))
 (let (($x187 (= $x126 true)))
 (let (($x213 (= input.spec-%var-l-1.2.0 ?x113)))
 (let (($x16 (=> $x148 $x213)))
 (let (($x66 (and (and (and (= $x182 $x193) $x289) (= $x148 $x198)) $x16)))
 (let (($x5 (= $x66 true)))
 (let (($x161 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x199 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x52 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x199) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x199))))
 (let (($x97 (and true $x52)))
 (let (($x9 (and $x52 $x97)))
 (let (($x205 (= (bvand ?x63 (_ bv4294967288 32)) ?x63)))
 (let (($x35 (= (bvand ?x111 (_ bv4294967292 32)) ?x111)))
 (let (($x259 (and $x35 $x205)))
 (let (($x185 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x111 (bvsub ?x111 (_ bv4 32))) (bvult ?x111 (bvsub ?x111 (_ bv4 32))))))
 (let (($x103 (and (and (and (and (and $x97 $x185) $x35) $x259) $x9) $x161)))
 (let (($x134 (not $x101)))
 (let (($x37 (=> $x134 $x103)))
 (let (($x186 (= $x37 true)))
 (let (($x41 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x219 (= $x41 true)))
 (let (($x131 (= $x134 true)))
 (let ((?x253 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x253)))
 (let ((?x252 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x252)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (and $x180 $x200)))
 (let (($x248 (and $x298 $x73)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x218 (and $x158 $x248)))
 (let (($x179 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x14 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x179)))))))
 (let (($x89 (and $x14 $x218)))
 (let (($x31 (= $x89 true)))
 (let ((?x109 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x138 (bvneg ?x109)))
 (let (($x196 (= ?x138 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (= $x196 true)))
 (let (($x26 (and $x167 $x31)))
 (let (($x19 (and $x26 $x131)))
 (let (($x215 (and $x19 $x219)))
 (let (($x223 (and $x215 $x186)))
 (let (($x288 (and $x223 $x5)))
 (let (($x24 (and $x288 $x187)))
 (let (($x121 (and $x24 $x149)))
 (let (($x100 (and $x121 $x232)))
 (let (($x50 (and $x100 $x322)))
 (let (($x389 (and $x50 $x388)))
 (let (($x431 (and $x389 $x430)))
 (let (($x432 (and $x86 $x431)))
 (let (($x172 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x433 (and $x172 $x432)))
 (let (($x106 (bvugt ?x111 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x111 (_ bv3 32))))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x170 (=> (bvule ?x111 (bvsub (bvadd ?x111 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x53 $x106)))))))
 (let (($x154 (=> (and $x134 (bvule ?x111 (bvsub (bvadd ?x111 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x53 $x106)))))))
 (let (($x181 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x112)))
 (let (($x12 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32))) (or false (or false (and true (or $x70 $x181)))))))
 (let (($x34 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32)))) (or false (or false (and true (or $x70 $x181)))))))
 (let (($x23 (and $x34 $x154)))
 (let (($x434 (and $x23 $x433)))
 (let (($x615 (=> $x434 $x614)))
 (not $x615)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2628X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2625X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2625X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2625X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var2622X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2619X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2619X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2619X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.ind-%var2616X () (_ BitVec 32))
(declare-fun input.ind-%var2613X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2613X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2613X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x593 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2628X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x594 (concat ?x593 (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv4 32))))))
 (let ((?x596 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2628X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x599 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2628X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x600 (concat ?x599 (concat ?x596 ?x594))))
 (let (($x601 (= ?x600 ?x600)))
 (let (($x571 (= (_ bv0 32) input.ind-%var2628X)))
 (let ((?x572 (ite $x571 (_ bv0 32) (_ bv1 32))))
 (let (($x576 (bvuge ?x572 (_ bv1 32))))
 (let (($x602 (=> $x576 $x601)))
 (let ((?x581 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2628X))))
 (let ((?x584 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv2 32))) ?x581)))
 (let ((?x587 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2628X (_ bv3 32))) ?x584)))
 (let (($x588 (= ?x587 ?x587)))
 (let (($x589 (=> $x576 $x588)))
 (let (($x577 (= $x576 $x576)))
 (let (($x128 (= false false)))
 (let (($x573 (= ?x572 (_ bv0 32))))
 (let (($x575 (=> $x573 $x128)))
 (let (($x574 (= $x573 $x573)))
 (let ((?x111 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x258 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv1 32))) (select input.dst.llvm-mem ?x111))))
 (let ((?x63 (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x111 (_ bv2 32))) ?x258))))
 (let ((?x96 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv1 32))) (select input.dst.llvm-mem ?x96))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x96 (_ bv2 32))) ?x233))))
 (let (($x453 (= ?x296 ?x63)))
 (let (($x607 (and (and (and (and (and $x453 $x574) $x575) $x577) $x589) $x602)))
 (let (($x563 (= input.ind-%var2625X.2.1 input.ind-%var2625X.2.1)))
 (let (($x557 (bvuge input.ind-%var2625X.0 (_ bv1 32))))
 (let (($x564 (=> $x557 $x563)))
 (let (($x560 (= input.ind-%var2625X.2.0 input.ind-%var2625X.2.0)))
 (let (($x561 (=> $x557 $x560)))
 (let (($x558 (= $x557 $x557)))
 (let (($x554 (= input.ind-%var2625X.0 (_ bv0 32))))
 (let (($x556 (=> $x554 $x128)))
 (let (($x555 (= $x554 $x554)))
 (let (($x552 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x569 (and (and (and (and (and $x552 $x555) $x556) $x558) $x561) $x564)))
 (let (($x608 (and $x569 $x607)))
 (let (($x86 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x609 (and $x86 $x608)))
 (let ((?x535 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2622X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x536 (concat ?x535 (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv4 32))))))
 (let ((?x538 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2622X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x541 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2622X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x542 (concat ?x541 (concat ?x538 ?x536))))
 (let (($x543 (= ?x542 ?x542)))
 (let (($x513 (= (_ bv0 32) input.ind-%var2622X)))
 (let ((?x514 (ite $x513 (_ bv0 32) (_ bv1 32))))
 (let (($x518 (bvuge ?x514 (_ bv1 32))))
 (let (($x544 (=> $x518 $x543)))
 (let ((?x523 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2622X))))
 (let ((?x526 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv2 32))) ?x523)))
 (let ((?x529 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2622X (_ bv3 32))) ?x526)))
 (let (($x530 (= ?x529 ?x529)))
 (let (($x531 (=> $x518 $x530)))
 (let (($x519 (= $x518 $x518)))
 (let (($x515 (= ?x514 (_ bv0 32))))
 (let (($x517 (=> $x515 $x128)))
 (let (($x516 (= $x515 $x515)))
 (let ((?x84 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x127 (concat ?x84 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x343 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x323 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x7 (concat ?x323 (concat ?x343 ?x127))))
 (let (($x511 (= ?x7 ?x63)))
 (let (($x549 (and (and (and (and (and $x511 $x516) $x517) $x519) $x531) $x544)))
 (let (($x504 (= input.ind-%var2619X.2.1 input.ind-%var2619X.2.1)))
 (let (($x498 (bvuge input.ind-%var2619X.0 (_ bv1 32))))
 (let (($x505 (=> $x498 $x504)))
 (let (($x501 (= input.ind-%var2619X.2.0 input.ind-%var2619X.2.0)))
 (let (($x502 (=> $x498 $x501)))
 (let (($x499 (= $x498 $x498)))
 (let (($x495 (= input.ind-%var2619X.0 (_ bv0 32))))
 (let (($x497 (=> $x495 $x128)))
 (let (($x496 (= $x495 $x495)))
 (let (($x438 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x510 (and (and (and (and (and $x438 $x496) $x497) $x499) $x502) $x505)))
 (let (($x550 (and $x510 $x549)))
 (let (($x148 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x551 (and $x148 $x550)))
 (let ((?x477 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2616X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x478 (concat ?x477 (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv4 32))))))
 (let ((?x480 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2616X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x483 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2616X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x484 (concat ?x483 (concat ?x480 ?x478))))
 (let (($x485 (= ?x484 ?x484)))
 (let (($x455 (= (_ bv0 32) input.ind-%var2616X)))
 (let ((?x456 (ite $x455 (_ bv0 32) (_ bv1 32))))
 (let (($x460 (bvuge ?x456 (_ bv1 32))))
 (let (($x486 (=> $x460 $x485)))
 (let ((?x465 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2616X))))
 (let ((?x468 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv2 32))) ?x465)))
 (let ((?x471 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2616X (_ bv3 32))) ?x468)))
 (let (($x472 (= ?x471 ?x471)))
 (let (($x473 (=> $x460 $x472)))
 (let (($x461 (= $x460 $x460)))
 (let (($x457 (= ?x456 (_ bv0 32))))
 (let (($x459 (=> $x457 $x128)))
 (let (($x491 (and (and (and (and (and $x453 (= $x457 $x457)) $x459) $x461) $x473) $x486)))
 (let (($x446 (= input.ind-%var2613X.2.1 input.ind-%var2613X.2.1)))
 (let (($x440 (bvuge input.ind-%var2613X.0 (_ bv1 32))))
 (let (($x447 (=> $x440 $x446)))
 (let (($x443 (= input.ind-%var2613X.2.0 input.ind-%var2613X.2.0)))
 (let (($x444 (=> $x440 $x443)))
 (let (($x441 (= $x440 $x440)))
 (let (($x142 (= input.ind-%var2613X.0 (_ bv0 32))))
 (let (($x45 (=> $x142 $x128)))
 (let (($x452 (and (and (and (and (and $x438 (= $x142 $x142)) $x45) $x441) $x444) $x447)))
 (let (($x492 (and $x452 $x491)))
 (let (($x493 (and $x148 $x492)))
 (let (($x435 (not true)))
 (let (($x612 (or (or (or $x435 $x493) $x551) $x609)))
 (let (($x613 (and true $x612)))
 (let (($x614 (= $x613 true)))
 (let ((?x58 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x296 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x296 (_ bv4 32))))))
 (let ((?x231 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x296 (_ bv4 32)) (_ bv2 32))) ?x58)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x296 (_ bv4 32)) (_ bv3 32))) ?x231)))
 (let ((?x228 (bvadd ?x249 (_ bv4 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x104))))
 (let (($x94 (= (_ bv0 32) ?x309)))
 (let ((?x283 (ite $x94 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x283 (_ bv1 32))))
 (let (($x423 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x414 (= $x423 $x246)))
 (let (($x420 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x391 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x402 (and $x391 $x420)))
 (let (($x415 (=> $x402 $x414)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem ?x249))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x249 (_ bv2 32))) ?x292))))
 (let (($x412 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x306)))
 (let (($x413 (=> $x402 $x412)))
 (let (($x75 (= ?x283 (_ bv0 32))))
 (let (($x422 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x408 (= $x422 $x75)))
 (let (($x409 (=> $x402 $x408)))
 (let (($x307 (= (_ bv0 32) ?x249)))
 (let ((?x10 (ite $x307 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (= ?x10 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x401 (= $x393 $x276)))
 (let (($x421 (=> $x391 $x401)))
 (let (($x305 (bvuge ?x10 (_ bv1 32))))
 (let (($x395 (= $x420 $x305)))
 (let (($x398 (=> $x391 $x395)))
 (let (($x394 (and $x391 $x393)))
 (let (($x392 (=> $x394 $x128)))
 (let (($x407 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x419 (=> $x407 $x128)))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x300))))
 (let (($x418 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x221)))
 (let (($x396 (=> $x391 $x418)))
 (let (($x310 (= (_ bv0 32) ?x296)))
 (let ((?x107 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x297 (bvuge ?x107 (_ bv1 32))))
 (let (($x399 (= $x391 $x297)))
 (let (($x80 (= ?x107 (_ bv0 32))))
 (let (($x417 (= $x407 $x80)))
 (let (($x425 (and (and (and (and (and (and $x417 $x399) $x396) $x419) $x392) $x398) $x421)))
 (let (($x428 (and (and (and $x425 $x409) $x413) $x415)))
 (let (($x429 (=> $x86 $x428)))
 (let (($x430 (= $x429 true)))
 (let ((?x150 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x7 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x7 (_ bv4 32))))))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x7 (_ bv4 32)) (_ bv2 32))) ?x150)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x7 (_ bv4 32)) (_ bv3 32))) ?x330)))
 (let ((?x357 (bvadd ?x341 (_ bv4 32))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv1 32))) (select input.dst.llvm-mem ?x357))))
 (let ((?x362 (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x357 (_ bv2 32))) ?x43))))
 (let (($x363 (= (_ bv0 32) ?x362)))
 (let ((?x364 (ite $x363 (_ bv0 32) (_ bv1 32))))
 (let (($x383 (bvuge ?x364 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x372 (= $x62 $x383)))
 (let (($x164 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x33 (and $x245 $x164)))
 (let (($x373 (=> $x33 $x372)))
 (let (($x369 (= ?x364 (_ bv0 32))))
 (let (($x265 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x370 (= $x265 $x369)))
 (let (($x371 (=> $x33 $x370)))
 (let ((?x410 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv1 32))) (select input.dst.llvm-mem ?x341))))
 (let ((?x356 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv2 32))) ?x410))))
 (let (($x366 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x356)))
 (let (($x387 (=> $x33 $x366)))
 (let (($x351 (= (_ bv0 32) ?x341)))
 (let ((?x335 (ite $x351 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x335 (_ bv0 32))))
 (let (($x188 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x108 (= $x188 $x337)))
 (let (($x151 (=> $x245 $x108)))
 (let (($x340 (bvuge ?x335 (_ bv1 32))))
 (let (($x336 (= $x164 $x340)))
 (let (($x346 (=> $x245 $x336)))
 (let (($x267 (and $x245 $x188)))
 (let (($x216 (=> $x267 $x128)))
 (let (($x269 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (=> $x269 $x128)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv1 32))) (select input.dst.llvm-mem ?x7))))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x7 (_ bv2 32))) ?x348))))
 (let (($x349 (= input.spec-%var-l-1.2.1.2.0 ?x332)))
 (let (($x27 (=> $x245 $x349)))
 (let (($x77 (= (_ bv0 32) ?x7)))
 (let ((?x331 (ite $x77 (_ bv0 32) (_ bv1 32))))
 (let (($x320 (bvuge ?x331 (_ bv1 32))))
 (let (($x377 (= $x245 $x320)))
 (let (($x317 (= ?x331 (_ bv0 32))))
 (let (($x405 (= $x269 $x317)))
 (let (($x380 (and (and (and (and (and (and $x405 $x377) $x27) $x294) $x216) $x346) $x151)))
 (let (($x382 (and (and (and $x380 $x387) $x371) $x373)))
 (let (($x385 (=> $x148 $x382)))
 (let (($x388 (= $x385 true)))
 (let (($x303 (= $x62 $x246)))
 (let (($x95 (=> $x33 $x303)))
 (let (($x311 (= $x188 $x276)))
 (let (($x241 (=> $x245 $x311)))
 (let (($x239 (= $x265 $x75)))
 (let (($x334 (=> $x33 $x239)))
 (let (($x271 (= $x164 $x305)))
 (let (($x308 (=> $x245 $x271)))
 (let (($x224 (= input.spec-%var-l-1.2.1.2.0 ?x221)))
 (let (($x263 (=> $x245 $x224)))
 (let (($x273 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x306)))
 (let (($x48 (=> $x33 $x273)))
 (let (($x327 (and (and (and (and (and (= $x269 $x80) (= $x245 $x297)) $x294) $x216) $x48) $x263)))
 (let (($x315 (and (and (and (and $x327 $x308) $x334) $x241) $x95)))
 (let (($x83 (=> $x148 $x315)))
 (let (($x322 (= $x83 true)))
 (let ((?x30 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (= (_ bv0 3) ?x30)))
 (let (($x232 (= $x120 true)))
 (let ((?x285 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x112 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x113 (concat (select input.dst.llvm-mem ?x112) (concat ?x79 (concat ?x222 ?x285)))))
 (let (($x272 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x113)))
 (let (($x28 (=> $x86 $x272)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x207 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x198 (bvuge ?x207 (_ bv1 32))))
 (let (($x38 (= $x86 $x198)))
 (let (($x55 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x225 (=> $x55 $x128)))
 (let (($x193 (= ?x207 (_ bv0 32))))
 (let (($x87 (= $x55 $x193)))
 (let (($x13 (and (and (and $x87 $x225) $x38) $x28)))
 (let (($x149 (= $x13 true)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x184)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x257)))
 (let (($x281 (= input.spec-%var-l-1.2.0 ?x20)))
 (let (($x78 (=> $x148 $x281)))
 (let (($x171 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x175 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x280 (bvuge ?x175 (_ bv1 32))))
 (let (($x146 (= $x148 $x280)))
 (let (($x182 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x182 $x128)))
 (let (($x68 (= ?x175 (_ bv0 32))))
 (let (($x162 (= $x182 $x68)))
 (let (($x126 (and (and (and $x162 $x289) $x146) $x78)))
 (let (($x187 (= $x126 true)))
 (let (($x213 (= input.spec-%var-l-1.2.0 ?x113)))
 (let (($x16 (=> $x148 $x213)))
 (let (($x66 (and (and (and (= $x182 $x193) $x289) (= $x148 $x198)) $x16)))
 (let (($x5 (= $x66 true)))
 (let (($x161 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x199 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x52 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x199) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x199))))
 (let (($x97 (and true $x52)))
 (let (($x9 (and $x52 $x97)))
 (let (($x205 (= (bvand ?x63 (_ bv4294967288 32)) ?x63)))
 (let (($x35 (= (bvand ?x111 (_ bv4294967292 32)) ?x111)))
 (let (($x259 (and $x35 $x205)))
 (let (($x185 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x111 (bvsub ?x111 (_ bv4 32))) (bvult ?x111 (bvsub ?x111 (_ bv4 32))))))
 (let (($x103 (and (and (and (and (and $x97 $x185) $x35) $x259) $x9) $x161)))
 (let (($x134 (not $x101)))
 (let (($x37 (=> $x134 $x103)))
 (let (($x186 (= $x37 true)))
 (let (($x41 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x219 (= $x41 true)))
 (let (($x131 (= $x134 true)))
 (let ((?x253 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x253)))
 (let ((?x252 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x200 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x252)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (and $x180 $x200)))
 (let (($x248 (and $x298 $x73)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x218 (and $x158 $x248)))
 (let (($x179 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x14 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x118 $x179)))))))
 (let (($x89 (and $x14 $x218)))
 (let (($x31 (= $x89 true)))
 (let ((?x109 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x138 (bvneg ?x109)))
 (let (($x196 (= ?x138 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (= $x196 true)))
 (let (($x26 (and $x167 $x31)))
 (let (($x19 (and $x26 $x131)))
 (let (($x215 (and $x19 $x219)))
 (let (($x223 (and $x215 $x186)))
 (let (($x288 (and $x223 $x5)))
 (let (($x24 (and $x288 $x187)))
 (let (($x121 (and $x24 $x149)))
 (let (($x100 (and $x121 $x232)))
 (let (($x50 (and $x100 $x322)))
 (let (($x389 (and $x50 $x388)))
 (let (($x431 (and $x389 $x430)))
 (let (($x432 (and $x86 $x431)))
 (let (($x172 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x433 (and $x172 $x432)))
 (let (($x106 (bvugt ?x111 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x111 (_ bv3 32))))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x170 (=> (bvule ?x111 (bvsub (bvadd ?x111 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x53 $x106)))))))
 (let (($x154 (=> (and $x134 (bvule ?x111 (bvsub (bvadd ?x111 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x53 $x106)))))))
 (let (($x181 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x112)))
 (let (($x12 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32))) (or false (or false (and true (or $x70 $x181)))))))
 (let (($x34 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x96 (_ bv1 32)))) (or false (or false (and true (or $x70 $x181)))))))
 (let (($x23 (and $x34 $x154)))
 (let (($x434 (and $x23 $x433)))
 (let (($x615 (=> $x434 $x614)))
 (not $x615)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 44
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2688X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2685X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2685X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2685X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2682X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2679X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2679X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2679X.2.0 () (_ BitVec 32))
(declare-fun input.ind-%var2676X () (_ BitVec 32))
(declare-fun input.ind-%var2673X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2673X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2673X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x500 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2688X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x501 (concat ?x500 (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv4 32))))))
 (let ((?x509 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2688X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x505 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2688X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x510 (concat ?x505 (concat ?x509 ?x501))))
 (let (($x511 (= ?x510 ?x510)))
 (let (($x480 (= (_ bv0 32) input.ind-%var2688X)))
 (let ((?x476 (ite $x480 (_ bv0 32) (_ bv1 32))))
 (let (($x481 (bvuge ?x476 (_ bv1 32))))
 (let (($x512 (=> $x481 $x511)))
 (let ((?x492 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2688X))))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv2 32))) ?x492)))
 (let ((?x506 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv3 32))) ?x494)))
 (let (($x497 (= ?x506 ?x506)))
 (let (($x507 (=> $x481 $x497)))
 (let (($x484 (= $x481 $x481)))
 (let (($x293 (= false false)))
 (let (($x477 (= ?x476 (_ bv0 32))))
 (let (($x478 (=> $x477 $x293)))
 (let (($x475 (= $x477 $x477)))
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x114))))
 (let (($x143 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x205)))
 (let (($x545 (and (and (and (and (and $x143 $x475) $x478) $x484) $x507) $x512)))
 (let (($x471 (= input.ind-%var2685X.2.1 input.ind-%var2685X.2.1)))
 (let (($x467 (bvuge input.ind-%var2685X.0 (_ bv1 32))))
 (let (($x472 (=> $x467 $x471)))
 (let (($x462 (= input.ind-%var2685X.2.0 input.ind-%var2685X.2.0)))
 (let (($x465 (=> $x467 $x462)))
 (let (($x463 (= $x467 $x467)))
 (let (($x469 (= input.ind-%var2685X.0 (_ bv0 32))))
 (let (($x466 (=> $x469 $x293)))
 (let (($x470 (= $x469 $x469)))
 (let (($x461 (= input.spec-%var-l-0.L3%5%bbentry input.spec-%var-l-1)))
 (let (($x483 (and (and (and (and (and $x461 $x470) $x466) $x463) $x465) $x472)))
 (let (($x517 (and $x483 $x545)))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2682X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x444 (concat ?x443 (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv4 32))))))
 (let ((?x445 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2682X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x452 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2682X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x453 (concat ?x452 (concat ?x445 ?x444))))
 (let (($x454 (= ?x453 ?x453)))
 (let (($x415 (= (_ bv0 32) input.ind-%var2682X)))
 (let ((?x428 (ite $x415 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x428 (_ bv1 32))))
 (let (($x455 (=> $x432 $x454)))
 (let ((?x437 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2682X))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv2 32))) ?x437)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv3 32))) ?x142)))
 (let (($x449 (= ?x45 ?x45)))
 (let (($x440 (=> $x432 $x449)))
 (let (($x433 (= $x432 $x432)))
 (let (($x429 (= ?x428 (_ bv0 32))))
 (let (($x431 (=> $x429 $x293)))
 (let (($x458 (and (and (and (= input.dst.llvm-%l ?x205) (= $x429 $x429)) $x431) $x433)))
 (let (($x459 (and (and $x458 $x440) $x455)))
 (let (($x408 (= input.ind-%var2679X.2.1 input.ind-%var2679X.2.1)))
 (let (($x401 (bvuge input.ind-%var2679X.0 (_ bv1 32))))
 (let (($x409 (=> $x401 $x408)))
 (let (($x402 (= input.ind-%var2679X.2.0 input.ind-%var2679X.2.0)))
 (let (($x403 (=> $x401 $x402)))
 (let (($x421 (= $x401 $x401)))
 (let (($x395 (= input.ind-%var2679X.0 (_ bv0 32))))
 (let (($x416 (=> $x395 $x293)))
 (let (($x411 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x395 $x395)) $x416)))
 (let (($x427 (and (and (and $x411 $x421) $x403) $x409)))
 (let (($x488 (and $x427 $x459)))
 (let ((?x407 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2676X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x417 (concat ?x407 (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv4 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2676X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x418 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2676X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x396 (concat ?x418 (concat ?x399 ?x417))))
 (let (($x424 (= ?x396 ?x396)))
 (let (($x367 (= (_ bv0 32) input.ind-%var2676X)))
 (let ((?x359 (ite $x367 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x359 (_ bv1 32))))
 (let (($x419 (=> $x43 $x424)))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2676X))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv2 32))) ?x369)))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv3 32))) ?x379)))
 (let (($x382 (= ?x373 ?x373)))
 (let (($x385 (=> $x43 $x382)))
 (let (($x358 (= $x43 $x43)))
 (let (($x368 (= ?x359 (_ bv0 32))))
 (let (($x361 (=> $x368 $x293)))
 (let (($x392 (and (and (and (and (and $x143 (= $x368 $x368)) $x361) $x358) $x385) $x419)))
 (let (($x410 (= input.ind-%var2673X.2.1 input.ind-%var2673X.2.1)))
 (let (($x365 (bvuge input.ind-%var2673X.0 (_ bv1 32))))
 (let (($x354 (=> $x365 $x410)))
 (let (($x338 (= input.ind-%var2673X.2.0 input.ind-%var2673X.2.0)))
 (let (($x344 (=> $x365 $x338)))
 (let (($x353 (= $x365 $x365)))
 (let (($x151 (= input.ind-%var2673X.0 (_ bv0 32))))
 (let (($x355 (=> $x151 $x293)))
 (let (($x366 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x151 $x151)) $x355)))
 (let (($x357 (and (and (and $x366 $x353) $x344) $x354)))
 (let (($x22 (and $x357 $x392)))
 (let (($x346 (not true)))
 (let (($x519 (or (or (or $x346 $x22) $x488) $x517)))
 (let (($x547 (and true $x519)))
 (let (($x527 (= $x547 true)))
 (let ((?x91 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x244))))
 (let ((?x269 (bvadd ?x20 (_ bv4 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x203))))
 (let (($x310 (= (_ bv0 32) ?x296)))
 (let ((?x107 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (= ?x107 (_ bv0 32))))
 (let (($x375 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x404 (= $x375 $x80)))
 (let (($x135 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x138 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x324 (and $x138 $x135)))
 (let (($x347 (=> $x324 $x404)))
 (let (($x155 (bvuge ?x107 (_ bv1 32))))
 (let (($x349 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x27 (= $x349 $x155)))
 (let (($x384 (=> $x324 $x27)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x272))))
 (let (($x348 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x30)))
 (let (($x342 (=> $x324 $x348)))
 (let (($x281 (= (_ bv0 32) ?x20)))
 (let ((?x78 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x78 (_ bv1 32))))
 (let (($x350 (= $x135 $x55)))
 (let (($x321 (=> $x138 $x350)))
 (let (($x320 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x138 $x320)))
 (let (($x318 (=> $x201 $x293)))
 (let (($x126 (= ?x78 (_ bv0 32))))
 (let (($x377 (= $x320 $x126)))
 (let (($x374 (=> $x138 $x377)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x88 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem ?x88) (concat ?x68 (concat ?x220 ?x5)))))
 (let (($x331 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x280)))
 (let (($x317 (=> $x138 $x331)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x163 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x163 (_ bv1 32))))
 (let (($x7 (= $x138 $x25)))
 (let (($x328 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x345 (=> $x328 $x293)))
 (let (($x213 (= ?x163 (_ bv0 32))))
 (let (($x127 (= $x328 $x213)))
 (let (($x329 (and (and (and (and (and (and $x127 $x345) $x7) $x317) $x374) $x318) $x321)))
 (let (($x330 (and (and (and $x329 $x342) $x384) $x347)))
 (let (($x341 (= $x330 true)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x240 (concat ?x313 (concat ?x227 ?x266))))
 (let ((?x295 (bvadd ?x240 (_ bv4 32))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x309))))
 (let (($x276 (= (_ bv0 32) ?x132)))
 (let ((?x311 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x311 (_ bv1 32))))
 (let (($x297 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x303 (= $x297 $x246)))
 (let (($x145 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x61 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x250 (and $x61 $x145)))
 (let (($x95 (=> $x250 $x303)))
 (let (($x241 (= ?x311 (_ bv0 32))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x17 (= $x40 $x241)))
 (let (($x62 (=> $x250 $x17)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x247))))
 (let (($x287 (= input.spec-%var-l-1.2.1.2.0 ?x301)))
 (let (($x29 (=> $x250 $x287)))
 (let (($x300 (= (_ bv0 32) ?x240)))
 (let ((?x277 (ite $x300 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x277 (_ bv1 32))))
 (let (($x307 (= $x145 $x327)))
 (let (($x10 (=> $x61 $x307)))
 (let (($x251 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x222 (and $x61 $x251)))
 (let (($x285 (=> $x222 $x293)))
 (let (($x221 (= ?x277 (_ bv0 32))))
 (let (($x224 (= $x251 $x221)))
 (let (($x263 (=> $x61 $x224)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x326)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x299)))
 (let (($x129 (= input.spec-%var-l-1.2.0 ?x292)))
 (let (($x306 (=> $x61 $x129)))
 (let (($x304 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x18 (ite $x304 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x18 (_ bv1 32))))
 (let (($x58 (= $x61 $x105)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x208 (=> $x141 $x293)))
 (let (($x235 (= ?x18 (_ bv0 32))))
 (let (($x212 (= $x141 $x235)))
 (let (($x214 (and (and (and (and (and (and $x212 $x208) $x58) $x306) $x263) $x285) $x10)))
 (let (($x343 (and (and (and $x214 $x29) $x62) $x95)))
 (let (($x176 (= $x343 true)))
 (let (($x254 (= $x297 $x155)))
 (let (($x294 (=> $x250 $x254)))
 (let (($x291 (= $x40 $x80)))
 (let (($x245 (=> $x250 $x291)))
 (let (($x120 (= input.spec-%var-l-1.2.1.2.0 ?x30)))
 (let (($x232 (=> $x250 $x120)))
 (let (($x87 (= $x145 $x55)))
 (let (($x225 (=> $x61 $x87)))
 (let (($x187 (= $x251 $x126)))
 (let (($x24 (=> $x61 $x187)))
 (let (($x146 (= input.spec-%var-l-1.2.0 ?x280)))
 (let (($x65 (=> $x61 $x146)))
 (let (($x216 (and (and (and (and (and $x208 $x285) (= $x61 $x25)) (= $x141 $x213)) $x65) $x24)))
 (let (($x274 (and (and (and (and $x216 $x225) $x232) $x245) $x294)))
 (let (($x152 (= $x274 true)))
 (let ((?x289 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x261 (= (_ bv0 3) ?x289)))
 (let (($x148 (= $x261 true)))
 (let (($x103 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x97 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x159 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x97) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x97))))
 (let (($x185 (and true $x159)))
 (let (($x255 (and $x159 $x185)))
 (let (($x9 (= (bvand ?x205 (_ bv4294967288 32)) ?x205)))
 (let (($x284 (= (bvand ?x115 (_ bv4294967292 32)) ?x115)))
 (let (($x183 (and $x284 $x9)))
 (let (($x133 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x115 (bvsub ?x115 (_ bv4 32))) (bvult ?x115 (bvsub ?x115 (_ bv4 32))))))
 (let (($x182 (and (and (and (and (and $x185 $x133) $x284) $x183) $x255) $x103)))
 (let (($x134 (not $x101)))
 (let (($x207 (=> $x134 $x182)))
 (let (($x193 (= $x207 true)))
 (let (($x6 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x8 (= $x6 true)))
 (let (($x215 (= $x134 true)))
 (let ((?x31 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x26 (= (_ bv0 32) ?x31)))
 (let ((?x248 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x248)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x73 $x218)))
 (let (($x131 (and $x89 $x26)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x32 $x131)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x253 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x204)))))))
 (let (($x169 (and $x253 $x19)))
 (let (($x41 (= $x169 true)))
 (let ((?x167 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x178 (bvneg ?x167)))
 (let (($x197 (= ?x178 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x195 (= $x197 true)))
 (let (($x219 (and $x195 $x41)))
 (let (($x139 (and $x219 $x215)))
 (let (($x52 (and $x139 $x8)))
 (let (($x69 (and $x52 $x193)))
 (let (($x198 (and $x69 $x148)))
 (let (($x234 (and $x198 $x152)))
 (let (($x84 (and $x234 $x176)))
 (let (($x351 (and $x84 $x341)))
 (let (($x335 (and $x138 $x351)))
 (let (($x11 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x340 (and $x11 $x335)))
 (let (($x39 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x115 (_ bv3 32))))
 (let (($x140 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x172 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x140 $x39)))))))
 (let (($x46 (=> (and $x134 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x140 $x39)))))))
 (let (($x174 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x72 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32))) (or false (or false (and true (or $x117 $x174)))))))
 (let (($x93 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32)))) (or false (or false (and true (or $x117 $x174)))))))
 (let (($x116 (and $x93 $x46)))
 (let (($x336 (and $x116 $x340)))
 (let (($x528 (=> $x336 $x527)))
 (not $x528)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2688X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2685X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2685X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2685X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2682X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2679X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2679X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2679X.2.0 () (_ BitVec 32))
(declare-fun input.ind-%var2676X () (_ BitVec 32))
(declare-fun input.ind-%var2673X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2673X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2673X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x500 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2688X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x501 (concat ?x500 (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv4 32))))))
 (let ((?x509 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2688X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x505 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2688X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x510 (concat ?x505 (concat ?x509 ?x501))))
 (let (($x511 (= ?x510 ?x510)))
 (let (($x480 (= (_ bv0 32) input.ind-%var2688X)))
 (let ((?x476 (ite $x480 (_ bv0 32) (_ bv1 32))))
 (let (($x481 (bvuge ?x476 (_ bv1 32))))
 (let (($x512 (=> $x481 $x511)))
 (let ((?x492 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2688X))))
 (let ((?x494 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv2 32))) ?x492)))
 (let ((?x506 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2688X (_ bv3 32))) ?x494)))
 (let (($x497 (= ?x506 ?x506)))
 (let (($x507 (=> $x481 $x497)))
 (let (($x484 (= $x481 $x481)))
 (let (($x293 (= false false)))
 (let (($x477 (= ?x476 (_ bv0 32))))
 (let (($x478 (=> $x477 $x293)))
 (let (($x475 (= $x477 $x477)))
 (let ((?x115 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x114 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem ?x115))))
 (let ((?x205 (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x115 (_ bv2 32))) ?x114))))
 (let (($x143 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x205)))
 (let (($x545 (and (and (and (and (and $x143 $x475) $x478) $x484) $x507) $x512)))
 (let (($x471 (= input.ind-%var2685X.2.1 input.ind-%var2685X.2.1)))
 (let (($x467 (bvuge input.ind-%var2685X.0 (_ bv1 32))))
 (let (($x472 (=> $x467 $x471)))
 (let (($x462 (= input.ind-%var2685X.2.0 input.ind-%var2685X.2.0)))
 (let (($x465 (=> $x467 $x462)))
 (let (($x463 (= $x467 $x467)))
 (let (($x469 (= input.ind-%var2685X.0 (_ bv0 32))))
 (let (($x466 (=> $x469 $x293)))
 (let (($x470 (= $x469 $x469)))
 (let (($x461 (= input.spec-%var-l-0.L3%5%bbentry input.spec-%var-l-1)))
 (let (($x483 (and (and (and (and (and $x461 $x470) $x466) $x463) $x465) $x472)))
 (let (($x517 (and $x483 $x545)))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2682X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x444 (concat ?x443 (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv4 32))))))
 (let ((?x445 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2682X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x452 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2682X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x453 (concat ?x452 (concat ?x445 ?x444))))
 (let (($x454 (= ?x453 ?x453)))
 (let (($x415 (= (_ bv0 32) input.ind-%var2682X)))
 (let ((?x428 (ite $x415 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x428 (_ bv1 32))))
 (let (($x455 (=> $x432 $x454)))
 (let ((?x437 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2682X))))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv2 32))) ?x437)))
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2682X (_ bv3 32))) ?x142)))
 (let (($x449 (= ?x45 ?x45)))
 (let (($x440 (=> $x432 $x449)))
 (let (($x433 (= $x432 $x432)))
 (let (($x429 (= ?x428 (_ bv0 32))))
 (let (($x431 (=> $x429 $x293)))
 (let (($x458 (and (and (and (= input.dst.llvm-%l ?x205) (= $x429 $x429)) $x431) $x433)))
 (let (($x459 (and (and $x458 $x440) $x455)))
 (let (($x408 (= input.ind-%var2679X.2.1 input.ind-%var2679X.2.1)))
 (let (($x401 (bvuge input.ind-%var2679X.0 (_ bv1 32))))
 (let (($x409 (=> $x401 $x408)))
 (let (($x402 (= input.ind-%var2679X.2.0 input.ind-%var2679X.2.0)))
 (let (($x403 (=> $x401 $x402)))
 (let (($x421 (= $x401 $x401)))
 (let (($x395 (= input.ind-%var2679X.0 (_ bv0 32))))
 (let (($x416 (=> $x395 $x293)))
 (let (($x411 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x395 $x395)) $x416)))
 (let (($x427 (and (and (and $x411 $x421) $x403) $x409)))
 (let (($x488 (and $x427 $x459)))
 (let ((?x407 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2676X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x417 (concat ?x407 (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv4 32))))))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2676X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x418 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2676X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x396 (concat ?x418 (concat ?x399 ?x417))))
 (let (($x424 (= ?x396 ?x396)))
 (let (($x367 (= (_ bv0 32) input.ind-%var2676X)))
 (let ((?x359 (ite $x367 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x359 (_ bv1 32))))
 (let (($x419 (=> $x43 $x424)))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2676X))))
 (let ((?x379 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv2 32))) ?x369)))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2676X (_ bv3 32))) ?x379)))
 (let (($x382 (= ?x373 ?x373)))
 (let (($x385 (=> $x43 $x382)))
 (let (($x358 (= $x43 $x43)))
 (let (($x368 (= ?x359 (_ bv0 32))))
 (let (($x361 (=> $x368 $x293)))
 (let (($x392 (and (and (and (and (and $x143 (= $x368 $x368)) $x361) $x358) $x385) $x419)))
 (let (($x410 (= input.ind-%var2673X.2.1 input.ind-%var2673X.2.1)))
 (let (($x365 (bvuge input.ind-%var2673X.0 (_ bv1 32))))
 (let (($x354 (=> $x365 $x410)))
 (let (($x338 (= input.ind-%var2673X.2.0 input.ind-%var2673X.2.0)))
 (let (($x344 (=> $x365 $x338)))
 (let (($x353 (= $x365 $x365)))
 (let (($x151 (= input.ind-%var2673X.0 (_ bv0 32))))
 (let (($x355 (=> $x151 $x293)))
 (let (($x366 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x151 $x151)) $x355)))
 (let (($x357 (and (and (and $x366 $x353) $x344) $x354)))
 (let (($x22 (and $x357 $x392)))
 (let (($x346 (not true)))
 (let (($x519 (or (or (or $x346 $x22) $x488) $x517)))
 (let (($x547 (and true $x519)))
 (let (($x527 (= $x547 true)))
 (let ((?x91 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem ?x91))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x91 (_ bv2 32))) ?x244))))
 (let ((?x269 (bvadd ?x20 (_ bv4 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv1 32))) (select input.dst.llvm-mem ?x269))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x269 (_ bv2 32))) ?x203))))
 (let (($x310 (= (_ bv0 32) ?x296)))
 (let ((?x107 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (= ?x107 (_ bv0 32))))
 (let (($x375 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x404 (= $x375 $x80)))
 (let (($x135 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x138 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x324 (and $x138 $x135)))
 (let (($x347 (=> $x324 $x404)))
 (let (($x155 (bvuge ?x107 (_ bv1 32))))
 (let (($x349 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x27 (= $x349 $x155)))
 (let (($x384 (=> $x324 $x27)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv1 32))) (select input.dst.llvm-mem ?x20))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x20 (_ bv2 32))) ?x272))))
 (let (($x348 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x30)))
 (let (($x342 (=> $x324 $x348)))
 (let (($x281 (= (_ bv0 32) ?x20)))
 (let ((?x78 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x78 (_ bv1 32))))
 (let (($x350 (= $x135 $x55)))
 (let (($x321 (=> $x138 $x350)))
 (let (($x320 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x201 (and $x138 $x320)))
 (let (($x318 (=> $x201 $x293)))
 (let (($x126 (= ?x78 (_ bv0 32))))
 (let (($x377 (= $x320 $x126)))
 (let (($x374 (=> $x138 $x377)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x88 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x280 (concat (select input.dst.llvm-mem ?x88) (concat ?x68 (concat ?x220 ?x5)))))
 (let (($x331 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x280)))
 (let (($x317 (=> $x138 $x331)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x163 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x25 (bvuge ?x163 (_ bv1 32))))
 (let (($x7 (= $x138 $x25)))
 (let (($x328 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x345 (=> $x328 $x293)))
 (let (($x213 (= ?x163 (_ bv0 32))))
 (let (($x127 (= $x328 $x213)))
 (let (($x329 (and (and (and (and (and (and $x127 $x345) $x7) $x317) $x374) $x318) $x321)))
 (let (($x330 (and (and (and $x329 $x342) $x384) $x347)))
 (let (($x341 (= $x330 true)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x240 (concat ?x313 (concat ?x227 ?x266))))
 (let ((?x295 (bvadd ?x240 (_ bv4 32))))
 (let ((?x309 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x309))))
 (let (($x276 (= (_ bv0 32) ?x132)))
 (let ((?x311 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x311 (_ bv1 32))))
 (let (($x297 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x303 (= $x297 $x246)))
 (let (($x145 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x61 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x250 (and $x61 $x145)))
 (let (($x95 (=> $x250 $x303)))
 (let (($x241 (= ?x311 (_ bv0 32))))
 (let (($x40 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x17 (= $x40 $x241)))
 (let (($x62 (=> $x250 $x17)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv1 32))) (select input.dst.llvm-mem ?x240))))
 (let ((?x301 (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x240 (_ bv2 32))) ?x247))))
 (let (($x287 (= input.spec-%var-l-1.2.1.2.0 ?x301)))
 (let (($x29 (=> $x250 $x287)))
 (let (($x300 (= (_ bv0 32) ?x240)))
 (let ((?x277 (ite $x300 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x277 (_ bv1 32))))
 (let (($x307 (= $x145 $x327)))
 (let (($x10 (=> $x61 $x307)))
 (let (($x251 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x222 (and $x61 $x251)))
 (let (($x285 (=> $x222 $x293)))
 (let (($x221 (= ?x277 (_ bv0 32))))
 (let (($x224 (= $x251 $x221)))
 (let (($x263 (=> $x61 $x224)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x326)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x299)))
 (let (($x129 (= input.spec-%var-l-1.2.0 ?x292)))
 (let (($x306 (=> $x61 $x129)))
 (let (($x304 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x18 (ite $x304 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x18 (_ bv1 32))))
 (let (($x58 (= $x61 $x105)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x208 (=> $x141 $x293)))
 (let (($x235 (= ?x18 (_ bv0 32))))
 (let (($x212 (= $x141 $x235)))
 (let (($x214 (and (and (and (and (and (and $x212 $x208) $x58) $x306) $x263) $x285) $x10)))
 (let (($x343 (and (and (and $x214 $x29) $x62) $x95)))
 (let (($x176 (= $x343 true)))
 (let (($x254 (= $x297 $x155)))
 (let (($x294 (=> $x250 $x254)))
 (let (($x291 (= $x40 $x80)))
 (let (($x245 (=> $x250 $x291)))
 (let (($x120 (= input.spec-%var-l-1.2.1.2.0 ?x30)))
 (let (($x232 (=> $x250 $x120)))
 (let (($x87 (= $x145 $x55)))
 (let (($x225 (=> $x61 $x87)))
 (let (($x187 (= $x251 $x126)))
 (let (($x24 (=> $x61 $x187)))
 (let (($x146 (= input.spec-%var-l-1.2.0 ?x280)))
 (let (($x65 (=> $x61 $x146)))
 (let (($x216 (and (and (and (and (and $x208 $x285) (= $x61 $x25)) (= $x141 $x213)) $x65) $x24)))
 (let (($x274 (and (and (and (and $x216 $x225) $x232) $x245) $x294)))
 (let (($x152 (= $x274 true)))
 (let ((?x289 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x261 (= (_ bv0 3) ?x289)))
 (let (($x148 (= $x261 true)))
 (let (($x103 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x97 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x159 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x97) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x97))))
 (let (($x185 (and true $x159)))
 (let (($x255 (and $x159 $x185)))
 (let (($x9 (= (bvand ?x205 (_ bv4294967288 32)) ?x205)))
 (let (($x284 (= (bvand ?x115 (_ bv4294967292 32)) ?x115)))
 (let (($x183 (and $x284 $x9)))
 (let (($x133 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x115 (bvsub ?x115 (_ bv4 32))) (bvult ?x115 (bvsub ?x115 (_ bv4 32))))))
 (let (($x182 (and (and (and (and (and $x185 $x133) $x284) $x183) $x255) $x103)))
 (let (($x134 (not $x101)))
 (let (($x207 (=> $x134 $x182)))
 (let (($x193 (= $x207 true)))
 (let (($x6 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x8 (= $x6 true)))
 (let (($x215 (= $x134 true)))
 (let ((?x31 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x26 (= (_ bv0 32) ?x31)))
 (let ((?x248 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x248)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (and $x73 $x218)))
 (let (($x131 (and $x89 $x26)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x32 $x131)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x253 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x204)))))))
 (let (($x169 (and $x253 $x19)))
 (let (($x41 (= $x169 true)))
 (let ((?x167 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x178 (bvneg ?x167)))
 (let (($x197 (= ?x178 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x195 (= $x197 true)))
 (let (($x219 (and $x195 $x41)))
 (let (($x139 (and $x219 $x215)))
 (let (($x52 (and $x139 $x8)))
 (let (($x69 (and $x52 $x193)))
 (let (($x198 (and $x69 $x148)))
 (let (($x234 (and $x198 $x152)))
 (let (($x84 (and $x234 $x176)))
 (let (($x351 (and $x84 $x341)))
 (let (($x335 (and $x138 $x351)))
 (let (($x11 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x340 (and $x11 $x335)))
 (let (($x39 (bvugt ?x115 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x115 (_ bv3 32))))
 (let (($x140 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x172 (=> (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x140 $x39)))))))
 (let (($x46 (=> (and $x134 (bvule ?x115 (bvsub (bvadd ?x115 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x140 $x39)))))))
 (let (($x174 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x72 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32))) (or false (or false (and true (or $x117 $x174)))))))
 (let (($x93 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x91 (_ bv1 32)))) (or false (or false (and true (or $x117 $x174)))))))
 (let (($x116 (and $x93 $x46)))
 (let (($x336 (and $x116 $x340)))
 (let (($x528 (=> $x336 $x527)))
 (not $x528)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var2688X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv4294967280 32))
(define-fun input.ind-%var2685X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2685X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2685X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var2682X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var2679X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2679X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2679X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2676X () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2673X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2673X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var2673X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffc00)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xf8f83c01)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xf8f8f8f8)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xf8f81bf8)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xf8)
              #xf8f83bfd
              #x91)
       #xf8f83c06
       #x3b))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xf8f8f8f8)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #xf8f8f8f8)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xf8f8f8f8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffc00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffc03)
  (define-fun input.ind-%var2685X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2673X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2679X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2679X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2685X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2685X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2676X () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2673X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2682X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2679X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2673X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var2688X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 45
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x36 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x189))))
 (let ((?x350 ((_ extract 2 0) ?x9)))
 (let (($x321 (= (_ bv0 3) ?x350)))
 (let (($x329 (= $x321 true)))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv1 32))) (select input.dst.llvm-mem ?x70))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv2 32))) ?x300))))
 (let ((?x132 (bvadd ?x147 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv1 32))) (select input.dst.llvm-mem ?x132))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv2 32))) ?x17))))
 (let (($x176 (= (_ bv0 32) ?x343)))
 (let ((?x84 (ite $x176 (_ bv0 32) (_ bv1 32))))
 (let (($x406 (= ?x84 (_ bv0 32))))
 (let (($x345 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x138 (= $x345 $x406)))
 (let (($x265 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x178 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x247 (and $x178 $x265)))
 (let (($x7 (=> $x247 $x138)))
 (let (($x109 (bvuge ?x84 (_ bv1 32))))
 (let (($x75 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x328 (= $x75 $x109)))
 (let (($x127 (=> $x247 $x328)))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv1 32))) (select input.dst.llvm-mem ?x147))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv2 32))) ?x323))))
 (let (($x60 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x104)))
 (let (($x302 (=> $x247 $x60)))
 (let (($x327 (= (_ bv0 32) ?x147)))
 (let ((?x307 (ite $x327 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x307 (_ bv1 32))))
 (let (($x308 (= $x265 $x271)))
 (let (($x305 (=> $x178 $x308)))
 (let (($x113 (= false false)))
 (let (($x48 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x237 (and $x178 $x48)))
 (let (($x314 (=> $x237 $x113)))
 (let (($x10 (= ?x307 (_ bv0 32))))
 (let (($x214 (= $x48 $x10)))
 (let (($x268 (=> $x178 $x214)))
 (let ((?x299 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x165 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem ?x165) (concat ?x273 (concat ?x129 ?x299)))))
 (let (($x227 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x123)))
 (let (($x64 (=> $x178 $x227)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x157 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x325 (bvuge ?x157 (_ bv1 32))))
 (let (($x231 (= $x178 $x325)))
 (let (($x278 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x249 (=> $x278 $x113)))
 (let (($x312 (= ?x157 (_ bv0 32))))
 (let (($x230 (= $x278 $x312)))
 (let (($x405 (and (and (and (and (and (and $x230 $x249) $x231) $x64) $x268) $x314) $x305)))
 (let (($x374 (and (and (and $x405 $x302) $x127) $x7)))
 (let (($x71 (= $x374 true)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x130 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x126 (concat ?x78 (concat ?x206 ?x130))))
 (let ((?x275 (bvadd ?x126 (_ bv4 32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x191))))
 (let (($x80 (= (_ bv0 32) ?x107)))
 (let ((?x291 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x291 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x294 (= $x155 $x254)))
 (let (($x67 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x213 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x242 (and $x213 $x67)))
 (let (($x274 (=> $x242 $x294)))
 (let (($x245 (= ?x291 (_ bv0 32))))
 (let (($x233 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x33 (= $x233 $x245)))
 (let (($x297 (=> $x242 $x33)))
 (let ((?x38 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x38))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x164)))
 (let (($x40 (=> $x242 $x100)))
 (let (($x187 (= (_ bv0 32) ?x126)))
 (let ((?x24 (ite $x187 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x24 (_ bv1 32))))
 (let (($x86 (= $x67 $x250)))
 (let (($x121 (=> $x213 $x86)))
 (let (($x257 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x87 (and $x213 $x257)))
 (let (($x225 (=> $x87 $x113)))
 (let (($x216 (= ?x24 (_ bv0 32))))
 (let (($x145 (= $x257 $x216)))
 (let (($x55 (=> $x213 $x145)))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x288)))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x65 (= input.spec-%var-l-1.2.0 ?x146)))
 (let (($x267 (=> $x213 $x65)))
 (let (($x285 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x160 (_ bv1 32))))
 (let (($x188 (= $x213 $x16)))
 (let (($x251 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x264 (=> $x251 $x113)))
 (let (($x163 (= ?x160 (_ bv0 32))))
 (let (($x25 (= $x251 $x163)))
 (let (($x235 (and (and (and (and (and (and $x25 $x264) $x188) $x267) $x55) $x225) $x121)))
 (let (($x105 (and (and (and $x235 $x40) $x297) $x274)))
 (let (($x58 (= $x105 true)))
 (let ((?x141 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x293 (= (_ bv0 3) ?x141)))
 (let (($x208 (= $x293 true)))
 (let (($x182 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x185 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x35 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x185) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x185))))
 (let (($x133 (and true $x35)))
 (let (($x161 (and $x35 $x133)))
 (let (($x255 (= (bvand ?x9 (_ bv4294967288 32)) ?x9)))
 (let (($x258 (= (bvand ?x36 (_ bv4294967292 32)) ?x36)))
 (let (($x270 (and $x258 $x255)))
 (let (($x186 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x36 (bvsub ?x36 (_ bv4 32))) (bvult ?x36 (bvsub ?x36 (_ bv4 32))))))
 (let (($x289 (and (and (and (and (and $x133 $x186) $x258) $x270) $x161) $x182)))
 (let (($x134 (not $x101)))
 (let (($x261 (=> $x134 $x289)))
 (let (($x148 (= $x261 true)))
 (let (($x166 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x177 (= $x166 true)))
 (let (($x52 (= $x134 true)))
 (let ((?x41 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x219 (= (_ bv0 32) ?x41)))
 (let ((?x131 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x131)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x26 $x19)))
 (let (($x215 (and $x169 $x219)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x158 $x215)))
 (let (($x179 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x253 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x253 $x179)))))))
 (let (($x199 (and $x31 $x139)))
 (let (($x6 (= $x199 true)))
 (let ((?x195 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x82 (bvneg ?x195)))
 (let (($x298 (= ?x82 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x102 (= $x298 true)))
 (let (($x8 (and $x102 $x6)))
 (let (($x137 (and $x8 $x52)))
 (let (($x159 (and $x137 $x177)))
 (let (($x198 (and $x159 $x148)))
 (let (($x61 (and $x198 $x208)))
 (let (($x83 (and $x61 $x58)))
 (let (($x201 (and $x83 $x71)))
 (let (($x318 (and $x178 $x201)))
 (let (($x196 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x333 (and $x196 $x318)))
 (let (($x154 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x36 (_ bv3 32))))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x11 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x154)))))))
 (let (($x173 (=> (and $x134 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x170 $x154)))))))
 (let (($x34 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x106 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x70 (_ bv1 32))) (or false (or false (and true (or $x12 $x34)))))))
 (let (($x112 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x70 (_ bv1 32)))) (or false (or false (and true (or $x12 $x34)))))))
 (let (($x15 (and $x112 $x173)))
 (let (($x135 (and $x15 $x333)))
 (let (($x324 (=> $x135 $x329)))
 (not $x324))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x36 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x189 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x189))))
 (let ((?x350 ((_ extract 2 0) ?x9)))
 (let (($x321 (= (_ bv0 3) ?x350)))
 (let (($x329 (= $x321 true)))
 (let ((?x70 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x300 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv1 32))) (select input.dst.llvm-mem ?x70))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x70 (_ bv2 32))) ?x300))))
 (let ((?x132 (bvadd ?x147 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv1 32))) (select input.dst.llvm-mem ?x132))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x132 (_ bv2 32))) ?x17))))
 (let (($x176 (= (_ bv0 32) ?x343)))
 (let ((?x84 (ite $x176 (_ bv0 32) (_ bv1 32))))
 (let (($x406 (= ?x84 (_ bv0 32))))
 (let (($x345 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x138 (= $x345 $x406)))
 (let (($x265 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x178 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x247 (and $x178 $x265)))
 (let (($x7 (=> $x247 $x138)))
 (let (($x109 (bvuge ?x84 (_ bv1 32))))
 (let (($x75 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x328 (= $x75 $x109)))
 (let (($x127 (=> $x247 $x328)))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv1 32))) (select input.dst.llvm-mem ?x147))))
 (let ((?x104 (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x147 (_ bv2 32))) ?x323))))
 (let (($x60 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x104)))
 (let (($x302 (=> $x247 $x60)))
 (let (($x327 (= (_ bv0 32) ?x147)))
 (let ((?x307 (ite $x327 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x307 (_ bv1 32))))
 (let (($x308 (= $x265 $x271)))
 (let (($x305 (=> $x178 $x308)))
 (let (($x113 (= false false)))
 (let (($x48 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x237 (and $x178 $x48)))
 (let (($x314 (=> $x237 $x113)))
 (let (($x10 (= ?x307 (_ bv0 32))))
 (let (($x214 (= $x48 $x10)))
 (let (($x268 (=> $x178 $x214)))
 (let ((?x299 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x165 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x123 (concat (select input.dst.llvm-mem ?x165) (concat ?x273 (concat ?x129 ?x299)))))
 (let (($x227 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x123)))
 (let (($x64 (=> $x178 $x227)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x157 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x325 (bvuge ?x157 (_ bv1 32))))
 (let (($x231 (= $x178 $x325)))
 (let (($x278 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x249 (=> $x278 $x113)))
 (let (($x312 (= ?x157 (_ bv0 32))))
 (let (($x230 (= $x278 $x312)))
 (let (($x405 (and (and (and (and (and (and $x230 $x249) $x231) $x64) $x268) $x314) $x305)))
 (let (($x374 (and (and (and $x405 $x302) $x127) $x7)))
 (let (($x71 (= $x374 true)))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x130 (concat ?x192 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x126 (concat ?x78 (concat ?x206 ?x130))))
 (let ((?x275 (bvadd ?x126 (_ bv4 32))))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x191))))
 (let (($x80 (= (_ bv0 32) ?x107)))
 (let ((?x291 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x291 (_ bv1 32))))
 (let (($x155 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x294 (= $x155 $x254)))
 (let (($x67 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x213 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x242 (and $x213 $x67)))
 (let (($x274 (=> $x242 $x294)))
 (let (($x245 (= ?x291 (_ bv0 32))))
 (let (($x233 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x33 (= $x233 $x245)))
 (let (($x297 (=> $x242 $x33)))
 (let ((?x38 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv1 32))) (select input.dst.llvm-mem ?x126))))
 (let ((?x164 (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x126 (_ bv2 32))) ?x38))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x164)))
 (let (($x40 (=> $x242 $x100)))
 (let (($x187 (= (_ bv0 32) ?x126)))
 (let ((?x24 (ite $x187 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x24 (_ bv1 32))))
 (let (($x86 (= $x67 $x250)))
 (let (($x121 (=> $x213 $x86)))
 (let (($x257 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x87 (and $x213 $x257)))
 (let (($x225 (=> $x87 $x113)))
 (let (($x216 (= ?x24 (_ bv0 32))))
 (let (($x145 (= $x257 $x216)))
 (let (($x55 (=> $x213 $x145)))
 (let ((?x288 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x288)))
 (let ((?x146 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x65 (= input.spec-%var-l-1.2.0 ?x146)))
 (let (($x267 (=> $x213 $x65)))
 (let (($x285 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x16 (bvuge ?x160 (_ bv1 32))))
 (let (($x188 (= $x213 $x16)))
 (let (($x251 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x264 (=> $x251 $x113)))
 (let (($x163 (= ?x160 (_ bv0 32))))
 (let (($x25 (= $x251 $x163)))
 (let (($x235 (and (and (and (and (and (and $x25 $x264) $x188) $x267) $x55) $x225) $x121)))
 (let (($x105 (and (and (and $x235 $x40) $x297) $x274)))
 (let (($x58 (= $x105 true)))
 (let ((?x141 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x293 (= (_ bv0 3) ?x141)))
 (let (($x208 (= $x293 true)))
 (let (($x182 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x185 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x35 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x185) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x185))))
 (let (($x133 (and true $x35)))
 (let (($x161 (and $x35 $x133)))
 (let (($x255 (= (bvand ?x9 (_ bv4294967288 32)) ?x9)))
 (let (($x258 (= (bvand ?x36 (_ bv4294967292 32)) ?x36)))
 (let (($x270 (and $x258 $x255)))
 (let (($x186 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x36 (bvsub ?x36 (_ bv4 32))) (bvult ?x36 (bvsub ?x36 (_ bv4 32))))))
 (let (($x289 (and (and (and (and (and $x133 $x186) $x258) $x270) $x161) $x182)))
 (let (($x134 (not $x101)))
 (let (($x261 (=> $x134 $x289)))
 (let (($x148 (= $x261 true)))
 (let (($x166 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x177 (= $x166 true)))
 (let (($x52 (= $x134 true)))
 (let ((?x41 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x219 (= (_ bv0 32) ?x41)))
 (let ((?x131 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x131)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x26 $x19)))
 (let (($x215 (and $x169 $x219)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x158 $x215)))
 (let (($x179 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x253 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x31 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x253 $x179)))))))
 (let (($x199 (and $x31 $x139)))
 (let (($x6 (= $x199 true)))
 (let ((?x195 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x82 (bvneg ?x195)))
 (let (($x298 (= ?x82 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x102 (= $x298 true)))
 (let (($x8 (and $x102 $x6)))
 (let (($x137 (and $x8 $x52)))
 (let (($x159 (and $x137 $x177)))
 (let (($x198 (and $x159 $x148)))
 (let (($x61 (and $x198 $x208)))
 (let (($x83 (and $x61 $x58)))
 (let (($x201 (and $x83 $x71)))
 (let (($x318 (and $x178 $x201)))
 (let (($x196 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x333 (and $x196 $x318)))
 (let (($x154 (bvugt ?x36 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x36 (_ bv3 32))))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x11 (=> (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x170 $x154)))))))
 (let (($x173 (=> (and $x134 (bvule ?x36 (bvsub (bvadd ?x36 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x170 $x154)))))))
 (let (($x34 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x106 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x70 (_ bv1 32))) (or false (or false (and true (or $x12 $x34)))))))
 (let (($x112 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x70 (_ bv1 32)))) (or false (or false (and true (or $x12 $x34)))))))
 (let (($x15 (and $x112 $x173)))
 (let (($x135 (and $x15 $x333)))
 (let (($x324 (=> $x135 $x329)))
 (not $x324))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 46
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x229 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x111 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x111) (concat ?x229 (concat ?x78 ?x47)))))
 (let ((?x420 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x130)))
 (let ((?x392 (bvadd input.spec-%var-sum-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x22 (bvmul (_ bv4294967295 32) ?x392)))
 (let ((?x546 (bvneg ?x22)))
 (let (($x395 (= ?x546 ?x420)))
 (let (($x398 (= $x395 true)))
 (let ((?x117 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x276))))
 (let ((?x27 (bvadd ?x109 (_ bv4 32))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv1 32))) (select input.dst.llvm-mem ?x27))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv2 32))) ?x404))))
 (let ((?x353 (bvadd ?x340 (_ bv4 32))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem ?x353))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv2 32))) ?x344))))
 (let (($x360 (= (_ bv0 32) ?x143)))
 (let ((?x367 (ite $x360 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x367 (_ bv1 32))))
 (let (($x369 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x373 (= $x369 $x379)))
 (let (($x349 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x406 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x355 (and $x406 $x349)))
 (let (($x382 (=> $x355 $x373)))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv1 32))) (select input.dst.llvm-mem ?x340))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv2 32))) ?x358))))
 (let (($x364 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x363)))
 (let (($x362 (=> $x355 $x364)))
 (let (($x359 (= ?x367 (_ bv0 32))))
 (let (($x365 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x368 (= $x365 $x359)))
 (let (($x42 (=> $x355 $x368)))
 (let (($x336 (= (_ bv0 32) ?x340)))
 (let ((?x346 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x151 (= ?x346 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x342 $x151)))
 (let (($x356 (=> $x406 $x380)))
 (let (($x376 (bvuge ?x346 (_ bv1 32))))
 (let (($x337 (= $x349 $x376)))
 (let (($x108 (=> $x406 $x337)))
 (let (($x253 (= false false)))
 (let (($x319 (and $x406 $x342)))
 (let (($x332 (=> $x319 $x253)))
 (let (($x62 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x14 (=> $x62 $x253)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem ?x109))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv2 32))) ?x333))))
 (let (($x92 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x378)))
 (let (($x96 (=> $x406 $x92)))
 (let (($x328 (= (_ bv0 32) ?x109)))
 (let ((?x127 (ite $x328 (_ bv0 32) (_ bv1 32))))
 (let (($x138 (bvuge ?x127 (_ bv1 32))))
 (let (($x7 (= $x406 $x138)))
 (let (($x377 (= ?x127 (_ bv0 32))))
 (let (($x345 (= $x62 $x377)))
 (let (($x391 (and (and (and (and (and (and $x345 $x7) $x96) $x14) $x332) $x108) $x356)))
 (let (($x407 (and (and (and $x391 $x42) $x362) $x382)))
 (let (($x82 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x389 (=> $x82 $x407)))
 (let (($x417 (= $x389 true)))
 (let ((?x38 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x30 (concat ?x38 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x233 (concat ?x269 (concat ?x100 ?x30))))
 (let ((?x157 (bvadd ?x233 (_ bv4 32))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x352))))
 (let ((?x307 (bvadd ?x313 (_ bv4 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv1 32))) (select input.dst.llvm-mem ?x307))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv2 32))) ?x317))))
 (let (($x305 (= (_ bv0 32) ?x308)))
 (let ((?x405 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x295 (bvuge ?x405 (_ bv1 32))))
 (let (($x283 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x239 (= $x283 $x295)))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x203 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x227 (and $x203 $x278)))
 (let (($x287 (=> $x227 $x239)))
 (let (($x247 (= ?x405 (_ bv0 32))))
 (let (($x327 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x327 $x247)))
 (let (($x94 (=> $x227 $x228)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x263))))
 (let (($x300 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x266)))
 (let (($x224 (=> $x227 $x300)))
 (let (($x322 (= (_ bv0 32) ?x313)))
 (let ((?x273 (ite $x322 (_ bv0 32) (_ bv1 32))))
 (let (($x306 (= ?x273 (_ bv0 32))))
 (let (($x58 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x44 (= $x58 $x306)))
 (let (($x123 (=> $x203 $x44)))
 (let (($x292 (bvuge ?x273 (_ bv1 32))))
 (let (($x129 (= $x278 $x292)))
 (let (($x299 (=> $x203 $x129)))
 (let (($x83 (and $x203 $x58)))
 (let (($x167 (=> $x83 $x253)))
 (let (($x149 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x274 (=> $x149 $x253)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x80))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x155)))
 (let (($x294 (=> $x203 $x254)))
 (let (($x275 (= (_ bv0 32) ?x233)))
 (let ((?x296 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x262 (bvuge ?x296 (_ bv1 32))))
 (let (($x279 (= $x203 $x262)))
 (let (($x310 (= ?x296 (_ bv0 32))))
 (let (($x122 (= $x149 $x310)))
 (let (($x60 (and (and (and (and (and (and $x122 $x279) $x294) $x274) $x167) $x299) $x123)))
 (let (($x309 (and (and (and $x60 $x224) $x94) $x287)))
 (let (($x32 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x75 (=> $x32 $x309)))
 (let (($x132 (= $x75 true)))
 (let ((?x121 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x235 (bvneg ?x121)))
 (let (($x28 (= ?x235 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (= $x28 true)))
 (let ((?x87 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x225 (= (_ bv0 3) ?x87)))
 (let (($x18 (= $x225 true)))
 (let (($x20 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x130)))
 (let (($x126 (=> $x82 $x20)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x171 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x171 (_ bv1 32))))
 (let (($x184 (= $x82 $x236)))
 (let (($x288 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x267 (=> $x288 $x253)))
 (let (($x146 (= ?x171 (_ bv0 32))))
 (let (($x65 (= $x288 $x146)))
 (let (($x216 (and (and (and $x65 $x267) $x184) $x126)))
 (let (($x145 (= $x216 true)))
 (let (($x234 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x255 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x128 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x255) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x255))))
 (let (($x103 (and true $x128)))
 (let (($x16 (and $x128 $x103)))
 (let ((?x53 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x251))))
 (let (($x152 (= (bvand ?x25 (_ bv4294967288 32)) ?x25)))
 (let (($x293 (= (bvand ?x53 (_ bv4294967292 32)) ?x53)))
 (let (($x213 (and $x293 $x152)))
 (let (($x198 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x53 (bvsub ?x53 (_ bv4 32))) (bvult ?x53 (bvsub ?x53 (_ bv4 32))))))
 (let (($x5 (and (and (and (and (and $x103 $x198) $x293) $x213) $x16) $x234)))
 (let (($x134 (not $x101)))
 (let (($x175 (=> $x134 $x5)))
 (let (($x68 (= $x175 true)))
 (let (($x9 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x183 (= $x9 true)))
 (let (($x63 (= $x134 true)))
 (let ((?x286 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x260 (= (_ bv0 32) ?x286)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x258 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x243 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (and $x243 $x258)))
 (let (($x114 (and $x193 $x260)))
 (let (($x21 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x21 $x114)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x207 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x133)))))))
 (let (($x205 (and $x207 $x190)))
 (let (($x168 (= $x205 true)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x131)))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x219)))
 (let (($x6 (= input.spec-%var-l-1.2.0 ?x199)))
 (let (($x8 (=> $x32 $x6)))
 (let (($x180 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x252 (ite $x180 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x252 (_ bv1 32))))
 (let (($x248 (= $x32 $x73)))
 (let (($x298 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x179 (=> $x298 $x253)))
 (let (($x89 (= ?x252 (_ bv0 32))))
 (let (($x200 (= $x298 $x89)))
 (let (($x97 (and (and (and $x200 $x179) $x248) $x8)))
 (let (($x166 (= $x97 true)))
 (let (($x56 (and $x166 $x168)))
 (let (($x189 (and $x56 $x63)))
 (let (($x223 (and $x189 $x183)))
 (let (($x238 (and $x223 $x68)))
 (let (($x55 (and $x238 $x145)))
 (let (($x67 (and $x55 $x18)))
 (let (($x232 (and $x67 $x120)))
 (let (($x303 (and $x232 $x132)))
 (let (($x54 (and $x303 $x417)))
 (let (($x396 (and $x82 $x54)))
 (let (($x197 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x424 (and $x197 $x396)))
 (let (($x46 (bvugt ?x53 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x53 (_ bv3 32))))
 (let (($x172 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x196 (=> (bvule ?x53 (bvsub (bvadd ?x53 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x172 $x46)))))))
 (let (($x194 (=> (and $x134 (bvule ?x53 (bvsub (bvadd ?x53 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x172 $x46)))))))
 (let (($x93 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x39 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x117 (_ bv1 32))) (or false (or false (and true (or $x72 $x93)))))))
 (let (($x88 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x117 (_ bv1 32)))) (or false (or false (and true (or $x72 $x93)))))))
 (let (($x153 (and $x88 $x194)))
 (let (($x419 (and $x153 $x424)))
 (let (($x426 (=> $x419 $x398)))
 (not $x426)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x229 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x111 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x111) (concat ?x229 (concat ?x78 ?x47)))))
 (let ((?x420 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x130)))
 (let ((?x392 (bvadd input.spec-%var-sum-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry.2.0)))
 (let ((?x22 (bvmul (_ bv4294967295 32) ?x392)))
 (let ((?x546 (bvneg ?x22)))
 (let (($x395 (= ?x546 ?x420)))
 (let (($x398 (= $x395 true)))
 (let ((?x117 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv1 32))) (select input.dst.llvm-mem ?x117))))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x117 (_ bv2 32))) ?x276))))
 (let ((?x27 (bvadd ?x109 (_ bv4 32))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv1 32))) (select input.dst.llvm-mem ?x27))))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x27 (_ bv2 32))) ?x404))))
 (let ((?x353 (bvadd ?x340 (_ bv4 32))))
 (let ((?x344 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv1 32))) (select input.dst.llvm-mem ?x353))))
 (let ((?x143 (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x353 (_ bv2 32))) ?x344))))
 (let (($x360 (= (_ bv0 32) ?x143)))
 (let ((?x367 (ite $x360 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x367 (_ bv1 32))))
 (let (($x369 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x373 (= $x369 $x379)))
 (let (($x349 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x406 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x355 (and $x406 $x349)))
 (let (($x382 (=> $x355 $x373)))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv1 32))) (select input.dst.llvm-mem ?x340))))
 (let ((?x363 (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x340 (_ bv2 32))) ?x358))))
 (let (($x364 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x363)))
 (let (($x362 (=> $x355 $x364)))
 (let (($x359 (= ?x367 (_ bv0 32))))
 (let (($x365 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x368 (= $x365 $x359)))
 (let (($x42 (=> $x355 $x368)))
 (let (($x336 (= (_ bv0 32) ?x340)))
 (let ((?x346 (ite $x336 (_ bv0 32) (_ bv1 32))))
 (let (($x151 (= ?x346 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x380 (= $x342 $x151)))
 (let (($x356 (=> $x406 $x380)))
 (let (($x376 (bvuge ?x346 (_ bv1 32))))
 (let (($x337 (= $x349 $x376)))
 (let (($x108 (=> $x406 $x337)))
 (let (($x253 (= false false)))
 (let (($x319 (and $x406 $x342)))
 (let (($x332 (=> $x319 $x253)))
 (let (($x62 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x14 (=> $x62 $x253)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem ?x109))))
 (let ((?x378 (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x109 (_ bv2 32))) ?x333))))
 (let (($x92 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x378)))
 (let (($x96 (=> $x406 $x92)))
 (let (($x328 (= (_ bv0 32) ?x109)))
 (let ((?x127 (ite $x328 (_ bv0 32) (_ bv1 32))))
 (let (($x138 (bvuge ?x127 (_ bv1 32))))
 (let (($x7 (= $x406 $x138)))
 (let (($x377 (= ?x127 (_ bv0 32))))
 (let (($x345 (= $x62 $x377)))
 (let (($x391 (and (and (and (and (and (and $x345 $x7) $x96) $x14) $x332) $x108) $x356)))
 (let (($x407 (and (and (and $x391 $x42) $x362) $x382)))
 (let (($x82 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x389 (=> $x82 $x407)))
 (let (($x417 (= $x389 true)))
 (let ((?x38 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x30 (concat ?x38 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x233 (concat ?x269 (concat ?x100 ?x30))))
 (let ((?x157 (bvadd ?x233 (_ bv4 32))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv1 32))) (select input.dst.llvm-mem ?x157))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x157 (_ bv2 32))) ?x352))))
 (let ((?x307 (bvadd ?x313 (_ bv4 32))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv1 32))) (select input.dst.llvm-mem ?x307))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x307 (_ bv2 32))) ?x317))))
 (let (($x305 (= (_ bv0 32) ?x308)))
 (let ((?x405 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x295 (bvuge ?x405 (_ bv1 32))))
 (let (($x283 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x239 (= $x283 $x295)))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x203 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x227 (and $x203 $x278)))
 (let (($x287 (=> $x227 $x239)))
 (let (($x247 (= ?x405 (_ bv0 32))))
 (let (($x327 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x327 $x247)))
 (let (($x94 (=> $x227 $x228)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x263))))
 (let (($x300 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x266)))
 (let (($x224 (=> $x227 $x300)))
 (let (($x322 (= (_ bv0 32) ?x313)))
 (let ((?x273 (ite $x322 (_ bv0 32) (_ bv1 32))))
 (let (($x306 (= ?x273 (_ bv0 32))))
 (let (($x58 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x44 (= $x58 $x306)))
 (let (($x123 (=> $x203 $x44)))
 (let (($x292 (bvuge ?x273 (_ bv1 32))))
 (let (($x129 (= $x278 $x292)))
 (let (($x299 (=> $x203 $x129)))
 (let (($x83 (and $x203 $x58)))
 (let (($x167 (=> $x83 $x253)))
 (let (($x149 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x274 (=> $x149 $x253)))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x80))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x155)))
 (let (($x294 (=> $x203 $x254)))
 (let (($x275 (= (_ bv0 32) ?x233)))
 (let ((?x296 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x262 (bvuge ?x296 (_ bv1 32))))
 (let (($x279 (= $x203 $x262)))
 (let (($x310 (= ?x296 (_ bv0 32))))
 (let (($x122 (= $x149 $x310)))
 (let (($x60 (and (and (and (and (and (and $x122 $x279) $x294) $x274) $x167) $x299) $x123)))
 (let (($x309 (and (and (and $x60 $x224) $x94) $x287)))
 (let (($x32 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x75 (=> $x32 $x309)))
 (let (($x132 (= $x75 true)))
 (let ((?x121 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x235 (bvneg ?x121)))
 (let (($x28 (= ?x235 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (= $x28 true)))
 (let ((?x87 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x225 (= (_ bv0 3) ?x87)))
 (let (($x18 (= $x225 true)))
 (let (($x20 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x130)))
 (let (($x126 (=> $x82 $x20)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x171 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x171 (_ bv1 32))))
 (let (($x184 (= $x82 $x236)))
 (let (($x288 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x267 (=> $x288 $x253)))
 (let (($x146 (= ?x171 (_ bv0 32))))
 (let (($x65 (= $x288 $x146)))
 (let (($x216 (and (and (and $x65 $x267) $x184) $x126)))
 (let (($x145 (= $x216 true)))
 (let (($x234 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x255 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x128 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x255) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x255))))
 (let (($x103 (and true $x128)))
 (let (($x16 (and $x128 $x103)))
 (let ((?x53 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x251 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv1 32))) (select input.dst.llvm-mem ?x53))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x53 (_ bv2 32))) ?x251))))
 (let (($x152 (= (bvand ?x25 (_ bv4294967288 32)) ?x25)))
 (let (($x293 (= (bvand ?x53 (_ bv4294967292 32)) ?x53)))
 (let (($x213 (and $x293 $x152)))
 (let (($x198 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x53 (bvsub ?x53 (_ bv4 32))) (bvult ?x53 (bvsub ?x53 (_ bv4 32))))))
 (let (($x5 (and (and (and (and (and $x103 $x198) $x293) $x213) $x16) $x234)))
 (let (($x134 (not $x101)))
 (let (($x175 (=> $x134 $x5)))
 (let (($x68 (= $x175 true)))
 (let (($x9 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x183 (= $x9 true)))
 (let (($x63 (= $x134 true)))
 (let ((?x286 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x260 (= (_ bv0 32) ?x286)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x258 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x243 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x193 (and $x243 $x258)))
 (let (($x114 (and $x193 $x260)))
 (let (($x21 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x21 $x114)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x207 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x133)))))))
 (let (($x205 (and $x207 $x190)))
 (let (($x168 (= $x205 true)))
 (let ((?x131 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x131)))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x219)))
 (let (($x6 (= input.spec-%var-l-1.2.0 ?x199)))
 (let (($x8 (=> $x32 $x6)))
 (let (($x180 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x252 (ite $x180 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x252 (_ bv1 32))))
 (let (($x248 (= $x32 $x73)))
 (let (($x298 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x179 (=> $x298 $x253)))
 (let (($x89 (= ?x252 (_ bv0 32))))
 (let (($x200 (= $x298 $x89)))
 (let (($x97 (and (and (and $x200 $x179) $x248) $x8)))
 (let (($x166 (= $x97 true)))
 (let (($x56 (and $x166 $x168)))
 (let (($x189 (and $x56 $x63)))
 (let (($x223 (and $x189 $x183)))
 (let (($x238 (and $x223 $x68)))
 (let (($x55 (and $x238 $x145)))
 (let (($x67 (and $x55 $x18)))
 (let (($x232 (and $x67 $x120)))
 (let (($x303 (and $x232 $x132)))
 (let (($x54 (and $x303 $x417)))
 (let (($x396 (and $x82 $x54)))
 (let (($x197 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x424 (and $x197 $x396)))
 (let (($x46 (bvugt ?x53 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x53 (_ bv3 32))))
 (let (($x172 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x196 (=> (bvule ?x53 (bvsub (bvadd ?x53 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x172 $x46)))))))
 (let (($x194 (=> (and $x134 (bvule ?x53 (bvsub (bvadd ?x53 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x172 $x46)))))))
 (let (($x93 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x39 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x117 (_ bv1 32))) (or false (or false (and true (or $x72 $x93)))))))
 (let (($x88 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x117 (_ bv1 32)))) (or false (or false (and true (or $x72 $x93)))))))
 (let (($x153 (and $x88 $x194)))
 (let (($x419 (and $x153 $x424)))
 (let (($x426 (=> $x419 $x398)))
 (not $x426)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 47
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x140 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv1 32))) (select input.dst.llvm-mem ?x140))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv2 32))) ?x223))))
 (let (($x92 (bvule ?x103 (_ bv4294967294 32))))
 (let (($x96 (= $x92 true)))
 (let ((?x12 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x277))))
 (let ((?x75 (bvadd ?x266 (_ bv4 32))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x75 (_ bv1 32))) (select input.dst.llvm-mem ?x75))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x75 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x75 (_ bv2 32))) ?x62))))
 (let (($x316 (= (_ bv0 32) ?x241)))
 (let ((?x276 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x377 (= ?x276 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x127 $x377)))
 (let (($x271 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x180 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x268 (and $x180 $x271)))
 (let (($x406 (=> $x268 $x345)))
 (let (($x343 (bvuge ?x276 (_ bv1 32))))
 (let (($x309 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x109 (= $x309 $x343)))
 (let (($x328 (=> $x268 $x109)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x305))))
 (let (($x295 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x283)))
 (let (($x239 (=> $x268 $x295)))
 (let (($x300 (= (_ bv0 32) ?x266)))
 (let ((?x224 (ite $x300 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x224 (_ bv1 32))))
 (let (($x314 (= $x271 $x237)))
 (let (($x214 (=> $x180 $x314)))
 (let (($x234 (= false false)))
 (let (($x64 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x307 (and $x180 $x64)))
 (let (($x265 (=> $x307 $x234)))
 (let (($x302 (= ?x224 (_ bv0 32))))
 (let (($x147 (= $x64 $x302)))
 (let (($x327 (=> $x180 $x147)))
 (let ((?x313 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x115 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x44 (concat (select input.dst.llvm-mem ?x115) (concat ?x299 (concat ?x273 ?x313)))))
 (let (($x123 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x44)))
 (let (($x60 (=> $x180 $x123)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x178 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x178 (_ bv1 32))))
 (let (($x352 (= $x180 $x312)))
 (let (($x326 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x249 (=> $x326 $x234)))
 (let (($x325 (= ?x178 (_ bv0 32))))
 (let (($x230 (= $x326 $x325)))
 (let (($x324 (and (and (and (and (and (and $x230 $x249) $x352) $x60) $x327) $x265) $x214)))
 (let (($x201 (and (and (and $x324 $x239) $x328) $x406)))
 (let (($x318 (= $x201 true)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x192 (concat ?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x55 (concat ?x145 (concat ?x20 ?x192))))
 (let ((?x296 (bvadd ?x55 (_ bv4 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x262))))
 (let (($x245 (= (_ bv0 32) ?x291)))
 (let ((?x124 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x124 (_ bv1 32))))
 (let (($x33 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x254 (= $x33 $x155)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x175 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x120 (and $x175 $x121)))
 (let (($x294 (=> $x120 $x254)))
 (let (($x107 (= ?x124 (_ bv0 32))))
 (let (($x275 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x191 (= $x275 $x107)))
 (let (($x80 (=> $x120 $x191)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv1 32))) (select input.dst.llvm-mem ?x55))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv2 32))) ?x212))))
 (let (($x30 (= input.spec-%var-l-1.2.1.2.0 ?x217)))
 (let (($x40 (=> $x120 $x30)))
 (let (($x304 (= (_ bv0 32) ?x55)))
 (let ((?x87 (ite $x304 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x87 (_ bv1 32))))
 (let (($x242 (= $x121 $x235)))
 (let (($x28 (=> $x175 $x242)))
 (let (($x229 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x250 (and $x175 $x229)))
 (let (($x86 (=> $x250 $x234)))
 (let (($x225 (= ?x87 (_ bv0 32))))
 (let (($x18 (= $x229 $x225)))
 (let (($x67 (=> $x175 $x18)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x65)))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x82)))
 (let (($x257 (= input.spec-%var-l-1.2.0 ?x24)))
 (let (($x202 (=> $x175 $x257)))
 (let (($x280 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x280 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x16 (_ bv1 32))))
 (let (($x238 (= $x175 $x68)))
 (let (($x152 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x5 (=> $x152 $x234)))
 (let (($x220 (= ?x16 (_ bv0 32))))
 (let (($x188 (= $x152 $x220)))
 (let (($x83 (and (and (and (and (and (and $x188 $x5) $x238) $x202) $x67) $x86) $x28)))
 (let (($x278 (and (and (and $x83 $x40) $x80) $x294)))
 (let (($x157 (= $x278 true)))
 (let ((?x251 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x160 (= (_ bv0 3) ?x251)))
 (let (($x25 (= $x160 true)))
 (let (($x156 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x159 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x258 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x159) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x159))))
 (let (($x193 (and true $x258)))
 (let (($x198 (and $x258 $x193)))
 (let (($x261 (= (bvand ?x103 (_ bv4294967288 32)) ?x103)))
 (let (($x63 (= (bvand ?x140 (_ bv4294967292 32)) ?x140)))
 (let (($x148 (and $x63 $x261)))
 (let (($x205 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x140 (bvsub ?x140 (_ bv4 32))) (bvult ?x140 (bvsub ?x140 (_ bv4 32))))))
 (let (($x222 (and (and (and (and (and $x193 $x205) $x63) $x148) $x198) $x156)))
 (let (($x134 (not $x101)))
 (let (($x285 (=> $x134 $x222)))
 (let (($x61 (= $x285 true)))
 (let (($x76 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x284 (= $x76 true)))
 (let (($x133 (= $x134 true)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x166 (= (_ bv0 32) ?x97)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let (($x219 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x219 $x6)))
 (let (($x185 (and $x8 $x166)))
 (let (($x137 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x282 (and $x137 $x185)))
 (let (($x19 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x19)))))))
 (let (($x186 (and $x131 $x282)))
 (let (($x209 (= $x186 true)))
 (let ((?x200 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x253 (bvneg ?x200)))
 (let (($x52 (= ?x253 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x32 (= $x52 true)))
 (let (($x35 (and $x32 $x209)))
 (let (($x57 (and $x35 $x133)))
 (let (($x207 (and $x57 $x284)))
 (let (($x79 (and $x207 $x61)))
 (let (($x113 (and $x79 $x25)))
 (let (($x77 (and $x113 $x157)))
 (let (($x71 (and $x77 $x318)))
 (let (($x333 (and $x180 $x71)))
 (let (($x298 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x321 (and $x298 $x333)))
 (let (($x173 (bvugt ?x140 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x140 (_ bv3 32))))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x197 (=> (bvule ?x140 (bvsub (bvadd ?x140 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x173)))))))
 (let (($x210 (=> (and $x134 (bvule ?x140 (bvsub (bvadd ?x140 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x11 $x173)))))))
 (let (($x112 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x154 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32))) (or false (or false (and true (or $x106 $x112)))))))
 (let (($x165 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32)))) (or false (or false (and true (or $x106 $x112)))))))
 (let (($x23 (and $x165 $x210)))
 (let (($x378 (and $x23 $x321)))
 (let (($x394 (=> $x378 $x96)))
 (not $x394)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x140 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x223 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv1 32))) (select input.dst.llvm-mem ?x140))))
 (let ((?x103 (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x140 (_ bv2 32))) ?x223))))
 (let (($x92 (bvule ?x103 (_ bv4294967294 32))))
 (let (($x96 (= $x92 true)))
 (let ((?x12 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x277))))
 (let ((?x75 (bvadd ?x266 (_ bv4 32))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x75 (_ bv1 32))) (select input.dst.llvm-mem ?x75))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x75 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x75 (_ bv2 32))) ?x62))))
 (let (($x316 (= (_ bv0 32) ?x241)))
 (let ((?x276 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x377 (= ?x276 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x127 $x377)))
 (let (($x271 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x180 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x268 (and $x180 $x271)))
 (let (($x406 (=> $x268 $x345)))
 (let (($x343 (bvuge ?x276 (_ bv1 32))))
 (let (($x309 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x109 (= $x309 $x343)))
 (let (($x328 (=> $x268 $x109)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv1 32))) (select input.dst.llvm-mem ?x266))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x266 (_ bv2 32))) ?x305))))
 (let (($x295 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x283)))
 (let (($x239 (=> $x268 $x295)))
 (let (($x300 (= (_ bv0 32) ?x266)))
 (let ((?x224 (ite $x300 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x224 (_ bv1 32))))
 (let (($x314 (= $x271 $x237)))
 (let (($x214 (=> $x180 $x314)))
 (let (($x234 (= false false)))
 (let (($x64 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x307 (and $x180 $x64)))
 (let (($x265 (=> $x307 $x234)))
 (let (($x302 (= ?x224 (_ bv0 32))))
 (let (($x147 (= $x64 $x302)))
 (let (($x327 (=> $x180 $x147)))
 (let ((?x313 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x273 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x115 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x44 (concat (select input.dst.llvm-mem ?x115) (concat ?x299 (concat ?x273 ?x313)))))
 (let (($x123 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x44)))
 (let (($x60 (=> $x180 $x123)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x178 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x178 (_ bv1 32))))
 (let (($x352 (= $x180 $x312)))
 (let (($x326 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x249 (=> $x326 $x234)))
 (let (($x325 (= ?x178 (_ bv0 32))))
 (let (($x230 (= $x326 $x325)))
 (let (($x324 (and (and (and (and (and (and $x230 $x249) $x352) $x60) $x327) $x265) $x214)))
 (let (($x201 (and (and (and $x324 $x239) $x328) $x406)))
 (let (($x318 (= $x201 true)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x192 (concat ?x244 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x55 (concat ?x145 (concat ?x20 ?x192))))
 (let ((?x296 (bvadd ?x55 (_ bv4 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x262))))
 (let (($x245 (= (_ bv0 32) ?x291)))
 (let ((?x124 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x124 (_ bv1 32))))
 (let (($x33 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x254 (= $x33 $x155)))
 (let (($x121 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x175 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x120 (and $x175 $x121)))
 (let (($x294 (=> $x120 $x254)))
 (let (($x107 (= ?x124 (_ bv0 32))))
 (let (($x275 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x191 (= $x275 $x107)))
 (let (($x80 (=> $x120 $x191)))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv1 32))) (select input.dst.llvm-mem ?x55))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x55 (_ bv2 32))) ?x212))))
 (let (($x30 (= input.spec-%var-l-1.2.1.2.0 ?x217)))
 (let (($x40 (=> $x120 $x30)))
 (let (($x304 (= (_ bv0 32) ?x55)))
 (let ((?x87 (ite $x304 (_ bv0 32) (_ bv1 32))))
 (let (($x235 (bvuge ?x87 (_ bv1 32))))
 (let (($x242 (= $x121 $x235)))
 (let (($x28 (=> $x175 $x242)))
 (let (($x229 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x250 (and $x175 $x229)))
 (let (($x86 (=> $x250 $x234)))
 (let (($x225 (= ?x87 (_ bv0 32))))
 (let (($x18 (= $x229 $x225)))
 (let (($x67 (=> $x175 $x18)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x82 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x65)))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x82)))
 (let (($x257 (= input.spec-%var-l-1.2.0 ?x24)))
 (let (($x202 (=> $x175 $x257)))
 (let (($x280 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x280 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x16 (_ bv1 32))))
 (let (($x238 (= $x175 $x68)))
 (let (($x152 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x5 (=> $x152 $x234)))
 (let (($x220 (= ?x16 (_ bv0 32))))
 (let (($x188 (= $x152 $x220)))
 (let (($x83 (and (and (and (and (and (and $x188 $x5) $x238) $x202) $x67) $x86) $x28)))
 (let (($x278 (and (and (and $x83 $x40) $x80) $x294)))
 (let (($x157 (= $x278 true)))
 (let ((?x251 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x160 (= (_ bv0 3) ?x251)))
 (let (($x25 (= $x160 true)))
 (let (($x156 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x159 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x258 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x159) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x159))))
 (let (($x193 (and true $x258)))
 (let (($x198 (and $x258 $x193)))
 (let (($x261 (= (bvand ?x103 (_ bv4294967288 32)) ?x103)))
 (let (($x63 (= (bvand ?x140 (_ bv4294967292 32)) ?x140)))
 (let (($x148 (and $x63 $x261)))
 (let (($x205 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x140 (bvsub ?x140 (_ bv4 32))) (bvult ?x140 (bvsub ?x140 (_ bv4 32))))))
 (let (($x222 (and (and (and (and (and $x193 $x205) $x63) $x148) $x198) $x156)))
 (let (($x134 (not $x101)))
 (let (($x285 (=> $x134 $x222)))
 (let (($x61 (= $x285 true)))
 (let (($x76 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x284 (= $x76 true)))
 (let (($x133 (= $x134 true)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x166 (= (_ bv0 32) ?x97)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let (($x219 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x219 $x6)))
 (let (($x185 (and $x8 $x166)))
 (let (($x137 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x282 (and $x137 $x185)))
 (let (($x19 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x19)))))))
 (let (($x186 (and $x131 $x282)))
 (let (($x209 (= $x186 true)))
 (let ((?x200 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x253 (bvneg ?x200)))
 (let (($x52 (= ?x253 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x32 (= $x52 true)))
 (let (($x35 (and $x32 $x209)))
 (let (($x57 (and $x35 $x133)))
 (let (($x207 (and $x57 $x284)))
 (let (($x79 (and $x207 $x61)))
 (let (($x113 (and $x79 $x25)))
 (let (($x77 (and $x113 $x157)))
 (let (($x71 (and $x77 $x318)))
 (let (($x333 (and $x180 $x71)))
 (let (($x298 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x321 (and $x298 $x333)))
 (let (($x173 (bvugt ?x140 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x140 (_ bv3 32))))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x197 (=> (bvule ?x140 (bvsub (bvadd ?x140 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x173)))))))
 (let (($x210 (=> (and $x134 (bvule ?x140 (bvsub (bvadd ?x140 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x11 $x173)))))))
 (let (($x112 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x106 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x154 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32))) (or false (or false (and true (or $x106 $x112)))))))
 (let (($x165 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x12 (_ bv1 32)))) (or false (or false (and true (or $x106 $x112)))))))
 (let (($x23 (and $x165 $x210)))
 (let (($x378 (and $x23 $x321)))
 (let (($x394 (=> $x378 $x96)))
 (not $x394)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 48
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2839X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2836X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2836X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2836X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var2833X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2830X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2830X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2830X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x498 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2839X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x504 (concat ?x498 (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv4 32))))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2839X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x500 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2839X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x499 (concat ?x500 (concat ?x502 ?x504))))
 (let (($x501 (= ?x499 ?x499)))
 (let (($x476 (= (_ bv0 32) input.ind-%var2839X)))
 (let ((?x477 (ite $x476 (_ bv0 32) (_ bv1 32))))
 (let (($x514 (bvuge ?x477 (_ bv1 32))))
 (let (($x503 (=> $x514 $x501)))
 (let ((?x496 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2839X))))
 (let ((?x486 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv2 32))) ?x496)))
 (let ((?x492 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv3 32))) ?x486)))
 (let (($x494 (= ?x492 ?x492)))
 (let (($x506 (=> $x514 $x494)))
 (let (($x481 (= $x514 $x514)))
 (let (($x234 (= false false)))
 (let (($x475 (= ?x477 (_ bv0 32))))
 (let (($x478 (=> $x475 $x234)))
 (let (($x513 (= $x475 $x475)))
 (let ((?x170 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x259))))
 (let ((?x72 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x132))))
 (let (($x479 (= ?x343 ?x261)))
 (let (($x517 (and (and (and (and (and $x479 $x513) $x478) $x481) $x506) $x503)))
 (let (($x462 (= input.ind-%var2836X.2.1 input.ind-%var2836X.2.1)))
 (let (($x466 (bvuge input.ind-%var2836X.0 (_ bv1 32))))
 (let (($x465 (=> $x466 $x462)))
 (let (($x463 (= input.ind-%var2836X.2.0 input.ind-%var2836X.2.0)))
 (let (($x474 (=> $x466 $x463)))
 (let (($x490 (= $x466 $x466)))
 (let (($x469 (= input.ind-%var2836X.0 (_ bv0 32))))
 (let (($x473 (=> $x469 $x234)))
 (let (($x470 (= $x469 $x469)))
 (let (($x461 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x483 (and (and (and (and (and $x461 $x470) $x473) $x490) $x474) $x465)))
 (let (($x519 (and $x483 $x517)))
 (let (($x253 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x547 (and $x253 $x519)))
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2833X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x447 (concat ?x441 (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv4 32))))))
 (let ((?x451 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2833X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2833X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x450 (concat ?x443 (concat ?x451 ?x447))))
 (let (($x444 (= ?x450 ?x450)))
 (let (($x428 (= (_ bv0 32) input.ind-%var2833X)))
 (let ((?x429 (ite $x428 (_ bv0 32) (_ bv1 32))))
 (let (($x457 (bvuge ?x429 (_ bv1 32))))
 (let (($x446 (=> $x457 $x444)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2833X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv2 32))) ?x448)))
 (let ((?x437 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv3 32))) ?x435)))
 (let (($x142 (= ?x437 ?x437)))
 (let (($x45 (=> $x457 $x142)))
 (let (($x432 (= $x457 $x457)))
 (let (($x430 (= ?x429 (_ bv0 32))))
 (let (($x431 (=> $x430 $x234)))
 (let (($x456 (= $x430 $x430)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x100 (concat ?x212 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x30 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x275 (concat ?x233 (concat ?x30 ?x100))))
 (let (($x414 (= ?x275 ?x261)))
 (let (($x488 (and (and (and (and (and $x414 $x456) $x431) $x432) $x45) $x446)))
 (let (($x403 (= input.ind-%var2830X.2.1 input.ind-%var2830X.2.1)))
 (let (($x411 (bvuge input.ind-%var2830X.0 (_ bv1 32))))
 (let (($x413 (=> $x411 $x403)))
 (let (($x412 (= input.ind-%var2830X.2.0 input.ind-%var2830X.2.0)))
 (let (($x425 (=> $x411 $x412)))
 (let (($x401 (= $x411 $x411)))
 (let (($x181 (= input.ind-%var2830X.0 (_ bv0 32))))
 (let (($x177 (=> $x181 $x234)))
 (let (($x91 (= $x181 $x181)))
 (let (($x426 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x423 (and (and (and (and (and $x426 $x91) $x177) $x401) $x425) $x413)))
 (let (($x518 (and $x423 $x488)))
 (let (($x301 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x460 (and $x301 $x518)))
 (let (($x420 (not true)))
 (let (($x528 (or (or $x420 $x460) $x547)))
 (let (($x524 (and true $x528)))
 (let (($x136 (= $x524 true)))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x343 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x343 (_ bv4 32))))))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x343 (_ bv4 32)) (_ bv2 32))) ?x347)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x343 (_ bv4 32)) (_ bv3 32))) ?x375)))
 (let ((?x355 (bvadd ?x341 (_ bv4 32))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x355 (_ bv1 32))) (select input.dst.llvm-mem ?x355))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x355 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x355 (_ bv2 32))) ?x354))))
 (let (($x344 (= (_ bv0 32) ?x387)))
 (let ((?x410 (ite $x344 (_ bv0 32) (_ bv1 32))))
 (let (($x363 (bvuge ?x410 (_ bv1 32))))
 (let (($x372 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x364 (= $x372 $x363)))
 (let (($x400 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x377 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x380 (and $x377 $x400)))
 (let (($x362 (=> $x380 $x364)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv1 32))) (select input.dst.llvm-mem ?x341))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv2 32))) ?x81))))
 (let (($x361 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x43)))
 (let (($x358 (=> $x380 $x361)))
 (let (($x143 (= ?x410 (_ bv0 32))))
 (let (($x391 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x360 (= $x391 $x143)))
 (let (($x367 (=> $x380 $x360)))
 (let (($x340 (= (_ bv0 32) ?x341)))
 (let ((?x336 (ite $x340 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (= ?x336 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x418 (= $x342 $x108)))
 (let (($x151 (=> $x377 $x418)))
 (let (($x346 (bvuge ?x336 (_ bv1 32))))
 (let (($x376 (= $x400 $x346)))
 (let (($x337 (=> $x377 $x376)))
 (let (($x319 (and $x377 $x342)))
 (let (($x332 (=> $x319 $x234)))
 (let (($x176 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x388 (=> $x176 $x234)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x321))))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x174)))
 (let (($x73 (=> $x377 $x70)))
 (let (($x109 (= (_ bv0 32) ?x343)))
 (let ((?x328 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x328 (_ bv1 32))))
 (let (($x406 (= $x377 $x345)))
 (let (($x350 (= ?x328 (_ bv0 32))))
 (let (($x127 (= $x176 $x350)))
 (let (($x407 (and (and (and (and (and (and $x127 $x406) $x73) $x388) $x332) $x337) $x151)))
 (let (($x54 (and (and (and $x407 $x367) $x358) $x362)))
 (let (($x396 (=> $x253 $x54)))
 (let (($x424 (= $x396 true)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x275 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x275 (_ bv4 32))))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x275 (_ bv4 32)) (_ bv2 32))) ?x138)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x275 (_ bv4 32)) (_ bv3 32))) ?x352)))
 (let ((?x224 (bvadd ?x306 (_ bv4 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x374))))
 (let (($x214 (= (_ bv0 32) ?x314)))
 (let ((?x324 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x405 (bvuge ?x324 (_ bv1 32))))
 (let (($x320 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x247 (= $x320 $x405)))
 (let (($x326 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x29 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x123 (and $x29 $x326)))
 (let (($x339 (=> $x123 $x247)))
 (let (($x268 (= ?x324 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x10 (= $x300 $x268)))
 (let (($x94 (=> $x123 $x10)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv1 32))) (select input.dst.llvm-mem ?x306))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv2 32))) ?x263))))
 (let (($x277 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x49)))
 (let (($x331 (=> $x123 $x277)))
 (let (($x129 (= (_ bv0 32) ?x306)))
 (let ((?x299 (ite $x129 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (= ?x299 (_ bv0 32))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x157 $x292)))
 (let (($x44 (=> $x29 $x104)))
 (let (($x322 (bvuge ?x299 (_ bv1 32))))
 (let (($x273 (= $x326 $x322)))
 (let (($x313 (=> $x29 $x273)))
 (let (($x77 (and $x29 $x157)))
 (let (($x102 (=> $x77 $x234)))
 (let (($x164 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (=> $x164 $x234)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x245))))
 (let (($x155 (= input.spec-%var-l-1.2.1.2.0 ?x33)))
 (let (($x254 (=> $x29 $x155)))
 (let (($x296 (= (_ bv0 32) ?x275)))
 (let ((?x297 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x297 (_ bv1 32))))
 (let (($x203 (= $x29 $x122)))
 (let (($x315 (= ?x297 (_ bv0 32))))
 (let (($x279 (= $x164 $x315)))
 (let (($x295 (and (and (and (and (and (and $x279 $x203) $x254) $x294) $x102) $x313) $x44)))
 (let (($x287 (and (and (and $x295 $x331) $x94) $x339)))
 (let (($x309 (=> $x301 $x287)))
 (let (($x75 (= $x309 true)))
 (let ((?x120 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x232 (= (_ bv0 3) ?x120)))
 (let (($x13 (= $x232 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x36 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x105 (concat (select input.dst.llvm-mem ?x36) (concat ?x225 (concat ?x55 ?x192)))))
 (let (($x250 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x105)))
 (let (($x86 (=> $x253 $x250)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x216 (_ bv1 32))))
 (let (($x244 (= $x253 $x47)))
 (let (($x281 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x20 (=> $x281 $x234)))
 (let (($x145 (= ?x216 (_ bv0 32))))
 (let (($x130 (= $x281 $x145)))
 (let (($x235 (and (and (and $x130 $x20) $x244) $x86)))
 (let (($x242 (= $x235 true)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x184)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x82 (= input.spec-%var-l-1.2.0 ?x65)))
 (let (($x24 (=> $x301 $x82)))
 (let (($x280 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x280 (_ bv0 32) (_ bv1 32))))
 (let (($x175 (bvuge ?x16 (_ bv1 32))))
 (let (($x68 (= $x301 $x175)))
 (let (($x152 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x5 (=> $x152 $x234)))
 (let (($x220 (= ?x16 (_ bv0 32))))
 (let (($x188 (= $x152 $x220)))
 (let (($x323 (and (and (and $x188 $x5) $x68) $x24)))
 (let (($x206 (= $x323 true)))
 (let (($x222 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x193 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x190 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x193) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x193))))
 (let (($x205 (and true $x190)))
 (let (($x66 (and $x190 $x205)))
 (let (($x198 (= (bvand ?x261 (_ bv4294967288 32)) ?x261)))
 (let (($x270 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x163 (and $x270 $x198)))
 (let (($x293 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv4 32))) (bvult ?x170 (bvsub ?x170 (_ bv4 32))))))
 (let (($x251 (and (and (and (and (and $x205 $x293) $x270) $x163) $x66) $x222)))
 (let (($x134 (not $x101)))
 (let (($x160 (=> $x134 $x251)))
 (let (($x25 (= $x160 true)))
 (let (($x243 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x144 (= $x243 true)))
 (let (($x207 (= $x134 true)))
 (let ((?x209 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x35 (= (_ bv0 32) ?x209)))
 (let ((?x185 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x282 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x185)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x186 (and $x166 $x282)))
 (let (($x133 (and $x186 $x35)))
 (let (($x169 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x169 $x133)))
 (let (($x248 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x97 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x248)))))))
 (let (($x37 (and $x97 $x57)))
 (let (($x76 (= $x37 true)))
 (let ((?x32 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x218 (bvneg ?x32)))
 (let (($x204 (= ?x218 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x215 (= $x204 true)))
 (let (($x284 (and $x215 $x76)))
 (let (($x21 (and $x284 $x207)))
 (let (($x258 (and $x21 $x144)))
 (let (($x113 (and $x258 $x25)))
 (let (($x229 (and $x113 $x206)))
 (let (($x28 (and $x229 $x242)))
 (let (($x38 (and $x28 $x13)))
 (let (($x246 (and $x38 $x75)))
 (let (($x419 (and $x246 $x424)))
 (let (($x392 (and $x253 $x419)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x22 (and $x89 $x392)))
 (let (($x194 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x170 (_ bv3 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x298 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x194)))))))
 (let (($x125 (=> (and $x134 (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x196 $x194)))))))
 (let (($x88 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x46 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32))) (or false (or false (and true (or $x39 $x88)))))))
 (let (($x111 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32)))) (or false (or false (and true (or $x39 $x88)))))))
 (let (($x116 (and $x111 $x125)))
 (let (($x546 (and $x116 $x22)))
 (let (($x74 (=> $x546 $x136)))
 (not $x74)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2839X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2836X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2836X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2836X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var2833X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2830X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2830X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2830X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x498 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2839X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x504 (concat ?x498 (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv4 32))))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2839X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x500 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2839X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x499 (concat ?x500 (concat ?x502 ?x504))))
 (let (($x501 (= ?x499 ?x499)))
 (let (($x476 (= (_ bv0 32) input.ind-%var2839X)))
 (let ((?x477 (ite $x476 (_ bv0 32) (_ bv1 32))))
 (let (($x514 (bvuge ?x477 (_ bv1 32))))
 (let (($x503 (=> $x514 $x501)))
 (let ((?x496 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2839X))))
 (let ((?x486 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv2 32))) ?x496)))
 (let ((?x492 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2839X (_ bv3 32))) ?x486)))
 (let (($x494 (= ?x492 ?x492)))
 (let (($x506 (=> $x514 $x494)))
 (let (($x481 (= $x514 $x514)))
 (let (($x234 (= false false)))
 (let (($x475 (= ?x477 (_ bv0 32))))
 (let (($x478 (=> $x475 $x234)))
 (let (($x513 (= $x475 $x475)))
 (let ((?x170 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv1 32))) (select input.dst.llvm-mem ?x170))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x170 (_ bv2 32))) ?x259))))
 (let ((?x72 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x132))))
 (let (($x479 (= ?x343 ?x261)))
 (let (($x517 (and (and (and (and (and $x479 $x513) $x478) $x481) $x506) $x503)))
 (let (($x462 (= input.ind-%var2836X.2.1 input.ind-%var2836X.2.1)))
 (let (($x466 (bvuge input.ind-%var2836X.0 (_ bv1 32))))
 (let (($x465 (=> $x466 $x462)))
 (let (($x463 (= input.ind-%var2836X.2.0 input.ind-%var2836X.2.0)))
 (let (($x474 (=> $x466 $x463)))
 (let (($x490 (= $x466 $x466)))
 (let (($x469 (= input.ind-%var2836X.0 (_ bv0 32))))
 (let (($x473 (=> $x469 $x234)))
 (let (($x470 (= $x469 $x469)))
 (let (($x461 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x483 (and (and (and (and (and $x461 $x470) $x473) $x490) $x474) $x465)))
 (let (($x519 (and $x483 $x517)))
 (let (($x253 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x547 (and $x253 $x519)))
 (let ((?x441 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2833X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x447 (concat ?x441 (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv4 32))))))
 (let ((?x451 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2833X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2833X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x450 (concat ?x443 (concat ?x451 ?x447))))
 (let (($x444 (= ?x450 ?x450)))
 (let (($x428 (= (_ bv0 32) input.ind-%var2833X)))
 (let ((?x429 (ite $x428 (_ bv0 32) (_ bv1 32))))
 (let (($x457 (bvuge ?x429 (_ bv1 32))))
 (let (($x446 (=> $x457 $x444)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2833X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv2 32))) ?x448)))
 (let ((?x437 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2833X (_ bv3 32))) ?x435)))
 (let (($x142 (= ?x437 ?x437)))
 (let (($x45 (=> $x457 $x142)))
 (let (($x432 (= $x457 $x457)))
 (let (($x430 (= ?x429 (_ bv0 32))))
 (let (($x431 (=> $x430 $x234)))
 (let (($x456 (= $x430 $x430)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x100 (concat ?x212 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x30 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x275 (concat ?x233 (concat ?x30 ?x100))))
 (let (($x414 (= ?x275 ?x261)))
 (let (($x488 (and (and (and (and (and $x414 $x456) $x431) $x432) $x45) $x446)))
 (let (($x403 (= input.ind-%var2830X.2.1 input.ind-%var2830X.2.1)))
 (let (($x411 (bvuge input.ind-%var2830X.0 (_ bv1 32))))
 (let (($x413 (=> $x411 $x403)))
 (let (($x412 (= input.ind-%var2830X.2.0 input.ind-%var2830X.2.0)))
 (let (($x425 (=> $x411 $x412)))
 (let (($x401 (= $x411 $x411)))
 (let (($x181 (= input.ind-%var2830X.0 (_ bv0 32))))
 (let (($x177 (=> $x181 $x234)))
 (let (($x91 (= $x181 $x181)))
 (let (($x426 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x423 (and (and (and (and (and $x426 $x91) $x177) $x401) $x425) $x413)))
 (let (($x518 (and $x423 $x488)))
 (let (($x301 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x460 (and $x301 $x518)))
 (let (($x420 (not true)))
 (let (($x528 (or (or $x420 $x460) $x547)))
 (let (($x524 (and true $x528)))
 (let (($x136 (= $x524 true)))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x343 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x343 (_ bv4 32))))))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x343 (_ bv4 32)) (_ bv2 32))) ?x347)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x343 (_ bv4 32)) (_ bv3 32))) ?x375)))
 (let ((?x355 (bvadd ?x341 (_ bv4 32))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x355 (_ bv1 32))) (select input.dst.llvm-mem ?x355))))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x355 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x355 (_ bv2 32))) ?x354))))
 (let (($x344 (= (_ bv0 32) ?x387)))
 (let ((?x410 (ite $x344 (_ bv0 32) (_ bv1 32))))
 (let (($x363 (bvuge ?x410 (_ bv1 32))))
 (let (($x372 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x364 (= $x372 $x363)))
 (let (($x400 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x377 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x380 (and $x377 $x400)))
 (let (($x362 (=> $x380 $x364)))
 (let ((?x81 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv1 32))) (select input.dst.llvm-mem ?x341))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv2 32))) ?x81))))
 (let (($x361 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x43)))
 (let (($x358 (=> $x380 $x361)))
 (let (($x143 (= ?x410 (_ bv0 32))))
 (let (($x391 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x360 (= $x391 $x143)))
 (let (($x367 (=> $x380 $x360)))
 (let (($x340 (= (_ bv0 32) ?x341)))
 (let ((?x336 (ite $x340 (_ bv0 32) (_ bv1 32))))
 (let (($x108 (= ?x336 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x418 (= $x342 $x108)))
 (let (($x151 (=> $x377 $x418)))
 (let (($x346 (bvuge ?x336 (_ bv1 32))))
 (let (($x376 (= $x400 $x346)))
 (let (($x337 (=> $x377 $x376)))
 (let (($x319 (and $x377 $x342)))
 (let (($x332 (=> $x319 $x234)))
 (let (($x176 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x388 (=> $x176 $x234)))
 (let ((?x321 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x174 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x321))))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x174)))
 (let (($x73 (=> $x377 $x70)))
 (let (($x109 (= (_ bv0 32) ?x343)))
 (let ((?x328 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x328 (_ bv1 32))))
 (let (($x406 (= $x377 $x345)))
 (let (($x350 (= ?x328 (_ bv0 32))))
 (let (($x127 (= $x176 $x350)))
 (let (($x407 (and (and (and (and (and (and $x127 $x406) $x73) $x388) $x332) $x337) $x151)))
 (let (($x54 (and (and (and $x407 $x367) $x358) $x362)))
 (let (($x396 (=> $x253 $x54)))
 (let (($x424 (= $x396 true)))
 (let ((?x138 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x275 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x275 (_ bv4 32))))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x275 (_ bv4 32)) (_ bv2 32))) ?x138)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x275 (_ bv4 32)) (_ bv3 32))) ?x352)))
 (let ((?x224 (bvadd ?x306 (_ bv4 32))))
 (let ((?x374 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x374))))
 (let (($x214 (= (_ bv0 32) ?x314)))
 (let ((?x324 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x405 (bvuge ?x324 (_ bv1 32))))
 (let (($x320 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x247 (= $x320 $x405)))
 (let (($x326 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x29 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x123 (and $x29 $x326)))
 (let (($x339 (=> $x123 $x247)))
 (let (($x268 (= ?x324 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x10 (= $x300 $x268)))
 (let (($x94 (=> $x123 $x10)))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv1 32))) (select input.dst.llvm-mem ?x306))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x306 (_ bv2 32))) ?x263))))
 (let (($x277 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x49)))
 (let (($x331 (=> $x123 $x277)))
 (let (($x129 (= (_ bv0 32) ?x306)))
 (let ((?x299 (ite $x129 (_ bv0 32) (_ bv1 32))))
 (let (($x292 (= ?x299 (_ bv0 32))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x157 $x292)))
 (let (($x44 (=> $x29 $x104)))
 (let (($x322 (bvuge ?x299 (_ bv1 32))))
 (let (($x273 (= $x326 $x322)))
 (let (($x313 (=> $x29 $x273)))
 (let (($x77 (and $x29 $x157)))
 (let (($x102 (=> $x77 $x234)))
 (let (($x164 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (=> $x164 $x234)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv1 32))) (select input.dst.llvm-mem ?x275))))
 (let ((?x33 (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x275 (_ bv2 32))) ?x245))))
 (let (($x155 (= input.spec-%var-l-1.2.1.2.0 ?x33)))
 (let (($x254 (=> $x29 $x155)))
 (let (($x296 (= (_ bv0 32) ?x275)))
 (let ((?x297 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x297 (_ bv1 32))))
 (let (($x203 (= $x29 $x122)))
 (let (($x315 (= ?x297 (_ bv0 32))))
 (let (($x279 (= $x164 $x315)))
 (let (($x295 (and (and (and (and (and (and $x279 $x203) $x254) $x294) $x102) $x313) $x44)))
 (let (($x287 (and (and (and $x295 $x331) $x94) $x339)))
 (let (($x309 (=> $x301 $x287)))
 (let (($x75 (= $x309 true)))
 (let ((?x120 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x232 (= (_ bv0 3) ?x120)))
 (let (($x13 (= $x232 true)))
 (let ((?x192 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x36 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x105 (concat (select input.dst.llvm-mem ?x36) (concat ?x225 (concat ?x55 ?x192)))))
 (let (($x250 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x105)))
 (let (($x86 (=> $x253 $x250)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x216 (_ bv1 32))))
 (let (($x244 (= $x253 $x47)))
 (let (($x281 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x20 (=> $x281 $x234)))
 (let (($x145 (= ?x216 (_ bv0 32))))
 (let (($x130 (= $x281 $x145)))
 (let (($x235 (and (and (and $x130 $x20) $x244) $x86)))
 (let (($x242 (= $x235 true)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x184)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x82 (= input.spec-%var-l-1.2.0 ?x65)))
 (let (($x24 (=> $x301 $x82)))
 (let (($x280 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x16 (ite $x280 (_ bv0 32) (_ bv1 32))))
 (let (($x175 (bvuge ?x16 (_ bv1 32))))
 (let (($x68 (= $x301 $x175)))
 (let (($x152 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x5 (=> $x152 $x234)))
 (let (($x220 (= ?x16 (_ bv0 32))))
 (let (($x188 (= $x152 $x220)))
 (let (($x323 (and (and (and $x188 $x5) $x68) $x24)))
 (let (($x206 (= $x323 true)))
 (let (($x222 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x193 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x190 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x193) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x193))))
 (let (($x205 (and true $x190)))
 (let (($x66 (and $x190 $x205)))
 (let (($x198 (= (bvand ?x261 (_ bv4294967288 32)) ?x261)))
 (let (($x270 (= (bvand ?x170 (_ bv4294967292 32)) ?x170)))
 (let (($x163 (and $x270 $x198)))
 (let (($x293 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x170 (bvsub ?x170 (_ bv4 32))) (bvult ?x170 (bvsub ?x170 (_ bv4 32))))))
 (let (($x251 (and (and (and (and (and $x205 $x293) $x270) $x163) $x66) $x222)))
 (let (($x134 (not $x101)))
 (let (($x160 (=> $x134 $x251)))
 (let (($x25 (= $x160 true)))
 (let (($x243 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x144 (= $x243 true)))
 (let (($x207 (= $x134 true)))
 (let ((?x209 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x35 (= (_ bv0 32) ?x209)))
 (let ((?x185 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x282 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x185)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x186 (and $x166 $x282)))
 (let (($x133 (and $x186 $x35)))
 (let (($x169 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x169 $x133)))
 (let (($x248 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x97 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x248)))))))
 (let (($x37 (and $x97 $x57)))
 (let (($x76 (= $x37 true)))
 (let ((?x32 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x218 (bvneg ?x32)))
 (let (($x204 (= ?x218 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x215 (= $x204 true)))
 (let (($x284 (and $x215 $x76)))
 (let (($x21 (and $x284 $x207)))
 (let (($x258 (and $x21 $x144)))
 (let (($x113 (and $x258 $x25)))
 (let (($x229 (and $x113 $x206)))
 (let (($x28 (and $x229 $x242)))
 (let (($x38 (and $x28 $x13)))
 (let (($x246 (and $x38 $x75)))
 (let (($x419 (and $x246 $x424)))
 (let (($x392 (and $x253 $x419)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x22 (and $x89 $x392)))
 (let (($x194 (bvugt ?x170 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x170 (_ bv3 32))))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x298 (=> (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x196 $x194)))))))
 (let (($x125 (=> (and $x134 (bvule ?x170 (bvsub (bvadd ?x170 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x196 $x194)))))))
 (let (($x88 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x36)))
 (let (($x46 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32))) (or false (or false (and true (or $x39 $x88)))))))
 (let (($x111 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x72 (_ bv1 32)))) (or false (or false (and true (or $x39 $x88)))))))
 (let (($x116 (and $x111 $x125)))
 (let (($x546 (and $x116 $x22)))
 (let (($x74 (=> $x546 $x136)))
 (not $x74)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 49
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x290 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x94 (or $x290 $x101)))
 (let (($x135 (= $x94 true)))
 (let ((?x106 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x245))))
 (let ((?x295 (bvadd ?x294 (_ bv4 32))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x50))))
 (let (($x48 (= (_ bv0 32) ?x263)))
 (let ((?x49 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x300 (= ?x49 (_ bv0 32))))
 (let (($x266 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x266 $x300)))
 (let (($x178 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x312 (and $x290 $x178)))
 (let (($x271 (=> $x312 $x224)))
 (let (($x277 (bvuge ?x49 (_ bv1 32))))
 (let (($x44 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x331 (= $x44 $x277)))
 (let (($x239 (=> $x312 $x331)))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x294 (_ bv1 32))) (select input.dst.llvm-mem ?x294))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x294 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x294 (_ bv2 32))) ?x352))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x313)))
 (let (($x292 (=> $x312 $x283)))
 (let (($x305 (= (_ bv0 32) ?x294)))
 (let ((?x278 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x7 (bvuge ?x278 (_ bv1 32))))
 (let (($x231 (= $x178 $x7)))
 (let (($x180 (=> $x290 $x231)))
 (let (($x128 (= false false)))
 (let (($x107 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x228 (and $x290 $x107)))
 (let (($x326 (=> $x228 $x128)))
 (let (($x157 (= ?x278 (_ bv0 32))))
 (let (($x77 (= $x107 $x157)))
 (let (($x102 (=> $x290 $x77)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x53 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x310 (concat (select input.dst.llvm-mem ?x53) (concat ?x122 (concat ?x315 ?x296)))))
 (let (($x80 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x310)))
 (let (($x334 (=> $x290 $x80)))
 (let ((?x217 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x217 (_ bv1 32))))
 (let (($x40 (= $x290 $x100)))
 (let (($x233 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x212 (=> $x233 $x128)))
 (let (($x30 (= ?x217 (_ bv0 32))))
 (let (($x272 (= $x233 $x30)))
 (let (($x302 (and (and (and (and (and (and $x272 $x212) $x40) $x334) $x102) $x326) $x180)))
 (let (($x314 (and (and (and $x302 $x292) $x239) $x271)))
 (let (($x214 (= $x314 true)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x25 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x220 (concat ?x16 (concat ?x152 ?x113))))
 (let ((?x145 (bvadd ?x220 (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x253))))
 (let (($x225 (= (_ bv0 32) ?x87)))
 (let ((?x126 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x126 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x250 (= $x18 $x105)))
 (let (($x202 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x61 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x267 (and $x61 $x202)))
 (let (($x86 (=> $x267 $x250)))
 (let (($x55 (= ?x126 (_ bv0 32))))
 (let (($x216 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x192 (= $x216 $x55)))
 (let (($x304 (=> $x267 $x192)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem ?x220))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv2 32))) ?x184))))
 (let (($x229 (= input.spec-%var-l-1.2.1.2.0 ?x206)))
 (let (($x200 (=> $x267 $x229)))
 (let (($x188 (= (_ bv0 32) ?x220)))
 (let ((?x234 (ite $x188 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x234 (_ bv1 32))))
 (let (($x146 (= $x202 $x238)))
 (let (($x288 (=> $x61 $x146)))
 (let (($x156 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x175 (and $x61 $x156)))
 (let (($x68 (=> $x175 $x128)))
 (let (($x5 (= ?x234 (_ bv0 32))))
 (let (($x257 (= $x156 $x5)))
 (let (($x301 (=> $x61 $x257)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x69)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x148)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x163)))
 (let (($x66 (=> $x61 $x79)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x293 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x293 (_ bv1 32))))
 (let (($x182 (= $x61 $x255)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x270 (=> $x141 $x128)))
 (let (($x285 (= ?x293 (_ bv0 32))))
 (let (($x189 (= $x141 $x285)))
 (let (($x232 (and (and (and (and (and (and $x189 $x270) $x182) $x66) $x301) $x68) $x288)))
 (let (($x269 (and (and (and $x232 $x200) $x304) $x86)))
 (let (($x164 (= $x269 true)))
 (let ((?x286 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x114 (= (_ bv0 3) ?x286)))
 (let (($x190 (= $x114 true)))
 (let (($x144 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x258 (= $x144 true)))
 (let ((?x57 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x57)))
 (let ((?x209 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x209)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x186 $x35)))
 (let (($x76 (and $x133 $x37)))
 (let (($x131 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (and $x131 $x76)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x282 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x6)))))))
 (let (($x207 (and $x282 $x284)))
 (let (($x21 (= $x207 true)))
 (let ((?x31 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x204 (bvneg ?x31)))
 (let (($x41 (= ?x204 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x158 (= $x41 true)))
 (let (($x159 (and $x158 $x21)))
 (let (($x260 (and $x159 $x258)))
 (let (($x205 (and $x260 $x190)))
 (let (($x149 (and $x205 $x164)))
 (let (($x324 (and $x149 $x214)))
 (let (($x52 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x268 (and $x52 $x324)))
 (let ((?x172 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x210 (bvugt ?x172 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x172 (_ bv3 32)))))
 (let (($x89 (=> (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x197 $x210)))))))
 (let (($x134 (not $x101)))
 (let (($x59 (=> (and $x134 (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x197 $x210)))))))
 (let (($x165 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x173 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x106 (_ bv1 32))) (or false (or false (and true (or $x154 $x165)))))))
 (let (($x115 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x106 (_ bv1 32)))) (or false (or false (and true (or $x154 $x165)))))))
 (let (($x15 (and $x115 $x59)))
 (let (($x10 (and $x15 $x268)))
 (let (($x320 (=> $x10 $x135)))
 (not $x320))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x290 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x94 (or $x290 $x101)))
 (let (($x135 (= $x94 true)))
 (let ((?x106 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv1 32))) (select input.dst.llvm-mem ?x106))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x106 (_ bv2 32))) ?x245))))
 (let ((?x295 (bvadd ?x294 (_ bv4 32))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x263 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x50))))
 (let (($x48 (= (_ bv0 32) ?x263)))
 (let ((?x49 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x300 (= ?x49 (_ bv0 32))))
 (let (($x266 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x224 (= $x266 $x300)))
 (let (($x178 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x312 (and $x290 $x178)))
 (let (($x271 (=> $x312 $x224)))
 (let (($x277 (bvuge ?x49 (_ bv1 32))))
 (let (($x44 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x331 (= $x44 $x277)))
 (let (($x239 (=> $x312 $x331)))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x294 (_ bv1 32))) (select input.dst.llvm-mem ?x294))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x294 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x294 (_ bv2 32))) ?x352))))
 (let (($x283 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x313)))
 (let (($x292 (=> $x312 $x283)))
 (let (($x305 (= (_ bv0 32) ?x294)))
 (let ((?x278 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x7 (bvuge ?x278 (_ bv1 32))))
 (let (($x231 (= $x178 $x7)))
 (let (($x180 (=> $x290 $x231)))
 (let (($x128 (= false false)))
 (let (($x107 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x228 (and $x290 $x107)))
 (let (($x326 (=> $x228 $x128)))
 (let (($x157 (= ?x278 (_ bv0 32))))
 (let (($x77 (= $x107 $x157)))
 (let (($x102 (=> $x290 $x77)))
 (let ((?x296 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x315 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x53 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x310 (concat (select input.dst.llvm-mem ?x53) (concat ?x122 (concat ?x315 ?x296)))))
 (let (($x80 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x310)))
 (let (($x334 (=> $x290 $x80)))
 (let ((?x217 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x217 (_ bv1 32))))
 (let (($x40 (= $x290 $x100)))
 (let (($x233 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x212 (=> $x233 $x128)))
 (let (($x30 (= ?x217 (_ bv0 32))))
 (let (($x272 (= $x233 $x30)))
 (let (($x302 (and (and (and (and (and (and $x272 $x212) $x40) $x334) $x102) $x326) $x180)))
 (let (($x314 (and (and (and $x302 $x292) $x239) $x271)))
 (let (($x214 (= $x314 true)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x113 (concat ?x25 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x220 (concat ?x16 (concat ?x152 ?x113))))
 (let ((?x145 (bvadd ?x220 (_ bv4 32))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x253))))
 (let (($x225 (= (_ bv0 32) ?x87)))
 (let ((?x126 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x105 (bvuge ?x126 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x250 (= $x18 $x105)))
 (let (($x202 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x61 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x267 (and $x61 $x202)))
 (let (($x86 (=> $x267 $x250)))
 (let (($x55 (= ?x126 (_ bv0 32))))
 (let (($x216 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x192 (= $x216 $x55)))
 (let (($x304 (=> $x267 $x192)))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem ?x220))))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x220 (_ bv2 32))) ?x184))))
 (let (($x229 (= input.spec-%var-l-1.2.1.2.0 ?x206)))
 (let (($x200 (=> $x267 $x229)))
 (let (($x188 (= (_ bv0 32) ?x220)))
 (let ((?x234 (ite $x188 (_ bv0 32) (_ bv1 32))))
 (let (($x238 (bvuge ?x234 (_ bv1 32))))
 (let (($x146 (= $x202 $x238)))
 (let (($x288 (=> $x61 $x146)))
 (let (($x156 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x175 (and $x61 $x156)))
 (let (($x68 (=> $x175 $x128)))
 (let (($x5 (= ?x234 (_ bv0 32))))
 (let (($x257 (= $x156 $x5)))
 (let (($x301 (=> $x61 $x257)))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x69)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x148)))
 (let (($x79 (= input.spec-%var-l-1.2.0 ?x163)))
 (let (($x66 (=> $x61 $x79)))
 (let (($x63 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x293 (ite $x63 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x293 (_ bv1 32))))
 (let (($x182 (= $x61 $x255)))
 (let (($x141 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x270 (=> $x141 $x128)))
 (let (($x285 (= ?x293 (_ bv0 32))))
 (let (($x189 (= $x141 $x285)))
 (let (($x232 (and (and (and (and (and (and $x189 $x270) $x182) $x66) $x301) $x68) $x288)))
 (let (($x269 (and (and (and $x232 $x200) $x304) $x86)))
 (let (($x164 (= $x269 true)))
 (let ((?x286 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x114 (= (_ bv0 3) ?x286)))
 (let (($x190 (= $x114 true)))
 (let (($x144 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x258 (= $x144 true)))
 (let ((?x57 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x57)))
 (let ((?x209 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x209)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x186 $x35)))
 (let (($x76 (and $x133 $x37)))
 (let (($x131 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (and $x131 $x76)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x282 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x199 $x6)))))))
 (let (($x207 (and $x282 $x284)))
 (let (($x21 (= $x207 true)))
 (let ((?x31 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x204 (bvneg ?x31)))
 (let (($x41 (= ?x204 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x158 (= $x41 true)))
 (let (($x159 (and $x158 $x21)))
 (let (($x260 (and $x159 $x258)))
 (let (($x205 (and $x260 $x190)))
 (let (($x149 (and $x205 $x164)))
 (let (($x324 (and $x149 $x214)))
 (let (($x52 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x268 (and $x52 $x324)))
 (let ((?x172 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x210 (bvugt ?x172 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x197 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x172 (_ bv3 32)))))
 (let (($x89 (=> (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x197 $x210)))))))
 (let (($x134 (not $x101)))
 (let (($x59 (=> (and $x134 (bvule ?x172 (bvsub (bvadd ?x172 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x197 $x210)))))))
 (let (($x165 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x173 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x106 (_ bv1 32))) (or false (or false (and true (or $x154 $x165)))))))
 (let (($x115 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x106 (_ bv1 32)))) (or false (or false (and true (or $x154 $x165)))))))
 (let (($x15 (and $x115 $x59)))
 (let (($x10 (and $x15 $x268)))
 (let (($x320 (=> $x10 $x135)))
 (not $x320))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 50
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2966X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2963X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2963X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2963X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var2960X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2957X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2957X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2957X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x508 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2966X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x500 (concat ?x508 (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv4 32))))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2966X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x507 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2966X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x504 (concat ?x507 (concat ?x502 ?x500))))
 (let (($x509 (= ?x504 ?x504)))
 (let (($x475 (= (_ bv0 32) input.ind-%var2966X)))
 (let ((?x513 (ite $x475 (_ bv0 32) (_ bv1 32))))
 (let (($x514 (bvuge ?x513 (_ bv1 32))))
 (let (($x499 (=> $x514 $x509)))
 (let ((?x493 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2966X))))
 (let ((?x495 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv2 32))) ?x493)))
 (let ((?x486 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv3 32))) ?x495)))
 (let (($x492 (= ?x486 ?x486)))
 (let (($x494 (=> $x514 $x492)))
 (let (($x481 (= $x514 $x514)))
 (let (($x175 (= false false)))
 (let (($x510 (= ?x513 (_ bv0 32))))
 (let (($x511 (=> $x510 $x175)))
 (let (($x478 (= $x510 $x510)))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv1 32))) (select input.dst.llvm-mem ?x11))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv2 32))) ?x261))))
 (let ((?x39 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv1 32))) (select input.dst.llvm-mem ?x39))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv2 32))) ?x84))))
 (let (($x476 (= ?x350 ?x163)))
 (let (($x547 (and (and (and (and (and $x476 $x478) $x511) $x481) $x494) $x499)))
 (let (($x472 (= input.ind-%var2963X.2.1 input.ind-%var2963X.2.1)))
 (let (($x466 (bvuge input.ind-%var2963X.0 (_ bv1 32))))
 (let (($x464 (=> $x466 $x472)))
 (let (($x467 (= input.ind-%var2963X.2.0 input.ind-%var2963X.2.0)))
 (let (($x463 (=> $x466 $x467)))
 (let (($x490 (= $x466 $x466)))
 (let (($x482 (= input.ind-%var2963X.0 (_ bv0 32))))
 (let (($x468 (=> $x482 $x175)))
 (let (($x473 (= $x482 $x482)))
 (let (($x469 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x480 (and (and (and (and (and $x469 $x473) $x468) $x490) $x463) $x464)))
 (let (($x528 (and $x480 $x547)))
 (let (($x204 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x524 (and $x204 $x528)))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2960X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x452 (concat ?x443 (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv4 32))))))
 (let ((?x487 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2960X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x447 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2960X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x445 (concat ?x447 (concat ?x487 ?x452))))
 (let (($x450 (= ?x445 ?x445)))
 (let (($x456 (= (_ bv0 32) input.ind-%var2960X)))
 (let ((?x453 (ite $x456 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x453 (_ bv1 32))))
 (let (($x444 (=> $x432 $x450)))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2960X))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv2 32))) ?x439)))
 (let ((?x437 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv3 32))) ?x433)))
 (let (($x142 (= ?x437 ?x437)))
 (let (($x45 (=> $x432 $x142)))
 (let (($x455 (= $x432 $x432)))
 (let (($x431 (= ?x453 (_ bv0 32))))
 (let (($x457 (=> $x431 $x175)))
 (let (($x454 (= $x431 $x431)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x40 (concat ?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x297 (concat ?x122 (concat ?x275 ?x40))))
 (let (($x429 (= ?x297 ?x163)))
 (let (($x527 (and (and (and (and (and $x429 $x454) $x457) $x455) $x45) $x444)))
 (let (($x402 (= input.ind-%var2957X.2.1 input.ind-%var2957X.2.1)))
 (let (($x401 (bvuge input.ind-%var2957X.0 (_ bv1 32))))
 (let (($x403 (=> $x401 $x402)))
 (let (($x412 (= input.ind-%var2957X.2.0 input.ind-%var2957X.2.0)))
 (let (($x425 (=> $x401 $x412)))
 (let (($x409 (= $x401 $x401)))
 (let (($x177 (= input.ind-%var2957X.0 (_ bv0 32))))
 (let (($x411 (=> $x177 $x175)))
 (let (($x408 (= $x177 $x177)))
 (let (($x91 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x428 (and (and (and (and (and $x91 $x408) $x411) $x409) $x425) $x403)))
 (let (($x461 (and $x428 $x527)))
 (let (($x120 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x489 (and $x120 $x461)))
 (let (($x426 (not true)))
 (let (($x74 (or (or $x426 $x489) $x524)))
 (let (($x118 (and true $x74)))
 (let (($x34 (= $x118 true)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x350 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x350 (_ bv4 32))))))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x350 (_ bv4 32)) (_ bv2 32))) ?x330)))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x350 (_ bv4 32)) (_ bv3 32))) ?x335)))
 (let ((?x380 (bvadd ?x375 (_ bv4 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv1 32))) (select input.dst.llvm-mem ?x380))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv2 32))) ?x386))))
 (let (($x354 (= (_ bv0 32) ?x366)))
 (let ((?x256 (ite $x354 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x256 (_ bv1 32))))
 (let (($x393 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x361 (= $x393 $x43)))
 (let (($x373 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x418 (and $x390 $x373)))
 (let (($x358 (=> $x418 $x361)))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv1 32))) (select input.dst.llvm-mem ?x375))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv2 32))) ?x359))))
 (let (($x368 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x399)))
 (let (($x81 (=> $x418 $x368)))
 (let (($x387 (= ?x256 (_ bv0 32))))
 (let (($x407 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x344 (= $x407 $x387)))
 (let (($x410 (=> $x418 $x344)))
 (let (($x341 (= (_ bv0 32) ?x375)))
 (let ((?x340 (ite $x341 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x340 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x382 (= $x342 $x337)))
 (let (($x108 (=> $x390 $x382)))
 (let (($x336 (bvuge ?x340 (_ bv1 32))))
 (let (($x346 (= $x373 $x336)))
 (let (($x376 (=> $x390 $x346)))
 (let (($x319 (and $x390 $x342)))
 (let (($x332 (=> $x319 $x175)))
 (let (($x62 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x379 (=> $x62 $x175)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv1 32))) (select input.dst.llvm-mem ?x350))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv2 32))) ?x333))))
 (let (($x369 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x73)))
 (let (($x388 (=> $x390 $x369)))
 (let (($x127 (= (_ bv0 32) ?x350)))
 (let ((?x377 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x201 (bvuge ?x377 (_ bv1 32))))
 (let (($x394 (= $x390 $x201)))
 (let (($x345 (= ?x377 (_ bv0 32))))
 (let (($x406 (= $x62 $x345)))
 (let (($x54 (and (and (and (and (and (and $x406 $x394) $x388) $x379) $x332) $x376) $x108)))
 (let (($x419 (and (and (and $x54 $x410) $x81) $x358)))
 (let (($x392 (=> $x204 $x419)))
 (let (($x22 (= $x392 true)))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x297 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x297 (_ bv4 32))))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x297 (_ bv4 32)) (_ bv2 32))) ?x7)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x297 (_ bv4 32)) (_ bv3 32))) ?x302)))
 (let ((?x263 (bvadd ?x322 (_ bv4 32))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x331))))
 (let (($x314 (= (_ bv0 32) ?x271)))
 (let ((?x214 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (bvuge ?x214 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x320 (= $x94 $x135)))
 (let (($x147 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x310 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x313 (and $x310 $x147)))
 (let (($x405 (=> $x313 $x320)))
 (let (($x324 (= ?x214 (_ bv0 32))))
 (let (($x227 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (= $x227 $x324)))
 (let (($x10 (=> $x313 $x268)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv1 32))) (select input.dst.llvm-mem ?x322))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv2 32))) ?x44))))
 (let (($x240 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x60)))
 (let (($x123 (=> $x313 $x240)))
 (let (($x273 (= (_ bv0 32) ?x322)))
 (let ((?x306 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x249 (= ?x306 (_ bv0 32))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x352 (= $x157 $x249)))
 (let (($x299 (=> $x310 $x352)))
 (let (($x129 (bvuge ?x306 (_ bv1 32))))
 (let (($x325 (= $x147 $x129)))
 (let (($x138 (=> $x310 $x325)))
 (let (($x77 (and $x310 $x157)))
 (let (($x102 (=> $x77 $x175)))
 (let (($x272 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (=> $x272 $x175)))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x317))))
 (let (($x155 (= input.spec-%var-l-1.2.1.2.0 ?x245)))
 (let (($x294 (=> $x310 $x155)))
 (let (($x315 (= (_ bv0 32) ?x297)))
 (let ((?x296 (ite $x315 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x296 (_ bv1 32))))
 (let (($x334 (= $x310 $x80)))
 (let (($x279 (= ?x296 (_ bv0 32))))
 (let (($x203 (= $x272 $x279)))
 (let (($x287 (and (and (and (and (and (and $x203 $x334) $x294) $x305) $x102) $x138) $x299)))
 (let (($x246 (and (and (and $x287 $x123) $x10) $x405)))
 (let (($x311 (=> $x120 $x246)))
 (let (($x176 (= $x311 true)))
 (let ((?x149 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (= (_ bv0 3) ?x149)))
 (let (($x233 (= $x167 true)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x140 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x192 (concat (select input.dst.llvm-mem ?x140) (concat ?x225 (concat ?x253 ?x58)))))
 (let (($x304 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x192)))
 (let (($x38 (=> $x204 $x304)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x216 (_ bv1 32))))
 (let (($x244 (= $x204 $x47)))
 (let (($x281 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x67 (=> $x281 $x175)))
 (let (($x145 (= ?x216 (_ bv0 32))))
 (let (($x78 (= $x281 $x145)))
 (let (($x250 (and (and (and $x78 $x67) $x244) $x38)))
 (let (($x86 (= $x250 true)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x187)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x195 (= input.spec-%var-l-1.2.0 ?x274)))
 (let (($x184 (=> $x120 $x195)))
 (let (($x5 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x257 (ite $x5 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x257 (_ bv1 32))))
 (let (($x238 (= $x120 $x202)))
 (let (($x188 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x188 $x175)))
 (let (($x301 (= ?x257 (_ bv0 32))))
 (let (($x83 (= $x188 $x301)))
 (let (($x229 (and (and (and $x83 $x68) $x238) $x184)))
 (let (($x200 (= $x229 true)))
 (let (($x280 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x56 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x189 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x56) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x56))))
 (let (($x128 (and true $x189)))
 (let (($x156 (and $x189 $x128)))
 (let (($x28 (= (bvand ?x163 (_ bv4294967288 32)) ?x163)))
 (let (($x161 (= (bvand ?x11 (_ bv4294967292 32)) ?x11)))
 (let (($x208 (and $x161 $x28)))
 (let (($x182 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x11 (bvsub ?x11 (_ bv4 32))) (bvult ?x11 (bvsub ?x11 (_ bv4 32))))))
 (let (($x25 (and (and (and (and (and $x128 $x182) $x161) $x208) $x156) $x280)))
 (let (($x134 (not $x101)))
 (let (($x251 (=> $x134 $x25)))
 (let (($x113 (= $x251 true)))
 (let (($x205 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x168 (= $x205 true)))
 (let (($x286 (= $x134 true)))
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x159 (= (_ bv0 32) ?x21)))
 (let ((?x76 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x284 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x76)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x207 (and $x37 $x284)))
 (let (($x243 (and $x207 $x159)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (and $x97 $x243)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x57 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x26)))))))
 (let (($x258 (and $x57 $x144)))
 (let (($x260 (= $x258 true)))
 (let ((?x158 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x248 (bvneg ?x158)))
 (let (($x185 (= ?x248 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x219 (= $x185 true)))
 (let (($x193 (and $x219 $x260)))
 (let (($x114 (and $x193 $x286)))
 (let (($x141 (and $x114 $x168)))
 (let (($x213 (and $x141 $x113)))
 (let (($x13 (and $x213 $x200)))
 (let (($x269 (and $x13 $x86)))
 (let (($x217 (and $x269 $x233)))
 (let (($x316 (and $x217 $x176)))
 (let (($x546 (and $x316 $x22)))
 (let (($x420 (and $x204 $x546)))
 (let (($x218 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x395 (and $x218 $x420)))
 (let (($x125 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x11 (_ bv3 32))))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x52 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x125)))))))
 (let (($x252 (=> (and $x134 (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x298 $x125)))))))
 (let (($x111 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x140)))
 (let (($x194 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x39 (_ bv1 32))) (or false (or false (and true (or $x46 $x111)))))))
 (let (($x36 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x39 (_ bv1 32)))) (or false (or false (and true (or $x46 $x111)))))))
 (let (($x153 (and $x36 $x252)))
 (let (($x398 (and $x153 $x395)))
 (let (($x117 (=> $x398 $x34)))
 (not $x117)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var2966X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var2963X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2963X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2963X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var2960X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var2957X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var2957X.0 () (_ BitVec 32))
(declare-fun input.ind-%var2957X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x508 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2966X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x500 (concat ?x508 (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv4 32))))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2966X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x507 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2966X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x504 (concat ?x507 (concat ?x502 ?x500))))
 (let (($x509 (= ?x504 ?x504)))
 (let (($x475 (= (_ bv0 32) input.ind-%var2966X)))
 (let ((?x513 (ite $x475 (_ bv0 32) (_ bv1 32))))
 (let (($x514 (bvuge ?x513 (_ bv1 32))))
 (let (($x499 (=> $x514 $x509)))
 (let ((?x493 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2966X))))
 (let ((?x495 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv2 32))) ?x493)))
 (let ((?x486 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2966X (_ bv3 32))) ?x495)))
 (let (($x492 (= ?x486 ?x486)))
 (let (($x494 (=> $x514 $x492)))
 (let (($x481 (= $x514 $x514)))
 (let (($x175 (= false false)))
 (let (($x510 (= ?x513 (_ bv0 32))))
 (let (($x511 (=> $x510 $x175)))
 (let (($x478 (= $x510 $x510)))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv1 32))) (select input.dst.llvm-mem ?x11))))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x11 (_ bv2 32))) ?x261))))
 (let ((?x39 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x84 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv1 32))) (select input.dst.llvm-mem ?x39))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x39 (_ bv2 32))) ?x84))))
 (let (($x476 (= ?x350 ?x163)))
 (let (($x547 (and (and (and (and (and $x476 $x478) $x511) $x481) $x494) $x499)))
 (let (($x472 (= input.ind-%var2963X.2.1 input.ind-%var2963X.2.1)))
 (let (($x466 (bvuge input.ind-%var2963X.0 (_ bv1 32))))
 (let (($x464 (=> $x466 $x472)))
 (let (($x467 (= input.ind-%var2963X.2.0 input.ind-%var2963X.2.0)))
 (let (($x463 (=> $x466 $x467)))
 (let (($x490 (= $x466 $x466)))
 (let (($x482 (= input.ind-%var2963X.0 (_ bv0 32))))
 (let (($x468 (=> $x482 $x175)))
 (let (($x473 (= $x482 $x482)))
 (let (($x469 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x480 (and (and (and (and (and $x469 $x473) $x468) $x490) $x463) $x464)))
 (let (($x528 (and $x480 $x547)))
 (let (($x204 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x524 (and $x204 $x528)))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2960X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x452 (concat ?x443 (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv4 32))))))
 (let ((?x487 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2960X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x447 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var2960X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x445 (concat ?x447 (concat ?x487 ?x452))))
 (let (($x450 (= ?x445 ?x445)))
 (let (($x456 (= (_ bv0 32) input.ind-%var2960X)))
 (let ((?x453 (ite $x456 (_ bv0 32) (_ bv1 32))))
 (let (($x432 (bvuge ?x453 (_ bv1 32))))
 (let (($x444 (=> $x432 $x450)))
 (let ((?x439 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var2960X))))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv2 32))) ?x439)))
 (let ((?x437 (concat (select input.dst.llvm-mem (bvadd input.ind-%var2960X (_ bv3 32))) ?x433)))
 (let (($x142 (= ?x437 ?x437)))
 (let (($x45 (=> $x432 $x142)))
 (let (($x455 (= $x432 $x432)))
 (let (($x431 (= ?x453 (_ bv0 32))))
 (let (($x457 (=> $x431 $x175)))
 (let (($x454 (= $x431 $x431)))
 (let ((?x100 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x40 (concat ?x100 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x275 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x297 (concat ?x122 (concat ?x275 ?x40))))
 (let (($x429 (= ?x297 ?x163)))
 (let (($x527 (and (and (and (and (and $x429 $x454) $x457) $x455) $x45) $x444)))
 (let (($x402 (= input.ind-%var2957X.2.1 input.ind-%var2957X.2.1)))
 (let (($x401 (bvuge input.ind-%var2957X.0 (_ bv1 32))))
 (let (($x403 (=> $x401 $x402)))
 (let (($x412 (= input.ind-%var2957X.2.0 input.ind-%var2957X.2.0)))
 (let (($x425 (=> $x401 $x412)))
 (let (($x409 (= $x401 $x401)))
 (let (($x177 (= input.ind-%var2957X.0 (_ bv0 32))))
 (let (($x411 (=> $x177 $x175)))
 (let (($x408 (= $x177 $x177)))
 (let (($x91 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x428 (and (and (and (and (and $x91 $x408) $x411) $x409) $x425) $x403)))
 (let (($x461 (and $x428 $x527)))
 (let (($x120 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x489 (and $x120 $x461)))
 (let (($x426 (not true)))
 (let (($x74 (or (or $x426 $x489) $x524)))
 (let (($x118 (and true $x74)))
 (let (($x34 (= $x118 true)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x350 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x350 (_ bv4 32))))))
 (let ((?x335 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x350 (_ bv4 32)) (_ bv2 32))) ?x330)))
 (let ((?x375 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x350 (_ bv4 32)) (_ bv3 32))) ?x335)))
 (let ((?x380 (bvadd ?x375 (_ bv4 32))))
 (let ((?x386 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv1 32))) (select input.dst.llvm-mem ?x380))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x380 (_ bv2 32))) ?x386))))
 (let (($x354 (= (_ bv0 32) ?x366)))
 (let ((?x256 (ite $x354 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x256 (_ bv1 32))))
 (let (($x393 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x361 (= $x393 $x43)))
 (let (($x373 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x418 (and $x390 $x373)))
 (let (($x358 (=> $x418 $x361)))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv1 32))) (select input.dst.llvm-mem ?x375))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x375 (_ bv2 32))) ?x359))))
 (let (($x368 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x399)))
 (let (($x81 (=> $x418 $x368)))
 (let (($x387 (= ?x256 (_ bv0 32))))
 (let (($x407 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x344 (= $x407 $x387)))
 (let (($x410 (=> $x418 $x344)))
 (let (($x341 (= (_ bv0 32) ?x375)))
 (let ((?x340 (ite $x341 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (= ?x340 (_ bv0 32))))
 (let (($x342 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x382 (= $x342 $x337)))
 (let (($x108 (=> $x390 $x382)))
 (let (($x336 (bvuge ?x340 (_ bv1 32))))
 (let (($x346 (= $x373 $x336)))
 (let (($x376 (=> $x390 $x346)))
 (let (($x319 (and $x390 $x342)))
 (let (($x332 (=> $x319 $x175)))
 (let (($x62 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x379 (=> $x62 $x175)))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv1 32))) (select input.dst.llvm-mem ?x350))))
 (let ((?x73 (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x350 (_ bv2 32))) ?x333))))
 (let (($x369 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x73)))
 (let (($x388 (=> $x390 $x369)))
 (let (($x127 (= (_ bv0 32) ?x350)))
 (let ((?x377 (ite $x127 (_ bv0 32) (_ bv1 32))))
 (let (($x201 (bvuge ?x377 (_ bv1 32))))
 (let (($x394 (= $x390 $x201)))
 (let (($x345 (= ?x377 (_ bv0 32))))
 (let (($x406 (= $x62 $x345)))
 (let (($x54 (and (and (and (and (and (and $x406 $x394) $x388) $x379) $x332) $x376) $x108)))
 (let (($x419 (and (and (and $x54 $x410) $x81) $x358)))
 (let (($x392 (=> $x204 $x419)))
 (let (($x22 (= $x392 true)))
 (let ((?x7 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x297 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x297 (_ bv4 32))))))
 (let ((?x302 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x297 (_ bv4 32)) (_ bv2 32))) ?x7)))
 (let ((?x322 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x297 (_ bv4 32)) (_ bv3 32))) ?x302)))
 (let ((?x263 (bvadd ?x322 (_ bv4 32))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x331))))
 (let (($x314 (= (_ bv0 32) ?x271)))
 (let ((?x214 (ite $x314 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (bvuge ?x214 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x320 (= $x94 $x135)))
 (let (($x147 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x310 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x313 (and $x310 $x147)))
 (let (($x405 (=> $x313 $x320)))
 (let (($x324 (= ?x214 (_ bv0 32))))
 (let (($x227 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (= $x227 $x324)))
 (let (($x10 (=> $x313 $x268)))
 (let ((?x44 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv1 32))) (select input.dst.llvm-mem ?x322))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv2 32))) ?x44))))
 (let (($x240 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x60)))
 (let (($x123 (=> $x313 $x240)))
 (let (($x273 (= (_ bv0 32) ?x322)))
 (let ((?x306 (ite $x273 (_ bv0 32) (_ bv1 32))))
 (let (($x249 (= ?x306 (_ bv0 32))))
 (let (($x157 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x352 (= $x157 $x249)))
 (let (($x299 (=> $x310 $x352)))
 (let (($x129 (bvuge ?x306 (_ bv1 32))))
 (let (($x325 (= $x147 $x129)))
 (let (($x138 (=> $x310 $x325)))
 (let (($x77 (and $x310 $x157)))
 (let (($x102 (=> $x77 $x175)))
 (let (($x272 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x305 (=> $x272 $x175)))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x317))))
 (let (($x155 (= input.spec-%var-l-1.2.1.2.0 ?x245)))
 (let (($x294 (=> $x310 $x155)))
 (let (($x315 (= (_ bv0 32) ?x297)))
 (let ((?x296 (ite $x315 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x296 (_ bv1 32))))
 (let (($x334 (= $x310 $x80)))
 (let (($x279 (= ?x296 (_ bv0 32))))
 (let (($x203 (= $x272 $x279)))
 (let (($x287 (and (and (and (and (and (and $x203 $x334) $x294) $x305) $x102) $x138) $x299)))
 (let (($x246 (and (and (and $x287 $x123) $x10) $x405)))
 (let (($x311 (=> $x120 $x246)))
 (let (($x176 (= $x311 true)))
 (let ((?x149 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x167 (= (_ bv0 3) ?x149)))
 (let (($x233 (= $x167 true)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x140 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x192 (concat (select input.dst.llvm-mem ?x140) (concat ?x225 (concat ?x253 ?x58)))))
 (let (($x304 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x192)))
 (let (($x38 (=> $x204 $x304)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x216 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x216 (_ bv1 32))))
 (let (($x244 (= $x204 $x47)))
 (let (($x281 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x67 (=> $x281 $x175)))
 (let (($x145 (= ?x216 (_ bv0 32))))
 (let (($x78 (= $x281 $x145)))
 (let (($x250 (and (and (and $x78 $x67) $x244) $x38)))
 (let (($x86 (= $x250 true)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x187)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x171)))
 (let (($x195 (= input.spec-%var-l-1.2.0 ?x274)))
 (let (($x184 (=> $x120 $x195)))
 (let (($x5 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x257 (ite $x5 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x257 (_ bv1 32))))
 (let (($x238 (= $x120 $x202)))
 (let (($x188 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x68 (=> $x188 $x175)))
 (let (($x301 (= ?x257 (_ bv0 32))))
 (let (($x83 (= $x188 $x301)))
 (let (($x229 (and (and (and $x83 $x68) $x238) $x184)))
 (let (($x200 (= $x229 true)))
 (let (($x280 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x56 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x189 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x56) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x56))))
 (let (($x128 (and true $x189)))
 (let (($x156 (and $x189 $x128)))
 (let (($x28 (= (bvand ?x163 (_ bv4294967288 32)) ?x163)))
 (let (($x161 (= (bvand ?x11 (_ bv4294967292 32)) ?x11)))
 (let (($x208 (and $x161 $x28)))
 (let (($x182 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x11 (bvsub ?x11 (_ bv4 32))) (bvult ?x11 (bvsub ?x11 (_ bv4 32))))))
 (let (($x25 (and (and (and (and (and $x128 $x182) $x161) $x208) $x156) $x280)))
 (let (($x134 (not $x101)))
 (let (($x251 (=> $x134 $x25)))
 (let (($x113 (= $x251 true)))
 (let (($x205 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x168 (= $x205 true)))
 (let (($x286 (= $x134 true)))
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x159 (= (_ bv0 32) ?x21)))
 (let ((?x76 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x284 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x76)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x207 (and $x37 $x284)))
 (let (($x243 (and $x207 $x159)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (and $x97 $x243)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x57 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x26)))))))
 (let (($x258 (and $x57 $x144)))
 (let (($x260 (= $x258 true)))
 (let ((?x158 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x248 (bvneg ?x158)))
 (let (($x185 (= ?x248 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x219 (= $x185 true)))
 (let (($x193 (and $x219 $x260)))
 (let (($x114 (and $x193 $x286)))
 (let (($x141 (and $x114 $x168)))
 (let (($x213 (and $x141 $x113)))
 (let (($x13 (and $x213 $x200)))
 (let (($x269 (and $x13 $x86)))
 (let (($x217 (and $x269 $x233)))
 (let (($x316 (and $x217 $x176)))
 (let (($x546 (and $x316 $x22)))
 (let (($x420 (and $x204 $x546)))
 (let (($x218 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x395 (and $x218 $x420)))
 (let (($x125 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x11 (_ bv3 32))))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x52 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x125)))))))
 (let (($x252 (=> (and $x134 (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x298 $x125)))))))
 (let (($x111 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x140)))
 (let (($x194 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x39 (_ bv1 32))) (or false (or false (and true (or $x46 $x111)))))))
 (let (($x36 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x39 (_ bv1 32)))) (or false (or false (and true (or $x46 $x111)))))))
 (let (($x153 (and $x36 $x252)))
 (let (($x398 (and $x153 $x395)))
 (let (($x117 (=> $x398 $x34)))
 (not $x117)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 51
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x196 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x259))))
 (let ((?x336 ((_ extract 2 0) ?x79)))
 (let (($x346 (= (_ bv0 3) ?x336)))
 (let (($x376 (= $x346 true)))
 (let ((?x154 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv1 32))) (select input.dst.llvm-mem ?x154))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv2 32))) ?x299))))
 (let ((?x331 (bvadd ?x295 (_ bv4 32))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv1 32))) (select input.dst.llvm-mem ?x331))))
 (let ((?x135 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv2 32))) ?x214))))
 (let (($x320 (= (_ bv0 32) ?x135)))
 (let ((?x405 (ite $x320 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (= ?x405 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x364 (= $x332 $x246)))
 (let (($x333 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x201 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x369 (and $x201 $x333)))
 (let (($x373 (=> $x369 $x364)))
 (let (($x316 (bvuge ?x405 (_ bv1 32))))
 (let (($x348 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x342 (= $x348 $x316)))
 (let (($x319 (=> $x369 $x342)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x227))))
 (let (($x372 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x49)))
 (let (($x379 (=> $x369 $x372)))
 (let (($x64 (= (_ bv0 32) ?x295)))
 (let ((?x374 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x385 (bvuge ?x374 (_ bv1 32))))
 (let (($x96 (= $x333 $x385)))
 (let (($x73 (=> $x201 $x96)))
 (let (($x65 (= false false)))
 (let (($x318 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x71 (and $x201 $x318)))
 (let (($x378 (=> $x71 $x65)))
 (let (($x104 (= ?x374 (_ bv0 32))))
 (let (($x321 (= $x318 $x104)))
 (let (($x92 (=> $x201 $x321)))
 (let ((?x327 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x170 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x170) (concat ?x322 (concat ?x326 ?x327)))))
 (let (($x14 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x174 (=> $x201 $x14)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x228 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x228 (_ bv1 32))))
 (let (($x394 (= $x201 $x312)))
 (let (($x345 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x390 (=> $x345 $x65)))
 (let (($x231 (= ?x228 (_ bv0 32))))
 (let (($x406 (= $x345 $x231)))
 (let (($x384 (and (and (and (and (and (and $x406 $x390) $x394) $x174) $x92) $x378) $x73)))
 (let (($x330 (and (and (and $x384 $x379) $x319) $x373)))
 (let (($x335 (= $x330 true)))
 (let (($x124 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x276 (= $x124 $x316)))
 (let (($x250 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x24 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x149 (and $x24 $x250)))
 (let (($x62 (=> $x149 $x276)))
 (let (($x308 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x311 (= $x308 $x246)))
 (let (($x176 (=> $x149 $x311)))
 (let (($x277 (= input.spec-%var-l-1.2.1.2.0 ?x49)))
 (let (($x48 (=> $x149 $x277)))
 (let (($x60 (= $x250 $x385)))
 (let (($x240 (=> $x24 $x60)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x292 (= $x78 $x104)))
 (let (($x44 (=> $x24 $x292)))
 (let (($x325 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x138 (=> $x24 $x325)))
 (let (($x82 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x180 (= $x82 $x231)))
 (let (($x132 (and (and (and (=> $x82 $x65) (=> (and $x24 $x78) $x65)) (= $x24 $x312)) $x180)))
 (let (($x343 (and (and (and (and (and (and $x132 $x138) $x44) $x240) $x48) $x176) $x62)))
 (let (($x350 (= $x343 true)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x244 (concat ?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x130 (concat ?x225 (concat ?x20 ?x244))))
 (let ((?x297 (bvadd ?x130 (_ bv4 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x203))))
 (let (($x211 (= (_ bv0 32) ?x262)))
 (let ((?x191 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x317 (bvuge ?x191 (_ bv1 32))))
 (let (($x291 (= $x124 $x317)))
 (let (($x245 (=> $x149 $x291)))
 (let (($x33 (= ?x191 (_ bv0 32))))
 (let (($x107 (= $x308 $x33)))
 (let (($x254 (=> $x149 $x107)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x272))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x290)))
 (let (($x237 (=> $x149 $x100)))
 (let (($x253 (= (_ bv0 32) ?x130)))
 (let ((?x58 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x58 (_ bv1 32))))
 (let (($x269 (= $x250 $x86)))
 (let (($x164 (=> $x24 $x269)))
 (let (($x304 (and $x24 $x78)))
 (let (($x38 (=> $x304 $x65)))
 (let (($x121 (= ?x58 (_ bv0 32))))
 (let (($x126 (= $x78 $x121)))
 (let (($x192 (=> $x24 $x126)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x274)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x229)))
 (let (($x281 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x216 (=> $x24 $x281)))
 (let (($x202 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x238 (ite $x202 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x238 (_ bv1 32))))
 (let (($x232 (= $x24 $x323)))
 (let (($x305 (and (and (and (and (= $x82 (= ?x238 (_ bv0 32))) (=> $x82 $x65)) $x232) $x216) $x192)))
 (let (($x102 (and (and (and (and (and $x305 $x38) $x164) $x237) $x254) $x245)))
 (let (($x247 (= $x102 true)))
 (let ((?x257 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x301 (= (_ bv0 3) ?x257)))
 (let (($x83 (= $x301 true)))
 (let (($x222 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x285 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x270 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285))))
 (let (($x61 (and true $x270)))
 (let (($x156 (and $x270 $x61)))
 (let (($x208 (= (bvand ?x79 (_ bv4294967288 32)) ?x79)))
 (let (($x162 (= (bvand ?x196 (_ bv4294967292 32)) ?x196)))
 (let (($x152 (and $x162 $x208)))
 (let (($x223 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x196 (bvsub ?x196 (_ bv4 32))) (bvult ?x196 (bvsub ?x196 (_ bv4 32))))))
 (let (($x213 (and (and (and (and (and $x61 $x223) $x162) $x152) $x156) $x222)))
 (let (($x134 (not $x101)))
 (let (($x220 (=> $x134 $x213)))
 (let (($x188 (= $x220 true)))
 (let (($x63 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x56 (= $x63 true)))
 (let (($x205 (= $x134 true)))
 (let (($x286 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x114 (= $x286 true)))
 (let ((?x207 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x207)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x76 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x284 (and $x97 $x76)))
 (let (($x159 (and $x284 $x21)))
 (let (($x19 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x243 (and $x19 $x159)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x26)))))))
 (let (($x144 (and $x6 $x243)))
 (let (($x258 (= $x144 true)))
 (let (($x248 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= $x248 true)))
 (let (($x260 (and $x137 $x258)))
 (let (($x190 (and $x260 $x114)))
 (let (($x168 (and $x190 $x205)))
 (let (($x293 (and $x168 $x56)))
 (let (($x234 (and $x293 $x188)))
 (let (($x175 (and $x234 $x83)))
 (let (($x147 (and $x175 $x247)))
 (let (($x127 (and $x147 $x350)))
 (let (($x375 (and $x127 $x335)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x341 (and $x41 $x375)))
 (let (($x59 (bvugt ?x196 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x196 (_ bv3 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x218 (=> (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x59)))))))
 (let (($x179 (=> (and $x134 (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x89 $x59)))))))
 (let (($x115 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x170)))
 (let (($x210 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32))) (or false (or false (and true (or $x173 $x115)))))))
 (let (($x53 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32)))) (or false (or false (and true (or $x173 $x115)))))))
 (let (($x23 (and $x53 $x179)))
 (let (($x340 (and $x23 $x341)))
 (let (($x362 (=> $x340 $x376)))
 (not $x362))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x196 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x259))))
 (let ((?x336 ((_ extract 2 0) ?x79)))
 (let (($x346 (= (_ bv0 3) ?x336)))
 (let (($x376 (= $x346 true)))
 (let ((?x154 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x299 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv1 32))) (select input.dst.llvm-mem ?x154))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x154 (_ bv2 32))) ?x299))))
 (let ((?x331 (bvadd ?x295 (_ bv4 32))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv1 32))) (select input.dst.llvm-mem ?x331))))
 (let ((?x135 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv2 32))) ?x214))))
 (let (($x320 (= (_ bv0 32) ?x135)))
 (let ((?x405 (ite $x320 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (= ?x405 (_ bv0 32))))
 (let (($x332 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x364 (= $x332 $x246)))
 (let (($x333 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x201 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x369 (and $x201 $x333)))
 (let (($x373 (=> $x369 $x364)))
 (let (($x316 (bvuge ?x405 (_ bv1 32))))
 (let (($x348 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x342 (= $x348 $x316)))
 (let (($x319 (=> $x369 $x342)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem ?x295))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x295 (_ bv2 32))) ?x227))))
 (let (($x372 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x49)))
 (let (($x379 (=> $x369 $x372)))
 (let (($x64 (= (_ bv0 32) ?x295)))
 (let ((?x374 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x385 (bvuge ?x374 (_ bv1 32))))
 (let (($x96 (= $x333 $x385)))
 (let (($x73 (=> $x201 $x96)))
 (let (($x65 (= false false)))
 (let (($x318 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x71 (and $x201 $x318)))
 (let (($x378 (=> $x71 $x65)))
 (let (($x104 (= ?x374 (_ bv0 32))))
 (let (($x321 (= $x318 $x104)))
 (let (($x92 (=> $x201 $x321)))
 (let ((?x327 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x322 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x170 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x170) (concat ?x322 (concat ?x326 ?x327)))))
 (let (($x14 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x174 (=> $x201 $x14)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x228 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x312 (bvuge ?x228 (_ bv1 32))))
 (let (($x394 (= $x201 $x312)))
 (let (($x345 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x390 (=> $x345 $x65)))
 (let (($x231 (= ?x228 (_ bv0 32))))
 (let (($x406 (= $x345 $x231)))
 (let (($x384 (and (and (and (and (and (and $x406 $x390) $x394) $x174) $x92) $x378) $x73)))
 (let (($x330 (and (and (and $x384 $x379) $x319) $x373)))
 (let (($x335 (= $x330 true)))
 (let (($x124 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x276 (= $x124 $x316)))
 (let (($x250 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x24 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x149 (and $x24 $x250)))
 (let (($x62 (=> $x149 $x276)))
 (let (($x308 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x311 (= $x308 $x246)))
 (let (($x176 (=> $x149 $x311)))
 (let (($x277 (= input.spec-%var-l-1.2.1.2.0 ?x49)))
 (let (($x48 (=> $x149 $x277)))
 (let (($x60 (= $x250 $x385)))
 (let (($x240 (=> $x24 $x60)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x292 (= $x78 $x104)))
 (let (($x44 (=> $x24 $x292)))
 (let (($x325 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x138 (=> $x24 $x325)))
 (let (($x82 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x180 (= $x82 $x231)))
 (let (($x132 (and (and (and (=> $x82 $x65) (=> (and $x24 $x78) $x65)) (= $x24 $x312)) $x180)))
 (let (($x343 (and (and (and (and (and (and $x132 $x138) $x44) $x240) $x48) $x176) $x62)))
 (let (($x350 (= $x343 true)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x244 (concat ?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x225 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x130 (concat ?x225 (concat ?x20 ?x244))))
 (let ((?x297 (bvadd ?x130 (_ bv4 32))))
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv1 32))) (select input.dst.llvm-mem ?x297))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x297 (_ bv2 32))) ?x203))))
 (let (($x211 (= (_ bv0 32) ?x262)))
 (let ((?x191 (ite $x211 (_ bv0 32) (_ bv1 32))))
 (let (($x317 (bvuge ?x191 (_ bv1 32))))
 (let (($x291 (= $x124 $x317)))
 (let (($x245 (=> $x149 $x291)))
 (let (($x33 (= ?x191 (_ bv0 32))))
 (let (($x107 (= $x308 $x33)))
 (let (($x254 (=> $x149 $x107)))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x272))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.0 ?x290)))
 (let (($x237 (=> $x149 $x100)))
 (let (($x253 (= (_ bv0 32) ?x130)))
 (let ((?x58 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x86 (bvuge ?x58 (_ bv1 32))))
 (let (($x269 (= $x250 $x86)))
 (let (($x164 (=> $x24 $x269)))
 (let (($x304 (and $x24 $x78)))
 (let (($x38 (=> $x304 $x65)))
 (let (($x121 (= ?x58 (_ bv0 32))))
 (let (($x126 (= $x78 $x121)))
 (let (($x192 (=> $x24 $x126)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x274)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x229)))
 (let (($x281 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x216 (=> $x24 $x281)))
 (let (($x202 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x238 (ite $x202 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x238 (_ bv1 32))))
 (let (($x232 (= $x24 $x323)))
 (let (($x305 (and (and (and (and (= $x82 (= ?x238 (_ bv0 32))) (=> $x82 $x65)) $x232) $x216) $x192)))
 (let (($x102 (and (and (and (and (and $x305 $x38) $x164) $x237) $x254) $x245)))
 (let (($x247 (= $x102 true)))
 (let ((?x257 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x301 (= (_ bv0 3) ?x257)))
 (let (($x83 (= $x301 true)))
 (let (($x222 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x285 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x270 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x285))))
 (let (($x61 (and true $x270)))
 (let (($x156 (and $x270 $x61)))
 (let (($x208 (= (bvand ?x79 (_ bv4294967288 32)) ?x79)))
 (let (($x162 (= (bvand ?x196 (_ bv4294967292 32)) ?x196)))
 (let (($x152 (and $x162 $x208)))
 (let (($x223 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x196 (bvsub ?x196 (_ bv4 32))) (bvult ?x196 (bvsub ?x196 (_ bv4 32))))))
 (let (($x213 (and (and (and (and (and $x61 $x223) $x162) $x152) $x156) $x222)))
 (let (($x134 (not $x101)))
 (let (($x220 (=> $x134 $x213)))
 (let (($x188 (= $x220 true)))
 (let (($x63 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x56 (= $x63 true)))
 (let (($x205 (= $x134 true)))
 (let (($x286 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x114 (= $x286 true)))
 (let ((?x207 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x207)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x76 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x284 (and $x97 $x76)))
 (let (($x159 (and $x284 $x21)))
 (let (($x19 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x243 (and $x19 $x159)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x282 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x282 $x26)))))))
 (let (($x144 (and $x6 $x243)))
 (let (($x258 (= $x144 true)))
 (let (($x248 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x137 (= $x248 true)))
 (let (($x260 (and $x137 $x258)))
 (let (($x190 (and $x260 $x114)))
 (let (($x168 (and $x190 $x205)))
 (let (($x293 (and $x168 $x56)))
 (let (($x234 (and $x293 $x188)))
 (let (($x175 (and $x234 $x83)))
 (let (($x147 (and $x175 $x247)))
 (let (($x127 (and $x147 $x350)))
 (let (($x375 (and $x127 $x335)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x341 (and $x41 $x375)))
 (let (($x59 (bvugt ?x196 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x196 (_ bv3 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x218 (=> (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x89 $x59)))))))
 (let (($x179 (=> (and $x134 (bvule ?x196 (bvsub (bvadd ?x196 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x89 $x59)))))))
 (let (($x115 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x170)))
 (let (($x210 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32))) (or false (or false (and true (or $x173 $x115)))))))
 (let (($x53 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x154 (_ bv1 32)))) (or false (or false (and true (or $x173 $x115)))))))
 (let (($x23 (and $x53 $x179)))
 (let (($x340 (and $x23 $x341)))
 (let (($x362 (=> $x340 $x376)))
 (not $x362))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 52
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x306 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x327 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x172 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x172) (concat ?x327 (concat ?x322 ?x306)))))
 (let ((?x362 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x129)))
 (let (($x337 (= (_ bv0 32) ?x362)))
 (let (($x88 (= $x337 true)))
 (let ((?x46 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv1 32))) (select input.dst.llvm-mem ?x46))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv2 32))) ?x287))))
 (let ((?x49 (bvadd ?x283 (_ bv4 32))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv1 32))) (select input.dst.llvm-mem ?x49))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv2 32))) ?x331))))
 (let (($x266 (= (_ bv0 32) ?x314)))
 (let ((?x214 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (= ?x214 (_ bv0 32))))
 (let (($x363 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x348 (= $x363 $x10)))
 (let (($x378 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x27 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x96 (and $x27 $x378)))
 (let (($x342 (=> $x96 $x348)))
 (let (($x405 (bvuge ?x214 (_ bv1 32))))
 (let (($x372 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x372 $x405)))
 (let (($x404 (=> $x96 $x379)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv1 32))) (select input.dst.llvm-mem ?x283))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv2 32))) ?x239))))
 (let (($x384 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x123)))
 (let (($x369 (=> $x96 $x384)))
 (let (($x295 (= (_ bv0 32) ?x283)))
 (let ((?x64 (ite $x295 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x64 (_ bv1 32))))
 (let (($x351 (= $x378 $x44)))
 (let (($x333 (=> $x27 $x351)))
 (let (($x24 (= false false)))
 (let (($x318 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x150 (and $x27 $x318)))
 (let (($x71 (=> $x150 $x24)))
 (let (($x374 (= ?x64 (_ bv0 32))))
 (let (($x321 (= $x318 $x374)))
 (let (($x92 (=> $x27 $x321)))
 (let (($x174 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x347 (=> $x27 $x174)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x230 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x230 (_ bv1 32))))
 (let (($x417 (= $x27 $x328)))
 (let (($x400 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x394 (=> $x400 $x24)))
 (let (($x180 (= ?x230 (_ bv0 32))))
 (let (($x201 (= $x400 $x180)))
 (let (($x330 (and (and (and (and (and (and $x201 $x394) $x417) $x347) $x92) $x71) $x333)))
 (let (($x341 (and (and (and $x330 $x369) $x404) $x342)))
 (let (($x340 (= $x341 true)))
 (let (($x191 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x246 (= $x191 $x405)))
 (let (($x38 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x269 (and $x232 $x38)))
 (let (($x311 (=> $x269 $x246)))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x135 (= $x100 $x10)))
 (let (($x320 (=> $x269 $x135)))
 (let (($x227 (= input.spec-%var-l-1.2.1.2.0 ?x123)))
 (let (($x224 (=> $x269 $x227)))
 (let (($x303 (= $x38 $x44)))
 (let (($x385 (=> $x232 $x303)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x78 $x374)))
 (let (($x292 (=> $x232 $x104)))
 (let (($x325 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x138 (=> $x232 $x325)))
 (let (($x238 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (= $x238 $x180)))
 (let (($x316 (and (and (and (=> $x238 $x24) (=> (and $x232 $x78) $x24)) (= $x232 $x328)) $x132)))
 (let (($x377 (and (and (and (and (and (and $x316 $x138) $x292) $x385) $x224) $x320) $x311)))
 (let (($x345 (= $x377 true)))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x20 (concat ?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x130 (concat ?x55 (concat ?x47 ?x20))))
 (let ((?x237 (bvadd ?x130 (_ bv4 32))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x297))))
 (let (($x315 (= (_ bv0 32) ?x279)))
 (let ((?x203 (ite $x315 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x203 (_ bv1 32))))
 (let (($x107 (= $x191 $x33)))
 (let (($x254 (=> $x269 $x107)))
 (let (($x334 (= ?x203 (_ bv0 32))))
 (let (($x262 (= $x100 $x334)))
 (let (($x211 (=> $x269 $x262)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x307))))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.0 ?x233)))
 (let (($x122 (=> $x269 $x272)))
 (let (($x253 (= (_ bv0 32) ?x130)))
 (let ((?x58 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x58 (_ bv1 32))))
 (let (($x250 (= $x38 $x8)))
 (let (($x86 (=> $x232 $x250)))
 (let (($x305 (and $x232 $x78)))
 (let (($x304 (=> $x305 $x24)))
 (let (($x121 (= ?x58 (_ bv0 32))))
 (let (($x126 (= $x78 $x121)))
 (let (($x192 (=> $x232 $x126)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x187)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x274)))
 (let (($x216 (= input.spec-%var-l-1.2.0 ?x281)))
 (let (($x12 (=> $x232 $x216)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x65 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x294 (bvuge ?x65 (_ bv1 32))))
 (let (($x267 (= $x232 $x294)))
 (let (($x291 (and (and (and (and (= $x238 (= ?x65 (_ bv0 32))) (=> $x238 $x24)) $x267) $x12) $x192)))
 (let (($x109 (and (and (and (and (and $x291 $x304) $x86) $x122) $x211) $x254)))
 (let (($x228 (= $x109 true)))
 (let (($x68 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x82 (= $x68 true)))
 (let ((?x5 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x257 (= (_ bv0 3) ?x5)))
 (let (($x301 (= $x257 true)))
 (let (($x152 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x293 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x235 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x293) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x293))))
 (let (($x270 (and true $x235)))
 (let (($x28 (and $x235 $x270)))
 (let ((?x197 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv1 32))) (select input.dst.llvm-mem ?x197))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv2 32))) ?x163))))
 (let (($x79 (= (bvand ?x9 (_ bv4294967288 32)) ?x9)))
 (let (($x161 (= (bvand ?x197 (_ bv4294967292 32)) ?x197)))
 (let (($x66 (and $x161 $x79)))
 (let (($x242 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x197 (bvsub ?x197 (_ bv4 32))) (bvult ?x197 (bvsub ?x197 (_ bv4 32))))))
 (let (($x222 (and (and (and (and (and $x270 $x242) $x161) $x66) $x28) $x152)))
 (let (($x134 (not $x101)))
 (let (($x213 (=> $x134 $x222)))
 (let (($x220 (= $x213 true)))
 (let (($x141 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x63 (= $x141 true)))
 (let (($x190 (= $x134 true)))
 (let (($x193 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x286 (= $x193 true)))
 (let ((?x207 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x207)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x76 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x284 (and $x97 $x76)))
 (let (($x159 (and $x284 $x21)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x243 (and $x133 $x159)))
 (let (($x131 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x131)))))))
 (let (($x144 (and $x19 $x243)))
 (let (($x258 (= $x144 true)))
 (let (($x114 (and $x258 $x286)))
 (let (($x205 (and $x114 $x190)))
 (let (($x56 (and $x205 $x63)))
 (let (($x188 (and $x56 $x220)))
 (let (($x83 (and $x188 $x301)))
 (let (($x120 (and $x83 $x82)))
 (let (($x312 (and $x120 $x228)))
 (let (($x406 (and $x312 $x345)))
 (let (($x336 (and $x406 $x340)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x346 (and $x248 $x336)))
 (let (($x252 (bvugt ?x197 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x197 (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x41 (=> (bvule ?x197 (bvsub (bvadd ?x197 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x252)))))))
 (let (($x32 (=> (and $x134 (bvule ?x197 (bvsub (bvadd ?x197 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x52 $x252)))))))
 (let (($x36 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x194 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x172)))
 (let (($x125 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32))) (or false (or false (and true (or $x194 $x36)))))))
 (let (($x140 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32)))) (or false (or false (and true (or $x194 $x36)))))))
 (let (($x116 (and $x140 $x32)))
 (let (($x376 (and $x116 $x346)))
 (let (($x106 (=> $x376 $x88)))
 (not $x106))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x306 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x322 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x327 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x172 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x129 (concat (select input.dst.llvm-mem ?x172) (concat ?x327 (concat ?x322 ?x306)))))
 (let ((?x362 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x129)))
 (let (($x337 (= (_ bv0 32) ?x362)))
 (let (($x88 (= $x337 true)))
 (let ((?x46 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv1 32))) (select input.dst.llvm-mem ?x46))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x46 (_ bv2 32))) ?x287))))
 (let ((?x49 (bvadd ?x283 (_ bv4 32))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv1 32))) (select input.dst.llvm-mem ?x49))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv2 32))) ?x331))))
 (let (($x266 (= (_ bv0 32) ?x314)))
 (let ((?x214 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x10 (= ?x214 (_ bv0 32))))
 (let (($x363 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x348 (= $x363 $x10)))
 (let (($x378 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x27 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x96 (and $x27 $x378)))
 (let (($x342 (=> $x96 $x348)))
 (let (($x405 (bvuge ?x214 (_ bv1 32))))
 (let (($x372 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x372 $x405)))
 (let (($x404 (=> $x96 $x379)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv1 32))) (select input.dst.llvm-mem ?x283))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x283 (_ bv2 32))) ?x239))))
 (let (($x384 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x123)))
 (let (($x369 (=> $x96 $x384)))
 (let (($x295 (= (_ bv0 32) ?x283)))
 (let ((?x64 (ite $x295 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x64 (_ bv1 32))))
 (let (($x351 (= $x378 $x44)))
 (let (($x333 (=> $x27 $x351)))
 (let (($x24 (= false false)))
 (let (($x318 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x150 (and $x27 $x318)))
 (let (($x71 (=> $x150 $x24)))
 (let (($x374 (= ?x64 (_ bv0 32))))
 (let (($x321 (= $x318 $x374)))
 (let (($x92 (=> $x27 $x321)))
 (let (($x174 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x129)))
 (let (($x347 (=> $x27 $x174)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x230 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x328 (bvuge ?x230 (_ bv1 32))))
 (let (($x417 (= $x27 $x328)))
 (let (($x400 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x394 (=> $x400 $x24)))
 (let (($x180 (= ?x230 (_ bv0 32))))
 (let (($x201 (= $x400 $x180)))
 (let (($x330 (and (and (and (and (and (and $x201 $x394) $x417) $x347) $x92) $x71) $x333)))
 (let (($x341 (and (and (and $x330 $x369) $x404) $x342)))
 (let (($x340 (= $x341 true)))
 (let (($x191 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x246 (= $x191 $x405)))
 (let (($x38 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x269 (and $x232 $x38)))
 (let (($x311 (=> $x269 $x246)))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x135 (= $x100 $x10)))
 (let (($x320 (=> $x269 $x135)))
 (let (($x227 (= input.spec-%var-l-1.2.1.2.0 ?x123)))
 (let (($x224 (=> $x269 $x227)))
 (let (($x303 (= $x38 $x44)))
 (let (($x385 (=> $x232 $x303)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x104 (= $x78 $x374)))
 (let (($x292 (=> $x232 $x104)))
 (let (($x325 (= input.spec-%var-l-1.2.0 ?x129)))
 (let (($x138 (=> $x232 $x325)))
 (let (($x238 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (= $x238 $x180)))
 (let (($x316 (and (and (and (=> $x238 $x24) (=> (and $x232 $x78) $x24)) (= $x232 $x328)) $x132)))
 (let (($x377 (and (and (and (and (and (and $x316 $x138) $x292) $x385) $x224) $x320) $x311)))
 (let (($x345 (= $x377 true)))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x20 (concat ?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x130 (concat ?x55 (concat ?x47 ?x20))))
 (let ((?x237 (bvadd ?x130 (_ bv4 32))))
 (let ((?x297 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv1 32))) (select input.dst.llvm-mem ?x237))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x237 (_ bv2 32))) ?x297))))
 (let (($x315 (= (_ bv0 32) ?x279)))
 (let ((?x203 (ite $x315 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x203 (_ bv1 32))))
 (let (($x107 (= $x191 $x33)))
 (let (($x254 (=> $x269 $x107)))
 (let (($x334 (= ?x203 (_ bv0 32))))
 (let (($x262 (= $x100 $x334)))
 (let (($x211 (=> $x269 $x262)))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x307))))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.0 ?x233)))
 (let (($x122 (=> $x269 $x272)))
 (let (($x253 (= (_ bv0 32) ?x130)))
 (let ((?x58 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x58 (_ bv1 32))))
 (let (($x250 (= $x38 $x8)))
 (let (($x86 (=> $x232 $x250)))
 (let (($x305 (and $x232 $x78)))
 (let (($x304 (=> $x305 $x24)))
 (let (($x121 (= ?x58 (_ bv0 32))))
 (let (($x126 (= $x78 $x121)))
 (let (($x192 (=> $x232 $x126)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x187)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x274)))
 (let (($x216 (= input.spec-%var-l-1.2.0 ?x281)))
 (let (($x12 (=> $x232 $x216)))
 (let (($x146 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x65 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x294 (bvuge ?x65 (_ bv1 32))))
 (let (($x267 (= $x232 $x294)))
 (let (($x291 (and (and (and (and (= $x238 (= ?x65 (_ bv0 32))) (=> $x238 $x24)) $x267) $x12) $x192)))
 (let (($x109 (and (and (and (and (and $x291 $x304) $x86) $x122) $x211) $x254)))
 (let (($x228 (= $x109 true)))
 (let (($x68 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x82 (= $x68 true)))
 (let ((?x5 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x257 (= (_ bv0 3) ?x5)))
 (let (($x301 (= $x257 true)))
 (let (($x152 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x293 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x235 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x293) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x293))))
 (let (($x270 (and true $x235)))
 (let (($x28 (and $x235 $x270)))
 (let ((?x197 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x163 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv1 32))) (select input.dst.llvm-mem ?x197))))
 (let ((?x9 (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x197 (_ bv2 32))) ?x163))))
 (let (($x79 (= (bvand ?x9 (_ bv4294967288 32)) ?x9)))
 (let (($x161 (= (bvand ?x197 (_ bv4294967292 32)) ?x197)))
 (let (($x66 (and $x161 $x79)))
 (let (($x242 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x197 (bvsub ?x197 (_ bv4 32))) (bvult ?x197 (bvsub ?x197 (_ bv4 32))))))
 (let (($x222 (and (and (and (and (and $x270 $x242) $x161) $x66) $x28) $x152)))
 (let (($x134 (not $x101)))
 (let (($x213 (=> $x134 $x222)))
 (let (($x220 (= $x213 true)))
 (let (($x141 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x63 (= $x141 true)))
 (let (($x190 (= $x134 true)))
 (let (($x193 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x286 (= $x193 true)))
 (let ((?x207 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x207)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x76 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x284 (and $x97 $x76)))
 (let (($x159 (and $x284 $x21)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x243 (and $x133 $x159)))
 (let (($x131 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x131)))))))
 (let (($x144 (and $x19 $x243)))
 (let (($x258 (= $x144 true)))
 (let (($x114 (and $x258 $x286)))
 (let (($x205 (and $x114 $x190)))
 (let (($x56 (and $x205 $x63)))
 (let (($x188 (and $x56 $x220)))
 (let (($x83 (and $x188 $x301)))
 (let (($x120 (and $x83 $x82)))
 (let (($x312 (and $x120 $x228)))
 (let (($x406 (and $x312 $x345)))
 (let (($x336 (and $x406 $x340)))
 (let (($x248 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x346 (and $x248 $x336)))
 (let (($x252 (bvugt ?x197 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x197 (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x41 (=> (bvule ?x197 (bvsub (bvadd ?x197 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x52 $x252)))))))
 (let (($x32 (=> (and $x134 (bvule ?x197 (bvsub (bvadd ?x197 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x52 $x252)))))))
 (let (($x36 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x194 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x172)))
 (let (($x125 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32))) (or false (or false (and true (or $x194 $x36)))))))
 (let (($x140 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x46 (_ bv1 32)))) (or false (or false (and true (or $x194 $x36)))))))
 (let (($x116 (and $x140 $x32)))
 (let (($x376 (and $x116 $x346)))
 (let (($x106 (=> $x376 $x88)))
 (not $x106))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv1310712 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv1310712 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv128 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16777212 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16777212 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv16777215 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 53
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x178 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x11 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x313 (concat (select input.dst.llvm-mem ?x11) (concat ?x276 (concat ?x129 ?x178)))))
 (let ((?x338 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x313)))
 (let (($x357 (= (_ bv0 32) ?x338)))
 (let (($x391 (= $x357 true)))
 (let (($x341 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x384 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x92 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x388 (and $x92 $x384)))
 (let (($x362 (and $x388 $x341)))
 (let (($x337 (not $x362)))
 (let (($x363 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x346 (and $x388 $x363)))
 (let (($x376 (not $x346)))
 (let ((?x173 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x352))))
 (let ((?x271 (bvadd ?x292 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x17))))
 (let (($x10 (= (_ bv0 32) ?x214)))
 (let ((?x135 (ite $x10 (_ bv0 32) (_ bv1 32))))
 (let (($x320 (= ?x135 (_ bv0 32))))
 (let (($x340 (= $x341 $x320)))
 (let (($x336 (=> $x388 $x340)))
 (let (($x246 (bvuge ?x135 (_ bv1 32))))
 (let (($x348 (= $x363 $x246)))
 (let (($x342 (=> $x388 $x348)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv1 32))) (select input.dst.llvm-mem ?x292))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv2 32))) ?x60))))
 (let (($x379 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x350)))
 (let (($x404 (=> $x388 $x379)))
 (let (($x62 (= (_ bv0 32) ?x292)))
 (let ((?x44 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x309 (bvuge ?x44 (_ bv1 32))))
 (let (($x369 (= $x384 $x309)))
 (let (($x335 (=> $x92 $x369)))
 (let (($x232 (= false false)))
 (let (($x351 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x96 (and $x92 $x351)))
 (let (($x73 (=> $x96 $x232)))
 (let (($x303 (= ?x44 (_ bv0 32))))
 (let (($x333 (= $x351 $x303)))
 (let (($x330 (=> $x92 $x333)))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x313)))
 (let (($x373 (=> $x92 $x71)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x326 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x326 (_ bv1 32))))
 (let (($x364 (= $x92 $x327)))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x321 (=> $x70 $x232)))
 (let (($x322 (= ?x326 (_ bv0 32))))
 (let (($x318 (= $x70 $x322)))
 (let (($x137 (and (and (and (and (and (and $x318 $x321) $x364) $x373) $x330) $x73) $x335)))
 (let (($x151 (and (and (and (and (and $x137 $x404) $x342) $x336) $x376) $x337)))
 (let (($x407 (= $x151 true)))
 (let (($x203 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x311 (= $x203 $x246)))
 (let (($x304 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x267 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x250 (and $x267 $x304)))
 (let (($x377 (=> $x250 $x311)))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x127 (= $x272 $x320)))
 (let (($x405 (=> $x250 $x127)))
 (let (($x49 (= input.spec-%var-l-1.2.1.2.0 ?x350)))
 (let (($x268 (=> $x250 $x49)))
 (let (($x50 (= $x304 $x309)))
 (let (($x329 (=> $x267 $x50)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x385 (= $x78 $x303)))
 (let (($x343 (=> $x267 $x385)))
 (let (($x249 (= input.spec-%var-l-1.2.0 ?x313)))
 (let (($x221 (=> $x267 $x249)))
 (let (($x65 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x306 (= $x65 $x322)))
 (let (($x302 (= $x267 $x327)))
 (let (($x33 (and $x250 $x272)))
 (let (($x107 (not $x33)))
 (let (($x147 (and $x250 $x203)))
 (let (($x191 (not $x147)))
 (let (($x390 (and (and (and (=> $x65 $x232) (=> (and $x267 $x78) $x232)) $x191) $x107)))
 (let (($x417 (and (and (and (and (and (and $x390 $x302) $x306) $x221) $x343) $x329) $x268)))
 (let (($x14 (and (and $x417 $x405) $x377)))
 (let (($x174 (= $x14 true)))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x47 (concat ?x204 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x130 (concat ?x18 (concat ?x105 ?x47))))
 (let ((?x122 (bvadd ?x130 (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x237))))
 (let (($x157 (= (_ bv0 32) ?x308)))
 (let ((?x297 (ite $x157 (_ bv0 32) (_ bv1 32))))
 (let (($x334 (bvuge ?x297 (_ bv1 32))))
 (let (($x262 (= $x203 $x334)))
 (let (($x211 (=> $x250 $x262)))
 (let (($x310 (= ?x297 (_ bv0 32))))
 (let (($x279 (= $x272 $x310)))
 (let (($x315 (=> $x250 $x279)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x217))))
 (let (($x307 (= input.spec-%var-l-1.2.1.2.0 ?x278)))
 (let (($x29 (=> $x250 $x307)))
 (let (($x253 (= (_ bv0 32) ?x130)))
 (let ((?x58 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x58 (_ bv1 32))))
 (let (($x38 (= $x304 $x245)))
 (let (($x8 (=> $x267 $x38)))
 (let (($x291 (and $x267 $x78)))
 (let (($x305 (=> $x291 $x232)))
 (let (($x121 (= ?x58 (_ bv0 32))))
 (let (($x126 (= $x78 $x121)))
 (let (($x192 (=> $x267 $x126)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x195)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x187)))
 (let (($x12 (= input.spec-%var-l-1.2.0 ?x216)))
 (let (($x317 (=> $x267 $x12)))
 (let (($x155 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x24 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x24 (_ bv1 32))))
 (let (($x200 (= $x267 $x124)))
 (let (($x312 (and (and (and (and (= $x65 (= ?x24 (_ bv0 32))) (=> $x65 $x232)) $x200) $x317) $x192)))
 (let (($x180 (and (and (and (and (and (and $x312 $x305) $x8) $x29) $x315) $x211) $x191)))
 (let (($x132 (and $x180 $x107)))
 (let (($x316 (= $x132 true)))
 (let (($x202 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x238 (= $x202 true)))
 (let ((?x83 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x175 (= (_ bv0 3) ?x83)))
 (let (($x68 (= $x175 true)))
 (let (($x208 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x128 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x61 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x128) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x128))))
 (let (($x255 (and true $x61)))
 (let (($x28 (and $x61 $x255)))
 (let ((?x298 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv1 32))) (select input.dst.llvm-mem ?x298))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv2 32))) ?x25))))
 (let (($x66 (= (bvand ?x259 (_ bv4294967288 32)) ?x259)))
 (let (($x264 (= (bvand ?x298 (_ bv4294967292 32)) ?x298)))
 (let (($x113 (and $x264 $x66)))
 (let (($x280 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x298 (bvsub ?x298 (_ bv4 32))) (bvult ?x298 (bvsub ?x298 (_ bv4 32))))))
 (let (($x188 (and (and (and (and (and $x255 $x280) $x264) $x113) $x28) $x208)))
 (let (($x134 (not $x101)))
 (let (($x234 (=> $x134 $x188)))
 (let (($x5 (= $x234 true)))
 (let (($x189 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x293 (= $x189 true)))
 (let (($x141 (= $x134 true)))
 (let (($x190 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x205 (= $x190 true)))
 (let ((?x243 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x144 (= (_ bv0 32) ?x243)))
 (let ((?x207 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x207)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (and $x284 $x21)))
 (let (($x258 (and $x159 $x144)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x260 (and $x26 $x258)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x76 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x6)))))))
 (let (($x193 (and $x76 $x260)))
 (let (($x286 (= $x193 true)))
 (let (($x168 (and $x286 $x205)))
 (let (($x63 (and $x168 $x141)))
 (let (($x285 (and $x63 $x293)))
 (let (($x257 (and $x285 $x5)))
 (let (($x82 (and $x257 $x68)))
 (let (($x206 (and $x82 $x238)))
 (let (($x273 (and $x206 $x316)))
 (let (($x347 (and $x273 $x174)))
 (let (($x380 (and $x347 $x407)))
 (let (($x166 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x365 (and $x166 $x380)))
 (let (($x179 (bvugt ?x298 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x298 (_ bv3 32))))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x248 (=> (bvule ?x298 (bvsub (bvadd ?x298 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x218 $x179)))))))
 (let (($x215 (=> (and $x134 (bvule ?x298 (bvsub (bvadd ?x298 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x218 $x179)))))))
 (let (($x53 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x59 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x173 (_ bv1 32))) (or false (or false (and true (or $x210 $x53)))))))
 (let (($x170 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x173 (_ bv1 32)))) (or false (or false (and true (or $x210 $x53)))))))
 (let (($x15 (and $x170 $x215)))
 (let (($x353 (and $x15 $x365)))
 (let (($x355 (=> $x353 $x391)))
 (not $x355)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x178 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x11 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x313 (concat (select input.dst.llvm-mem ?x11) (concat ?x276 (concat ?x129 ?x178)))))
 (let ((?x338 (bvadd input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ?x313)))
 (let (($x357 (= (_ bv0 32) ?x338)))
 (let (($x391 (= $x357 true)))
 (let (($x341 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x384 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x92 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x388 (and $x92 $x384)))
 (let (($x362 (and $x388 $x341)))
 (let (($x337 (not $x362)))
 (let (($x363 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x346 (and $x388 $x363)))
 (let (($x376 (not $x346)))
 (let ((?x173 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem ?x173))))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x173 (_ bv2 32))) ?x352))))
 (let ((?x271 (bvadd ?x292 (_ bv4 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x214 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x17))))
 (let (($x10 (= (_ bv0 32) ?x214)))
 (let ((?x135 (ite $x10 (_ bv0 32) (_ bv1 32))))
 (let (($x320 (= ?x135 (_ bv0 32))))
 (let (($x340 (= $x341 $x320)))
 (let (($x336 (=> $x388 $x340)))
 (let (($x246 (bvuge ?x135 (_ bv1 32))))
 (let (($x348 (= $x363 $x246)))
 (let (($x342 (=> $x388 $x348)))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv1 32))) (select input.dst.llvm-mem ?x292))))
 (let ((?x350 (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x292 (_ bv2 32))) ?x60))))
 (let (($x379 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x350)))
 (let (($x404 (=> $x388 $x379)))
 (let (($x62 (= (_ bv0 32) ?x292)))
 (let ((?x44 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x309 (bvuge ?x44 (_ bv1 32))))
 (let (($x369 (= $x384 $x309)))
 (let (($x335 (=> $x92 $x369)))
 (let (($x232 (= false false)))
 (let (($x351 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x96 (and $x92 $x351)))
 (let (($x73 (=> $x96 $x232)))
 (let (($x303 (= ?x44 (_ bv0 32))))
 (let (($x333 (= $x351 $x303)))
 (let (($x330 (=> $x92 $x333)))
 (let (($x71 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x313)))
 (let (($x373 (=> $x92 $x71)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x326 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x326 (_ bv1 32))))
 (let (($x364 (= $x92 $x327)))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x321 (=> $x70 $x232)))
 (let (($x322 (= ?x326 (_ bv0 32))))
 (let (($x318 (= $x70 $x322)))
 (let (($x137 (and (and (and (and (and (and $x318 $x321) $x364) $x373) $x330) $x73) $x335)))
 (let (($x151 (and (and (and (and (and $x137 $x404) $x342) $x336) $x376) $x337)))
 (let (($x407 (= $x151 true)))
 (let (($x203 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x311 (= $x203 $x246)))
 (let (($x304 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x267 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x250 (and $x267 $x304)))
 (let (($x377 (=> $x250 $x311)))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x127 (= $x272 $x320)))
 (let (($x405 (=> $x250 $x127)))
 (let (($x49 (= input.spec-%var-l-1.2.1.2.0 ?x350)))
 (let (($x268 (=> $x250 $x49)))
 (let (($x50 (= $x304 $x309)))
 (let (($x329 (=> $x267 $x50)))
 (let (($x78 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x385 (= $x78 $x303)))
 (let (($x343 (=> $x267 $x385)))
 (let (($x249 (= input.spec-%var-l-1.2.0 ?x313)))
 (let (($x221 (=> $x267 $x249)))
 (let (($x65 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x306 (= $x65 $x322)))
 (let (($x302 (= $x267 $x327)))
 (let (($x33 (and $x250 $x272)))
 (let (($x107 (not $x33)))
 (let (($x147 (and $x250 $x203)))
 (let (($x191 (not $x147)))
 (let (($x390 (and (and (and (=> $x65 $x232) (=> (and $x267 $x78) $x232)) $x191) $x107)))
 (let (($x417 (and (and (and (and (and (and $x390 $x302) $x306) $x221) $x343) $x329) $x268)))
 (let (($x14 (and (and $x417 $x405) $x377)))
 (let (($x174 (= $x14 true)))
 (let ((?x204 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x47 (concat ?x204 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x130 (concat ?x18 (concat ?x105 ?x47))))
 (let ((?x122 (bvadd ?x130 (_ bv4 32))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv1 32))) (select input.dst.llvm-mem ?x122))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x122 (_ bv2 32))) ?x237))))
 (let (($x157 (= (_ bv0 32) ?x308)))
 (let ((?x297 (ite $x157 (_ bv0 32) (_ bv1 32))))
 (let (($x334 (bvuge ?x297 (_ bv1 32))))
 (let (($x262 (= $x203 $x334)))
 (let (($x211 (=> $x250 $x262)))
 (let (($x310 (= ?x297 (_ bv0 32))))
 (let (($x279 (= $x272 $x310)))
 (let (($x315 (=> $x250 $x279)))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv1 32))) (select input.dst.llvm-mem ?x130))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x130 (_ bv2 32))) ?x217))))
 (let (($x307 (= input.spec-%var-l-1.2.1.2.0 ?x278)))
 (let (($x29 (=> $x250 $x307)))
 (let (($x253 (= (_ bv0 32) ?x130)))
 (let ((?x58 (ite $x253 (_ bv0 32) (_ bv1 32))))
 (let (($x245 (bvuge ?x58 (_ bv1 32))))
 (let (($x38 (= $x304 $x245)))
 (let (($x8 (=> $x267 $x38)))
 (let (($x291 (and $x267 $x78)))
 (let (($x305 (=> $x291 $x232)))
 (let (($x121 (= ?x58 (_ bv0 32))))
 (let (($x126 (= $x78 $x121)))
 (let (($x192 (=> $x267 $x126)))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x195)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x187)))
 (let (($x12 (= input.spec-%var-l-1.2.0 ?x216)))
 (let (($x317 (=> $x267 $x12)))
 (let (($x155 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x24 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x124 (bvuge ?x24 (_ bv1 32))))
 (let (($x200 (= $x267 $x124)))
 (let (($x312 (and (and (and (and (= $x65 (= ?x24 (_ bv0 32))) (=> $x65 $x232)) $x200) $x317) $x192)))
 (let (($x180 (and (and (and (and (and (and $x312 $x305) $x8) $x29) $x315) $x211) $x191)))
 (let (($x132 (and $x180 $x107)))
 (let (($x316 (= $x132 true)))
 (let (($x202 (= (_ bv0 32) input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x238 (= $x202 true)))
 (let ((?x83 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x175 (= (_ bv0 3) ?x83)))
 (let (($x68 (= $x175 true)))
 (let (($x208 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x128 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x61 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x128) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x128))))
 (let (($x255 (and true $x61)))
 (let (($x28 (and $x61 $x255)))
 (let ((?x298 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv1 32))) (select input.dst.llvm-mem ?x298))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x298 (_ bv2 32))) ?x25))))
 (let (($x66 (= (bvand ?x259 (_ bv4294967288 32)) ?x259)))
 (let (($x264 (= (bvand ?x298 (_ bv4294967292 32)) ?x298)))
 (let (($x113 (and $x264 $x66)))
 (let (($x280 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x298 (bvsub ?x298 (_ bv4 32))) (bvult ?x298 (bvsub ?x298 (_ bv4 32))))))
 (let (($x188 (and (and (and (and (and $x255 $x280) $x264) $x113) $x28) $x208)))
 (let (($x134 (not $x101)))
 (let (($x234 (=> $x134 $x188)))
 (let (($x5 (= $x234 true)))
 (let (($x189 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x293 (= $x189 true)))
 (let (($x141 (= $x134 true)))
 (let (($x190 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x205 (= $x190 true)))
 (let ((?x243 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x144 (= (_ bv0 32) ?x243)))
 (let ((?x207 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x207)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x159 (and $x284 $x21)))
 (let (($x258 (and $x159 $x144)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x260 (and $x26 $x258)))
 (let (($x6 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x76 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x6)))))))
 (let (($x193 (and $x76 $x260)))
 (let (($x286 (= $x193 true)))
 (let (($x168 (and $x286 $x205)))
 (let (($x63 (and $x168 $x141)))
 (let (($x285 (and $x63 $x293)))
 (let (($x257 (and $x285 $x5)))
 (let (($x82 (and $x257 $x68)))
 (let (($x206 (and $x82 $x238)))
 (let (($x273 (and $x206 $x316)))
 (let (($x347 (and $x273 $x174)))
 (let (($x380 (and $x347 $x407)))
 (let (($x166 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x365 (and $x166 $x380)))
 (let (($x179 (bvugt ?x298 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x298 (_ bv3 32))))
 (let (($x218 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x248 (=> (bvule ?x298 (bvsub (bvadd ?x298 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x218 $x179)))))))
 (let (($x215 (=> (and $x134 (bvule ?x298 (bvsub (bvadd ?x298 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x218 $x179)))))))
 (let (($x53 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x11)))
 (let (($x59 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x173 (_ bv1 32))) (or false (or false (and true (or $x210 $x53)))))))
 (let (($x170 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x173 (_ bv1 32)))) (or false (or false (and true (or $x210 $x53)))))))
 (let (($x15 (and $x170 $x215)))
 (let (($x353 (and $x15 $x365)))
 (let (($x355 (=> $x353 $x391)))
 (not $x355)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv2093056 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1 32) (_ bv1 8)) (_ bv2093056 32) (_ bv1 8)))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv16773120 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv16773120 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv16773123 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfed6d6f4)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x80000007)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00)
              #x8000000a
              #x4f)
       #x80000003
       #x4f))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x4f000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x4f000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfed6d6f4)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfed6d6f7)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 54
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x89 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x198))))
 (let (($x108 (bvule ?x69 (_ bv4294967294 32))))
 (let (($x341 (= $x108 true)))
 (let ((?x194 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv1 32))) (select input.dst.llvm-mem ?x194))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv2 32))) ?x276))))
 (let ((?x50 (bvadd ?x313 (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x224))))
 (let (($x123 (= (_ bv0 32) ?x60)))
 (let ((?x350 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x49 (= ?x350 (_ bv0 32))))
 (let (($x96 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x73 (= $x96 $x49)))
 (let (($x364 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x311 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x71 (and $x311 $x364)))
 (let (($x39 (=> $x71 $x73)))
 (let (($x271 (bvuge ?x350 (_ bv1 32))))
 (let (($x333 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x330 (= $x333 $x271)))
 (let (($x165 (=> $x71 $x330)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x64))))
 (let (($x185 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x343)))
 (let (($x378 (=> $x71 $x185)))
 (let (($x249 (= (_ bv0 32) ?x313)))
 (let ((?x221 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x221 (_ bv1 32))))
 (let (($x106 (= $x364 $x283)))
 (let (($x150 (=> $x311 $x106)))
 (let (($x77 (= false false)))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x88 (and $x311 $x70)))
 (let (($x92 (=> $x88 $x77)))
 (let (($x394 (= ?x221 (_ bv0 32))))
 (let (($x318 (= $x70 $x394)))
 (let (($x321 (=> $x311 $x318)))
 (let ((?x316 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x345 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x196 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x400 (concat (select input.dst.llvm-mem ?x196) (concat ?x326 (concat ?x345 ?x316)))))
 (let (($x174 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x400)))
 (let (($x347 (=> $x311 $x174)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x191 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x191 (_ bv1 32))))
 (let (($x377 (= $x311 $x180)))
 (let (($x405 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x246 (=> $x405 $x77)))
 (let (($x107 (= ?x191 (_ bv0 32))))
 (let (($x349 (= $x405 $x107)))
 (let (($x372 (and (and (and (and (and (and $x349 $x246) $x377) $x347) $x321) $x92) $x150)))
 (let (($x382 (and (and (and $x372 $x378) $x165) $x39)))
 (let (($x375 (= $x382 true)))
 (let (($x237 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x314 (= $x237 $x271)))
 (let (($x126 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x305 (and $x294 $x126)))
 (let (($x266 (=> $x305 $x314)))
 (let (($x102 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (= $x102 $x49)))
 (let (($x417 (=> $x305 $x268)))
 (let (($x319 (= input.spec-%var-l-1.2.1.2.0 ?x343)))
 (let (($x309 (=> $x305 $x319)))
 (let (($x295 (= $x126 $x283)))
 (let (($x241 (=> $x294 $x295)))
 (let (($x12 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x374 (= $x12 $x394)))
 (let (($x104 (=> $x294 $x374)))
 (let (($x322 (= input.spec-%var-l-1.2.0 ?x400)))
 (let (($x306 (=> $x294 $x322)))
 (let (($x146 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (= $x146 $x107)))
 (let (($x94 (and (and (and (=> $x146 $x77) (=> (and $x294 $x12) $x77)) (= $x294 $x180)) $x132)))
 (let (($x10 (and (and (and (and (and (and $x94 $x306) $x104) $x241) $x309) $x417) $x266)))
 (let (($x135 (= $x10 true)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x67 (concat ?x78 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x55 (concat ?x18 ?x67))))
 (let ((?x217 (bvadd ?x204 (_ bv4 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv1 32))) (select input.dst.llvm-mem ?x217))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv2 32))) ?x29))))
 (let (($x80 (= (_ bv0 32) ?x40)))
 (let ((?x296 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x296 (_ bv1 32))))
 (let (($x308 (= $x237 $x93)))
 (let (($x157 (=> $x305 $x308)))
 (let (($x290 (= ?x296 (_ bv0 32))))
 (let (($x100 (= $x102 $x290)))
 (let (($x247 (=> $x305 $x100)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x8))))
 (let (($x275 (= input.spec-%var-l-1.2.1.2.0 ?x30)))
 (let (($x269 (=> $x305 $x275)))
 (let (($x244 (= (_ bv0 32) ?x204)))
 (let ((?x47 (ite $x244 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x47 (_ bv1 32))))
 (let (($x312 (= $x126 $x192)))
 (let (($x291 (=> $x294 $x312)))
 (let (($x58 (and $x294 $x12)))
 (let (($x121 (=> $x58 $x77)))
 (let (($x87 (= ?x47 (_ bv0 32))))
 (let (($x130 (= $x12 $x87)))
 (let (($x253 (=> $x294 $x130)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x274)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x195 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x187 (=> $x294 $x195)))
 (let (($x236 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x155 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x155 (_ bv1 32))))
 (let (($x267 (= $x294 $x254)))
 (let (($x315 (and (and (and (and (= $x146 (= ?x155 (_ bv0 32))) (=> $x146 $x77)) $x267) $x187) $x253)))
 (let (($x211 (and (and (and (and (and $x315 $x121) $x291) $x269) $x247) $x157)))
 (let (($x84 (= $x211 true)))
 (let ((?x82 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (= (_ bv0 3) ?x82)))
 (let (($x202 (= $x120 true)))
 (let (($x160 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x182 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x16 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x182) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x182))))
 (let (($x251 (and true $x16)))
 (let (($x28 (and $x16 $x251)))
 (let (($x113 (= (bvand ?x69 (_ bv4294967288 32)) ?x69)))
 (let (($x103 (= (bvand ?x89 (_ bv4294967292 32)) ?x89)))
 (let (($x213 (and $x103 $x113)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x89 (bvsub ?x89 (_ bv4 32))) (bvult ?x89 (bvsub ?x89 (_ bv4 32))))))
 (let (($x257 (and (and (and (and (and $x251 $x156) $x103) $x213) $x28) $x160)))
 (let (($x134 (not $x101)))
 (let (($x301 (=> $x134 $x257)))
 (let (($x83 (= $x301 true)))
 (let (($x235 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x128 (= $x235 true)))
 (let (($x189 (= $x134 true)))
 (let (($x141 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x63 (= $x141 true)))
 (let ((?x260 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x193 (= (_ bv0 32) ?x260)))
 (let ((?x243 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x243)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x258 (and $x159 $x144)))
 (let (($x286 (and $x258 $x193)))
 (let (($x35 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x114 (and $x35 $x286)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x21 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x97)))))))
 (let (($x190 (and $x21 $x114)))
 (let (($x205 (= $x190 true)))
 (let (($x56 (and $x205 $x63)))
 (let (($x293 (and $x56 $x189)))
 (let (($x270 (and $x293 $x128)))
 (let (($x175 (and $x270 $x83)))
 (let (($x238 (and $x175 $x202)))
 (let (($x147 (and $x238 $x84)))
 (let (($x320 (and $x147 $x135)))
 (let (($x363 (and $x320 $x375)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x348 (and $x186 $x363)))
 (let (($x32 (bvugt ?x89 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x89 (_ bv3 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x166 (=> (bvule ?x89 (bvsub (bvadd ?x89 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x41 $x32)))))))
 (let (($x158 (=> (and $x134 (bvule ?x89 (bvsub (bvadd ?x89 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x41 $x32)))))))
 (let (($x140 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x196)))
 (let (($x252 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x194 (_ bv1 32))) (or false (or false (and true (or $x125 $x140)))))))
 (let (($x172 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x194 (_ bv1 32)))) (or false (or false (and true (or $x125 $x140)))))))
 (let (($x153 (and $x172 $x158)))
 (let (($x342 (and $x153 $x348)))
 (let (($x340 (=> $x342 $x341)))
 (not $x340))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x89 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv1 32))) (select input.dst.llvm-mem ?x89))))
 (let ((?x69 (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x89 (_ bv2 32))) ?x198))))
 (let (($x108 (bvule ?x69 (_ bv4294967294 32))))
 (let (($x341 (= $x108 true)))
 (let ((?x194 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv1 32))) (select input.dst.llvm-mem ?x194))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x194 (_ bv2 32))) ?x276))))
 (let ((?x50 (bvadd ?x313 (_ bv4 32))))
 (let ((?x224 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv1 32))) (select input.dst.llvm-mem ?x50))))
 (let ((?x60 (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x50 (_ bv2 32))) ?x224))))
 (let (($x123 (= (_ bv0 32) ?x60)))
 (let ((?x350 (ite $x123 (_ bv0 32) (_ bv1 32))))
 (let (($x49 (= ?x350 (_ bv0 32))))
 (let (($x96 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x73 (= $x96 $x49)))
 (let (($x364 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x311 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x71 (and $x311 $x364)))
 (let (($x39 (=> $x71 $x73)))
 (let (($x271 (bvuge ?x350 (_ bv1 32))))
 (let (($x333 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x330 (= $x333 $x271)))
 (let (($x165 (=> $x71 $x330)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv1 32))) (select input.dst.llvm-mem ?x313))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x313 (_ bv2 32))) ?x64))))
 (let (($x185 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x343)))
 (let (($x378 (=> $x71 $x185)))
 (let (($x249 (= (_ bv0 32) ?x313)))
 (let ((?x221 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x221 (_ bv1 32))))
 (let (($x106 (= $x364 $x283)))
 (let (($x150 (=> $x311 $x106)))
 (let (($x77 (= false false)))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x88 (and $x311 $x70)))
 (let (($x92 (=> $x88 $x77)))
 (let (($x394 (= ?x221 (_ bv0 32))))
 (let (($x318 (= $x70 $x394)))
 (let (($x321 (=> $x311 $x318)))
 (let ((?x316 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x345 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x326 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x196 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x400 (concat (select input.dst.llvm-mem ?x196) (concat ?x326 (concat ?x345 ?x316)))))
 (let (($x174 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x400)))
 (let (($x347 (=> $x311 $x174)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x191 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x191 (_ bv1 32))))
 (let (($x377 (= $x311 $x180)))
 (let (($x405 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x246 (=> $x405 $x77)))
 (let (($x107 (= ?x191 (_ bv0 32))))
 (let (($x349 (= $x405 $x107)))
 (let (($x372 (and (and (and (and (and (and $x349 $x246) $x377) $x347) $x321) $x92) $x150)))
 (let (($x382 (and (and (and $x372 $x378) $x165) $x39)))
 (let (($x375 (= $x382 true)))
 (let (($x237 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x314 (= $x237 $x271)))
 (let (($x126 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x305 (and $x294 $x126)))
 (let (($x266 (=> $x305 $x314)))
 (let (($x102 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x268 (= $x102 $x49)))
 (let (($x417 (=> $x305 $x268)))
 (let (($x319 (= input.spec-%var-l-1.2.1.2.0 ?x343)))
 (let (($x309 (=> $x305 $x319)))
 (let (($x295 (= $x126 $x283)))
 (let (($x241 (=> $x294 $x295)))
 (let (($x12 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x374 (= $x12 $x394)))
 (let (($x104 (=> $x294 $x374)))
 (let (($x322 (= input.spec-%var-l-1.2.0 ?x400)))
 (let (($x306 (=> $x294 $x322)))
 (let (($x146 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x132 (= $x146 $x107)))
 (let (($x94 (and (and (and (=> $x146 $x77) (=> (and $x294 $x12) $x77)) (= $x294 $x180)) $x132)))
 (let (($x10 (and (and (and (and (and (and $x94 $x306) $x104) $x241) $x309) $x417) $x266)))
 (let (($x135 (= $x10 true)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x67 (concat ?x78 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x204 (concat ?x55 (concat ?x18 ?x67))))
 (let ((?x217 (bvadd ?x204 (_ bv4 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv1 32))) (select input.dst.llvm-mem ?x217))))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x217 (_ bv2 32))) ?x29))))
 (let (($x80 (= (_ bv0 32) ?x40)))
 (let ((?x296 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x296 (_ bv1 32))))
 (let (($x308 (= $x237 $x93)))
 (let (($x157 (=> $x305 $x308)))
 (let (($x290 (= ?x296 (_ bv0 32))))
 (let (($x100 (= $x102 $x290)))
 (let (($x247 (=> $x305 $x100)))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv1 32))) (select input.dst.llvm-mem ?x204))))
 (let ((?x30 (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x204 (_ bv2 32))) ?x8))))
 (let (($x275 (= input.spec-%var-l-1.2.1.2.0 ?x30)))
 (let (($x269 (=> $x305 $x275)))
 (let (($x244 (= (_ bv0 32) ?x204)))
 (let ((?x47 (ite $x244 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x47 (_ bv1 32))))
 (let (($x312 (= $x126 $x192)))
 (let (($x291 (=> $x294 $x312)))
 (let (($x58 (and $x294 $x12)))
 (let (($x121 (=> $x58 $x77)))
 (let (($x87 (= ?x47 (_ bv0 32))))
 (let (($x130 (= $x12 $x87)))
 (let (($x253 (=> $x294 $x130)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x274)))
 (let ((?x31 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x195 (= input.spec-%var-l-1.2.0 ?x31)))
 (let (($x187 (=> $x294 $x195)))
 (let (($x236 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x155 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x155 (_ bv1 32))))
 (let (($x267 (= $x294 $x254)))
 (let (($x315 (and (and (and (and (= $x146 (= ?x155 (_ bv0 32))) (=> $x146 $x77)) $x267) $x187) $x253)))
 (let (($x211 (and (and (and (and (and $x315 $x121) $x291) $x269) $x247) $x157)))
 (let (($x84 (= $x211 true)))
 (let ((?x82 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x120 (= (_ bv0 3) ?x82)))
 (let (($x202 (= $x120 true)))
 (let (($x160 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x182 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x16 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x182) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x182))))
 (let (($x251 (and true $x16)))
 (let (($x28 (and $x16 $x251)))
 (let (($x113 (= (bvand ?x69 (_ bv4294967288 32)) ?x69)))
 (let (($x103 (= (bvand ?x89 (_ bv4294967292 32)) ?x89)))
 (let (($x213 (and $x103 $x113)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x89 (bvsub ?x89 (_ bv4 32))) (bvult ?x89 (bvsub ?x89 (_ bv4 32))))))
 (let (($x257 (and (and (and (and (and $x251 $x156) $x103) $x213) $x28) $x160)))
 (let (($x134 (not $x101)))
 (let (($x301 (=> $x134 $x257)))
 (let (($x83 (= $x301 true)))
 (let (($x235 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x128 (= $x235 true)))
 (let (($x189 (= $x134 true)))
 (let (($x141 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x63 (= $x141 true)))
 (let ((?x260 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x193 (= (_ bv0 32) ?x260)))
 (let ((?x243 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x243)))
 (let (($x159 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x258 (and $x159 $x144)))
 (let (($x286 (and $x258 $x193)))
 (let (($x35 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x114 (and $x35 $x286)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x21 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x97)))))))
 (let (($x190 (and $x21 $x114)))
 (let (($x205 (= $x190 true)))
 (let (($x56 (and $x205 $x63)))
 (let (($x293 (and $x56 $x189)))
 (let (($x270 (and $x293 $x128)))
 (let (($x175 (and $x270 $x83)))
 (let (($x238 (and $x175 $x202)))
 (let (($x147 (and $x238 $x84)))
 (let (($x320 (and $x147 $x135)))
 (let (($x363 (and $x320 $x375)))
 (let (($x186 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x348 (and $x186 $x363)))
 (let (($x32 (bvugt ?x89 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x89 (_ bv3 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x166 (=> (bvule ?x89 (bvsub (bvadd ?x89 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x41 $x32)))))))
 (let (($x158 (=> (and $x134 (bvule ?x89 (bvsub (bvadd ?x89 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x41 $x32)))))))
 (let (($x140 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x196)))
 (let (($x252 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x194 (_ bv1 32))) (or false (or false (and true (or $x125 $x140)))))))
 (let (($x172 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x194 (_ bv1 32)))) (or false (or false (and true (or $x125 $x140)))))))
 (let (($x153 (and $x172 $x158)))
 (let (($x342 (and $x153 $x348)))
 (let (($x340 (=> $x342 $x341)))
 (not $x340))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 55
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3180X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3177X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3177X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3177X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3174X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3171X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3171X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3171X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var3168X () (_ BitVec 32))
(declare-fun input.ind-%var3165X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3165X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3165X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x486 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3180X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x492 (concat ?x486 (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv4 32))))))
 (let ((?x519 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3180X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x507 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3180X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x505 (concat ?x507 (concat ?x519 ?x492))))
 (let (($x502 (= ?x505 ?x505)))
 (let (($x480 (= (_ bv0 32) input.ind-%var3180X)))
 (let ((?x476 (ite $x480 (_ bv0 32) (_ bv1 32))))
 (let (($x510 (bvuge ?x476 (_ bv1 32))))
 (let (($x497 (=> $x510 $x502)))
 (let ((?x514 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3180X))))
 (let ((?x484 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv2 32))) ?x514)))
 (let ((?x515 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv3 32))) ?x484)))
 (let (($x491 (= ?x515 ?x515)))
 (let (($x485 (=> $x510 $x491)))
 (let (($x478 (= $x510 $x510)))
 (let (($x24 (= false false)))
 (let (($x477 (= ?x476 (_ bv0 32))))
 (let (($x513 (=> $x477 $x24)))
 (let (($x475 (= $x477 $x477)))
 (let ((?x52 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv1 32))) (select input.dst.llvm-mem ?x52))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv2 32))) ?x162))))
 (let (($x154 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x79)))
 (let (($x504 (and (and (and (and (and $x154 $x475) $x513) $x478) $x485) $x497)))
 (let (($x483 (= input.ind-%var3177X.2.1 input.ind-%var3177X.2.1)))
 (let (($x473 (bvuge input.ind-%var3177X.0 (_ bv1 32))))
 (let (($x471 (=> $x473 $x483)))
 (let (($x465 (= input.ind-%var3177X.2.0 input.ind-%var3177X.2.0)))
 (let (($x466 (=> $x473 $x465)))
 (let (($x462 (= $x473 $x473)))
 (let (($x469 (= input.ind-%var3177X.0 (_ bv0 32))))
 (let (($x482 (=> $x469 $x24)))
 (let (($x470 (= $x469 $x469)))
 (let (($x489 (= input.spec-%var-l-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry)))
 (let (($x472 (and (and (and (and (and $x489 $x470) $x482) $x462) $x466) $x471)))
 (let (($x509 (and $x472 $x504)))
 (let ((?x460 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3174X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x459 (concat ?x460 (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv4 32))))))
 (let ((?x447 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3174X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x442 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3174X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x443 (concat ?x442 (concat ?x447 ?x459))))
 (let (($x449 (= ?x443 ?x443)))
 (let (($x456 (= (_ bv0 32) input.ind-%var3174X)))
 (let ((?x453 (ite $x456 (_ bv0 32) (_ bv1 32))))
 (let (($x457 (bvuge ?x453 (_ bv1 32))))
 (let (($x452 (=> $x457 $x449)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3174X))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv2 32))) ?x448)))
 (let ((?x436 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv3 32))) ?x85)))
 (let (($x439 (= ?x436 ?x436)))
 (let (($x433 (=> $x457 $x439)))
 (let (($x488 (= $x457 $x457)))
 (let (($x431 (= ?x453 (_ bv0 32))))
 (let (($x446 (=> $x431 $x24)))
 (let (($x450 (and (and (and (= input.dst.llvm-%l ?x79) (= $x431 $x431)) $x446) $x488)))
 (let (($x527 (and (and $x450 $x433) $x452)))
 (let (($x412 (= input.ind-%var3171X.2.1 input.ind-%var3171X.2.1)))
 (let (($x411 (bvuge input.ind-%var3171X.0 (_ bv1 32))))
 (let (($x425 (=> $x411 $x412)))
 (let (($x409 (= input.ind-%var3171X.2.0 input.ind-%var3171X.2.0)))
 (let (($x414 (=> $x411 $x409)))
 (let (($x423 (= $x411 $x411)))
 (let (($x177 (= input.ind-%var3171X.0 (_ bv0 32))))
 (let (($x413 (=> $x177 $x24)))
 (let (($x408 (= $x177 $x177)))
 (let (($x37 (= input.spec-%var-l-1 input.spec-%var-l-0.L3%5%bbentry)))
 (let (($x428 (and (and (and (and (and $x37 $x408) $x413) $x423) $x414) $x425)))
 (let (($x461 (and $x428 $x527)))
 (let ((?x424 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3168X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x393 (concat ?x424 (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv4 32))))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3168X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x392 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3168X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x22 (concat ?x392 (concat ?x361 ?x393))))
 (let (($x546 (= ?x22 ?x22)))
 (let (($x386 (= (_ bv0 32) input.ind-%var3168X)))
 (let ((?x381 (ite $x386 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x381 (_ bv1 32))))
 (let (($x420 (=> $x387 $x546)))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3168X))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv2 32))) ?x371)))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv3 32))) ?x397)))
 (let (($x359 (= ?x360 ?x360)))
 (let (($x370 (=> $x387 $x359)))
 (let (($x344 (= $x387 $x387)))
 (let (($x366 (= ?x381 (_ bv0 32))))
 (let (($x256 (=> $x366 $x24)))
 (let (($x181 (and (and (and (and (and $x154 (= $x366 $x366)) $x256) $x344) $x370) $x420)))
 (let (($x353 (= input.ind-%var3165X.2.1 input.ind-%var3165X.2.1)))
 (let (($x362 (bvuge input.ind-%var3165X.0 (_ bv1 32))))
 (let (($x338 (=> $x362 $x353)))
 (let (($x407 (= input.ind-%var3165X.2.0 input.ind-%var3165X.2.0)))
 (let (($x380 (=> $x362 $x407)))
 (let (($x337 (= $x362 $x362)))
 (let (($x346 (= input.ind-%var3165X.0 (_ bv0 32))))
 (let (($x418 (=> $x346 $x24)))
 (let (($x111 (and (and (and (and (and $x37 (= $x346 $x346)) $x418) $x337) $x380) $x338)))
 (let (($x91 (and $x111 $x181)))
 (let (($x336 (not true)))
 (let (($x528 (or (or (or $x336 $x91) $x461) $x509)))
 (let (($x524 (and true $x528)))
 (let (($x74 (= $x524 true)))
 (let ((?x210 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x55))))
 (let ((?x8 (bvadd ?x67 (_ bv4 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x269))))
 (let (($x328 (= (_ bv0 32) ?x265)))
 (let ((?x233 (ite $x328 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (= ?x233 (_ bv0 32))))
 (let (($x351 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (= $x351 $x278)))
 (let (($x92 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x369 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x106 (and $x369 $x92)))
 (let (($x330 (=> $x106 $x333)))
 (let (($x272 (bvuge ?x233 (_ bv1 32))))
 (let (($x185 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x378 (= $x185 $x272)))
 (let (($x379 (=> $x106 $x378)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x291))))
 (let (($x372 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x230)))
 (let (($x71 (=> $x106 $x372)))
 (let (($x225 (= (_ bv0 32) ?x67)))
 (let ((?x204 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x204 (_ bv1 32))))
 (let (($x388 (= $x92 $x253)))
 (let (($x364 (=> $x369 $x388)))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x137 (and $x369 $x70)))
 (let (($x88 (=> $x137 $x24)))
 (let (($x244 (= ?x204 (_ bv0 32))))
 (let (($x318 (= $x70 $x244)))
 (let (($x321 (=> $x369 $x318)))
 (let ((?x184 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x229 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x197 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x187 (concat (select input.dst.llvm-mem ?x197) (concat ?x13 (concat ?x229 ?x184)))))
 (let (($x347 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x187)))
 (let (($x335 (=> $x369 $x347)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x267 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (bvuge ?x267 (_ bv1 32))))
 (let (($x14 (= $x369 $x310)))
 (let (($x384 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x377 (=> $x384 $x24)))
 (let (($x171 (= ?x267 (_ bv0 32))))
 (let (($x311 (= $x384 $x171)))
 (let (($x382 (and (and (and (and (and (and $x311 $x377) $x14) $x335) $x321) $x88) $x364)))
 (let (($x348 (and (and (and $x382 $x71) $x379) $x330)))
 (let (($x342 (= $x348 true)))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x7 (concat ?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x178 (concat ?x276 (concat ?x299 ?x7))))
 (let ((?x343 (bvadd ?x178 (_ bv4 32))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x50))))
 (let (($x329 (= (_ bv0 32) ?x227)))
 (let ((?x224 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x350 (bvuge ?x224 (_ bv1 32))))
 (let (($x29 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x49 (= $x29 $x350)))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x77 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x121 (and $x77 $x130)))
 (let (($x268 (=> $x121 $x49)))
 (let (($x240 (= ?x224 (_ bv0 32))))
 (let (($x304 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x60 (= $x304 $x240)))
 (let (($x123 (=> $x121 $x60)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv1 32))) (select input.dst.llvm-mem ?x178))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv2 32))) ?x303))))
 (let (($x64 (= input.spec-%var-l-1.2.1.2.0 ?x287)))
 (let (($x44 (=> $x121 $x64)))
 (let (($x313 (= (_ bv0 32) ?x178)))
 (let ((?x249 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x249 (_ bv1 32))))
 (let (($x75 (= $x130 $x104)))
 (let (($x283 (=> $x77 $x75)))
 (let (($x297 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (and $x77 $x297)))
 (let (($x254 (=> $x294 $x24)))
 (let (($x221 (= ?x249 (_ bv0 32))))
 (let (($x394 (= $x297 $x221)))
 (let (($x374 (=> $x77 $x394)))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x390)))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x345)))
 (let (($x400 (= input.spec-%var-l-1.2.0 ?x327)))
 (let (($x322 (=> $x77 $x400)))
 (let (($x277 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x191 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x331 (bvuge ?x191 (_ bv1 32))))
 (let (($x107 (= $x77 $x331)))
 (let (($x155 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x323 (=> $x155 $x24)))
 (let (($x180 (= ?x191 (_ bv0 32))))
 (let (($x33 (= $x155 $x180)))
 (let (($x10 (and (and (and (and (and (and $x33 $x323) $x107) $x322) $x374) $x254) $x283)))
 (let (($x127 (and (and (and $x10 $x44) $x123) $x268)))
 (let (($x405 (= $x127 true)))
 (let (($x40 (= $x29 $x272)))
 (let (($x80 (=> $x121 $x40)))
 (let (($x307 (= $x304 $x278)))
 (let (($x212 (=> $x121 $x307)))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x230)))
 (let (($x245 (=> $x121 $x250)))
 (let (($x315 (= $x130 $x253)))
 (let (($x58 (=> $x77 $x315)))
 (let (($x47 (= $x297 $x244)))
 (let (($x87 (=> $x77 $x47)))
 (let (($x279 (= input.spec-%var-l-1.2.0 ?x187)))
 (let (($x216 (=> $x77 $x279)))
 (let (($x262 (and (and (and (and (and $x323 $x254) (= $x77 $x310)) (= $x155 $x171)) $x216) $x87)))
 (let (($x157 (and (and (and (and $x262 $x58) $x245) $x212) $x80)))
 (let (($x211 (= $x157 true)))
 (let ((?x238 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x206 (= (_ bv0 3) ?x238)))
 (let (($x146 (= $x206 true)))
 (let (($x220 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x242 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x223 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x242) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x242))))
 (let (($x152 (and true $x223)))
 (let (($x28 (and $x223 $x152)))
 (let (($x213 (= (bvand ?x79 (_ bv4294967288 32)) ?x79)))
 (let (($x9 (= (bvand ?x52 (_ bv4294967292 32)) ?x52)))
 (let (($x234 (and $x9 $x213)))
 (let (($x222 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x52 (bvsub ?x52 (_ bv4 32))) (bvult ?x52 (bvsub ?x52 (_ bv4 32))))))
 (let (($x175 (and (and (and (and (and $x152 $x222) $x9) $x234) $x28) $x220)))
 (let (($x134 (not $x101)))
 (let (($x68 (=> $x134 $x175)))
 (let (($x82 (= $x68 true)))
 (let (($x61 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x182 (= $x61 true)))
 (let (($x235 (= $x134 true)))
 (let (($x189 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x293 (= $x189 true)))
 (let ((?x114 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x114)))
 (let ((?x260 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x193 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x260)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (and $x258 $x193)))
 (let (($x205 (and $x286 $x190)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x133 $x205)))
 (let (($x284 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x144 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x284)))))))
 (let (($x141 (and $x144 $x168)))
 (let (($x63 (= $x141 true)))
 (let (($x285 (and $x63 $x293)))
 (let (($x128 (and $x285 $x235)))
 (let (($x255 (and $x128 $x182)))
 (let (($x120 (and $x255 $x82)))
 (let (($x65 (and $x120 $x146)))
 (let (($x84 (and $x65 $x211)))
 (let (($x349 (and $x84 $x405)))
 (let (($x108 (and $x349 $x342)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x341 (and $x19 $x108)))
 (let (($x215 (bvugt ?x52 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x52 (_ bv3 32))))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x186 (=> (bvule ?x52 (bvsub (bvadd ?x52 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x215)))))))
 (let (($x57 (=> (and $x134 (bvule ?x52 (bvsub (bvadd ?x52 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x248 $x215)))))))
 (let (($x170 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x197)))
 (let (($x179 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32))) (or false (or false (and true (or $x59 $x170)))))))
 (let (($x11 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32)))) (or false (or false (and true (or $x59 $x170)))))))
 (let (($x23 (and $x11 $x57)))
 (let (($x340 (and $x23 $x341)))
 (let (($x118 (=> $x340 $x74)))
 (not $x118))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3180X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3177X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3177X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3177X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3174X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3171X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3171X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3171X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var3168X () (_ BitVec 32))
(declare-fun input.ind-%var3165X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3165X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3165X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x486 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3180X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x492 (concat ?x486 (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv4 32))))))
 (let ((?x519 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3180X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x507 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3180X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x505 (concat ?x507 (concat ?x519 ?x492))))
 (let (($x502 (= ?x505 ?x505)))
 (let (($x480 (= (_ bv0 32) input.ind-%var3180X)))
 (let ((?x476 (ite $x480 (_ bv0 32) (_ bv1 32))))
 (let (($x510 (bvuge ?x476 (_ bv1 32))))
 (let (($x497 (=> $x510 $x502)))
 (let ((?x514 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3180X))))
 (let ((?x484 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv2 32))) ?x514)))
 (let ((?x515 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3180X (_ bv3 32))) ?x484)))
 (let (($x491 (= ?x515 ?x515)))
 (let (($x485 (=> $x510 $x491)))
 (let (($x478 (= $x510 $x510)))
 (let (($x24 (= false false)))
 (let (($x477 (= ?x476 (_ bv0 32))))
 (let (($x513 (=> $x477 $x24)))
 (let (($x475 (= $x477 $x477)))
 (let ((?x52 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x162 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv1 32))) (select input.dst.llvm-mem ?x52))))
 (let ((?x79 (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x52 (_ bv2 32))) ?x162))))
 (let (($x154 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x79)))
 (let (($x504 (and (and (and (and (and $x154 $x475) $x513) $x478) $x485) $x497)))
 (let (($x483 (= input.ind-%var3177X.2.1 input.ind-%var3177X.2.1)))
 (let (($x473 (bvuge input.ind-%var3177X.0 (_ bv1 32))))
 (let (($x471 (=> $x473 $x483)))
 (let (($x465 (= input.ind-%var3177X.2.0 input.ind-%var3177X.2.0)))
 (let (($x466 (=> $x473 $x465)))
 (let (($x462 (= $x473 $x473)))
 (let (($x469 (= input.ind-%var3177X.0 (_ bv0 32))))
 (let (($x482 (=> $x469 $x24)))
 (let (($x470 (= $x469 $x469)))
 (let (($x489 (= input.spec-%var-l-0.L3%5%bbentry input.spec-%var-l-0.L3%5%bbentry)))
 (let (($x472 (and (and (and (and (and $x489 $x470) $x482) $x462) $x466) $x471)))
 (let (($x509 (and $x472 $x504)))
 (let ((?x460 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3174X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x459 (concat ?x460 (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv4 32))))))
 (let ((?x447 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3174X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x442 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3174X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x443 (concat ?x442 (concat ?x447 ?x459))))
 (let (($x449 (= ?x443 ?x443)))
 (let (($x456 (= (_ bv0 32) input.ind-%var3174X)))
 (let ((?x453 (ite $x456 (_ bv0 32) (_ bv1 32))))
 (let (($x457 (bvuge ?x453 (_ bv1 32))))
 (let (($x452 (=> $x457 $x449)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3174X))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv2 32))) ?x448)))
 (let ((?x436 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3174X (_ bv3 32))) ?x85)))
 (let (($x439 (= ?x436 ?x436)))
 (let (($x433 (=> $x457 $x439)))
 (let (($x488 (= $x457 $x457)))
 (let (($x431 (= ?x453 (_ bv0 32))))
 (let (($x446 (=> $x431 $x24)))
 (let (($x450 (and (and (and (= input.dst.llvm-%l ?x79) (= $x431 $x431)) $x446) $x488)))
 (let (($x527 (and (and $x450 $x433) $x452)))
 (let (($x412 (= input.ind-%var3171X.2.1 input.ind-%var3171X.2.1)))
 (let (($x411 (bvuge input.ind-%var3171X.0 (_ bv1 32))))
 (let (($x425 (=> $x411 $x412)))
 (let (($x409 (= input.ind-%var3171X.2.0 input.ind-%var3171X.2.0)))
 (let (($x414 (=> $x411 $x409)))
 (let (($x423 (= $x411 $x411)))
 (let (($x177 (= input.ind-%var3171X.0 (_ bv0 32))))
 (let (($x413 (=> $x177 $x24)))
 (let (($x408 (= $x177 $x177)))
 (let (($x37 (= input.spec-%var-l-1 input.spec-%var-l-0.L3%5%bbentry)))
 (let (($x428 (and (and (and (and (and $x37 $x408) $x413) $x423) $x414) $x425)))
 (let (($x461 (and $x428 $x527)))
 (let ((?x424 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3168X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x393 (concat ?x424 (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv4 32))))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3168X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x392 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3168X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x22 (concat ?x392 (concat ?x361 ?x393))))
 (let (($x546 (= ?x22 ?x22)))
 (let (($x386 (= (_ bv0 32) input.ind-%var3168X)))
 (let ((?x381 (ite $x386 (_ bv0 32) (_ bv1 32))))
 (let (($x387 (bvuge ?x381 (_ bv1 32))))
 (let (($x420 (=> $x387 $x546)))
 (let ((?x371 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3168X))))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv2 32))) ?x371)))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3168X (_ bv3 32))) ?x397)))
 (let (($x359 (= ?x360 ?x360)))
 (let (($x370 (=> $x387 $x359)))
 (let (($x344 (= $x387 $x387)))
 (let (($x366 (= ?x381 (_ bv0 32))))
 (let (($x256 (=> $x366 $x24)))
 (let (($x181 (and (and (and (and (and $x154 (= $x366 $x366)) $x256) $x344) $x370) $x420)))
 (let (($x353 (= input.ind-%var3165X.2.1 input.ind-%var3165X.2.1)))
 (let (($x362 (bvuge input.ind-%var3165X.0 (_ bv1 32))))
 (let (($x338 (=> $x362 $x353)))
 (let (($x407 (= input.ind-%var3165X.2.0 input.ind-%var3165X.2.0)))
 (let (($x380 (=> $x362 $x407)))
 (let (($x337 (= $x362 $x362)))
 (let (($x346 (= input.ind-%var3165X.0 (_ bv0 32))))
 (let (($x418 (=> $x346 $x24)))
 (let (($x111 (and (and (and (and (and $x37 (= $x346 $x346)) $x418) $x337) $x380) $x338)))
 (let (($x91 (and $x111 $x181)))
 (let (($x336 (not true)))
 (let (($x528 (or (or (or $x336 $x91) $x461) $x509)))
 (let (($x524 (and true $x528)))
 (let (($x74 (= $x524 true)))
 (let ((?x210 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x55 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv1 32))) (select input.dst.llvm-mem ?x210))))
 (let ((?x67 (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x210 (_ bv2 32))) ?x55))))
 (let ((?x8 (bvadd ?x67 (_ bv4 32))))
 (let ((?x269 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x269))))
 (let (($x328 (= (_ bv0 32) ?x265)))
 (let ((?x233 (ite $x328 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (= ?x233 (_ bv0 32))))
 (let (($x351 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x333 (= $x351 $x278)))
 (let (($x92 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x369 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x106 (and $x369 $x92)))
 (let (($x330 (=> $x106 $x333)))
 (let (($x272 (bvuge ?x233 (_ bv1 32))))
 (let (($x185 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x378 (= $x185 $x272)))
 (let (($x379 (=> $x106 $x378)))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x291))))
 (let (($x372 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x230)))
 (let (($x71 (=> $x106 $x372)))
 (let (($x225 (= (_ bv0 32) ?x67)))
 (let ((?x204 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x204 (_ bv1 32))))
 (let (($x388 (= $x92 $x253)))
 (let (($x364 (=> $x369 $x388)))
 (let (($x70 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x137 (and $x369 $x70)))
 (let (($x88 (=> $x137 $x24)))
 (let (($x244 (= ?x204 (_ bv0 32))))
 (let (($x318 (= $x70 $x244)))
 (let (($x321 (=> $x369 $x318)))
 (let ((?x184 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x229 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x197 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x187 (concat (select input.dst.llvm-mem ?x197) (concat ?x13 (concat ?x229 ?x184)))))
 (let (($x347 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x187)))
 (let (($x335 (=> $x369 $x347)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x267 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (bvuge ?x267 (_ bv1 32))))
 (let (($x14 (= $x369 $x310)))
 (let (($x384 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x377 (=> $x384 $x24)))
 (let (($x171 (= ?x267 (_ bv0 32))))
 (let (($x311 (= $x384 $x171)))
 (let (($x382 (and (and (and (and (and (and $x311 $x377) $x14) $x335) $x321) $x88) $x364)))
 (let (($x348 (and (and (and $x382 $x71) $x379) $x330)))
 (let (($x342 (= $x348 true)))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x7 (concat ?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x276 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x178 (concat ?x276 (concat ?x299 ?x7))))
 (let ((?x343 (bvadd ?x178 (_ bv4 32))))
 (let ((?x50 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv1 32))) (select input.dst.llvm-mem ?x343))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x343 (_ bv2 32))) ?x50))))
 (let (($x329 (= (_ bv0 32) ?x227)))
 (let ((?x224 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x350 (bvuge ?x224 (_ bv1 32))))
 (let (($x29 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x49 (= $x29 $x350)))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x77 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x121 (and $x77 $x130)))
 (let (($x268 (=> $x121 $x49)))
 (let (($x240 (= ?x224 (_ bv0 32))))
 (let (($x304 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x60 (= $x304 $x240)))
 (let (($x123 (=> $x121 $x60)))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv1 32))) (select input.dst.llvm-mem ?x178))))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv2 32))) ?x303))))
 (let (($x64 (= input.spec-%var-l-1.2.1.2.0 ?x287)))
 (let (($x44 (=> $x121 $x64)))
 (let (($x313 (= (_ bv0 32) ?x178)))
 (let ((?x249 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x104 (bvuge ?x249 (_ bv1 32))))
 (let (($x75 (= $x130 $x104)))
 (let (($x283 (=> $x77 $x75)))
 (let (($x297 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x294 (and $x77 $x297)))
 (let (($x254 (=> $x294 $x24)))
 (let (($x221 (= ?x249 (_ bv0 32))))
 (let (($x394 (= $x297 $x221)))
 (let (($x374 (=> $x77 $x394)))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x345 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x390)))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x345)))
 (let (($x400 (= input.spec-%var-l-1.2.0 ?x327)))
 (let (($x322 (=> $x77 $x400)))
 (let (($x277 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x191 (ite $x277 (_ bv0 32) (_ bv1 32))))
 (let (($x331 (bvuge ?x191 (_ bv1 32))))
 (let (($x107 (= $x77 $x331)))
 (let (($x155 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x323 (=> $x155 $x24)))
 (let (($x180 (= ?x191 (_ bv0 32))))
 (let (($x33 (= $x155 $x180)))
 (let (($x10 (and (and (and (and (and (and $x33 $x323) $x107) $x322) $x374) $x254) $x283)))
 (let (($x127 (and (and (and $x10 $x44) $x123) $x268)))
 (let (($x405 (= $x127 true)))
 (let (($x40 (= $x29 $x272)))
 (let (($x80 (=> $x121 $x40)))
 (let (($x307 (= $x304 $x278)))
 (let (($x212 (=> $x121 $x307)))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.0 ?x230)))
 (let (($x245 (=> $x121 $x250)))
 (let (($x315 (= $x130 $x253)))
 (let (($x58 (=> $x77 $x315)))
 (let (($x47 (= $x297 $x244)))
 (let (($x87 (=> $x77 $x47)))
 (let (($x279 (= input.spec-%var-l-1.2.0 ?x187)))
 (let (($x216 (=> $x77 $x279)))
 (let (($x262 (and (and (and (and (and $x323 $x254) (= $x77 $x310)) (= $x155 $x171)) $x216) $x87)))
 (let (($x157 (and (and (and (and $x262 $x58) $x245) $x212) $x80)))
 (let (($x211 (= $x157 true)))
 (let ((?x238 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x206 (= (_ bv0 3) ?x238)))
 (let (($x146 (= $x206 true)))
 (let (($x220 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x242 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x223 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x242) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x242))))
 (let (($x152 (and true $x223)))
 (let (($x28 (and $x223 $x152)))
 (let (($x213 (= (bvand ?x79 (_ bv4294967288 32)) ?x79)))
 (let (($x9 (= (bvand ?x52 (_ bv4294967292 32)) ?x52)))
 (let (($x234 (and $x9 $x213)))
 (let (($x222 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x52 (bvsub ?x52 (_ bv4 32))) (bvult ?x52 (bvsub ?x52 (_ bv4 32))))))
 (let (($x175 (and (and (and (and (and $x152 $x222) $x9) $x234) $x28) $x220)))
 (let (($x134 (not $x101)))
 (let (($x68 (=> $x134 $x175)))
 (let (($x82 (= $x68 true)))
 (let (($x61 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x182 (= $x61 true)))
 (let (($x235 (= $x134 true)))
 (let (($x189 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x293 (= $x189 true)))
 (let ((?x114 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x114)))
 (let ((?x260 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x193 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x260)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (and $x258 $x193)))
 (let (($x205 (and $x286 $x190)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x133 $x205)))
 (let (($x284 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x144 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x284)))))))
 (let (($x141 (and $x144 $x168)))
 (let (($x63 (= $x141 true)))
 (let (($x285 (and $x63 $x293)))
 (let (($x128 (and $x285 $x235)))
 (let (($x255 (and $x128 $x182)))
 (let (($x120 (and $x255 $x82)))
 (let (($x65 (and $x120 $x146)))
 (let (($x84 (and $x65 $x211)))
 (let (($x349 (and $x84 $x405)))
 (let (($x108 (and $x349 $x342)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x341 (and $x19 $x108)))
 (let (($x215 (bvugt ?x52 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x52 (_ bv3 32))))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x186 (=> (bvule ?x52 (bvsub (bvadd ?x52 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x215)))))))
 (let (($x57 (=> (and $x134 (bvule ?x52 (bvsub (bvadd ?x52 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x248 $x215)))))))
 (let (($x170 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x59 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x197)))
 (let (($x179 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32))) (or false (or false (and true (or $x59 $x170)))))))
 (let (($x11 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x210 (_ bv1 32)))) (or false (or false (and true (or $x59 $x170)))))))
 (let (($x23 (and $x11 $x57)))
 (let (($x340 (and $x23 $x341)))
 (let (($x118 (=> $x340 $x74)))
 (not $x118))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var3180X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv4294967280 32))
(define-fun input.ind-%var3177X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3177X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3177X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3174X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var3171X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3171X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3171X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var3168X () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3165X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3165X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3165X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80bd21b0)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00004106)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x80000100)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #x80000107
                                #x80)
                         #x80000005
                         #x18)
                  #x0000410b
                  #x41)))
  (store a!1 #x00004105 #x86)))
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80bd21b0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80bd21b3)
  (define-fun input.ind-%var3171X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3180X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3165X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3171X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3171X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3174X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3165X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3168X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3177X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3177X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3165X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3177X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 56
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3258X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3255X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3255X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3255X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var3252X () (_ BitVec 32))
(declare-fun input.ind-%var3249X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3249X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3249X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x408 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3258X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x415 (concat ?x408 (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv4 32))))))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3258X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x402 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3258X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x401 (concat ?x402 (concat ?x427 ?x415))))
 (let (($x409 (= ?x401 ?x401)))
 (let (($x360 (= (_ bv0 32) input.ind-%var3258X)))
 (let ((?x359 (ite $x360 (_ bv0 32) (_ bv1 32))))
 (let (($x419 (bvuge ?x359 (_ bv1 32))))
 (let (($x414 (=> $x419 $x409)))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3258X))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv2 32))) ?x424)))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv3 32))) ?x358)))
 (let (($x181 (= ?x420 ?x420)))
 (let (($x91 (=> $x419 $x181)))
 (let (($x392 (= $x419 $x419)))
 (let (($x232 (= false false)))
 (let (($x370 (= ?x359 (_ bv0 32))))
 (let (($x399 (=> $x370 $x232)))
 (let (($x416 (= $x370 $x370)))
 (let ((?x218 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem ?x218))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv2 32))) ?x289))))
 (let (($x371 (= input.dst.llvm-%l ?x66)))
 (let (($x428 (and (and (and (and (and $x371 $x416) $x399) $x392) $x91) $x414)))
 (let (($x367 (= input.ind-%var3255X.2.1 input.ind-%var3255X.2.1)))
 (let (($x395 (bvuge input.ind-%var3255X.0 (_ bv1 32))))
 (let (($x389 (=> $x395 $x367)))
 (let (($x387 (= input.ind-%var3255X.2.0 input.ind-%var3255X.2.0)))
 (let (($x344 (=> $x395 $x387)))
 (let (($x256 (= $x395 $x395)))
 (let (($x381 (= input.ind-%var3255X.0 (_ bv0 32))))
 (let (($x354 (=> $x381 $x232)))
 (let (($x383 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x381 $x381)) $x354)))
 (let (($x410 (and (and (and $x383 $x256) $x344) $x389)))
 (let (($x429 (and $x410 $x428)))
 (let ((?x357 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3252X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x418 (concat ?x357 (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv4 32))))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3252X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3252X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x407 (concat ?x151 (concat ?x362 ?x418))))
 (let (($x380 (= ?x407 ?x407)))
 (let (($x71 (= (_ bv0 32) input.ind-%var3252X)))
 (let ((?x375 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x375 (_ bv1 32))))
 (let (($x356 (=> $x379 $x380)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3252X))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv2 32))) ?x348)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv3 32))) ?x341)))
 (let (($x46 (= ?x115 ?x115)))
 (let (($x37 (=> $x379 $x46)))
 (let (($x363 (= $x379 $x379)))
 (let (($x373 (= ?x375 (_ bv0 32))))
 (let (($x378 (=> $x373 $x232)))
 (let (($x185 (= $x373 $x373)))
 (let (($x150 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x66)))
 (let (($x154 (and (and (and (and (and $x150 $x185) $x378) $x363) $x37) $x356)))
 (let (($x88 (= input.ind-%var3249X.2.1 input.ind-%var3249X.2.1)))
 (let (($x332 (bvuge input.ind-%var3249X.0 (_ bv1 32))))
 (let (($x39 (=> $x332 $x88)))
 (let (($x321 (= input.ind-%var3249X.2.0 input.ind-%var3249X.2.0)))
 (let (($x73 (=> $x332 $x321)))
 (let (($x70 (= $x332 $x332)))
 (let (($x347 (= input.ind-%var3249X.0 (_ bv0 32))))
 (let (($x96 (=> $x347 $x232)))
 (let (($x388 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x347 $x347)) $x96)))
 (let (($x106 (and (and (and $x388 $x70) $x73) $x39)))
 (let (($x219 (and $x106 $x154)))
 (let (($x369 (not true)))
 (let (($x456 (or (or $x369 $x219) $x429)))
 (let (($x453 (and true $x456)))
 (let (($x431 (= $x453 true)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x299 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x178 (concat ?x138 (concat ?x339 ?x299))))
 (let ((?x287 (bvadd ?x178 (_ bv4 32))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv1 32))) (select input.dst.llvm-mem ?x287))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv2 32))) ?x343))))
 (let (($x319 (= (_ bv0 32) ?x324)))
 (let ((?x50 (ite $x319 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x50 (_ bv1 32))))
 (let (($x233 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x240 (= $x233 $x224)))
 (let (($x87 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x315 (and $x294 $x87)))
 (let (($x60 (=> $x315 $x240)))
 (let (($x239 (= ?x50 (_ bv0 32))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x250 $x239)))
 (let (($x329 (=> $x315 $x227)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv1 32))) (select input.dst.llvm-mem ?x178))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv2 32))) ?x226))))
 (let (($x303 (= input.spec-%var-l-1.2.1.2.0 ?x295)))
 (let (($x62 (=> $x315 $x303)))
 (let (($x313 (= (_ bv0 32) ?x178)))
 (let ((?x249 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x314 (bvuge ?x249 (_ bv1 32))))
 (let (($x266 (= $x87 $x314)))
 (let (($x104 (=> $x294 $x266)))
 (let (($x296 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x267 (and $x294 $x296)))
 (let (($x310 (=> $x267 $x232)))
 (let (($x221 (= ?x249 (_ bv0 32))))
 (let (($x394 (= $x296 $x221)))
 (let (($x374 (=> $x294 $x394)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x94)))
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x390)))
 (let (($x322 (= input.spec-%var-l-1.2.0 ?x400)))
 (let (($x271 (=> $x294 $x322)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x417 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x417 (_ bv1 32))))
 (let (($x316 (= $x294 $x214)))
 (let (($x77 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x297 (=> $x77 $x232)))
 (let (($x331 (= ?x417 (_ bv0 32))))
 (let (($x107 (= $x77 $x331)))
 (let (($x127 (and (and (and (and (and (and $x107 $x297) $x316) $x271) $x374) $x310) $x104)))
 (let (($x246 (and (and (and $x127 $x62) $x329) $x60)))
 (let (($x384 (= $x246 true)))
 (let ((?x125 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem ?x125))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv2 32))) ?x20))))
 (let ((?x245 (bvadd ?x145 (_ bv4 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x8))))
 (let (($x86 (= (_ bv0 32) ?x275)))
 (let ((?x269 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x269 (_ bv1 32))))
 (let (($x307 (= $x233 $x278)))
 (let (($x212 (=> $x315 $x307)))
 (let (($x102 (= ?x269 (_ bv0 32))))
 (let (($x265 (= $x250 $x102)))
 (let (($x328 (=> $x315 $x265)))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x149))))
 (let (($x291 (= input.spec-%var-l-1.2.1.2.0 ?x126)))
 (let (($x176 (=> $x315 $x291)))
 (let (($x67 (= (_ bv0 32) ?x145)))
 (let ((?x225 (ite $x67 (_ bv0 32) (_ bv1 32))))
 (let (($x262 (bvuge ?x225 (_ bv1 32))))
 (let (($x130 (= $x87 $x262)))
 (let (($x253 (=> $x294 $x130)))
 (let (($x204 (= ?x225 (_ bv0 32))))
 (let (($x244 (= $x296 $x204)))
 (let (($x47 (=> $x294 $x244)))
 (let ((?x195 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x298 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x187 (concat (select input.dst.llvm-mem ?x298) (concat ?x184 (concat ?x13 ?x195)))))
 (let (($x279 (= input.spec-%var-l-1.2.0 ?x187)))
 (let (($x216 (=> $x294 $x279)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x124 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (= ?x124 (_ bv0 32))))
 (let (($x100 (= $x77 $x288)))
 (let (($x40 (and (and (and (and $x297 $x310) (= $x294 (bvuge ?x124 (_ bv1 32)))) $x100) $x216)))
 (let (($x147 (and (and (and (and (and $x40 $x47) $x253) $x176) $x328) $x212)))
 (let (($x277 (= $x147 true)))
 (let ((?x65 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x236 (= (_ bv0 3) ?x65)))
 (let (($x155 (= $x236 true)))
 (let (($x5 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x280 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x161 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x280) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x280))))
 (let (($x208 (and true $x161)))
 (let (($x28 (and $x161 $x208)))
 (let (($x234 (= (bvand ?x66 (_ bv4294967288 32)) ?x66)))
 (let (($x259 (= (bvand ?x218 (_ bv4294967292 32)) ?x218)))
 (let (($x301 (and $x259 $x234)))
 (let (($x188 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x218 (bvsub ?x218 (_ bv4 32))) (bvult ?x218 (bvsub ?x218 (_ bv4 32))))))
 (let (($x120 (and (and (and (and (and $x208 $x188) $x259) $x301) $x28) $x5)))
 (let (($x134 (not $x101)))
 (let (($x202 (=> $x134 $x120)))
 (let (($x238 (= $x202 true)))
 (let (($x16 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x242 (= $x16 true)))
 (let (($x61 (= $x134 true)))
 (let (($x235 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x128 (= $x235 true)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x141 (= (_ bv0 32) ?x168)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (and $x286 $x190)))
 (let (($x63 (and $x205 $x141)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x26 $x63)))
 (let (($x159 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x193 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x159)))))))
 (let (($x189 (and $x193 $x56)))
 (let (($x293 (= $x189 true)))
 (let (($x270 (and $x293 $x128)))
 (let (($x182 (and $x270 $x61)))
 (let (($x251 (and $x182 $x242)))
 (let (($x206 (and $x251 $x238)))
 (let (($x24 (and $x206 $x155)))
 (let (($x191 (and $x24 $x277)))
 (let (($x311 (and $x191 $x384)))
 (let (($x76 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x377 (and $x76 $x311)))
 (let (($x158 (bvugt ?x218 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x218 (_ bv3 32))))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x19 (=> (bvule ?x218 (bvsub (bvadd ?x218 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x166 $x158)))))))
 (let (($x131 (=> (and $x134 (bvule ?x218 (bvsub (bvadd ?x218 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x166 $x158)))))))
 (let (($x172 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x252 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x32 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x125 (_ bv1 32))) (or false (or false (and true (or $x252 $x172)))))))
 (let (($x196 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x125 (_ bv1 32)))) (or false (or false (and true (or $x252 $x172)))))))
 (let (($x116 (and $x196 $x131)))
 (let (($x165 (and $x116 $x377)))
 (let (($x454 (=> $x165 $x431)))
 (not $x454))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3258X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3255X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3255X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3255X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.ind-%var3252X () (_ BitVec 32))
(declare-fun input.ind-%var3249X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3249X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3249X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x408 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3258X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x415 (concat ?x408 (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv4 32))))))
 (let ((?x427 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3258X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x402 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3258X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x401 (concat ?x402 (concat ?x427 ?x415))))
 (let (($x409 (= ?x401 ?x401)))
 (let (($x360 (= (_ bv0 32) input.ind-%var3258X)))
 (let ((?x359 (ite $x360 (_ bv0 32) (_ bv1 32))))
 (let (($x419 (bvuge ?x359 (_ bv1 32))))
 (let (($x414 (=> $x419 $x409)))
 (let ((?x424 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3258X))))
 (let ((?x358 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv2 32))) ?x424)))
 (let ((?x420 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3258X (_ bv3 32))) ?x358)))
 (let (($x181 (= ?x420 ?x420)))
 (let (($x91 (=> $x419 $x181)))
 (let (($x392 (= $x419 $x419)))
 (let (($x232 (= false false)))
 (let (($x370 (= ?x359 (_ bv0 32))))
 (let (($x399 (=> $x370 $x232)))
 (let (($x416 (= $x370 $x370)))
 (let ((?x218 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv1 32))) (select input.dst.llvm-mem ?x218))))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x218 (_ bv2 32))) ?x289))))
 (let (($x371 (= input.dst.llvm-%l ?x66)))
 (let (($x428 (and (and (and (and (and $x371 $x416) $x399) $x392) $x91) $x414)))
 (let (($x367 (= input.ind-%var3255X.2.1 input.ind-%var3255X.2.1)))
 (let (($x395 (bvuge input.ind-%var3255X.0 (_ bv1 32))))
 (let (($x389 (=> $x395 $x367)))
 (let (($x387 (= input.ind-%var3255X.2.0 input.ind-%var3255X.2.0)))
 (let (($x344 (=> $x395 $x387)))
 (let (($x256 (= $x395 $x395)))
 (let (($x381 (= input.ind-%var3255X.0 (_ bv0 32))))
 (let (($x354 (=> $x381 $x232)))
 (let (($x383 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x381 $x381)) $x354)))
 (let (($x410 (and (and (and $x383 $x256) $x344) $x389)))
 (let (($x429 (and $x410 $x428)))
 (let ((?x357 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3252X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x418 (concat ?x357 (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv4 32))))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3252X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x151 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3252X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x407 (concat ?x151 (concat ?x362 ?x418))))
 (let (($x380 (= ?x407 ?x407)))
 (let (($x71 (= (_ bv0 32) input.ind-%var3252X)))
 (let ((?x375 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x379 (bvuge ?x375 (_ bv1 32))))
 (let (($x356 (=> $x379 $x380)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3252X))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv2 32))) ?x348)))
 (let ((?x115 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3252X (_ bv3 32))) ?x341)))
 (let (($x46 (= ?x115 ?x115)))
 (let (($x37 (=> $x379 $x46)))
 (let (($x363 (= $x379 $x379)))
 (let (($x373 (= ?x375 (_ bv0 32))))
 (let (($x378 (=> $x373 $x232)))
 (let (($x185 (= $x373 $x373)))
 (let (($x150 (= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x66)))
 (let (($x154 (and (and (and (and (and $x150 $x185) $x378) $x363) $x37) $x356)))
 (let (($x88 (= input.ind-%var3249X.2.1 input.ind-%var3249X.2.1)))
 (let (($x332 (bvuge input.ind-%var3249X.0 (_ bv1 32))))
 (let (($x39 (=> $x332 $x88)))
 (let (($x321 (= input.ind-%var3249X.2.0 input.ind-%var3249X.2.0)))
 (let (($x73 (=> $x332 $x321)))
 (let (($x70 (= $x332 $x332)))
 (let (($x347 (= input.ind-%var3249X.0 (_ bv0 32))))
 (let (($x96 (=> $x347 $x232)))
 (let (($x388 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x347 $x347)) $x96)))
 (let (($x106 (and (and (and $x388 $x70) $x73) $x39)))
 (let (($x219 (and $x106 $x154)))
 (let (($x369 (not true)))
 (let (($x456 (or (or $x369 $x219) $x429)))
 (let (($x453 (and true $x456)))
 (let (($x431 (= $x453 true)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x299 (concat ?x129 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x178 (concat ?x138 (concat ?x339 ?x299))))
 (let ((?x287 (bvadd ?x178 (_ bv4 32))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv1 32))) (select input.dst.llvm-mem ?x287))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv2 32))) ?x343))))
 (let (($x319 (= (_ bv0 32) ?x324)))
 (let ((?x50 (ite $x319 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x50 (_ bv1 32))))
 (let (($x233 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x240 (= $x233 $x224)))
 (let (($x87 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x294 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x315 (and $x294 $x87)))
 (let (($x60 (=> $x315 $x240)))
 (let (($x239 (= ?x50 (_ bv0 32))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x250 $x239)))
 (let (($x329 (=> $x315 $x227)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv1 32))) (select input.dst.llvm-mem ?x178))))
 (let ((?x295 (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x178 (_ bv2 32))) ?x226))))
 (let (($x303 (= input.spec-%var-l-1.2.1.2.0 ?x295)))
 (let (($x62 (=> $x315 $x303)))
 (let (($x313 (= (_ bv0 32) ?x178)))
 (let ((?x249 (ite $x313 (_ bv0 32) (_ bv1 32))))
 (let (($x314 (bvuge ?x249 (_ bv1 32))))
 (let (($x266 (= $x87 $x314)))
 (let (($x104 (=> $x294 $x266)))
 (let (($x296 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x267 (and $x294 $x296)))
 (let (($x310 (=> $x267 $x232)))
 (let (($x221 (= ?x249 (_ bv0 32))))
 (let (($x394 (= $x296 $x221)))
 (let (($x374 (=> $x294 $x394)))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x94)))
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x390)))
 (let (($x322 (= input.spec-%var-l-1.2.0 ?x400)))
 (let (($x271 (=> $x294 $x322)))
 (let (($x33 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x417 (ite $x33 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x417 (_ bv1 32))))
 (let (($x316 (= $x294 $x214)))
 (let (($x77 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x297 (=> $x77 $x232)))
 (let (($x331 (= ?x417 (_ bv0 32))))
 (let (($x107 (= $x77 $x331)))
 (let (($x127 (and (and (and (and (and (and $x107 $x297) $x316) $x271) $x374) $x310) $x104)))
 (let (($x246 (and (and (and $x127 $x62) $x329) $x60)))
 (let (($x384 (= $x246 true)))
 (let ((?x125 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem ?x125))))
 (let ((?x145 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv2 32))) ?x20))))
 (let ((?x245 (bvadd ?x145 (_ bv4 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x8))))
 (let (($x86 (= (_ bv0 32) ?x275)))
 (let ((?x269 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x269 (_ bv1 32))))
 (let (($x307 (= $x233 $x278)))
 (let (($x212 (=> $x315 $x307)))
 (let (($x102 (= ?x269 (_ bv0 32))))
 (let (($x265 (= $x250 $x102)))
 (let (($x328 (=> $x315 $x265)))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv1 32))) (select input.dst.llvm-mem ?x145))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x145 (_ bv2 32))) ?x149))))
 (let (($x291 (= input.spec-%var-l-1.2.1.2.0 ?x126)))
 (let (($x176 (=> $x315 $x291)))
 (let (($x67 (= (_ bv0 32) ?x145)))
 (let ((?x225 (ite $x67 (_ bv0 32) (_ bv1 32))))
 (let (($x262 (bvuge ?x225 (_ bv1 32))))
 (let (($x130 (= $x87 $x262)))
 (let (($x253 (=> $x294 $x130)))
 (let (($x204 (= ?x225 (_ bv0 32))))
 (let (($x244 (= $x296 $x204)))
 (let (($x47 (=> $x294 $x244)))
 (let ((?x195 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x298 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x187 (concat (select input.dst.llvm-mem ?x298) (concat ?x184 (concat ?x13 ?x195)))))
 (let (($x279 (= input.spec-%var-l-1.2.0 ?x187)))
 (let (($x216 (=> $x294 $x279)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x124 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (= ?x124 (_ bv0 32))))
 (let (($x100 (= $x77 $x288)))
 (let (($x40 (and (and (and (and $x297 $x310) (= $x294 (bvuge ?x124 (_ bv1 32)))) $x100) $x216)))
 (let (($x147 (and (and (and (and (and $x40 $x47) $x253) $x176) $x328) $x212)))
 (let (($x277 (= $x147 true)))
 (let ((?x65 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x236 (= (_ bv0 3) ?x65)))
 (let (($x155 (= $x236 true)))
 (let (($x5 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x280 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x161 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x280) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x280))))
 (let (($x208 (and true $x161)))
 (let (($x28 (and $x161 $x208)))
 (let (($x234 (= (bvand ?x66 (_ bv4294967288 32)) ?x66)))
 (let (($x259 (= (bvand ?x218 (_ bv4294967292 32)) ?x218)))
 (let (($x301 (and $x259 $x234)))
 (let (($x188 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x218 (bvsub ?x218 (_ bv4 32))) (bvult ?x218 (bvsub ?x218 (_ bv4 32))))))
 (let (($x120 (and (and (and (and (and $x208 $x188) $x259) $x301) $x28) $x5)))
 (let (($x134 (not $x101)))
 (let (($x202 (=> $x134 $x120)))
 (let (($x238 (= $x202 true)))
 (let (($x16 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x242 (= $x16 true)))
 (let (($x61 (= $x134 true)))
 (let (($x235 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x128 (= $x235 true)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x141 (= (_ bv0 32) ?x168)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x114)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (and $x286 $x190)))
 (let (($x63 (and $x205 $x141)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x26 $x63)))
 (let (($x159 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x193 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x159)))))))
 (let (($x189 (and $x193 $x56)))
 (let (($x293 (= $x189 true)))
 (let (($x270 (and $x293 $x128)))
 (let (($x182 (and $x270 $x61)))
 (let (($x251 (and $x182 $x242)))
 (let (($x206 (and $x251 $x238)))
 (let (($x24 (and $x206 $x155)))
 (let (($x191 (and $x24 $x277)))
 (let (($x311 (and $x191 $x384)))
 (let (($x76 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x377 (and $x76 $x311)))
 (let (($x158 (bvugt ?x218 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd ?x218 (_ bv3 32))))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x19 (=> (bvule ?x218 (bvsub (bvadd ?x218 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x166 $x158)))))))
 (let (($x131 (=> (and $x134 (bvule ?x218 (bvsub (bvadd ?x218 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x166 $x158)))))))
 (let (($x172 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x252 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x298)))
 (let (($x32 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x125 (_ bv1 32))) (or false (or false (and true (or $x252 $x172)))))))
 (let (($x196 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x125 (_ bv1 32)))) (or false (or false (and true (or $x252 $x172)))))))
 (let (($x116 (and $x196 $x131)))
 (let (($x165 (and $x116 $x377)))
 (let (($x454 (=> $x165 $x431)))
 (not $x454))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_34)
(function @fun_34
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var3258X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv4294967280 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.ind-%var3255X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3255X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3255X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3252X () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3249X.2.1 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3249X.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.ind-%var3249X.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4294967292 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4294967295 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xa0a0a0a6)
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xa0a0a0a0)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #xa0a0a0a8)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xa0))
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xa0a0a0a0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.ind-%var3249X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3249X.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3258X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3255X.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3255X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3252X () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3249X.2.1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var3255X.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 57
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x41 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv1 32))) (select input.dst.llvm-mem ?x41))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv2 32))) ?x148))))
 (let ((?x345 ((_ extract 2 0) ?x113)))
 (let (($x327 (= (_ bv0 3) ?x345)))
 (let (($x302 (= $x327 true)))
 (let ((?x317 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x78 (concat ?x317 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x67 (concat ?x145 (concat ?x247 ?x78))))
 (let ((?x245 (bvadd ?x67 (_ bv4 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x122))))
 (let (($x86 (= (_ bv0 32) ?x275)))
 (let ((?x269 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x233 (bvuge ?x269 (_ bv1 32))))
 (let (($x84 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x278 (= $x84 $x233)))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x171 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x58 (and $x171 $x130)))
 (let (($x307 (=> $x58 $x278)))
 (let (($x102 (= ?x269 (_ bv0 32))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x265 (= $x250 $x102)))
 (let (($x328 (=> $x58 $x265)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x121))))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.0 ?x291)))
 (let (($x211 (=> $x58 $x176)))
 (let (($x225 (= (_ bv0 32) ?x67)))
 (let ((?x204 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x204 (_ bv1 32))))
 (let (($x157 (= $x130 $x253)))
 (let (($x315 (=> $x171 $x157)))
 (let (($x124 (= false false)))
 (let (($x40 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x87 (and $x171 $x40)))
 (let (($x262 (=> $x87 $x124)))
 (let (($x244 (= ?x204 (_ bv0 32))))
 (let (($x47 (= $x40 $x244)))
 (let (($x80 (=> $x171 $x47)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x229)))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x200)))
 (let (($x279 (=> $x171 $x187)))
 (let (($x296 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x267 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x29 (bvuge ?x267 (_ bv1 32))))
 (let (($x288 (= $x171 $x29)))
 (let (($x294 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x290 (=> $x294 $x124)))
 (let (($x310 (= ?x267 (_ bv0 32))))
 (let (($x308 (= $x294 $x310)))
 (let (($x33 (and (and (and (and (and (and $x308 $x290) $x288) $x279) $x80) $x262) $x315)))
 (let (($x107 (and (and (and $x33 $x211) $x328) $x307)))
 (let (($x123 (= $x107 true)))
 (let ((?x24 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x323 (= (_ bv0 3) ?x24)))
 (let (($x77 (= $x323 true)))
 (let (($x83 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x156 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x264 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x156) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x156))))
 (let (($x160 (and true $x264)))
 (let (($x28 (and $x264 $x160)))
 (let (($x301 (= (bvand ?x113 (_ bv4294967288 32)) ?x113)))
 (let (($x69 (= (bvand ?x41 (_ bv4294967292 32)) ?x41)))
 (let (($x68 (and $x69 $x301)))
 (let (($x257 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x41 (bvsub ?x41 (_ bv4 32))) (bvult ?x41 (bvsub ?x41 (_ bv4 32))))))
 (let (($x206 (and (and (and (and (and $x160 $x257) $x69) $x68) $x28) $x83)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (not $x101)))
 (let (($x146 (=> $x134 $x206)))
 (let (($x65 (= $x146 true)))
 (let (($x223 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x280 (= $x223 true)))
 (let (($x16 (= $x134 true)))
 (let (($x61 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x182 (= $x61 true)))
 (let ((?x56 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x189 (= (_ bv0 32) ?x56)))
 (let ((?x168 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x141 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x168)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (and $x205 $x141)))
 (let (($x293 (and $x63 $x189)))
 (let (($x35 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x285 (and $x35 $x293)))
 (let (($x258 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x190 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x258)))))))
 (let (($x235 (and $x190 $x285)))
 (let (($x128 (= $x235 true)))
 (let (($x255 (and $x128 $x182)))
 (let (($x242 (and $x255 $x16)))
 (let (($x152 (and $x242 $x280)))
 (let (($x236 (and $x152 $x65)))
 (let (($x232 (and $x236 $x77)))
 (let (($x214 (and $x232 $x123)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x316 (and $x21 $x214)))
 (let (($x57 (bvugt ?x41 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x41 (_ bv3 32))))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x76 (=> (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x186 $x57)))))))
 (let (($x6 (=> (and $x134 (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x186 $x57)))))))
 (let (($x11 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x248 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x215 (=> $x248 (or false (or false (and true (or $x179 $x11)))))))
 (let (($x197 (=> (and $x134 $x248) (or false (or false (and true (or $x179 $x11)))))))
 (let (($x15 (and $x197 $x6)))
 (let (($x320 (and $x15 $x316)))
 (let (($x132 (=> $x320 $x302)))
 (not $x132))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x41 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x148 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv1 32))) (select input.dst.llvm-mem ?x41))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x41 (_ bv2 32))) ?x148))))
 (let ((?x345 ((_ extract 2 0) ?x113)))
 (let (($x327 (= (_ bv0 3) ?x345)))
 (let (($x302 (= $x327 true)))
 (let ((?x317 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x78 (concat ?x317 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x67 (concat ?x145 (concat ?x247 ?x78))))
 (let ((?x245 (bvadd ?x67 (_ bv4 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x122))))
 (let (($x86 (= (_ bv0 32) ?x275)))
 (let ((?x269 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x233 (bvuge ?x269 (_ bv1 32))))
 (let (($x84 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x278 (= $x84 $x233)))
 (let (($x130 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x171 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x58 (and $x171 $x130)))
 (let (($x307 (=> $x58 $x278)))
 (let (($x102 (= ?x269 (_ bv0 32))))
 (let (($x250 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x265 (= $x250 $x102)))
 (let (($x328 (=> $x58 $x265)))
 (let ((?x121 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x291 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x121))))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.0 ?x291)))
 (let (($x211 (=> $x58 $x176)))
 (let (($x225 (= (_ bv0 32) ?x67)))
 (let ((?x204 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x204 (_ bv1 32))))
 (let (($x157 (= $x130 $x253)))
 (let (($x315 (=> $x171 $x157)))
 (let (($x124 (= false false)))
 (let (($x40 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x87 (and $x171 $x40)))
 (let (($x262 (=> $x87 $x124)))
 (let (($x244 (= ?x204 (_ bv0 32))))
 (let (($x47 (= $x40 $x244)))
 (let (($x80 (=> $x171 $x47)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x13 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x229)))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x13)))
 (let (($x187 (= input.spec-%var-l-1.2.0 ?x200)))
 (let (($x279 (=> $x171 $x187)))
 (let (($x296 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x267 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x29 (bvuge ?x267 (_ bv1 32))))
 (let (($x288 (= $x171 $x29)))
 (let (($x294 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x290 (=> $x294 $x124)))
 (let (($x310 (= ?x267 (_ bv0 32))))
 (let (($x308 (= $x294 $x310)))
 (let (($x33 (and (and (and (and (and (and $x308 $x290) $x288) $x279) $x80) $x262) $x315)))
 (let (($x107 (and (and (and $x33 $x211) $x328) $x307)))
 (let (($x123 (= $x107 true)))
 (let ((?x24 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x323 (= (_ bv0 3) ?x24)))
 (let (($x77 (= $x323 true)))
 (let (($x83 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x156 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x264 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x156) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x156))))
 (let (($x160 (and true $x264)))
 (let (($x28 (and $x264 $x160)))
 (let (($x301 (= (bvand ?x113 (_ bv4294967288 32)) ?x113)))
 (let (($x69 (= (bvand ?x41 (_ bv4294967292 32)) ?x41)))
 (let (($x68 (and $x69 $x301)))
 (let (($x257 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x41 (bvsub ?x41 (_ bv4 32))) (bvult ?x41 (bvsub ?x41 (_ bv4 32))))))
 (let (($x206 (and (and (and (and (and $x160 $x257) $x69) $x68) $x28) $x83)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (not $x101)))
 (let (($x146 (=> $x134 $x206)))
 (let (($x65 (= $x146 true)))
 (let (($x223 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x280 (= $x223 true)))
 (let (($x16 (= $x134 true)))
 (let (($x61 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x182 (= $x61 true)))
 (let ((?x56 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x189 (= (_ bv0 32) ?x56)))
 (let ((?x168 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x141 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x168)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (and $x205 $x141)))
 (let (($x293 (and $x63 $x189)))
 (let (($x35 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x285 (and $x35 $x293)))
 (let (($x258 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x190 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x258)))))))
 (let (($x235 (and $x190 $x285)))
 (let (($x128 (= $x235 true)))
 (let (($x255 (and $x128 $x182)))
 (let (($x242 (and $x255 $x16)))
 (let (($x152 (and $x242 $x280)))
 (let (($x236 (and $x152 $x65)))
 (let (($x232 (and $x236 $x77)))
 (let (($x214 (and $x232 $x123)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x316 (and $x21 $x214)))
 (let (($x57 (bvugt ?x41 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x153 (bvadd ?x41 (_ bv3 32))))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x153)))
 (let (($x76 (=> (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x186 $x57)))))))
 (let (($x6 (=> (and $x134 (bvule ?x41 (bvsub (bvadd ?x41 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x186 $x57)))))))
 (let (($x11 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x248 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x215 (=> $x248 (or false (or false (and true (or $x179 $x11)))))))
 (let (($x197 (=> (and $x134 $x248) (or false (or false (and true (or $x179 $x11)))))))
 (let (($x15 (and $x197 $x6)))
 (let (($x320 (and $x15 $x316)))
 (let (($x132 (=> $x320 $x302)))
 (not $x132))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 58
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x248 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x261))))
 (let (($x132 (bvule ?x213 (_ bv4294967294 32))))
 (let (($x326 (= $x132 true)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x317 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x67 (concat ?x20 (concat ?x317 ?x247))))
 (let ((?x211 (bvadd ?x67 (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x245))))
 (let (($x164 (= (_ bv0 32) ?x217)))
 (let ((?x122 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x102 (bvuge ?x122 (_ bv1 32))))
 (let (($x269 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x265 (= $x269 $x102)))
 (let (($x262 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x288 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x157 (and $x288 $x262)))
 (let (($x328 (=> $x157 $x265)))
 (let (($x93 (= ?x122 (_ bv0 32))))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x176 $x93)))
 (let (($x86 (=> $x157 $x275)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x305))))
 (let (($x121 (= input.spec-%var-l-1.2.1.2.0 ?x312)))
 (let (($x149 (=> $x157 $x121)))
 (let (($x225 (= (_ bv0 32) ?x67)))
 (let ((?x204 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x204 (_ bv1 32))))
 (let (($x130 (= $x262 $x180)))
 (let (($x253 (=> $x288 $x130)))
 (let (($x171 (= false false)))
 (let (($x40 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x191 (and $x288 $x40)))
 (let (($x87 (=> $x191 $x171)))
 (let (($x244 (= ?x204 (_ bv0 32))))
 (let (($x47 (= $x40 $x244)))
 (let (($x80 (=> $x288 $x47)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x281)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x229)))
 (let (($x279 (= input.spec-%var-l-1.2.0 ?x187)))
 (let (($x277 (=> $x288 $x279)))
 (let (($x308 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x124 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x124 (_ bv1 32))))
 (let (($x100 (= $x288 $x147)))
 (let (($x267 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x29 (=> $x267 $x171)))
 (let (($x290 (= ?x124 (_ bv0 32))))
 (let (($x212 (= $x267 $x290)))
 (let (($x107 (and (and (and (and (and (and $x212 $x29) $x100) $x277) $x80) $x87) $x253)))
 (let (($x316 (and (and (and $x107 $x149) $x86) $x328)))
 (let (($x320 (= $x316 true)))
 (let ((?x232 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x297 (= (_ bv0 3) ?x232)))
 (let (($x294 (= $x297 true)))
 (let (($x82 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x222 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x103 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x222) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x222))))
 (let (($x220 (and true $x103)))
 (let (($x28 (and $x103 $x220)))
 (let (($x68 (= (bvand ?x213 (_ bv4294967288 32)) ?x213)))
 (let (($x79 (= (bvand ?x248 (_ bv4294967292 32)) ?x248)))
 (let (($x202 (and $x79 $x68)))
 (let (($x175 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x248 (bvsub ?x248 (_ bv4 32))) (bvult ?x248 (bvsub ?x248 (_ bv4 32))))))
 (let (($x236 (and (and (and (and (and $x220 $x175) $x79) $x202) $x28) $x82)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (not $x101)))
 (let (($x155 (=> $x134 $x236)))
 (let (($x24 (= $x155 true)))
 (let (($x161 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x156 (= $x161 true)))
 (let (($x223 (= $x134 true)))
 (let (($x16 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x242 (= $x16 true)))
 (let ((?x285 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x235 (= (_ bv0 32) ?x285)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x189 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let (($x63 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (and $x63 $x189)))
 (let (($x128 (and $x293 $x235)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x133 $x128)))
 (let (($x286 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x141 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x286)))))))
 (let (($x61 (and $x141 $x270)))
 (let (($x182 (= $x61 true)))
 (let (($x251 (and $x182 $x242)))
 (let (($x280 (and $x251 $x223)))
 (let (($x208 (and $x280 $x156)))
 (let (($x323 (and $x208 $x24)))
 (let (($x254 (and $x323 $x294)))
 (let (($x345 (and $x254 $x320)))
 (let (($x144 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x327 (and $x144 $x345)))
 (let (($x131 (bvugt ?x248 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x248 (_ bv3 32))))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x21 (=> (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x19 $x131)))))))
 (let (($x97 (=> (and $x134 (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x19 $x131)))))))
 (let (($x196 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x166 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x158 (=> $x166 (or false (or false (and true (or $x32 $x196)))))))
 (let (($x298 (=> (and $x134 $x166) (or false (or false (and true (or $x32 $x196)))))))
 (let (($x153 (and $x298 $x97)))
 (let (($x302 (and $x153 $x327)))
 (let (($x140 (=> $x302 $x326)))
 (not $x140)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x248 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv1 32))) (select input.dst.llvm-mem ?x248))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x248 (_ bv2 32))) ?x261))))
 (let (($x132 (bvule ?x213 (_ bv4294967294 32))))
 (let (($x326 (= $x132 true)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x247 (concat ?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x317 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x67 (concat ?x20 (concat ?x317 ?x247))))
 (let ((?x211 (bvadd ?x67 (_ bv4 32))))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv1 32))) (select input.dst.llvm-mem ?x211))))
 (let ((?x217 (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x211 (_ bv2 32))) ?x245))))
 (let (($x164 (= (_ bv0 32) ?x217)))
 (let ((?x122 (ite $x164 (_ bv0 32) (_ bv1 32))))
 (let (($x102 (bvuge ?x122 (_ bv1 32))))
 (let (($x269 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x265 (= $x269 $x102)))
 (let (($x262 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x288 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x157 (and $x288 $x262)))
 (let (($x328 (=> $x157 $x265)))
 (let (($x93 (= ?x122 (_ bv0 32))))
 (let (($x176 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x275 (= $x176 $x93)))
 (let (($x86 (=> $x157 $x275)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv1 32))) (select input.dst.llvm-mem ?x67))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x67 (_ bv2 32))) ?x305))))
 (let (($x121 (= input.spec-%var-l-1.2.1.2.0 ?x312)))
 (let (($x149 (=> $x157 $x121)))
 (let (($x225 (= (_ bv0 32) ?x67)))
 (let ((?x204 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x180 (bvuge ?x204 (_ bv1 32))))
 (let (($x130 (= $x262 $x180)))
 (let (($x253 (=> $x288 $x130)))
 (let (($x171 (= false false)))
 (let (($x40 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x191 (and $x288 $x40)))
 (let (($x87 (=> $x191 $x171)))
 (let (($x244 (= ?x204 (_ bv0 32))))
 (let (($x47 (= $x40 $x244)))
 (let (($x80 (=> $x288 $x47)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x281)))
 (let ((?x187 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x229)))
 (let (($x279 (= input.spec-%var-l-1.2.0 ?x187)))
 (let (($x277 (=> $x288 $x279)))
 (let (($x308 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x124 (ite $x308 (_ bv0 32) (_ bv1 32))))
 (let (($x147 (bvuge ?x124 (_ bv1 32))))
 (let (($x100 (= $x288 $x147)))
 (let (($x267 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x29 (=> $x267 $x171)))
 (let (($x290 (= ?x124 (_ bv0 32))))
 (let (($x212 (= $x267 $x290)))
 (let (($x107 (and (and (and (and (and (and $x212 $x29) $x100) $x277) $x80) $x87) $x253)))
 (let (($x316 (and (and (and $x107 $x149) $x86) $x328)))
 (let (($x320 (= $x316 true)))
 (let ((?x232 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x297 (= (_ bv0 3) ?x232)))
 (let (($x294 (= $x297 true)))
 (let (($x82 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x222 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x103 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x222) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x222))))
 (let (($x220 (and true $x103)))
 (let (($x28 (and $x103 $x220)))
 (let (($x68 (= (bvand ?x213 (_ bv4294967288 32)) ?x213)))
 (let (($x79 (= (bvand ?x248 (_ bv4294967292 32)) ?x248)))
 (let (($x202 (and $x79 $x68)))
 (let (($x175 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x248 (bvsub ?x248 (_ bv4 32))) (bvult ?x248 (bvsub ?x248 (_ bv4 32))))))
 (let (($x236 (and (and (and (and (and $x220 $x175) $x79) $x202) $x28) $x82)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (not $x101)))
 (let (($x155 (=> $x134 $x236)))
 (let (($x24 (= $x155 true)))
 (let (($x161 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x156 (= $x161 true)))
 (let (($x223 (= $x134 true)))
 (let (($x16 (= (_ bv0 32) input.spec-%var-sum-0.L3%5%bbentry)))
 (let (($x242 (= $x16 true)))
 (let ((?x285 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x235 (= (_ bv0 32) ?x285)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x189 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let (($x63 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (and $x63 $x189)))
 (let (($x128 (and $x293 $x235)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x133 $x128)))
 (let (($x286 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x141 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x26 $x286)))))))
 (let (($x61 (and $x141 $x270)))
 (let (($x182 (= $x61 true)))
 (let (($x251 (and $x182 $x242)))
 (let (($x280 (and $x251 $x223)))
 (let (($x208 (and $x280 $x156)))
 (let (($x323 (and $x208 $x24)))
 (let (($x254 (and $x323 $x294)))
 (let (($x345 (and $x254 $x320)))
 (let (($x144 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x327 (and $x144 $x345)))
 (let (($x131 (bvugt ?x248 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd ?x248 (_ bv3 32))))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x21 (=> (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x19 $x131)))))))
 (let (($x97 (=> (and $x134 (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x19 $x131)))))))
 (let (($x196 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let (($x166 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32)) (_ bv1 32)))))
 (let (($x158 (=> $x166 (or false (or false (and true (or $x32 $x196)))))))
 (let (($x298 (=> (and $x134 $x166) (or false (or false (and true (or $x32 $x196)))))))
 (let (($x153 (and $x298 $x97)))
 (let (($x302 (and $x153 $x327)))
 (let (($x140 (=> $x302 $x326)))
 (not $x140)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 59
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3445X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3442X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3442X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3442X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var3439X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3436X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3436X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3436X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x495 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3445X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x486 (concat ?x495 (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv4 32))))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3445X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3445X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x497 (concat ?x502 (concat ?x492 ?x486))))
 (let (($x504 (= ?x497 ?x497)))
 (let (($x545 (= (_ bv0 32) input.ind-%var3445X)))
 (let ((?x510 (ite $x545 (_ bv0 32) (_ bv1 32))))
 (let (($x610 (bvuge ?x510 (_ bv1 32))))
 (let (($x509 (=> $x610 $x504)))
 (let ((?x501 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3445X))))
 (let ((?x515 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv2 32))) ?x501)))
 (let ((?x516 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv3 32))) ?x515)))
 (let (($x512 (= ?x516 ?x516)))
 (let (($x498 (=> $x610 $x512)))
 (let (($x481 (= $x610 $x610)))
 (let (($x147 (= false false)))
 (let (($x478 (= ?x510 (_ bv0 32))))
 (let (($x496 (=> $x478 $x147)))
 (let (($x500 (= $x478 $x478)))
 (let ((?x166 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv1 32))) (select input.dst.llvm-mem ?x166))))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv2 32))) ?x234))))
 (let ((?x179 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv1 32))) (select input.dst.llvm-mem ?x179))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv2 32))) ?x369))))
 (let (($x508 (= ?x92 ?x65)))
 (let (($x34 (and (and (and (and (and $x508 $x500) $x496) $x481) $x498) $x509)))
 (let (($x471 (= input.ind-%var3442X.2.1 input.ind-%var3442X.2.1)))
 (let (($x468 (bvuge input.ind-%var3442X.0 (_ bv1 32))))
 (let (($x472 (=> $x468 $x471)))
 (let (($x474 (= input.ind-%var3442X.2.0 input.ind-%var3442X.2.0)))
 (let (($x490 (=> $x468 $x474)))
 (let (($x465 (= $x468 $x468)))
 (let (($x473 (= input.ind-%var3442X.0 (_ bv0 32))))
 (let (($x479 (=> $x473 $x147)))
 (let (($x462 (= $x473 $x473)))
 (let (($x482 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x475 (and (and (and (and (and $x482 $x462) $x479) $x465) $x490) $x472)))
 (let (($x36 (and $x475 $x34)))
 (let (($x282 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x173 (and $x282 $x36)))
 (let ((?x447 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3439X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x45 (concat ?x447 (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv4 32))))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3439X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3439X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x449 (concat ?x443 (concat ?x142 ?x45))))
 (let (($x452 (= ?x449 ?x449)))
 (let (($x446 (= (_ bv0 32) input.ind-%var3439X)))
 (let ((?x445 (ite $x446 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x445 (_ bv1 32))))
 (let (($x527 (=> $x434 $x452)))
 (let ((?x518 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3439X))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv2 32))) ?x518)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv3 32))) ?x85)))
 (let (($x444 (= ?x433 ?x433)))
 (let (($x437 (=> $x434 $x444)))
 (let (($x438 (= $x434 $x434)))
 (let (($x457 (= ?x445 (_ bv0 32))))
 (let (($x450 (=> $x457 $x147)))
 (let (($x488 (= $x457 $x457)))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x123 (concat ?x149 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x30 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x8 (concat ?x30 (concat ?x176 ?x123))))
 (let (($x194 (= ?x8 ?x65)))
 (let (($x469 (and (and (and (and (and $x194 $x488) $x450) $x438) $x437) $x527)))
 (let (($x429 (= input.ind-%var3436X.2.1 input.ind-%var3436X.2.1)))
 (let (($x415 (bvuge input.ind-%var3436X.0 (_ bv1 32))))
 (let (($x456 (=> $x415 $x429)))
 (let (($x409 (= input.ind-%var3436X.2.0 input.ind-%var3436X.2.0)))
 (let (($x414 (=> $x415 $x409)))
 (let (($x411 (= $x415 $x415)))
 (let (($x177 (= input.ind-%var3436X.0 (_ bv0 32))))
 (let (($x422 (=> $x177 $x147)))
 (let (($x408 (= $x177 $x177)))
 (let (($x413 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x53 (and (and (and (and (and $x413 $x408) $x422) $x411) $x414) $x456)))
 (let (($x470 (and $x53 $x469)))
 (let (($x84 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x467 (and $x84 $x470)))
 (let (($x499 (not true)))
 (let (($x117 (or (or $x499 $x467) $x173)))
 (let (($x139 (and true $x117)))
 (let (($x112 (= $x139 true)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x92 (_ bv4 32))))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x92 (_ bv4 32)) (_ bv2 32))) ?x330)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x92 (_ bv4 32)) (_ bv3 32))) ?x341)))
 (let ((?x407 (bvadd ?x37 (_ bv4 32))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv1 32))) (select input.dst.llvm-mem ?x407))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv2 32))) ?x219))))
 (let (($x383 (= (_ bv0 32) ?x354)))
 (let ((?x395 (ite $x383 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (bvuge ?x395 (_ bv1 32))))
 (let (($x403 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x421 (= $x403 $x399)))
 (let (($x340 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x364 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x346 (and $x364 $x340)))
 (let (($x419 (=> $x346 $x421)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv1 32))) (select input.dst.llvm-mem ?x37))))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv2 32))) ?x367))))
 (let (($x370 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x359)))
 (let (($x416 (=> $x346 $x370)))
 (let (($x256 (= ?x395 (_ bv0 32))))
 (let (($x337 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x396 (= $x337 $x256)))
 (let (($x398 (=> $x346 $x396)))
 (let (($x111 (= (_ bv0 32) ?x37)))
 (let ((?x54 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x362 (= ?x54 (_ bv0 32))))
 (let (($x379 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x379 $x362)))
 (let (($x357 (=> $x364 $x376)))
 (let (($x355 (bvuge ?x54 (_ bv1 32))))
 (let (($x151 (= $x340 $x355)))
 (let (($x391 (=> $x364 $x151)))
 (let (($x363 (and $x364 $x379)))
 (let (($x338 (=> $x363 $x147)))
 (let (($x384 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x378 (=> $x384 $x147)))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x39))))
 (let (($x185 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x373)))
 (let (($x365 (=> $x364 $x185)))
 (let (($x96 (= (_ bv0 32) ?x92)))
 (let ((?x388 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x318 (bvuge ?x388 (_ bv1 32))))
 (let (($x321 (= $x364 $x318)))
 (let (($x332 (= ?x388 (_ bv0 32))))
 (let (($x70 (= $x384 $x332)))
 (let (($x393 (and (and (and (and (and (and $x70 $x321) $x365) $x378) $x338) $x391) $x357)))
 (let (($x43 (and (and (and $x393 $x398) $x416) $x419)))
 (let (($x424 (=> $x282 $x43)))
 (let (($x358 (= $x424 true)))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x8 (_ bv4 32))))))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x8 (_ bv4 32)) (_ bv2 32))) ?x273)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x8 (_ bv4 32)) (_ bv3 32))) ?x390)))
 (let ((?x17 (bvadd ?x271 (_ bv4 32))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x10))))
 (let (($x405 (= (_ bv0 32) ?x62)))
 (let ((?x287 (ite $x405 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x287 (_ bv1 32))))
 (let (($x27 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x135 (= $x27 $x44)))
 (let (($x210 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x201 (and $x245 $x210)))
 (let (($x64 (=> $x201 $x135)))
 (let (($x263 (= ?x287 (_ bv0 32))))
 (let (($x241 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x309 (= $x241 $x263)))
 (let (($x300 (=> $x201 $x309)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x249))))
 (let (($x266 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x314)))
 (let (($x104 (=> $x201 $x266)))
 (let (($x350 (= (_ bv0 32) ?x271)))
 (let ((?x306 (ite $x350 (_ bv0 32) (_ bv1 32))))
 (let (($x339 (= ?x306 (_ bv0 32))))
 (let (($x132 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x276 (= $x132 $x339)))
 (let (($x129 (=> $x245 $x276)))
 (let (($x7 (bvuge ?x306 (_ bv1 32))))
 (let (($x138 (= $x210 $x7)))
 (let (($x325 (=> $x245 $x138)))
 (let (($x326 (and $x245 $x132)))
 (let (($x140 (=> $x326 $x147)))
 (let (($x305 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x305 $x147)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x86))))
 (let (($x320 (= input.spec-%var-l-1.2.1.2.0 ?x316)))
 (let (($x345 (=> $x245 $x320)))
 (let (($x334 (= (_ bv0 32) ?x8)))
 (let ((?x230 (ite $x334 (_ bv0 32) (_ bv1 32))))
 (let (($x38 (bvuge ?x230 (_ bv1 32))))
 (let (($x217 (= $x245 $x38)))
 (let (($x250 (= ?x230 (_ bv0 32))))
 (let (($x417 (= $x305 $x250)))
 (let (($x239 (and (and (and (and (and (and $x417 $x217) $x345) $x327) $x140) $x325) $x129)))
 (let (($x349 (and (and (and $x239 $x104) $x300) $x64)))
 (let (($x224 (=> $x84 $x349)))
 (let (($x240 (= $x224 true)))
 (let ((?x126 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x231 (= (_ bv0 3) ?x126)))
 (let (($x58 (= $x231 true)))
 (let ((?x204 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x218 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem ?x218) (concat ?x191 (concat ?x47 ?x204)))))
 (let (($x180 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x262)))
 (let (($x130 (=> $x282 $x180)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x145 (_ bv1 32))))
 (let (($x67 (= $x282 $x55)))
 (let (($x317 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x247 (=> $x317 $x147)))
 (let (($x228 (= ?x145 (_ bv0 32))))
 (let (($x105 (= $x317 $x228)))
 (let (($x157 (and (and (and $x105 $x247) $x67) $x130)))
 (let (($x315 (= $x157 true)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x274)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x229)))
 (let (($x233 (= input.spec-%var-l-1.2.0 ?x277)))
 (let (($x216 (=> $x84 $x233)))
 (let (($x171 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x29 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x29 (_ bv1 32))))
 (let (($x13 (= $x84 $x195)))
 (let (($x290 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x100 (=> $x290 $x147)))
 (let (($x331 (= ?x29 (_ bv0 32))))
 (let (($x288 (= $x290 $x331)))
 (let (($x78 (and (and (and $x288 $x100) $x13) $x216)))
 (let (($x20 (= $x78 true)))
 (let (($x77 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x120 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259))))
 (let (($x79 (and true $x120)))
 (let (($x24 (and $x120 $x79)))
 (let (($x236 (= (bvand ?x65 (_ bv4294967288 32)) ?x65)))
 (let (($x289 (= (bvand ?x166 (_ bv4294967292 32)) ?x166)))
 (let (($x155 (and $x289 $x236)))
 (let (($x25 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x166 (bvsub ?x166 (_ bv4 32))) (bvult ?x166 (bvsub ?x166 (_ bv4 32))))))
 (let (($x296 (and (and (and (and (and $x79 $x25) $x289) $x155) $x24) $x77)))
 (let (($x134 (not $x101)))
 (let (($x267 (=> $x134 $x296)))
 (let (($x310 (= $x267 true)))
 (let (($x257 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x9 (= $x257 true)))
 (let (($x188 (= $x134 true)))
 (let ((?x152 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x152)))
 (let ((?x251 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x251)))
 (let (($x242 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x280 (and $x242 $x223)))
 (let (($x156 (and $x280 $x161)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x208 (and $x63 $x156)))
 (let (($x235 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x285 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x285 $x235)))))))
 (let (($x264 (and $x16 $x208)))
 (let (($x222 (= $x264 true)))
 (let ((?x190 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x209 (bvneg ?x190)))
 (let (($x205 (= ?x209 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x141 (= $x205 true)))
 (let (($x160 (and $x141 $x222)))
 (let (($x103 (and $x160 $x188)))
 (let (($x5 (and $x103 $x9)))
 (let (($x308 (and $x5 $x310)))
 (let (($x18 (and $x308 $x20)))
 (let (($x167 (and $x18 $x315)))
 (let (($x192 (and $x167 $x58)))
 (let (($x60 (and $x192 $x240)))
 (let (($x420 (and $x60 $x358)))
 (let (($x181 (and $x282 $x420)))
 (let (($x193 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x91 (and $x193 $x181)))
 (let (($x6 (bvugt ?x166 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x166 (_ bv3 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x144 (=> (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x6)))))))
 (let (($x284 (=> (and $x134 (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x6)))))))
 (let (($x197 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x218)))
 (let (($x57 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x179 (_ bv1 32))) (or false (or false (and true (or $x215 $x197)))))))
 (let (($x89 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x179 (_ bv1 32)))) (or false (or false (and true (or $x215 $x197)))))))
 (let (($x23 (and $x89 $x284)))
 (let (($x425 (and $x23 $x91)))
 (let (($x72 (=> $x425 $x112)))
 (not $x72)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3445X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3442X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3442X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3442X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var3439X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3436X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3436X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3436X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x495 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3445X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x486 (concat ?x495 (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv4 32))))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3445X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x502 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3445X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x497 (concat ?x502 (concat ?x492 ?x486))))
 (let (($x504 (= ?x497 ?x497)))
 (let (($x545 (= (_ bv0 32) input.ind-%var3445X)))
 (let ((?x510 (ite $x545 (_ bv0 32) (_ bv1 32))))
 (let (($x610 (bvuge ?x510 (_ bv1 32))))
 (let (($x509 (=> $x610 $x504)))
 (let ((?x501 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3445X))))
 (let ((?x515 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv2 32))) ?x501)))
 (let ((?x516 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3445X (_ bv3 32))) ?x515)))
 (let (($x512 (= ?x516 ?x516)))
 (let (($x498 (=> $x610 $x512)))
 (let (($x481 (= $x610 $x610)))
 (let (($x147 (= false false)))
 (let (($x478 (= ?x510 (_ bv0 32))))
 (let (($x496 (=> $x478 $x147)))
 (let (($x500 (= $x478 $x478)))
 (let ((?x166 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x234 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv1 32))) (select input.dst.llvm-mem ?x166))))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x166 (_ bv2 32))) ?x234))))
 (let ((?x179 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x369 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv1 32))) (select input.dst.llvm-mem ?x179))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x179 (_ bv2 32))) ?x369))))
 (let (($x508 (= ?x92 ?x65)))
 (let (($x34 (and (and (and (and (and $x508 $x500) $x496) $x481) $x498) $x509)))
 (let (($x471 (= input.ind-%var3442X.2.1 input.ind-%var3442X.2.1)))
 (let (($x468 (bvuge input.ind-%var3442X.0 (_ bv1 32))))
 (let (($x472 (=> $x468 $x471)))
 (let (($x474 (= input.ind-%var3442X.2.0 input.ind-%var3442X.2.0)))
 (let (($x490 (=> $x468 $x474)))
 (let (($x465 (= $x468 $x468)))
 (let (($x473 (= input.ind-%var3442X.0 (_ bv0 32))))
 (let (($x479 (=> $x473 $x147)))
 (let (($x462 (= $x473 $x473)))
 (let (($x482 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x475 (and (and (and (and (and $x482 $x462) $x479) $x465) $x490) $x472)))
 (let (($x36 (and $x475 $x34)))
 (let (($x282 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x173 (and $x282 $x36)))
 (let ((?x447 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3439X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x45 (concat ?x447 (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv4 32))))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3439X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3439X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x449 (concat ?x443 (concat ?x142 ?x45))))
 (let (($x452 (= ?x449 ?x449)))
 (let (($x446 (= (_ bv0 32) input.ind-%var3439X)))
 (let ((?x445 (ite $x446 (_ bv0 32) (_ bv1 32))))
 (let (($x434 (bvuge ?x445 (_ bv1 32))))
 (let (($x527 (=> $x434 $x452)))
 (let ((?x518 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3439X))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv2 32))) ?x518)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3439X (_ bv3 32))) ?x85)))
 (let (($x444 (= ?x433 ?x433)))
 (let (($x437 (=> $x434 $x444)))
 (let (($x438 (= $x434 $x434)))
 (let (($x457 (= ?x445 (_ bv0 32))))
 (let (($x450 (=> $x457 $x147)))
 (let (($x488 (= $x457 $x457)))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x123 (concat ?x149 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x30 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x8 (concat ?x30 (concat ?x176 ?x123))))
 (let (($x194 (= ?x8 ?x65)))
 (let (($x469 (and (and (and (and (and $x194 $x488) $x450) $x438) $x437) $x527)))
 (let (($x429 (= input.ind-%var3436X.2.1 input.ind-%var3436X.2.1)))
 (let (($x415 (bvuge input.ind-%var3436X.0 (_ bv1 32))))
 (let (($x456 (=> $x415 $x429)))
 (let (($x409 (= input.ind-%var3436X.2.0 input.ind-%var3436X.2.0)))
 (let (($x414 (=> $x415 $x409)))
 (let (($x411 (= $x415 $x415)))
 (let (($x177 (= input.ind-%var3436X.0 (_ bv0 32))))
 (let (($x422 (=> $x177 $x147)))
 (let (($x408 (= $x177 $x177)))
 (let (($x413 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x53 (and (and (and (and (and $x413 $x408) $x422) $x411) $x414) $x456)))
 (let (($x470 (and $x53 $x469)))
 (let (($x84 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x467 (and $x84 $x470)))
 (let (($x499 (not true)))
 (let (($x117 (or (or $x499 $x467) $x173)))
 (let (($x139 (and true $x117)))
 (let (($x112 (= $x139 true)))
 (let ((?x330 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x92 (_ bv4 32))))))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x92 (_ bv4 32)) (_ bv2 32))) ?x330)))
 (let ((?x37 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x92 (_ bv4 32)) (_ bv3 32))) ?x341)))
 (let ((?x407 (bvadd ?x37 (_ bv4 32))))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv1 32))) (select input.dst.llvm-mem ?x407))))
 (let ((?x354 (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x407 (_ bv2 32))) ?x219))))
 (let (($x383 (= (_ bv0 32) ?x354)))
 (let ((?x395 (ite $x383 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (bvuge ?x395 (_ bv1 32))))
 (let (($x403 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x421 (= $x403 $x399)))
 (let (($x340 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x364 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x346 (and $x364 $x340)))
 (let (($x419 (=> $x346 $x421)))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv1 32))) (select input.dst.llvm-mem ?x37))))
 (let ((?x359 (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x37 (_ bv2 32))) ?x367))))
 (let (($x370 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x359)))
 (let (($x416 (=> $x346 $x370)))
 (let (($x256 (= ?x395 (_ bv0 32))))
 (let (($x337 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x396 (= $x337 $x256)))
 (let (($x398 (=> $x346 $x396)))
 (let (($x111 (= (_ bv0 32) ?x37)))
 (let ((?x54 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x362 (= ?x54 (_ bv0 32))))
 (let (($x379 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x379 $x362)))
 (let (($x357 (=> $x364 $x376)))
 (let (($x355 (bvuge ?x54 (_ bv1 32))))
 (let (($x151 (= $x340 $x355)))
 (let (($x391 (=> $x364 $x151)))
 (let (($x363 (and $x364 $x379)))
 (let (($x338 (=> $x363 $x147)))
 (let (($x384 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x378 (=> $x384 $x147)))
 (let ((?x39 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv1 32))) (select input.dst.llvm-mem ?x92))))
 (let ((?x373 (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x92 (_ bv2 32))) ?x39))))
 (let (($x185 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x373)))
 (let (($x365 (=> $x364 $x185)))
 (let (($x96 (= (_ bv0 32) ?x92)))
 (let ((?x388 (ite $x96 (_ bv0 32) (_ bv1 32))))
 (let (($x318 (bvuge ?x388 (_ bv1 32))))
 (let (($x321 (= $x364 $x318)))
 (let (($x332 (= ?x388 (_ bv0 32))))
 (let (($x70 (= $x384 $x332)))
 (let (($x393 (and (and (and (and (and (and $x70 $x321) $x365) $x378) $x338) $x391) $x357)))
 (let (($x43 (and (and (and $x393 $x398) $x416) $x419)))
 (let (($x424 (=> $x282 $x43)))
 (let (($x358 (= $x424 true)))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x8 (_ bv4 32))))))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x8 (_ bv4 32)) (_ bv2 32))) ?x273)))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x8 (_ bv4 32)) (_ bv3 32))) ?x390)))
 (let ((?x17 (bvadd ?x271 (_ bv4 32))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv1 32))) (select input.dst.llvm-mem ?x17))))
 (let ((?x62 (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x17 (_ bv2 32))) ?x10))))
 (let (($x405 (= (_ bv0 32) ?x62)))
 (let ((?x287 (ite $x405 (_ bv0 32) (_ bv1 32))))
 (let (($x44 (bvuge ?x287 (_ bv1 32))))
 (let (($x27 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x135 (= $x27 $x44)))
 (let (($x210 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x245 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x201 (and $x245 $x210)))
 (let (($x64 (=> $x201 $x135)))
 (let (($x263 (= ?x287 (_ bv0 32))))
 (let (($x241 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x309 (= $x241 $x263)))
 (let (($x300 (=> $x201 $x309)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x249))))
 (let (($x266 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x314)))
 (let (($x104 (=> $x201 $x266)))
 (let (($x350 (= (_ bv0 32) ?x271)))
 (let ((?x306 (ite $x350 (_ bv0 32) (_ bv1 32))))
 (let (($x339 (= ?x306 (_ bv0 32))))
 (let (($x132 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x276 (= $x132 $x339)))
 (let (($x129 (=> $x245 $x276)))
 (let (($x7 (bvuge ?x306 (_ bv1 32))))
 (let (($x138 (= $x210 $x7)))
 (let (($x325 (=> $x245 $x138)))
 (let (($x326 (and $x245 $x132)))
 (let (($x140 (=> $x326 $x147)))
 (let (($x305 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x327 (=> $x305 $x147)))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv1 32))) (select input.dst.llvm-mem ?x8))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x8 (_ bv2 32))) ?x86))))
 (let (($x320 (= input.spec-%var-l-1.2.1.2.0 ?x316)))
 (let (($x345 (=> $x245 $x320)))
 (let (($x334 (= (_ bv0 32) ?x8)))
 (let ((?x230 (ite $x334 (_ bv0 32) (_ bv1 32))))
 (let (($x38 (bvuge ?x230 (_ bv1 32))))
 (let (($x217 (= $x245 $x38)))
 (let (($x250 (= ?x230 (_ bv0 32))))
 (let (($x417 (= $x305 $x250)))
 (let (($x239 (and (and (and (and (and (and $x417 $x217) $x345) $x327) $x140) $x325) $x129)))
 (let (($x349 (and (and (and $x239 $x104) $x300) $x64)))
 (let (($x224 (=> $x84 $x349)))
 (let (($x240 (= $x224 true)))
 (let ((?x126 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x231 (= (_ bv0 3) ?x126)))
 (let (($x58 (= $x231 true)))
 (let ((?x204 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x218 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem ?x218) (concat ?x191 (concat ?x47 ?x204)))))
 (let (($x180 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x262)))
 (let (($x130 (=> $x282 $x180)))
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x145 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x145 (_ bv1 32))))
 (let (($x67 (= $x282 $x55)))
 (let (($x317 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x247 (=> $x317 $x147)))
 (let (($x228 (= ?x145 (_ bv0 32))))
 (let (($x105 (= $x317 $x228)))
 (let (($x157 (and (and (and $x105 $x247) $x67) $x130)))
 (let (($x315 (= $x157 true)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x274)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x229)))
 (let (($x233 (= input.spec-%var-l-1.2.0 ?x277)))
 (let (($x216 (=> $x84 $x233)))
 (let (($x171 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x29 (ite $x171 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x29 (_ bv1 32))))
 (let (($x13 (= $x84 $x195)))
 (let (($x290 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x100 (=> $x290 $x147)))
 (let (($x331 (= ?x29 (_ bv0 32))))
 (let (($x288 (= $x290 $x331)))
 (let (($x78 (and (and (and $x288 $x100) $x13) $x216)))
 (let (($x20 (= $x78 true)))
 (let (($x77 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x259 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x120 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x259))))
 (let (($x79 (and true $x120)))
 (let (($x24 (and $x120 $x79)))
 (let (($x236 (= (bvand ?x65 (_ bv4294967288 32)) ?x65)))
 (let (($x289 (= (bvand ?x166 (_ bv4294967292 32)) ?x166)))
 (let (($x155 (and $x289 $x236)))
 (let (($x25 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x166 (bvsub ?x166 (_ bv4 32))) (bvult ?x166 (bvsub ?x166 (_ bv4 32))))))
 (let (($x296 (and (and (and (and (and $x79 $x25) $x289) $x155) $x24) $x77)))
 (let (($x134 (not $x101)))
 (let (($x267 (=> $x134 $x296)))
 (let (($x310 (= $x267 true)))
 (let (($x257 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x9 (= $x257 true)))
 (let (($x188 (= $x134 true)))
 (let ((?x152 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x152)))
 (let ((?x251 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x251)))
 (let (($x242 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x280 (and $x242 $x223)))
 (let (($x156 (and $x280 $x161)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x208 (and $x63 $x156)))
 (let (($x235 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x285 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x16 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x285 $x235)))))))
 (let (($x264 (and $x16 $x208)))
 (let (($x222 (= $x264 true)))
 (let ((?x190 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x209 (bvneg ?x190)))
 (let (($x205 (= ?x209 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x141 (= $x205 true)))
 (let (($x160 (and $x141 $x222)))
 (let (($x103 (and $x160 $x188)))
 (let (($x5 (and $x103 $x9)))
 (let (($x308 (and $x5 $x310)))
 (let (($x18 (and $x308 $x20)))
 (let (($x167 (and $x18 $x315)))
 (let (($x192 (and $x167 $x58)))
 (let (($x60 (and $x192 $x240)))
 (let (($x420 (and $x60 $x358)))
 (let (($x181 (and $x282 $x420)))
 (let (($x193 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x91 (and $x193 $x181)))
 (let (($x6 (bvugt ?x166 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x166 (_ bv3 32))))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x144 (=> (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x6)))))))
 (let (($x284 (=> (and $x134 (bvule ?x166 (bvsub (bvadd ?x166 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x6)))))))
 (let (($x197 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x215 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x218)))
 (let (($x57 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x179 (_ bv1 32))) (or false (or false (and true (or $x215 $x197)))))))
 (let (($x89 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x179 (_ bv1 32)))) (or false (or false (and true (or $x215 $x197)))))))
 (let (($x23 (and $x89 $x284)))
 (let (($x425 (and $x23 $x91)))
 (let (($x72 (=> $x425 $x112)))
 (not $x72)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 60
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x300 (= $x101 false)))
 (let (($x329 (= $x300 true)))
 (let ((?x32 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x86))))
 (let ((?x239 (bvadd ?x327 (_ bv4 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x268))))
 (let (($x374 (= (_ bv0 32) ?x249)))
 (let ((?x314 (ite $x374 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (= ?x314 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x17 (= $x127 $x241)))
 (let (($x170 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x312 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x94 (and $x312 $x170)))
 (let (($x295 (=> $x94 $x17)))
 (let (($x266 (bvuge ?x314 (_ bv1 32))))
 (let (($x129 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x104 (= $x129 $x266)))
 (let (($x227 (=> $x94 $x104)))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x390))))
 (let (($x50 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x325)))
 (let (($x339 (=> $x94 $x50)))
 (let (($x324 (= (_ bv0 32) ?x327)))
 (let ((?x302 (ite $x324 (_ bv0 32) (_ bv1 32))))
 (let (($x400 (bvuge ?x302 (_ bv1 32))))
 (let (($x322 (= $x170 $x400)))
 (let (($x406 (=> $x312 $x322)))
 (let (($x163 (= false false)))
 (let (($x269 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x319 (and $x312 $x269)))
 (let (($x210 (=> $x319 $x163)))
 (let (($x132 (= ?x302 (_ bv0 32))))
 (let (($x326 (= $x269 $x132)))
 (let (($x140 (=> $x312 $x326)))
 (let ((?x334 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x41 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x164 (concat (select input.dst.llvm-mem ?x41) (concat ?x38 (concat ?x250 ?x334)))))
 (let (($x265 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x164)))
 (let (($x328 (=> $x312 $x265)))
 (let ((?x291 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x123 (bvuge ?x291 (_ bv1 32))))
 (let (($x211 (= $x312 $x123)))
 (let (($x30 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x149 (=> $x30 $x163)))
 (let (($x176 (= ?x291 (_ bv0 32))))
 (let (($x121 (= $x30 $x176)))
 (let (($x352 (and (and (and (and (and (and $x121 $x149) $x211) $x328) $x140) $x210) $x406)))
 (let (($x62 (and (and (and $x352 $x339) $x227) $x295)))
 (let (($x405 (= $x62 true)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x308 (concat ?x310 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x331 (concat ?x29 (concat ?x290 ?x308))))
 (let ((?x228 (bvadd ?x331 (_ bv4 32))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x282))))
 (let (($x191 (= (_ bv0 32) ?x278)))
 (let ((?x244 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x262 (bvuge ?x244 (_ bv1 32))))
 (let (($x87 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x180 (= $x87 $x262)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x297 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x109 (and $x297 $x12)))
 (let (($x130 (=> $x109 $x180)))
 (let (($x47 (= ?x244 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x204 (= $x145 $x47)))
 (let (($x80 (=> $x109 $x204)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv1 32))) (select input.dst.llvm-mem ?x331))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv2 32))) ?x274))))
 (let (($x18 (= input.spec-%var-l-1.2.1.2.0 ?x20)))
 (let (($x168 (=> $x109 $x18)))
 (let (($x288 (= (_ bv0 32) ?x331)))
 (let ((?x147 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x200 (bvuge ?x147 (_ bv1 32))))
 (let (($x187 (= $x12 $x200)))
 (let (($x279 (=> $x297 $x187)))
 (let (($x323 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x195 (and $x297 $x323)))
 (let (($x13 (=> $x195 $x163)))
 (let (($x100 (= ?x147 (_ bv0 32))))
 (let (($x40 (= $x323 $x100)))
 (let (($x84 (=> $x297 $x40)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x261)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x238)))
 (let (($x294 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x24 (=> $x297 $x294)))
 (let (($x162 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x25 (ite $x162 (_ bv0 32) (_ bv1 32))))
 (let (($x198 (bvuge ?x25 (_ bv1 32))))
 (let (($x28 (= $x297 $x198)))
 (let (($x206 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x206 $x163)))
 (let (($x232 (= ?x25 (_ bv0 32))))
 (let (($x148 (= $x206 $x232)))
 (let (($x231 (and (and (and (and (and (and $x148 $x289) $x28) $x24) $x84) $x13) $x279)))
 (let (($x33 (and (and (and $x231 $x168) $x80) $x130)))
 (let (($x305 (= $x33 true)))
 (let ((?x83 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x69 (= (_ bv0 3) ?x83)))
 (let (($x120 (= $x69 true)))
 (let (($x9 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x5 (= $x9 true)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x264 (= (_ bv0 32) ?x208)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x161 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x152)))
 (let (($x280 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (and $x280 $x161)))
 (let (($x222 (and $x156 $x264)))
 (let (($x285 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x285 $x222)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x223 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x61 $x182)))))))
 (let (($x188 (and $x223 $x160)))
 (let (($x103 (= $x188 true)))
 (let ((?x35 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x205 (bvneg ?x35)))
 (let (($x56 (= ?x205 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x189 (= $x56 true)))
 (let (($x220 (and $x189 $x103)))
 (let (($x175 (and $x220 $x5)))
 (let (($x79 (and $x175 $x120)))
 (let (($x237 (and $x79 $x305)))
 (let (($x287 (and $x237 $x405)))
 (let (($x286 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x263 (and $x286 $x287)))
 (let ((?x186 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x97 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x186 (_ bv3 32)))))
 (let (($x193 (=> (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x21 $x97)))))))
 (let (($x134 (not $x101)))
 (let (($x159 (=> (and $x134 (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x21 $x97)))))))
 (let (($x298 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x41)))
 (let (($x131 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32))) (or false (or false (and true (or $x158 $x298)))))))
 (let (($x52 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32)))) (or false (or false (and true (or $x158 $x298)))))))
 (let (($x116 (and $x52 $x159)))
 (let (($x309 (and $x116 $x263)))
 (let (($x27 (=> $x309 $x329)))
 (not $x27))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x300 (= $x101 false)))
 (let (($x329 (= $x300 true)))
 (let ((?x32 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv1 32))) (select input.dst.llvm-mem ?x32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x32 (_ bv2 32))) ?x86))))
 (let ((?x239 (bvadd ?x327 (_ bv4 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv1 32))) (select input.dst.llvm-mem ?x239))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x239 (_ bv2 32))) ?x268))))
 (let (($x374 (= (_ bv0 32) ?x249)))
 (let ((?x314 (ite $x374 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (= ?x314 (_ bv0 32))))
 (let (($x127 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x17 (= $x127 $x241)))
 (let (($x170 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x312 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x94 (and $x312 $x170)))
 (let (($x295 (=> $x94 $x17)))
 (let (($x266 (bvuge ?x314 (_ bv1 32))))
 (let (($x129 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x104 (= $x129 $x266)))
 (let (($x227 (=> $x94 $x104)))
 (let ((?x390 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x390))))
 (let (($x50 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x325)))
 (let (($x339 (=> $x94 $x50)))
 (let (($x324 (= (_ bv0 32) ?x327)))
 (let ((?x302 (ite $x324 (_ bv0 32) (_ bv1 32))))
 (let (($x400 (bvuge ?x302 (_ bv1 32))))
 (let (($x322 (= $x170 $x400)))
 (let (($x406 (=> $x312 $x322)))
 (let (($x163 (= false false)))
 (let (($x269 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x319 (and $x312 $x269)))
 (let (($x210 (=> $x319 $x163)))
 (let (($x132 (= ?x302 (_ bv0 32))))
 (let (($x326 (= $x269 $x132)))
 (let (($x140 (=> $x312 $x326)))
 (let ((?x334 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x41 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x164 (concat (select input.dst.llvm-mem ?x41) (concat ?x38 (concat ?x250 ?x334)))))
 (let (($x265 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x164)))
 (let (($x328 (=> $x312 $x265)))
 (let ((?x291 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x123 (bvuge ?x291 (_ bv1 32))))
 (let (($x211 (= $x312 $x123)))
 (let (($x30 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x149 (=> $x30 $x163)))
 (let (($x176 (= ?x291 (_ bv0 32))))
 (let (($x121 (= $x30 $x176)))
 (let (($x352 (and (and (and (and (and (and $x121 $x149) $x211) $x328) $x140) $x210) $x406)))
 (let (($x62 (and (and (and $x352 $x339) $x227) $x295)))
 (let (($x405 (= $x62 true)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x308 (concat ?x310 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x331 (concat ?x29 (concat ?x290 ?x308))))
 (let ((?x228 (bvadd ?x331 (_ bv4 32))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv1 32))) (select input.dst.llvm-mem ?x228))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x228 (_ bv2 32))) ?x282))))
 (let (($x191 (= (_ bv0 32) ?x278)))
 (let ((?x244 (ite $x191 (_ bv0 32) (_ bv1 32))))
 (let (($x262 (bvuge ?x244 (_ bv1 32))))
 (let (($x87 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x180 (= $x87 $x262)))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x297 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x109 (and $x297 $x12)))
 (let (($x130 (=> $x109 $x180)))
 (let (($x47 (= ?x244 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x204 (= $x145 $x47)))
 (let (($x80 (=> $x109 $x204)))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv1 32))) (select input.dst.llvm-mem ?x331))))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv2 32))) ?x274))))
 (let (($x18 (= input.spec-%var-l-1.2.1.2.0 ?x20)))
 (let (($x168 (=> $x109 $x18)))
 (let (($x288 (= (_ bv0 32) ?x331)))
 (let ((?x147 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x200 (bvuge ?x147 (_ bv1 32))))
 (let (($x187 (= $x12 $x200)))
 (let (($x279 (=> $x297 $x187)))
 (let (($x323 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x195 (and $x297 $x323)))
 (let (($x13 (=> $x195 $x163)))
 (let (($x100 (= ?x147 (_ bv0 32))))
 (let (($x40 (= $x323 $x100)))
 (let (($x84 (=> $x297 $x40)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x261)))
 (let ((?x155 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x238)))
 (let (($x294 (= input.spec-%var-l-1.2.0 ?x155)))
 (let (($x24 (=> $x297 $x294)))
 (let (($x162 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x25 (ite $x162 (_ bv0 32) (_ bv1 32))))
 (let (($x198 (bvuge ?x25 (_ bv1 32))))
 (let (($x28 (= $x297 $x198)))
 (let (($x206 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x289 (=> $x206 $x163)))
 (let (($x232 (= ?x25 (_ bv0 32))))
 (let (($x148 (= $x206 $x232)))
 (let (($x231 (and (and (and (and (and (and $x148 $x289) $x28) $x24) $x84) $x13) $x279)))
 (let (($x33 (and (and (and $x231 $x168) $x80) $x130)))
 (let (($x305 (= $x33 true)))
 (let ((?x83 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x69 (= (_ bv0 3) ?x83)))
 (let (($x120 (= $x69 true)))
 (let (($x9 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x5 (= $x9 true)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x264 (= (_ bv0 32) ?x208)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x161 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x152)))
 (let (($x280 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (and $x280 $x161)))
 (let (($x222 (and $x156 $x264)))
 (let (($x285 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x285 $x222)))
 (let (($x182 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x223 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x61 $x182)))))))
 (let (($x188 (and $x223 $x160)))
 (let (($x103 (= $x188 true)))
 (let ((?x35 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x205 (bvneg ?x35)))
 (let (($x56 (= ?x205 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x189 (= $x56 true)))
 (let (($x220 (and $x189 $x103)))
 (let (($x175 (and $x220 $x5)))
 (let (($x79 (and $x175 $x120)))
 (let (($x237 (and $x79 $x305)))
 (let (($x287 (and $x237 $x405)))
 (let (($x286 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x263 (and $x286 $x287)))
 (let ((?x186 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x97 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x186 (_ bv3 32)))))
 (let (($x193 (=> (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x21 $x97)))))))
 (let (($x134 (not $x101)))
 (let (($x159 (=> (and $x134 (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x21 $x97)))))))
 (let (($x298 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x41)))
 (let (($x131 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32))) (or false (or false (and true (or $x158 $x298)))))))
 (let (($x52 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x32 (_ bv1 32)))) (or false (or false (and true (or $x158 $x298)))))))
 (let (($x116 (and $x52 $x159)))
 (let (($x309 (and $x116 $x263)))
 (let (($x27 (=> $x309 $x329)))
 (not $x27))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x7f6f7bfe)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xff)
                                #x7f6f7c05
                                #x7f)
                         #x7f6f7c03
                         #x7f)
                  #x7f7f8005
                  #x7f)))
  (store (store (store (store a!1 #x7f7f8006 #x7f) #x7f7f8003 #x7f)
                #x7f6f7c04
                #x7f)
         #x7f7f8004
         #x7f)))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 61
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x347 (= $x101 false)))
 (let (($x335 (= $x347 true)))
 (let (($x241 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x352 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x138 (and $x230 $x352)))
 (let (($x263 (and $x138 $x241)))
 (let (($x309 (not $x263)))
 (let (($x313 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x405 (and $x138 $x313)))
 (let (($x287 (not $x405)))
 (let ((?x215 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x327))))
 (let ((?x48 (bvadd ?x385 (_ bv4 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x49))))
 (let (($x266 (= (_ bv0 32) ?x314)))
 (let ((?x104 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x17 (= ?x104 (_ bv0 32))))
 (let (($x295 (= $x241 $x17)))
 (let (($x62 (=> $x138 $x295)))
 (let (($x227 (bvuge ?x104 (_ bv1 32))))
 (let (($x292 (= $x313 $x227)))
 (let (($x127 (=> $x138 $x292)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv1 32))) (select input.dst.llvm-mem ?x385))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv2 32))) ?x260))))
 (let (($x276 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x10)))
 (let (($x129 (=> $x138 $x276)))
 (let (($x319 (= (_ bv0 32) ?x385)))
 (let ((?x210 (ite $x319 (_ bv0 32) (_ bv1 32))))
 (let (($x94 (bvuge ?x210 (_ bv1 32))))
 (let (($x114 (= $x352 $x94)))
 (let (($x7 (=> $x230 $x114)))
 (let (($x297 (= false false)))
 (let (($x122 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x322 (and $x230 $x122)))
 (let (($x406 (=> $x322 $x297)))
 (let (($x283 (= ?x210 (_ bv0 32))))
 (let (($x170 (= $x122 $x283)))
 (let (($x400 (=> $x230 $x170)))
 (let ((?x217 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x248 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x95 (concat (select input.dst.llvm-mem ?x248) (concat ?x214 (concat ?x265 ?x217)))))
 (let (($x102 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x95)))
 (let (($x316 (=> $x230 $x102)))
 (let ((?x8 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x8 (_ bv1 32))))
 (let (($x334 (= $x230 $x250)))
 (let (($x75 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x38 (=> $x75 $x297)))
 (let (($x343 (= ?x8 (_ bv0 32))))
 (let (($x245 (= $x75 $x343)))
 (let (($x252 (and (and (and (and (and (and $x245 $x38) $x334) $x316) $x400) $x406) $x7)))
 (let (($x224 (and (and (and (and (and $x252 $x129) $x127) $x62) $x287) $x309)))
 (let (($x240 (= $x224 true)))
 (let (($x18 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x13 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (and $x28 $x13)))
 (let (($x262 (and $x187 $x18)))
 (let (($x180 (not $x262)))
 (let (($x244 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x192 (and $x187 $x244)))
 (let (($x87 (not $x192)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x290 (concat ?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x331 (concat ?x212 (concat ?x310 ?x290))))
 (let ((?x168 (bvadd ?x331 (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x228))))
 (let (($x105 (= (_ bv0 32) ?x253)))
 (let ((?x282 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x282 (_ bv1 32))))
 (let (($x204 (= $x244 $x47)))
 (let (($x80 (=> $x187 $x204)))
 (let (($x107 (= ?x282 (_ bv0 32))))
 (let (($x278 (= $x18 $x107)))
 (let (($x191 (=> $x187 $x278)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv1 32))) (select input.dst.llvm-mem ?x331))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv2 32))) ?x216))))
 (let (($x274 (= input.spec-%var-l-1.2.1.2.0 ?x272)))
 (let (($x233 (=> $x187 $x274)))
 (let (($x288 (= (_ bv0 32) ?x331)))
 (let ((?x147 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x147 (_ bv1 32))))
 (let (($x12 (= $x13 $x126)))
 (let (($x200 (=> $x28 $x12)))
 (let (($x323 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x203 (and $x28 $x323)))
 (let (($x195 (=> $x203 $x297)))
 (let (($x100 (= ?x147 (_ bv0 32))))
 (let (($x40 (= $x323 $x100)))
 (let (($x84 (=> $x28 $x40)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x65)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x261)))
 (let (($x24 (= input.spec-%var-l-1.2.0 ?x294)))
 (let (($x167 (=> $x28 $x24)))
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x163 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x315 (bvuge ?x163 (_ bv1 32))))
 (let (($x301 (= $x28 $x315)))
 (let (($x25 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x198 (=> $x25 $x297)))
 (let (($x289 (= ?x163 (_ bv0 32))))
 (let (($x157 (= $x25 $x289)))
 (let (($x30 (and (and (and (and (and (and $x157 $x198) $x301) $x167) $x84) $x195) $x200)))
 (let (($x303 (and (and (and (and (and $x30 $x233) $x191) $x80) $x87) $x180)))
 (let (($x312 (= $x303 true)))
 (let ((?x79 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x66 (= (_ bv0 3) ?x79)))
 (let (($x206 (= $x66 true)))
 (let (($x259 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x83 (= $x259 true)))
 (let ((?x160 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x188 (= (_ bv0 32) ?x160)))
 (let ((?x208 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x264 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x208)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (and $x156 $x264)))
 (let (($x103 (and $x222 $x188)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x220 (and $x61 $x103)))
 (let (($x242 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x242)))))))
 (let (($x257 (and $x161 $x220)))
 (let (($x9 (= $x257 true)))
 (let ((?x141 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x56 (bvneg ?x141)))
 (let (($x235 (= ?x56 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x128 (= $x235 true)))
 (let (($x5 (and $x128 $x9)))
 (let (($x69 (and $x5 $x83)))
 (let (($x113 (and $x69 $x206)))
 (let (($x123 (and $x113 $x312)))
 (let (($x60 (and $x123 $x240)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x246 (and $x209 $x60)))
 (let ((?x19 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x284 (bvugt ?x19 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x19 (_ bv3 32)))))
 (let (($x286 (=> (bvule ?x19 (bvsub (bvadd ?x19 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x144 $x284)))))))
 (let (($x134 (not $x101)))
 (let (($x258 (=> (and $x134 (bvule ?x19 (bvsub (bvadd ?x19 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x144 $x284)))))))
 (let (($x89 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x6 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32))) (or false (or false (and true (or $x57 $x89)))))))
 (let (($x218 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32)))) (or false (or false (and true (or $x57 $x89)))))))
 (let (($x15 (and $x218 $x258)))
 (let (($x384 (and $x15 $x246)))
 (let (($x14 (=> $x384 $x335)))
 (not $x14))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x101 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x347 (= $x101 false)))
 (let (($x335 (= $x347 true)))
 (let (($x241 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x352 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x138 (and $x230 $x352)))
 (let (($x263 (and $x138 $x241)))
 (let (($x309 (not $x263)))
 (let (($x313 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x405 (and $x138 $x313)))
 (let (($x287 (not $x405)))
 (let ((?x215 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv1 32))) (select input.dst.llvm-mem ?x215))))
 (let ((?x385 (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x215 (_ bv2 32))) ?x327))))
 (let ((?x48 (bvadd ?x385 (_ bv4 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv1 32))) (select input.dst.llvm-mem ?x48))))
 (let ((?x314 (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x48 (_ bv2 32))) ?x49))))
 (let (($x266 (= (_ bv0 32) ?x314)))
 (let ((?x104 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x17 (= ?x104 (_ bv0 32))))
 (let (($x295 (= $x241 $x17)))
 (let (($x62 (=> $x138 $x295)))
 (let (($x227 (bvuge ?x104 (_ bv1 32))))
 (let (($x292 (= $x313 $x227)))
 (let (($x127 (=> $x138 $x292)))
 (let ((?x260 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv1 32))) (select input.dst.llvm-mem ?x385))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x385 (_ bv2 32))) ?x260))))
 (let (($x276 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x10)))
 (let (($x129 (=> $x138 $x276)))
 (let (($x319 (= (_ bv0 32) ?x385)))
 (let ((?x210 (ite $x319 (_ bv0 32) (_ bv1 32))))
 (let (($x94 (bvuge ?x210 (_ bv1 32))))
 (let (($x114 (= $x352 $x94)))
 (let (($x7 (=> $x230 $x114)))
 (let (($x297 (= false false)))
 (let (($x122 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x322 (and $x230 $x122)))
 (let (($x406 (=> $x322 $x297)))
 (let (($x283 (= ?x210 (_ bv0 32))))
 (let (($x170 (= $x122 $x283)))
 (let (($x400 (=> $x230 $x170)))
 (let ((?x217 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x214 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x248 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x95 (concat (select input.dst.llvm-mem ?x248) (concat ?x214 (concat ?x265 ?x217)))))
 (let (($x102 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x95)))
 (let (($x316 (=> $x230 $x102)))
 (let ((?x8 (ite $x101 (_ bv0 32) (_ bv1 32))))
 (let (($x250 (bvuge ?x8 (_ bv1 32))))
 (let (($x334 (= $x230 $x250)))
 (let (($x75 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x38 (=> $x75 $x297)))
 (let (($x343 (= ?x8 (_ bv0 32))))
 (let (($x245 (= $x75 $x343)))
 (let (($x252 (and (and (and (and (and (and $x245 $x38) $x334) $x316) $x400) $x406) $x7)))
 (let (($x224 (and (and (and (and (and $x252 $x129) $x127) $x62) $x287) $x309)))
 (let (($x240 (= $x224 true)))
 (let (($x18 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x13 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x187 (and $x28 $x13)))
 (let (($x262 (and $x187 $x18)))
 (let (($x180 (not $x262)))
 (let (($x244 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x192 (and $x187 $x244)))
 (let (($x87 (not $x192)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x290 (concat ?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x331 (concat ?x212 (concat ?x310 ?x290))))
 (let ((?x168 (bvadd ?x331 (_ bv4 32))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x228))))
 (let (($x105 (= (_ bv0 32) ?x253)))
 (let ((?x282 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x47 (bvuge ?x282 (_ bv1 32))))
 (let (($x204 (= $x244 $x47)))
 (let (($x80 (=> $x187 $x204)))
 (let (($x107 (= ?x282 (_ bv0 32))))
 (let (($x278 (= $x18 $x107)))
 (let (($x191 (=> $x187 $x278)))
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv1 32))) (select input.dst.llvm-mem ?x331))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x331 (_ bv2 32))) ?x216))))
 (let (($x274 (= input.spec-%var-l-1.2.1.2.0 ?x272)))
 (let (($x233 (=> $x187 $x274)))
 (let (($x288 (= (_ bv0 32) ?x331)))
 (let ((?x147 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x147 (_ bv1 32))))
 (let (($x12 (= $x13 $x126)))
 (let (($x200 (=> $x28 $x12)))
 (let (($x323 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x203 (and $x28 $x323)))
 (let (($x195 (=> $x203 $x297)))
 (let (($x100 (= ?x147 (_ bv0 32))))
 (let (($x40 (= $x323 $x100)))
 (let (($x84 (=> $x28 $x40)))
 (let ((?x65 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x65)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x261)))
 (let (($x24 (= input.spec-%var-l-1.2.0 ?x294)))
 (let (($x167 (=> $x28 $x24)))
 (let (($x148 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x163 (ite $x148 (_ bv0 32) (_ bv1 32))))
 (let (($x315 (bvuge ?x163 (_ bv1 32))))
 (let (($x301 (= $x28 $x315)))
 (let (($x25 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x198 (=> $x25 $x297)))
 (let (($x289 (= ?x163 (_ bv0 32))))
 (let (($x157 (= $x25 $x289)))
 (let (($x30 (and (and (and (and (and (and $x157 $x198) $x301) $x167) $x84) $x195) $x200)))
 (let (($x303 (and (and (and (and (and $x30 $x233) $x191) $x80) $x87) $x180)))
 (let (($x312 (= $x303 true)))
 (let ((?x79 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x66 (= (_ bv0 3) ?x79)))
 (let (($x206 (= $x66 true)))
 (let (($x259 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x83 (= $x259 true)))
 (let ((?x160 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x188 (= (_ bv0 32) ?x160)))
 (let ((?x208 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x264 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x208)))
 (let (($x156 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x222 (and $x156 $x264)))
 (let (($x103 (and $x222 $x188)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x220 (and $x61 $x103)))
 (let (($x242 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x242)))))))
 (let (($x257 (and $x161 $x220)))
 (let (($x9 (= $x257 true)))
 (let ((?x141 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x56 (bvneg ?x141)))
 (let (($x235 (= ?x56 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x128 (= $x235 true)))
 (let (($x5 (and $x128 $x9)))
 (let (($x69 (and $x5 $x83)))
 (let (($x113 (and $x69 $x206)))
 (let (($x123 (and $x113 $x312)))
 (let (($x60 (and $x123 $x240)))
 (let (($x209 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x246 (and $x209 $x60)))
 (let ((?x19 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x284 (bvugt ?x19 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x19 (_ bv3 32)))))
 (let (($x286 (=> (bvule ?x19 (bvsub (bvadd ?x19 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x144 $x284)))))))
 (let (($x134 (not $x101)))
 (let (($x258 (=> (and $x134 (bvule ?x19 (bvsub (bvadd ?x19 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x144 $x284)))))))
 (let (($x89 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x6 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32))) (or false (or false (and true (or $x57 $x89)))))))
 (let (($x218 (=> (and $x134 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x215 (_ bv1 32)))) (or false (or false (and true (or $x57 $x89)))))))
 (let (($x15 (and $x218 $x258)))
 (let (($x384 (and $x15 $x246)))
 (let (($x14 (=> $x384 $x335)))
 (not $x14))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-1.0 #b00000000000000000000000000000000)
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-1.2.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-sum-0.L3%5%bbentry #b00000000000000000000000000000000)
(= input.spec-%tmpvar-5.L3%5%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_18)
(function @fun_18
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv8 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv11 32))
(define-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 62
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x51 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x215 (not $x51)))
 (let (($x303 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x405 (or $x303 $x215)))
 (let (($x287 (= $x405 true)))
 (let ((?x76 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x316))))
 (let ((?x125 (bvadd ?x324 (_ bv4 32))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem ?x125))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv2 32))) ?x325))))
 (let (($x48 (= (_ bv0 32) ?x313)))
 (let ((?x249 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (= ?x249 (_ bv0 32))))
 (let (($x394 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x221 (= $x394 $x299)))
 (let (($x319 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x8 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x400 (and $x8 $x319)))
 (let (($x49 (=> $x400 $x221)))
 (let (($x374 (bvuge ?x249 (_ bv1 32))))
 (let (($x306 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x201 (= $x306 $x374)))
 (let (($x268 (=> $x400 $x201)))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv1 32))) (select input.dst.llvm-mem ?x324))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv2 32))) ?x352))))
 (let (($x50 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x271)))
 (let (($x339 (=> $x400 $x50)))
 (let (($x302 (= (_ bv0 32) ?x324)))
 (let ((?x86 (ite $x302 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x86 (_ bv1 32))))
 (let (($x283 (= $x319 $x210)))
 (let (($x170 (=> $x8 $x283)))
 (let (($x130 (= false false)))
 (let (($x328 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x132 (and $x8 $x328)))
 (let (($x385 (=> $x132 $x130)))
 (let (($x320 (= ?x86 (_ bv0 32))))
 (let (($x93 (= $x328 $x320)))
 (let (($x327 (=> $x8 $x93)))
 (let ((?x300 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x417 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x89 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x214 (concat (select input.dst.llvm-mem ?x89) (concat ?x417 (concat ?x250 ?x300)))))
 (let (($x164 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x214)))
 (let (($x265 (=> $x8 $x164)))
 (let ((?x312 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x343 (bvuge ?x312 (_ bv1 32))))
 (let (($x245 (= $x8 $x343)))
 (let (($x104 (and (and (and (and (= $x303 (= ?x312 (_ bv0 32))) (=> $x303 $x130)) $x245) $x265) $x327)))
 (let (($x241 (and (and (and (and (and $x104 $x385) $x170) $x339) $x268) $x49)))
 (let (($x17 (= $x241 true)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x267 (concat ?x212 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x296 (concat ?x290 (concat ?x29 ?x267))))
 (let ((?x274 (bvadd ?x296 (_ bv4 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x18))))
 (let (($x145 (= (_ bv0 32) ?x317)))
 (let ((?x58 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x58 (_ bv1 32))))
 (let (($x105 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x107 (= $x105 $x282)))
 (let (($x203 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x126 (and $x315 $x203)))
 (let (($x278 (=> $x126 $x107)))
 (let (($x228 (= ?x58 (_ bv0 32))))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x55 (= $x272 $x228)))
 (let (($x253 (=> $x126 $x55)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x279))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x281)))
 (let (($x216 (=> $x126 $x231)))
 (let (($x331 (= (_ bv0 32) ?x296)))
 (let ((?x288 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x288 (_ bv1 32))))
 (let (($x304 (= $x203 $x195)))
 (let (($x13 (=> $x315 $x304)))
 (let (($x254 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x84 (and $x315 $x254)))
 (let (($x237 (=> $x84 $x130)))
 (let (($x147 (= ?x288 (_ bv0 32))))
 (let (($x100 (= $x254 $x147)))
 (let (($x40 (=> $x315 $x100)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x213)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x236)))
 (let (($x24 (= input.spec-%var-l-1.2.0 ?x294)))
 (let (($x167 (=> $x315 $x24)))
 (let (($x289 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x157 (ite $x289 (_ bv0 32) (_ bv1 32))))
 (let (($x301 (bvuge ?x157 (_ bv1 32))))
 (let (($x33 (= $x315 $x301)))
 (let (($x148 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x28 (=> $x148 $x130)))
 (let (($x297 (= ?x157 (_ bv0 32))))
 (let (($x198 (= $x148 $x297)))
 (let (($x80 (and (and (and (and (and (and $x198 $x28) $x33) $x167) $x40) $x237) $x13)))
 (let (($x87 (and (and (and $x80 $x216) $x253) $x278)))
 (let (($x149 (= $x87 true)))
 (let ((?x206 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (= (_ bv0 3) ?x206)))
 (let (($x162 (= $x113 true)))
 (let (($x69 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x120 (= $x69 true)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x220 (= (_ bv0 32) ?x103)))
 (let ((?x222 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x160 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x222)))
 (let (($x264 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x188 (and $x264 $x160)))
 (let (($x257 (and $x188 $x220)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x133 $x257)))
 (let (($x285 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x208 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x285)))))))
 (let (($x5 (and $x208 $x9)))
 (let (($x175 (= $x5 true)))
 (let ((?x56 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x189 (bvneg ?x56)))
 (let (($x128 (= ?x189 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x182 (= $x128 true)))
 (let (($x259 (and $x182 $x175)))
 (let (($x79 (and $x259 $x120)))
 (let (($x25 (and $x79 $x162)))
 (let (($x262 (and $x25 $x149)))
 (let (($x295 (and $x262 $x17)))
 (let (($x35 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x62 (and $x35 $x295)))
 (let ((?x32 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x193 (bvugt ?x32 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x32 (_ bv3 32)))))
 (let (($x190 (=> (bvule ?x32 (bvsub (bvadd ?x32 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x193)))))))
 (let (($x97 (=> (and $x215 (bvule ?x32 (bvsub (bvadd ?x32 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x23 $x193)))))))
 (let (($x131 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x21 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32))) (or false (or false (and true (or $x166 $x131)))))))
 (let (($x134 (=> (and $x215 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32)))) (or false (or false (and true (or $x166 $x131)))))))
 (let (($x26 (and $x134 $x97)))
 (let (($x64 (and $x26 $x62)))
 (let (($x349 (=> $x64 $x287)))
 (not $x349)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x51 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x215 (not $x51)))
 (let (($x303 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x405 (or $x303 $x215)))
 (let (($x287 (= $x405 true)))
 (let ((?x76 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv1 32))) (select input.dst.llvm-mem ?x76))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x76 (_ bv2 32))) ?x316))))
 (let ((?x125 (bvadd ?x324 (_ bv4 32))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv1 32))) (select input.dst.llvm-mem ?x125))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x125 (_ bv2 32))) ?x325))))
 (let (($x48 (= (_ bv0 32) ?x313)))
 (let ((?x249 (ite $x48 (_ bv0 32) (_ bv1 32))))
 (let (($x299 (= ?x249 (_ bv0 32))))
 (let (($x394 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x221 (= $x394 $x299)))
 (let (($x319 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x8 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x400 (and $x8 $x319)))
 (let (($x49 (=> $x400 $x221)))
 (let (($x374 (bvuge ?x249 (_ bv1 32))))
 (let (($x306 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x201 (= $x306 $x374)))
 (let (($x268 (=> $x400 $x201)))
 (let ((?x352 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv1 32))) (select input.dst.llvm-mem ?x324))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x324 (_ bv2 32))) ?x352))))
 (let (($x50 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x271)))
 (let (($x339 (=> $x400 $x50)))
 (let (($x302 (= (_ bv0 32) ?x324)))
 (let ((?x86 (ite $x302 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x86 (_ bv1 32))))
 (let (($x283 (= $x319 $x210)))
 (let (($x170 (=> $x8 $x283)))
 (let (($x130 (= false false)))
 (let (($x328 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x132 (and $x8 $x328)))
 (let (($x385 (=> $x132 $x130)))
 (let (($x320 (= ?x86 (_ bv0 32))))
 (let (($x93 (= $x328 $x320)))
 (let (($x327 (=> $x8 $x93)))
 (let ((?x300 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x417 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x89 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x214 (concat (select input.dst.llvm-mem ?x89) (concat ?x417 (concat ?x250 ?x300)))))
 (let (($x164 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x214)))
 (let (($x265 (=> $x8 $x164)))
 (let ((?x312 (ite $x51 (_ bv0 32) (_ bv1 32))))
 (let (($x343 (bvuge ?x312 (_ bv1 32))))
 (let (($x245 (= $x8 $x343)))
 (let (($x104 (and (and (and (and (= $x303 (= ?x312 (_ bv0 32))) (=> $x303 $x130)) $x245) $x265) $x327)))
 (let (($x241 (and (and (and (and (and $x104 $x385) $x170) $x339) $x268) $x49)))
 (let (($x17 (= $x241 true)))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x267 (concat ?x212 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x296 (concat ?x290 (concat ?x29 ?x267))))
 (let ((?x274 (bvadd ?x296 (_ bv4 32))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x317 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x18))))
 (let (($x145 (= (_ bv0 32) ?x317)))
 (let ((?x58 (ite $x145 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x58 (_ bv1 32))))
 (let (($x105 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x107 (= $x105 $x282)))
 (let (($x203 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x126 (and $x315 $x203)))
 (let (($x278 (=> $x126 $x107)))
 (let (($x228 (= ?x58 (_ bv0 32))))
 (let (($x272 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x55 (= $x272 $x228)))
 (let (($x253 (=> $x126 $x55)))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv1 32))) (select input.dst.llvm-mem ?x296))))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x296 (_ bv2 32))) ?x279))))
 (let (($x231 (= input.spec-%var-l-1.2.1.2.0 ?x281)))
 (let (($x216 (=> $x126 $x231)))
 (let (($x331 (= (_ bv0 32) ?x296)))
 (let ((?x288 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x288 (_ bv1 32))))
 (let (($x304 (= $x203 $x195)))
 (let (($x13 (=> $x315 $x304)))
 (let (($x254 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x84 (and $x315 $x254)))
 (let (($x237 (=> $x84 $x130)))
 (let (($x147 (= ?x288 (_ bv0 32))))
 (let (($x100 (= $x254 $x147)))
 (let (($x40 (=> $x315 $x100)))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x213)))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x236)))
 (let (($x24 (= input.spec-%var-l-1.2.0 ?x294)))
 (let (($x167 (=> $x315 $x24)))
 (let (($x289 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x157 (ite $x289 (_ bv0 32) (_ bv1 32))))
 (let (($x301 (bvuge ?x157 (_ bv1 32))))
 (let (($x33 (= $x315 $x301)))
 (let (($x148 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x28 (=> $x148 $x130)))
 (let (($x297 (= ?x157 (_ bv0 32))))
 (let (($x198 (= $x148 $x297)))
 (let (($x80 (and (and (and (and (and (and $x198 $x28) $x33) $x167) $x40) $x237) $x13)))
 (let (($x87 (and (and (and $x80 $x216) $x253) $x278)))
 (let (($x149 (= $x87 true)))
 (let ((?x206 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x113 (= (_ bv0 3) ?x206)))
 (let (($x162 (= $x113 true)))
 (let (($x69 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x120 (= $x69 true)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x220 (= (_ bv0 32) ?x103)))
 (let ((?x222 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x160 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x222)))
 (let (($x264 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x188 (and $x264 $x160)))
 (let (($x257 (and $x188 $x220)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x133 $x257)))
 (let (($x285 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x208 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x293 $x285)))))))
 (let (($x5 (and $x208 $x9)))
 (let (($x175 (= $x5 true)))
 (let ((?x56 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x189 (bvneg ?x56)))
 (let (($x128 (= ?x189 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x182 (= $x128 true)))
 (let (($x259 (and $x182 $x175)))
 (let (($x79 (and $x259 $x120)))
 (let (($x25 (and $x79 $x162)))
 (let (($x262 (and $x25 $x149)))
 (let (($x295 (and $x262 $x17)))
 (let (($x35 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x62 (and $x35 $x295)))
 (let ((?x32 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x193 (bvugt ?x32 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x32 (_ bv3 32)))))
 (let (($x190 (=> (bvule ?x32 (bvsub (bvadd ?x32 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x193)))))))
 (let (($x97 (=> (and $x215 (bvule ?x32 (bvsub (bvadd ?x32 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x23 $x193)))))))
 (let (($x131 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x21 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32))) (or false (or false (and true (or $x166 $x131)))))))
 (let (($x134 (=> (and $x215 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x76 (_ bv1 32)))) (or false (or false (and true (or $x166 $x131)))))))
 (let (($x26 (and $x134 $x97)))
 (let (($x64 (and $x26 $x62)))
 (let (($x349 (=> $x64 $x287)))
 (not $x349)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 63
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x260 (= input.spec-%var-sum-0.L3%5%bbentry input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x273 (= $x260 true)))
 (let ((?x312 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv1 32))) (select input.dst.llvm-mem ?x312))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv2 32))) ?x178))))
 (let ((?x327 (bvadd ?x226 (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x227))))
 (let (($x44 (= (_ bv0 32) ?x400)))
 (let ((?x252 (ite $x44 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (= ?x252 (_ bv0 32))))
 (let (($x406 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x322 (= $x406 $x11)))
 (let (($x214 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x217 (and $x18 $x214)))
 (let (($x352 (=> $x217 $x322)))
 (let (($x138 (bvuge ?x252 (_ bv1 32))))
 (let (($x93 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x94 (= $x93 $x138)))
 (let (($x114 (=> $x217 $x94)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x275))))
 (let (($x302 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x324)))
 (let (($x86 (=> $x217 $x302)))
 (let (($x329 (= (_ bv0 32) ?x226)))
 (let ((?x417 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x417 (_ bv1 32))))
 (let (($x265 (= $x214 $x164)))
 (let (($x266 (=> $x18 $x265)))
 (let (($x220 (= false false)))
 (let (($x303 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x334 (and $x18 $x303)))
 (let (($x345 (=> $x334 $x220)))
 (let (($x230 (= ?x417 (_ bv0 32))))
 (let (($x250 (= $x303 $x230)))
 (let (($x300 (=> $x18 $x250)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let ((?x87 (concat ?x278 (concat ?x105 (concat ?x55 ?x58)))))
 (let (($x149 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x87)))
 (let (($x262 (=> $x18 $x149)))
 (let (($x76 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x67 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x67 (_ bv1 32))))
 (let (($x317 (= $x18 $x247)))
 (let (($x215 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x233 (=> $x215 $x220)))
 (let (($x291 (= ?x67 (_ bv0 32))))
 (let (($x20 (= $x215 $x291)))
 (let (($x390 (and (and (and (and (and (and $x20 $x233) $x317) $x262) $x300) $x345) $x266)))
 (let (($x255 (and (and (and $x390 $x86) $x114) $x352)))
 (let (($x239 (= $x255 true)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x176 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x202 (concat ?x82 ?x176))))
 (let ((?x40 (bvadd ?x234 (_ bv4 32))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x204))))
 (let (($x12 (= (_ bv0 32) ?x126)))
 (let ((?x229 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x229 (_ bv1 32))))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x200 (= $x30 $x187)))
 (let (($x24 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x9 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x254 (and $x9 $x24)))
 (let (($x279 (=> $x254 $x200)))
 (let (($x109 (= ?x229 (_ bv0 32))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x100 $x109)))
 (let (($x31 (=> $x254 $x184)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x29))))
 (let (($x331 (= input.spec-%var-l-1.2.1.2.0 ?x296)))
 (let (($x288 (=> $x254 $x331)))
 (let (($x146 (= (_ bv0 32) ?x234)))
 (let ((?x155 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x155 (_ bv1 32))))
 (let (($x244 (= $x24 $x167)))
 (let (($x305 (=> $x9 $x244)))
 (let (($x130 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x236 (and $x9 $x130)))
 (let (($x294 (=> $x236 $x220)))
 (let (($x183 (= ?x155 (_ bv0 32))))
 (let (($x238 (= $x130 $x183)))
 (let (($x213 (=> $x9 $x238)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x206)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x232)))
 (let (($x157 (= input.spec-%var-l-1.2.0 ?x289)))
 (let (($x297 (=> $x9 $x157)))
 (let (($x222 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x222 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x160 (_ bv1 32))))
 (let (($x175 (= $x9 $x5)))
 (let (($x133 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x257 (=> $x133 $x220)))
 (let (($x188 (= ?x160 (_ bv0 32))))
 (let (($x103 (= $x133 $x188)))
 (let (($x277 (and (and (and (and (and (and $x103 $x257) $x175) $x297) $x213) $x294) $x305)))
 (let (($x225 (and (and (and $x277 $x288) $x31) $x279)))
 (let (($x307 (= $x225 true)))
 (let ((?x285 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x280 (bvneg ?x285)))
 (let (($x270 (= ?x280 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x61 (= $x270 true)))
 (let ((?x189 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x235 (= (_ bv0 32) ?x189)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x141 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x26 $x141)))
 (let (($x128 (and $x56 $x235)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (and $x134 $x128)))
 (let (($x193 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x97 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x193)))))))
 (let (($x63 (and $x97 $x182)))
 (let (($x242 (= $x63 true)))
 (let ((?x166 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x57 (= (_ bv0 3) ?x166)))
 (let (($x131 (= $x57 true)))
 (let (($x19 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x248 (= $x19 true)))
 (let (($x158 (= $x76 true)))
 (let (($x90 (and $x158 $x248)))
 (let (($x52 (and $x90 $x131)))
 (let (($x156 (and $x52 $x242)))
 (let (($x208 (and $x156 $x61)))
 (let (($x168 (and $x208 $x307)))
 (let (($x10 (and $x168 $x239)))
 (let (($x276 (and $x215 $x10)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x350 (and $x110 $x276)))
 (let (($x325 (=> $x350 $x273)))
 (not $x325)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x260 (= input.spec-%var-sum-0.L3%5%bbentry input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x273 (= $x260 true)))
 (let ((?x312 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv1 32))) (select input.dst.llvm-mem ?x312))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x312 (_ bv2 32))) ?x178))))
 (let ((?x327 (bvadd ?x226 (_ bv4 32))))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x400 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x227))))
 (let (($x44 (= (_ bv0 32) ?x400)))
 (let ((?x252 (ite $x44 (_ bv0 32) (_ bv1 32))))
 (let (($x11 (= ?x252 (_ bv0 32))))
 (let (($x406 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x322 (= $x406 $x11)))
 (let (($x214 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x217 (and $x18 $x214)))
 (let (($x352 (=> $x217 $x322)))
 (let (($x138 (bvuge ?x252 (_ bv1 32))))
 (let (($x93 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x94 (= $x93 $x138)))
 (let (($x114 (=> $x217 $x94)))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x275))))
 (let (($x302 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x324)))
 (let (($x86 (=> $x217 $x302)))
 (let (($x329 (= (_ bv0 32) ?x226)))
 (let ((?x417 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x164 (bvuge ?x417 (_ bv1 32))))
 (let (($x265 (= $x214 $x164)))
 (let (($x266 (=> $x18 $x265)))
 (let (($x220 (= false false)))
 (let (($x303 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x334 (and $x18 $x303)))
 (let (($x345 (=> $x334 $x220)))
 (let (($x230 (= ?x417 (_ bv0 32))))
 (let (($x250 (= $x303 $x230)))
 (let (($x300 (=> $x18 $x250)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32)))))
 (let ((?x87 (concat ?x278 (concat ?x105 (concat ?x55 ?x58)))))
 (let (($x149 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x87)))
 (let (($x262 (=> $x18 $x149)))
 (let (($x76 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x67 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x67 (_ bv1 32))))
 (let (($x317 (= $x18 $x247)))
 (let (($x215 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x233 (=> $x215 $x220)))
 (let (($x291 (= ?x67 (_ bv0 32))))
 (let (($x20 (= $x215 $x291)))
 (let (($x390 (and (and (and (and (and (and $x20 $x233) $x317) $x262) $x300) $x345) $x266)))
 (let (($x255 (and (and (and $x390 $x86) $x114) $x352)))
 (let (($x239 (= $x255 true)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x176 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x202 (concat ?x82 ?x176))))
 (let ((?x40 (bvadd ?x234 (_ bv4 32))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x204))))
 (let (($x12 (= (_ bv0 32) ?x126)))
 (let ((?x229 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x229 (_ bv1 32))))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x200 (= $x30 $x187)))
 (let (($x24 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x9 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x254 (and $x9 $x24)))
 (let (($x279 (=> $x254 $x200)))
 (let (($x109 (= ?x229 (_ bv0 32))))
 (let (($x100 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x100 $x109)))
 (let (($x31 (=> $x254 $x184)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv1 32))) (select input.dst.llvm-mem ?x234))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x234 (_ bv2 32))) ?x29))))
 (let (($x331 (= input.spec-%var-l-1.2.1.2.0 ?x296)))
 (let (($x288 (=> $x254 $x331)))
 (let (($x146 (= (_ bv0 32) ?x234)))
 (let ((?x155 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x155 (_ bv1 32))))
 (let (($x244 (= $x24 $x167)))
 (let (($x305 (=> $x9 $x244)))
 (let (($x130 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x236 (and $x9 $x130)))
 (let (($x294 (=> $x236 $x220)))
 (let (($x183 (= ?x155 (_ bv0 32))))
 (let (($x238 (= $x130 $x183)))
 (let (($x213 (=> $x9 $x238)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x206)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x232)))
 (let (($x157 (= input.spec-%var-l-1.2.0 ?x289)))
 (let (($x297 (=> $x9 $x157)))
 (let (($x222 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x160 (ite $x222 (_ bv0 32) (_ bv1 32))))
 (let (($x5 (bvuge ?x160 (_ bv1 32))))
 (let (($x175 (= $x9 $x5)))
 (let (($x133 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x257 (=> $x133 $x220)))
 (let (($x188 (= ?x160 (_ bv0 32))))
 (let (($x103 (= $x133 $x188)))
 (let (($x277 (and (and (and (and (and (and $x103 $x257) $x175) $x297) $x213) $x294) $x305)))
 (let (($x225 (and (and (and $x277 $x288) $x31) $x279)))
 (let (($x307 (= $x225 true)))
 (let ((?x285 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x280 (bvneg ?x285)))
 (let (($x270 (= ?x280 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x61 (= $x270 true)))
 (let ((?x189 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x235 (= (_ bv0 32) ?x189)))
 (let ((?x35 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x141 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x35)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x26 $x141)))
 (let (($x128 (and $x56 $x235)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x182 (and $x134 $x128)))
 (let (($x193 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x97 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x23 $x193)))))))
 (let (($x63 (and $x97 $x182)))
 (let (($x242 (= $x63 true)))
 (let ((?x166 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x57 (= (_ bv0 3) ?x166)))
 (let (($x131 (= $x57 true)))
 (let (($x19 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x248 (= $x19 true)))
 (let (($x158 (= $x76 true)))
 (let (($x90 (and $x158 $x248)))
 (let (($x52 (and $x90 $x131)))
 (let (($x156 (and $x52 $x242)))
 (let (($x208 (and $x156 $x61)))
 (let (($x168 (and $x208 $x307)))
 (let (($x10 (and $x168 $x239)))
 (let (($x276 (and $x215 $x10)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x350 (and $x110 $x276)))
 (let (($x325 (=> $x350 $x273)))
 (not $x325)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 64
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x110 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x41 (not $x110)))
 (let (($x263 (or $x110 $x41)))
 (let (($x101 (= $x263 true)))
 (let ((?x90 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x316))))
 (let ((?x322 (bvadd ?x326 (_ bv4 32))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv1 32))) (select input.dst.llvm-mem ?x322))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv2 32))) ?x10))))
 (let (($x69 (= (_ bv0 32) ?x129)))
 (let ((?x186 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x374 (= ?x186 (_ bv0 32))))
 (let (($x249 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x201 (= $x249 $x374)))
 (let (($x93 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x319 (and $x123 $x93)))
 (let (($x268 (=> $x319 $x201)))
 (let (($x218 (bvuge ?x186 (_ bv1 32))))
 (let (($x11 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x313 (= $x11 $x218)))
 (let (($x48 (=> $x319 $x313)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv1 32))) (select input.dst.llvm-mem ?x326))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv2 32))) ?x227))))
 (let (($x114 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x94)))
 (let (($x125 (=> $x319 $x114)))
 (let (($x275 (= (_ bv0 32) ?x326)))
 (let ((?x269 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x269 (_ bv1 32))))
 (let (($x170 (= $x93 $x327)))
 (let (($x292 (=> $x123 $x170)))
 (let (($x68 (= false false)))
 (let (($x266 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x306 (and $x123 $x266)))
 (let (($x320 (=> $x306 $x68)))
 (let (($x324 (= ?x269 (_ bv0 32))))
 (let (($x302 (= $x266 $x324)))
 (let (($x86 (=> $x123 $x302)))
 (let ((?x329 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x230 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x6 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x127 (concat (select input.dst.llvm-mem ?x6) (concat ?x339 (concat ?x230 ?x329)))))
 (let (($x214 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x127)))
 (let (($x164 (=> $x123 $x214)))
 (let ((?x8 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x178 (bvuge ?x8 (_ bv1 32))))
 (let (($x245 (= $x123 $x178)))
 (let (($x38 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x75 (=> $x38 $x68)))
 (let (($x343 (= ?x8 (_ bv0 32))))
 (let (($x211 (= $x38 $x343)))
 (let (($x241 (and (and (and (and (and (and $x211 $x75) $x245) $x164) $x86) $x320) $x292)))
 (let (($x62 (and (and (and $x241 $x125) $x48) $x268)))
 (let (($x64 (= $x62 true)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x308 (concat ?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x77 (concat ?x29 (concat ?x290 ?x308))))
 (let ((?x225 (bvadd ?x77 (_ bv4 32))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem ?x225))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv2 32))) ?x215))))
 (let (($x247 (= (_ bv0 32) ?x18)))
 (let ((?x317 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x317 (_ bv1 32))))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x105 (= $x278 $x192)))
 (let (($x13 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x301 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x84 (and $x301 $x13)))
 (let (($x228 (=> $x84 $x105)))
 (let (($x271 (= ?x317 (_ bv0 32))))
 (let (($x279 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x145 (= $x279 $x271)))
 (let (($x107 (=> $x84 $x145)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv1 32))) (select input.dst.llvm-mem ?x77))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv2 32))) ?x126))))
 (let (($x30 (= input.spec-%var-l-1.2.1.2.0 ?x274)))
 (let (($x187 (=> $x84 $x30)))
 (let (($x296 (= (_ bv0 32) ?x77)))
 (let ((?x331 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x331 (_ bv1 32))))
 (let (($x203 (= $x13 $x80)))
 (let (($x195 (=> $x301 $x203)))
 (let (($x277 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x100 (and $x301 $x277)))
 (let (($x40 (=> $x100 $x68)))
 (let (($x288 (= ?x331 (_ bv0 32))))
 (let (($x272 (= $x277 $x288)))
 (let (($x147 (=> $x301 $x272)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x183)))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x236)))
 (let (($x167 (= input.spec-%var-l-1.2.0 ?x24)))
 (let (($x244 (=> $x301 $x167)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x191 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x191 (_ bv1 32))))
 (let (($x315 (= $x301 $x33)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x82 (=> $x198 $x68)))
 (let (($x261 (= ?x191 (_ bv0 32))))
 (let (($x202 (= $x198 $x261)))
 (let (($x149 (and (and (and (and (and (and $x202 $x82) $x315) $x244) $x147) $x40) $x195)))
 (let (($x180 (and (and (and $x149 $x187) $x107) $x228)))
 (let (($x303 (= $x180 true)))
 (let ((?x232 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x289 (= (_ bv0 3) ?x232)))
 (let (($x157 (= $x289 true)))
 (let (($x79 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x66 (= $x79 true)))
 (let ((?x281 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x259 (= (_ bv0 32) ?x281)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x5 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x175 (and $x78 $x5)))
 (let (($x83 (and $x175 $x259)))
 (let (($x270 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x270 $x83)))
 (let (($x264 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x257 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x264)))))))
 (let (($x163 (and $x257 $x148)))
 (let (($x113 (= $x163 true)))
 (let ((?x242 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x156 (bvneg ?x242)))
 (let (($x293 (= ?x156 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x285 (= $x293 true)))
 (let (($x162 (and $x285 $x113)))
 (let (($x120 (and $x162 $x66)))
 (let (($x297 (and $x120 $x157)))
 (let (($x312 (and $x297 $x303)))
 (let (($x405 (and $x312 $x64)))
 (let (($x128 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x287 (and $x128 $x405)))
 (let ((?x248 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (bvugt ?x248 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x248 (_ bv3 32)))))
 (let (($x189 (=> (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x21 $x134)))))))
 (let (($x159 (=> (and $x41 (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x21 $x134)))))))
 (let (($x153 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x193 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x90 (_ bv1 32))) (or false (or false (and true (or $x32 $x153)))))))
 (let (($x19 (=> (and $x41 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x90 (_ bv1 32)))) (or false (or false (and true (or $x32 $x153)))))))
 (let (($x116 (and $x19 $x159)))
 (let (($x349 (and $x116 $x287)))
 (let (($x197 (=> $x349 $x101)))
 (not $x197))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x110 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x41 (not $x110)))
 (let (($x263 (or $x110 $x41)))
 (let (($x101 (= $x263 true)))
 (let ((?x90 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x316))))
 (let ((?x322 (bvadd ?x326 (_ bv4 32))))
 (let ((?x10 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv1 32))) (select input.dst.llvm-mem ?x322))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x322 (_ bv2 32))) ?x10))))
 (let (($x69 (= (_ bv0 32) ?x129)))
 (let ((?x186 (ite $x69 (_ bv0 32) (_ bv1 32))))
 (let (($x374 (= ?x186 (_ bv0 32))))
 (let (($x249 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x201 (= $x249 $x374)))
 (let (($x93 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x319 (and $x123 $x93)))
 (let (($x268 (=> $x319 $x201)))
 (let (($x218 (bvuge ?x186 (_ bv1 32))))
 (let (($x11 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x313 (= $x11 $x218)))
 (let (($x48 (=> $x319 $x313)))
 (let ((?x227 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv1 32))) (select input.dst.llvm-mem ?x326))))
 (let ((?x94 (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x326 (_ bv2 32))) ?x227))))
 (let (($x114 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x94)))
 (let (($x125 (=> $x319 $x114)))
 (let (($x275 (= (_ bv0 32) ?x326)))
 (let ((?x269 (ite $x275 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x269 (_ bv1 32))))
 (let (($x170 (= $x93 $x327)))
 (let (($x292 (=> $x123 $x170)))
 (let (($x68 (= false false)))
 (let (($x266 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x306 (and $x123 $x266)))
 (let (($x320 (=> $x306 $x68)))
 (let (($x324 (= ?x269 (_ bv0 32))))
 (let (($x302 (= $x266 $x324)))
 (let (($x86 (=> $x123 $x302)))
 (let ((?x329 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x230 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x339 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x6 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x127 (concat (select input.dst.llvm-mem ?x6) (concat ?x339 (concat ?x230 ?x329)))))
 (let (($x214 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x127)))
 (let (($x164 (=> $x123 $x214)))
 (let ((?x8 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x178 (bvuge ?x8 (_ bv1 32))))
 (let (($x245 (= $x123 $x178)))
 (let (($x38 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x75 (=> $x38 $x68)))
 (let (($x343 (= ?x8 (_ bv0 32))))
 (let (($x211 (= $x38 $x343)))
 (let (($x241 (and (and (and (and (and (and $x211 $x75) $x245) $x164) $x86) $x320) $x292)))
 (let (($x62 (and (and (and $x241 $x125) $x48) $x268)))
 (let (($x64 (= $x62 true)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x308 (concat ?x124 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x290 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x77 (concat ?x29 (concat ?x290 ?x308))))
 (let ((?x225 (bvadd ?x77 (_ bv4 32))))
 (let ((?x215 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv1 32))) (select input.dst.llvm-mem ?x225))))
 (let ((?x18 (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x225 (_ bv2 32))) ?x215))))
 (let (($x247 (= (_ bv0 32) ?x18)))
 (let ((?x317 (ite $x247 (_ bv0 32) (_ bv1 32))))
 (let (($x192 (bvuge ?x317 (_ bv1 32))))
 (let (($x278 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x105 (= $x278 $x192)))
 (let (($x13 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x301 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x84 (and $x301 $x13)))
 (let (($x228 (=> $x84 $x105)))
 (let (($x271 (= ?x317 (_ bv0 32))))
 (let (($x279 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x145 (= $x279 $x271)))
 (let (($x107 (=> $x84 $x145)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv1 32))) (select input.dst.llvm-mem ?x77))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x77 (_ bv2 32))) ?x126))))
 (let (($x30 (= input.spec-%var-l-1.2.1.2.0 ?x274)))
 (let (($x187 (=> $x84 $x30)))
 (let (($x296 (= (_ bv0 32) ?x77)))
 (let ((?x331 (ite $x296 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x331 (_ bv1 32))))
 (let (($x203 (= $x13 $x80)))
 (let (($x195 (=> $x301 $x203)))
 (let (($x277 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x100 (and $x301 $x277)))
 (let (($x40 (=> $x100 $x68)))
 (let (($x288 (= ?x331 (_ bv0 32))))
 (let (($x272 (= $x277 $x288)))
 (let (($x147 (=> $x301 $x272)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x183)))
 (let ((?x24 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x236)))
 (let (($x167 (= input.spec-%var-l-1.2.0 ?x24)))
 (let (($x244 (=> $x301 $x167)))
 (let (($x28 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x191 (ite $x28 (_ bv0 32) (_ bv1 32))))
 (let (($x33 (bvuge ?x191 (_ bv1 32))))
 (let (($x315 (= $x301 $x33)))
 (let (($x198 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x82 (=> $x198 $x68)))
 (let (($x261 (= ?x191 (_ bv0 32))))
 (let (($x202 (= $x198 $x261)))
 (let (($x149 (and (and (and (and (and (and $x202 $x82) $x315) $x244) $x147) $x40) $x195)))
 (let (($x180 (and (and (and $x149 $x187) $x107) $x228)))
 (let (($x303 (= $x180 true)))
 (let ((?x232 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x289 (= (_ bv0 3) ?x232)))
 (let (($x157 (= $x289 true)))
 (let (($x79 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x66 (= $x79 true)))
 (let ((?x281 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x259 (= (_ bv0 32) ?x281)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x5 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x9)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x175 (and $x78 $x5)))
 (let (($x83 (and $x175 $x259)))
 (let (($x270 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x270 $x83)))
 (let (($x264 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x257 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x264)))))))
 (let (($x163 (and $x257 $x148)))
 (let (($x113 (= $x163 true)))
 (let ((?x242 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x156 (bvneg ?x242)))
 (let (($x293 (= ?x156 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x285 (= $x293 true)))
 (let (($x162 (and $x285 $x113)))
 (let (($x120 (and $x162 $x66)))
 (let (($x297 (and $x120 $x157)))
 (let (($x312 (and $x297 $x303)))
 (let (($x405 (and $x312 $x64)))
 (let (($x128 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x287 (and $x128 $x405)))
 (let ((?x248 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x134 (bvugt ?x248 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x248 (_ bv3 32)))))
 (let (($x189 (=> (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x21 $x134)))))))
 (let (($x159 (=> (and $x41 (bvule ?x248 (bvsub (bvadd ?x248 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x21 $x134)))))))
 (let (($x153 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x6)))
 (let (($x193 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x90 (_ bv1 32))) (or false (or false (and true (or $x32 $x153)))))))
 (let (($x19 (=> (and $x41 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x90 (_ bv1 32)))) (or false (or false (and true (or $x32 $x153)))))))
 (let (($x116 (and $x19 $x159)))
 (let (($x349 (and $x116 $x287)))
 (let (($x197 (=> $x349 $x101)))
 (not $x197))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 65
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x134 (= (_ bv0 32) ?x21)))
 (let ((?x258 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x258)))
 (let (($x248 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (and $x248 $x56)))
 (let (($x26 (and $x97 $x134)))
 (let (($x166 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x166 $x26)))
 (let (($x153 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x153)))))))
 (let (($x67 (and $x19 $x209)))
 (let (($x291 (= $x67 true)))
 (let ((?x301 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x33 (concat ?x301 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x121 (concat ?x294 (concat ?x58 ?x33))))
 (let ((?x288 (bvadd ?x121 (_ bv4 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x100))))
 (let (($x149 (= (_ bv0 32) ?x195)))
 (let ((?x84 (ite $x149 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x84 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x204 (= $x12 $x229)))
 (let (($x236 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x148 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x253 (and $x148 $x236)))
 (let (($x304 (=> $x253 $x204)))
 (let (($x237 (= ?x84 (_ bv0 32))))
 (let (($x331 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x331 $x237)))
 (let (($x31 (=> $x253 $x184)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x29))))
 (let (($x310 (= input.spec-%var-l-1.2.1.2.0 ?x308)))
 (let (($x77 (=> $x253 $x310)))
 (let (($x238 (= (_ bv0 32) ?x121)))
 (let ((?x213 (ite $x238 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x213 (_ bv1 32))))
 (let (($x167 (= $x236 $x24)))
 (let (($x244 (=> $x148 $x167)))
 (let (($x259 (= false false)))
 (let (($x261 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x148 $x261)))
 (let (($x183 (=> $x234 $x259)))
 (let (($x216 (= ?x213 (_ bv0 32))))
 (let (($x146 (= $x261 $x216)))
 (let (($x155 (=> $x148 $x146)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x206)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x198)))
 (let (($x28 (=> $x148 $x130)))
 (let (($x9 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x5 (ite $x9 (_ bv0 32) (_ bv1 32))))
 (let (($x163 (bvuge ?x5 (_ bv1 32))))
 (let (($x113 (= $x148 $x163)))
 (let (($x78 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x83 (=> $x78 $x259)))
 (let (($x175 (= ?x5 (_ bv0 32))))
 (let (($x281 (= $x78 $x175)))
 (let (($x187 (and (and (and (and (and (and $x281 $x83) $x113) $x28) $x155) $x183) $x244)))
 (let (($x279 (and (and (and $x187 $x77) $x31) $x304)))
 (let (($x225 (= $x279 true)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x220 (concat ?x208 (concat ?x293 (concat ?x63 ?x128)))))
 (let (($x103 (= ?x220 input.dst.llvm-%l)))
 (let (($x257 (= $x103 true)))
 (let (($x152 (= input.dst.llvm-%l ?x220)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x133 (and $x159 $x152)))
 (let (($x160 (and (and (and $x19 true) $x209) $x133)))
 (let (($x188 (= $x160 true)))
 (let (($x161 (and $x188 $x257)))
 (let (($x233 (and $x161 $x225)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x7 (and $x110 $x233)))
 (let (($x168 (=> $x7 $x291)))
 (not $x168))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x21 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x134 (= (_ bv0 32) ?x21)))
 (let ((?x258 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x258)))
 (let (($x248 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (and $x248 $x56)))
 (let (($x26 (and $x97 $x134)))
 (let (($x166 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x166 $x26)))
 (let (($x153 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x131 $x153)))))))
 (let (($x67 (and $x19 $x209)))
 (let (($x291 (= $x67 true)))
 (let ((?x301 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x33 (concat ?x301 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x121 (concat ?x294 (concat ?x58 ?x33))))
 (let ((?x288 (bvadd ?x121 (_ bv4 32))))
 (let ((?x100 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x100))))
 (let (($x149 (= (_ bv0 32) ?x195)))
 (let ((?x84 (ite $x149 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x84 (_ bv1 32))))
 (let (($x12 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x204 (= $x12 $x229)))
 (let (($x236 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x148 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x253 (and $x148 $x236)))
 (let (($x304 (=> $x253 $x204)))
 (let (($x237 (= ?x84 (_ bv0 32))))
 (let (($x331 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x184 (= $x331 $x237)))
 (let (($x31 (=> $x253 $x184)))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv1 32))) (select input.dst.llvm-mem ?x121))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x121 (_ bv2 32))) ?x29))))
 (let (($x310 (= input.spec-%var-l-1.2.1.2.0 ?x308)))
 (let (($x77 (=> $x253 $x310)))
 (let (($x238 (= (_ bv0 32) ?x121)))
 (let ((?x213 (ite $x238 (_ bv0 32) (_ bv1 32))))
 (let (($x24 (bvuge ?x213 (_ bv1 32))))
 (let (($x167 (= $x236 $x24)))
 (let (($x244 (=> $x148 $x167)))
 (let (($x259 (= false false)))
 (let (($x261 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x148 $x261)))
 (let (($x183 (=> $x234 $x259)))
 (let (($x216 (= ?x213 (_ bv0 32))))
 (let (($x146 (= $x261 $x216)))
 (let (($x155 (=> $x148 $x146)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x206)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x130 (= input.spec-%var-l-1.2.0 ?x198)))
 (let (($x28 (=> $x148 $x130)))
 (let (($x9 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x5 (ite $x9 (_ bv0 32) (_ bv1 32))))
 (let (($x163 (bvuge ?x5 (_ bv1 32))))
 (let (($x113 (= $x148 $x163)))
 (let (($x78 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x83 (=> $x78 $x259)))
 (let (($x175 (= ?x5 (_ bv0 32))))
 (let (($x281 (= $x78 $x175)))
 (let (($x187 (and (and (and (and (and (and $x281 $x83) $x113) $x28) $x155) $x183) $x244)))
 (let (($x279 (and (and (and $x187 $x77) $x31) $x304)))
 (let (($x225 (= $x279 true)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x293 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x220 (concat ?x208 (concat ?x293 (concat ?x63 ?x128)))))
 (let (($x103 (= ?x220 input.dst.llvm-%l)))
 (let (($x257 (= $x103 true)))
 (let (($x152 (= input.dst.llvm-%l ?x220)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x133 (and $x159 $x152)))
 (let (($x160 (and (and (and $x19 true) $x209) $x133)))
 (let (($x188 (= $x160 true)))
 (let (($x161 (and $x188 $x257)))
 (let (($x233 (and $x161 $x225)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x7 (and $x110 $x233)))
 (let (($x168 (=> $x7 $x291)))
 (not $x168))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 66
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3798X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3795X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3795X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3795X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3798X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x299 (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv4 32))))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3798X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3798X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x95 (concat ?x140 ?x265))))
 (let (($x328 (= ?x217 ?x217)))
 (let (($x38 (= (_ bv0 32) input.ind-%var3798X)))
 (let ((?x8 (ite $x38 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (bvuge ?x8 (_ bv1 32))))
 (let (($x390 (=> $x135 $x328)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3798X))))
 (let ((?x339 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv2 32))) ?x226)))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv3 32))) ?x339)))
 (let (($x250 (= ?x329 ?x329)))
 (let (($x334 (=> $x135 $x250)))
 (let (($x123 (= $x135 $x135)))
 (let (($x148 (= false false)))
 (let (($x343 (= ?x8 (_ bv0 32))))
 (let (($x75 (=> $x343 $x148)))
 (let (($x102 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x343 $x343)) $x75)))
 (let (($x269 (and (and (and $x102 $x123) $x334) $x390)))
 (let (($x50 (= input.ind-%var3795X.2.1 input.ind-%var3795X.2.1)))
 (let (($x18 (bvuge input.ind-%var3795X.0 (_ bv1 32))))
 (let (($x278 (=> $x18 $x50)))
 (let (($x271 (= input.ind-%var3795X.2.0 input.ind-%var3795X.2.0)))
 (let (($x145 (=> $x18 $x271)))
 (let (($x247 (= $x18 $x18)))
 (let (($x307 (= input.ind-%var3795X.0 (_ bv0 32))))
 (let (($x20 (=> $x307 $x148)))
 (let (($x105 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x307 $x307)) $x20)))
 (let (($x303 (and (and (and $x105 $x247) $x145) $x278)))
 (let (($x324 (and $x303 $x269)))
 (let (($x25 (not true)))
 (let (($x302 (or $x25 $x324)))
 (let (($x86 (and true $x302)))
 (let (($x221 (= $x86 true)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x55 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x121 (concat ?x82 ?x55))))
 (let ((?x262 (bvadd ?x238 (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x80))))
 (let (($x100 (= (_ bv0 32) ?x272)))
 (let ((?x13 (ite $x100 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x13 (_ bv1 32))))
 (let (($x237 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x31 (= $x237 $x184)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x113 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x244 (and $x113 $x30)))
 (let (($x200 (=> $x244 $x31)))
 (let (($x195 (= ?x13 (_ bv0 32))))
 (let (($x77 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x149 (= $x77 $x195)))
 (let (($x84 (=> $x244 $x149)))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x323))))
 (let (($x267 (= input.spec-%var-l-1.2.1.2.0 ?x29)))
 (let (($x308 (=> $x244 $x267)))
 (let (($x213 (= (_ bv0 32) ?x238)))
 (let ((?x216 (ite $x213 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x216 (_ bv1 32))))
 (let (($x24 (= $x30 $x236)))
 (let (($x167 (=> $x113 $x24)))
 (let (($x202 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x113 $x202)))
 (let (($x183 (=> $x234 $x148)))
 (let (($x146 (= ?x216 (_ bv0 32))))
 (let (($x155 (= $x202 $x146)))
 (let (($x274 (=> $x113 $x155)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x120)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x191 (=> $x113 $x109)))
 (let (($x281 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x259 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x259 (_ bv1 32))))
 (let (($x162 (= $x113 $x126)))
 (let (($x175 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x163 (=> $x175 $x148)))
 (let (($x83 (= ?x259 (_ bv0 32))))
 (let (($x47 (= $x175 $x83)))
 (let (($x225 (and (and (and (and (and (and $x47 $x163) $x162) $x191) $x274) $x183) $x167)))
 (let (($x67 (and (and (and $x225 $x308) $x84) $x200)))
 (let (($x291 (= $x67 true)))
 (let ((?x208 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x152 (concat ?x220 (concat ?x128 (concat ?x223 ?x208)))))
 (let (($x270 (= ?x152 input.dst.llvm-%l)))
 (let (($x78 (= $x270 true)))
 (let (($x133 (= input.dst.llvm-%l ?x152)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (and $x159 $x133)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x26 (= (_ bv0 32) ?x134)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (and $x286 $x97)))
 (let (($x209 (and $x21 $x26)))
 (let (($x52 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (and $x52 $x209)))
 (let (($x284 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x248 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x144 $x284)))))))
 (let (($x257 (and (and (and $x248 true) $x222) $x160)))
 (let (($x161 (= $x257 true)))
 (let (($x9 (and $x161 $x78)))
 (let (($x168 (and $x9 $x291)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x196 (and $x110 $x168)))
 (let (($x306 (=> $x196 $x221)))
 (not $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3798X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3795X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3795X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3795X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3798X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x265 (concat ?x299 (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv4 32))))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3798X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3798X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x95 (concat ?x140 ?x265))))
 (let (($x328 (= ?x217 ?x217)))
 (let (($x38 (= (_ bv0 32) input.ind-%var3798X)))
 (let ((?x8 (ite $x38 (_ bv0 32) (_ bv1 32))))
 (let (($x135 (bvuge ?x8 (_ bv1 32))))
 (let (($x390 (=> $x135 $x328)))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3798X))))
 (let ((?x339 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv2 32))) ?x226)))
 (let ((?x329 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3798X (_ bv3 32))) ?x339)))
 (let (($x250 (= ?x329 ?x329)))
 (let (($x334 (=> $x135 $x250)))
 (let (($x123 (= $x135 $x135)))
 (let (($x148 (= false false)))
 (let (($x343 (= ?x8 (_ bv0 32))))
 (let (($x75 (=> $x343 $x148)))
 (let (($x102 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x343 $x343)) $x75)))
 (let (($x269 (and (and (and $x102 $x123) $x334) $x390)))
 (let (($x50 (= input.ind-%var3795X.2.1 input.ind-%var3795X.2.1)))
 (let (($x18 (bvuge input.ind-%var3795X.0 (_ bv1 32))))
 (let (($x278 (=> $x18 $x50)))
 (let (($x271 (= input.ind-%var3795X.2.0 input.ind-%var3795X.2.0)))
 (let (($x145 (=> $x18 $x271)))
 (let (($x247 (= $x18 $x18)))
 (let (($x307 (= input.ind-%var3795X.0 (_ bv0 32))))
 (let (($x20 (=> $x307 $x148)))
 (let (($x105 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x307 $x307)) $x20)))
 (let (($x303 (and (and (and $x105 $x247) $x145) $x278)))
 (let (($x324 (and $x303 $x269)))
 (let (($x25 (not true)))
 (let (($x302 (or $x25 $x324)))
 (let (($x86 (and true $x302)))
 (let (($x221 (= $x86 true)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x55 (concat ?x58 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x121 (concat ?x82 ?x55))))
 (let ((?x262 (bvadd ?x238 (_ bv4 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x272 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x80))))
 (let (($x100 (= (_ bv0 32) ?x272)))
 (let ((?x13 (ite $x100 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x13 (_ bv1 32))))
 (let (($x237 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x31 (= $x237 $x184)))
 (let (($x30 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x113 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x244 (and $x113 $x30)))
 (let (($x200 (=> $x244 $x31)))
 (let (($x195 (= ?x13 (_ bv0 32))))
 (let (($x77 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x149 (= $x77 $x195)))
 (let (($x84 (=> $x244 $x149)))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv1 32))) (select input.dst.llvm-mem ?x238))))
 (let ((?x29 (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x238 (_ bv2 32))) ?x323))))
 (let (($x267 (= input.spec-%var-l-1.2.1.2.0 ?x29)))
 (let (($x308 (=> $x244 $x267)))
 (let (($x213 (= (_ bv0 32) ?x238)))
 (let ((?x216 (ite $x213 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x216 (_ bv1 32))))
 (let (($x24 (= $x30 $x236)))
 (let (($x167 (=> $x113 $x24)))
 (let (($x202 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x113 $x202)))
 (let (($x183 (=> $x234 $x148)))
 (let (($x146 (= ?x216 (_ bv0 32))))
 (let (($x155 (= $x202 $x146)))
 (let (($x274 (=> $x113 $x155)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x120)))
 (let ((?x28 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x109 (= input.spec-%var-l-1.2.0 ?x28)))
 (let (($x191 (=> $x113 $x109)))
 (let (($x281 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x259 (ite $x281 (_ bv0 32) (_ bv1 32))))
 (let (($x126 (bvuge ?x259 (_ bv1 32))))
 (let (($x162 (= $x113 $x126)))
 (let (($x175 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x163 (=> $x175 $x148)))
 (let (($x83 (= ?x259 (_ bv0 32))))
 (let (($x47 (= $x175 $x83)))
 (let (($x225 (and (and (and (and (and (and $x47 $x163) $x162) $x191) $x274) $x183) $x167)))
 (let (($x67 (and (and (and $x225 $x308) $x84) $x200)))
 (let (($x291 (= $x67 true)))
 (let ((?x208 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x152 (concat ?x220 (concat ?x128 (concat ?x223 ?x208)))))
 (let (($x270 (= ?x152 input.dst.llvm-%l)))
 (let (($x78 (= $x270 true)))
 (let (($x133 (= input.dst.llvm-%l ?x152)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (and $x159 $x133)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x26 (= (_ bv0 32) ?x134)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x97 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (and $x286 $x97)))
 (let (($x209 (and $x21 $x26)))
 (let (($x52 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x222 (and $x52 $x209)))
 (let (($x284 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x248 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x144 $x284)))))))
 (let (($x257 (and (and (and $x248 true) $x222) $x160)))
 (let (($x161 (= $x257 true)))
 (let (($x9 (and $x161 $x78)))
 (let (($x168 (and $x9 $x291)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x196 (and $x110 $x168)))
 (let (($x306 (=> $x196 $x221)))
 (not $x306)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 67
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x215 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x192 (= (_ bv0 3) ?x215)))
 (let (($x20 (= $x192 true)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x315 (concat ?x82 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x213 (concat ?x238 (concat ?x294 ?x315))))
 (let ((?x233 (bvadd ?x213 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x147))))
 (let (($x80 (= (_ bv0 32) ?x296)))
 (let ((?x87 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x87 (_ bv1 32))))
 (let (($x195 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x84 (= $x195 $x149)))
 (let (($x279 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x162 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x167 (and $x162 $x279)))
 (let (($x7 (=> $x167 $x84)))
 (let (($x272 (= ?x87 (_ bv0 32))))
 (let (($x308 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x308 $x272)))
 (let (($x13 (=> $x167 $x100)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv1 32))) (select input.dst.llvm-mem ?x213))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv2 32))) ?x277))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x323)))
 (let (($x29 (=> $x167 $x254)))
 (let (($x216 (= (_ bv0 32) ?x213)))
 (let ((?x146 (ite $x216 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x146 (_ bv1 32))))
 (let (($x236 (= $x279 $x30)))
 (let (($x24 (=> $x162 $x236)))
 (let (($x113 (= false false)))
 (let (($x68 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x162 $x68)))
 (let (($x183 (=> $x234 $x113)))
 (let (($x155 (= ?x146 (_ bv0 32))))
 (let (($x274 (= $x68 $x155)))
 (let (($x304 (=> $x162 $x274)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x66)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x204 (= input.spec-%var-l-1.2.0 ?x191)))
 (let (($x261 (=> $x162 $x204)))
 (let (($x47 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x148 (ite $x47 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x148 (_ bv1 32))))
 (let (($x297 (= $x162 $x229)))
 (let (($x83 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x126 (=> $x83 $x113)))
 (let (($x163 (= ?x148 (_ bv0 32))))
 (let (($x12 (= $x83 $x163)))
 (let (($x291 (and (and (and (and (and (and $x12 $x126) $x297) $x261) $x304) $x183) $x24)))
 (let (($x25 (and (and (and $x291 $x29) $x13) $x7)))
 (let (($x41 (= $x25 true)))
 (let ((?x220 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x133 (concat ?x152 (concat ?x208 (concat ?x63 ?x220)))))
 (let (($x5 (= ?x133 input.dst.llvm-%l)))
 (let (($x175 (= $x5 true)))
 (let (($x160 (= input.dst.llvm-%l ?x133)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x257 (and $x159 $x160)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x26)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x97)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (and $x258 $x21)))
 (let (($x222 (and $x134 $x209)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (and $x6 $x222)))
 (let (($x264 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x286 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x19 $x264)))))))
 (let (($x78 (and (and (and $x286 true) $x103) $x257)))
 (let (($x9 (= $x78 true)))
 (let (($x281 (and $x9 $x175)))
 (let (($x90 (and $x281 $x41)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x235 (and $x110 $x90)))
 (let (($x105 (=> $x235 $x20)))
 (not $x105)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x215 ((_ extract 2 0) input.dst.llvm-%l)))
 (let (($x192 (= (_ bv0 3) ?x215)))
 (let (($x20 (= $x192 true)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x315 (concat ?x82 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x213 (concat ?x238 (concat ?x294 ?x315))))
 (let ((?x233 (bvadd ?x213 (_ bv4 32))))
 (let ((?x147 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv1 32))) (select input.dst.llvm-mem ?x233))))
 (let ((?x296 (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x233 (_ bv2 32))) ?x147))))
 (let (($x80 (= (_ bv0 32) ?x296)))
 (let ((?x87 (ite $x80 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x87 (_ bv1 32))))
 (let (($x195 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x84 (= $x195 $x149)))
 (let (($x279 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x162 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x167 (and $x162 $x279)))
 (let (($x7 (=> $x167 $x84)))
 (let (($x272 (= ?x87 (_ bv0 32))))
 (let (($x308 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x100 (= $x308 $x272)))
 (let (($x13 (=> $x167 $x100)))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv1 32))) (select input.dst.llvm-mem ?x213))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x213 (_ bv2 32))) ?x277))))
 (let (($x254 (= input.spec-%var-l-1.2.1.2.0 ?x323)))
 (let (($x29 (=> $x167 $x254)))
 (let (($x216 (= (_ bv0 32) ?x213)))
 (let ((?x146 (ite $x216 (_ bv0 32) (_ bv1 32))))
 (let (($x30 (bvuge ?x146 (_ bv1 32))))
 (let (($x236 (= $x279 $x30)))
 (let (($x24 (=> $x162 $x236)))
 (let (($x113 (= false false)))
 (let (($x68 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x162 $x68)))
 (let (($x183 (=> $x234 $x113)))
 (let (($x155 (= ?x146 (_ bv0 32))))
 (let (($x274 (= $x68 $x155)))
 (let (($x304 (=> $x162 $x274)))
 (let ((?x66 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x66)))
 (let ((?x191 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x204 (= input.spec-%var-l-1.2.0 ?x191)))
 (let (($x261 (=> $x162 $x204)))
 (let (($x47 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x148 (ite $x47 (_ bv0 32) (_ bv1 32))))
 (let (($x229 (bvuge ?x148 (_ bv1 32))))
 (let (($x297 (= $x162 $x229)))
 (let (($x83 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x126 (=> $x83 $x113)))
 (let (($x163 (= ?x148 (_ bv0 32))))
 (let (($x12 (= $x83 $x163)))
 (let (($x291 (and (and (and (and (and (and $x12 $x126) $x297) $x261) $x304) $x183) $x24)))
 (let (($x25 (and (and (and $x291 $x29) $x13) $x7)))
 (let (($x41 (= $x25 true)))
 (let ((?x220 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x133 (concat ?x152 (concat ?x208 (concat ?x63 ?x220)))))
 (let (($x5 (= ?x133 input.dst.llvm-%l)))
 (let (($x175 (= $x5 true)))
 (let (($x160 (= input.dst.llvm-%l ?x133)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x257 (and $x159 $x160)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x26)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x21 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x97)))
 (let (($x258 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (and $x258 $x21)))
 (let (($x222 (and $x134 $x209)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (and $x6 $x222)))
 (let (($x264 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x286 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x19 $x264)))))))
 (let (($x78 (and (and (and $x286 true) $x103) $x257)))
 (let (($x9 (= $x78 true)))
 (let (($x281 (and $x9 $x175)))
 (let (($x90 (and $x281 $x41)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x235 (and $x110 $x90)))
 (let (($x105 (=> $x235 $x20)))
 (not $x105)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 68
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x18 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x130 (= $x18 true)))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x294 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x216 (concat ?x213 (concat ?x121 ?x301))))
 (let ((?x168 (bvadd ?x216 (_ bv4 32))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x331))))
 (let (($x147 (= (_ bv0 32) ?x310)))
 (let ((?x40 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x40 (_ bv1 32))))
 (let (($x272 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x13 (= $x272 $x100)))
 (let (($x67 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x297 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x24 (and $x297 $x67)))
 (let (($x196 (=> $x24 $x13)))
 (let (($x296 (= ?x40 (_ bv0 32))))
 (let (($x29 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x80 (= $x29 $x296)))
 (let (($x87 (=> $x24 $x80)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv1 32))) (select input.dst.llvm-mem ?x216))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv2 32))) ?x253))))
 (let (($x305 (= input.spec-%var-l-1.2.1.2.0 ?x277)))
 (let (($x323 (=> $x24 $x305)))
 (let (($x146 (= (_ bv0 32) ?x216)))
 (let ((?x155 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x155 (_ bv1 32))))
 (let (($x30 (= $x67 $x279)))
 (let (($x236 (=> $x297 $x30)))
 (let (($x162 (= false false)))
 (let (($x65 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x297 $x65)))
 (let (($x183 (=> $x234 $x162)))
 (let (($x274 (= ?x155 (_ bv0 32))))
 (let (($x304 (= $x65 $x274)))
 (let (($x200 (=> $x297 $x304)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x289)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x31 (= input.spec-%var-l-1.2.0 ?x261)))
 (let (($x202 (=> $x297 $x31)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x113 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x113 (_ bv1 32))))
 (let (($x198 (= $x297 $x184)))
 (let (($x163 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x229 (=> $x163 $x162)))
 (let (($x126 (= ?x113 (_ bv0 32))))
 (let (($x237 (= $x163 $x126)))
 (let (($x41 (and (and (and (and (and (and $x237 $x229) $x198) $x202) $x200) $x183) $x236)))
 (let (($x307 (and (and (and $x41 $x323) $x87) $x196)))
 (let (($x215 (= $x307 true)))
 (let ((?x152 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x133 (concat ?x220 (concat ?x223 ?x152)))))
 (let (($x259 (= ?x160 input.dst.llvm-%l)))
 (let (($x83 (= $x259 true)))
 (let (($x257 (= input.dst.llvm-%l ?x160)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x78 (and $x159 $x257)))
 (let ((?x209 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x222 (= (_ bv0 32) ?x209)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x56 $x134)))
 (let (($x103 (and $x26 $x222)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x153 $x103)))
 (let (($x188 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x258 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x188)))))))
 (let (($x175 (and (and (and $x258 true) $x270) $x78)))
 (let (($x281 (= $x175 true)))
 (let (($x47 (and $x281 $x83)))
 (let (($x192 (and $x47 $x215)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x20 (and $x110 $x192)))
 (let (($x15 (=> $x20 $x130)))
 (not $x15))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let (($x18 (bvule input.dst.llvm-%l (_ bv4294967294 32))))
 (let (($x130 (= $x18 true)))
 (let ((?x294 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x301 (concat ?x294 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x216 (concat ?x213 (concat ?x121 ?x301))))
 (let ((?x168 (bvadd ?x216 (_ bv4 32))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv1 32))) (select input.dst.llvm-mem ?x168))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x168 (_ bv2 32))) ?x331))))
 (let (($x147 (= (_ bv0 32) ?x310)))
 (let ((?x40 (ite $x147 (_ bv0 32) (_ bv1 32))))
 (let (($x100 (bvuge ?x40 (_ bv1 32))))
 (let (($x272 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x13 (= $x272 $x100)))
 (let (($x67 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x297 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x24 (and $x297 $x67)))
 (let (($x196 (=> $x24 $x13)))
 (let (($x296 (= ?x40 (_ bv0 32))))
 (let (($x29 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x80 (= $x29 $x296)))
 (let (($x87 (=> $x24 $x80)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv1 32))) (select input.dst.llvm-mem ?x216))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x216 (_ bv2 32))) ?x253))))
 (let (($x305 (= input.spec-%var-l-1.2.1.2.0 ?x277)))
 (let (($x323 (=> $x24 $x305)))
 (let (($x146 (= (_ bv0 32) ?x216)))
 (let ((?x155 (ite $x146 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x155 (_ bv1 32))))
 (let (($x30 (= $x67 $x279)))
 (let (($x236 (=> $x297 $x30)))
 (let (($x162 (= false false)))
 (let (($x65 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x297 $x65)))
 (let (($x183 (=> $x234 $x162)))
 (let (($x274 (= ?x155 (_ bv0 32))))
 (let (($x304 (= $x65 $x274)))
 (let (($x200 (=> $x297 $x304)))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x289)))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x31 (= input.spec-%var-l-1.2.0 ?x261)))
 (let (($x202 (=> $x297 $x31)))
 (let (($x12 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x113 (ite $x12 (_ bv0 32) (_ bv1 32))))
 (let (($x184 (bvuge ?x113 (_ bv1 32))))
 (let (($x198 (= $x297 $x184)))
 (let (($x163 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x229 (=> $x163 $x162)))
 (let (($x126 (= ?x113 (_ bv0 32))))
 (let (($x237 (= $x163 $x126)))
 (let (($x41 (and (and (and (and (and (and $x237 $x229) $x198) $x202) $x200) $x183) $x236)))
 (let (($x307 (and (and (and $x41 $x323) $x87) $x196)))
 (let (($x215 (= $x307 true)))
 (let ((?x152 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x133 (concat ?x220 (concat ?x223 ?x152)))))
 (let (($x259 (= ?x160 input.dst.llvm-%l)))
 (let (($x83 (= $x259 true)))
 (let (($x257 (= input.dst.llvm-%l ?x160)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x78 (and $x159 $x257)))
 (let ((?x209 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x222 (= (_ bv0 32) ?x209)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x134 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x56 $x134)))
 (let (($x103 (and $x26 $x222)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x153 $x103)))
 (let (($x188 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x248 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x258 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x248 $x188)))))))
 (let (($x175 (and (and (and $x258 true) $x270) $x78)))
 (let (($x281 (= $x175 true)))
 (let (($x47 (and $x281 $x83)))
 (let (($x192 (and $x47 $x215)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x20 (and $x110 $x192)))
 (let (($x15 (=> $x20 $x130)))
 (not $x15))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 69
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3840X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3837X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3837X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3837X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3840X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x140 (concat ?x266 (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv4 32))))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3840X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3840X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x27 (concat ?x299 ?x140))))
 (let (($x328 (= ?x217 ?x217)))
 (let (($x316 (= (_ bv0 32) input.ind-%var3840X)))
 (let ((?x75 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x326 (bvuge ?x75 (_ bv1 32))))
 (let (($x390 (=> $x326 $x328)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3840X))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv2 32))) ?x245)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv3 32))) ?x226)))
 (let (($x334 (= ?x250 ?x250)))
 (let (($x275 (=> $x326 $x334)))
 (let (($x417 (= $x326 $x326)))
 (let (($x297 (= false false)))
 (let (($x102 (= ?x75 (_ bv0 32))))
 (let (($x123 (=> $x102 $x297)))
 (let (($x324 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x102 $x102)) $x123)))
 (let (($x221 (and (and (and $x324 $x417) $x275) $x390)))
 (let (($x50 (= input.ind-%var3837X.2.1 input.ind-%var3837X.2.1)))
 (let (($x228 (bvuge input.ind-%var3837X.0 (_ bv1 32))))
 (let (($x278 (=> $x228 $x50)))
 (let (($x145 (= input.ind-%var3837X.2.0 input.ind-%var3837X.2.0)))
 (let (($x180 (=> $x228 $x145)))
 (let (($x317 (= $x228 $x228)))
 (let (($x242 (= input.ind-%var3837X.0 (_ bv0 32))))
 (let (($x247 (=> $x242 $x297)))
 (let (($x312 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x242 $x242)) $x247)))
 (let (($x8 (and (and (and $x312 $x317) $x180) $x278)))
 (let (($x306 (and $x8 $x221)))
 (let (($x131 (not true)))
 (let (($x320 (or $x131 $x306)))
 (let (($x231 (and true $x320)))
 (let (($x158 (= $x231 true)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x121 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (concat ?x216 (concat ?x238 ?x58))))
 (let ((?x90 (bvadd ?x146 (_ bv4 32))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x77))))
 (let (($x331 (= (_ bv0 32) ?x267)))
 (let ((?x203 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x203 (_ bv1 32))))
 (let (($x296 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x87 (= $x296 $x80)))
 (let (($x25 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x236 (and $x198 $x25)))
 (let (($x235 (=> $x236 $x87)))
 (let (($x310 (= ?x203 (_ bv0 32))))
 (let (($x323 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x147 (= $x323 $x310)))
 (let (($x40 (=> $x236 $x147)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x244))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x277 (=> $x236 $x187)))
 (let (($x155 (= (_ bv0 32) ?x146)))
 (let ((?x274 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x67 (bvuge ?x274 (_ bv1 32))))
 (let (($x279 (= $x25 $x67)))
 (let (($x30 (=> $x198 $x279)))
 (let (($x176 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x198 $x176)))
 (let (($x183 (=> $x234 $x297)))
 (let (($x304 (= ?x274 (_ bv0 32))))
 (let (($x200 (= $x176 $x304)))
 (let (($x7 (=> $x198 $x200)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x206)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x202)))
 (let (($x68 (=> $x198 $x84)))
 (let (($x237 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x162 (_ bv1 32))))
 (let (($x28 (= $x198 $x149)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x184 (=> $x126 $x297)))
 (let (($x229 (= ?x162 (_ bv0 32))))
 (let (($x195 (= $x126 $x229)))
 (let (($x215 (and (and (and (and (and (and $x195 $x184) $x28) $x68) $x7) $x183) $x30)))
 (let (($x105 (and (and (and $x215 $x277) $x40) $x235)))
 (let (($x18 (= $x105 true)))
 (let ((?x133 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x257 (concat ?x160 (concat ?x152 (concat ?x63 ?x133)))))
 (let (($x148 (= ?x257 input.dst.llvm-%l)))
 (let (($x163 (= $x148 true)))
 (let (($x78 (= input.dst.llvm-%l ?x257)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x175 (and $x159 $x78)))
 (let ((?x222 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x103 (= (_ bv0 32) ?x222)))
 (let ((?x134 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x134)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (and $x97 $x26)))
 (let (($x270 (and $x209 $x103)))
 (let (($x284 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x284 $x270)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x56 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x161)))))))
 (let (($x83 (and (and (and $x56 true) $x5) $x175)))
 (let (($x47 (= $x83 true)))
 (let (($x12 (and $x47 $x163)))
 (let (($x130 (and $x12 $x18)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x15 (and $x110 $x130)))
 (let (($x57 (=> $x15 $x158)))
 (not $x57)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3840X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3837X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3837X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3837X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3840X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x140 (concat ?x266 (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv4 32))))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3840X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3840X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x217 (concat ?x27 (concat ?x299 ?x140))))
 (let (($x328 (= ?x217 ?x217)))
 (let (($x316 (= (_ bv0 32) input.ind-%var3840X)))
 (let ((?x75 (ite $x316 (_ bv0 32) (_ bv1 32))))
 (let (($x326 (bvuge ?x75 (_ bv1 32))))
 (let (($x390 (=> $x326 $x328)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3840X))))
 (let ((?x226 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv2 32))) ?x245)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3840X (_ bv3 32))) ?x226)))
 (let (($x334 (= ?x250 ?x250)))
 (let (($x275 (=> $x326 $x334)))
 (let (($x417 (= $x326 $x326)))
 (let (($x297 (= false false)))
 (let (($x102 (= ?x75 (_ bv0 32))))
 (let (($x123 (=> $x102 $x297)))
 (let (($x324 (and (and (= input.dst.llvm-%l input.dst.llvm-%l) (= $x102 $x102)) $x123)))
 (let (($x221 (and (and (and $x324 $x417) $x275) $x390)))
 (let (($x50 (= input.ind-%var3837X.2.1 input.ind-%var3837X.2.1)))
 (let (($x228 (bvuge input.ind-%var3837X.0 (_ bv1 32))))
 (let (($x278 (=> $x228 $x50)))
 (let (($x145 (= input.ind-%var3837X.2.0 input.ind-%var3837X.2.0)))
 (let (($x180 (=> $x228 $x145)))
 (let (($x317 (= $x228 $x228)))
 (let (($x242 (= input.ind-%var3837X.0 (_ bv0 32))))
 (let (($x247 (=> $x242 $x297)))
 (let (($x312 (and (and (= input.spec-%var-l-1 input.spec-%var-l-1) (= $x242 $x242)) $x247)))
 (let (($x8 (and (and (and $x312 $x317) $x180) $x278)))
 (let (($x306 (and $x8 $x221)))
 (let (($x131 (not true)))
 (let (($x320 (or $x131 $x306)))
 (let (($x231 (and true $x320)))
 (let (($x158 (= $x231 true)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x58 (concat ?x121 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (concat ?x216 (concat ?x238 ?x58))))
 (let ((?x90 (bvadd ?x146 (_ bv4 32))))
 (let ((?x77 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv1 32))) (select input.dst.llvm-mem ?x90))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x90 (_ bv2 32))) ?x77))))
 (let (($x331 (= (_ bv0 32) ?x267)))
 (let ((?x203 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x80 (bvuge ?x203 (_ bv1 32))))
 (let (($x296 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x87 (= $x296 $x80)))
 (let (($x25 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x198 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x236 (and $x198 $x25)))
 (let (($x235 (=> $x236 $x87)))
 (let (($x310 (= ?x203 (_ bv0 32))))
 (let (($x323 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x147 (= $x323 $x310)))
 (let (($x40 (=> $x236 $x147)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x244))))
 (let (($x187 (= input.spec-%var-l-1.2.1.2.0 ?x253)))
 (let (($x277 (=> $x236 $x187)))
 (let (($x155 (= (_ bv0 32) ?x146)))
 (let ((?x274 (ite $x155 (_ bv0 32) (_ bv1 32))))
 (let (($x67 (bvuge ?x274 (_ bv1 32))))
 (let (($x279 (= $x25 $x67)))
 (let (($x30 (=> $x198 $x279)))
 (let (($x176 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x234 (and $x198 $x176)))
 (let (($x183 (=> $x234 $x297)))
 (let (($x304 (= ?x274 (_ bv0 32))))
 (let (($x200 (= $x176 $x304)))
 (let (($x7 (=> $x198 $x200)))
 (let ((?x206 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x157 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x206)))
 (let ((?x202 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x157)))
 (let (($x84 (= input.spec-%var-l-1.2.0 ?x202)))
 (let (($x68 (=> $x198 $x84)))
 (let (($x237 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x162 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x149 (bvuge ?x162 (_ bv1 32))))
 (let (($x28 (= $x198 $x149)))
 (let (($x126 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x184 (=> $x126 $x297)))
 (let (($x229 (= ?x162 (_ bv0 32))))
 (let (($x195 (= $x126 $x229)))
 (let (($x215 (and (and (and (and (and (and $x195 $x184) $x28) $x68) $x7) $x183) $x30)))
 (let (($x105 (and (and (and $x215 $x277) $x40) $x235)))
 (let (($x18 (= $x105 true)))
 (let ((?x133 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x257 (concat ?x160 (concat ?x152 (concat ?x63 ?x133)))))
 (let (($x148 (= ?x257 input.dst.llvm-%l)))
 (let (($x163 (= $x148 true)))
 (let (($x78 (= input.dst.llvm-%l ?x257)))
 (let (($x159 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x175 (and $x159 $x78)))
 (let ((?x222 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x103 (= (_ bv0 32) ?x222)))
 (let ((?x134 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x134)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (and $x97 $x26)))
 (let (($x270 (and $x209 $x103)))
 (let (($x284 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x284 $x270)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x56 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x286 $x161)))))))
 (let (($x83 (and (and (and $x56 true) $x5) $x175)))
 (let (($x47 (= $x83 true)))
 (let (($x12 (and $x47 $x163)))
 (let (($x130 (and $x12 $x18)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x15 (and $x110 $x130)))
 (let (($x57 (=> $x15 $x158)))
 (not $x57)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
==query_number: 70
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3947X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3944X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3944X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3944X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var3941X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3938X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3938X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3938X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x505 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3947X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x502 (concat ?x505 (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv4 32))))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3947X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x494 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3947X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x486 (concat ?x494 (concat ?x492 ?x502))))
 (let (($x506 (= ?x486 ?x486)))
 (let (($x478 (= (_ bv0 32) input.ind-%var3947X)))
 (let ((?x500 (ite $x478 (_ bv0 32) (_ bv1 32))))
 (let (($x610 (bvuge ?x500 (_ bv1 32))))
 (let (($x497 (=> $x610 $x506)))
 (let ((?x514 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3947X))))
 (let ((?x503 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv2 32))) ?x514)))
 (let ((?x515 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv3 32))) ?x503)))
 (let (($x516 (= ?x515 ?x515)))
 (let (($x512 (=> $x610 $x516)))
 (let (($x481 (= $x610 $x610)))
 (let (($x308 (= false false)))
 (let (($x528 (= ?x500 (_ bv0 32))))
 (let (($x524 (=> $x528 $x308)))
 (let (($x496 (= $x528 $x528)))
 (let ((?x193 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x200))))
 (let ((?x286 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv1 32))) (select input.dst.llvm-mem ?x286))))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv2 32))) ?x311))))
 (let (($x545 (= ?x332 ?x25)))
 (let (($x173 (and (and (and (and (and $x545 $x496) $x524) $x481) $x512) $x497)))
 (let (($x477 (= input.ind-%var3944X.2.1 input.ind-%var3944X.2.1)))
 (let (($x468 (bvuge input.ind-%var3944X.0 (_ bv1 32))))
 (let (($x483 (=> $x468 $x477)))
 (let (($x466 (= input.ind-%var3944X.2.0 input.ind-%var3944X.2.0)))
 (let (($x474 (=> $x468 $x466)))
 (let (($x465 (= $x468 $x468)))
 (let (($x464 (= input.ind-%var3944X.0 (_ bv0 32))))
 (let (($x480 (=> $x464 $x308)))
 (let (($x479 (= $x464 $x464)))
 (let (($x473 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x513 (and (and (and (and (and $x473 $x479) $x480) $x465) $x474) $x483)))
 (let (($x117 (and $x513 $x173)))
 (let (($x182 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x139 (and $x182 $x117)))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3941X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x460 (concat ?x443 (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv4 32))))))
 (let ((?x440 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3941X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3941X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x459 (concat ?x45 (concat ?x440 ?x460))))
 (let (($x449 (= ?x459 ?x459)))
 (let (($x488 (= (_ bv0 32) input.ind-%var3941X)))
 (let ((?x461 (ite $x488 (_ bv0 32) (_ bv1 32))))
 (let (($x438 (bvuge ?x461 (_ bv1 32))))
 (let (($x452 (=> $x438 $x449)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3941X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv2 32))) ?x448)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv3 32))) ?x435)))
 (let (($x444 (= ?x433 ?x433)))
 (let (($x437 (=> $x438 $x444)))
 (let (($x489 (= $x438 $x438)))
 (let (($x450 (= ?x461 (_ bv0 32))))
 (let (($x434 (=> $x450 $x308)))
 (let (($x547 (= $x450 $x450)))
 (let ((?x329 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x394 (concat ?x329 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x226 (concat ?x245 (concat ?x345 ?x394))))
 (let (($x445 (= ?x226 ?x25)))
 (let (($x207 (and (and (and (and (and $x445 $x547) $x434) $x489) $x437) $x452)))
 (let (($x428 (= input.ind-%var3938X.2.1 input.ind-%var3938X.2.1)))
 (let (($x411 (bvuge input.ind-%var3938X.0 (_ bv1 32))))
 (let (($x429 (=> $x411 $x428)))
 (let (($x409 (= input.ind-%var3938X.2.0 input.ind-%var3938X.2.0)))
 (let (($x414 (=> $x411 $x409)))
 (let (($x454 (= $x411 $x411)))
 (let (($x422 (= input.ind-%var3938X.0 (_ bv0 32))))
 (let (($x415 (=> $x422 $x308)))
 (let (($x431 (= $x422 $x422)))
 (let (($x408 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x446 (and (and (and (and (and $x408 $x431) $x415) $x454) $x414) $x429)))
 (let (($x482 (and $x446 $x207)))
 (let (($x262 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x463 (and $x262 $x482)))
 (let (($x413 (not true)))
 (let (($x72 (or (or $x413 $x463) $x139)))
 (let (($x199 (and true $x72)))
 (let (($x172 (= $x199 true)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x332 (_ bv4 32))))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv2 32))) ?x351)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv3 32))) ?x333)))
 (let ((?x346 (bvadd ?x341 (_ bv4 32))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv1 32))) (select input.dst.llvm-mem ?x346))))
 (let ((?x380 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv2 32))) ?x366))))
 (let (($x219 (= (_ bv0 32) ?x380)))
 (let ((?x381 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x359 (bvuge ?x381 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x370 (= $x371 $x359)))
 (let (($x546 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x392 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x376 (and $x392 $x546)))
 (let (($x416 (=> $x376 $x370)))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv1 32))) (select input.dst.llvm-mem ?x341))))
 (let ((?x426 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv2 32))) ?x387))))
 (let (($x344 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x426)))
 (let (($x367 (=> $x376 $x344)))
 (let (($x354 (= ?x381 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x393 $x354)))
 (let (($x395 (=> $x376 $x383)))
 (let (($x37 (= (_ bv0 32) ?x341)))
 (let ((?x111 (ite $x37 (_ bv0 32) (_ bv1 32))))
 (let (($x391 (= ?x111 (_ bv0 32))))
 (let (($x379 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x368 (= $x379 $x391)))
 (let (($x362 (=> $x392 $x368)))
 (let (($x54 (bvuge ?x111 (_ bv1 32))))
 (let (($x355 (= $x546 $x54)))
 (let (($x151 (=> $x392 $x355)))
 (let (($x363 (and $x392 $x379)))
 (let (($x338 (=> $x363 $x308)))
 (let (($x179 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x22 (=> $x179 $x308)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem ?x332))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv2 32))) ?x88))))
 (let (($x412 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x365)))
 (let (($x378 (=> $x392 $x412)))
 (let (($x70 (= (_ bv0 32) ?x332)))
 (let ((?x364 (ite $x70 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x364 (_ bv1 32))))
 (let (($x71 (= $x392 $x73)))
 (let (($x318 (= ?x364 (_ bv0 32))))
 (let (($x321 (= $x179 $x318)))
 (let (($x43 (and (and (and (and (and (and $x321 $x71) $x378) $x22) $x338) $x151) $x362)))
 (let (($x420 (and (and (and $x43 $x395) $x367) $x416)))
 (let (($x181 (=> $x182 $x420)))
 (let (($x91 (= $x181 true)))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x226 (_ bv4 32))))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x226 (_ bv4 32)) (_ bv2 32))) ?x327)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x226 (_ bv4 32)) (_ bv3 32))) ?x241)))
 (let ((?x129 (bvadd ?x252 (_ bv4 32))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x313))))
 (let (($x62 (= (_ bv0 32) ?x268)))
 (let ((?x64 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x64 (_ bv1 32))))
 (let (($x263 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x197 (= $x263 $x101)))
 (let (($x190 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x127 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (and $x127 $x190)))
 (let (($x16 (=> $x94 $x197)))
 (let (($x405 (= ?x64 (_ bv0 32))))
 (let (($x260 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x287 (= $x260 $x405)))
 (let (($x349 (=> $x94 $x287)))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x11))))
 (let (($x239 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x255)))
 (let (($x352 (=> $x94 $x239)))
 (let (($x138 (= (_ bv0 32) ?x252)))
 (let ((?x283 (ite $x138 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (= ?x283 (_ bv0 32))))
 (let (($x57 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x57 $x132)))
 (let (($x44 (=> $x127 $x227)))
 (let (($x400 (bvuge ?x283 (_ bv1 32))))
 (let (($x385 (= $x190 $x400)))
 (let (($x104 (=> $x127 $x385)))
 (let (($x61 (and $x127 $x57)))
 (let (($x204 (=> $x61 $x308)))
 (let (($x326 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x231 (=> $x326 $x308)))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x122))))
 (let (($x306 (= input.spec-%var-l-1.2.1.2.0 ?x221)))
 (let (($x320 (=> $x127 $x306)))
 (let (($x250 (= (_ bv0 32) ?x226)))
 (let ((?x334 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (bvuge ?x334 (_ bv1 32))))
 (let (($x27 (= $x127 $x265)))
 (let (($x275 (= ?x334 (_ bv0 32))))
 (let (($x86 (= $x326 $x275)))
 (let (($x240 (and (and (and (and (and (and $x86 $x27) $x320) $x231) $x204) $x104) $x44)))
 (let (($x384 (and (and (and $x240 $x352) $x349) $x16)))
 (let (($x347 (=> $x262 $x384)))
 (let (($x335 (= $x347 true)))
 (let ((?x102 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x135 (= (_ bv0 3) ?x102)))
 (let (($x269 (= $x135 true)))
 (let ((?x247 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x52 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x38 (concat (select input.dst.llvm-mem ?x52) (concat ?x271 (concat ?x228 ?x247)))))
 (let (($x107 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x38)))
 (let (($x50 (=> $x182 $x107)))
 (let (($x110 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x131 (_ bv1 32))))
 (let (($x285 (= $x182 $x242)))
 (let (($x15 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x144 (=> $x15 $x308)))
 (let (($x109 (= ?x131 (_ bv0 32))))
 (let (($x32 (= $x15 $x109)))
 (let (($x343 (and (and (and $x32 $x144) $x285) $x50)))
 (let (($x211 (= $x343 true)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x267)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x310)))
 (let (($x296 (= input.spec-%var-l-1.2.0 ?x20)))
 (let (($x80 (=> $x262 $x296)))
 (let (($x192 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x305 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x305 (_ bv1 32))))
 (let (($x29 (= $x262 $x288)))
 (let (($x187 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x233 (=> $x187 $x308)))
 (let (($x323 (= ?x305 (_ bv0 32))))
 (let (($x90 (= $x187 $x323)))
 (let (($x105 (and (and (and $x90 $x233) $x29) $x80)))
 (let (($x18 (= $x105 true)))
 (let (($x124 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x13 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x55 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x13) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x13))))
 (let (($x315 (and true $x55)))
 (let (($x236 (and $x55 $x315)))
 (let (($x30 (= (bvand ?x25 (_ bv4294967288 32)) ?x25)))
 (let (($x301 (= (bvand ?x193 (_ bv4294967292 32)) ?x193)))
 (let (($x215 (and $x301 $x30)))
 (let (($x121 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x193 (bvsub ?x193 (_ bv4 32))) (bvult ?x193 (bvsub ?x193 (_ bv4 32))))))
 (let (($x171 (and (and (and (and (and $x315 $x121) $x301) $x215) $x236) $x124)))
 (let (($x23 (not $x110)))
 (let (($x24 (=> $x23 $x171)))
 (let (($x244 (= $x24 true)))
 (let (($x202 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x84 (= $x202 true)))
 (let (($x79 (= $x23 true)))
 (let ((?x191 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x261 (= (_ bv0 32) ?x191)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (and $x198 $x28)))
 (let (($x31 (and $x100 $x261)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x232 (and $x148 $x31)))
 (let (($x237 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x272 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x237)))))))
 (let (($x289 (and $x272 $x232)))
 (let (($x66 (= $x289 true)))
 (let ((?x220 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x208 (bvneg ?x220)))
 (let (($x78 (= ?x208 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x175 (= $x78 true)))
 (let (($x120 (and $x175 $x66)))
 (let (($x206 (and $x120 $x79)))
 (let (($x68 (and $x206 $x84)))
 (let (($x225 (and $x68 $x244)))
 (let (($x130 (and $x225 $x18)))
 (let (($x316 (and $x130 $x211)))
 (let (($x123 (and $x316 $x269)))
 (let (($x14 (and $x123 $x335)))
 (let (($x425 (and $x14 $x91)))
 (let (($x499 (and $x182 $x425)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x423 (and $x223 $x499)))
 (let (($x35 (bvugt ?x193 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd ?x193 (_ bv3 32))))
 (let (($x259 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x5)))
 (let (($x160 (=> (bvule ?x193 (bvsub (bvadd ?x193 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x259 $x35)))))))
 (let (($x209 (=> (and $x23 (bvule ?x193 (bvsub (bvadd ?x193 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x259 $x35)))))))
 (let (($x281 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x26 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x286 (_ bv1 32))) (or false (or false (and true (or $x56 $x281)))))))
 (let (($x264 (=> (and $x23 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x286 (_ bv1 32)))) (or false (or false (and true (or $x56 $x281)))))))
 (let (($x222 (and $x264 $x209)))
 (let (($x402 (and $x222 $x423)))
 (let (($x59 (=> $x402 $x172)))
 (not $x59)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var3947X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.ind-%var3944X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3944X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3944X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.0 () (_ BitVec 32))
(declare-fun input.ind-%var3941X () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.ind-%var3938X.2.1 () (_ BitVec 32))
(declare-fun input.ind-%var3938X.0 () (_ BitVec 32))
(declare-fun input.ind-%var3938X.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.L3%5%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-1.2.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-sum-0.L3%5%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-5.L3%5%bbentry () (_ BitVec 32))
(assert
 (let ((?x505 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3947X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x502 (concat ?x505 (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv4 32))))))
 (let ((?x492 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3947X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x494 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3947X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x486 (concat ?x494 (concat ?x492 ?x502))))
 (let (($x506 (= ?x486 ?x486)))
 (let (($x478 (= (_ bv0 32) input.ind-%var3947X)))
 (let ((?x500 (ite $x478 (_ bv0 32) (_ bv1 32))))
 (let (($x610 (bvuge ?x500 (_ bv1 32))))
 (let (($x497 (=> $x610 $x506)))
 (let ((?x514 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3947X))))
 (let ((?x503 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv2 32))) ?x514)))
 (let ((?x515 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3947X (_ bv3 32))) ?x503)))
 (let (($x516 (= ?x515 ?x515)))
 (let (($x512 (=> $x610 $x516)))
 (let (($x481 (= $x610 $x610)))
 (let (($x308 (= false false)))
 (let (($x528 (= ?x500 (_ bv0 32))))
 (let (($x524 (=> $x528 $x308)))
 (let (($x496 (= $x528 $x528)))
 (let ((?x193 (bvadd (_ bv4 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem ?x193))))
 (let ((?x25 (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x193 (_ bv2 32))) ?x200))))
 (let ((?x286 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4 32))))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv1 32))) (select input.dst.llvm-mem ?x286))))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x286 (_ bv2 32))) ?x311))))
 (let (($x545 (= ?x332 ?x25)))
 (let (($x173 (and (and (and (and (and $x545 $x496) $x524) $x481) $x512) $x497)))
 (let (($x477 (= input.ind-%var3944X.2.1 input.ind-%var3944X.2.1)))
 (let (($x468 (bvuge input.ind-%var3944X.0 (_ bv1 32))))
 (let (($x483 (=> $x468 $x477)))
 (let (($x466 (= input.ind-%var3944X.2.0 input.ind-%var3944X.2.0)))
 (let (($x474 (=> $x468 $x466)))
 (let (($x465 (= $x468 $x468)))
 (let (($x464 (= input.ind-%var3944X.0 (_ bv0 32))))
 (let (($x480 (=> $x464 $x308)))
 (let (($x479 (= $x464 $x464)))
 (let (($x473 (= input.spec-%var-l-0.L3%5%bbentry.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x513 (and (and (and (and (and $x473 $x479) $x480) $x465) $x474) $x483)))
 (let (($x117 (and $x513 $x173)))
 (let (($x182 (bvuge input.spec-%var-l-0.L3%5%bbentry.0 (_ bv1 32))))
 (let (($x139 (and $x182 $x117)))
 (let ((?x443 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3941X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x460 (concat ?x443 (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv4 32))))))
 (let ((?x440 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3941X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3941X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x459 (concat ?x45 (concat ?x440 ?x460))))
 (let (($x449 (= ?x459 ?x459)))
 (let (($x488 (= (_ bv0 32) input.ind-%var3941X)))
 (let ((?x461 (ite $x488 (_ bv0 32) (_ bv1 32))))
 (let (($x438 (bvuge ?x461 (_ bv1 32))))
 (let (($x452 (=> $x438 $x449)))
 (let ((?x448 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3941X))))
 (let ((?x435 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv2 32))) ?x448)))
 (let ((?x433 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3941X (_ bv3 32))) ?x435)))
 (let (($x444 (= ?x433 ?x433)))
 (let (($x437 (=> $x438 $x444)))
 (let (($x489 (= $x438 $x438)))
 (let (($x450 (= ?x461 (_ bv0 32))))
 (let (($x434 (=> $x450 $x308)))
 (let (($x547 (= $x450 $x450)))
 (let ((?x329 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x394 (concat ?x329 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x226 (concat ?x245 (concat ?x345 ?x394))))
 (let (($x445 (= ?x226 ?x25)))
 (let (($x207 (and (and (and (and (and $x445 $x547) $x434) $x489) $x437) $x452)))
 (let (($x428 (= input.ind-%var3938X.2.1 input.ind-%var3938X.2.1)))
 (let (($x411 (bvuge input.ind-%var3938X.0 (_ bv1 32))))
 (let (($x429 (=> $x411 $x428)))
 (let (($x409 (= input.ind-%var3938X.2.0 input.ind-%var3938X.2.0)))
 (let (($x414 (=> $x411 $x409)))
 (let (($x454 (= $x411 $x411)))
 (let (($x422 (= input.ind-%var3938X.0 (_ bv0 32))))
 (let (($x415 (=> $x422 $x308)))
 (let (($x431 (= $x422 $x422)))
 (let (($x408 (= input.spec-%var-l-1.2.1 input.spec-%var-l-0.L3%5%bbentry.2.1)))
 (let (($x446 (and (and (and (and (and $x408 $x431) $x415) $x454) $x414) $x429)))
 (let (($x482 (and $x446 $x207)))
 (let (($x262 (bvuge input.spec-%var-l-1.0 (_ bv1 32))))
 (let (($x463 (and $x262 $x482)))
 (let (($x413 (not true)))
 (let (($x72 (or (or $x413 $x463) $x139)))
 (let (($x199 (and true $x72)))
 (let (($x172 (= $x199 true)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x332 (_ bv4 32))))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv2 32))) ?x351)))
 (let ((?x341 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x332 (_ bv4 32)) (_ bv3 32))) ?x333)))
 (let ((?x346 (bvadd ?x341 (_ bv4 32))))
 (let ((?x366 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv1 32))) (select input.dst.llvm-mem ?x346))))
 (let ((?x380 (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x346 (_ bv2 32))) ?x366))))
 (let (($x219 (= (_ bv0 32) ?x380)))
 (let ((?x381 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x359 (bvuge ?x381 (_ bv1 32))))
 (let (($x371 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x370 (= $x371 $x359)))
 (let (($x546 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x392 (bvuge input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv1 32))))
 (let (($x376 (and $x392 $x546)))
 (let (($x416 (=> $x376 $x370)))
 (let ((?x387 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv1 32))) (select input.dst.llvm-mem ?x341))))
 (let ((?x426 (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x341 (_ bv2 32))) ?x387))))
 (let (($x344 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.0 ?x426)))
 (let (($x367 (=> $x376 $x344)))
 (let (($x354 (= ?x381 (_ bv0 32))))
 (let (($x393 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x393 $x354)))
 (let (($x395 (=> $x376 $x383)))
 (let (($x37 (= (_ bv0 32) ?x341)))
 (let ((?x111 (ite $x37 (_ bv0 32) (_ bv1 32))))
 (let (($x391 (= ?x111 (_ bv0 32))))
 (let (($x379 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x368 (= $x379 $x391)))
 (let (($x362 (=> $x392 $x368)))
 (let (($x54 (bvuge ?x111 (_ bv1 32))))
 (let (($x355 (= $x546 $x54)))
 (let (($x151 (=> $x392 $x355)))
 (let (($x363 (and $x392 $x379)))
 (let (($x338 (=> $x363 $x308)))
 (let (($x179 (= input.spec-%var-l-0.L3%5%bbentry.2.1.0 (_ bv0 32))))
 (let (($x22 (=> $x179 $x308)))
 (let ((?x88 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv1 32))) (select input.dst.llvm-mem ?x332))))
 (let ((?x365 (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x332 (_ bv2 32))) ?x88))))
 (let (($x412 (= input.spec-%var-l-0.L3%5%bbentry.2.1.2.0 ?x365)))
 (let (($x378 (=> $x392 $x412)))
 (let (($x70 (= (_ bv0 32) ?x332)))
 (let ((?x364 (ite $x70 (_ bv0 32) (_ bv1 32))))
 (let (($x73 (bvuge ?x364 (_ bv1 32))))
 (let (($x71 (= $x392 $x73)))
 (let (($x318 (= ?x364 (_ bv0 32))))
 (let (($x321 (= $x179 $x318)))
 (let (($x43 (and (and (and (and (and (and $x321 $x71) $x378) $x22) $x338) $x151) $x362)))
 (let (($x420 (and (and (and $x43 $x395) $x367) $x416)))
 (let (($x181 (=> $x182 $x420)))
 (let (($x91 (= $x181 true)))
 (let ((?x327 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x226 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x226 (_ bv4 32))))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x226 (_ bv4 32)) (_ bv2 32))) ?x327)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x226 (_ bv4 32)) (_ bv3 32))) ?x241)))
 (let ((?x129 (bvadd ?x252 (_ bv4 32))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv1 32))) (select input.dst.llvm-mem ?x129))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x129 (_ bv2 32))) ?x313))))
 (let (($x62 (= (_ bv0 32) ?x268)))
 (let ((?x64 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x64 (_ bv1 32))))
 (let (($x263 (bvuge input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x197 (= $x263 $x101)))
 (let (($x190 (bvuge input.spec-%var-l-1.2.1.2.1.0 (_ bv1 32))))
 (let (($x127 (bvuge input.spec-%var-l-1.2.1.0 (_ bv1 32))))
 (let (($x94 (and $x127 $x190)))
 (let (($x16 (=> $x94 $x197)))
 (let (($x405 (= ?x64 (_ bv0 32))))
 (let (($x260 (= input.spec-%var-l-1.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x287 (= $x260 $x405)))
 (let (($x349 (=> $x94 $x287)))
 (let ((?x11 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x11))))
 (let (($x239 (= input.spec-%var-l-1.2.1.2.1.2.0 ?x255)))
 (let (($x352 (=> $x94 $x239)))
 (let (($x138 (= (_ bv0 32) ?x252)))
 (let ((?x283 (ite $x138 (_ bv0 32) (_ bv1 32))))
 (let (($x132 (= ?x283 (_ bv0 32))))
 (let (($x57 (= input.spec-%var-l-1.2.1.2.1.0 (_ bv0 32))))
 (let (($x227 (= $x57 $x132)))
 (let (($x44 (=> $x127 $x227)))
 (let (($x400 (bvuge ?x283 (_ bv1 32))))
 (let (($x385 (= $x190 $x400)))
 (let (($x104 (=> $x127 $x385)))
 (let (($x61 (and $x127 $x57)))
 (let (($x204 (=> $x61 $x308)))
 (let (($x326 (= input.spec-%var-l-1.2.1.0 (_ bv0 32))))
 (let (($x231 (=> $x326 $x308)))
 (let ((?x122 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv1 32))) (select input.dst.llvm-mem ?x226))))
 (let ((?x221 (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x226 (_ bv2 32))) ?x122))))
 (let (($x306 (= input.spec-%var-l-1.2.1.2.0 ?x221)))
 (let (($x320 (=> $x127 $x306)))
 (let (($x250 (= (_ bv0 32) ?x226)))
 (let ((?x334 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (bvuge ?x334 (_ bv1 32))))
 (let (($x27 (= $x127 $x265)))
 (let (($x275 (= ?x334 (_ bv0 32))))
 (let (($x86 (= $x326 $x275)))
 (let (($x240 (and (and (and (and (and (and $x86 $x27) $x320) $x231) $x204) $x104) $x44)))
 (let (($x384 (and (and (and $x240 $x352) $x349) $x16)))
 (let (($x347 (=> $x262 $x384)))
 (let (($x335 (= $x347 true)))
 (let ((?x102 ((_ extract 2 0) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let (($x135 (= (_ bv0 3) ?x102)))
 (let (($x269 (= $x135 true)))
 (let ((?x247 (select input.dst.llvm-mem input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv1 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv2 32)))))
 (let ((?x52 (bvadd input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv3 32))))
 (let ((?x38 (concat (select input.dst.llvm-mem ?x52) (concat ?x271 (concat ?x228 ?x247)))))
 (let (($x107 (= input.spec-%var-l-0.L3%5%bbentry.2.0 ?x38)))
 (let (($x50 (=> $x182 $x107)))
 (let (($x110 (= (_ bv0 32) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x131 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x131 (_ bv1 32))))
 (let (($x285 (= $x182 $x242)))
 (let (($x15 (= input.spec-%var-l-0.L3%5%bbentry.0 (_ bv0 32))))
 (let (($x144 (=> $x15 $x308)))
 (let (($x109 (= ?x131 (_ bv0 32))))
 (let (($x32 (= $x15 $x109)))
 (let (($x343 (and (and (and $x32 $x144) $x285) $x50)))
 (let (($x211 (= $x343 true)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x310 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x267)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x310)))
 (let (($x296 (= input.spec-%var-l-1.2.0 ?x20)))
 (let (($x80 (=> $x262 $x296)))
 (let (($x192 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x305 (ite $x192 (_ bv0 32) (_ bv1 32))))
 (let (($x288 (bvuge ?x305 (_ bv1 32))))
 (let (($x29 (= $x262 $x288)))
 (let (($x187 (= input.spec-%var-l-1.0 (_ bv0 32))))
 (let (($x233 (=> $x187 $x308)))
 (let (($x323 (= ?x305 (_ bv0 32))))
 (let (($x90 (= $x187 $x323)))
 (let (($x105 (and (and (and $x90 $x233) $x29) $x80)))
 (let (($x18 (= $x105 true)))
 (let (($x124 (= (bvand input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967292 32)) input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry)))
 (let ((?x13 (bvsub input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv0 32))))
 (let (($x55 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x13) (bvult input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ?x13))))
 (let (($x315 (and true $x55)))
 (let (($x236 (and $x55 $x315)))
 (let (($x30 (= (bvand ?x25 (_ bv4294967288 32)) ?x25)))
 (let (($x301 (= (bvand ?x193 (_ bv4294967292 32)) ?x193)))
 (let (($x215 (and $x301 $x30)))
 (let (($x121 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x193 (bvsub ?x193 (_ bv4 32))) (bvult ?x193 (bvsub ?x193 (_ bv4 32))))))
 (let (($x171 (and (and (and (and (and $x315 $x121) $x301) $x215) $x236) $x124)))
 (let (($x23 (not $x110)))
 (let (($x24 (=> $x23 $x171)))
 (let (($x244 (= $x24 true)))
 (let (($x202 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x84 (= $x202 true)))
 (let (($x79 (= $x23 true)))
 (let ((?x191 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x261 (= (_ bv0 32) ?x191)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (and $x198 $x28)))
 (let (($x31 (and $x100 $x261)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x232 (and $x148 $x31)))
 (let (($x237 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x272 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x126 $x237)))))))
 (let (($x289 (and $x272 $x232)))
 (let (($x66 (= $x289 true)))
 (let ((?x220 (bvmul input.spec-%var-sum-0.L3%5%bbentry (_ bv4294967295 32))))
 (let ((?x208 (bvneg ?x220)))
 (let (($x78 (= ?x208 input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry)))
 (let (($x175 (= $x78 true)))
 (let (($x120 (and $x175 $x66)))
 (let (($x206 (and $x120 $x79)))
 (let (($x68 (and $x206 $x84)))
 (let (($x225 (and $x68 $x244)))
 (let (($x130 (and $x225 $x18)))
 (let (($x316 (and $x130 $x211)))
 (let (($x123 (and $x316 $x269)))
 (let (($x14 (and $x123 $x335)))
 (let (($x425 (and $x14 $x91)))
 (let (($x499 (and $x182 $x425)))
 (let (($x223 (= (_ bv0 32) input.spec-%tmpvar-5.L3%5%bbentry)))
 (let (($x423 (and $x223 $x499)))
 (let (($x35 (bvugt ?x193 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd ?x193 (_ bv3 32))))
 (let (($x259 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x5)))
 (let (($x160 (=> (bvule ?x193 (bvsub (bvadd ?x193 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x259 $x35)))))))
 (let (($x209 (=> (and $x23 (bvule ?x193 (bvsub (bvadd ?x193 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x259 $x35)))))))
 (let (($x281 (bvugt input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x26 (=> (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x286 (_ bv1 32))) (or false (or false (and true (or $x56 $x281)))))))
 (let (($x264 (=> (and $x23 (bvule input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (bvsub ?x286 (_ bv1 32)))) (or false (or false (and true (or $x56 $x281)))))))
 (let (($x222 (and $x264 $x209)))
 (let (($x402 (and $x222 $x423)))
 (let (($x59 (=> $x402 $x172)))
 (not $x59)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087433/query
