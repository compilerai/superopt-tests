argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --smt-query-timeout=5
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall1.proof
argv[9] = --spec-iospecs=fcall1.iospecs
argv[10] = fcall1.spec
argv[11] = fcall1.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.128737
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall1.c
argv[10] = -o
argv[11] = par_tmpdir/fcall1.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall1.spec.etfg
argv[11] = par_tmpdir/fcall1.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall1.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function bar</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 20 time spent: 0:0:0 [0.000025s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 34 time spent: 0:0:0 [0.000045s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 235 time spent: 0:0:0 [0.001610s total; 0.000007 per start]
expr_simplify_solver: num_starts 79 time spent: 0:0:0 [0.007340s total; 0.000093 per start]
expr_simplify_syntactic: num_starts 79 time spent: 0:0:0 [0.034108s total; 0.000432 per start]
expr_simplify_using_lhs_set_helper: num_starts 55 time spent: 0:0:0 [0.043803s total; 0.000796 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 293 time spent: 0:0:0 [0.043547s total; 0.000149 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 50 time spent: 0:0:0 [0.000234s total; 0.000005 per start]
canonicalize_expr_tree: num_starts 38 time spent: 0:0:0 [0.000703s total; 0.000018 per start]
expr_simplify_memalloc_using_memlabel: num_starts 6 time spent: 0:0:0 [0.000017s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 43 time spent: 0:0:0 [0.000040s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 48 time spent: 0:0:0 [0.000659s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 80 time spent: 0:0:0 [0.000071s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 547 time spent: 0:0:0 [0.044477s total; 0.000081 per start]
expr_do_simplify_helper_cache: num_starts 547 time spent: 0:0:0 [0.000339s total; 0.000001 per start]
array_constant_equals: num_starts 31 time spent: 0:0:0 [0.000064s total; 0.000002 per start]
sort_dfa_canonical: num_starts 141545 time spent: 0:0:1 [1.178110s total; 0.000008 per start]
combo_dfa_xfer_and_meet: num_starts 11 time spent: 0:0:0 [0.022940s total; 0.002085 per start]
alias_val_xfer_and_meet: num_starts 11 time spent: 0:0:0 [0.016445s total; 0.001495 per start]
get_sprel_map_from_avail_exprs: num_starts 22 time spent: 0:0:0 [0.000865s total; 0.000039 per start]
update_memlabels_for_memslot_locs: num_starts 8 time spent: 0:0:0 [0.000029s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 20 time spent: 0:0:0 [0.001508s total; 0.000075 per start]
compute_simplified_loc_exprs_for_edge: num_starts 84 time spent: 0:0:0 [0.034989s total; 0.000417 per start]
compute_locs_definitely_written_on_edge: num_starts 20 time spent: 0:0:0 [0.000019s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 21 time spent: 0:0:0 [0.011503s total; 0.000548 per start]
edge_update_memlabel_map_for_mlvars: num_starts 10 time spent: 0:0:0 [0.000128s total; 0.000013 per start]
add_new_locs_based_on_edge: num_starts 10 time spent: 0:0:0 [0.005305s total; 0.000530 per start]
expand_locset_to_include_slots_for_memmask: num_starts 21 time spent: 0:0:0 [0.000099s total; 0.000005 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.bar.: 0s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 2e-06s (num_starts 1; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.bar.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.bar.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.bar.: 1.1e-05s (num_starts 1; 0.0000s/start)
lr_status_meet.: 1.2e-05s (num_starts 14; 0.0000s/start)
expr_is_hidden_reg.: 1.5e-05s (num_starts 17; 0.0000s/start)
add_assumes_to_start_edge.: 1.7e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 2.1e-05s (num_starts 4; 0.0000s/start)
expr_is_callee_save_const.: 2.6e-05s (num_starts 25; 0.0000s/start)
get_intersected_lr_status.: 3.6e-05s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.7e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.8e-05s (num_starts 1; 0.0000s/start)
tfg_get_write_memlabels.: 3.8e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 4.5e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 4.9e-05s (num_starts 1; 0.0000s/start)
tfg_get_read_memlabels.: 5.2e-05s (num_starts 1; 0.0001s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 5.4e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.7e-05s (num_starts 7; 0.0000s/start)
sp_version_relations_val_t::meet.: 5.7e-05s (num_starts 105; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 6.9e-05s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 7e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 7.1e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 7.7e-05s (num_starts 69; 0.0000s/start)
graph_visit_exprs_const.const.: 7.7e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 8.1e-05s (num_starts 10; 0.0000s/start)
graph_locs_add_all_specvars.: 8.7e-05s (num_starts 2; 0.0000s/start)
main.3.: 8.8e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_exvregs.: 9e-05s (num_starts 2; 0.0000s/start)
get_summary_for_calling_functions.: 9.8e-05s (num_starts 1; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.0001s (num_starts 10; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000105s (num_starts 1; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.000105s (num_starts 1; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000113s (num_starts 20; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000115s (num_starts 10; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000123s (num_starts 10; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000123s (num_starts 10; 0.0000s/start)
compute_sprel_relations.: 0.000129s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000136s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.00014s (num_starts 1; 0.0001s/start)
expr_represents_llvm_undef.: 0.000142s (num_starts 29; 0.0000s/start)
propagate_sprels.: 0.000143s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000161s (num_starts 10; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000171s (num_starts 6; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00018s (num_starts 64; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000196s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000233s (num_starts 2; 0.0001s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.000245s (num_starts 1; 0.0002s/start)
populate_transitive_closure.: 0.00025s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00026s (num_starts 2; 0.0001s/start)
canonicalize_llvm_nextpcs.: 0.000283s (num_starts 2; 0.0001s/start)
create_closure_matrix.: 0.000289s (num_starts 18; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000298s (num_starts 1; 0.0003s/start)
graph_locs_add_all_llvmvars.: 0.000298s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000316s (num_starts 4; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.00034s (num_starts 12; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000371s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000379s (num_starts 2; 0.0002s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.000438s (num_starts 1; 0.0004s/start)
graph_with_aliasing_constructor.src.spec.bar.: 0.000444s (num_starts 1; 0.0004s/start)
graph_with_locs_constructor.src.spec.foo.: 0.00048s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000496s (num_starts 2; 0.0002s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000505s (num_starts 10; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000521s (num_starts 2; 0.0003s/start)
expr_linear_relation_holds::visit.var.: 0.000522s (num_starts 29; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000561s (num_starts 2; 0.0003s/start)
compute_z3_expr.: 0.000572s (num_starts 38; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000578s (num_starts 1; 0.0006s/start)
graph_with_edge_structures_constructor.src.spec.bar.: 0.000603s (num_starts 1; 0.0006s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.00062s (num_starts 1; 0.0006s/start)
tfg::collect_assumes_around_edge.: 0.000645s (num_starts 34; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000655s (num_starts 4; 0.0002s/start)
populate_dominator_and_postdominator_relations.: 0.00066s (num_starts 4; 0.0002s/start)
avail_exprs_create_submap.: 0.000674s (num_starts 30; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000674s (num_starts 10; 0.0001s/start)
graph_with_locs_constructor.src.spec.bar.: 0.00078s (num_starts 1; 0.0008s/start)
populate_branch_affecting_locs.: 0.000922s (num_starts 4; 0.0002s/start)
graph_visit_exprs.: 0.001002s (num_starts 8; 0.0001s/start)
graph_with_simplified_assets_constructor.src.spec.bar.: 0.001004s (num_starts 1; 0.0010s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001015s (num_starts 4; 0.0003s/start)
graph_identify_back_edges.: 0.001056s (num_starts 12; 0.0001s/start)
graph_identify_natural_loops.: 0.001096s (num_starts 12; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001099s (num_starts 14; 0.0001s/start)
tfg::populate_loc_definedness.: 0.001108s (num_starts 4; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001124s (num_starts 14; 0.0001s/start)
tfg_preprocess.dst.llvm.foo.: 0.00117s (num_starts 1; 0.0012s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001191s (num_starts 11; 0.0001s/start)
compute_lr_status_for_expr.: 0.001218s (num_starts 21; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.001379s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.001382s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.001387s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.001392s (num_starts 1; 0.0014s/start)
tfg_constructor.src.spec.foo.: 0.001396s (num_starts 1; 0.0014s/start)
find_dominators.: 0.001523s (num_starts 20; 0.0001s/start)
graph_with_predicates_constructor.src.spec.bar.: 0.001608s (num_starts 1; 0.0016s/start)
query:convert_from_z3.: 0.00173s (num_starts 38; 0.0000s/start)
query:convert_to_z3.: 0.001982s (num_starts 38; 0.0001s/start)
tfg_constructor.src.spec.bar.after_transitive_closure.: 0.002006s (num_starts 1; 0.0020s/start)
tfg_constructor.src.spec.bar.post_parsing.: 0.002011s (num_starts 1; 0.0020s/start)
tfg_constructor.src.spec.bar.after_string_contents.: 0.00202s (num_starts 1; 0.0020s/start)
tfg_constructor.src.spec.bar.after_compute_max_memlabel_varnum.: 0.002025s (num_starts 1; 0.0020s/start)
tfg_constructor.src.spec.bar.: 0.002029s (num_starts 1; 0.0020s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002083s (num_starts 11; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.002177s (num_starts 18; 0.0001s/start)
tfg_preprocess.dst.llvm.bar.: 0.002207s (num_starts 1; 0.0022s/start)
compute_regions.: 0.002403s (num_starts 12; 0.0002s/start)
get_function_tfg_map.foo.: 0.002809s (num_starts 1; 0.0028s/start)
tfg::tfg_preprocess.: 0.003393s (num_starts 2; 0.0017s/start)
graph_to_stream.: 0.003489s (num_starts 2; 0.0017s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.003703s (num_starts 235; 0.0000s/start)
query:simplify-z3.: 0.00482s (num_starts 76; 0.0001s/start)
get_function_tfg_map.bar.: 0.005444s (num_starts 1; 0.0054s/start)
main.2.: 0.006392s (num_starts 1; 0.0064s/start)
populate_simplified_to_state.: 0.007617s (num_starts 6; 0.0013s/start)
get_tfg.: 0.00819s (num_starts 2; 0.0041s/start)
get_function_tfg_map.: 0.008259s (num_starts 2; 0.0041s/start)
populate_simplified_assets.: 0.008873s (num_starts 12; 0.0007s/start)
compute_new_lr_status_on_locs.: 0.010884s (num_starts 10; 0.0011s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.01135s (num_starts 9; 0.0013s/start)
populate_locs_potentially_modified_on_edge.: 0.012652s (num_starts 6; 0.0021s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.015591s (num_starts 20; 0.0008s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.016467s (num_starts 11; 0.0015s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.016587s (num_starts 235; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.016928s (num_starts 235; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.01889s (num_starts 235; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.021546s (num_starts 6; 0.0036s/start)
populate_loc_liveness.: 0.024508s (num_starts 4; 0.0061s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.043882s (num_starts 55; 0.0008s/start)
tfg_postprocess_after_pointsto_analysis.: 0.047035s (num_starts 2; 0.0235s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.048862s (num_starts 2; 0.0244s/start)
ftmap_run_pointsto_analysis.: 0.075842s (num_starts 1; 0.0758s/start)
parse_consts_db.: 7.29153s (num_starts 1; 7.2915s/start)
main.: 7.40028s (num_starts 1; 7.4003s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file fcall1.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: bar...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG bar (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG bar: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG bar: Found 2 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG bar created 2 possibilities in group bar.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%1%fcallStart ending at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:22 : Adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Updating dst fcall edge using src fcall edge for toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Computing loop hoisting select expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Adding node L3%1%fcallStart_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:22 : bar.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Adding edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : bar.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : bar.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : bar.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart</MSG>
<MSG>0:22 : bar.A2: Added the 3 propagated CEs at PC L3%1%fcallStart_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:22 : bar.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : bar.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : bar.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%x
      1.: 0                     ==  input.spec-%var-x-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:22 : Added correlation to the product-TFG bar.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 25) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 3 at column 25))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%x
      1.: 0                     ==  input.spec-%var-x-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:22 : bar.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:22 : bar.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:22 : bar.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:22 : bar.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : bar.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:22 : bar.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : bar.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : bar.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : bar.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21


<MSG>0:22 : bar.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:22 : bar.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21


<MSG>0:22 : bar.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : bar.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG bar.A2: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : product-TFG bar.A2: Found 2 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:22 : product-TFG bar.A2 created 2 possibilities in group bar.A2.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 25) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 3 at column 25))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L3%1%fcallStart --> L3%1%fcallEnd ending at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:22 : Adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Computing loop hoisting select expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Adding node L3%1%fcallEnd_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:22 : bar.A2.B2: Getting alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Found no alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: Adding edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:22 : bar.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : bar.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : bar.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : bar.A2.B2: Propagated 5 out of 5 counter-examples across edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd</MSG>
<MSG>0:23 : bar.A2.B2: Added the 5 propagated CEs at PC L3%1%fcallEnd_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : bar.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : bar.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : bar.A2.B2: Computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Done computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39


<MSG>0:23 : Added correlation to the product-TFG bar.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 25) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 3 at column 25) => A (line 3 at column 25) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 3 at column 25))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 3 at column 25))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 4 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39


<MSG>0:23 : bar.A2.B2: Updating invariants over the newly added edges in edge composition L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : bar.A2.B2: Checking well-formedness assertions on outgoing edges from L3%1%fcallStart_Lentry%1%fcallStart ...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 4 exprs and 4 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39


<MSG>0:23 : bar.A2.B2: Done relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged ...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39


<MSG>0:23 : bar.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : bar.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG bar.A2.B2: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : product-TFG bar.A2.B2: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : product-TFG bar.A2.B2 created 1 possibilities in group bar.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG bar.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 25) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 3 at column 25) => A (line 3 at column 25) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 3 at column 25))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 3 at column 25))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%1%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%1%fcallEnd --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%1%fcallEnd --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%1%fcallEnd --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG bar.A2.B2.C1 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%1%fcallEnd --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Getting alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Found no alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Adding edge L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : bar.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Propagated 0 out of 7 counter-examples across edge L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : bar.A2.B2.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : bar.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Done computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG bar.A2.B2.C1 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%1%fcallEnd --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%1%fcallEnd --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG bar.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG bar.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 25) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 3 at column 25) => A (line 3 at column 25) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L3%1%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 25) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 3 at column 25))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 3 at column 25))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : bar.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : bar.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%1%fcallEnd_Lentry%1%fcallEnd ...</MSG>
<MSG>0:23 : bar.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : bar.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : bar.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-x-1 ; 3-->input.dst.llvm-%x ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.dst.llvm-%x
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce21

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (2 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 2-->input.spec-%var-x-1 ; 4-->input.spec-%tmpvar-3.L3%1%fcallEnd ; 5-->input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-x-1, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-x-1.L3%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:z3v487.ce40      2.:cvc4.ce21      3.:cvc4.ce39

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 25) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 3 at column 25) => A (line 3 at column 25) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L3%1%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 25) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 3 at column 25))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 3 at column 25))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 4 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function bar. 0.78s, query:smt.: 0.164933s (num_starts 13; 0.0127s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.410166s (num_starts 21; 0.0195s/start)ftmap_run_pointsto_analysis.: 0.109013s (num_starts 2; 0.0545s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 3e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 3; 0.0000s/start)
prove_trivial.: 5e-06s (num_starts 5; 0.0000s/start)
prune_dst_memslots.: 6e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 7e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 8e-06s (num_starts 8; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.3e-05s (num_starts 11; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.6e-05s (num_starts 5; 0.0000s/start)
ce_perform_memory_fuzzing.: 1.9e-05s (num_starts 12; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 2.1e-05s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 2.1e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 2.5e-05s (num_starts 6; 0.0000s/start)
get_intersected_lr_status.: 2.9e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 2.9e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 3e-05s (num_starts 9; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3e-05s (num_starts 2; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 3.3e-05s (num_starts 11; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3.4e-05s (num_starts 1; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 3.5e-05s (num_starts 21; 0.0000s/start)
collect_dst_to_src_submap_preds.: 3.6e-05s (num_starts 21; 0.0000s/start)
sp_version_relations_val_t::meet.: 3.6e-05s (num_starts 52; 0.0000s/start)
lr_status_meet.: 4.4e-05s (num_starts 40; 0.0000s/start)
expr_is_hidden_reg.: 4.8e-05s (num_starts 42; 0.0000s/start)
proof_query_is_trivial_helper.: 4.8e-05s (num_starts 21; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 6e-05s (num_starts 3; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 6e-05s (num_starts 2; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 6.3e-05s (num_starts 16; 0.0000s/start)
expr_is_callee_save_const.: 7.3e-05s (num_starts 54; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.4e-05s (num_starts 3; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 9.3e-05s (num_starts 6; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000101s (num_starts 5; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000102s (num_starts 16; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000103s (num_starts 2; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.000104s (num_starts 16; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000105s (num_starts 6; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000106s (num_starts 8; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000116s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000118s (num_starts 9; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart.: 0.000131s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000138s (num_starts 4; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000148s (num_starts 6; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000158s (num_starts 2; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00017s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000188s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000194s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000198s (num_starts 1; 0.0002s/start)
set_result_and_counter_example.: 0.000199s (num_starts 13; 0.0000s/start)
propagate_sprels.: 0.000208s (num_starts 2; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.000223s (num_starts 11; 0.0000s/start)
create_closure_matrix.: 0.000228s (num_starts 17; 0.0000s/start)
populate_locid2expr_map.: 0.00024s (num_starts 2; 0.0001s/start)
proof_query_is_trivial.: 0.00024s (num_starts 21; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000244s (num_starts 2; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000245s (num_starts 2; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000247s (num_starts 42; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000247s (num_starts 48; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.000252s (num_starts 11; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000256s (num_starts 6; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000257s (num_starts 21; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000266s (num_starts 1; 0.0003s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000289s (num_starts 55; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000302s (num_starts 15; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000307s (num_starts 1; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallStart_Lentry%1%fcallStart.inductive-invariants.: 0.00033s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000331s (num_starts 1; 0.0003s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000334s (num_starts 6; 0.0001s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000348s (num_starts 48; 0.0000s/start)
expr_represents_llvm_undef.: 0.000349s (num_starts 58; 0.0000s/start)
ldr_decomposition.: 0.000349s (num_starts 11; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000356s (num_starts 7; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallEnd_Lentry%1%fcallEnd.inductive-invariants.: 0.000362s (num_starts 3; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000365s (num_starts 2; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000383s (num_starts 12; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000396s (num_starts 13; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.00044s (num_starts 55; 0.0000s/start)
collect_assumes_around_edge.: 0.000455s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000502s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000503s (num_starts 1; 0.0005s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000505s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000507s (num_starts 1; 0.0005s/start)
counter_example_falsifies_preds.: 0.000508s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00051s (num_starts 1; 0.0005s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.00051s (num_starts 16; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.000517s (num_starts 11; 0.0000s/start)
construct_linear_combination_exprs.: 0.000518s (num_starts 14; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.00052s (num_starts 12; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000526s (num_starts 1; 0.0005s/start)
tfg::populate_loc_definedness.before_solve.: 0.000528s (num_starts 3; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000529s (num_starts 2; 0.0003s/start)
generate_aliasing_constraints_from_expr.: 0.000546s (num_starts 145; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000569s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000575s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000577s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000587s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000589s (num_starts 1; 0.0006s/start)
get_unrolled_loop_paths_from.: 0.000593s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000594s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000597s (num_starts 1; 0.0006s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000597s (num_starts 4; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000608s (num_starts 1; 0.0006s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000624s (num_starts 5; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000626s (num_starts 2; 0.0003s/start)
populate_branch_affecting_locs.: 0.00067s (num_starts 3; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.000687s (num_starts 16; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.000697s (num_starts 14; 0.0000s/start)
removeMostPromising.: 0.000736s (num_starts 10; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000763s (num_starts 20; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.00078s (num_starts 4; 0.0002s/start)
compute_ssa_vars_renaming_map.: 0.000831s (num_starts 2; 0.0004s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000835s (num_starts 5; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000849s (num_starts 37; 0.0000s/start)
graph_visit_exprs.: 0.000859s (num_starts 3; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000872s (num_starts 5; 0.0002s/start)
populate_transitive_closure.: 0.000898s (num_starts 14; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000906s (num_starts 3; 0.0003s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000917s (num_starts 11; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000918s (num_starts 3; 0.0003s/start)
graph_visit_exprs_and_keys.: 0.000928s (num_starts 2; 0.0005s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00094s (num_starts 3; 0.0003s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000954s (num_starts 37; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000959s (num_starts 79; 0.0000s/start)
identify_address_taken_local_variables.: 0.000969s (num_starts 2; 0.0005s/start)
tfg::populate_loc_definedness.: 0.000977s (num_starts 3; 0.0003s/start)
corr_graph_enumerate_correlations.: 0.001048s (num_starts 5; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001066s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001067s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00107s (num_starts 1; 0.0011s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.001083s (num_starts 16; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.001143s (num_starts 16; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001169s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00117s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001172s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001178s (num_starts 1; 0.0012s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.001281s (num_starts 33; 0.0000s/start)
find_dominators.: 0.001362s (num_starts 24; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.001366s (num_starts 33; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.001396s (num_starts 55; 0.0000s/start)
graph_identify_back_edges.: 0.001498s (num_starts 20; 0.0001s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.001502s (num_starts 1; 0.0015s/start)
ldr_decompose_and_linear_solve.: 0.001528s (num_starts 11; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.001558s (num_starts 14; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.001568s (num_starts 68; 0.0000s/start)
graph_identify_natural_loops.: 0.001573s (num_starts 20; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.001599s (num_starts 57; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.001602s (num_starts 14; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001664s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00167s (num_starts 3; 0.0006s/start)
bv_linear_solve.: 0.001676s (num_starts 11; 0.0002s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001695s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.001697s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.001708s (num_starts 3; 0.0006s/start)
expr_linear_relation_holds::visit.var.: 0.001744s (num_starts 61; 0.0000s/start)
query:bv_solve.: 0.001757s (num_starts 11; 0.0002s/start)
lhs_set_sort.: 0.0018s (num_starts 16; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.001877s (num_starts 3; 0.0006s/start)
cg_src_dst_tfg_copy.: 0.001883s (num_starts 1; 0.0019s/start)
create_sp_version_relations_lattice_at_pc.: 0.001911s (num_starts 17; 0.0001s/start)
counter_example_satisfies_preds.: 0.001993s (num_starts 40; 0.0000s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.001998s (num_starts 1; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.002138s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.002145s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.002148s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002222s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002229s (num_starts 2; 0.0011s/start)
bv_solve_returning_intermediate_structures.: 0.002253s (num_starts 11; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002266s (num_starts 2; 0.0011s/start)
collect_aliasing_constraints_around_path_helper.: 0.002281s (num_starts 78; 0.0000s/start)
counter_example_evaluate_preds.: 0.002356s (num_starts 45; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.002375s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.002378s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.002381s (num_starts 1; 0.0024s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.002383s (num_starts 31; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.002385s (num_starts 1; 0.0024s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002412s (num_starts 3; 0.0008s/start)
get_next_potential_correlations.: 0.002538s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.002542s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.002559s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.002561s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;linear;-trivial.: 0.002565s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.002567s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.002569s (num_starts 1; 0.0026s/start)
bvsolve_cache_query.miss1.: 0.002619s (num_starts 11; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.00267s (num_starts 50; 0.0001s/start)
bvsolve_cache_query.: 0.002698s (num_starts 11; 0.0002s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-trivial.: 0.002702s (num_starts 2; 0.0014s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.002724s (num_starts 31; 0.0001s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.002928s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.002957s (num_starts 2; 0.0015s/start)
collect_inductive_preds_around_path.: 0.002971s (num_starts 21; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.003162s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003166s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003174s (num_starts 1; 0.0032s/start)
do_ssa_transformation.: 0.003244s (num_starts 2; 0.0016s/start)
solve_for_bv_points.: 0.003315s (num_starts 11; 0.0003s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.0034s (num_starts 118; 0.0000s/start)
compute_regions.: 0.003556s (num_starts 20; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.003588s (num_starts 17; 0.0002s/start)
collect_assumes_around_path_helper.: 0.003598s (num_starts 48; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.003613s (num_starts 40; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.003672s (num_starts 12; 0.0003s/start)
graph_with_paths::collect_assumes_around_path.: 0.003742s (num_starts 48; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.003899s (num_starts 11; 0.0004s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.003938s (num_starts 12; 0.0003s/start)
graph_ec_apply_trans_funs_helper.0.: 0.004471s (num_starts 66; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.00461s (num_starts 22; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004713s (num_starts 219; 0.0000s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-trivial.: 0.004772s (num_starts 3; 0.0016s/start)
get_unrolled_paths_from.: 0.004786s (num_starts 19; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.005309s (num_starts 2; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;pred-type-unknown;-trivial.: 0.005314s (num_starts 2; 0.0027s/start)
avail_exprs_create_submap.: 0.005363s (num_starts 36; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.005371s (num_starts 71; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.005586s (num_starts 71; 0.0001s/start)
predicate_canonicalized.: 0.005797s (num_starts 14; 0.0004s/start)
compute_expr_eqclasses_at_pc.: 0.0058s (num_starts 2; 0.0029s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.005832s (num_starts 71; 0.0001s/start)
query:convert_to_z3.: 0.005862s (num_starts 79; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.005967s (num_starts 12; 0.0005s/start)
computeWP_for_pred_across_ec.: 0.00606s (num_starts 71; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.006276s (num_starts 4; 0.0016s/start)
cg_add_node.: 0.006527s (num_starts 4; 0.0016s/start)
put_smtlib_string_in_file.: 0.006727s (num_starts 26; 0.0003s/start)
edge_composition_apply_trans_funs_on_pred.: 0.006763s (num_starts 21; 0.0003s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006825s (num_starts 12; 0.0006s/start)
query:convert_from_z3.: 0.007256s (num_starts 79; 0.0001s/start)
populate_simplified_to_state.: 0.007406s (num_starts 3; 0.0025s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.00748s (num_starts 6; 0.0012s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.007519s (num_starts 31; 0.0002s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007548s (num_starts 1; 0.0075s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007552s (num_starts 1; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007556s (num_starts 1; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007558s (num_starts 1; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.007561s (num_starts 1; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear.: 0.007566s (num_starts 1; 0.0076s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.007744s (num_starts 1; 0.0077s/start)
populate_simplified_assets.: 0.007901s (num_starts 6; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007919s (num_starts 1; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007923s (num_starts 1; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007926s (num_starts 1; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.007929s (num_starts 1; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown.: 0.007933s (num_starts 1; 0.0079s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007966s (num_starts 1; 0.0080s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007967s (num_starts 1; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007969s (num_starts 1; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.007972s (num_starts 1; 0.0080s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.008262s (num_starts 12; 0.0007s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.008334s (num_starts 8; 0.0010s/start)
compute_z3_expr.: 0.00906s (num_starts 92; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.009795s (num_starts 3; 0.0033s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009979s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.00998s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009986s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009989s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010036s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010039s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.010045s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.010104s (num_starts 2; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.010159s (num_starts 2; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.010363s (num_starts 2; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.010371s (num_starts 2; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010374s (num_starts 1; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010377s (num_starts 1; 0.0104s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.010379s (num_starts 2; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.010382s (num_starts 1; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.010388s (num_starts 2; 0.0052s/start)
create_new_corr_graph_edge.new_node.: 0.010952s (num_starts 3; 0.0037s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.010957s (num_starts 11; 0.0010s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.011054s (num_starts 11; 0.0010s/start)
gen_pred_from_coeff_row.simplify.: 0.011116s (num_starts 14; 0.0008s/start)
graph_to_stream.: 0.011261s (num_starts 4; 0.0028s/start)
check_wfconds_on_edge.L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.011374s (num_starts 2; 0.0057s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.011463s (num_starts 2; 0.0057s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.011602s (num_starts 3; 0.0039s/start)
create_new_corr_graph_edge.: 0.011707s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd).: 0.012439s (num_starts 4; 0.0031s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.012571s (num_starts 12; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;linear.: 0.012624s (num_starts 2; 0.0063s/start)
guarded_predicate_set_and.: 0.013104s (num_starts 16; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.01317s (num_starts 2; 0.0066s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.013193s (num_starts 2; 0.0066s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 0.013202s (num_starts 2; 0.0066s/start)
parse_z3_model.: 0.014444s (num_starts 5; 0.0029s/start)
decide_hoare_triple_helper;-trivial.: 0.014547s (num_starts 9; 0.0016s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.014825s (num_starts 274; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.015143s (num_starts 219; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C1;pred-type-unknown.: 0.015331s (num_starts 3; 0.0051s/start)
parse_cvc4_model.: 0.015566s (num_starts 5; 0.0031s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.015575s (num_starts 9; 0.0017s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017906s (num_starts 2; 0.0090s/start)
parse_yices_model.: 0.017978s (num_starts 5; 0.0036s/start)
query:simplify-z3.: 0.018315s (num_starts 158; 0.0001s/start)
gen_pred_from_coeff_row.: 0.018874s (num_starts 14; 0.0013s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.018879s (num_starts 219; 0.0001s/start)
compute_preds_for_bv_points.: 0.019209s (num_starts 7; 0.0027s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.019258s (num_starts 9; 0.0021s/start)
populate_loc_liveness.: 0.023011s (num_starts 3; 0.0077s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.023281s (num_starts 4; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023533s (num_starts 1; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.023536s (num_starts 1; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.023542s (num_starts 1; 0.0235s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess.: 0.023545s (num_starts 1; 0.0235s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.023818s (num_starts 1; 0.0238s/start)
tfg_relax_pointsto_vals_on_edge.: 0.024038s (num_starts 6; 0.0040s/start)
check_wfconds_on_edge.L3%1%fcallEnd_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 0.026068s (num_starts 2; 0.0130s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.026473s (num_starts 14; 0.0019s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.026725s (num_starts 16; 0.0017s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.027715s (num_starts 16; 0.0017s/start)
apply_mask_and_overlay_array_constant.: 0.027806s (num_starts 14; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033897s (num_starts 2; 0.0169s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033901s (num_starts 2; 0.0170s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.033951s (num_starts 2; 0.0170s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.035225s (num_starts 1; 0.0352s/start)
tfg_postprocess_after_pointsto_analysis.: 0.035934s (num_starts 2; 0.0180s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.036204s (num_starts 4; 0.0091s/start)
check_wfconds_on_edge.: 0.037654s (num_starts 6; 0.0063s/start)
check_equivalence_proof.: 0.040333s (num_starts 1; 0.0403s/start)
evaluate_function_call.: 0.043544s (num_starts 5; 0.0087s/start)
compute_lr_status_for_expr.: 0.0456s (num_starts 44; 0.0010s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.045788s (num_starts 40; 0.0011s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.045902s (num_starts 40; 0.0011s/start)
read_counter_examples_from_channel.: 0.048806s (num_starts 5; 0.0098s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055008s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055015s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055018s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.055025s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false.: 0.055029s (num_starts 1; 0.0550s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.055037s (num_starts 1; 0.0550s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.055795s (num_starts 6; 0.0093s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.055969s (num_starts 11; 0.0051s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.059147s (num_starts 10; 0.0059s/start)
compute_new_lr_status_on_locs.: 0.062279s (num_starts 12; 0.0052s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.062922s (num_starts 2; 0.0315s/start)
check_preds_on_edge_compositions.: 0.063658s (num_starts 9; 0.0071s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon).: 0.065747s (num_starts 4; 0.0164s/start)
counter_example_translate_on_edge_composition_helper.: 0.067397s (num_starts 40; 0.0017s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.067447s (num_starts 6; 0.0112s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070942s (num_starts 1; 0.0709s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070948s (num_starts 1; 0.0709s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070951s (num_starts 1; 0.0710s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.070958s (num_starts 1; 0.0710s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false.: 0.070963s (num_starts 1; 0.0710s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.070971s (num_starts 1; 0.0710s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078903s (num_starts 2; 0.0395s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon).: 0.081986s (num_starts 4; 0.0205s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094186s (num_starts 2; 0.0471s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09419s (num_starts 2; 0.0471s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.094207s (num_starts 2; 0.0471s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear.: 0.094214s (num_starts 2; 0.0471s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096773s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096774s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096775s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.096775s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.096782s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false.: 0.096787s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.096797s (num_starts 1; 0.0968s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.097334s (num_starts 2; 0.0487s/start)
corr_graph::add_edge().: 0.100808s (num_starts 3; 0.0336s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.101953s (num_starts 1; 0.1020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.104206s (num_starts 3; 0.0347s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.104287s (num_starts 3; 0.0348s/start)
ftmap_run_pointsto_analysis.: 0.109013s (num_starts 2; 0.0545s/start)
tfg_run_pointsto_analysis.: 0.109317s (num_starts 2; 0.0547s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.111767s (num_starts 4; 0.0279s/start)
tfg_populate_structs_after_ssa_construction.: 0.113166s (num_starts 2; 0.0566s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.113501s (num_starts 3; 0.0378s/start)
corr_graph_add_correlation.: 0.113633s (num_starts 3; 0.0379s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.113933s (num_starts 112; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.114426s (num_starts 5; 0.0229s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.116593s (num_starts 3; 0.0389s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.11768s (num_starts 2; 0.0588s/start)
ce_reconcile_sorts_and_values.: 0.118866s (num_starts 15; 0.0079s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.138086s (num_starts 5; 0.0276s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart).: 0.138258s (num_starts 5; 0.0277s/start)
query:smt.: 0.164933s (num_starts 13; 0.0127s/start)
update_invariant_state_for_edges.: 0.179084s (num_starts 3; 0.0597s/start)
cg_check_new_cg_ec.: 0.181904s (num_starts 3; 0.0606s/start)
correl_entry_apply.: 0.181973s (num_starts 3; 0.0607s/start)
spawn_smt_query.: 0.213905s (num_starts 13; 0.0165s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.222732s (num_starts 3; 0.0742s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.222793s (num_starts 3; 0.0743s/start)
decide_hoare_triple.: 0.226906s (num_starts 6; 0.0378s/start)
dst_edge_composition_proves_false.: 0.237849s (num_starts 3; 0.0793s/start)
get_next_dst_edge_composition_to_correlate.: 0.241063s (num_starts 4; 0.0603s/start)
solver_provable.: 0.330306s (num_starts 16; 0.0206s/start)
expr_is_provable.: 0.332819s (num_starts 16; 0.0208s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.333095s (num_starts 16; 0.0208s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.334202s (num_starts 16; 0.0209s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.334757s (num_starts 16; 0.0209s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.349033s (num_starts 16; 0.0218s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.350431s (num_starts 16; 0.0219s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.350757s (num_starts 16; 0.0219s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.357671s (num_starts 16; 0.0224s/start)
prove.: 0.357775s (num_starts 16; 0.0224s/start)
prove_spawn_and_join_helper.: 0.357856s (num_starts 16; 0.0224s/start)
solver_satisfiable-cache-miss.: 0.360957s (num_starts 13; 0.0278s/start)
solver_satisfiable.: 0.361065s (num_starts 17; 0.0212s/start)
prove_spawn_and_join.: 0.389932s (num_starts 16; 0.0244s/start)
prove_wrapper.proof_query_not_trivial.: 0.391728s (num_starts 16; 0.0245s/start)
prove_wrapper.: 0.392871s (num_starts 21; 0.0187s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.394795s (num_starts 12; 0.0329s/start)
decide_hoare_triple_check_ub.: 0.401083s (num_starts 21; 0.0191s/start)
decide_hoare_triple_helper.: 0.410166s (num_starts 21; 0.0195s/start)
decide_hoare_triple_with_alias_cons.: 0.418664s (num_starts 21; 0.0199s/start)
expandProductCFG.: 0.426101s (num_starts 4; 0.1065s/start)
bestFirstSearch.: 0.582451s (num_starts 1; 0.5825s/start)
Time taken for equivalence check.: 0.624773s (num_starts 1; 0.6248s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 7
# of paths enumerated.: 6
# of paths expanded.: 3
# of queries to linear solver.: 11
# of smt-solver-queries.: 13
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 2
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 2
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 1
smt-queries-cache-hits.: 4
smt-queries-cvc4-sat.: 5
smt-queries-yices-sat.: 5
smt-queries-z3-sat.: 5
total-correlation-possibilities.: 6
total-correlation-possibilities-mod-lsprels.: 6
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 3
dst-nodes.: 4
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%1%fcallStart_Lentry%1%fcallStart.: 1
final-CG-counterexamples-total-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 7
final-CG-counterexamples-total-at-L3%1%fcallStart_Lentry%1%fcallStart.: 5
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 3
src-nodes.: 4
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.30
final-CG-time-to-total-time-ratio.: 0.51
query-time-to-total-time-ratio.: 0.27

Context stats:
exprs: count: 140904
sorts: count: 145
num_proof_queries: 16
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	1208
	        hit ratio:	0.933775
m_simplify_solver:
	----------- total:	246
	        hit ratio:	0.678862
m_z3_solver_substitution:
	----------- total:	79
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	79
	        hit ratio:	0
m_expr_size:
	----------- total:	633
	        hit ratio:	0.835703
m_expr_evaluates_to_constant_visitor:
	----------- total:	1074
	        hit ratio:	0.586592
m_sort_dfa_canonicalize:
	----------- total:	5667
	        hit ratio:	0.998588
m_expr_convert_to_iexpr:
	----------- total:	13
	        hit ratio:	0

z3_solver expr_query_cache entry size: 13
	----------- total:	17
	             hits:	4
	        hit ratio:	0.235294
histogram (time taken by solver in ms):
[ 2.9340,  3.7466) (avg.  3.2620)        : 4
[ 3.7466,  4.7842) (avg.  4.1845)        : 2
[ 4.7842,  6.1093) (avg.  4.9720)        : 2
[ 6.1093,  7.8013) (avg.  0.0000)        : 0
[ 7.8013,  9.9619) (avg.  0.0000)        : 0
[ 9.9619, 12.7209) (avg.  0.0000)        : 0
[12.7209, 16.2441) (avg. 15.9270)        : 1
[16.2441, 20.7430) (avg.  0.0000)        : 0
[20.7430, 26.4880) (avg. 24.8760)        : 1
[26.4880, 33.8240) (avg. 30.8890)        : 3
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 44) (avg. 40)                       : 1
[44, 47) (avg.  0)                       : 0
[47, 51) (avg. 49)                       : 4
[51, 54) (avg. 53)                       : 1
[54, 58) (avg. 56)                       : 1
[58, 61) (avg. 60)                       : 3
[61, 65) (avg. 62)                       : 2
[65, 68) (avg. 65)                       : 1
[68, 72) (avg.  0)                       : 0
[72, 75) (avg.  0)                       : 0
Top 10 highest time taking queries:
1. [0.033s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%1%fcallEnd_Lentry%1%fcallEnd.dstToPC.E0%0%d.from_pcL3%1%fcallEnd_Lentry%1%f.0
2. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lentry%1%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
3. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.025s] SOLVER_RES_TRUE memlabel_assertions_sat.0
5. [0.016s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%1%fcallStart_Lentry%1%fcallStart.dstToPC.Lentry%1%fcallEnd.from_pcL3%1%fcal.0
6. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.abstract-memlabel-asserts-houdini-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.005s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
8. [0.004s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.abstract-memlabel-asserts-houdini-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
9. [0.004s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL3%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.0
10. [0.003s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-arg0.from_pcL3%1%fcallStart_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:23 : Successfully computed equivalence for function: bar.</MSG>
<MSG>0:23 : Computing equivalence for function: foo...</MSG>
<MSG>0:23 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:23 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG foo: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG foo: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG foo created 1 possibilities in group foo.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 0.17s, query:smt.: 0.048776s (num_starts 3; 0.0163s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.082275s (num_starts 4; 0.0206s/start)ftmap_run_pointsto_analysis.: 0.015005s (num_starts 2; 0.0075s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::meet.: 2e-06s (num_starts 9; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 3; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 4e-06s (num_starts 3; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5e-06s (num_starts 4; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7e-06s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 8e-06s (num_starts 1; 0.0000s/start)
proof_query_is_trivial_helper.: 8e-06s (num_starts 4; 0.0000s/start)
determinize_value_expr_map.: 9e-06s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9e-06s (num_starts 3; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1e-05s (num_starts 3; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 1.4e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 1.4e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 1.5e-05s (num_starts 13; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.5e-05s (num_starts 1; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 1.7e-05s (num_starts 7; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 1.9e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 2e-05s (num_starts 13; 0.0000s/start)
lr_status_meet.: 2e-05s (num_starts 21; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.2e-05s (num_starts 1; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.3e-05s (num_starts 2; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.4e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.6e-05s (num_starts 1; 0.0000s/start)
graph_with_guessing_sync_preds.: 2.6e-05s (num_starts 4; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 2.7e-05s (num_starts 3; 0.0000s/start)
def_analysis::xfer_and_meet.: 2.8e-05s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 2.8e-05s (num_starts 25; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 3.1e-05s (num_starts 3; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 3.3e-05s (num_starts 13; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.5e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_exvregs.: 3.9e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 4.3e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 4.4e-05s (num_starts 6; 0.0000s/start)
proof_query_is_trivial.: 4.4e-05s (num_starts 4; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 4.7e-05s (num_starts 7; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 6e-05s (num_starts 2; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 6.1e-05s (num_starts 1; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 6.2e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_local_vars.: 6.3e-05s (num_starts 2; 0.0000s/start)
pth_collect_preds_using_atom_func.: 7.1e-05s (num_starts 5; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 7.3e-05s (num_starts 18; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 7.3e-05s (num_starts 4; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 7.6e-05s (num_starts 2; 0.0000s/start)
set_result_and_counter_example.: 7.6e-05s (num_starts 3; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 7.8e-05s (num_starts 3; 0.0000s/start)
tfg::collect_assumes_around_edge.: 8e-05s (num_starts 5; 0.0000s/start)
tfg_edge_composition_get_assumes.: 8.3e-05s (num_starts 5; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.7e-05s (num_starts 4; 0.0000s/start)
get_sprel_map_pair_at_pc.: 9.1e-05s (num_starts 3; 0.0000s/start)
compute_sprel_relations.: 9.7e-05s (num_starts 2; 0.0000s/start)
removeMostPromising.: 9.9e-05s (num_starts 4; 0.0000s/start)
collect_assumes_around_edge.: 0.000105s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000105s (num_starts 2; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000107s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000109s (num_starts 11; 0.0000s/start)
collect_inductive_preds_around_path.: 0.00011s (num_starts 4; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000115s (num_starts 1; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000116s (num_starts 1; 0.0001s/start)
populate_locid2expr_map.: 0.000118s (num_starts 2; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000118s (num_starts 2; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.000125s (num_starts 51; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000126s (num_starts 7; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000133s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.000135s (num_starts 3; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000141s (num_starts 2; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000143s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000144s (num_starts 1; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000146s (num_starts 2; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000156s (num_starts 6; 0.0000s/start)
identify_address_taken_local_variables.: 0.000162s (num_starts 1; 0.0002s/start)
populate_simplified_to_state.: 0.000162s (num_starts 3; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000167s (num_starts 4; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.000176s (num_starts 1; 0.0002s/start)
populate_branch_affecting_locs.: 0.000177s (num_starts 3; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000185s (num_starts 3; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000198s (num_starts 16; 0.0000s/start)
expr_represents_llvm_undef.: 0.000205s (num_starts 29; 0.0000s/start)
compute_vars_reaching_definitions.: 0.000206s (num_starts 2; 0.0001s/start)
counter_example_falsifies_preds.: 0.000219s (num_starts 3; 0.0001s/start)
populate_transitive_closure.: 0.000219s (num_starts 11; 0.0000s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000232s (num_starts 3; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.00025s (num_starts 3; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.00025s (num_starts 21; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.00025s (num_starts 6; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000265s (num_starts 3; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000267s (num_starts 4; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.000274s (num_starts 2; 0.0001s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000275s (num_starts 1; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000285s (num_starts 11; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000291s (num_starts 1; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.000318s (num_starts 9; 0.0000s/start)
populate_simplified_assets.: 0.000319s (num_starts 6; 0.0001s/start)
graph_visit_exprs.: 0.000328s (num_starts 3; 0.0001s/start)
find_dominators.: 0.000333s (num_starts 19; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000334s (num_starts 3; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000335s (num_starts 5; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000336s (num_starts 4; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000346s (num_starts 4; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00035s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000351s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000352s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000354s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000354s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000356s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities..: 0.00036s (num_starts 1; 0.0004s/start)
tfg::populate_loc_definedness.: 0.000362s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000363s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000365s (num_starts 1; 0.0004s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000378s (num_starts 8; 0.0000s/start)
graph_identify_back_edges.: 0.000386s (num_starts 15; 0.0000s/start)
lhs_set_sort.: 0.000394s (num_starts 3; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.0004s (num_starts 6; 0.0001s/start)
graph_identify_natural_loops.: 0.000411s (num_starts 15; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000413s (num_starts 6; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.000415s (num_starts 2; 0.0002s/start)
get_next_potential_correlations.: 0.00043s (num_starts 1; 0.0004s/start)
counter_example_satisfies_preds.: 0.000434s (num_starts 18; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.000462s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.00047s (num_starts 5; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.000501s (num_starts 1; 0.0005s/start)
collect_aliasing_constraints_around_path_helper.: 0.000505s (num_starts 22; 0.0000s/start)
cg_add_node.: 0.000548s (num_starts 2; 0.0003s/start)
collect_aliasing_constraints_around_path.: 0.000553s (num_starts 14; 0.0000s/start)
create_new_corr_graph_edge.: 0.000566s (num_starts 1; 0.0006s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.000573s (num_starts 3; 0.0002s/start)
collect_assumes_around_path_helper.: 0.00058s (num_starts 13; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000606s (num_starts 29; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.000606s (num_starts 13; 0.0000s/start)
counter_example_evaluate_preds.: 0.000608s (num_starts 21; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.000638s (num_starts 12; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000653s (num_starts 4; 0.0002s/start)
create_sp_version_relations_lattice_at_pc.: 0.00067s (num_starts 6; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.00067s (num_starts 12; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000696s (num_starts 12; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000731s (num_starts 12; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000761s (num_starts 4; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.000774s (num_starts 12; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000793s (num_starts 3; 0.0003s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000821s (num_starts 29; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000863s (num_starts 117; 0.0000s/start)
get_unrolled_paths_from.: 0.000898s (num_starts 6; 0.0001s/start)
avail_exprs_create_submap.: 0.000909s (num_starts 12; 0.0001s/start)
compute_regions.: 0.000935s (num_starts 15; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.001089s (num_starts 6; 0.0002s/start)
edge_composition_apply_trans_funs_on_pred.: 0.0011s (num_starts 4; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001122s (num_starts 6; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001134s (num_starts 4; 0.0003s/start)
put_smtlib_string_in_file.: 0.00114s (num_starts 6; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001209s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.001293s (num_starts 2; 0.0006s/start)
compute_lr_status_for_expr.: 0.001642s (num_starts 25; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001681s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001722s (num_starts 21; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.00178s (num_starts 1; 0.0018s/start)
query:convert_to_z3.: 0.001955s (num_starts 31; 0.0001s/start)
compute_z3_expr.: 0.002078s (num_starts 34; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002358s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.002362s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002364s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.002367s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-trivial.: 0.002369s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002372s (num_starts 1; 0.0024s/start)
compute_new_lr_status_on_locs.: 0.002535s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;-trivial.: 0.002773s (num_starts 2; 0.0014s/start)
query:convert_from_z3.: 0.003017s (num_starts 31; 0.0001s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.003152s (num_starts 6; 0.0005s/start)
check_equivalence_proof.: 0.003812s (num_starts 1; 0.0038s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.003821s (num_starts 124; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.003856s (num_starts 2; 0.0019s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.003924s (num_starts 3; 0.0013s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.004009s (num_starts 117; 0.0000s/start)
apply_mask_and_overlay_array_constant.: 0.004102s (num_starts 3; 0.0014s/start)
graph_to_stream.: 0.004403s (num_starts 4; 0.0011s/start)
counter_example_translate_on_edge_composition_helper.: 0.004429s (num_starts 21; 0.0002s/start)
parse_yices_model.: 0.004661s (num_starts 2; 0.0023s/start)
parse_z3_model.: 0.004923s (num_starts 2; 0.0025s/start)
tfg_relax_pointsto_vals_on_edge.: 0.004937s (num_starts 2; 0.0025s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.005188s (num_starts 117; 0.0000s/start)
populate_loc_liveness.: 0.005352s (num_starts 3; 0.0018s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.005407s (num_starts 2; 0.0027s/start)
parse_cvc4_model.: 0.005559s (num_starts 2; 0.0028s/start)
corr_graph::add_edge().: 0.006061s (num_starts 1; 0.0061s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.006822s (num_starts 1; 0.0068s/start)
corr_graph_add_correlation.: 0.006856s (num_starts 1; 0.0069s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.006895s (num_starts 1; 0.0069s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.007153s (num_starts 1; 0.0072s/start)
tfg_postprocess_after_pointsto_analysis.: 0.007222s (num_starts 2; 0.0036s/start)
guarded_predicate_set_and.: 0.007283s (num_starts 3; 0.0024s/start)
query:simplify-z3.: 0.007624s (num_starts 62; 0.0001s/start)
ftmap_run_pointsto_analysis.: 0.015005s (num_starts 2; 0.0075s/start)
tfg_run_pointsto_analysis.: 0.015158s (num_starts 2; 0.0076s/start)
read_counter_examples_from_channel.: 0.015442s (num_starts 2; 0.0077s/start)
tfg_populate_structs_after_ssa_construction.: 0.016355s (num_starts 2; 0.0082s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.016539s (num_starts 3; 0.0055s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.016642s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017263s (num_starts 1; 0.0173s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017266s (num_starts 1; 0.0173s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017271s (num_starts 1; 0.0173s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017273s (num_starts 1; 0.0173s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017275s (num_starts 1; 0.0173s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.018393s (num_starts 2; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.019656s (num_starts 2; 0.0098s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.019661s (num_starts 2; 0.0098s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.019666s (num_starts 2; 0.0098s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.01967s (num_starts 2; 0.0098s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.019676s (num_starts 2; 0.0098s/start)
update_invariant_state_for_edges.: 0.019796s (num_starts 1; 0.0198s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.019825s (num_starts 2; 0.0099s/start)
cg_check_new_cg_ec.: 0.019853s (num_starts 1; 0.0199s/start)
correl_entry_apply.: 0.019887s (num_starts 1; 0.0199s/start)
ce_reconcile_sorts_and_values.: 0.020144s (num_starts 6; 0.0034s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.020527s (num_starts 2; 0.0103s/start)
check_wfconds_on_edge.: 0.020542s (num_starts 2; 0.0103s/start)
check_preds_on_edge_compositions.: 0.020654s (num_starts 3; 0.0069s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.028891s (num_starts 34; 0.0008s/start)
query:smt.: 0.048776s (num_starts 3; 0.0163s/start)
solver_provable.: 0.050713s (num_starts 3; 0.0169s/start)
expr_is_provable.: 0.051185s (num_starts 3; 0.0171s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.051242s (num_starts 3; 0.0171s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.051403s (num_starts 3; 0.0171s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.051485s (num_starts 3; 0.0172s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.059001s (num_starts 3; 0.0197s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.059245s (num_starts 3; 0.0197s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.059307s (num_starts 3; 0.0198s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.061628s (num_starts 3; 0.0205s/start)
prove.: 0.061646s (num_starts 3; 0.0205s/start)
prove_spawn_and_join_helper.: 0.061663s (num_starts 3; 0.0206s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.062028s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.062029s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06203s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.062031s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.062032s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.062039s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.062043s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.062046s (num_starts 1; 0.0620s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.06205s (num_starts 1; 0.0621s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.062425s (num_starts 2; 0.0312s/start)
decide_hoare_triple.: 0.063045s (num_starts 2; 0.0315s/start)
spawn_smt_query.: 0.064266s (num_starts 3; 0.0214s/start)
dst_edge_composition_proves_false.: 0.066024s (num_starts 1; 0.0660s/start)
get_next_dst_edge_composition_to_correlate.: 0.066633s (num_starts 2; 0.0333s/start)
prove_spawn_and_join.: 0.079054s (num_starts 3; 0.0264s/start)
prove_wrapper.proof_query_not_trivial.: 0.079333s (num_starts 3; 0.0264s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079381s (num_starts 2; 0.0397s/start)
prove_wrapper.: 0.079896s (num_starts 4; 0.0200s/start)
decide_hoare_triple_check_ub.: 0.081237s (num_starts 4; 0.0203s/start)
decide_hoare_triple_helper.: 0.082275s (num_starts 4; 0.0206s/start)
decide_hoare_triple_with_alias_cons.: 0.08258s (num_starts 4; 0.0206s/start)
expandProductCFG.: 0.08706s (num_starts 2; 0.0435s/start)
solver_satisfiable-cache-miss.: 0.089201s (num_starts 3; 0.0297s/start)
solver_satisfiable.: 0.089227s (num_starts 4; 0.0223s/start)
bestFirstSearch.: 0.135593s (num_starts 1; 0.1356s/start)
Time taken for equivalence check.: 0.139717s (num_starts 1; 0.1397s/start)

counters:
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.20
query-time-to-total-time-ratio.: 0.36

Context stats:
exprs: count: 140747
sorts: count: 145
num_proof_queries: 19
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	401
	        hit ratio:	0.930175
m_simplify_solver:
	----------- total:	100
	        hit ratio:	0.69
m_z3_solver_substitution:
	----------- total:	31
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	31
	        hit ratio:	0
m_expr_size:
	----------- total:	257
	        hit ratio:	0.81323
m_expr_evaluates_to_constant_visitor:
	----------- total:	365
	        hit ratio:	0.561644
m_sort_dfa_canonicalize:
	----------- total:	1991
	        hit ratio:	0.996484
m_expr_convert_to_iexpr:
	----------- total:	3
	        hit ratio:	0

z3_solver expr_query_cache entry size: 3
	----------- total:	21
	             hits:	1
	        hit ratio:	0.047619
histogram (time taken by solver in ms):
[ 3.6980,  4.6136) (avg.  3.6980)        : 1
[ 4.6136,  5.7559) (avg.  0.0000)        : 0
[ 5.7559,  7.1811) (avg.  0.0000)        : 0
[ 7.1811,  8.9591) (avg.  0.0000)        : 0
[ 8.9591, 11.1774) (avg.  0.0000)        : 0
[11.1774, 13.9448) (avg. 12.2650)        : 1
[13.9448, 17.3975) (avg.  0.0000)        : 0
[17.3975, 21.7051) (avg.  0.0000)        : 0
[21.7051, 27.0793) (avg.  0.0000)        : 0
[27.0793, 33.7840) (avg. 32.7840)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 44) (avg. 40)                       : 1
[44, 48) (avg.  0)                       : 0
[48, 52) (avg.  0)                       : 0
[52, 56) (avg.  0)                       : 0
[56, 59) (avg.  0)                       : 0
[59, 63) (avg.  0)                       : 0
[63, 67) (avg. 65)                       : 1
[67, 71) (avg. 68)                       : 1
[71, 75) (avg.  0)                       : 0
[75, 78) (avg.  0)                       : 0

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 32 time spent: 0:0:0 [0.001015s total; 0.000032 per start]
tfg_computeWP: num_starts 35 time spent: 0:0:0 [0.003955s total; 0.000113 per start]
tfg_get_simplified_to_state_for_edge: num_starts 166 time spent: 0:0:0 [0.000280s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 226 time spent: 0:0:0 [0.000345s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 220 time spent: 0:0:0 [0.000364s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.034318s total; 0.001806 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 8 time spent: 0:0:0 [0.104158s total; 0.013020 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 34 time spent: 0:0:0 [0.069875s total; 0.002055 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 14 time spent: 0:0:0 [0.004276s total; 0.000305 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 34 time spent: 0:0:0 [0.067354s total; 0.001981 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 170 time spent: 0:0:0 [0.067126s total; 0.000395 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 34 time spent: 0:0:0 [0.001062s total; 0.000031 per start]
tfg_graph_get_vars_written_on_edge: num_starts 34 time spent: 0:0:0 [0.000970s total; 0.000029 per start]
cg_with_rank_add_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.034196s total; 0.001315 per start]
graph_with_ce_add_CE_at_pc: num_starts 18 time spent: 0:0:0 [0.000330s total; 0.000018 per start]
graph_with_guessing_add_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.034111s total; 0.001312 per start]
point_set_add_point_using_CE: num_starts 22 time spent: 0:0:0 [0.007644s total; 0.000347 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 22 time spent: 0:0:0 [0.007739s total; 0.000352 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 14 time spent: 0:0:0 [0.032699s total; 0.002336 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 14 time spent: 0:0:0 [0.024788s total; 0.001771 per start]
expr_label_memlabels_using_memlabel_map: num_starts 650 time spent: 0:0:0 [0.010321s total; 0.000016 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 39 time spent: 0:0:0 [0.005009s total; 0.000128 per start]
expr_simplify_solver: num_starts 381 time spent: 0:0:0 [0.044252s total; 0.000116 per start]
expr_simplify_syntactic: num_starts 381 time spent: 0:0:0 [0.112638s total; 0.000296 per start]
expr_simplify_select_on_store: num_starts 11 time spent: 0:0:0 [0.042185s total; 0.003835 per start]
expr_simplify_using_lhs_set_helper: num_starts 178 time spent: 0:0:0 [0.170116s total; 0.000956 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 889 time spent: 0:0:0 [0.168896s total; 0.000190 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 510 time spent: 0:0:0 [0.002779s total; 0.000005 per start]
expr_simplify_eq: num_starts 78 time spent: 0:0:0 [0.001737s total; 0.000022 per start]
expr_simplify_and: num_starts 59 time spent: 0:0:0 [0.000442s total; 0.000007 per start]
expr_simplify_implies: num_starts 3 time spent: 0:0:0 [0.000040s total; 0.000013 per start]
canonicalize_expr_tree: num_starts 129 time spent: 0:0:0 [0.004415s total; 0.000034 per start]
expr_simplify_memalloc_using_memlabel: num_starts 6 time spent: 0:0:0 [0.000026s total; 0.000004 per start]
expr_simplify_select_on_store_visit_function: num_starts 12 time spent: 0:0:0 [0.041874s total; 0.003489 per start]
get_arithmetic_addsub_atoms: num_starts 700 time spent: 0:0:0 [0.000679s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 178 time spent: 0:0:0 [0.003054s total; 0.000017 per start]
expr_is_consts_struct_constant: num_starts 151 time spent: 0:0:0 [0.000213s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1739 time spent: 0:0:0 [0.170693s total; 0.000098 per start]
expr_do_simplify_helper_cache: num_starts 1739 time spent: 0:0:0 [0.001630s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 127 time spent: 0:0:0 [0.072086s total; 0.000568 per start]
array_constant_equals: num_starts 369 time spent: 0:0:0 [0.000781s total; 0.000002 per start]
sort_dfa_canonical: num_starts 148843 time spent: 0:0:1 [1.278769s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 16 time spent: 0:0:0 [0.009914s total; 0.000620 per start]
combo_dfa_xfer_and_meet: num_starts 8 time spent: 0:0:0 [0.072837s total; 0.009105 per start]
alias_val_xfer_and_meet: num_starts 8 time spent: 0:0:0 [0.059622s total; 0.007453 per start]
get_sprel_map_from_avail_exprs: num_starts 19 time spent: 0:0:0 [0.000982s total; 0.000052 per start]
update_memlabels_for_memslot_locs: num_starts 7 time spent: 0:0:0 [0.000036s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 32 time spent: 0:0:0 [0.006642s total; 0.000208 per start]
compute_simplified_loc_exprs_for_edge: num_starts 96 time spent: 0:0:0 [0.057332s total; 0.000597 per start]
compute_locs_definitely_written_on_edge: num_starts 32 time spent: 0:0:0 [0.000100s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 25 time spent: 0:0:0 [0.016954s total; 0.000678 per start]
edge_update_memlabel_map_for_mlvars: num_starts 16 time spent: 0:0:0 [0.000596s total; 0.000037 per start]
add_new_locs_based_on_edge: num_starts 8 time spent: 0:0:0 [0.008678s total; 0.001085 per start]
expand_locset_to_include_slots_for_memmask: num_starts 25 time spent: 0:0:0 [0.000169s total; 0.000007 per start]
total: num_starts 1 time spent: 0:0:30 [30.180967s total; 30.180967 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 0.95s.
ftmap_run_pointsto_analysis.: 0.015005s (num_starts 2; 0.0075s/start)s.
EQ Time after pointsto analysis: 0.939403s.
EQ Time after pointsto analysis and smt_query: 0.859507s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.859507s.
Equivalence proof found. The programs are equivalent.
