==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x85 (or (bvugt input.memlabel-mem--arg.1_begin (bvadd (_ bv0 32) (_ bv0 32))) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x72 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) (or $x71 $x72)) (or $x77 $x78)) $x85)))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x14 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x14)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x7 (and $x5 $x6)))
 (let (($x17 (and $x7 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x85 (or (bvugt input.memlabel-mem--arg.1_begin (bvadd (_ bv0 32) (_ bv0 32))) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x72 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) (or $x71 $x72)) (or $x77 $x78)) $x85)))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x14 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x14)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x7 (and $x5 $x6)))
 (let (($x17 (and $x7 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.memlabel-mem--arg.1_begin #b10000000000000000000000000000000)
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b11111111111000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b11111111111000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin #b11111111100000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ #b11111111100000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end #b11111111100000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b11111111111000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6de35f8f)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x61e31000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x61e31003)
  (define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x61e31000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv3120919143 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3763329255 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x138 (= false true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x128 (concat ?x125 (concat ?x122 ?x120)))))
 (let (($x131 (= ?x129 input.dst.llvm-%m)))
 (let (($x132 (= $x131 true)))
 (let ((?x105 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x114 (concat ?x111 (concat ?x107 ?x105)))))
 (let (($x116 (= ?x115 input.dst.llvm-%n)))
 (let (($x117 (= $x116 true)))
 (let (($x100 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x101 (= $x100 true)))
 (let ((?x58 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x57 (= (_ bv0 32) ?x58)))
 (let ((?x88 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x90 (= (_ bv0 32) ?x88)))
 (let ((?x86 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x86)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (and $x41 $x71)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x18 $x31)))
 (let (($x45 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x24 (and $x80 $x61)))
 (let (($x17 (not $x24)))
 (let (($x52 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x63 (and $x50 $x52)))
 (let (($x79 (and (not $x63) $x17)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x49 $x72)))
 (let (($x75 (not $x56)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x89 $x53)))
 (let (($x83 (and (not $x73) $x75)))
 (let (($x95 (and (and (and (and (and (and $x83 $x79) $x16) $x45) $x85) $x87) $x90)))
 (let (($x96 (and $x95 $x57)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x40 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x40)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x40)))
 (let (($x64 (or false (or false (and (and true (or $x12 $x32)) (or $x8 $x42))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x64)))
 (let (($x97 (and $x26 $x96)))
 (let (($x98 (= $x97 true)))
 (let (($x102 (and $x98 $x101)))
 (let (($x118 (and $x102 $x117)))
 (let (($x133 (and $x118 $x132)))
 (let (($x68 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x134 (and $x68 $x133)))
 (let (($x22 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x135 (and $x22 $x134)))
 (let (($x33 (forall ((input.ind-%var65X (_ BitVec 32)) )(let (($x34 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var65X)))
 (=> $x34 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var65X) (_ bv0 32)))))
 ))
 (let (($x51 (forall ((input.ind-%var64X (_ BitVec 32)) )(let (($x34 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var64X)))
 (= $x34 false)))
 ))
 (let (($x82 (and $x51 $x33)))
 (let (($x136 (and $x82 $x135)))
 (let (($x25 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x137 (and $x25 $x136)))
 (let (($x139 (=> $x137 $x138)))
 (not $x139))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x138 (= false true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x129 (concat ?x128 (concat ?x125 (concat ?x122 ?x120)))))
 (let (($x131 (= ?x129 input.dst.llvm-%m)))
 (let (($x132 (= $x131 true)))
 (let ((?x105 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x114 (concat ?x111 (concat ?x107 ?x105)))))
 (let (($x116 (= ?x115 input.dst.llvm-%n)))
 (let (($x117 (= $x116 true)))
 (let (($x100 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x101 (= $x100 true)))
 (let ((?x58 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x57 (= (_ bv0 32) ?x58)))
 (let ((?x88 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x90 (= (_ bv0 32) ?x88)))
 (let ((?x86 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x86)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (and $x41 $x71)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x85 (and $x18 $x31)))
 (let (($x45 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x24 (and $x80 $x61)))
 (let (($x17 (not $x24)))
 (let (($x52 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x63 (and $x50 $x52)))
 (let (($x79 (and (not $x63) $x17)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x49 $x72)))
 (let (($x75 (not $x56)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x89 $x53)))
 (let (($x83 (and (not $x73) $x75)))
 (let (($x95 (and (and (and (and (and (and $x83 $x79) $x16) $x45) $x85) $x87) $x90)))
 (let (($x96 (and $x95 $x57)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x40 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x40)))
 (let (($x32 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x40)))
 (let (($x64 (or false (or false (and (and true (or $x12 $x32)) (or $x8 $x42))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x64)))
 (let (($x97 (and $x26 $x96)))
 (let (($x98 (= $x97 true)))
 (let (($x102 (and $x98 $x101)))
 (let (($x118 (and $x102 $x117)))
 (let (($x133 (and $x118 $x132)))
 (let (($x68 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x134 (and $x68 $x133)))
 (let (($x22 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x135 (and $x22 $x134)))
 (let (($x33 (forall ((input.ind-%var65X (_ BitVec 32)) )(let (($x34 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var65X)))
 (=> $x34 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var65X) (_ bv0 32)))))
 ))
 (let (($x51 (forall ((input.ind-%var64X (_ BitVec 32)) )(let (($x34 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var64X)))
 (= $x34 false)))
 ))
 (let (($x82 (and $x51 $x33)))
 (let (($x136 (and $x82 $x135)))
 (let (($x25 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x137 (and $x25 $x136)))
 (let (($x139 (=> $x137 $x138)))
 (not $x139))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00020003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xeefcc268)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb421d650)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb421d653)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xeefcc26b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb421d650)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xeefcc268)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x102)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x75 (= (_ bv0 32) ?x62)))
 (let ((?x101 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x61 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x13)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (and $x59 $x56)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (and $x39 $x78)))
 (let (($x41 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x86 (and $x71 $x113)))
 (let (($x114 (not $x86)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x58 $x79)))
 (let (($x88 (and (not $x60) $x114)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (and $x5 $x74)))
 (let (($x66 (not $x103)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x32 $x9)))
 (let (($x98 (and (not $x68) $x66)))
 (let (($x111 (and (and (and (and (and (and $x98 $x88) $x16) $x41) $x100) $x61) $x75)))
 (let (($x106 (and $x111 $x85)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x63 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x53)))
 (let (($x54 (or false (or false (and (and true (or $x52 $x63)) (or $x109 $x110))))))
 (let (($x64 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x67 (and $x64 $x106)))
 (let (($x14 (= $x67 true)))
 (let ((?x131 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x140 (concat ?x139 (concat ?x136 (concat ?x133 ?x131)))))
 (let (($x21 (= input.dst.llvm-%m ?x140)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x126 (concat ?x123 (concat ?x121 (concat ?x127 ?x117)))))
 (let (($x129 (= input.dst.llvm-%n ?x126)))
 (let (($x119 (and $x129 $x21)))
 (let (($x112 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x104 (and $x112 $x119)))
 (let (($x19 (and (and (and $x64 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x106) $x104)))
 (let (($x36 (= $x19 true)))
 (let (($x28 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x48 (and $x28 $x36)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x10 (and $x95 $x48)))
 (let (($x12 (forall ((input.ind-%var87X (_ BitVec 32)) )(let (($x25 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var87X)))
 (=> $x25 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var87X) (_ bv0 32)))))
 ))
 (let (($x27 (forall ((input.ind-%var86X (_ BitVec 32)) )(let (($x25 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var86X)))
 (= $x25 false)))
 ))
 (let (($x49 (and $x27 $x12)))
 (let (($x81 (and $x49 $x10)))
 (let (($x6 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x7 (and $x6 $x81)))
 (let (($x141 (=> $x7 $x14)))
 (not $x141)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x102)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x75 (= (_ bv0 32) ?x62)))
 (let ((?x101 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x61 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x101)))
 (let ((?x13 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x13)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (and $x59 $x56)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (and $x39 $x78)))
 (let (($x41 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x86 (and $x71 $x113)))
 (let (($x114 (not $x86)))
 (let (($x79 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x58 $x79)))
 (let (($x88 (and (not $x60) $x114)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (and $x5 $x74)))
 (let (($x66 (not $x103)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x32 $x9)))
 (let (($x98 (and (not $x68) $x66)))
 (let (($x111 (and (and (and (and (and (and $x98 $x88) $x16) $x41) $x100) $x61) $x75)))
 (let (($x106 (and $x111 $x85)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x53 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x53)))
 (let (($x63 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x53)))
 (let (($x54 (or false (or false (and (and true (or $x52 $x63)) (or $x109 $x110))))))
 (let (($x64 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x67 (and $x64 $x106)))
 (let (($x14 (= $x67 true)))
 (let ((?x131 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x140 (concat ?x139 (concat ?x136 (concat ?x133 ?x131)))))
 (let (($x21 (= input.dst.llvm-%m ?x140)))
 (let ((?x117 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x126 (concat ?x123 (concat ?x121 (concat ?x127 ?x117)))))
 (let (($x129 (= input.dst.llvm-%n ?x126)))
 (let (($x119 (and $x129 $x21)))
 (let (($x112 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x104 (and $x112 $x119)))
 (let (($x19 (and (and (and $x64 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x106) $x104)))
 (let (($x36 (= $x19 true)))
 (let (($x28 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x48 (and $x28 $x36)))
 (let (($x95 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x10 (and $x95 $x48)))
 (let (($x12 (forall ((input.ind-%var87X (_ BitVec 32)) )(let (($x25 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var87X)))
 (=> $x25 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var87X) (_ bv0 32)))))
 ))
 (let (($x27 (forall ((input.ind-%var86X (_ BitVec 32)) )(let (($x25 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var86X)))
 (= $x25 false)))
 ))
 (let (($x49 (and $x27 $x12)))
 (let (($x81 (and $x49 $x10)))
 (let (($x6 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x7 (and $x6 $x81)))
 (let (($x141 (=> $x7 $x14)))
 (not $x141)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%n)))
 (let (($x69 (= $x23 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x141 (concat ?x14 (concat ?x81 (concat ?x36 ?x104)))))
 (let (($x142 (= input.dst.llvm-%m ?x141)))
 (let ((?x129 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x140 (concat ?x137 (concat ?x133 (concat ?x139 ?x129)))))
 (let (($x21 (= input.dst.llvm-%n ?x140)))
 (let (($x82 (and $x21 $x142)))
 (let (($x128 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x84 (and $x128 $x82)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x105)))
 (let ((?x76 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x107 (= (_ bv0 32) ?x76)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x85)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x75 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x62)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x111 (and $x61 $x75)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (and $x101 $x111)))
 (let (($x24 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x41 $x91)))
 (let (($x59 (not $x39)))
 (let (($x80 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x16 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x72 (and $x16 $x80)))
 (let (($x13 (and (not $x72) $x59)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x114 (and $x113 $x86)))
 (let (($x88 (not $x114)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x60 $x93)))
 (let (($x99 (and (not $x71) $x88)))
 (let (($x125 (and (and (and (and (and (and $x99 $x13) $x78) $x24) $x102) $x106) $x107)))
 (let (($x121 (and $x125 $x108)))
 (let (($x110 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x18 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x22 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x98 (or false (or false (and (and true (or $x22 $x55)) (or $x18 $x5))))))
 (let (($x79 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x34 (and (and (and $x79 $x110) $x121) $x84)))
 (let (($x50 (= $x34 true)))
 (let (($x87 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x77 (and $x87 $x50)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x51 (and $x89 $x77)))
 (let (($x26 (forall ((input.ind-%var97X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var97X)))
 (=> $x27 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var97X) (_ bv0 32)))))
 ))
 (let (($x40 (forall ((input.ind-%var96X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var96X)))
 (= $x27 false)))
 ))
 (let (($x53 (and $x40 $x26)))
 (let (($x43 (and $x53 $x51)))
 (let (($x6 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x29 (and $x6 $x43)))
 (let (($x8 (=> $x29 $x69)))
 (not $x8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%n)))
 (let (($x69 (= $x23 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x141 (concat ?x14 (concat ?x81 (concat ?x36 ?x104)))))
 (let (($x142 (= input.dst.llvm-%m ?x141)))
 (let ((?x129 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x140 (concat ?x137 (concat ?x133 (concat ?x139 ?x129)))))
 (let (($x21 (= input.dst.llvm-%n ?x140)))
 (let (($x82 (and $x21 $x142)))
 (let (($x128 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x84 (and $x128 $x82)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x105)))
 (let ((?x76 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x107 (= (_ bv0 32) ?x76)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x85)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x75 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x62)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x111 (and $x61 $x75)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (and $x101 $x111)))
 (let (($x24 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x41 $x91)))
 (let (($x59 (not $x39)))
 (let (($x80 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x16 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x72 (and $x16 $x80)))
 (let (($x13 (and (not $x72) $x59)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x113 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x114 (and $x113 $x86)))
 (let (($x88 (not $x114)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x60 $x93)))
 (let (($x99 (and (not $x71) $x88)))
 (let (($x125 (and (and (and (and (and (and $x99 $x13) $x78) $x24) $x102) $x106) $x107)))
 (let (($x121 (and $x125 $x108)))
 (let (($x110 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x18 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x22 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x98 (or false (or false (and (and true (or $x22 $x55)) (or $x18 $x5))))))
 (let (($x79 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x34 (and (and (and $x79 $x110) $x121) $x84)))
 (let (($x50 (= $x34 true)))
 (let (($x87 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x77 (and $x87 $x50)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x51 (and $x89 $x77)))
 (let (($x26 (forall ((input.ind-%var97X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var97X)))
 (=> $x27 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var97X) (_ bv0 32)))))
 ))
 (let (($x40 (forall ((input.ind-%var96X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var96X)))
 (= $x27 false)))
 ))
 (let (($x53 (and $x40 $x26)))
 (let (($x43 (and $x53 $x51)))
 (let (($x6 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x29 (and $x6 $x43)))
 (let (($x8 (=> $x29 $x69)))
 (not $x8))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00024050)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00030114)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00004000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00024053)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00030117)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00024050)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00030114)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00024051) #x40
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x968afff8)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffff4)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000100)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffff7)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x968afffb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffff4)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x968afff8)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000100)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000100)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xfffffff5) #x01
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x49 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x20 (bvneg ?x49)))
 (let (($x33 (= ?x20 input.spec-%var-n-1)))
 (let (($x143 (= $x33 true)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x50 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x69 (concat ?x43 (concat ?x50 ?x84)))))
 (let (($x30 (= input.dst.llvm-%m ?x8)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x141 (concat ?x7 (concat ?x36 (concat ?x14 ?x21)))))
 (let (($x142 (= input.dst.llvm-%n ?x141)))
 (let (($x73 (and $x142 $x30)))
 (let (($x135 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x109 (and $x135 $x73)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x127)))
 (let ((?x116 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x116)))
 (let ((?x108 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x121 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x108)))
 (let ((?x76 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x76)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (and $x106 $x107)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (and $x85 $x125)))
 (let (($x123 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x111 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x24 $x120)))
 (let (($x61 (not $x101)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (and $x78 $x115)))
 (let (($x62 (and (not $x100) $x61)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x59 (and $x91 $x39)))
 (let (($x13 (not $x59)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x41 (and $x72 $x47)))
 (let (($x56 (and (not $x41) $x13)))
 (let (($x132 (and (and (and (and (and (and $x56 $x62) $x111) $x123) $x105) $x121) $x118)))
 (let (($x133 (and $x132 $x117)))
 (let (($x5 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x79 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x79)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x79)))
 (let (($x99 (or false (or false (and (and true (or $x97 $x110)) (or $x31 $x113))))))
 (let (($x80 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x99)))
 (let (($x83 (and (and (and $x80 $x5) $x133) $x109)))
 (let (($x92 (= $x83 true)))
 (let (($x32 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x90 (and $x32 $x92)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x46 (and $x54 $x90)))
 (let (($x11 (forall ((input.ind-%var115X (_ BitVec 32)) )(let (($x94 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var115X)))
 (=> $x94 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var115X) (_ bv0 32)))))
 ))
 (let (($x96 (forall ((input.ind-%var114X (_ BitVec 32)) )(let (($x94 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var114X)))
 (= $x94 false)))
 ))
 (let (($x64 (and $x96 $x11)))
 (let (($x25 (and $x64 $x46)))
 (let (($x63 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x44 (and $x63 $x25)))
 (let (($x144 (=> $x44 $x143)))
 (not $x144))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x49 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x20 (bvneg ?x49)))
 (let (($x33 (= ?x20 input.spec-%var-n-1)))
 (let (($x143 (= $x33 true)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x50 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x69 (concat ?x43 (concat ?x50 ?x84)))))
 (let (($x30 (= input.dst.llvm-%m ?x8)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x14 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x141 (concat ?x7 (concat ?x36 (concat ?x14 ?x21)))))
 (let (($x142 (= input.dst.llvm-%n ?x141)))
 (let (($x73 (and $x142 $x30)))
 (let (($x135 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x109 (and $x135 $x73)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x127)))
 (let ((?x116 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x116)))
 (let ((?x108 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x121 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x108)))
 (let ((?x76 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x76)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (and $x106 $x107)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (and $x85 $x125)))
 (let (($x123 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x111 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x101 (and $x24 $x120)))
 (let (($x61 (not $x101)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (and $x78 $x115)))
 (let (($x62 (and (not $x100) $x61)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x59 (and $x91 $x39)))
 (let (($x13 (not $x59)))
 (let (($x47 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x41 (and $x72 $x47)))
 (let (($x56 (and (not $x41) $x13)))
 (let (($x132 (and (and (and (and (and (and $x56 $x62) $x111) $x123) $x105) $x121) $x118)))
 (let (($x133 (and $x132 $x117)))
 (let (($x5 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x79 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x79)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x79)))
 (let (($x99 (or false (or false (and (and true (or $x97 $x110)) (or $x31 $x113))))))
 (let (($x80 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x99)))
 (let (($x83 (and (and (and $x80 $x5) $x133) $x109)))
 (let (($x92 (= $x83 true)))
 (let (($x32 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x90 (and $x32 $x92)))
 (let (($x54 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x46 (and $x54 $x90)))
 (let (($x11 (forall ((input.ind-%var115X (_ BitVec 32)) )(let (($x94 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var115X)))
 (=> $x94 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var115X) (_ bv0 32)))))
 ))
 (let (($x96 (forall ((input.ind-%var114X (_ BitVec 32)) )(let (($x94 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var114X)))
 (= $x94 false)))
 ))
 (let (($x64 (and $x96 $x11)))
 (let (($x25 (and $x64 $x46)))
 (let (($x63 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x44 (and $x63 $x25)))
 (let (($x144 (=> $x44 $x143)))
 (not $x144))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x6 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x95 (bvneg ?x6)))
 (let (($x87 (= ?x95 input.dst.llvm-%n)))
 (let (($x26 (= $x87 true)))
 (let ((?x109 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x92 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x20 (concat ?x49 (concat ?x25 (concat ?x92 ?x109)))))
 (let (($x33 (= input.dst.llvm-%m ?x20)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x29 (concat ?x50 (concat ?x69 ?x142)))))
 (let (($x30 (= input.dst.llvm-%n ?x8)))
 (let (($x143 (and $x30 $x33)))
 (let (($x10 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x144 (and $x10 $x143)))
 (let ((?x139 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x139)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x138 (= (_ bv0 32) ?x126)))
 (let ((?x117 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x133 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x117)))
 (let ((?x116 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x116)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (and $x121 $x118)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (and $x108 $x132)))
 (let (($x137 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x123 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (and $x123 $x134)))
 (let (($x106 (not $x85)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x111 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x102 (and $x111 $x122)))
 (let (($x76 (and (not $x102) $x106)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x120 $x101)))
 (let (($x62 (not $x61)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x24 (and $x100 $x45)))
 (let (($x75 (and (not $x24) $x62)))
 (let (($x19 (and (and (and (and (and (and $x75 $x76) $x125) $x137) $x127) $x133) $x138)))
 (let (($x36 (and $x19 $x129)))
 (let (($x113 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x80 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x80)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x80)))
 (let (($x56 (or false (or false (and (and true (or $x68 $x5)) (or $x112 $x91))))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x56)))
 (let (($x18 (and (and (and $x115 $x113) $x36) $x144)))
 (let (($x82 (= $x18 true)))
 (let (($x60 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x140 (and $x60 $x82)))
 (let (($x98 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x40 (and $x98 $x140)))
 (let (($x66 (forall ((input.ind-%var125X (_ BitVec 32)) )(let (($x96 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var125X)))
 (=> $x96 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var125X) (_ bv0 32)))))
 ))
 (let (($x58 (forall ((input.ind-%var124X (_ BitVec 32)) )(let (($x96 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var124X)))
 (= $x96 false)))
 ))
 (let (($x79 (and $x58 $x66)))
 (let (($x89 (and $x79 $x40)))
 (let (($x63 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x53 (and $x63 $x89)))
 (let (($x42 (=> $x53 $x26)))
 (not $x42))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x6 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x95 (bvneg ?x6)))
 (let (($x87 (= ?x95 input.dst.llvm-%n)))
 (let (($x26 (= $x87 true)))
 (let ((?x109 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x92 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x20 (concat ?x49 (concat ?x25 (concat ?x92 ?x109)))))
 (let (($x33 (= input.dst.llvm-%m ?x20)))
 (let ((?x142 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x29 (concat ?x50 (concat ?x69 ?x142)))))
 (let (($x30 (= input.dst.llvm-%n ?x8)))
 (let (($x143 (and $x30 $x33)))
 (let (($x10 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x144 (and $x10 $x143)))
 (let ((?x139 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x139)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x138 (= (_ bv0 32) ?x126)))
 (let ((?x117 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x133 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x117)))
 (let ((?x116 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x118 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x116)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (and $x121 $x118)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (and $x108 $x132)))
 (let (($x137 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x123 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (and $x123 $x134)))
 (let (($x106 (not $x85)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x111 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x102 (and $x111 $x122)))
 (let (($x76 (and (not $x102) $x106)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x120 $x101)))
 (let (($x62 (not $x61)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x24 (and $x100 $x45)))
 (let (($x75 (and (not $x24) $x62)))
 (let (($x19 (and (and (and (and (and (and $x75 $x76) $x125) $x137) $x127) $x133) $x138)))
 (let (($x36 (and $x19 $x129)))
 (let (($x113 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x80 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x80)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x80)))
 (let (($x56 (or false (or false (and (and true (or $x68 $x5)) (or $x112 $x91))))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x56)))
 (let (($x18 (and (and (and $x115 $x113) $x36) $x144)))
 (let (($x82 (= $x18 true)))
 (let (($x60 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x140 (and $x60 $x82)))
 (let (($x98 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x40 (and $x98 $x140)))
 (let (($x66 (forall ((input.ind-%var125X (_ BitVec 32)) )(let (($x96 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var125X)))
 (=> $x96 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var125X) (_ bv0 32)))))
 ))
 (let (($x58 (forall ((input.ind-%var124X (_ BitVec 32)) )(let (($x96 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var124X)))
 (= $x96 false)))
 ))
 (let (($x79 (and $x58 $x66)))
 (let (($x89 (and $x79 $x40)))
 (let (($x63 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x53 (and $x63 $x89)))
 (let (($x42 (=> $x53 $x26)))
 (not $x42))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x94 ((_ extract 7 0) input.spec-%var-n-1)))
 (let (($x17 (= (_ bv0 8) ?x94)))
 (let (($x32 (= $x17 true)))
 (let ((?x144 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x95 (concat ?x6 (concat ?x89 (concat ?x82 ?x144)))))
 (let (($x87 (= input.dst.llvm-%m ?x95)))
 (let ((?x30 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x20 (concat ?x44 (concat ?x92 (concat ?x49 ?x30)))))
 (let (($x33 (= input.dst.llvm-%n ?x20)))
 (let (($x26 (and $x33 $x87)))
 (let (($x51 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x42 (and $x51 $x26)))
 (let ((?x14 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x14)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x9)))
 (let ((?x129 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x129)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x126)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x19 (and $x133 $x138)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (and $x117 $x19)))
 (let (($x7 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x108 (and $x137 $x48)))
 (let (($x121 (not $x108)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x105 (and $x125 $x131)))
 (let (($x116 (and (not $x105) $x121)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (and $x134 $x85)))
 (let (($x76 (not $x106)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (and $x102 $x124)))
 (let (($x107 (and (not $x123) $x76)))
 (let (($x34 (and (and (and (and (and (and $x107 $x116) $x132) $x7) $x139) $x36) $x67)))
 (let (($x50 (and $x34 $x21)))
 (let (($x91 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x115 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x128 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x115)))
 (let (($x75 (or false (or false (and (and true (or $x71 $x113)) (or $x128 $x120))))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x75)))
 (let (($x31 (and (and (and $x122 $x91) $x50) $x42)))
 (let (($x73 (= $x31 true)))
 (let (($x72 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x141 (and $x72 $x73)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x52 (and $x99 $x141)))
 (let (($x88 (forall ((input.ind-%var135X (_ BitVec 32)) )(let (($x58 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var135X)))
 (=> $x58 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var135X) (_ bv0 32)))))
 ))
 (let (($x16 (forall ((input.ind-%var134X (_ BitVec 32)) )(let (($x58 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var134X)))
 (= $x58 false)))
 ))
 (let (($x80 (and $x16 $x88)))
 (let (($x55 (and $x80 $x52)))
 (let (($x63 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x22 (and $x63 $x55)))
 (let (($x64 (=> $x22 $x32)))
 (not $x64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x94 ((_ extract 7 0) input.spec-%var-n-1)))
 (let (($x17 (= (_ bv0 8) ?x94)))
 (let (($x32 (= $x17 true)))
 (let ((?x144 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x82 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x95 (concat ?x6 (concat ?x89 (concat ?x82 ?x144)))))
 (let (($x87 (= input.dst.llvm-%m ?x95)))
 (let ((?x30 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x92 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x20 (concat ?x44 (concat ?x92 (concat ?x49 ?x30)))))
 (let (($x33 (= input.dst.llvm-%n ?x20)))
 (let (($x26 (and $x33 $x87)))
 (let (($x51 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x42 (and $x51 $x26)))
 (let ((?x14 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x14)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x9)))
 (let ((?x129 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x129)))
 (let ((?x126 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x138 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x126)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x19 (and $x133 $x138)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (and $x117 $x19)))
 (let (($x7 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x108 (and $x137 $x48)))
 (let (($x121 (not $x108)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x105 (and $x125 $x131)))
 (let (($x116 (and (not $x105) $x121)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (and $x134 $x85)))
 (let (($x76 (not $x106)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (and $x102 $x124)))
 (let (($x107 (and (not $x123) $x76)))
 (let (($x34 (and (and (and (and (and (and $x107 $x116) $x132) $x7) $x139) $x36) $x67)))
 (let (($x50 (and $x34 $x21)))
 (let (($x91 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x120 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x115 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x128 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x113 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x115)))
 (let (($x75 (or false (or false (and (and true (or $x71 $x113)) (or $x128 $x120))))))
 (let (($x122 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x75)))
 (let (($x31 (and (and (and $x122 $x91) $x50) $x42)))
 (let (($x73 (= $x31 true)))
 (let (($x72 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x141 (and $x72 $x73)))
 (let (($x99 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x52 (and $x99 $x141)))
 (let (($x88 (forall ((input.ind-%var135X (_ BitVec 32)) )(let (($x58 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var135X)))
 (=> $x58 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var135X) (_ bv0 32)))))
 ))
 (let (($x16 (forall ((input.ind-%var134X (_ BitVec 32)) )(let (($x58 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var134X)))
 (= $x58 false)))
 ))
 (let (($x80 (and $x16 $x88)))
 (let (($x55 (and $x80 $x52)))
 (let (($x63 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x22 (and $x63 $x55)))
 (let (($x64 (=> $x22 $x32)))
 (not $x64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000800)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x40404000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000803)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000800)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000004) #x00
      #x40))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x152a8dd0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x81bccba0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x81bccba3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x152a8dd3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x81bccba0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x152a8dd0)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x81bccba0) #x40
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x35 ((_ extract 13 0) input.dst.llvm-%m)))
 (let (($x60 (= (_ bv0 14) ?x35)))
 (let (($x79 (= $x60 true)))
 (let ((?x42 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x94 (concat ?x55 (concat ?x73 ?x42)))))
 (let (($x32 (= input.dst.llvm-%m ?x17)))
 (let ((?x33 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x95 (concat ?x53 (concat ?x82 (concat ?x6 ?x33)))))
 (let (($x87 (= input.dst.llvm-%n ?x95)))
 (let (($x64 (and $x87 $x32)))
 (let (($x46 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x74 (and $x46 $x64)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x69)))
 (let ((?x93 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x23 (= (_ bv0 32) ?x93)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x9)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x34 (and $x36 $x67)))
 (let (($x129 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (and $x129 $x34)))
 (let (($x29 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x117 (and $x7 $x77)))
 (let (($x133 (not $x117)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (and $x132 $x104)))
 (let (($x126 (and (not $x127) $x133)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x121 (and $x48 $x108)))
 (let (($x116 (not $x121)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x105 $x136)))
 (let (($x118 (and (not $x137) $x116)))
 (let (($x83 (and (and (and (and (and (and $x118 $x126) $x19) $x29) $x14) $x50) $x23)))
 (let (($x92 (and $x83 $x142)))
 (let (($x120 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x134 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x122 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x122)))
 (let (($x107 (or false (or false (and (and true (or $x41 $x91)) (or $x135 $x134))))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x107)))
 (let (($x143 (and (and (and $x131 $x120) $x92) $x74)))
 (let (($x8 (= $x143 true)))
 (let (($x100 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x54 (and $x100 $x8)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x110 (and $x56 $x54)))
 (let (($x13 (forall ((input.ind-%var153X (_ BitVec 32)) )(let (($x103 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var153X)))
 (=> $x103 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var153X) (_ bv0 32)))))
 ))
 (let (($x114 (forall ((input.ind-%var152X (_ BitVec 32)) )(let (($x103 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var152X)))
 (= $x103 false)))
 ))
 (let (($x115 (and $x114 $x13)))
 (let (($x97 (and $x115 $x110)))
 (let (($x5 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x57 (and $x5 $x97)))
 (let (($x86 (=> $x57 $x79)))
 (not $x86)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x35 ((_ extract 13 0) input.dst.llvm-%m)))
 (let (($x60 (= (_ bv0 14) ?x35)))
 (let (($x79 (= $x60 true)))
 (let ((?x42 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x94 (concat ?x55 (concat ?x73 ?x42)))))
 (let (($x32 (= input.dst.llvm-%m ?x17)))
 (let ((?x33 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x6 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x82 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x95 (concat ?x53 (concat ?x82 (concat ?x6 ?x33)))))
 (let (($x87 (= input.dst.llvm-%n ?x95)))
 (let (($x64 (and $x87 $x32)))
 (let (($x46 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x74 (and $x46 $x64)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x69)))
 (let ((?x93 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x23 (= (_ bv0 32) ?x93)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x50 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let ((?x9 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x9)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x34 (and $x36 $x67)))
 (let (($x129 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (and $x129 $x34)))
 (let (($x29 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x117 (and $x7 $x77)))
 (let (($x133 (not $x117)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (and $x132 $x104)))
 (let (($x126 (and (not $x127) $x133)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x121 (and $x48 $x108)))
 (let (($x116 (not $x121)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x137 (and $x105 $x136)))
 (let (($x118 (and (not $x137) $x116)))
 (let (($x83 (and (and (and (and (and (and $x118 $x126) $x19) $x29) $x14) $x50) $x23)))
 (let (($x92 (and $x83 $x142)))
 (let (($x120 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x134 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x122 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x91 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x122)))
 (let (($x107 (or false (or false (and (and true (or $x41 $x91)) (or $x135 $x134))))))
 (let (($x131 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x107)))
 (let (($x143 (and (and (and $x131 $x120) $x92) $x74)))
 (let (($x8 (= $x143 true)))
 (let (($x100 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x54 (and $x100 $x8)))
 (let (($x56 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x110 (and $x56 $x54)))
 (let (($x13 (forall ((input.ind-%var153X (_ BitVec 32)) )(let (($x103 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var153X)))
 (=> $x103 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var153X) (_ bv0 32)))))
 ))
 (let (($x114 (forall ((input.ind-%var152X (_ BitVec 32)) )(let (($x103 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var152X)))
 (= $x103 false)))
 ))
 (let (($x115 (and $x114 $x13)))
 (let (($x97 (and $x115 $x110)))
 (let (($x5 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x57 (and $x5 $x97)))
 (let (($x86 (=> $x57 $x79)))
 (not $x86)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000013)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x40)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xa9926614)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2a37f630)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2a37f633)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xa9926617)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2a37f630)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xa9926614)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x40)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x98 ((_ extract 5 0) input.dst.llvm-%m)))
 (let (($x72 (= (_ bv0 6) ?x98)))
 (let (($x88 (= $x72 true)))
 (let ((?x74 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x35 (concat ?x97 (concat ?x8 ?x74)))))
 (let (($x79 (= input.dst.llvm-%m ?x60)))
 (let ((?x87 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x22 (concat ?x73 (concat ?x94 ?x87)))))
 (let (($x32 (= input.dst.llvm-%n ?x17)))
 (let (($x86 (and $x32 $x79)))
 (let (($x40 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x11 (and $x40 $x86)))
 (let ((?x49 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x30 (= (_ bv0 32) ?x49)))
 (let ((?x92 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x112 (= (_ bv0 32) ?x92)))
 (let ((?x69 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x142 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x69)))
 (let ((?x25 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x93 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x25)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (and $x21 $x93)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x44 $x23)))
 (let (($x14 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x139 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x139 $x29)))
 (let (($x129 (not $x90)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x138 $x19)))
 (let (($x43 (and (not $x84) $x129)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x7 $x77)))
 (let (($x133 (not $x117)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x104 $x127)))
 (let (($x51 (and (not $x81) $x133)))
 (let (($x18 (and (and (and (and (and (and $x51 $x43) $x67) $x14) $x83) $x142) $x112)))
 (let (($x82 (and $x18 $x30)))
 (let (($x123 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x107 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x137 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x24 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x107)))
 (let (($x116 (or false (or false (and (and true (or $x131 $x24)) (or $x137 $x10))))))
 (let (($x132 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x116)))
 (let (($x26 (and (and (and $x132 $x123) $x82) $x11)))
 (let (($x20 (= $x26 true)))
 (let (($x12 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x16 (and $x12 $x20)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x99 (and $x41 $x16)))
 (let (($x125 (forall ((input.ind-%var171X (_ BitVec 32)) )(let (($x130 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var171X)))
 (=> $x130 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var171X) (_ bv0 32)))))
 ))
 (let (($x59 (forall ((input.ind-%var170X (_ BitVec 32)) )(let (($x130 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var170X)))
 (= $x130 false)))
 ))
 (let (($x62 (and $x59 $x125)))
 (let (($x80 (and $x62 $x99)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x63 (and $x27 $x80)))
 (let (($x39 (=> $x63 $x88)))
 (not $x39)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x98 ((_ extract 5 0) input.dst.llvm-%m)))
 (let (($x72 (= (_ bv0 6) ?x98)))
 (let (($x88 (= $x72 true)))
 (let ((?x74 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x35 (concat ?x97 (concat ?x8 ?x74)))))
 (let (($x79 (= input.dst.llvm-%m ?x60)))
 (let ((?x87 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x22 (concat ?x73 (concat ?x94 ?x87)))))
 (let (($x32 (= input.dst.llvm-%n ?x17)))
 (let (($x86 (and $x32 $x79)))
 (let (($x40 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x11 (and $x40 $x86)))
 (let ((?x49 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x30 (= (_ bv0 32) ?x49)))
 (let ((?x92 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x112 (= (_ bv0 32) ?x92)))
 (let ((?x69 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x142 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x69)))
 (let ((?x25 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x93 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x25)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (and $x21 $x93)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x44 $x23)))
 (let (($x14 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x139 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x139 $x29)))
 (let (($x129 (not $x90)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x138 $x19)))
 (let (($x43 (and (not $x84) $x129)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x7 $x77)))
 (let (($x133 (not $x117)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x104 $x127)))
 (let (($x51 (and (not $x81) $x133)))
 (let (($x18 (and (and (and (and (and (and $x51 $x43) $x67) $x14) $x83) $x142) $x112)))
 (let (($x82 (and $x18 $x30)))
 (let (($x123 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x107 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x137 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x24 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x131 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x107)))
 (let (($x116 (or false (or false (and (and true (or $x131 $x24)) (or $x137 $x10))))))
 (let (($x132 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x116)))
 (let (($x26 (and (and (and $x132 $x123) $x82) $x11)))
 (let (($x20 (= $x26 true)))
 (let (($x12 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x16 (and $x12 $x20)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x99 (and $x41 $x16)))
 (let (($x125 (forall ((input.ind-%var171X (_ BitVec 32)) )(let (($x130 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var171X)))
 (=> $x130 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var171X) (_ bv0 32)))))
 ))
 (let (($x59 (forall ((input.ind-%var170X (_ BitVec 32)) )(let (($x130 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var170X)))
 (= $x130 false)))
 ))
 (let (($x62 (and $x59 $x125)))
 (let (($x80 (and $x62 $x99)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x63 (and $x27 $x80)))
 (let (($x39 (=> $x63 $x88)))
 (not $x39)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x910e555c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6a2e5580)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x08))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x08080808)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x08080808)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6a2e5583)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x910e555f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6a2e5580)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x910e555c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x08080808)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x08080808)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x04))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x04040404)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x04040404)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x04040404)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x04040404)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x100 ((_ extract 5 0) input.dst.llvm-%m)))
 (let ((?x58 ((_ extract 5 0) input.spec-%var-n-1)))
 (let ((?x145 (bvmul ?x58 (_ bv63 6))))
 (let ((?x13 (bvneg ?x145)))
 (let (($x78 (= ?x13 ?x100)))
 (let (($x65 (= $x78 true)))
 (let ((?x11 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x98 (concat ?x80 (concat ?x20 ?x11)))))
 (let (($x88 (= input.dst.llvm-%m ?x72)))
 (let ((?x32 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x57 (concat ?x8 (concat ?x35 ?x32)))))
 (let (($x79 (= input.dst.llvm-%n ?x60)))
 (let (($x39 (and $x79 $x88)))
 (let (($x52 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x66 (and $x52 $x39)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x33 (= (_ bv0 32) ?x6)))
 (let ((?x128 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x128)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let ((?x92 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x112 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x92)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x18 (and $x142 $x112)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (and $x69 $x18)))
 (let (($x53 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x14 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x14 $x140)))
 (let (($x21 (not $x44)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x34 (and $x67 $x109)))
 (let (($x25 (and (not $x34) $x21)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x129 (and $x29 $x90)))
 (let (($x43 (not $x129)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x84 $x36)))
 (let (($x9 (and (not $x139) $x43)))
 (let (($x31 (and (and (and (and (and (and $x9 $x25) $x23) $x53) $x49) $x82) $x38)))
 (let (($x73 (and $x31 $x33)))
 (let (($x10 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x132 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x123 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x132)))
 (let (($x51 (or false (or false (and (and true (or $x135 $x123)) (or $x126 $x7))))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x51)))
 (let (($x64 (and (and (and $x19 $x10) $x73) $x66)))
 (let (($x95 (= $x64 true)))
 (let (($x47 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x114 (and $x47 $x95)))
 (let (($x76 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x56 (and $x76 $x114)))
 (let (($x106 (forall ((input.ind-%var189X (_ BitVec 32)) )(let (($x71 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var189X)))
 (=> $x71 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var189X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var188X (_ BitVec 32)) )(let (($x71 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var188X)))
 (= $x71 false)))
 ))
 (let (($x107 (and $x101 $x106)))
 (let (($x115 (and $x107 $x56)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x5 (and $x27 $x115)))
 (let (($x146 (=> $x5 $x65)))
 (not $x146))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x100 ((_ extract 5 0) input.dst.llvm-%m)))
 (let ((?x58 ((_ extract 5 0) input.spec-%var-n-1)))
 (let ((?x145 (bvmul ?x58 (_ bv63 6))))
 (let ((?x13 (bvneg ?x145)))
 (let (($x78 (= ?x13 ?x100)))
 (let (($x65 (= $x78 true)))
 (let ((?x11 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x98 (concat ?x80 (concat ?x20 ?x11)))))
 (let (($x88 (= input.dst.llvm-%m ?x72)))
 (let ((?x32 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x57 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x57 (concat ?x8 (concat ?x35 ?x32)))))
 (let (($x79 (= input.dst.llvm-%n ?x60)))
 (let (($x39 (and $x79 $x88)))
 (let (($x52 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x66 (and $x52 $x39)))
 (let ((?x6 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x33 (= (_ bv0 32) ?x6)))
 (let ((?x128 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x128)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let ((?x92 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x112 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x92)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x18 (and $x142 $x112)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (and $x69 $x18)))
 (let (($x53 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x14 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x14 $x140)))
 (let (($x21 (not $x44)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x34 (and $x67 $x109)))
 (let (($x25 (and (not $x34) $x21)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x129 (and $x29 $x90)))
 (let (($x43 (not $x129)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x84 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x84 $x36)))
 (let (($x9 (and (not $x139) $x43)))
 (let (($x31 (and (and (and (and (and (and $x9 $x25) $x23) $x53) $x49) $x82) $x38)))
 (let (($x73 (and $x31 $x33)))
 (let (($x10 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x7 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x132 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x132)))
 (let (($x123 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x132)))
 (let (($x51 (or false (or false (and (and true (or $x135 $x123)) (or $x126 $x7))))))
 (let (($x19 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x51)))
 (let (($x64 (and (and (and $x19 $x10) $x73) $x66)))
 (let (($x95 (= $x64 true)))
 (let (($x47 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x114 (and $x47 $x95)))
 (let (($x76 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x56 (and $x76 $x114)))
 (let (($x106 (forall ((input.ind-%var189X (_ BitVec 32)) )(let (($x71 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var189X)))
 (=> $x71 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var189X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var188X (_ BitVec 32)) )(let (($x71 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var188X)))
 (= $x71 false)))
 ))
 (let (($x107 (and $x101 $x106)))
 (let (($x115 (and $x107 $x56)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x5 (and $x27 $x115)))
 (let (($x146 (=> $x5 $x65)))
 (not $x146))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000010)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00080000)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x01010101)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000013)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00080003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000010)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00080000)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00080000) #x00
      #x01))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x77262b9c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x95531bb8)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x20202000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x20202020)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x95531bbb)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x77262b9f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x95531bb8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x77262b9c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x20202000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x20202000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x95531bb8) #x00
      #x20))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x62 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x103 (= (_ bv0 2) ?x62)))
 (let (($x15 (= $x103 true)))
 (let ((?x66 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x145 (concat ?x68 (concat ?x115 (concat ?x95 ?x66)))))
 (let (($x13 (= input.dst.llvm-%m ?x145)))
 (let ((?x79 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x63 (concat ?x20 (concat ?x98 ?x79)))))
 (let (($x88 (= input.dst.llvm-%n ?x72)))
 (let (($x100 (and $x88 $x13)))
 (let (($x110 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x78 (and $x110 $x100)))
 (let ((?x94 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x87 (= (_ bv0 32) ?x94)))
 (let ((?x124 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x124)))
 (let ((?x33 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x33)))
 (let ((?x128 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x38 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x128)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (and $x82 $x38)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x30 $x31)))
 (let (($x22 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x69 (and $x53 $x141)))
 (let (($x142 (not $x69)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (and $x23 $x144)))
 (let (($x92 (and (not $x83) $x142)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x140 $x44)))
 (let (($x25 (not $x21)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x34 $x50)))
 (let (($x93 (and (not $x14) $x25)))
 (let (($x143 (and (and (and (and (and (and $x93 $x92) $x18) $x22) $x6) $x73) $x37)))
 (let (($x8 (and $x143 $x87)))
 (let (($x7 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x29 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x19 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x19)))
 (let (($x9 (or false (or false (and (and true (or $x136 $x10)) (or $x46 $x29))))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x9)))
 (let (($x147 (and (and (and $x109 $x7) $x8) $x78)))
 (let (($x105 (= $x147 true)))
 (let (($x104 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x137 (and $x104 $x105)))
 (let (($x116 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x86 (and $x116 $x137)))
 (let (($x121 (forall ((input.ind-%var207X (_ BitVec 32)) )(let (($x113 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var207X)))
 (=> $x113 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var207X) (_ bv0 32)))))
 ))
 (let (($x85 (forall ((input.ind-%var206X (_ BitVec 32)) )(let (($x113 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var206X)))
 (= $x113 false)))
 ))
 (let (($x132 (and $x85 $x121)))
 (let (($x17 (and $x132 $x86)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x130 (and $x27 $x17)))
 (let (($x119 (=> $x130 $x15)))
 (not $x119)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x62 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x103 (= (_ bv0 2) ?x62)))
 (let (($x15 (= $x103 true)))
 (let ((?x66 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x68 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x145 (concat ?x68 (concat ?x115 (concat ?x95 ?x66)))))
 (let (($x13 (= input.dst.llvm-%m ?x145)))
 (let ((?x79 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x72 (concat ?x63 (concat ?x20 (concat ?x98 ?x79)))))
 (let (($x88 (= input.dst.llvm-%n ?x72)))
 (let (($x100 (and $x88 $x13)))
 (let (($x110 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x78 (and $x110 $x100)))
 (let ((?x94 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x87 (= (_ bv0 32) ?x94)))
 (let ((?x124 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x124)))
 (let ((?x33 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x33)))
 (let ((?x128 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x38 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x128)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (and $x82 $x38)))
 (let (($x30 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x30 $x31)))
 (let (($x22 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x18 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x69 (and $x53 $x141)))
 (let (($x142 (not $x69)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x83 (and $x23 $x144)))
 (let (($x92 (and (not $x83) $x142)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x140 $x44)))
 (let (($x25 (not $x21)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x34 $x50)))
 (let (($x93 (and (not $x14) $x25)))
 (let (($x143 (and (and (and (and (and (and $x93 $x92) $x18) $x22) $x6) $x73) $x37)))
 (let (($x8 (and $x143 $x87)))
 (let (($x7 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x29 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x19 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x19)))
 (let (($x9 (or false (or false (and (and true (or $x136 $x10)) (or $x46 $x29))))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x9)))
 (let (($x147 (and (and (and $x109 $x7) $x8) $x78)))
 (let (($x105 (= $x147 true)))
 (let (($x104 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x137 (and $x104 $x105)))
 (let (($x116 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x86 (and $x116 $x137)))
 (let (($x121 (forall ((input.ind-%var207X (_ BitVec 32)) )(let (($x113 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var207X)))
 (=> $x113 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var207X) (_ bv0 32)))))
 ))
 (let (($x85 (forall ((input.ind-%var206X (_ BitVec 32)) )(let (($x113 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var206X)))
 (= $x113 false)))
 ))
 (let (($x132 (and $x85 $x121)))
 (let (($x17 (and $x132 $x86)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x130 (and $x27 $x17)))
 (let (($x119 (=> $x130 $x15)))
 (not $x119)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x122 (bvule input.spec-%var-n-1 (_ bv4294967294 32))))
 (let (($x47 (= $x122 true)))
 (let ((?x100 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x62 (concat ?x41 (concat ?x86 (concat ?x147 ?x100)))))
 (let (($x103 (= input.dst.llvm-%m ?x62)))
 (let ((?x72 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x5 (concat ?x114 (concat ?x64 (concat ?x58 ?x72)))))
 (let (($x145 (= input.dst.llvm-%n ?x5)))
 (let (($x15 (and $x145 $x103)))
 (let (($x79 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x119 (and $x79 $x15)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x35 (= (_ bv0 32) ?x96)))
 (let ((?x8 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x146 (= (_ bv0 32) ?x8)))
 (let ((?x94 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x94)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x124 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x97)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x37 (and $x33 $x124)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (and $x57 $x37)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x54 (and $x49 $x22)))
 (let (($x30 (not $x54)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x112 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x42 (and $x112 $x18)))
 (let (($x55 (and (not $x42) $x30)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x53 $x141)))
 (let (($x142 (not $x69)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (and $x144 $x83)))
 (let (($x52 (and (not $x89) $x142)))
 (let (($x80 (and (and (and (and (and (and $x52 $x55) $x38) $x6) $x143) $x87) $x146)))
 (let (($x26 (and $x80 $x35)))
 (let (($x139 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x9 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x81 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x9)))
 (let (($x25 (or false (or false (and (and true (or $x109 $x81)) (or $x14 $x40))))))
 (let (($x23 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x25)))
 (let (($x39 (and (and (and $x23 $x139) $x26) $x119)))
 (let (($x60 (= $x39 true)))
 (let (($x102 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x101 (and $x102 $x60)))
 (let (($x136 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x76 (and $x136 $x101)))
 (let (($x67 (forall ((input.ind-%var217X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var217X)))
 (=> $x91 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var217X) (_ bv0 32)))))
 ))
 (let (($x108 (forall ((input.ind-%var216X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var216X)))
 (= $x91 false)))
 ))
 (let (($x133 (and $x108 $x67)))
 (let (($x107 (and $x133 $x76)))
 (let (($x24 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x28 (and $x24 $x107)))
 (let (($x106 (=> $x28 $x47)))
 (not $x106))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x122 (bvule input.spec-%var-n-1 (_ bv4294967294 32))))
 (let (($x47 (= $x122 true)))
 (let ((?x100 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x62 (concat ?x41 (concat ?x86 (concat ?x147 ?x100)))))
 (let (($x103 (= input.dst.llvm-%m ?x62)))
 (let ((?x72 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x5 (concat ?x114 (concat ?x64 (concat ?x58 ?x72)))))
 (let (($x145 (= input.dst.llvm-%n ?x5)))
 (let (($x15 (and $x145 $x103)))
 (let (($x79 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x119 (and $x79 $x15)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x35 (= (_ bv0 32) ?x96)))
 (let ((?x8 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x146 (= (_ bv0 32) ?x8)))
 (let ((?x94 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x94)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x124 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x97)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x37 (and $x33 $x124)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (and $x57 $x37)))
 (let (($x6 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x54 (and $x49 $x22)))
 (let (($x30 (not $x54)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x112 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x42 (and $x112 $x18)))
 (let (($x55 (and (not $x42) $x30)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x53 $x141)))
 (let (($x142 (not $x69)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (and $x144 $x83)))
 (let (($x52 (and (not $x89) $x142)))
 (let (($x80 (and (and (and (and (and (and $x52 $x55) $x38) $x6) $x143) $x87) $x146)))
 (let (($x26 (and $x80 $x35)))
 (let (($x139 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x9 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x9)))
 (let (($x81 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x9)))
 (let (($x25 (or false (or false (and (and true (or $x109 $x81)) (or $x14 $x40))))))
 (let (($x23 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x25)))
 (let (($x39 (and (and (and $x23 $x139) $x26) $x119)))
 (let (($x60 (= $x39 true)))
 (let (($x102 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x101 (and $x102 $x60)))
 (let (($x136 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x76 (and $x136 $x101)))
 (let (($x67 (forall ((input.ind-%var217X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var217X)))
 (=> $x91 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var217X) (_ bv0 32)))))
 ))
 (let (($x108 (forall ((input.ind-%var216X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var216X)))
 (= $x91 false)))
 ))
 (let (($x133 (and $x108 $x67)))
 (let (($x107 (and $x133 $x76)))
 (let (($x24 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x28 (and $x24 $x107)))
 (let (($x106 (=> $x28 $x47)))
 (not $x106))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x9e14882c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7fffd828)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xffffff00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7fffd82b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x9e14882f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7fffd828)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x9e14882c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x9e14882c) #x00
      #xff))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xffffff00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000004) #x00
      #xff))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x45 (bvsge input.spec-%var-n-1 (_ bv4294967295 32))))
 (let (($x118 (= $x45 true)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x122 (concat ?x59 (concat ?x76 (concat ?x39 ?x15)))))
 (let (($x47 (= input.dst.llvm-%m ?x122)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x105 (concat ?x78 (concat ?x130 ?x5)))))
 (let (($x62 (= input.dst.llvm-%n ?x17)))
 (let (($x106 (and $x62 $x47)))
 (let (($x72 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x48 (and $x72 $x106)))
 (let ((?x20 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x20)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x26)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let ((?x63 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x8 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x63)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (and $x94 $x8)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (and $x16 $x146)))
 (let (($x143 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x124 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x74 (and $x31 $x6)))
 (let (($x57 (not $x74)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x128 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x110 (and $x128 $x38)))
 (let (($x73 (and (not $x110) $x57)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x49 $x22)))
 (let (($x30 (not $x54)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x18 $x42)))
 (let (($x32 (and (not $x82) $x30)))
 (let (($x56 (and (and (and (and (and (and $x32 $x73) $x124) $x143) $x80) $x35) $x126)))
 (let (($x115 (and $x56 $x70)))
 (let (($x50 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x25 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x46 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x25)))
 (let (($x142 (or false (or false (and (and true (or $x23 $x46)) (or $x89 $x92))))))
 (let (($x112 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x142)))
 (let (($x11 (and (and (and $x112 $x50) $x115) $x48)))
 (let (($x85 (= $x11 true)))
 (let (($x7 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x116 (and $x7 $x85)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x132 (and $x109 $x116)))
 (let (($x93 (forall ((input.ind-%var235X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var235X)))
 (=> $x120 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var235X) (_ bv0 32)))))
 ))
 (let (($x77 (forall ((input.ind-%var234X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var234X)))
 (= $x120 false)))
 ))
 (let (($x129 (and $x77 $x93)))
 (let (($x27 (and $x129 $x132)))
 (let (($x127 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x71 (and $x127 $x27)))
 (let (($x121 (=> $x71 $x118)))
 (not $x121))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x45 (bvsge input.spec-%var-n-1 (_ bv4294967295 32))))
 (let (($x118 (= $x45 true)))
 (let ((?x15 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x122 (concat ?x59 (concat ?x76 (concat ?x39 ?x15)))))
 (let (($x47 (= input.dst.llvm-%m ?x122)))
 (let ((?x5 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x17 (concat ?x105 (concat ?x78 (concat ?x130 ?x5)))))
 (let (($x62 (= input.dst.llvm-%n ?x17)))
 (let (($x106 (and $x62 $x47)))
 (let (($x72 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x48 (and $x72 $x106)))
 (let ((?x20 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x20)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x26)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x96)))
 (let ((?x63 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x8 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x63)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (and $x94 $x8)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (and $x16 $x146)))
 (let (($x143 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x124 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x74 (and $x31 $x6)))
 (let (($x57 (not $x74)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x128 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x110 (and $x128 $x38)))
 (let (($x73 (and (not $x110) $x57)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x49 $x22)))
 (let (($x30 (not $x54)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x82 (and $x18 $x42)))
 (let (($x32 (and (not $x82) $x30)))
 (let (($x56 (and (and (and (and (and (and $x32 $x73) $x124) $x143) $x80) $x35) $x126)))
 (let (($x115 (and $x56 $x70)))
 (let (($x50 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x25 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x25)))
 (let (($x46 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x25)))
 (let (($x142 (or false (or false (and (and true (or $x23 $x46)) (or $x89 $x92))))))
 (let (($x112 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x142)))
 (let (($x11 (and (and (and $x112 $x50) $x115) $x48)))
 (let (($x85 (= $x11 true)))
 (let (($x7 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x116 (and $x7 $x85)))
 (let (($x109 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x132 (and $x109 $x116)))
 (let (($x93 (forall ((input.ind-%var235X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var235X)))
 (=> $x120 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var235X) (_ bv0 32)))))
 ))
 (let (($x77 (forall ((input.ind-%var234X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var234X)))
 (= $x120 false)))
 ))
 (let (($x129 (and $x77 $x93)))
 (let (($x27 (and $x129 $x132)))
 (let (($x127 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x71 (and $x127 $x27)))
 (let (($x121 (=> $x71 $x118)))
 (not $x121))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x0000000b) #x80
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x092c2850)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x092c2853)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x092c2850)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xffffffff) #x80
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x135 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x10 (= $x135 true)))
 (let ((?x106 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x45 (concat ?x131 (concat ?x132 (concat ?x11 ?x106)))))
 (let (($x118 (= input.dst.llvm-%m ?x45)))
 (let ((?x17 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x28 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x107 (concat ?x60 (concat ?x119 (concat ?x28 ?x17)))))
 (let (($x122 (= input.dst.llvm-%n ?x107)))
 (let (($x121 (and $x122 $x118)))
 (let (($x5 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x104 (and $x5 $x121)))
 (let ((?x64 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x88 (= (_ bv0 32) ?x64)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x13 (= (_ bv0 32) ?x115)))
 (let ((?x20 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x70 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x20)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x114)))
 (let (($x96 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x126 (and $x96 $x26)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x66 $x126)))
 (let (($x80 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x37 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x99 (and $x37 $x143)))
 (let (($x16 (not $x99)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x79 (and $x97 $x124)))
 (let (($x87 (and (not $x79) $x16)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x31 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (and $x31 $x6)))
 (let (($x57 (not $x74)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (and $x38 $x110)))
 (let (($x98 (and (not $x33) $x57)))
 (let (($x137 (and (and (and (and (and (and $x98 $x87) $x8) $x80) $x56) $x70) $x13)))
 (let (($x86 (and $x137 $x88)))
 (let (($x83 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x142 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x142)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x142)))
 (let (($x30 (or false (or false (and (and true (or $x112 $x14)) (or $x82 $x55))))))
 (let (($x128 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x30)))
 (let (($x95 (and (and (and $x128 $x83) $x86) $x104)))
 (let (($x108 (= $x95 true)))
 (let (($x139 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x136 (and $x139 $x108)))
 (let (($x23 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x133 (and $x23 $x136)))
 (let (($x52 (forall ((input.ind-%var253X (_ BitVec 32)) )(let (($x123 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var253X)))
 (=> $x123 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var253X) (_ bv0 32)))))
 ))
 (let (($x29 (forall ((input.ind-%var252X (_ BitVec 32)) )(let (($x123 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var252X)))
 (= $x123 false)))
 ))
 (let (($x44 (and $x29 $x52)))
 (let (($x24 (and $x44 $x133)))
 (let (($x84 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x113 (and $x84 $x24)))
 (let (($x138 (=> $x113 $x10)))
 (not $x138))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x135 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x10 (= $x135 true)))
 (let ((?x106 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x45 (concat ?x131 (concat ?x132 (concat ?x11 ?x106)))))
 (let (($x118 (= input.dst.llvm-%m ?x45)))
 (let ((?x17 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x28 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x107 (concat ?x60 (concat ?x119 (concat ?x28 ?x17)))))
 (let (($x122 (= input.dst.llvm-%n ?x107)))
 (let (($x121 (and $x122 $x118)))
 (let (($x5 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x104 (and $x5 $x121)))
 (let ((?x64 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x88 (= (_ bv0 32) ?x64)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x13 (= (_ bv0 32) ?x115)))
 (let ((?x20 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x70 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x20)))
 (let ((?x114 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x114)))
 (let (($x96 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x126 (and $x96 $x26)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x66 $x126)))
 (let (($x80 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x37 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x99 (and $x37 $x143)))
 (let (($x16 (not $x99)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x79 (and $x97 $x124)))
 (let (($x87 (and (not $x79) $x16)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x31 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (and $x31 $x6)))
 (let (($x57 (not $x74)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x33 (and $x38 $x110)))
 (let (($x98 (and (not $x33) $x57)))
 (let (($x137 (and (and (and (and (and (and $x98 $x87) $x8) $x80) $x56) $x70) $x13)))
 (let (($x86 (and $x137 $x88)))
 (let (($x83 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x142 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x142)))
 (let (($x14 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x142)))
 (let (($x30 (or false (or false (and (and true (or $x112 $x14)) (or $x82 $x55))))))
 (let (($x128 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x30)))
 (let (($x95 (and (and (and $x128 $x83) $x86) $x104)))
 (let (($x108 (= $x95 true)))
 (let (($x139 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x136 (and $x139 $x108)))
 (let (($x23 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x133 (and $x23 $x136)))
 (let (($x52 (forall ((input.ind-%var253X (_ BitVec 32)) )(let (($x123 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var253X)))
 (=> $x123 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var253X) (_ bv0 32)))))
 ))
 (let (($x29 (forall ((input.ind-%var252X (_ BitVec 32)) )(let (($x123 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var252X)))
 (= $x123 false)))
 ))
 (let (($x44 (and $x29 $x52)))
 (let (($x24 (and $x44 $x133)))
 (let (($x84 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x113 (and $x84 $x24)))
 (let (($x138 (=> $x113 $x10)))
 (not $x138))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x154 (forall ((input.ind-%var275X (_ BitVec 32)) )(=> false (= (_ bv0 32) (spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var275X))))
 ))
 (let (($x125 (forall ((input.ind-%var274X (_ BitVec 32)) )(let (($x93 (spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var274X)))
 (= false $x93)))
 ))
 (let (($x155 (and $x125 $x154)))
 (let (($x156 (= $x155 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x138 (concat ?x10 (concat ?x24 (concat ?x108 ?x104)))))
 (let (($x67 (= input.dst.llvm-%m ?x138)))
 (let ((?x122 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x45 (concat ?x27 (concat ?x11 (concat ?x131 ?x122)))))
 (let (($x118 (= input.dst.llvm-%n ?x45)))
 (let (($x12 (and $x118 $x67)))
 (let (($x59 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x144 (and $x59 $x12)))
 (let ((?x145 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x145)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x78 (= (_ bv0 32) ?x103)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let ((?x115 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x115)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x137 (and $x70 $x13)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (and $x20 $x137)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x66 (and $x80 $x68)))
 (let (($x96 (not $x66)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x146 (and $x8 $x72)))
 (let (($x114 (and (not $x146) $x96)))
 (let (($x99 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (and $x143 $x99)))
 (let (($x87 (not $x16)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x79 $x94)))
 (let (($x63 (and (not $x37) $x87)))
 (let (($x76 (and (and (and (and (and (and $x63 $x114) $x126) $x100) $x64) $x86) $x78)))
 (let (($x119 (and $x76 $x130)))
 (let (($x55 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x128 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x128)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x128)))
 (let (($x98 (or false (or false (and (and true (or $x89 $x83)) (or $x73 $x31))))))
 (let (($x124 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x77 (and (and (and $x124 $x55) $x119) $x144)))
 (let (($x109 (= $x77 true)))
 (let (($x36 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x129 (and $x36 $x109)))
 (let (($x69 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x127 (and $x69 $x129)))
 (let (($x141 (forall ((input.ind-%var263X (_ BitVec 32)) )(let (($x29 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var263X)))
 (=> $x29 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var263X) (_ bv0 32)))))
 ))
 (let (($x140 (forall ((input.ind-%var262X (_ BitVec 32)) )(let (($x29 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var262X)))
 (= $x29 false)))
 ))
 (let (($x142 (and $x140 $x141)))
 (let (($x91 (and $x142 $x127)))
 (let (($x84 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x19 (and $x84 $x91)))
 (let (($x157 (=> $x19 $x156)))
 (not $x157))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x154 (forall ((input.ind-%var275X (_ BitVec 32)) )(=> false (= (_ bv0 32) (spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var275X))))
 ))
 (let (($x125 (forall ((input.ind-%var274X (_ BitVec 32)) )(let (($x93 (spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var274X)))
 (= false $x93)))
 ))
 (let (($x155 (and $x125 $x154)))
 (let (($x156 (= $x155 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x138 (concat ?x10 (concat ?x24 (concat ?x108 ?x104)))))
 (let (($x67 (= input.dst.llvm-%m ?x138)))
 (let ((?x122 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x45 (concat ?x27 (concat ?x11 (concat ?x131 ?x122)))))
 (let (($x118 (= input.dst.llvm-%n ?x45)))
 (let (($x12 (and $x118 $x67)))
 (let (($x59 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x144 (and $x59 $x12)))
 (let ((?x145 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x130 (= (_ bv0 32) ?x145)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x78 (= (_ bv0 32) ?x103)))
 (let ((?x88 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x88)))
 (let ((?x115 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x115)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x137 (and $x70 $x13)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (and $x20 $x137)))
 (let (($x100 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x66 (and $x80 $x68)))
 (let (($x96 (not $x66)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x146 (and $x8 $x72)))
 (let (($x114 (and (not $x146) $x96)))
 (let (($x99 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x143 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (and $x143 $x99)))
 (let (($x87 (not $x16)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x79 $x94)))
 (let (($x63 (and (not $x37) $x87)))
 (let (($x76 (and (and (and (and (and (and $x63 $x114) $x126) $x100) $x64) $x86) $x78)))
 (let (($x119 (and $x76 $x130)))
 (let (($x55 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x31 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x128 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x128)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x89 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x128)))
 (let (($x98 (or false (or false (and (and true (or $x89 $x83)) (or $x73 $x31))))))
 (let (($x124 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x77 (and (and (and $x124 $x55) $x119) $x144)))
 (let (($x109 (= $x77 true)))
 (let (($x36 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x129 (and $x36 $x109)))
 (let (($x69 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x127 (and $x69 $x129)))
 (let (($x141 (forall ((input.ind-%var263X (_ BitVec 32)) )(let (($x29 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var263X)))
 (=> $x29 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var263X) (_ bv0 32)))))
 ))
 (let (($x140 (forall ((input.ind-%var262X (_ BitVec 32)) )(let (($x29 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var262X)))
 (= $x29 false)))
 ))
 (let (($x142 (and $x140 $x141)))
 (let (($x91 (and $x142 $x127)))
 (let (($x84 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x19 (and $x84 $x91)))
 (let (($x157 (=> $x19 $x156)))
 (not $x157))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x3e71f944)
  (define-fun input.ind-%var274X!3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6bb488a0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6bb488a3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x3e71f947)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6bb488a0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x3e71f944)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    true)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x08000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.ind-%var274X!3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x08000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x08000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    true)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x187 (forall ((input.ind-%var317X (_ BitVec 32)) )(let ((?x174 (bvadd (bvmul input.ind-%var317X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv1 32))) (select input.dst.llvm-mem ?x174))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv2 32))) ?x178))))
 (let ((?x102 (input.spec-%tmpvar-10.E0%0%d.1.1 input.ind-%var317X)))
 (let (($x21 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var317X)))
 (=> $x21 (= ?x102 ?x184))))))))
 ))
 (let (($x92 (forall ((input.ind-%var316X (_ BitVec 32)) )(let (($x21 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var316X)))
 (= $x21 (and (bvule (_ bv0 32) input.ind-%var316X) (bvult input.ind-%var316X input.dst.llvm-%n)))))
 ))
 (let (($x188 (and $x92 $x187)))
 (let (($x189 (= $x188 true)))
 (let ((?x12 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x93 (concat ?x127 (concat ?x77 ?x12)))))
 (let (($x125 (= input.dst.llvm-%m ?x61)))
 (let ((?x45 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x113 (concat ?x136 (concat ?x95 (concat ?x135 ?x45)))))
 (let (($x138 (= input.dst.llvm-%n ?x113)))
 (let (($x148 (and $x138 $x125)))
 (let (($x122 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x152 (and $x122 $x148)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x62)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x147 (= (_ bv0 32) ?x119)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let ((?x101 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x103 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x101)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (and $x88 $x103)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (and $x60 $x78)))
 (let (($x64 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (and $x56 $x100)))
 (let (($x20 (not $x15)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (and $x26 $x126)))
 (let (($x105 (and (not $x41) $x20)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x80 $x68)))
 (let (($x96 (not $x66)))
 (let (($x146 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x72 $x146)))
 (let (($x5 (and (not $x35) $x96)))
 (let (($x132 (and (and (and (and (and (and $x5 $x105) $x13) $x64) $x76) $x130) $x147)))
 (let (($x48 (and $x132 $x28)))
 (let (($x33 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x98)))
 (let (($x87 (or false (or false (and (and true (or $x124 $x42)) (or $x37 $x58))))))
 (let (($x8 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x87)))
 (let (($x155 (and (and (and $x8 $x33) $x48) $x152)))
 (let (($x156 (= $x155 true)))
 (let (($x34 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x157 (and $x34 $x156)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x158 (and $x89 $x157)))
 (let (($x97 (forall ((input.ind-%var305X (_ BitVec 32)) )(let (($x40 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var305X)))
 (=> $x40 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var305X) (_ bv0 32)))))
 ))
 (let (($x53 (forall ((input.ind-%var304X (_ BitVec 32)) )(let (($x40 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var304X)))
 (= $x40 false)))
 ))
 (let (($x54 (and $x53 $x97)))
 (let (($x82 (and $x54 $x158)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x121 (and $x65 $x82)))
 (let (($x190 (=> $x121 $x189)))
 (not $x190))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x187 (forall ((input.ind-%var317X (_ BitVec 32)) )(let ((?x174 (bvadd (bvmul input.ind-%var317X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv1 32))) (select input.dst.llvm-mem ?x174))))
 (let ((?x184 (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x174 (_ bv2 32))) ?x178))))
 (let ((?x102 (input.spec-%tmpvar-10.E0%0%d.1.1 input.ind-%var317X)))
 (let (($x21 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var317X)))
 (=> $x21 (= ?x102 ?x184))))))))
 ))
 (let (($x92 (forall ((input.ind-%var316X (_ BitVec 32)) )(let (($x21 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var316X)))
 (= $x21 (and (bvule (_ bv0 32) input.ind-%var316X) (bvult input.ind-%var316X input.dst.llvm-%n)))))
 ))
 (let (($x188 (and $x92 $x187)))
 (let (($x189 (= $x188 true)))
 (let ((?x12 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x127 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x93 (concat ?x127 (concat ?x77 ?x12)))))
 (let (($x125 (= input.dst.llvm-%m ?x61)))
 (let ((?x45 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x135 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x113 (concat ?x136 (concat ?x95 (concat ?x135 ?x45)))))
 (let (($x138 (= input.dst.llvm-%n ?x113)))
 (let (($x148 (and $x138 $x125)))
 (let (($x122 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x152 (and $x122 $x148)))
 (let ((?x62 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x62)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x147 (= (_ bv0 32) ?x119)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x145)))
 (let ((?x101 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x103 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x101)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (and $x88 $x103)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (and $x60 $x78)))
 (let (($x64 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (and $x56 $x100)))
 (let (($x20 (not $x15)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (and $x26 $x126)))
 (let (($x105 (and (not $x41) $x20)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x80 $x68)))
 (let (($x96 (not $x66)))
 (let (($x146 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x72 $x146)))
 (let (($x5 (and (not $x35) $x96)))
 (let (($x132 (and (and (and (and (and (and $x5 $x105) $x13) $x64) $x76) $x130) $x147)))
 (let (($x48 (and $x132 $x28)))
 (let (($x33 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x42 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x98)))
 (let (($x87 (or false (or false (and (and true (or $x124 $x42)) (or $x37 $x58))))))
 (let (($x8 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x87)))
 (let (($x155 (and (and (and $x8 $x33) $x48) $x152)))
 (let (($x156 (= $x155 true)))
 (let (($x34 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x157 (and $x34 $x156)))
 (let (($x89 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x158 (and $x89 $x157)))
 (let (($x97 (forall ((input.ind-%var305X (_ BitVec 32)) )(let (($x40 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var305X)))
 (=> $x40 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var305X) (_ bv0 32)))))
 ))
 (let (($x53 (forall ((input.ind-%var304X (_ BitVec 32)) )(let (($x40 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var304X)))
 (= $x40 false)))
 ))
 (let (($x54 (and $x53 $x97)))
 (let (($x82 (and $x54 $x158)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x121 (and $x65 $x82)))
 (let (($x190 (=> $x121 $x189)))
 (not $x190))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.ind-%var317X!1 () (_ BitVec 32)
    #x3fffffc1)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x000000fc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000004) #xfc
      #x00))
  (define-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((x!0 (_ BitVec 32))) Bool
    true)
  (define-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000001)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.ind-%var316X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.ind-%var317X!1 () (_ BitVec 32)
    #x3fffffc0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffff0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x000000f8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffff3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffff0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xfffffffc) #xf8
    (ite (= x!0 #xfffffff0) #x01
      #x00)))
  (define-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x162 (forall ((input.ind-%var357X (_ BitVec 32)) )(let ((?x141 (bvadd (bvmul input.ind-%var357X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv1 32))) (select input.dst.llvm-mem ?x141))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv2 32))) ?x107))))
 (=> false (= (_ bv0 32) ?x169))))))
 ))
 (let (($x187 (forall ((input.ind-%var356X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var356X) (bvult input.ind-%var356X (_ bv0 32)))))
 ))
 (let (($x163 (and $x187 $x162)))
 (let (($x161 (= $x163 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x43 (concat ?x21 (concat ?x158 (concat ?x155 ?x148)))))
 (let (($x123 (= input.dst.llvm-%m ?x43)))
 (let ((?x113 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x91 (concat ?x109 (concat ?x144 (concat ?x19 ?x113)))))
 (let (($x61 (= input.dst.llvm-%n ?x91)))
 (let (($x139 (and $x61 $x123)))
 (let (($x45 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x44 (and $x45 $x139)))
 (let ((?x11 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x11)))
 (let ((?x48 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x48)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x119 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x27)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x147 (and $x145 $x119)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (and $x85 $x147)))
 (let (($x76 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x137 $x64)))
 (let (($x60 (not $x39)))
 (let (($x13 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x115 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x59 (and $x115 $x13)))
 (let (($x86 (and (not $x59) $x60)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x56 $x100)))
 (let (($x20 (not $x15)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x126 $x41)))
 (let (($x17 (and (not $x70) $x20)))
 (let (($x133 (and (and (and (and (and (and $x17 $x86) $x103) $x76) $x132) $x28) $x154)))
 (let (($x24 (and $x133 $x71)))
 (let (($x94 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x114 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x73 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x87)))
 (let (($x96 (or false (or false (and (and true (or $x8 $x73)) (or $x35 $x114))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x96)))
 (let (($x90 (and (and (and $x26 $x94) $x24) $x44)))
 (let (($x173 (= $x90 true)))
 (let (($x55 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x174 (and $x55 $x173)))
 (let (($x124 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x182 (and $x124 $x174)))
 (let (($x63 (forall ((input.ind-%var347X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var347X)))
 (=> $x46 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var347X) (_ bv0 32)))))
 ))
 (let (($x49 (forall ((input.ind-%var346X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var346X)))
 (= $x46 false)))
 ))
 (let (($x74 (and $x49 $x63)))
 (let (($x183 (and $x74 $x182)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x179 (and $x151 $x183)))
 (let (($x164 (=> $x179 $x161)))
 (not $x164))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x162 (forall ((input.ind-%var357X (_ BitVec 32)) )(let ((?x141 (bvadd (bvmul input.ind-%var357X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x107 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv1 32))) (select input.dst.llvm-mem ?x141))))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x141 (_ bv2 32))) ?x107))))
 (=> false (= (_ bv0 32) ?x169))))))
 ))
 (let (($x187 (forall ((input.ind-%var356X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var356X) (bvult input.ind-%var356X (_ bv0 32)))))
 ))
 (let (($x163 (and $x187 $x162)))
 (let (($x161 (= $x163 true)))
 (let ((?x148 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x158 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x43 (concat ?x21 (concat ?x158 (concat ?x155 ?x148)))))
 (let (($x123 (= input.dst.llvm-%m ?x43)))
 (let ((?x113 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x19 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x91 (concat ?x109 (concat ?x144 (concat ?x19 ?x113)))))
 (let (($x61 (= input.dst.llvm-%n ?x91)))
 (let (($x139 (and $x61 $x123)))
 (let (($x45 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x44 (and $x45 $x139)))
 (let ((?x11 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x11)))
 (let ((?x48 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x48)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x119 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x27)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x147 (and $x145 $x119)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x132 (and $x85 $x147)))
 (let (($x76 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x137 $x64)))
 (let (($x60 (not $x39)))
 (let (($x13 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x115 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x59 (and $x115 $x13)))
 (let (($x86 (and (not $x59) $x60)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x56 $x100)))
 (let (($x20 (not $x15)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x70 (and $x126 $x41)))
 (let (($x17 (and (not $x70) $x20)))
 (let (($x133 (and (and (and (and (and (and $x17 $x86) $x103) $x76) $x132) $x28) $x154)))
 (let (($x24 (and $x133 $x71)))
 (let (($x94 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x114 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x73 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x87)))
 (let (($x96 (or false (or false (and (and true (or $x8 $x73)) (or $x35 $x114))))))
 (let (($x26 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x96)))
 (let (($x90 (and (and (and $x26 $x94) $x24) $x44)))
 (let (($x173 (= $x90 true)))
 (let (($x55 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x174 (and $x55 $x173)))
 (let (($x124 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x182 (and $x124 $x174)))
 (let (($x63 (forall ((input.ind-%var347X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var347X)))
 (=> $x46 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var347X) (_ bv0 32)))))
 ))
 (let (($x49 (forall ((input.ind-%var346X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var346X)))
 (= $x46 false)))
 ))
 (let (($x74 (and $x49 $x63)))
 (let (($x183 (and $x74 $x182)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x179 (and $x151 $x183)))
 (let (($x164 (=> $x179 $x161)))
 (not $x164))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x177 (forall ((input.ind-%var381X (_ BitVec 32)) )(let ((?x176 (bvadd (bvmul input.ind-%var381X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x142))))
 (=> false (= (_ bv0 32) ?x140))))))
 ))
 (let (($x161 (forall ((input.ind-%var380X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var380X) (bvult input.ind-%var380X input.dst.llvm-%m))))
 ))
 (let (($x175 (and $x161 $x177)))
 (let (($x178 (= $x175 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x184 (concat ?x182 (concat ?x90 ?x139)))))
 (let (($x185 (= input.dst.llvm-%m ?x181)))
 (let ((?x91 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x82 (concat ?x156 (concat ?x152 (concat ?x121 ?x91)))))
 (let (($x43 (= input.dst.llvm-%n ?x82)))
 (let (($x186 (and $x43 $x185)))
 (let (($x113 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x187 (and $x113 $x186)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x95)))
 (let ((?x24 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x102 (= (_ bv0 32) ?x24)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let ((?x136 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x48 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x136)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x62 $x48)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x104 $x154)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x116 (and $x78 $x76)))
 (let (($x85 (not $x116)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x122 (and $x101 $x103)))
 (let (($x130 (and (not $x122) $x85)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (and $x137 $x64)))
 (let (($x60 (not $x39)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x13 $x59)))
 (let (($x131 (and (not $x88) $x60)))
 (let (($x129 (and (and (and (and (and (and $x131 $x130) $x119) $x132) $x133) $x71) $x102)))
 (let (($x127 (and $x129 $x118)))
 (let (($x146 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x105 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x96 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x37 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x96)))
 (let (($x20 (or false (or false (and (and true (or $x26 $x37)) (or $x70 $x105))))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x20)))
 (let (($x141 (and (and (and $x115 $x146) $x127) $x187)))
 (let (($x160 (= $x141 true)))
 (let (($x33 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x168 (and $x33 $x160)))
 (let (($x8 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x149 (and $x8 $x168)))
 (let (($x5 (forall ((input.ind-%var371X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var371X)))
 (=> $x14 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var371X) (_ bv0 32)))))
 ))
 (let (($x31 (forall ((input.ind-%var370X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var370X)))
 (= $x14 false)))
 ))
 (let (($x99 (and $x31 $x5)))
 (let (($x52 (and $x99 $x149)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x134 (and $x189 $x52)))
 (let (($x51 (=> $x134 $x178)))
 (not $x51))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x177 (forall ((input.ind-%var381X (_ BitVec 32)) )(let ((?x176 (bvadd (bvmul input.ind-%var381X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x142 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv1 32))) (select input.dst.llvm-mem ?x176))))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x176 (_ bv2 32))) ?x142))))
 (=> false (= (_ bv0 32) ?x140))))))
 ))
 (let (($x161 (forall ((input.ind-%var380X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var380X) (bvult input.ind-%var380X input.dst.llvm-%m))))
 ))
 (let (($x175 (and $x161 $x177)))
 (let (($x178 (= $x175 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x184 (concat ?x182 (concat ?x90 ?x139)))))
 (let (($x185 (= input.dst.llvm-%m ?x181)))
 (let ((?x91 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x82 (concat ?x156 (concat ?x152 (concat ?x121 ?x91)))))
 (let (($x43 (= input.dst.llvm-%n ?x82)))
 (let (($x186 (and $x43 $x185)))
 (let (($x113 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x187 (and $x113 $x186)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x95)))
 (let ((?x24 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x102 (= (_ bv0 32) ?x24)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x71 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let ((?x136 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x48 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x136)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x62 $x48)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (and $x104 $x154)))
 (let (($x132 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x116 (and $x78 $x76)))
 (let (($x85 (not $x116)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x122 (and $x101 $x103)))
 (let (($x130 (and (not $x122) $x85)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (and $x137 $x64)))
 (let (($x60 (not $x39)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x13 $x59)))
 (let (($x131 (and (not $x88) $x60)))
 (let (($x129 (and (and (and (and (and (and $x131 $x130) $x119) $x132) $x133) $x71) $x102)))
 (let (($x127 (and $x129 $x118)))
 (let (($x146 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x105 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x96 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x37 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x96)))
 (let (($x20 (or false (or false (and (and true (or $x26 $x37)) (or $x70 $x105))))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x20)))
 (let (($x141 (and (and (and $x115 $x146) $x127) $x187)))
 (let (($x160 (= $x141 true)))
 (let (($x33 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x168 (and $x33 $x160)))
 (let (($x8 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x149 (and $x8 $x168)))
 (let (($x5 (forall ((input.ind-%var371X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var371X)))
 (=> $x14 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var371X) (_ bv0 32)))))
 ))
 (let (($x31 (forall ((input.ind-%var370X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var370X)))
 (= $x14 false)))
 ))
 (let (($x99 (and $x31 $x5)))
 (let (($x52 (and $x99 $x149)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x134 (and $x189 $x52)))
 (let (($x51 (=> $x134 $x178)))
 (not $x51))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.ind-%var380X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x0000000c)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x0000000f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x0000000c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x0000000c) #x04
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.ind-%var380X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xddbf7764)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2fb4bde0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2fb4bde3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xddbf7767)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2fb4bde0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xddbf7764)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xddbf7764) #x04
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x107 (forall ((input.ind-%var409X (_ BitVec 32)) )(let ((?x36 (bvadd (bvmul input.ind-%var409X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x83))))
 (=> false (= (_ bv0 32) ?x22))))))
 ))
 (let (($x51 (forall ((input.ind-%var408X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var408X) (bvult input.ind-%var408X input.dst.llvm-%n))))
 ))
 (let (($x159 (and $x51 $x107)))
 (let (($x169 (= $x159 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x162 (concat ?x165 (concat ?x52 (concat ?x160 ?x187)))))
 (let (($x163 (= input.dst.llvm-%m ?x162)))
 (let ((?x43 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x183 (concat ?x90 (concat ?x184 ?x43)))))
 (let (($x185 (= input.dst.llvm-%n ?x181)))
 (let (($x161 (and $x185 $x163)))
 (let (($x21 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x47 (and $x21 $x161)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x19 (= (_ bv0 32) ?x138)))
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x144 (= (_ bv0 32) ?x50)))
 (let ((?x118 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x118)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x24)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x129 (and $x71 $x102)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x11 $x129)))
 (let (($x12 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x104 (and $x132 $x10)))
 (let (($x62 (not $x104)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x147 (and $x119 $x45)))
 (let (($x136 (and (not $x147) $x62)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x76 $x116)))
 (let (($x130 (not $x85)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x122 $x145)))
 (let (($x27 (and (not $x78) $x130)))
 (let (($x158 (and (and (and (and (and (and $x27 $x136) $x154) $x12) $x95) $x127) $x144)))
 (let (($x152 (and $x158 $x19)))
 (let (($x105 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x137 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x115 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x146 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x115)))
 (let (($x131 (or false (or false (and (and true (or $x35 $x146)) (or $x86 $x137))))))
 (let (($x103 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x131)))
 (let (($x106 (and (and (and $x103 $x105) $x152) $x47)))
 (let (($x110 (= $x106 true)))
 (let (($x92 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x69 (and $x92 $x110)))
 (let (($x66 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x7 (and $x66 $x69)))
 (let (($x68 (forall ((input.ind-%var399X (_ BitVec 32)) )(let (($x31 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var399X)))
 (=> $x31 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var399X) (_ bv0 32)))))
 ))
 (let (($x143 (forall ((input.ind-%var398X (_ BitVec 32)) )(let (($x31 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var398X)))
 (= $x31 false)))
 ))
 (let (($x96 (and $x143 $x68)))
 (let (($x38 (and $x96 $x7)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x32 (and $x189 $x38)))
 (let (($x34 (=> $x32 $x169)))
 (not $x34))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x107 (forall ((input.ind-%var409X (_ BitVec 32)) )(let ((?x36 (bvadd (bvmul input.ind-%var409X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv1 32))) (select input.dst.llvm-mem ?x36))))
 (let ((?x22 (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x36 (_ bv2 32))) ?x83))))
 (=> false (= (_ bv0 32) ?x22))))))
 ))
 (let (($x51 (forall ((input.ind-%var408X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var408X) (bvult input.ind-%var408X input.dst.llvm-%n))))
 ))
 (let (($x159 (and $x51 $x107)))
 (let (($x169 (= $x159 true)))
 (let ((?x187 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x52 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x162 (concat ?x165 (concat ?x52 (concat ?x160 ?x187)))))
 (let (($x163 (= input.dst.llvm-%m ?x162)))
 (let ((?x43 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x183 (concat ?x90 (concat ?x184 ?x43)))))
 (let (($x185 (= input.dst.llvm-%n ?x181)))
 (let (($x161 (and $x185 $x163)))
 (let (($x21 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x47 (and $x21 $x161)))
 (let ((?x138 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x19 (= (_ bv0 32) ?x138)))
 (let ((?x50 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x144 (= (_ bv0 32) ?x50)))
 (let ((?x118 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x127 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x118)))
 (let ((?x24 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x24)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x129 (and $x71 $x102)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x11 $x129)))
 (let (($x12 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x104 (and $x132 $x10)))
 (let (($x62 (not $x104)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x147 (and $x119 $x45)))
 (let (($x136 (and (not $x147) $x62)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x76 $x116)))
 (let (($x130 (not $x85)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x122 $x145)))
 (let (($x27 (and (not $x78) $x130)))
 (let (($x158 (and (and (and (and (and (and $x27 $x136) $x154) $x12) $x95) $x127) $x144)))
 (let (($x152 (and $x158 $x19)))
 (let (($x105 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x137 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x115 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x115)))
 (let (($x146 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x115)))
 (let (($x131 (or false (or false (and (and true (or $x35 $x146)) (or $x86 $x137))))))
 (let (($x103 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x131)))
 (let (($x106 (and (and (and $x103 $x105) $x152) $x47)))
 (let (($x110 (= $x106 true)))
 (let (($x92 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x69 (and $x92 $x110)))
 (let (($x66 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x7 (and $x66 $x69)))
 (let (($x68 (forall ((input.ind-%var399X (_ BitVec 32)) )(let (($x31 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var399X)))
 (=> $x31 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var399X) (_ bv0 32)))))
 ))
 (let (($x143 (forall ((input.ind-%var398X (_ BitVec 32)) )(let (($x31 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var398X)))
 (= $x31 false)))
 ))
 (let (($x96 (and $x143 $x68)))
 (let (($x38 (and $x96 $x7)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x32 (and $x189 $x38)))
 (let (($x34 (=> $x32 $x169)))
 (not $x34))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x060080b4)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.ind-%var408X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x03806cb0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x060080b7)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x03806cb3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x060080b4)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x03806cb0)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x060080b4) #x01
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x0d7ffffc)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xff7ffff8)
  (define-fun input.ind-%var408X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xff7ffffb)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x0d7fffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xff7ffff8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x0d7ffffc)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xff7ffff8) #x01
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x82 (forall ((input.ind-%var439X (_ BitVec 32)) )(=> false (= (_ bv0 32) (spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var439X))))
 ))
 (let (($x107 (forall ((input.ind-%var438X (_ BitVec 32)) )(let (($x53 (spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var438X)))
 (= false $x53)))
 ))
 (let (($x98 (and $x107 $x82)))
 (let (($x16 (= $x98 true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x84 (concat ?x38 (concat ?x110 ?x47)))))
 (let (($x178 (= input.dst.llvm-%m ?x175)))
 (let ((?x185 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x162 (concat ?x134 (concat ?x160 (concat ?x165 ?x185)))))
 (let (($x163 (= input.dst.llvm-%n ?x162)))
 (let (($x51 (and $x163 $x178)))
 (let (($x174 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x153 (and $x174 $x51)))
 (let ((?x121 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x121)))
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x176)))
 (let ((?x19 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x19)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x50)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x158 (and $x127 $x144)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (and $x118 $x158)))
 (let (($x156 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x129 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x12 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (and $x12 $x148)))
 (let (($x71 (not $x11)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x133 (and $x154 $x93)))
 (let (($x24 (and (not $x133) $x71)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x10 $x104)))
 (let (($x136 (not $x62)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x147 $x28)))
 (let (($x48 (and (not $x132) $x136)))
 (let (($x44 (and (and (and (and (and (and $x48 $x24) $x129) $x156) $x138) $x152) $x61)))
 (let (($x90 (and $x44 $x91)))
 (let (($x137 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x103 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x105 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x103)))
 (let (($x27 (or false (or false (and (and true (or $x41 $x105)) (or $x135 $x76))))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x27)))
 (let (($x89 (and (and (and $x45 $x137) $x90) $x153)))
 (let (($x108 (= $x89 true)))
 (let (($x13 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x54 (and $x13 $x108)))
 (let (($x20 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x18 (and $x20 $x54)))
 (let (($x15 (forall ((input.ind-%var427X (_ BitVec 32)) )(let (($x143 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var427X)))
 (=> $x143 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var427X) (_ bv0 32)))))
 ))
 (let (($x17 (forall ((input.ind-%var426X (_ BitVec 32)) )(let (($x143 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var426X)))
 (= $x143 false)))
 ))
 (let (($x115 (and $x17 $x15)))
 (let (($x125 (and $x115 $x18)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x112 (and $x189 $x125)))
 (let (($x5 (=> $x112 $x16)))
 (not $x5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x82 (forall ((input.ind-%var439X (_ BitVec 32)) )(=> false (= (_ bv0 32) (spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var439X))))
 ))
 (let (($x107 (forall ((input.ind-%var438X (_ BitVec 32)) )(let (($x53 (spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var438X)))
 (= false $x53)))
 ))
 (let (($x98 (and $x107 $x82)))
 (let (($x16 (= $x98 true)))
 (let ((?x47 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x84 (concat ?x38 (concat ?x110 ?x47)))))
 (let (($x178 (= input.dst.llvm-%m ?x175)))
 (let ((?x185 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x162 (concat ?x134 (concat ?x160 (concat ?x165 ?x185)))))
 (let (($x163 (= input.dst.llvm-%n ?x162)))
 (let (($x51 (and $x163 $x178)))
 (let (($x174 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x153 (and $x174 $x51)))
 (let ((?x121 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x121)))
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x176)))
 (let ((?x19 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x19)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x50)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x158 (and $x127 $x144)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x138 (and $x118 $x158)))
 (let (($x156 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x129 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x12 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (and $x12 $x148)))
 (let (($x71 (not $x11)))
 (let (($x93 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x133 (and $x154 $x93)))
 (let (($x24 (and (not $x133) $x71)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x10 $x104)))
 (let (($x136 (not $x62)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x147 $x28)))
 (let (($x48 (and (not $x132) $x136)))
 (let (($x44 (and (and (and (and (and (and $x48 $x24) $x129) $x156) $x138) $x152) $x61)))
 (let (($x90 (and $x44 $x91)))
 (let (($x137 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x103 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x103)))
 (let (($x105 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x103)))
 (let (($x27 (or false (or false (and (and true (or $x41 $x105)) (or $x135 $x76))))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x27)))
 (let (($x89 (and (and (and $x45 $x137) $x90) $x153)))
 (let (($x108 (= $x89 true)))
 (let (($x13 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x54 (and $x13 $x108)))
 (let (($x20 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x18 (and $x20 $x54)))
 (let (($x15 (forall ((input.ind-%var427X (_ BitVec 32)) )(let (($x143 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var427X)))
 (=> $x143 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var427X) (_ bv0 32)))))
 ))
 (let (($x17 (forall ((input.ind-%var426X (_ BitVec 32)) )(let (($x143 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var426X)))
 (= $x143 false)))
 ))
 (let (($x115 (and $x17 $x15)))
 (let (($x125 (and $x115 $x18)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x112 (and $x189 $x125)))
 (let (($x5 (=> $x112 $x16)))
 (not $x5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x08000000)
  (define-fun input.ind-%var438X!3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x08000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x08000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    true)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.ind-%var438X!3 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x3e71f944)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6bb488a0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6bb488a3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x3e71f947)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6bb488a0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x3e71f944)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    true)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x181 (= false true)))
 (let ((?x153 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x107 (concat ?x97 (concat ?x125 (concat ?x108 ?x153)))))
 (let (($x34 (= input.dst.llvm-%m ?x107)))
 (let ((?x163 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x32 (concat ?x110 (concat ?x84 ?x163)))))
 (let (($x178 (= input.dst.llvm-%n ?x175)))
 (let (($x70 (and $x178 $x34)))
 (let (($x149 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x186 (and $x149 $x70)))
 (let ((?x184 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x43 (= (_ bv0 32) ?x184)))
 (let ((?x36 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x179 (= (_ bv0 32) ?x36)))
 (let ((?x91 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x90 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x61 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x176)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x44 (and $x152 $x61)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (and $x19 $x44)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x118 (and $x156 $x173)))
 (let (($x127 (not $x118)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x129 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x95 (and $x129 $x155)))
 (let (($x50 (and (not $x95) $x127)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x148 $x11)))
 (let (($x24 (not $x71)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x133 $x109)))
 (let (($x102 (and (not $x12) $x24)))
 (let (($x141 (and (and (and (and (and (and $x102 $x50) $x158) $x183) $x121) $x90) $x179)))
 (let (($x160 (and $x141 $x43)))
 (let (($x76 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x137 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x48 (or false (or false (and (and true (or $x88 $x137)) (or $x113 $x10))))))
 (let (($x93 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x48)))
 (let (($x16 (and (and (and $x93 $x76) $x160) $x186)))
 (let (($x5 (= $x16 true)))
 (let (($x122 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x87 (and $x122 $x5)))
 (let (($x131 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x59 (and $x131 $x87)))
 (let (($x60 (forall ((input.ind-%var465X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var465X)))
 (=> $x17 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var465X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var464X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var464X)))
 (= $x17 false)))
 ))
 (let (($x103 (and $x101 $x60)))
 (let (($x86 (and $x103 $x59)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x161 (and $x189 $x86)))
 (let (($x8 (=> $x161 $x181)))
 (not $x8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x181 (= false true)))
 (let ((?x153 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x107 (concat ?x97 (concat ?x125 (concat ?x108 ?x153)))))
 (let (($x34 (= input.dst.llvm-%m ?x107)))
 (let ((?x163 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x84 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x32 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x32 (concat ?x110 (concat ?x84 ?x163)))))
 (let (($x178 (= input.dst.llvm-%n ?x175)))
 (let (($x70 (and $x178 $x34)))
 (let (($x149 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x186 (and $x149 $x70)))
 (let ((?x184 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x43 (= (_ bv0 32) ?x184)))
 (let ((?x36 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x179 (= (_ bv0 32) ?x36)))
 (let ((?x91 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x90 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x61 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x176)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x44 (and $x152 $x61)))
 (let (($x19 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x121 (and $x19 $x44)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x158 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x118 (and $x156 $x173)))
 (let (($x127 (not $x118)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x129 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x95 (and $x129 $x155)))
 (let (($x50 (and (not $x95) $x127)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x148 $x11)))
 (let (($x24 (not $x71)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x133 $x109)))
 (let (($x102 (and (not $x12) $x24)))
 (let (($x141 (and (and (and (and (and (and $x102 $x50) $x158) $x183) $x121) $x90) $x179)))
 (let (($x160 (and $x141 $x43)))
 (let (($x76 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x137 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x48 (or false (or false (and (and true (or $x88 $x137)) (or $x113 $x10))))))
 (let (($x93 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x48)))
 (let (($x16 (and (and (and $x93 $x76) $x160) $x186)))
 (let (($x5 (= $x16 true)))
 (let (($x122 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x87 (and $x122 $x5)))
 (let (($x131 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x59 (and $x131 $x87)))
 (let (($x60 (forall ((input.ind-%var465X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var465X)))
 (=> $x17 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var465X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var464X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var464X)))
 (= $x17 false)))
 ))
 (let (($x103 (and $x101 $x60)))
 (let (($x86 (and $x103 $x59)))
 (let (($x189 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x161 (and $x189 $x86)))
 (let (($x8 (=> $x161 $x181)))
 (not $x8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xe85473a0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x8330bb50)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x8330bb53)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xe85473a3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x8330bb50)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xe85473a0)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x166 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x165 (= (_ bv0 32) ?x166)))
 (let ((?x160 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x98 (= (_ bv0 32) ?x160)))
 (let ((?x184 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x184)))
 (let ((?x52 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x52)))
 (let (($x91 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x179 (and $x91 $x36)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (and $x134 $x179)))
 (let (($x121 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x168 (and $x138 $x183)))
 (let (($x19 (not $x168)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (and $x144 $x158)))
 (let (($x182 (and (not $x139) $x19)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x156 $x173)))
 (let (($x127 (not $x118)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x155 $x95)))
 (let (($x174 (and (not $x157) $x127)))
 (let (($x38 (and (and (and (and (and (and $x174 $x182) $x61) $x121) $x141) $x43) $x98)))
 (let (($x106 (and $x38 $x165)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x48 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x78 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x48)))
 (let (($x24 (or false (or false (and (and true (or $x93 $x78)) (or $x12 $x21))))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x24)))
 (let (($x159 (and $x129 $x106)))
 (let (($x115 (= $x159 true)))
 (let ((?x70 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x181 (concat ?x59 (concat ?x16 ?x70)))))
 (let (($x37 (= input.dst.llvm-%m ?x8)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x112 (concat ?x54 (concat ?x89 (concat ?x53 ?x175)))))
 (let (($x107 (= input.dst.llvm-%n ?x112)))
 (let (($x135 (and $x107 $x37)))
 (let (($x163 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x51 (and $x163 $x135)))
 (let (($x146 (and (and (and $x129 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x106) $x51)))
 (let (($x35 (= $x146 true)))
 (let (($x111 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x58 (and $x111 $x35)))
 (let (($x88 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x143 (and $x88 $x58)))
 (let (($x154 (forall ((input.ind-%var483X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var483X)))
 (=> $x100 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var483X) (_ bv0 32)))))
 ))
 (let (($x39 (forall ((input.ind-%var482X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var482X)))
 (= $x100 false)))
 ))
 (let (($x130 (and $x39 $x154)))
 (let (($x94 (and $x130 $x143)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x13 (and $x65 $x94)))
 (let (($x64 (=> $x13 $x115)))
 (not $x64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x166 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x165 (= (_ bv0 32) ?x166)))
 (let ((?x160 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x98 (= (_ bv0 32) ?x160)))
 (let ((?x184 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x184)))
 (let ((?x52 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x52)))
 (let (($x91 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x179 (and $x91 $x36)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (and $x134 $x179)))
 (let (($x121 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x168 (and $x138 $x183)))
 (let (($x19 (not $x168)))
 (let (($x158 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (and $x144 $x158)))
 (let (($x182 (and (not $x139) $x19)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x156 $x173)))
 (let (($x127 (not $x118)))
 (let (($x95 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x155 $x95)))
 (let (($x174 (and (not $x157) $x127)))
 (let (($x38 (and (and (and (and (and (and $x174 $x182) $x61) $x121) $x141) $x43) $x98)))
 (let (($x106 (and $x38 $x165)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x48 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x78 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x48)))
 (let (($x24 (or false (or false (and (and true (or $x93 $x78)) (or $x12 $x21))))))
 (let (($x129 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x24)))
 (let (($x159 (and $x129 $x106)))
 (let (($x115 (= $x159 true)))
 (let ((?x70 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x181 (concat ?x59 (concat ?x16 ?x70)))))
 (let (($x37 (= input.dst.llvm-%m ?x8)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x54 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x112 (concat ?x54 (concat ?x89 (concat ?x53 ?x175)))))
 (let (($x107 (= input.dst.llvm-%n ?x112)))
 (let (($x135 (and $x107 $x37)))
 (let (($x163 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x51 (and $x163 $x135)))
 (let (($x146 (and (and (and $x129 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x106) $x51)))
 (let (($x35 (= $x146 true)))
 (let (($x111 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x58 (and $x111 $x35)))
 (let (($x88 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x143 (and $x88 $x58)))
 (let (($x154 (forall ((input.ind-%var483X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var483X)))
 (=> $x100 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var483X) (_ bv0 32)))))
 ))
 (let (($x39 (forall ((input.ind-%var482X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var482X)))
 (= $x100 false)))
 ))
 (let (($x130 (and $x39 $x154)))
 (let (($x94 (and $x130 $x143)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x13 (and $x65 $x94)))
 (let (($x64 (=> $x13 $x115)))
 (not $x64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x180 (= (_ bv0 32) input.dst.llvm-%n)))
 (let (($x15 (= $x180 true)))
 (let ((?x51 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x64 (concat ?x115 (concat ?x94 (concat ?x35 ?x51)))))
 (let (($x22 (= input.dst.llvm-%m ?x64)))
 (let ((?x107 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x86 (concat ?x16 (concat ?x181 ?x107)))))
 (let (($x37 (= input.dst.llvm-%n ?x8)))
 (let (($x147 (and $x37 $x22)))
 (let (($x97 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x28 (and $x97 $x147)))
 (let ((?x177 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x177)))
 (let ((?x66 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x110 (= (_ bv0 32) ?x66)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let ((?x160 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x160)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x38 (and $x43 $x98)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (and $x184 $x38)))
 (let (($x69 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (and $x121 $x187)))
 (let (($x91 (not $x134)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x61 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x61 $x149)))
 (let (($x52 (and (not $x44) $x91)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x183 $x168)))
 (let (($x182 (not $x19)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (and $x139 $x152)))
 (let (($x176 (and (not $x138) $x182)))
 (let (($x125 (and (and (and (and (and (and $x176 $x52) $x179) $x69) $x166) $x106) $x110)))
 (let (($x89 (and $x125 $x84)))
 (let (($x21 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x156 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x129 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x129)))
 (let (($x174 (or false (or false (and (and true (or $x113 $x132)) (or $x50 $x156))))))
 (let (($x158 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x174)))
 (let (($x101 (and (and (and $x158 $x21) $x89) $x28)))
 (let (($x131 (= $x101 true)))
 (let (($x82 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x103 (and $x82 $x131)))
 (let (($x136 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x189 (and $x136 $x103)))
 (let (($x62 (forall ((input.ind-%var493X (_ BitVec 32)) )(let (($x39 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var493X)))
 (=> $x39 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var493X) (_ bv0 32)))))
 ))
 (let (($x85 (forall ((input.ind-%var492X (_ BitVec 32)) )(let (($x39 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var492X)))
 (= $x39 false)))
 ))
 (let (($x48 (and $x85 $x62)))
 (let (($x80 (and $x48 $x189)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x20 (and $x65 $x80)))
 (let (($x60 (=> $x20 $x15)))
 (not $x60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x180 (= (_ bv0 32) input.dst.llvm-%n)))
 (let (($x15 (= $x180 true)))
 (let ((?x51 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x94 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x64 (concat ?x115 (concat ?x94 (concat ?x35 ?x51)))))
 (let (($x22 (= input.dst.llvm-%m ?x64)))
 (let ((?x107 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x86 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x8 (concat ?x86 (concat ?x16 (concat ?x181 ?x107)))))
 (let (($x37 (= input.dst.llvm-%n ?x8)))
 (let (($x147 (and $x37 $x22)))
 (let (($x97 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x28 (and $x97 $x147)))
 (let ((?x177 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x177)))
 (let ((?x66 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x110 (= (_ bv0 32) ?x66)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x106 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let ((?x160 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x160)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x38 (and $x43 $x98)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (and $x184 $x38)))
 (let (($x69 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x134 (and $x121 $x187)))
 (let (($x91 (not $x134)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x61 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x61 $x149)))
 (let (($x52 (and (not $x44) $x91)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x183 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x19 (and $x183 $x168)))
 (let (($x182 (not $x19)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x138 (and $x139 $x152)))
 (let (($x176 (and (not $x138) $x182)))
 (let (($x125 (and (and (and (and (and (and $x176 $x52) $x179) $x69) $x166) $x106) $x110)))
 (let (($x89 (and $x125 $x84)))
 (let (($x21 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x156 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x129 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x132 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x113 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x129)))
 (let (($x174 (or false (or false (and (and true (or $x113 $x132)) (or $x50 $x156))))))
 (let (($x158 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x174)))
 (let (($x101 (and (and (and $x158 $x21) $x89) $x28)))
 (let (($x131 (= $x101 true)))
 (let (($x82 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x103 (and $x82 $x131)))
 (let (($x136 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x189 (and $x136 $x103)))
 (let (($x62 (forall ((input.ind-%var493X (_ BitVec 32)) )(let (($x39 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var493X)))
 (=> $x39 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var493X) (_ bv0 32)))))
 ))
 (let (($x85 (forall ((input.ind-%var492X (_ BitVec 32)) )(let (($x39 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var492X)))
 (= $x39 false)))
 ))
 (let (($x48 (and $x85 $x62)))
 (let (($x80 (and $x48 $x189)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x20 (and $x65 $x80)))
 (let (($x60 (=> $x20 $x15)))
 (not $x60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00024050)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00030114)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00004000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00024053)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00030117)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00024050)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00030114)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00004000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00024051) #x40
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x968afff8)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffff4)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000100)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffff7)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x968afffb)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffff4)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x968afff8)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000100)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000100)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xfffffff5) #x01
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x119 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x130 (bvneg ?x119)))
 (let (($x10 (= ?x130 input.dst.llvm-%n)))
 (let (($x81 (= $x10 true)))
 (let ((?x28 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x15 (concat ?x80 (concat ?x131 ?x28)))))
 (let (($x122 (= input.dst.llvm-%m ?x60)))
 (let ((?x37 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x64 (concat ?x13 (concat ?x35 (concat ?x115 ?x37)))))
 (let (($x22 (= input.dst.llvm-%n ?x64)))
 (let (($x133 (and $x22 $x122)))
 (let (($x87 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x12 (and $x87 $x133)))
 (let ((?x53 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x175 (= (_ bv0 32) ?x53)))
 (let ((?x47 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x178 (= (_ bv0 32) ?x47)))
 (let ((?x84 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x89 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (and $x106 $x110)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x165 $x125)))
 (let (($x54 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x184 (and $x69 $x153)))
 (let (($x43 (not $x184)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x179 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x179 $x7)))
 (let (($x160 (and (not $x141) $x43)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (and $x187 $x134)))
 (let (($x52 (not $x91)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x121 (and $x44 $x90)))
 (let (($x36 (and (not $x121) $x52)))
 (let (($x186 (and (and (and (and (and (and $x36 $x160) $x38) $x54) $x177) $x89) $x178)))
 (let (($x16 (and $x186 $x175)))
 (let (($x156 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x158 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x185 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x158)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x158)))
 (let (($x176 (or false (or false (and (and true (or $x109 $x21)) (or $x185 $x183))))))
 (let (($x149 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x176)))
 (let (($x41 (and (and (and $x149 $x156) $x16) $x12)))
 (let (($x27 (= $x41 true)))
 (let (($x155 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x45 (and $x155 $x27)))
 (let (($x24 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x17 (and $x24 $x45)))
 (let (($x71 (forall ((input.ind-%var511X (_ BitVec 32)) )(let (($x85 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var511X)))
 (=> $x85 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var511X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var510X (_ BitVec 32)) )(let (($x85 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var510X)))
 (= $x85 false)))
 ))
 (let (($x129 (and $x102 $x71)))
 (let (($x100 (and $x129 $x17)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x105 (and $x65 $x100)))
 (let (($x68 (=> $x105 $x81)))
 (not $x68))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x119 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x130 (bvneg ?x119)))
 (let (($x10 (= ?x130 input.dst.llvm-%n)))
 (let (($x81 (= $x10 true)))
 (let ((?x28 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x15 (concat ?x80 (concat ?x131 ?x28)))))
 (let (($x122 (= input.dst.llvm-%m ?x60)))
 (let ((?x37 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x13 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x64 (concat ?x13 (concat ?x35 (concat ?x115 ?x37)))))
 (let (($x22 (= input.dst.llvm-%n ?x64)))
 (let (($x133 (and $x22 $x122)))
 (let (($x87 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x12 (and $x87 $x133)))
 (let ((?x53 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x175 (= (_ bv0 32) ?x53)))
 (let ((?x47 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x178 (= (_ bv0 32) ?x47)))
 (let ((?x84 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x89 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x84)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x66)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (and $x106 $x110)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x165 $x125)))
 (let (($x54 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x184 (and $x69 $x153)))
 (let (($x43 (not $x184)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x179 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x179 $x7)))
 (let (($x160 (and (not $x141) $x43)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x187 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (and $x187 $x134)))
 (let (($x52 (not $x91)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x121 (and $x44 $x90)))
 (let (($x36 (and (not $x121) $x52)))
 (let (($x186 (and (and (and (and (and (and $x36 $x160) $x38) $x54) $x177) $x89) $x178)))
 (let (($x16 (and $x186 $x175)))
 (let (($x156 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x158 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x185 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x158)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x158)))
 (let (($x176 (or false (or false (and (and true (or $x109 $x21)) (or $x185 $x183))))))
 (let (($x149 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x176)))
 (let (($x41 (and (and (and $x149 $x156) $x16) $x12)))
 (let (($x27 (= $x41 true)))
 (let (($x155 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x45 (and $x155 $x27)))
 (let (($x24 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x17 (and $x24 $x45)))
 (let (($x71 (forall ((input.ind-%var511X (_ BitVec 32)) )(let (($x85 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var511X)))
 (=> $x85 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var511X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var510X (_ BitVec 32)) )(let (($x85 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var510X)))
 (= $x85 false)))
 ))
 (let (($x129 (and $x102 $x71)))
 (let (($x100 (and $x129 $x17)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x105 (and $x65 $x100)))
 (let (($x68 (=> $x105 $x81)))
 (not $x68))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 ((_ extract 7 0) input.spec-%var-n-1)))
 (let (($x137 (= (_ bv0 8) ?x39)))
 (let (($x82 (= $x137 true)))
 (let ((?x12 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x130 (concat ?x119 (concat ?x100 (concat ?x27 ?x12)))))
 (let (($x10 (= input.dst.llvm-%m ?x130)))
 (let ((?x22 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x20 (concat ?x131 (concat ?x15 ?x22)))))
 (let (($x122 (= input.dst.llvm-%n ?x60)))
 (let (($x81 (and $x122 $x10)))
 (let (($x143 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x68 (and $x143 $x81)))
 (let ((?x181 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x107 (= (_ bv0 32) ?x181)))
 (let ((?x112 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x112)))
 (let ((?x175 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x16 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x175)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x178 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x47)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (and $x89 $x178)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x84 $x186)))
 (let (($x86 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x165 (and $x54 $x5)))
 (let (($x106 (not $x165)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x166 (and $x38 $x108)))
 (let (($x66 (and (not $x166) $x106)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x153 $x184)))
 (let (($x160 (not $x43)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x141 $x32)))
 (let (($x98 (and (not $x69) $x160)))
 (let (($x146 (and (and (and (and (and (and $x98 $x66) $x125) $x86) $x53) $x16) $x161)))
 (let (($x35 (and $x146 $x107)))
 (let (($x183 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x187 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x156 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x149)))
 (let (($x36 (or false (or false (and (and true (or $x157 $x156)) (or $x163 $x187))))))
 (let (($x7 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x36)))
 (let (($x50 (and (and (and $x7 $x183) $x35) $x68)))
 (let (($x147 (= $x50 true)))
 (let (($x139 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x8 (and $x139 $x147)))
 (let (($x174 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x88 (and $x174 $x8)))
 (let (($x127 (forall ((input.ind-%var521X (_ BitVec 32)) )(let (($x102 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var521X)))
 (=> $x102 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var521X) (_ bv0 32)))))
 ))
 (let (($x144 (forall ((input.ind-%var520X (_ BitVec 32)) )(let (($x102 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var520X)))
 (= $x102 false)))
 ))
 (let (($x158 (and $x144 $x127)))
 (let (($x78 (and $x158 $x88)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x93 (and $x65 $x78)))
 (let (($x154 (=> $x93 $x82)))
 (not $x154)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 ((_ extract 7 0) input.spec-%var-n-1)))
 (let (($x137 (= (_ bv0 8) ?x39)))
 (let (($x82 (= $x137 true)))
 (let ((?x12 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x130 (concat ?x119 (concat ?x100 (concat ?x27 ?x12)))))
 (let (($x10 (= input.dst.llvm-%m ?x130)))
 (let ((?x22 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x60 (concat ?x20 (concat ?x131 (concat ?x15 ?x22)))))
 (let (($x122 (= input.dst.llvm-%n ?x60)))
 (let (($x81 (and $x122 $x10)))
 (let (($x143 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x68 (and $x143 $x81)))
 (let ((?x181 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x107 (= (_ bv0 32) ?x181)))
 (let ((?x112 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x112)))
 (let ((?x175 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x16 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x175)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x178 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x47)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (and $x89 $x178)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x84 $x186)))
 (let (($x86 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x165 (and $x54 $x5)))
 (let (($x106 (not $x165)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x166 (and $x38 $x108)))
 (let (($x66 (and (not $x166) $x106)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x153 $x184)))
 (let (($x160 (not $x43)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x141 $x32)))
 (let (($x98 (and (not $x69) $x160)))
 (let (($x146 (and (and (and (and (and (and $x98 $x66) $x125) $x86) $x53) $x16) $x161)))
 (let (($x35 (and $x146 $x107)))
 (let (($x183 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x187 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x156 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x149)))
 (let (($x36 (or false (or false (and (and true (or $x157 $x156)) (or $x163 $x187))))))
 (let (($x7 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x36)))
 (let (($x50 (and (and (and $x7 $x183) $x35) $x68)))
 (let (($x147 (= $x50 true)))
 (let (($x139 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x8 (and $x139 $x147)))
 (let (($x174 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x88 (and $x174 $x8)))
 (let (($x127 (forall ((input.ind-%var521X (_ BitVec 32)) )(let (($x102 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var521X)))
 (=> $x102 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var521X) (_ bv0 32)))))
 ))
 (let (($x144 (forall ((input.ind-%var520X (_ BitVec 32)) )(let (($x102 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var520X)))
 (= $x102 false)))
 ))
 (let (($x158 (and $x144 $x127)))
 (let (($x78 (and $x158 $x88)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x93 (and $x65 $x78)))
 (let (($x154 (=> $x93 $x82)))
 (not $x154)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000800)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x40404000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000803)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000800)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000004) #x00
      #x40))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x152a8dd0)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x81bccba0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x81bccba3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x152a8dd3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x81bccba0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x152a8dd0)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x81bccba0) #x40
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x76 ((_ extract 13 0) input.dst.llvm-%m)))
 (let (($x155 (= (_ bv0 14) ?x76)))
 (let (($x62 (= $x155 true)))
 (let ((?x68 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x137 (concat ?x39 (concat ?x78 (concat ?x147 ?x68)))))
 (let (($x82 (= input.dst.llvm-%m ?x137)))
 (let ((?x122 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x119 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x130 (concat ?x105 (concat ?x27 (concat ?x119 ?x122)))))
 (let (($x10 (= input.dst.llvm-%n ?x130)))
 (let (($x154 (and $x10 $x82)))
 (let (($x189 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x48 (and $x189 $x154)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x115)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x159 (= (_ bv0 32) ?x95)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x107)))
 (let ((?x112 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x161 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x112)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (and $x16 $x161)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (and $x175 $x146)))
 (let (($x13 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x186 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x86 $x58)))
 (let (($x89 (not $x84)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x177 (and $x125 $x70)))
 (let (($x47 (and (not $x177) $x89)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (and $x5 $x165)))
 (let (($x66 (not $x106)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x166 $x18)))
 (let (($x110 (and (not $x54) $x66)))
 (let (($x101 (and (and (and (and (and (and $x110 $x47) $x186) $x13) $x181) $x35) $x159)))
 (let (($x131 (and $x101 $x37)))
 (let (($x187 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x153 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x98 (or false (or false (and (and true (or $x138 $x183)) (or $x97 $x153))))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x133 (and (and (and $x108 $x187) $x131) $x48)))
 (let (($x64 (= $x133 true)))
 (let (($x44 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x136 (and $x44 $x64)))
 (let (($x176 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x132 (and $x176 $x136)))
 (let (($x182 (forall ((input.ind-%var539X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var539X)))
 (=> $x144 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var539X) (_ bv0 32)))))
 ))
 (let (($x61 (forall ((input.ind-%var538X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var538X)))
 (= $x144 false)))
 ))
 (let (($x149 (and $x61 $x182)))
 (let (($x113 (and $x149 $x132)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x116 (and $x65 $x113)))
 (let (($x129 (=> $x116 $x62)))
 (not $x129)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x76 ((_ extract 13 0) input.dst.llvm-%m)))
 (let (($x155 (= (_ bv0 14) ?x76)))
 (let (($x62 (= $x155 true)))
 (let ((?x68 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x137 (concat ?x39 (concat ?x78 (concat ?x147 ?x68)))))
 (let (($x82 (= input.dst.llvm-%m ?x137)))
 (let ((?x122 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x119 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x130 (concat ?x105 (concat ?x27 (concat ?x119 ?x122)))))
 (let (($x10 (= input.dst.llvm-%n ?x130)))
 (let (($x154 (and $x10 $x82)))
 (let (($x189 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x48 (and $x189 $x154)))
 (let ((?x115 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x37 (= (_ bv0 32) ?x115)))
 (let ((?x95 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x159 (= (_ bv0 32) ?x95)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x107)))
 (let ((?x112 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x161 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x112)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (and $x16 $x161)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (and $x175 $x146)))
 (let (($x13 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x186 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x86 $x58)))
 (let (($x89 (not $x84)))
 (let (($x70 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x177 (and $x125 $x70)))
 (let (($x47 (and (not $x177) $x89)))
 (let (($x165 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (and $x5 $x165)))
 (let (($x66 (not $x106)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (and $x166 $x18)))
 (let (($x110 (and (not $x54) $x66)))
 (let (($x101 (and (and (and (and (and (and $x110 $x47) $x186) $x13) $x181) $x35) $x159)))
 (let (($x131 (and $x101 $x37)))
 (let (($x187 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x153 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x183 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x98 (or false (or false (and (and true (or $x138 $x183)) (or $x97 $x153))))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x133 (and (and (and $x108 $x187) $x131) $x48)))
 (let (($x64 (= $x133 true)))
 (let (($x44 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x136 (and $x44 $x64)))
 (let (($x176 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x132 (and $x176 $x136)))
 (let (($x182 (forall ((input.ind-%var539X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var539X)))
 (=> $x144 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var539X) (_ bv0 32)))))
 ))
 (let (($x61 (forall ((input.ind-%var538X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var538X)))
 (= $x144 false)))
 ))
 (let (($x149 (and $x61 $x182)))
 (let (($x113 (and $x149 $x132)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x116 (and $x65 $x113)))
 (let (($x129 (=> $x116 $x62)))
 (not $x129)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000013)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x40)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xa9926614)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2a37f630)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x40404040)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2a37f633)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xa9926617)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2a37f630)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xa9926614)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x40404040)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x40)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x162 ((_ extract 5 0) input.dst.llvm-%m)))
 (let (($x139 (= (_ bv0 6) ?x162)))
 (let (($x71 (= $x139 true)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x76 (concat ?x113 (concat ?x64 ?x48)))))
 (let (($x62 (= input.dst.llvm-%m ?x155)))
 (let ((?x10 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x137 (concat ?x93 (concat ?x147 (concat ?x39 ?x10)))))
 (let (($x82 (= input.dst.llvm-%n ?x137)))
 (let (($x129 (and $x82 $x62)))
 (let (($x17 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x173 (and $x17 $x129)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x15)))
 (let ((?x185 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x185)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x159 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x95)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x35 $x159)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x107 $x101)))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x13 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x175 (and $x13 $x103)))
 (let (($x16 (not $x175)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x186 $x51)))
 (let (($x112 (and (not $x53) $x16)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (and $x58 $x84)))
 (let (($x47 (not $x89)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x177 $x59)))
 (let (($x178 (and (not $x86) $x47)))
 (let (($x41 (and (and (and (and (and (and $x178 $x112) $x146) $x20) $x115) $x131) $x180)))
 (let (($x27 (and $x41 $x22)))
 (let (($x153 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x108 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x187 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x108)))
 (let (($x110 (or false (or false (and (and true (or $x121 $x187)) (or $x87 $x5))))))
 (let (($x70 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x110)))
 (let (($x81 (and (and (and $x70 $x153) $x27) $x173)))
 (let (($x60 (= $x81 true)))
 (let (($x141 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x24 (and $x141 $x60)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x21 (and $x36 $x24)))
 (let (($x52 (forall ((input.ind-%var557X (_ BitVec 32)) )(let (($x61 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var557X)))
 (=> $x61 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var557X) (_ bv0 32)))))
 ))
 (let (($x179 (forall ((input.ind-%var556X (_ BitVec 32)) )(let (($x61 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var556X)))
 (= $x61 false)))
 ))
 (let (($x7 (and $x179 $x52)))
 (let (($x109 (and $x7 $x21)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x104 (and $x65 $x109)))
 (let (($x158 (=> $x104 $x71)))
 (not $x158)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x162 ((_ extract 5 0) input.dst.llvm-%m)))
 (let (($x139 (= (_ bv0 6) ?x162)))
 (let (($x71 (= $x139 true)))
 (let ((?x48 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x76 (concat ?x113 (concat ?x64 ?x48)))))
 (let (($x62 (= input.dst.llvm-%m ?x155)))
 (let ((?x10 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x137 (concat ?x93 (concat ?x147 (concat ?x39 ?x10)))))
 (let (($x82 (= input.dst.llvm-%n ?x137)))
 (let (($x129 (and $x82 $x62)))
 (let (($x17 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x173 (and $x17 $x129)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x15)))
 (let ((?x185 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x185)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x37)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x159 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x95)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (and $x35 $x159)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x107 $x101)))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x103 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x13 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x175 (and $x13 $x103)))
 (let (($x16 (not $x175)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x186 $x51)))
 (let (($x112 (and (not $x53) $x16)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (and $x58 $x84)))
 (let (($x47 (not $x89)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x177 $x59)))
 (let (($x178 (and (not $x86) $x47)))
 (let (($x41 (and (and (and (and (and (and $x178 $x112) $x146) $x20) $x115) $x131) $x180)))
 (let (($x27 (and $x41 $x22)))
 (let (($x153 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x108 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x108)))
 (let (($x187 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x108)))
 (let (($x110 (or false (or false (and (and true (or $x121 $x187)) (or $x87 $x5))))))
 (let (($x70 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x110)))
 (let (($x81 (and (and (and $x70 $x153) $x27) $x173)))
 (let (($x60 (= $x81 true)))
 (let (($x141 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x24 (and $x141 $x60)))
 (let (($x36 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x21 (and $x36 $x24)))
 (let (($x52 (forall ((input.ind-%var557X (_ BitVec 32)) )(let (($x61 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var557X)))
 (=> $x61 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var557X) (_ bv0 32)))))
 ))
 (let (($x179 (forall ((input.ind-%var556X (_ BitVec 32)) )(let (($x61 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var556X)))
 (= $x61 false)))
 ))
 (let (($x7 (and $x179 $x52)))
 (let (($x109 (and $x7 $x21)))
 (let (($x65 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x104 (and $x65 $x109)))
 (let (($x158 (=> $x104 $x71)))
 (not $x158)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x04))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x04040404)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x04040404)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x04040404)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x04040404)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x910e555c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6a2e5580)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x08))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x08080808)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x08080808)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6a2e5583)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x910e555f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6a2e5580)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x910e555c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x08080808)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x08080808)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x149 ((_ extract 5 0) input.dst.llvm-%m)))
 (let ((?x144 ((_ extract 5 0) input.spec-%var-n-1)))
 (let ((?x44 (bvmul ?x144 (_ bv63 6))))
 (let ((?x127 (bvneg ?x44)))
 (let (($x134 (= ?x127 ?x149)))
 (let (($x148 (= $x134 true)))
 (let ((?x173 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x162 (concat ?x109 (concat ?x60 ?x173)))))
 (let (($x71 (= input.dst.llvm-%m ?x139)))
 (let ((?x82 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x116 (concat ?x64 (concat ?x76 ?x82)))))
 (let (($x62 (= input.dst.llvm-%n ?x155)))
 (let (($x158 (and $x62 $x71)))
 (let (($x88 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x168 (and $x88 $x158)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x122 (= (_ bv0 32) ?x119)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x111 (= (_ bv0 32) ?x163)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x27 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x22)))
 (let ((?x185 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x185)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (and $x131 $x180)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (and $x37 $x41)))
 (let (($x105 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x101 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x107 (and $x20 $x45)))
 (let (($x35 (not $x107)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x181 (and $x146 $x28)))
 (let (($x95 (and (not $x181) $x35)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (and $x103 $x175)))
 (let (($x112 (not $x16)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (and $x53 $x94)))
 (let (($x161 (and (not $x13) $x112)))
 (let (($x50 (and (and (and (and (and (and $x161 $x95) $x101) $x105) $x15) $x27) $x111)))
 (let (($x147 (and $x50 $x122)))
 (let (($x5 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x70 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x153 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x70)))
 (let (($x178 (or false (or false (and (and true (or $x69 $x153)) (or $x143 $x58))))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x178)))
 (let (($x154 (and (and (and $x51 $x5) $x147) $x168)))
 (let (($x130 (= $x154 true)))
 (let (($x166 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x174 (and $x166 $x130)))
 (let (($x98 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x156 (and $x98 $x174)))
 (let (($x160 (forall ((input.ind-%var575X (_ BitVec 32)) )(let (($x19 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var575X)))
 (=> $x19 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var575X) (_ bv0 32)))))
 ))
 (let (($x91 (forall ((input.ind-%var574X (_ BitVec 32)) )(let (($x19 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var574X)))
 (= $x19 false)))
 ))
 (let (($x108 (and $x91 $x160)))
 (let (($x157 (and $x108 $x156)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x11 (and $x145 $x157)))
 (let (($x30 (=> $x11 $x148)))
 (not $x30))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x149 ((_ extract 5 0) input.dst.llvm-%m)))
 (let ((?x144 ((_ extract 5 0) input.spec-%var-n-1)))
 (let ((?x44 (bvmul ?x144 (_ bv63 6))))
 (let ((?x127 (bvneg ?x44)))
 (let (($x134 (= ?x127 ?x149)))
 (let (($x148 (= $x134 true)))
 (let ((?x173 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x162 (concat ?x109 (concat ?x60 ?x173)))))
 (let (($x71 (= input.dst.llvm-%m ?x139)))
 (let ((?x82 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x76 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x64 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x116 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x155 (concat ?x116 (concat ?x64 (concat ?x76 ?x82)))))
 (let (($x62 (= input.dst.llvm-%n ?x155)))
 (let (($x158 (and $x62 $x71)))
 (let (($x88 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x168 (and $x88 $x158)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x122 (= (_ bv0 32) ?x119)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x111 (= (_ bv0 32) ?x163)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x27 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x22)))
 (let ((?x185 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x185)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (and $x131 $x180)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (and $x37 $x41)))
 (let (($x105 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x101 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x107 (and $x20 $x45)))
 (let (($x35 (not $x107)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x181 (and $x146 $x28)))
 (let (($x95 (and (not $x181) $x35)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x16 (and $x103 $x175)))
 (let (($x112 (not $x16)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (and $x53 $x94)))
 (let (($x161 (and (not $x13) $x112)))
 (let (($x50 (and (and (and (and (and (and $x161 $x95) $x101) $x105) $x15) $x27) $x111)))
 (let (($x147 (and $x50 $x122)))
 (let (($x5 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x70 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x153 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x70)))
 (let (($x178 (or false (or false (and (and true (or $x69 $x153)) (or $x143 $x58))))))
 (let (($x51 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x178)))
 (let (($x154 (and (and (and $x51 $x5) $x147) $x168)))
 (let (($x130 (= $x154 true)))
 (let (($x166 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x174 (and $x166 $x130)))
 (let (($x98 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x156 (and $x98 $x174)))
 (let (($x160 (forall ((input.ind-%var575X (_ BitVec 32)) )(let (($x19 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var575X)))
 (=> $x19 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var575X) (_ bv0 32)))))
 ))
 (let (($x91 (forall ((input.ind-%var574X (_ BitVec 32)) )(let (($x19 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var574X)))
 (= $x19 false)))
 ))
 (let (($x108 (and $x91 $x160)))
 (let (($x157 (and $x108 $x156)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x11 (and $x145 $x157)))
 (let (($x30 (=> $x11 $x148)))
 (not $x30))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x77262b9c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x95531bb8)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x20202000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x20202020)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x95531bbb)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x77262b9f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x95531bb8)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x77262b9c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x20202000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x20202000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x95531bb8) #x00
      #x20))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000010)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00080000)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x01010101)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x01010100)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000013)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00080003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000010)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00080000)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x01010101)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00080000) #x00
      #x01))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x7 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x65 (= (_ bv0 2) ?x7)))
 (let (($x118 (= $x65 true)))
 (let ((?x168 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x44 (concat ?x34 (concat ?x157 (concat ?x130 ?x168)))))
 (let (($x127 (= input.dst.llvm-%m ?x44)))
 (let ((?x62 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x104 (concat ?x60 (concat ?x162 ?x62)))))
 (let (($x71 (= input.dst.llvm-%n ?x139)))
 (let (($x149 (and $x71 $x127)))
 (let (($x132 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x134 (and $x132 $x149)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x39)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x97)))
 (let ((?x122 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x122)))
 (let ((?x163 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x163)))
 (let (($x27 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (and $x27 $x111)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x22 $x50)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x41 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (and $x105 $x8)))
 (let (($x131 (not $x37)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (and $x101 $x12)))
 (let (($x185 (and (not $x115) $x131)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x45 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x45 $x107)))
 (let (($x95 (not $x35)))
 (let (($x80 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x20 (and $x181 $x80)))
 (let (($x159 (and (not $x20) $x95)))
 (let (($x133 (and (and (and (and (and (and $x159 $x185) $x41) $x93) $x119) $x147) $x190)))
 (let (($x64 (and $x133 $x10)))
 (let (($x58 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x189 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x51)))
 (let (($x161 (or false (or false (and (and true (or $x54 $x5)) (or $x189 $x103))))))
 (let (($x28 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x161)))
 (let (($x31 (and (and (and $x28 $x58) $x64) $x134)))
 (let (($x18 (= $x31 true)))
 (let (($x177 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x87 (and $x177 $x18)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x129 (and $x110 $x87)))
 (let (($x66 (forall ((input.ind-%var593X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var593X)))
 (=> $x91 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var593X) (_ bv0 32)))))
 ))
 (let (($x125 (forall ((input.ind-%var592X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var592X)))
 (= $x91 false)))
 ))
 (let (($x70 (and $x125 $x66)))
 (let (($x137 (and $x70 $x129)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x179 (and $x145 $x137)))
 (let (($x176 (=> $x179 $x118)))
 (not $x176)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x7 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x65 (= (_ bv0 2) ?x7)))
 (let (($x118 (= $x65 true)))
 (let ((?x168 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x44 (concat ?x34 (concat ?x157 (concat ?x130 ?x168)))))
 (let (($x127 (= input.dst.llvm-%m ?x44)))
 (let ((?x62 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x104 (concat ?x60 (concat ?x162 ?x62)))))
 (let (($x71 (= input.dst.llvm-%n ?x139)))
 (let (($x149 (and $x71 $x127)))
 (let (($x132 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x134 (and $x132 $x149)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x39)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x97)))
 (let ((?x122 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x122)))
 (let ((?x163 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x163)))
 (let (($x27 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (and $x27 $x111)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (and $x22 $x50)))
 (let (($x93 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x41 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (and $x105 $x8)))
 (let (($x131 (not $x37)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (and $x101 $x12)))
 (let (($x185 (and (not $x115) $x131)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x45 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x45 $x107)))
 (let (($x95 (not $x35)))
 (let (($x80 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x20 (and $x181 $x80)))
 (let (($x159 (and (not $x20) $x95)))
 (let (($x133 (and (and (and (and (and (and $x159 $x185) $x41) $x93) $x119) $x147) $x190)))
 (let (($x64 (and $x133 $x10)))
 (let (($x58 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x189 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x5 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x51)))
 (let (($x161 (or false (or false (and (and true (or $x54 $x5)) (or $x189 $x103))))))
 (let (($x28 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x161)))
 (let (($x31 (and (and (and $x28 $x58) $x64) $x134)))
 (let (($x18 (= $x31 true)))
 (let (($x177 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x87 (and $x177 $x18)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x129 (and $x110 $x87)))
 (let (($x66 (forall ((input.ind-%var593X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var593X)))
 (=> $x91 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var593X) (_ bv0 32)))))
 ))
 (let (($x125 (forall ((input.ind-%var592X (_ BitVec 32)) )(let (($x91 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var592X)))
 (= $x91 false)))
 ))
 (let (($x70 (and $x125 $x66)))
 (let (($x137 (and $x70 $x129)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x179 (and $x145 $x137)))
 (let (($x176 (=> $x179 $x118)))
 (not $x176)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x26 (bvule input.spec-%var-n-1 (_ bv4294967294 32))))
 (let (($x166 (= $x26 true)))
 (let ((?x134 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x7 (concat ?x137 (concat ?x18 ?x134)))))
 (let (($x118 (= input.dst.llvm-%m ?x65)))
 (let ((?x71 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x44 (concat ?x11 (concat ?x130 (concat ?x34 ?x71)))))
 (let (($x127 (= input.dst.llvm-%n ?x44)))
 (let (($x176 (and $x127 $x118)))
 (let (($x21 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x141 (and $x21 $x176)))
 (let ((?x76 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x82 (= (_ bv0 32) ?x76)))
 (let ((?x30 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x30)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x64 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x97)))
 (let (($x147 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (and $x147 $x190)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x122 $x133)))
 (let (($x116 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x93 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x22 (and $x93 $x136)))
 (let (($x27 (not $x22)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (and $x41 $x68)))
 (let (($x163 (and (not $x15) $x27)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x131 (and $x8 $x37)))
 (let (($x185 (not $x131)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x105 (and $x115 $x100)))
 (let (($x180 (and (not $x105) $x185)))
 (let (($x81 (and (and (and (and (and (and $x180 $x163) $x50) $x116) $x39) $x64) $x85)))
 (let (($x60 (and $x81 $x82)))
 (let (($x103 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x45 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x28 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x28)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x28)))
 (let (($x159 (or false (or false (and (and true (or $x86 $x58)) (or $x17 $x45))))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x159)))
 (let (($x158 (and (and (and $x12 $x103) $x60) $x141)))
 (let (($x155 (= $x158 true)))
 (let (($x53 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x138 (and $x53 $x155)))
 (let (($x178 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x187 (and $x178 $x138)))
 (let (($x47 (forall ((input.ind-%var603X (_ BitVec 32)) )(let (($x125 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var603X)))
 (=> $x125 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var603X) (_ bv0 32)))))
 ))
 (let (($x186 (forall ((input.ind-%var602X (_ BitVec 32)) )(let (($x125 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var602X)))
 (= $x125 false)))
 ))
 (let (($x51 (and $x186 $x47)))
 (let (($x121 (and $x51 $x187)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x61 (and $x145 $x121)))
 (let (($x38 (=> $x61 $x166)))
 (not $x38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x26 (bvule input.spec-%var-n-1 (_ bv4294967294 32))))
 (let (($x166 (= $x26 true)))
 (let ((?x134 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x7 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x7 (concat ?x137 (concat ?x18 ?x134)))))
 (let (($x118 (= input.dst.llvm-%m ?x65)))
 (let ((?x71 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x44 (concat ?x11 (concat ?x130 (concat ?x34 ?x71)))))
 (let (($x127 (= input.dst.llvm-%n ?x44)))
 (let (($x176 (and $x127 $x118)))
 (let (($x21 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x141 (and $x21 $x176)))
 (let ((?x76 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x82 (= (_ bv0 32) ?x76)))
 (let ((?x30 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x30)))
 (let ((?x10 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x64 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x10)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x97)))
 (let (($x147 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (and $x147 $x190)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x122 $x133)))
 (let (($x116 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x50 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x93 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x22 (and $x93 $x136)))
 (let (($x27 (not $x22)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (and $x41 $x68)))
 (let (($x163 (and (not $x15) $x27)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x131 (and $x8 $x37)))
 (let (($x185 (not $x131)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x105 (and $x115 $x100)))
 (let (($x180 (and (not $x105) $x185)))
 (let (($x81 (and (and (and (and (and (and $x180 $x163) $x50) $x116) $x39) $x64) $x85)))
 (let (($x60 (and $x81 $x82)))
 (let (($x103 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x45 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x28 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x28)))
 (let (($x58 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x28)))
 (let (($x159 (or false (or false (and (and true (or $x86 $x58)) (or $x17 $x45))))))
 (let (($x12 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x159)))
 (let (($x158 (and (and (and $x12 $x103) $x60) $x141)))
 (let (($x155 (= $x158 true)))
 (let (($x53 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x138 (and $x53 $x155)))
 (let (($x178 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x187 (and $x178 $x138)))
 (let (($x47 (forall ((input.ind-%var603X (_ BitVec 32)) )(let (($x125 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var603X)))
 (=> $x125 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var603X) (_ bv0 32)))))
 ))
 (let (($x186 (forall ((input.ind-%var602X (_ BitVec 32)) )(let (($x125 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var602X)))
 (= $x125 false)))
 ))
 (let (($x51 (and $x186 $x47)))
 (let (($x121 (and $x51 $x187)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x61 (and $x145 $x121)))
 (let (($x38 (=> $x61 $x166)))
 (not $x38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x9e14882c)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x7fffd828)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xffffff00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x7fffd82b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x9e14882f)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x7fffd828)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x9e14882c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x9e14882c) #x00
      #xff))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xffffff00)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000004) #x00
      #xff))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x177 (bvsge input.spec-%var-n-1 (_ bv4294967295 32))))
 (let (($x160 (= $x177 true)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x26 (concat ?x121 (concat ?x155 ?x141)))))
 (let (($x38 (= input.dst.llvm-%m ?x166)))
 (let ((?x127 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x179 (concat ?x18 (concat ?x7 ?x127)))))
 (let (($x118 (= input.dst.llvm-%n ?x65)))
 (let (($x108 (and $x118 $x38)))
 (let (($x156 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x94 (and $x156 $x108)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x162)))
 (let ((?x143 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x102 (= (_ bv0 32) ?x143)))
 (let ((?x82 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x82)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x85 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x30)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (and $x64 $x85)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (and $x10 $x81)))
 (let (($x104 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x116 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x122 (and $x116 $x24)))
 (let (($x147 (not $x122)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x119 (and $x50 $x48)))
 (let (($x97 (and (not $x119) $x147)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x27 (and $x136 $x22)))
 (let (($x163 (not $x27)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x93 (and $x15 $x78)))
 (let (($x111 (and (not $x93) $x163)))
 (let (($x154 (and (and (and (and (and (and $x111 $x97) $x133) $x104) $x76) $x60) $x102)))
 (let (($x130 (and $x154 $x62)))
 (let (($x45 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x12 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x12)))
 (let (($x180 (or false (or false (and (and true (or $x13 $x103)) (or $x88 $x8))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x180)))
 (let (($x139 (and (and (and $x68 $x45) $x130) $x94)))
 (let (($x98 (= $x139 true)))
 (let (($x181 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x153 (and $x181 $x98)))
 (let (($x161 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x69 (and $x161 $x153)))
 (let (($x112 (forall ((input.ind-%var621X (_ BitVec 32)) )(let (($x186 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var621X)))
 (=> $x186 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var621X) (_ bv0 32)))))
 ))
 (let (($x146 (forall ((input.ind-%var620X (_ BitVec 32)) )(let (($x186 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var620X)))
 (= $x186 false)))
 ))
 (let (($x28 (and $x146 $x112)))
 (let (($x135 (and $x28 $x69)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x91 (and $x145 $x135)))
 (let (($x70 (=> $x91 $x160)))
 (not $x70))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x177 (bvsge input.spec-%var-n-1 (_ bv4294967295 32))))
 (let (($x160 (= $x177 true)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x26 (concat ?x121 (concat ?x155 ?x141)))))
 (let (($x38 (= input.dst.llvm-%m ?x166)))
 (let ((?x127 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x7 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x179 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x65 (concat ?x179 (concat ?x18 (concat ?x7 ?x127)))))
 (let (($x118 (= input.dst.llvm-%n ?x65)))
 (let (($x108 (and $x118 $x38)))
 (let (($x156 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x94 (and $x156 $x108)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x162)))
 (let ((?x143 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x102 (= (_ bv0 32) ?x143)))
 (let ((?x82 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x82)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x85 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x30)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (and $x64 $x85)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (and $x10 $x81)))
 (let (($x104 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x133 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x116 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x122 (and $x116 $x24)))
 (let (($x147 (not $x122)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x119 (and $x50 $x48)))
 (let (($x97 (and (not $x119) $x147)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x27 (and $x136 $x22)))
 (let (($x163 (not $x27)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x93 (and $x15 $x78)))
 (let (($x111 (and (not $x93) $x163)))
 (let (($x154 (and (and (and (and (and (and $x111 $x97) $x133) $x104) $x76) $x60) $x102)))
 (let (($x130 (and $x154 $x62)))
 (let (($x45 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x12 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x12)))
 (let (($x180 (or false (or false (and (and true (or $x13 $x103)) (or $x88 $x8))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x180)))
 (let (($x139 (and (and (and $x68 $x45) $x130) $x94)))
 (let (($x98 (= $x139 true)))
 (let (($x181 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x153 (and $x181 $x98)))
 (let (($x161 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x69 (and $x161 $x153)))
 (let (($x112 (forall ((input.ind-%var621X (_ BitVec 32)) )(let (($x186 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var621X)))
 (=> $x186 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var621X) (_ bv0 32)))))
 ))
 (let (($x146 (forall ((input.ind-%var620X (_ BitVec 32)) )(let (($x186 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var620X)))
 (= $x186 false)))
 ))
 (let (($x28 (and $x146 $x112)))
 (let (($x135 (and $x28 $x69)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x91 (and $x145 $x135)))
 (let (($x70 (=> $x91 $x160)))
 (not $x70))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x0000000b) #x80
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x092c2850)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!0))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x092c2853)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x092c2850)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!0 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xffffffff) #x80
      #x00))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x90 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x53 (= $x90 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x177 (concat ?x135 (concat ?x98 ?x94)))))
 (let (($x70 (= input.dst.llvm-%m ?x160)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x61 (concat ?x155 (concat ?x26 ?x118)))))
 (let (($x38 (= input.dst.llvm-%n ?x166)))
 (let (($x84 (and $x38 $x70)))
 (let (($x129 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x80 (and $x129 $x84)))
 (let ((?x34 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x34)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x144 (= (_ bv0 32) ?x149)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let ((?x143 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x143)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x60 $x102)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x82 $x154)))
 (let (($x11 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (and $x104 $x174)))
 (let (($x64 (not $x10)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x133 $x173)))
 (let (($x30 (and (not $x39) $x64)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x24 $x122)))
 (let (($x97 (not $x147)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x119 $x113)))
 (let (($x190 (and (not $x116) $x97)))
 (let (($x31 (and (and (and (and (and (and $x190 $x30) $x81) $x11) $x162) $x130) $x144)))
 (let (($x18 (and $x31 $x71)))
 (let (($x8 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x68 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x45 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x68)))
 (let (($x111 (or false (or false (and (and true (or $x20 $x45)) (or $x132 $x136))))))
 (let (($x48 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x111)))
 (let (($x44 (and (and (and $x48 $x8) $x18) $x80)))
 (let (($x110 (= $x44 true)))
 (let (($x115 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x5 (and $x115 $x110)))
 (let (($x159 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x54 (and $x159 $x5)))
 (let (($x95 (forall ((input.ind-%var639X (_ BitVec 32)) )(let (($x146 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var639X)))
 (=> $x146 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var639X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var638X (_ BitVec 32)) )(let (($x146 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var638X)))
 (= $x146 false)))
 ))
 (let (($x12 (and $x101 $x95)))
 (let (($x43 (and $x12 $x54)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x125 (and $x145 $x43)))
 (let (($x66 (=> $x125 $x53)))
 (not $x66))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x90 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x53 (= $x90 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x177 (concat ?x135 (concat ?x98 ?x94)))))
 (let (($x70 (= input.dst.llvm-%m ?x160)))
 (let ((?x118 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x155 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x61 (concat ?x155 (concat ?x26 ?x118)))))
 (let (($x38 (= input.dst.llvm-%n ?x166)))
 (let (($x84 (and $x38 $x70)))
 (let (($x129 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x80 (and $x129 $x84)))
 (let ((?x34 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x34)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x144 (= (_ bv0 32) ?x149)))
 (let ((?x62 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x62)))
 (let ((?x143 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x143)))
 (let (($x60 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x60 $x102)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x162 (and $x82 $x154)))
 (let (($x11 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x174 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (and $x104 $x174)))
 (let (($x64 (not $x10)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x39 (and $x133 $x173)))
 (let (($x30 (and (not $x39) $x64)))
 (let (($x122 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x24 $x122)))
 (let (($x97 (not $x147)))
 (let (($x113 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x116 (and $x119 $x113)))
 (let (($x190 (and (not $x116) $x97)))
 (let (($x31 (and (and (and (and (and (and $x190 $x30) $x81) $x11) $x162) $x130) $x144)))
 (let (($x18 (and $x31 $x71)))
 (let (($x8 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x68 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x68)))
 (let (($x45 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x68)))
 (let (($x111 (or false (or false (and (and true (or $x20 $x45)) (or $x132 $x136))))))
 (let (($x48 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x111)))
 (let (($x44 (and (and (and $x48 $x8) $x18) $x80)))
 (let (($x110 (= $x44 true)))
 (let (($x115 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x5 (and $x115 $x110)))
 (let (($x159 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x54 (and $x159 $x5)))
 (let (($x95 (forall ((input.ind-%var639X (_ BitVec 32)) )(let (($x146 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var639X)))
 (=> $x146 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var639X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var638X (_ BitVec 32)) )(let (($x146 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var638X)))
 (= $x146 false)))
 ))
 (let (($x12 (and $x101 $x95)))
 (let (($x43 (and $x12 $x54)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x125 (and $x145 $x43)))
 (let (($x66 (=> $x125 $x53)))
 (not $x66))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x25 (forall ((input.ind-%var659X (_ BitVec 32)) )(let ((?x49 (bvadd (bvmul input.ind-%var659X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv1 32))) (select input.dst.llvm-mem ?x49))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv2 32))) ?x40))))
 (let ((?x29 (input.spec-%tmpvar-10.E0%0%d.1.1 input.ind-%var659X)))
 (let (($x28 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var659X)))
 (=> $x28 (= ?x29 ?x188))))))))
 ))
 (let (($x56 (forall ((input.ind-%var658X (_ BitVec 32)) )(let (($x28 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var658X)))
 (= $x28 (and (bvule (_ bv0 32) input.ind-%var658X) (bvult input.ind-%var658X input.dst.llvm-%n)))))
 ))
 (let (($x120 (and $x56 $x25)))
 (let (($x171 (= $x120 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x53 (concat ?x43 (concat ?x110 ?x80)))))
 (let (($x51 (= input.dst.llvm-%m ?x66)))
 (let ((?x38 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x91 (concat ?x98 (concat ?x177 ?x38)))))
 (let (($x70 (= input.dst.llvm-%n ?x160)))
 (let (($x100 (and $x70 $x51)))
 (let (($x187 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x88 (and $x187 $x100)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x7)))
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x176)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x149)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (and $x130 $x144)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (and $x62 $x31)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (and $x11 $x87)))
 (let (($x60 (not $x82)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x76 (and $x81 $x168)))
 (let (($x143 (and (not $x76) $x60)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x174 $x10)))
 (let (($x30 (not $x64)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x39 $x109)))
 (let (($x85 (and (not $x104) $x30)))
 (let (($x158 (and (and (and (and (and (and $x85 $x143) $x154) $x179) $x34) $x18) $x36)))
 (let (($x155 (and $x158 $x127)))
 (let (($x136 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x24 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x48 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x48)))
 (let (($x190 (or false (or false (and (and true (or $x105 $x8)) (or $x21 $x24))))))
 (let (($x173 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x190)))
 (let (($x178 (and (and (and $x173 $x136) $x155) $x88)))
 (let (($x58 (= $x178 true)))
 (let (($x15 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x86 (and $x15 $x58)))
 (let (($x180 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x106 (and $x180 $x86)))
 (let (($x185 (forall ((input.ind-%var649X (_ BitVec 32)) )(let (($x101 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var649X)))
 (=> $x101 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var649X) (_ bv0 32)))))
 ))
 (let (($x41 (forall ((input.ind-%var648X (_ BitVec 32)) )(let (($x101 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var648X)))
 (= $x101 false)))
 ))
 (let (($x68 (and $x41 $x185)))
 (let (($x186 (and $x68 $x106)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x32 (and $x145 $x186)))
 (let (($x117 (=> $x32 $x171)))
 (not $x117))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x25 (forall ((input.ind-%var659X (_ BitVec 32)) )(let ((?x49 (bvadd (bvmul input.ind-%var659X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv1 32))) (select input.dst.llvm-mem ?x49))))
 (let ((?x188 (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x49 (_ bv2 32))) ?x40))))
 (let ((?x29 (input.spec-%tmpvar-10.E0%0%d.1.1 input.ind-%var659X)))
 (let (($x28 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var659X)))
 (=> $x28 (= ?x29 ?x188))))))))
 ))
 (let (($x56 (forall ((input.ind-%var658X (_ BitVec 32)) )(let (($x28 (input.spec-%tmpvar-10.E0%0%d.0.1 input.ind-%var658X)))
 (= $x28 (and (bvule (_ bv0 32) input.ind-%var658X) (bvult input.ind-%var658X input.dst.llvm-%n)))))
 ))
 (let (($x120 (and $x56 $x25)))
 (let (($x171 (= $x120 true)))
 (let ((?x80 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x43 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x53 (concat ?x43 (concat ?x110 ?x80)))))
 (let (($x51 (= input.dst.llvm-%m ?x66)))
 (let ((?x38 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x160 (concat ?x91 (concat ?x98 (concat ?x177 ?x38)))))
 (let (($x70 (= input.dst.llvm-%n ?x160)))
 (let (($x100 (and $x70 $x51)))
 (let (($x187 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x88 (and $x187 $x100)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x7)))
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x176)))
 (let ((?x71 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x71)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x149)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (and $x130 $x144)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (and $x62 $x31)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (and $x11 $x87)))
 (let (($x60 (not $x82)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x76 (and $x81 $x168)))
 (let (($x143 (and (not $x76) $x60)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x174 $x10)))
 (let (($x30 (not $x64)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x39 $x109)))
 (let (($x85 (and (not $x104) $x30)))
 (let (($x158 (and (and (and (and (and (and $x85 $x143) $x154) $x179) $x34) $x18) $x36)))
 (let (($x155 (and $x158 $x127)))
 (let (($x136 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x24 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x48 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x21 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x48)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x48)))
 (let (($x190 (or false (or false (and (and true (or $x105 $x8)) (or $x21 $x24))))))
 (let (($x173 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x190)))
 (let (($x178 (and (and (and $x173 $x136) $x155) $x88)))
 (let (($x58 (= $x178 true)))
 (let (($x15 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x86 (and $x15 $x58)))
 (let (($x180 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x106 (and $x180 $x86)))
 (let (($x185 (forall ((input.ind-%var649X (_ BitVec 32)) )(let (($x101 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var649X)))
 (=> $x101 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var649X) (_ bv0 32)))))
 ))
 (let (($x41 (forall ((input.ind-%var648X (_ BitVec 32)) )(let (($x101 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var648X)))
 (= $x101 false)))
 ))
 (let (($x68 (and $x41 $x185)))
 (let (($x186 (and $x68 $x106)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x32 (and $x145 $x186)))
 (let (($x117 (=> $x32 $x171)))
 (not $x117))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.ind-%var659X!1 () (_ BitVec 32)
    #x3fffffc1)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x000000fc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000008)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #x00000004) #xfc
      #x00))
  (define-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((x!0 (_ BitVec 32))) Bool
    true)
  (define-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000001)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.ind-%var658X!0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!2))
  (define-fun input.ind-%var659X!1 () (_ BitVec 32)
    #x3fffffc0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffff0)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x000000f8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffff3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffff0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!2 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    (ite (= x!0 #xfffffffc) #xf8
    (ite (= x!0 #xfffffff0) #x01
      #x00)))
  (define-fun input.spec-%tmpvar-10.E0%0%d.1.1 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-10.E0%0%d.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 33
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x77 (= false true)))
 (let ((?x88 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x184 (concat ?x73 (concat ?x186 (concat ?x58 ?x88)))))
 (let (($x92 (= input.dst.llvm-%m ?x184)))
 (let ((?x70 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x125 (concat ?x110 (concat ?x53 ?x70)))))
 (let (($x51 (= input.dst.llvm-%n ?x66)))
 (let (($x96 (and $x51 $x92)))
 (let (($x69 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x56 (and $x69 $x96)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x26)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x19 (= (_ bv0 32) ?x65)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x155 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x127)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x176)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x158 (and $x18 $x36)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x71 $x158)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x31 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x138 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x179 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x62 (and $x179 $x138)))
 (let (($x130 (not $x62)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x162 (and $x154 $x134)))
 (let (($x149 (and (not $x162) $x130)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x87 $x82)))
 (let (($x143 (not $x60)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x76 $x157)))
 (let (($x102 (and (not $x11) $x143)))
 (let (($x139 (and (and (and (and (and (and $x102 $x149) $x31) $x61) $x7) $x155) $x19)))
 (let (($x98 (and $x139 $x118)))
 (let (($x24 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x174 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x173 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x173)))
 (let (($x85 (or false (or false (and (and true (or $x93 $x136)) (or $x156 $x174))))))
 (let (($x168 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x85)))
 (let (($x75 (and (and (and $x168 $x24) $x98) $x56)))
 (let (($x49 (= $x75 true)))
 (let (($x119 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x150 (and $x119 $x49)))
 (let (($x111 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x55 (and $x111 $x150)))
 (let (($x163 (forall ((input.ind-%var685X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var685X)))
 (=> $x41 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var685X) (_ bv0 32)))))
 ))
 (let (($x50 (forall ((input.ind-%var684X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var684X)))
 (= $x41 false)))
 ))
 (let (($x48 (and $x50 $x163)))
 (let (($x63 (and $x48 $x55)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x67 (and $x145 $x63)))
 (let (($x6 (=> $x67 $x77)))
 (not $x6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x77 (= false true)))
 (let ((?x88 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x184 (concat ?x73 (concat ?x186 (concat ?x58 ?x88)))))
 (let (($x92 (= input.dst.llvm-%m ?x184)))
 (let ((?x70 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x53 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x66 (concat ?x125 (concat ?x110 (concat ?x53 ?x70)))))
 (let (($x51 (= input.dst.llvm-%n ?x66)))
 (let (($x96 (and $x51 $x92)))
 (let (($x69 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x56 (and $x69 $x96)))
 (let ((?x26 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x118 (= (_ bv0 32) ?x26)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x19 (= (_ bv0 32) ?x65)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x155 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x127)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x36 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x176)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x158 (and $x18 $x36)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x71 $x158)))
 (let (($x61 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x31 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x138 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x179 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x62 (and $x179 $x138)))
 (let (($x130 (not $x62)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x162 (and $x154 $x134)))
 (let (($x149 (and (not $x162) $x130)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (and $x87 $x82)))
 (let (($x143 (not $x60)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x11 (and $x76 $x157)))
 (let (($x102 (and (not $x11) $x143)))
 (let (($x139 (and (and (and (and (and (and $x102 $x149) $x31) $x61) $x7) $x155) $x19)))
 (let (($x98 (and $x139 $x118)))
 (let (($x24 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x174 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x173 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x156 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x173)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x93 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x173)))
 (let (($x85 (or false (or false (and (and true (or $x93 $x136)) (or $x156 $x174))))))
 (let (($x168 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x85)))
 (let (($x75 (and (and (and $x168 $x24) $x98) $x56)))
 (let (($x49 (= $x75 true)))
 (let (($x119 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x150 (and $x119 $x49)))
 (let (($x111 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x55 (and $x111 $x150)))
 (let (($x163 (forall ((input.ind-%var685X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var685X)))
 (=> $x41 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var685X) (_ bv0 32)))))
 ))
 (let (($x50 (forall ((input.ind-%var684X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var684X)))
 (= $x41 false)))
 ))
 (let (($x48 (and $x50 $x163)))
 (let (($x63 (and $x48 $x55)))
 (let (($x145 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x67 (and $x145 $x63)))
 (let (($x6 (=> $x67 $x77)))
 (not $x6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xe85473a0)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x8330bb50)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x8330bb53)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xe85473a3)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x8330bb50)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xe85473a0)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 34
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic UFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x28 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x84 (= $x28 false)))
 (let (($x166 (= $x84 true)))
 (let ((?x9 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x25 (bvneg ?x9)))
 (let (($x120 (= ?x25 input.dst.llvm-%n)))
 (let (($x171 (= $x120 true)))
 (let (($x40 (= (_ bv0 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x140 (= $x40 true)))
 (let (($x79 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x68 (= $x79 true)))
 (let (($x101 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x59 (= $x101 true)))
 (let (($x45 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x20 (= $x45 true)))
 (let (($x100 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x160 (= $x100 true)))
 (let ((?x106 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x186 (bvadd input.dst.llvm-%m ?x106)))
 (let (($x150 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x184 (bvadd ?x186 (_ bv3 32))))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x184)))
 (let (($x96 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x184)))
 (let (($x77 (or false (or false (and (and true (or $x92 $x96)) (or $x49 $x150))))))
 (let (($x124 (=> (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32))) $x77)))
 (let (($x58 (=> (and $x28 (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32)))) $x77)))
 (let (($x88 (= $x58 true)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x94 (= (_ bv0 32) ?x69)))
 (let ((?x177 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x177)))
 (let ((?x23 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x23)))
 (let ((?x139 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x139)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (and $x65 $x26)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x135 $x118)))
 (let (($x155 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x121 (and $x71 $x18)))
 (let (($x176 (not $x121)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x34 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (and $x34 $x61)))
 (let (($x158 (and (not $x153) $x176)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x187 (and $x130 $x149)))
 (let (($x144 (not $x187)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x30 $x85)))
 (let (($x141 (and (not $x62) $x144)))
 (let (($x90 (and (and (and (and (and (and $x141 $x158) $x91) $x155) $x98) $x152) $x38)))
 (let (($x53 (and $x90 $x94)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x11 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x76)))
 (let (($x137 (or false (or false (and (and true (or $x157 $x11)) (or $x143 $x102))))))
 (let (($x138 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x137)))
 (let (($x70 (and $x138 $x53)))
 (let (($x54 (= $x70 true)))
 (let ((?x156 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x104 (= (_ bv0 2) ?x156)))
 (let (($x174 (= $x104 true)))
 (let (($x80 (and $x174 $x54)))
 (let (($x21 (and $x80 $x88)))
 (let (($x159 (and $x21 $x160)))
 (let (($x16 (and $x159 $x20)))
 (let (($x15 (and $x16 $x59)))
 (let (($x22 (and $x15 $x68)))
 (let (($x188 (and $x22 $x140)))
 (let (($x117 (and $x188 $x171)))
 (let (($x108 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x172 (and $x108 $x117)))
 (let (($x93 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x126 (and $x93 $x172)))
 (let (($x81 (forall ((input.ind-%var703X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var703X)))
 (=> $x41 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var703X) (_ bv0 32)))))
 ))
 (let (($x27 (forall ((input.ind-%var702X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var702X)))
 (= $x41 false)))
 ))
 (let (($x97 (and $x27 $x81)))
 (let (($x78 (and $x97 $x126)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x132 (and $x151 $x78)))
 (let (($x161 (=> $x132 $x166)))
 (not $x161)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic UFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x28 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x84 (= $x28 false)))
 (let (($x166 (= $x84 true)))
 (let ((?x9 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x25 (bvneg ?x9)))
 (let (($x120 (= ?x25 input.dst.llvm-%n)))
 (let (($x171 (= $x120 true)))
 (let (($x40 (= (_ bv0 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x140 (= $x40 true)))
 (let (($x79 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x68 (= $x79 true)))
 (let (($x101 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x59 (= $x101 true)))
 (let (($x45 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x20 (= $x45 true)))
 (let (($x100 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x160 (= $x100 true)))
 (let ((?x106 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x186 (bvadd input.dst.llvm-%m ?x106)))
 (let (($x150 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x184 (bvadd ?x186 (_ bv3 32))))
 (let (($x49 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x184)))
 (let (($x96 (bvugt ?x186 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x184)))
 (let (($x77 (or false (or false (and (and true (or $x92 $x96)) (or $x49 $x150))))))
 (let (($x124 (=> (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32))) $x77)))
 (let (($x58 (=> (and $x28 (bvule ?x186 (bvsub (bvadd ?x186 (_ bv4 32)) (_ bv1 32)))) $x77)))
 (let (($x88 (= $x58 true)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x94 (= (_ bv0 32) ?x69)))
 (let ((?x177 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x177)))
 (let ((?x23 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x23)))
 (let ((?x139 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x26 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x139)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (and $x65 $x26)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x135 $x118)))
 (let (($x155 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x91 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x121 (and $x71 $x18)))
 (let (($x176 (not $x121)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x34 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (and $x34 $x61)))
 (let (($x158 (and (not $x153) $x176)))
 (let (($x149 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x187 (and $x130 $x149)))
 (let (($x144 (not $x187)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x30 $x85)))
 (let (($x141 (and (not $x62) $x144)))
 (let (($x90 (and (and (and (and (and (and $x141 $x158) $x91) $x155) $x98) $x152) $x38)))
 (let (($x53 (and $x90 $x94)))
 (let (($x102 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x76 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x76)))
 (let (($x11 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x76)))
 (let (($x137 (or false (or false (and (and true (or $x157 $x11)) (or $x143 $x102))))))
 (let (($x138 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x137)))
 (let (($x70 (and $x138 $x53)))
 (let (($x54 (= $x70 true)))
 (let ((?x156 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x104 (= (_ bv0 2) ?x156)))
 (let (($x174 (= $x104 true)))
 (let (($x80 (and $x174 $x54)))
 (let (($x21 (and $x80 $x88)))
 (let (($x159 (and $x21 $x160)))
 (let (($x16 (and $x159 $x20)))
 (let (($x15 (and $x16 $x59)))
 (let (($x22 (and $x15 $x68)))
 (let (($x188 (and $x22 $x140)))
 (let (($x117 (and $x188 $x171)))
 (let (($x108 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x172 (and $x108 $x117)))
 (let (($x93 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x126 (and $x93 $x172)))
 (let (($x81 (forall ((input.ind-%var703X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var703X)))
 (=> $x41 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var703X) (_ bv0 32)))))
 ))
 (let (($x27 (forall ((input.ind-%var702X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var702X)))
 (= $x41 false)))
 ))
 (let (($x97 (and $x27 $x81)))
 (let (($x78 (and $x97 $x126)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x132 (and $x151 $x78)))
 (let (($x161 (=> $x132 $x166)))
 (not $x161)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffff0d9c)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xfff81000)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffff0d9f)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xffff0d9c)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0000000c)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xfff7fff0)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000001)
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0000000f)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0000000c)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 35
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x70 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x54 (= (_ bv0 32) ?x70)))
 (let ((?x94 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x53 (= (_ bv0 32) ?x94)))
 (let ((?x90 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x90)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x152)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x177 (and $x44 $x110)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x98 $x177)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x155 (and $x125 $x127)))
 (let (($x43 (not $x155)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (and $x5 $x7)))
 (let (($x65 (and (not $x91) $x43)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x18 (and $x36 $x71)))
 (let (($x121 (not $x18)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x153 (and $x34 $x61)))
 (let (($x158 (and (not $x153) $x121)))
 (let (($x106 (and (and (and (and (and (and $x158 $x65) $x139) $x118) $x38) $x69) $x53)))
 (let (($x186 (and $x106 $x54)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x134 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x102)))
 (let (($x187 (or false (or false (and (and true (or $x154 $x134)) (or $x85 $x62))))))
 (let (($x141 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x187)))
 (let (($x126 (and $x141 $x186)))
 (let (($x78 (= $x126 true)))
 (let ((?x160 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x68 (concat ?x79 (concat ?x101 (concat ?x45 ?x160)))))
 (let (($x22 (= input.dst.llvm-%m ?x68)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x88 (concat ?x58 (concat ?x67 (concat ?x49 ?x56)))))
 (let (($x21 (= input.dst.llvm-%n ?x88)))
 (let (($x40 (and $x21 $x22)))
 (let (($x184 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x140 (and $x184 $x40)))
 (let (($x9 (and (and (and $x141 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x186) $x140)))
 (let (($x25 (= $x9 true)))
 (let (($x76 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x120 (and $x76 $x25)))
 (let (($x116 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x171 (and $x116 $x120)))
 (let (($x104 (forall ((input.ind-%var721X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var721X)))
 (=> $x27 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var721X) (_ bv0 32)))))
 ))
 (let (($x147 (forall ((input.ind-%var720X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var720X)))
 (= $x27 false)))
 ))
 (let (($x174 (and $x147 $x104)))
 (let (($x117 (and $x174 $x171)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x172 (and $x151 $x117)))
 (let (($x132 (=> $x172 $x78)))
 (not $x132)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x70 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x54 (= (_ bv0 32) ?x70)))
 (let ((?x94 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x53 (= (_ bv0 32) ?x94)))
 (let ((?x90 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x90)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x152)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x177 (and $x44 $x110)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x98 $x177)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x155 (and $x125 $x127)))
 (let (($x43 (not $x155)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (and $x5 $x7)))
 (let (($x65 (and (not $x91) $x43)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x18 (and $x36 $x71)))
 (let (($x121 (not $x18)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x34 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x153 (and $x34 $x61)))
 (let (($x158 (and (not $x153) $x121)))
 (let (($x106 (and (and (and (and (and (and $x158 $x65) $x139) $x118) $x38) $x69) $x53)))
 (let (($x186 (and $x106 $x54)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x134 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x102)))
 (let (($x187 (or false (or false (and (and true (or $x154 $x134)) (or $x85 $x62))))))
 (let (($x141 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x187)))
 (let (($x126 (and $x141 $x186)))
 (let (($x78 (= $x126 true)))
 (let ((?x160 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x68 (concat ?x79 (concat ?x101 (concat ?x45 ?x160)))))
 (let (($x22 (= input.dst.llvm-%m ?x68)))
 (let ((?x56 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x49 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x88 (concat ?x58 (concat ?x67 (concat ?x49 ?x56)))))
 (let (($x21 (= input.dst.llvm-%n ?x88)))
 (let (($x40 (and $x21 $x22)))
 (let (($x184 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x140 (and $x184 $x40)))
 (let (($x9 (and (and (and $x141 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x186) $x140)))
 (let (($x25 (= $x9 true)))
 (let (($x76 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x120 (and $x76 $x25)))
 (let (($x116 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x171 (and $x116 $x120)))
 (let (($x104 (forall ((input.ind-%var721X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var721X)))
 (=> $x27 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var721X) (_ bv0 32)))))
 ))
 (let (($x147 (forall ((input.ind-%var720X (_ BitVec 32)) )(let (($x27 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var720X)))
 (= $x27 false)))
 ))
 (let (($x174 (and $x147 $x104)))
 (let (($x117 (and $x174 $x171)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x172 (and $x151 $x117)))
 (let (($x132 (=> $x172 $x78)))
 (not $x132)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 36
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x108 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x97 (= (_ bv0 2) ?x108)))
 (let (($x39 (= $x97 true)))
 (let ((?x140 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x132 (concat ?x78 (concat ?x117 (concat ?x25 ?x140)))))
 (let (($x84 (= input.dst.llvm-%m ?x132)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x68 (concat ?x59 (concat ?x45 (concat ?x79 ?x21)))))
 (let (($x22 (= input.dst.llvm-%n ?x68)))
 (let (($x157 (and $x22 $x84)))
 (let (($x150 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x29 (and $x150 $x157)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x32)))
 (let ((?x170 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x86 (= (_ bv0 32) ?x170)))
 (let ((?x54 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x54)))
 (let ((?x94 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x94)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (and $x69 $x53)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (and $x90 $x106)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x177 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (and $x118 $x51)))
 (let (($x44 (not $x98)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x139 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (and $x139 $x66)))
 (let (($x152 (and (not $x26) $x44)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x127 $x155)))
 (let (($x65 (not $x43)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (and $x91 $x135)))
 (let (($x19 (and (not $x125) $x65)))
 (let (($x63 (and (and (and (and (and (and $x19 $x152) $x177) $x28) $x70) $x186) $x86)))
 (let (($x67 (and $x63 $x6)))
 (let (($x62 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x141 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x141)))
 (let (($x129 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x141)))
 (let (($x158 (or false (or false (and (and true (or $x11 $x129)) (or $x176 $x36))))))
 (let (($x7 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x158)))
 (let (($x105 (and (and (and $x7 $x62) $x67) $x29)))
 (let (($x190 (= $x105 true)))
 (let (($x137 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x133 (and $x137 $x190)))
 (let (($x60 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x173 (and $x60 $x133)))
 (let (($x143 (forall ((input.ind-%var731X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var731X)))
 (=> $x147 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var731X) (_ bv0 32)))))
 ))
 (let (($x156 (forall ((input.ind-%var730X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var730X)))
 (= $x147 false)))
 ))
 (let (($x102 (and $x156 $x143)))
 (let (($x35 (and $x102 $x173)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x41 (and $x151 $x35)))
 (let (($x166 (=> $x41 $x39)))
 (not $x166)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x108 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x97 (= (_ bv0 2) ?x108)))
 (let (($x39 (= $x97 true)))
 (let ((?x140 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x132 (concat ?x78 (concat ?x117 (concat ?x25 ?x140)))))
 (let (($x84 (= input.dst.llvm-%m ?x132)))
 (let ((?x21 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x45 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x68 (concat ?x59 (concat ?x45 (concat ?x79 ?x21)))))
 (let (($x22 (= input.dst.llvm-%n ?x68)))
 (let (($x157 (and $x22 $x84)))
 (let (($x150 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x29 (and $x150 $x157)))
 (let ((?x32 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x32)))
 (let ((?x170 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x86 (= (_ bv0 32) ?x170)))
 (let ((?x54 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x186 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x54)))
 (let ((?x94 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x94)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (and $x69 $x53)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (and $x90 $x106)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x177 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (and $x118 $x51)))
 (let (($x44 (not $x98)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x139 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (and $x139 $x66)))
 (let (($x152 (and (not $x26) $x44)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x127 $x155)))
 (let (($x65 (not $x43)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x91 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x125 (and $x91 $x135)))
 (let (($x19 (and (not $x125) $x65)))
 (let (($x63 (and (and (and (and (and (and $x19 $x152) $x177) $x28) $x70) $x186) $x86)))
 (let (($x67 (and $x63 $x6)))
 (let (($x62 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x141 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x176 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x141)))
 (let (($x129 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x141)))
 (let (($x158 (or false (or false (and (and true (or $x11 $x129)) (or $x176 $x36))))))
 (let (($x7 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x158)))
 (let (($x105 (and (and (and $x7 $x62) $x67) $x29)))
 (let (($x190 (= $x105 true)))
 (let (($x137 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x133 (and $x137 $x190)))
 (let (($x60 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x173 (and $x60 $x133)))
 (let (($x143 (forall ((input.ind-%var731X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var731X)))
 (=> $x147 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var731X) (_ bv0 32)))))
 ))
 (let (($x156 (forall ((input.ind-%var730X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var730X)))
 (= $x147 false)))
 ))
 (let (($x102 (and $x156 $x143)))
 (let (($x35 (and $x102 $x173)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x41 (and $x151 $x35)))
 (let (($x166 (=> $x41 $x39)))
 (not $x166)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 37
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x27 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x136 (bvneg ?x27)))
 (let (($x76 (= ?x136 input.spec-%var-n-1)))
 (let (($x174 (= $x76 true)))
 (let ((?x29 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x190 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x97 (concat ?x108 (concat ?x35 (concat ?x190 ?x29)))))
 (let (($x39 (= input.dst.llvm-%m ?x97)))
 (let ((?x22 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x132 (concat ?x172 (concat ?x25 (concat ?x78 ?x22)))))
 (let (($x84 (= input.dst.llvm-%n ?x132)))
 (let (($x166 (and $x84 $x39)))
 (let (($x16 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x161 (and $x16 $x166)))
 (let ((?x49 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x49)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x75 (= (_ bv0 32) ?x96)))
 (let ((?x6 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x6)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x170)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x63 (and $x186 $x86)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (and $x54 $x63)))
 (let (($x58 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x28 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x28 $x124)))
 (let (($x69 (not $x90)))
 (let (($x92 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x177 $x92)))
 (let (($x94 (and (not $x38) $x69)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x51 $x98)))
 (let (($x152 (not $x44)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x26 $x23)))
 (let (($x110 (and (not $x118) $x152)))
 (let (($x159 (and (and (and (and (and (and $x110 $x94) $x106) $x58) $x32) $x67) $x75)))
 (let (($x45 (and $x159 $x56)))
 (let (($x36 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x19 (or false (or false (and (and true (or $x30 $x62)) (or $x80 $x127))))))
 (let (($x66 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x19)))
 (let (($x40 (and (and (and $x66 $x36) $x45) $x161)))
 (let (($x88 (= $x40 true)))
 (let (($x34 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x93 (and $x34 $x88)))
 (let (($x187 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x179 (and $x187 $x93)))
 (let (($x149 (forall ((input.ind-%var741X (_ BitVec 32)) )(let (($x156 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var741X)))
 (=> $x156 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var741X) (_ bv0 32)))))
 ))
 (let (($x144 (forall ((input.ind-%var740X (_ BitVec 32)) )(let (($x156 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var740X)))
 (= $x156 false)))
 ))
 (let (($x141 (and $x144 $x149)))
 (let (($x81 (and $x141 $x179)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x168 (and $x151 $x81)))
 (let (($x87 (=> $x168 $x174)))
 (not $x87))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x27 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x136 (bvneg ?x27)))
 (let (($x76 (= ?x136 input.spec-%var-n-1)))
 (let (($x174 (= $x76 true)))
 (let ((?x29 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x190 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x97 (concat ?x108 (concat ?x35 (concat ?x190 ?x29)))))
 (let (($x39 (= input.dst.llvm-%m ?x97)))
 (let ((?x22 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x78 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x132 (concat ?x172 (concat ?x25 (concat ?x78 ?x22)))))
 (let (($x84 (= input.dst.llvm-%n ?x132)))
 (let (($x166 (and $x84 $x39)))
 (let (($x16 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x161 (and $x16 $x166)))
 (let ((?x49 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x49)))
 (let ((?x96 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x75 (= (_ bv0 32) ?x96)))
 (let ((?x6 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x6)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x170)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x63 (and $x186 $x86)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (and $x54 $x63)))
 (let (($x58 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x106 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x124 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x28 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x90 (and $x28 $x124)))
 (let (($x69 (not $x90)))
 (let (($x92 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x177 $x92)))
 (let (($x94 (and (not $x38) $x69)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x51 $x98)))
 (let (($x152 (not $x44)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (and $x26 $x23)))
 (let (($x110 (and (not $x118) $x152)))
 (let (($x159 (and (and (and (and (and (and $x110 $x94) $x106) $x58) $x32) $x67) $x75)))
 (let (($x45 (and $x159 $x56)))
 (let (($x36 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x19 (or false (or false (and (and true (or $x30 $x62)) (or $x80 $x127))))))
 (let (($x66 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x19)))
 (let (($x40 (and (and (and $x66 $x36) $x45) $x161)))
 (let (($x88 (= $x40 true)))
 (let (($x34 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x93 (and $x34 $x88)))
 (let (($x187 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x179 (and $x187 $x93)))
 (let (($x149 (forall ((input.ind-%var741X (_ BitVec 32)) )(let (($x156 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var741X)))
 (=> $x156 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var741X) (_ bv0 32)))))
 ))
 (let (($x144 (forall ((input.ind-%var740X (_ BitVec 32)) )(let (($x156 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var740X)))
 (= $x156 false)))
 ))
 (let (($x141 (and $x144 $x149)))
 (let (($x81 (and $x141 $x179)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x168 (and $x151 $x81)))
 (let (($x87 (=> $x168 $x174)))
 (not $x87))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 38
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x122 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x147 (bvneg ?x122)))
 (let (($x24 (= ?x147 input.dst.llvm-%n)))
 (let (($x137 (= $x24 true)))
 (let ((?x161 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x136 (concat ?x27 (concat ?x81 (concat ?x88 ?x161)))))
 (let (($x76 (= input.dst.llvm-%m ?x136)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x97 (concat ?x41 (concat ?x190 (concat ?x108 ?x84)))))
 (let (($x39 (= input.dst.llvm-%n ?x97)))
 (let (($x174 (and $x39 $x76)))
 (let (($x171 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x87 (and $x171 $x174)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x79)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x85)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x75 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x96)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x159 (and $x67 $x75)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (and $x6 $x159)))
 (let (($x59 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x54 (and $x58 $x20)))
 (let (($x186 (not $x54)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x70 (and $x106 $x77)))
 (let (($x170 (and (not $x70) $x186)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x124 $x90)))
 (let (($x94 (not $x69)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x28 (and $x38 $x73)))
 (let (($x53 (and (not $x28) $x94)))
 (let (($x9 (and (and (and (and (and (and $x53 $x170) $x63) $x59) $x49) $x45) $x15)))
 (let (($x25 (and $x9 $x21)))
 (let (($x127 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x66 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x66)))
 (let (($x110 (or false (or false (and (and true (or $x153 $x36)) (or $x184 $x51))))))
 (let (($x92 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x110)))
 (let (($x176 (and (and (and $x92 $x127) $x25) $x87)))
 (let (($x157 (= $x176 true)))
 (let (($x91 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x68 (and $x91 $x157)))
 (let (($x158 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x116 (and $x158 $x68)))
 (let (($x121 (forall ((input.ind-%var751X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var751X)))
 (=> $x144 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var751X) (_ bv0 32)))))
 ))
 (let (($x5 (forall ((input.ind-%var750X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var750X)))
 (= $x144 false)))
 ))
 (let (($x7 (and $x5 $x121)))
 (let (($x134 (and $x7 $x116)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x104 (and $x151 $x134)))
 (let (($x102 (=> $x104 $x137)))
 (not $x102))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x122 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x147 (bvneg ?x122)))
 (let (($x24 (= ?x147 input.dst.llvm-%n)))
 (let (($x137 (= $x24 true)))
 (let ((?x161 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x88 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x136 (concat ?x27 (concat ?x81 (concat ?x88 ?x161)))))
 (let (($x76 (= input.dst.llvm-%m ?x136)))
 (let ((?x84 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x97 (concat ?x41 (concat ?x190 (concat ?x108 ?x84)))))
 (let (($x39 (= input.dst.llvm-%n ?x97)))
 (let (($x174 (and $x39 $x76)))
 (let (($x171 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x87 (and $x171 $x174)))
 (let ((?x79 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x21 (= (_ bv0 32) ?x79)))
 (let ((?x85 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x85)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x56)))
 (let ((?x96 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x75 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x96)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x159 (and $x67 $x75)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (and $x6 $x159)))
 (let (($x59 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x63 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x54 (and $x58 $x20)))
 (let (($x186 (not $x54)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x70 (and $x106 $x77)))
 (let (($x170 (and (not $x70) $x186)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x69 (and $x124 $x90)))
 (let (($x94 (not $x69)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x28 (and $x38 $x73)))
 (let (($x53 (and (not $x28) $x94)))
 (let (($x9 (and (and (and (and (and (and $x53 $x170) $x63) $x59) $x49) $x45) $x15)))
 (let (($x25 (and $x9 $x21)))
 (let (($x127 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x66 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x36 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x66)))
 (let (($x110 (or false (or false (and (and true (or $x153 $x36)) (or $x184 $x51))))))
 (let (($x92 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x110)))
 (let (($x176 (and (and (and $x92 $x127) $x25) $x87)))
 (let (($x157 (= $x176 true)))
 (let (($x91 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x68 (and $x91 $x157)))
 (let (($x158 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x116 (and $x158 $x68)))
 (let (($x121 (forall ((input.ind-%var751X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var751X)))
 (=> $x144 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var751X) (_ bv0 32)))))
 ))
 (let (($x5 (forall ((input.ind-%var750X (_ BitVec 32)) )(let (($x144 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var750X)))
 (= $x144 false)))
 ))
 (let (($x7 (and $x5 $x121)))
 (let (($x134 (and $x7 $x116)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x104 (and $x151 $x134)))
 (let (($x102 (=> $x104 $x137)))
 (not $x102))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 39
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x11 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x109 (= $x11 true)))
 (let ((?x87 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x122 (concat ?x134 (concat ?x157 ?x87)))))
 (let (($x24 (= input.dst.llvm-%m ?x147)))
 (let ((?x39 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x136 (concat ?x168 (concat ?x88 (concat ?x27 ?x39)))))
 (let (($x76 (= input.dst.llvm-%n ?x136)))
 (let (($x137 (and $x76 $x24)))
 (let (($x173 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x102 (and $x173 $x137)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x78)))
 (let ((?x61 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x61)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x85)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x9 (and $x45 $x15)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x56 $x9)))
 (let (($x172 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x159 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (and $x59 $x120)))
 (let (($x67 (not $x6)))
 (let (($x160 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x63 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x63 $x160)))
 (let (($x96 (and (not $x32) $x67)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x186 (and $x20 $x54)))
 (let (($x170 (not $x186)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (and $x70 $x55)))
 (let (($x86 (and (not $x58) $x170)))
 (let (($x105 (and (and (and (and (and (and $x86 $x96) $x159) $x172) $x79) $x25) $x126)))
 (let (($x190 (and $x105 $x22)))
 (let (($x51 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x124 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x92 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x150 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x92)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x92)))
 (let (($x53 (or false (or false (and (and true (or $x125 $x127)) (or $x150 $x124))))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x53)))
 (let (($x80 (and (and (and $x77 $x51) $x190) $x102)))
 (let (($x166 (= $x80 true)))
 (let (($x26 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x132 (and $x26 $x166)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x60 (and $x19 $x132)))
 (let (($x65 (forall ((input.ind-%var761X (_ BitVec 32)) )(let (($x5 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var761X)))
 (=> $x5 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var761X) (_ bv0 32)))))
 ))
 (let (($x139 (forall ((input.ind-%var760X (_ BitVec 32)) )(let (($x5 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var760X)))
 (= $x5 false)))
 ))
 (let (($x66 (and $x139 $x65)))
 (let (($x129 (and $x66 $x60)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x143 (and $x151 $x129)))
 (let (($x156 (=> $x143 $x109)))
 (not $x156))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x11 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x109 (= $x11 true)))
 (let ((?x87 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x134 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x122 (concat ?x134 (concat ?x157 ?x87)))))
 (let (($x24 (= input.dst.llvm-%m ?x147)))
 (let ((?x39 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x88 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x168 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x136 (concat ?x168 (concat ?x88 (concat ?x27 ?x39)))))
 (let (($x76 (= input.dst.llvm-%n ?x136)))
 (let (($x137 (and $x76 $x24)))
 (let (($x173 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x102 (and $x173 $x137)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x22 (= (_ bv0 32) ?x78)))
 (let ((?x61 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x61)))
 (let ((?x21 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x25 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x21)))
 (let ((?x85 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x85)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x9 (and $x45 $x15)))
 (let (($x56 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (and $x56 $x9)))
 (let (($x172 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x159 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x59 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x6 (and $x59 $x120)))
 (let (($x67 (not $x6)))
 (let (($x160 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x63 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x63 $x160)))
 (let (($x96 (and (not $x32) $x67)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x186 (and $x20 $x54)))
 (let (($x170 (not $x186)))
 (let (($x55 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (and $x70 $x55)))
 (let (($x86 (and (not $x58) $x170)))
 (let (($x105 (and (and (and (and (and (and $x86 $x96) $x159) $x172) $x79) $x25) $x126)))
 (let (($x190 (and $x105 $x22)))
 (let (($x51 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x124 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x92 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x150 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x92)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x92)))
 (let (($x53 (or false (or false (and (and true (or $x125 $x127)) (or $x150 $x124))))))
 (let (($x77 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x53)))
 (let (($x80 (and (and (and $x77 $x51) $x190) $x102)))
 (let (($x166 (= $x80 true)))
 (let (($x26 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x132 (and $x26 $x166)))
 (let (($x19 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x60 (and $x19 $x132)))
 (let (($x65 (forall ((input.ind-%var761X (_ BitVec 32)) )(let (($x5 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var761X)))
 (=> $x5 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var761X) (_ bv0 32)))))
 ))
 (let (($x139 (forall ((input.ind-%var760X (_ BitVec 32)) )(let (($x5 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var760X)))
 (= $x5 false)))
 ))
 (let (($x66 (and $x139 $x65)))
 (let (($x129 (and $x66 $x60)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x143 (and $x151 $x129)))
 (let (($x156 (=> $x143 $x109)))
 (not $x156))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 40
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x33 (forall ((input.ind-%var781X (_ BitVec 32)) )(let ((?x12 (bvadd (bvmul input.ind-%var781X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x181))))
 (=> false (= (_ bv0 32) ?x123))))))
 ))
 (let (($x131 (forall ((input.ind-%var780X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var780X) (bvult input.ind-%var780X (_ bv0 32)))))
 ))
 (let (($x99 (and $x131 $x33)))
 (let (($x57 (= $x99 true)))
 (let ((?x102 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x156 (concat ?x109 (concat ?x129 (concat ?x166 ?x102)))))
 (let (($x162 (= input.dst.llvm-%m ?x156)))
 (let ((?x76 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x104 (concat ?x157 (concat ?x122 ?x76)))))
 (let (($x24 (= input.dst.llvm-%n ?x147)))
 (let (($x23 (and $x24 $x162)))
 (let (($x179 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x184 (and $x179 $x23)))
 (let ((?x108 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x108)))
 (let ((?x135 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x8 (= (_ bv0 32) ?x135)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x22)))
 (let ((?x61 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x126 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x61)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (and $x25 $x126)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (and $x21 $x105)))
 (let (($x41 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x172 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x56 (and $x172 $x133)))
 (let (($x45 (not $x56)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x159 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x49 (and $x159 $x140)))
 (let (($x85 (and (not $x49) $x45)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x120 $x6)))
 (let (($x96 (not $x67)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x59 (and $x32 $x101)))
 (let (($x75 (and (not $x59) $x96)))
 (let (($x40 (and (and (and (and (and (and $x75 $x85) $x9) $x41) $x78) $x190) $x8)))
 (let (($x88 (and $x40 $x84)))
 (let (($x124 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x20 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x77 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x77)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x77)))
 (let (($x86 (or false (or false (and (and true (or $x118 $x51)) (or $x16 $x20))))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x86)))
 (let (($x187 (and (and (and $x160 $x124) $x88) $x184)))
 (let (($x62 (= $x187 true)))
 (let (($x38 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x149 (and $x38 $x62)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x30 (and $x110 $x149)))
 (let (($x152 (forall ((input.ind-%var771X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var771X)))
 (=> $x139 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var771X) (_ bv0 32)))))
 ))
 (let (($x177 (forall ((input.ind-%var770X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var770X)))
 (= $x139 false)))
 ))
 (let (($x92 (and $x177 $x152)))
 (let (($x82 (and $x92 $x30)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x144 (and $x151 $x82)))
 (let (($x114 (=> $x144 $x57)))
 (not $x114))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x33 (forall ((input.ind-%var781X (_ BitVec 32)) )(let ((?x12 (bvadd (bvmul input.ind-%var781X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv1 32))) (select input.dst.llvm-mem ?x12))))
 (let ((?x123 (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x12 (_ bv2 32))) ?x181))))
 (=> false (= (_ bv0 32) ?x123))))))
 ))
 (let (($x131 (forall ((input.ind-%var780X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var780X) (bvult input.ind-%var780X (_ bv0 32)))))
 ))
 (let (($x99 (and $x131 $x33)))
 (let (($x57 (= $x99 true)))
 (let ((?x102 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x109 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x156 (concat ?x109 (concat ?x129 (concat ?x166 ?x102)))))
 (let (($x162 (= input.dst.llvm-%m ?x156)))
 (let ((?x76 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x147 (concat ?x104 (concat ?x157 (concat ?x122 ?x76)))))
 (let (($x24 (= input.dst.llvm-%n ?x147)))
 (let (($x23 (and $x24 $x162)))
 (let (($x179 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x184 (and $x179 $x23)))
 (let ((?x108 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x108)))
 (let ((?x135 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x8 (= (_ bv0 32) ?x135)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x190 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x22)))
 (let ((?x61 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x126 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x61)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (and $x25 $x126)))
 (let (($x21 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (and $x21 $x105)))
 (let (($x41 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x133 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x172 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x56 (and $x172 $x133)))
 (let (($x45 (not $x56)))
 (let (($x140 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x159 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x49 (and $x159 $x140)))
 (let (($x85 (and (not $x49) $x45)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x120 $x6)))
 (let (($x96 (not $x67)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x59 (and $x32 $x101)))
 (let (($x75 (and (not $x59) $x96)))
 (let (($x40 (and (and (and (and (and (and $x75 $x85) $x9) $x41) $x78) $x190) $x8)))
 (let (($x88 (and $x40 $x84)))
 (let (($x124 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x20 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x77 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x77)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x77)))
 (let (($x86 (or false (or false (and (and true (or $x118 $x51)) (or $x16 $x20))))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x86)))
 (let (($x187 (and (and (and $x160 $x124) $x88) $x184)))
 (let (($x62 (= $x187 true)))
 (let (($x38 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x149 (and $x38 $x62)))
 (let (($x110 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x30 (and $x110 $x149)))
 (let (($x152 (forall ((input.ind-%var771X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var771X)))
 (=> $x139 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var771X) (_ bv0 32)))))
 ))
 (let (($x177 (forall ((input.ind-%var770X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var770X)))
 (= $x139 false)))
 ))
 (let (($x92 (and $x177 $x152)))
 (let (($x82 (and $x92 $x30)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x144 (and $x151 $x82)))
 (let (($x114 (=> $x144 $x57)))
 (not $x114))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 41
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x71 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x223 (= $x71 false)))
 (let (($x224 (= $x223 true)))
 (let ((?x55 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x16 (bvneg ?x55)))
 (let (($x216 (= ?x16 input.dst.llvm-%n)))
 (let (($x217 (= $x216 true)))
 (let (($x213 (= (_ bv0 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x214 (= $x213 true)))
 (let (($x210 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x211 (= $x210 true)))
 (let (($x207 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x208 (= $x207 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x205 (= $x204 true)))
 (let (($x201 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x202 (= $x201 true)))
 (let (($x197 (forall ((input.ind-%var797X (_ BitVec 32)) )(let ((?x148 (bvadd (bvmul input.ind-%var797X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x148))))
 (let ((?x74 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x148 (_ bv2 32))) ?x52)))
 (let ((?x194 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x148 (_ bv3 32))) ?x74)))
 (let ((?x98 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var797X)))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var797X)))
 (=> $x73 (= ?x98 ?x194)))))))))
 ))
 (let (($x100 (forall ((input.ind-%var796X (_ BitVec 32)) )(let (($x130 (and (bvule (_ bv0 32) input.ind-%var796X) (bvult input.ind-%var796X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var796X)))
 (= $x73 $x130))))
 ))
 (let (($x198 (and $x100 $x197)))
 (let (($x199 (= $x198 true)))
 (let ((?x10 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x64 (bvadd input.dst.llvm-%m ?x10)))
 (let (($x181 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x72 (bvadd ?x64 (_ bv3 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x72)))
 (let (($x165 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x72)))
 (let (($x191 (or false (or false (and (and true (or $x175 $x165)) (or $x37 $x181))))))
 (let (($x99 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) $x191)))
 (let (($x48 (=> (and $x71 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) $x191)))
 (let (($x115 (= $x48 true)))
 (let (($x62 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x149 (= $x62 true)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x60)))
 (let ((?x11 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x109 (= (_ bv0 32) ?x11)))
 (let ((?x147 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x147)))
 (let ((?x122 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x76 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x122)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x116 (and $x157 $x76)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x176 $x116)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x189 (and $x88 $x97)))
 (let (($x27 (not $x189)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x40 $x108)))
 (let (($x179 (and (not $x84) $x27)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x168 $x22)))
 (let (($x81 (not $x190)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x140 $x49)))
 (let (($x8 (and (not $x78) $x81)))
 (let (($x156 (and (and (and (and (and (and $x8 $x179) $x68) $x134) $x87) $x24) $x109)))
 (let (($x162 (and $x156 $x129)))
 (let (($x93 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x173 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x61 (or false (or false (and (and true (or $x85 $x173)) (or $x41 $x93))))))
 (let (($x105 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x61)))
 (let (($x23 (and $x105 $x162)))
 (let (($x184 (= $x23 true)))
 (let (($x6 (= (_ bv0 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x67 (= $x6 true)))
 (let (($x59 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x171 (= $x59 true)))
 (let (($x174 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x32 (= $x174 true)))
 (let ((?x170 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x86 (= (_ bv0 2) ?x170)))
 (let (($x160 (= $x86 true)))
 (let (($x58 (= ?x16 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x20 (= $x58 true)))
 (let (($x28 (and $x20 $x160)))
 (let (($x101 (and $x28 $x32)))
 (let (($x120 (and $x101 $x171)))
 (let (($x96 (and $x120 $x67)))
 (let (($x187 (and $x96 $x184)))
 (let (($x30 (and $x187 $x149)))
 (let (($x57 (and $x30 $x115)))
 (let (($x200 (and $x57 $x199)))
 (let (($x203 (and $x200 $x202)))
 (let (($x206 (and $x203 $x205)))
 (let (($x209 (and $x206 $x208)))
 (let (($x212 (and $x209 $x211)))
 (let (($x215 (and $x212 $x214)))
 (let (($x218 (and $x215 $x217)))
 (let (($x31 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x219 (and $x31 $x218)))
 (let (($x118 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x220 (and $x118 $x219)))
 (let (($x63 (forall ((input.ind-%var807X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var807X)))
 (=> $x139 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var807X) (_ bv0 32)))))
 ))
 (let (($x44 (forall ((input.ind-%var806X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var806X)))
 (= $x139 false)))
 ))
 (let (($x94 (and $x44 $x63)))
 (let (($x221 (and $x94 $x220)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x222 (and $x151 $x221)))
 (let (($x225 (=> $x222 $x224)))
 (not $x225)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x71 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x223 (= $x71 false)))
 (let (($x224 (= $x223 true)))
 (let ((?x55 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x16 (bvneg ?x55)))
 (let (($x216 (= ?x16 input.dst.llvm-%n)))
 (let (($x217 (= $x216 true)))
 (let (($x213 (= (_ bv0 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x214 (= $x213 true)))
 (let (($x210 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x211 (= $x210 true)))
 (let (($x207 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x208 (= $x207 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x205 (= $x204 true)))
 (let (($x201 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x202 (= $x201 true)))
 (let (($x197 (forall ((input.ind-%var797X (_ BitVec 32)) )(let ((?x148 (bvadd (bvmul input.ind-%var797X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x52 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x148 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x148))))
 (let ((?x74 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x148 (_ bv2 32))) ?x52)))
 (let ((?x194 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x148 (_ bv3 32))) ?x74)))
 (let ((?x98 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var797X)))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var797X)))
 (=> $x73 (= ?x98 ?x194)))))))))
 ))
 (let (($x100 (forall ((input.ind-%var796X (_ BitVec 32)) )(let (($x130 (and (bvule (_ bv0 32) input.ind-%var796X) (bvult input.ind-%var796X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var796X)))
 (= $x73 $x130))))
 ))
 (let (($x198 (and $x100 $x197)))
 (let (($x199 (= $x198 true)))
 (let ((?x10 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x64 (bvadd input.dst.llvm-%m ?x10)))
 (let (($x181 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x72 (bvadd ?x64 (_ bv3 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x72)))
 (let (($x165 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x72)))
 (let (($x191 (or false (or false (and (and true (or $x175 $x165)) (or $x37 $x181))))))
 (let (($x99 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) $x191)))
 (let (($x48 (=> (and $x71 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) $x191)))
 (let (($x115 (= $x48 true)))
 (let (($x62 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x149 (= $x62 true)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x60)))
 (let ((?x11 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x109 (= (_ bv0 32) ?x11)))
 (let ((?x147 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x147)))
 (let ((?x122 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x76 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x122)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x116 (and $x157 $x76)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x176 $x116)))
 (let (($x134 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x189 (and $x88 $x97)))
 (let (($x27 (not $x189)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x40 $x108)))
 (let (($x179 (and (not $x84) $x27)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x168 $x22)))
 (let (($x81 (not $x190)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (and $x140 $x49)))
 (let (($x8 (and (not $x78) $x81)))
 (let (($x156 (and (and (and (and (and (and $x8 $x179) $x68) $x134) $x87) $x24) $x109)))
 (let (($x162 (and $x156 $x129)))
 (let (($x93 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x173 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x85 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x61 (or false (or false (and (and true (or $x85 $x173)) (or $x41 $x93))))))
 (let (($x105 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x61)))
 (let (($x23 (and $x105 $x162)))
 (let (($x184 (= $x23 true)))
 (let (($x6 (= (_ bv0 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x67 (= $x6 true)))
 (let (($x59 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x171 (= $x59 true)))
 (let (($x174 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x32 (= $x174 true)))
 (let ((?x170 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x86 (= (_ bv0 2) ?x170)))
 (let (($x160 (= $x86 true)))
 (let (($x58 (= ?x16 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x20 (= $x58 true)))
 (let (($x28 (and $x20 $x160)))
 (let (($x101 (and $x28 $x32)))
 (let (($x120 (and $x101 $x171)))
 (let (($x96 (and $x120 $x67)))
 (let (($x187 (and $x96 $x184)))
 (let (($x30 (and $x187 $x149)))
 (let (($x57 (and $x30 $x115)))
 (let (($x200 (and $x57 $x199)))
 (let (($x203 (and $x200 $x202)))
 (let (($x206 (and $x203 $x205)))
 (let (($x209 (and $x206 $x208)))
 (let (($x212 (and $x209 $x211)))
 (let (($x215 (and $x212 $x214)))
 (let (($x218 (and $x215 $x217)))
 (let (($x31 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x219 (and $x31 $x218)))
 (let (($x118 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x220 (and $x118 $x219)))
 (let (($x63 (forall ((input.ind-%var807X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var807X)))
 (=> $x139 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var807X) (_ bv0 32)))))
 ))
 (let (($x44 (forall ((input.ind-%var806X (_ BitVec 32)) )(let (($x139 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var806X)))
 (= $x139 false)))
 ))
 (let (($x94 (and $x44 $x63)))
 (let (($x221 (and $x94 $x220)))
 (let (($x151 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x222 (and $x151 $x221)))
 (let (($x225 (=> $x222 $x224)))
 (not $x225)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x198e5208)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd19cd280)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #xc8eb5b04)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd19cd283)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x198e520b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd19cd280)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x198e5208)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun k!4 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (concat (k!4 (bvadd #xc8eb5b07 (bvmul #x00000004 x!0)))
            (k!4 (bvadd #xc8eb5b06 (bvmul #x00000004 x!0)))
            (k!4 (bvadd #xc8eb5b05 (bvmul #x00000004 x!0)))
            (k!4 (bvadd #xc8eb5b04 (bvmul #x00000004 x!0)))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x84800044)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x12020010)
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!4))
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x02020040)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x84800047)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x02020043)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x84800044)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x02020040)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!4 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (concat (k!4 (bvadd #x12020013 (bvmul #x00000004 x!0)))
            (k!4 (bvadd #x12020012 (bvmul #x00000004 x!0)))
            (k!4 (bvadd #x12020011 (bvmul #x00000004 x!0)))
            (k!4 (bvadd #x12020010 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 42
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x125 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x34 (not $x125)))
 (let (($x155 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x121 (not $x155)))
 (let (($x152 (or $x121 $x34)))
 (let (($x38 (= $x152 true)))
 (let ((?x50 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x13 (bvneg ?x50)))
 (let (($x185 (= ?x13 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x95 (= $x185 true)))
 (let ((?x114 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x137 (bvneg ?x114)))
 (let (($x167 (= ?x137 input.dst.llvm-%n)))
 (let (($x89 (= $x167 true)))
 (let (($x136 (= ?x137 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x180 (= $x136 true)))
 (let (($x178 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x177 (= $x178 true)))
 (let (($x106 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x92 (= $x106 true)))
 (let (($x188 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x43 (= $x188 true)))
 (let (($x75 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x159 (= $x75 true)))
 (let (($x224 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x225 (= $x224 true)))
 (let (($x220 (forall ((input.ind-%var1139X (_ BitVec 32)) )(let ((?x207 (bvadd (bvmul input.ind-%var1139X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x211 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x207))))
 (let ((?x214 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x207 (_ bv2 32))) ?x211)))
 (let ((?x217 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x207 (_ bv3 32))) ?x214)))
 (let ((?x83 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1139X)))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1139X)))
 (=> $x73 (= ?x83 ?x217)))))))))
 ))
 (let (($x192 (forall ((input.ind-%var1138X (_ BitVec 32)) )(let (($x146 (and (bvule (_ bv0 32) input.ind-%var1138X) (bvult input.ind-%var1138X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1138X)))
 (= $x73 $x146))))
 ))
 (let (($x221 (and $x192 $x220)))
 (let (($x222 (= $x221 true)))
 (let (($x191 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x99 (= $x191 true)))
 (let (($x46 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x123 (= $x46 true)))
 (let ((?x141 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x141)))
 (let ((?x144 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x144)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let ((?x184 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x187 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x184)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x62 (and $x23 $x187)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (and $x162 $x62)))
 (let (($x129 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x147 (and $x87 $x132)))
 (let (($x24 (not $x147)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x116 (and $x122 $x76)))
 (let (($x11 (and (not $x116) $x24)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (and $x104 $x134)))
 (let (($x176 (not $x102)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x168 $x22)))
 (let (($x154 (and (not $x166) $x176)))
 (let (($x175 (and (and (and (and (and (and $x154 $x11) $x156) $x129) $x149) $x82) $x71)))
 (let (($x165 (and $x175 $x10)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x8 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x80 (or false (or false (and (and true (or $x40 $x108)) (or $x88 $x97))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x80)))
 (let (($x112 (and $x68 $x165)))
 (let (($x169 (= $x112 true)))
 (let ((?x140 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x49 (= (_ bv0 2) ?x140)))
 (let (($x78 (= $x49 true)))
 (let (($x37 (and $x78 $x169)))
 (let (($x164 (and $x37 $x123)))
 (let (($x48 (and $x164 $x99)))
 (let (($x223 (and $x48 $x222)))
 (let (($x226 (and $x223 $x225)))
 (let (($x150 (and $x226 $x159)))
 (let (($x110 (and $x150 $x43)))
 (let (($x183 (and $x110 $x92)))
 (let (($x103 (and $x183 $x177)))
 (let (($x113 (and $x103 $x180)))
 (let (($x163 (and $x113 $x89)))
 (let (($x107 (and $x163 $x95)))
 (let (($x61 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x119 (and $x61 $x107)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x7 (and $x21 $x119)))
 (let (($x41 (forall ((input.ind-%var1149X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1149X)))
 (=> $x120 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1149X) (_ bv0 32)))))
 ))
 (let (($x117 (forall ((input.ind-%var1148X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1148X)))
 (= $x120 false)))
 ))
 (let (($x79 (and $x117 $x41)))
 (let (($x142 (and $x79 $x7)))
 (let (($x32 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x158 (and $x32 $x142)))
 (let ((?x139 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x151 (bvadd input.dst.llvm-%m ?x139)))
 (let (($x186 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd ?x151 (_ bv3 32))))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x70 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x51)))
 (let (($x28 (or false (or false (and (and true (or $x31 $x70)) (or $x54 $x186))))))
 (let (($x174 (=> (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) $x28)))
 (let (($x127 (=> (and $x125 (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32)))) $x28)))
 (let (($x36 (and $x127 $x158)))
 (let (($x111 (=> $x36 $x38)))
 (not $x111))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x125 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x34 (not $x125)))
 (let (($x155 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x121 (not $x155)))
 (let (($x152 (or $x121 $x34)))
 (let (($x38 (= $x152 true)))
 (let ((?x50 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x13 (bvneg ?x50)))
 (let (($x185 (= ?x13 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x95 (= $x185 true)))
 (let ((?x114 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x137 (bvneg ?x114)))
 (let (($x167 (= ?x137 input.dst.llvm-%n)))
 (let (($x89 (= $x167 true)))
 (let (($x136 (= ?x137 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x180 (= $x136 true)))
 (let (($x178 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x177 (= $x178 true)))
 (let (($x106 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x92 (= $x106 true)))
 (let (($x188 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x43 (= $x188 true)))
 (let (($x75 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x159 (= $x75 true)))
 (let (($x224 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x225 (= $x224 true)))
 (let (($x220 (forall ((input.ind-%var1139X (_ BitVec 32)) )(let ((?x207 (bvadd (bvmul input.ind-%var1139X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x211 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x207 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x207))))
 (let ((?x214 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x207 (_ bv2 32))) ?x211)))
 (let ((?x217 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x207 (_ bv3 32))) ?x214)))
 (let ((?x83 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1139X)))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1139X)))
 (=> $x73 (= ?x83 ?x217)))))))))
 ))
 (let (($x192 (forall ((input.ind-%var1138X (_ BitVec 32)) )(let (($x146 (and (bvule (_ bv0 32) input.ind-%var1138X) (bvult input.ind-%var1138X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x73 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1138X)))
 (= $x73 $x146))))
 ))
 (let (($x221 (and $x192 $x220)))
 (let (($x222 (= $x221 true)))
 (let (($x191 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x99 (= $x191 true)))
 (let (($x46 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x123 (= $x46 true)))
 (let ((?x141 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x10 (= (_ bv0 32) ?x141)))
 (let ((?x144 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x71 (= (_ bv0 32) ?x144)))
 (let ((?x30 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x30)))
 (let ((?x184 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x187 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x184)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x62 (and $x23 $x187)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (and $x162 $x62)))
 (let (($x129 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x156 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x147 (and $x87 $x132)))
 (let (($x24 (not $x147)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x116 (and $x122 $x76)))
 (let (($x11 (and (not $x116) $x24)))
 (let (($x134 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (and $x104 $x134)))
 (let (($x176 (not $x102)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x168 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x168 $x22)))
 (let (($x154 (and (not $x166) $x176)))
 (let (($x175 (and (and (and (and (and (and $x154 $x11) $x156) $x129) $x149) $x82) $x71)))
 (let (($x165 (and $x175 $x10)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x8 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x80 (or false (or false (and (and true (or $x40 $x108)) (or $x88 $x97))))))
 (let (($x68 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x80)))
 (let (($x112 (and $x68 $x165)))
 (let (($x169 (= $x112 true)))
 (let ((?x140 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x49 (= (_ bv0 2) ?x140)))
 (let (($x78 (= $x49 true)))
 (let (($x37 (and $x78 $x169)))
 (let (($x164 (and $x37 $x123)))
 (let (($x48 (and $x164 $x99)))
 (let (($x223 (and $x48 $x222)))
 (let (($x226 (and $x223 $x225)))
 (let (($x150 (and $x226 $x159)))
 (let (($x110 (and $x150 $x43)))
 (let (($x183 (and $x110 $x92)))
 (let (($x103 (and $x183 $x177)))
 (let (($x113 (and $x103 $x180)))
 (let (($x163 (and $x113 $x89)))
 (let (($x107 (and $x163 $x95)))
 (let (($x61 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x119 (and $x61 $x107)))
 (let (($x21 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x7 (and $x21 $x119)))
 (let (($x41 (forall ((input.ind-%var1149X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1149X)))
 (=> $x120 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1149X) (_ bv0 32)))))
 ))
 (let (($x117 (forall ((input.ind-%var1148X (_ BitVec 32)) )(let (($x120 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1148X)))
 (= $x120 false)))
 ))
 (let (($x79 (and $x117 $x41)))
 (let (($x142 (and $x79 $x7)))
 (let (($x32 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x158 (and $x32 $x142)))
 (let ((?x139 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x151 (bvadd input.dst.llvm-%m ?x139)))
 (let (($x186 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x51 (bvadd ?x151 (_ bv3 32))))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x51)))
 (let (($x70 (bvugt ?x151 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x51)))
 (let (($x28 (or false (or false (and (and true (or $x31 $x70)) (or $x54 $x186))))))
 (let (($x174 (=> (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) $x28)))
 (let (($x127 (=> (and $x125 (bvule ?x151 (bvsub (bvadd ?x151 (_ bv4 32)) (_ bv1 32)))) $x28)))
 (let (($x36 (and $x127 $x158)))
 (let (($x111 (=> $x36 $x38)))
 (not $x111))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 43
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x249 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x246 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x247 (bvmul (_ bv4294967295 32) ?x246)))
 (let ((?x248 (bvneg ?x247)))
 (let (($x250 (= ?x248 ?x249)))
 (let (($x251 (= $x250 true)))
 (let ((?x234 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x235 (bvneg ?x234)))
 (let (($x236 (= ?x235 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x237 (= $x236 true)))
 (let (($x231 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x232 (= $x231 true)))
 (let (($x228 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x229 (= $x228 true)))
 (let (($x126 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x15 (= $x126 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x17 (= $x204 true)))
 (let (($x57 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x5 (= $x57 true)))
 (let (($x74 (forall ((input.ind-%var1159X (_ BitVec 32)) )(let ((?x173 (bvadd (bvmul input.ind-%var1159X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x130 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x173))))
 (let ((?x201 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x173 (_ bv2 32))) ?x130)))
 (let ((?x199 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x173 (_ bv3 32))) ?x201)))
 (let ((?x155 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1159X)))
 (let (($x113 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1159X)))
 (=> $x113 (= ?x155 ?x199)))))))))
 ))
 (let (($x7 (forall ((input.ind-%var1158X (_ BitVec 32)) )(let (($x107 (and (bvule (_ bv0 32) input.ind-%var1158X) (bvult input.ind-%var1158X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x113 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1158X)))
 (= $x113 $x107))))
 ))
 (let (($x196 (and $x7 $x74)))
 (let (($x200 (= $x196 true)))
 (let (($x66 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x114 (= $x66 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x150 (bvsub ?x94 ?x63)))
 (let (($x106 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x150) (bvult ?x94 ?x150))))
 (let (($x226 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x75 (ite $x226 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x223 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x224 (bvmul (_ bv4 64) ?x223)))
 (let ((?x225 ((_ extract 63 32) ?x224)))
 (let (($x159 (= ?x225 ?x75)))
 (let (($x92 (and $x159 $x106)))
 (let (($x221 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x183 (and $x221 $x92)))
 (let (($x125 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x178 (=> $x125 $x183)))
 (let (($x177 (= $x178 true)))
 (let (($x214 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x217 (= $x214 true)))
 (let (($x208 (= $x125 true)))
 (let ((?x192 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x192)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x146)))
 (let ((?x91 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x191 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x191)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x48 (and $x164 $x99)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (and $x123 $x48)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x71 $x175)))
 (let (($x10 (not $x141)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x144 (and $x82 $x72)))
 (let (($x112 (and (not $x144) $x10)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x184 $x187)))
 (let (($x149 (not $x62)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x122 $x76)))
 (let (($x30 (and (not $x23) $x149)))
 (let (($x197 (and (and (and (and (and (and $x30 $x112) $x37) $x46) $x73) $x98) $x148)))
 (let (($x212 (and $x197 $x83)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x87)))
 (let (($x129 (or false (or false (and (and true (or $x132 $x147)) (or $x64 $x109))))))
 (let (($x162 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x129)))
 (let (($x213 (and $x162 $x212)))
 (let (($x209 (= $x213 true)))
 (let ((?x104 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x134 (= (_ bv0 2) ?x104)))
 (let (($x102 (= $x134 true)))
 (let ((?x27 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x179 (bvneg ?x27)))
 (let (($x168 (= ?x179 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x22 (= $x168 true)))
 (let (($x80 (= ?x179 input.dst.llvm-%n)))
 (let (($x68 (= $x80 true)))
 (let (($x166 (and $x68 $x22)))
 (let (($x176 (and $x166 $x102)))
 (let (($x210 (and $x176 $x209)))
 (let (($x211 (and $x210 $x208)))
 (let (($x218 (and $x211 $x217)))
 (let (($x103 (and $x218 $x177)))
 (let (($x137 (and $x103 $x114)))
 (let (($x203 (and $x137 $x200)))
 (let (($x100 (and $x203 $x5)))
 (let (($x205 (and $x100 $x17)))
 (let (($x26 (and $x205 $x15)))
 (let (($x230 (and $x26 $x229)))
 (let (($x233 (and $x230 $x232)))
 (let (($x238 (and $x233 $x237)))
 (let (($x97 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x240 (and (not $x97) $x238)))
 (let (($x39 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (and $x39 $x240)))
 (let (($x40 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x242 (and $x40 $x241)))
 (let (($x81 (forall ((input.ind-%var1169X (_ BitVec 32)) )(let (($x56 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1169X)))
 (=> $x56 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1169X) (_ bv0 32)))))
 ))
 (let (($x79 (forall ((input.ind-%var1168X (_ BitVec 32)) )(let (($x56 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1168X)))
 (= $x56 false)))
 ))
 (let (($x161 (and $x79 $x81)))
 (let (($x243 (and $x161 $x242)))
 (let (($x120 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x244 (and $x120 $x243)))
 (let (($x160 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x55 (bvadd ?x94 (_ bv3 32))))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x58 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x55)))
 (let (($x90 (or false (or false (and (and true (or $x16 $x58)) (or $x86 $x160))))))
 (let (($x171 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x90)))
 (let (($x151 (=> (and $x125 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x90)))
 (let (($x245 (and $x151 $x244)))
 (let (($x252 (=> $x245 $x251)))
 (not $x252)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x249 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x246 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x247 (bvmul (_ bv4294967295 32) ?x246)))
 (let ((?x248 (bvneg ?x247)))
 (let (($x250 (= ?x248 ?x249)))
 (let (($x251 (= $x250 true)))
 (let ((?x234 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x235 (bvneg ?x234)))
 (let (($x236 (= ?x235 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x237 (= $x236 true)))
 (let (($x231 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x232 (= $x231 true)))
 (let (($x228 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x229 (= $x228 true)))
 (let (($x126 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x15 (= $x126 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x17 (= $x204 true)))
 (let (($x57 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x5 (= $x57 true)))
 (let (($x74 (forall ((input.ind-%var1159X (_ BitVec 32)) )(let ((?x173 (bvadd (bvmul input.ind-%var1159X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x130 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x173 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x173))))
 (let ((?x201 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x173 (_ bv2 32))) ?x130)))
 (let ((?x199 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x173 (_ bv3 32))) ?x201)))
 (let ((?x155 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1159X)))
 (let (($x113 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1159X)))
 (=> $x113 (= ?x155 ?x199)))))))))
 ))
 (let (($x7 (forall ((input.ind-%var1158X (_ BitVec 32)) )(let (($x107 (and (bvule (_ bv0 32) input.ind-%var1158X) (bvult input.ind-%var1158X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x113 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1158X)))
 (= $x113 $x107))))
 ))
 (let (($x196 (and $x7 $x74)))
 (let (($x200 (= $x196 true)))
 (let (($x66 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x114 (= $x66 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x150 (bvsub ?x94 ?x63)))
 (let (($x106 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x150) (bvult ?x94 ?x150))))
 (let (($x226 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x75 (ite $x226 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x223 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x224 (bvmul (_ bv4 64) ?x223)))
 (let ((?x225 ((_ extract 63 32) ?x224)))
 (let (($x159 (= ?x225 ?x75)))
 (let (($x92 (and $x159 $x106)))
 (let (($x221 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x183 (and $x221 $x92)))
 (let (($x125 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x178 (=> $x125 $x183)))
 (let (($x177 (= $x178 true)))
 (let (($x214 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x217 (= $x214 true)))
 (let (($x208 (= $x125 true)))
 (let ((?x192 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x192)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x146)))
 (let ((?x91 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x91)))
 (let ((?x191 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x99 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x191)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x48 (and $x164 $x99)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (and $x123 $x48)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x71 $x175)))
 (let (($x10 (not $x141)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x144 (and $x82 $x72)))
 (let (($x112 (and (not $x144) $x10)))
 (let (($x187 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x62 (and $x184 $x187)))
 (let (($x149 (not $x62)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x122 $x76)))
 (let (($x30 (and (not $x23) $x149)))
 (let (($x197 (and (and (and (and (and (and $x30 $x112) $x37) $x46) $x73) $x98) $x148)))
 (let (($x212 (and $x197 $x83)))
 (let (($x109 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x87 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x87)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x132 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x87)))
 (let (($x129 (or false (or false (and (and true (or $x132 $x147)) (or $x64 $x109))))))
 (let (($x162 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x129)))
 (let (($x213 (and $x162 $x212)))
 (let (($x209 (= $x213 true)))
 (let ((?x104 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x134 (= (_ bv0 2) ?x104)))
 (let (($x102 (= $x134 true)))
 (let ((?x27 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x179 (bvneg ?x27)))
 (let (($x168 (= ?x179 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x22 (= $x168 true)))
 (let (($x80 (= ?x179 input.dst.llvm-%n)))
 (let (($x68 (= $x80 true)))
 (let (($x166 (and $x68 $x22)))
 (let (($x176 (and $x166 $x102)))
 (let (($x210 (and $x176 $x209)))
 (let (($x211 (and $x210 $x208)))
 (let (($x218 (and $x211 $x217)))
 (let (($x103 (and $x218 $x177)))
 (let (($x137 (and $x103 $x114)))
 (let (($x203 (and $x137 $x200)))
 (let (($x100 (and $x203 $x5)))
 (let (($x205 (and $x100 $x17)))
 (let (($x26 (and $x205 $x15)))
 (let (($x230 (and $x26 $x229)))
 (let (($x233 (and $x230 $x232)))
 (let (($x238 (and $x233 $x237)))
 (let (($x97 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x240 (and (not $x97) $x238)))
 (let (($x39 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (and $x39 $x240)))
 (let (($x40 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x242 (and $x40 $x241)))
 (let (($x81 (forall ((input.ind-%var1169X (_ BitVec 32)) )(let (($x56 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1169X)))
 (=> $x56 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1169X) (_ bv0 32)))))
 ))
 (let (($x79 (forall ((input.ind-%var1168X (_ BitVec 32)) )(let (($x56 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1168X)))
 (= $x56 false)))
 ))
 (let (($x161 (and $x79 $x81)))
 (let (($x243 (and $x161 $x242)))
 (let (($x120 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x244 (and $x120 $x243)))
 (let (($x160 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x55 (bvadd ?x94 (_ bv3 32))))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x58 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x55)))
 (let (($x90 (or false (or false (and (and true (or $x16 $x58)) (or $x86 $x160))))))
 (let (($x171 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x90)))
 (let (($x151 (=> (and $x125 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x90)))
 (let (($x245 (and $x151 $x244)))
 (let (($x252 (=> $x245 $x251)))
 (not $x252)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 44
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x13 (bvsle ?x50 (_ bv3 32))))
 (let (($x101 (= $x13 true)))
 (let ((?x38 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x85 (bvneg ?x38)))
 (let (($x172 (= ?x85 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x153 (= $x172 true)))
 (let (($x89 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x163 (= $x89 true)))
 (let (($x140 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x36 (= $x140 true)))
 (let (($x96 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x117 (= $x96 true)))
 (let ((?x250 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x250)))
 (let ((?x248 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x249 (= (_ bv0 32) ?x248)))
 (let ((?x246 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x247 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x246)))
 (let ((?x242 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x243 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x242)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x244 (and $x241 $x243)))
 (let (($x240 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x245 (and $x240 $x244)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x236 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x229 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x231 (and $x229 $x230)))
 (let (($x232 (not $x231)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x228 (and $x15 $x26)))
 (let (($x234 (and (not $x228) $x232)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x204 (and $x5 $x100)))
 (let (($x17 (not $x204)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x202 $x198)))
 (let (($x126 (and (not $x57) $x17)))
 (let (($x121 (and (and (and (and (and (and $x126 $x234) $x236) $x238) $x245) $x247) $x249)))
 (let (($x9 (and $x121 $x251)))
 (let (($x199 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x52 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x52)))
 (let (($x196 (or false (or false (and (and true (or $x115 $x65)) (or $x201 $x199))))))
 (let (($x203 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x196)))
 (let (($x61 (and $x203 $x9)))
 (let (($x93 (= $x61 true)))
 (let ((?x7 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x155 (= (_ bv0 2) ?x7)))
 (let (($x34 (= $x155 true)))
 (let (($x95 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x185 (= $x95 true)))
 (let (($x114 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x137 (= $x114 true)))
 (let (($x177 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x103 (= $x177 true)))
 (let (($x106 (forall ((input.ind-%var1179X (_ BitVec 32)) )(let ((?x220 (bvadd (bvmul input.ind-%var1179X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x224 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x220))))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x220 (_ bv2 32))) ?x224)))
 (let ((?x150 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x220 (_ bv3 32))) ?x75)))
 (let ((?x215 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1179X)))
 (let (($x112 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1179X)))
 (=> $x112 (= ?x215 ?x150)))))))))
 ))
 (let (($x191 (forall ((input.ind-%var1178X (_ BitVec 32)) )(let (($x123 (and (bvule (_ bv0 32) input.ind-%var1178X) (bvult input.ind-%var1178X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x112 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1178X)))
 (= $x112 $x123))))
 ))
 (let (($x92 (and $x191 $x106)))
 (let (($x183 (= $x92 true)))
 (let ((?x149 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x30 (bvneg ?x149)))
 (let (($x165 (= ?x30 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x71 (= $x165 true)))
 (let (($x82 (= ?x30 input.dst.llvm-%n)))
 (let (($x72 (= $x82 true)))
 (let (($x184 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x187 (= $x184 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x109 (bvsub ?x94 ?x63)))
 (let (($x129 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x109) (bvult ?x94 ?x109))))
 (let (($x147 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x11 (ite $x147 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x14 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x87 (bvmul (_ bv4 64) ?x14)))
 (let ((?x132 ((_ extract 63 32) ?x87)))
 (let (($x64 (= ?x132 ?x11)))
 (let (($x162 (and $x64 $x129)))
 (let (($x116 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x122 (and $x116 $x162)))
 (let (($x138 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x76 (=> $x138 $x122)))
 (let (($x23 (= $x76 true)))
 (let (($x134 (= $x138 true)))
 (let (($x33 (and $x134 $x23)))
 (let (($x62 (and $x33 $x187)))
 (let (($x144 (and $x62 $x72)))
 (let (($x175 (and $x144 $x71)))
 (let (($x178 (and $x175 $x183)))
 (let (($x66 (and $x178 $x103)))
 (let (($x113 (and $x66 $x137)))
 (let (($x107 (and $x113 $x185)))
 (let (($x67 (and $x107 $x34)))
 (let (($x25 (and $x67 $x93)))
 (let (($x29 (and $x25 $x117)))
 (let (($x136 (and $x29 $x36)))
 (let (($x152 (and $x136 $x163)))
 (let (($x47 (and $x152 $x153)))
 (let (($x104 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x44 (and (not $x104) $x47)))
 (let (($x166 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x111 (and $x166 $x44)))
 (let (($x68 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x19 (and $x68 $x111)))
 (let (($x27 (forall ((input.ind-%var1189X (_ BitVec 32)) )(let (($x35 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1189X)))
 (=> $x35 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1189X) (_ bv0 32)))))
 ))
 (let (($x81 (forall ((input.ind-%var1188X (_ BitVec 32)) )(let (($x35 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1188X)))
 (= $x35 false)))
 ))
 (let (($x179 (and $x81 $x27)))
 (let (($x6 (and $x179 $x19)))
 (let (($x45 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x133 (and $x45 $x6)))
 (let (($x174 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x58 (bvadd ?x94 (_ bv3 32))))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x20 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x58)))
 (let (($x151 (or false (or false (and (and true (or $x54 $x20)) (or $x28 $x174))))))
 (let (($x120 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x151)))
 (let (($x51 (=> (and $x138 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x151)))
 (let (($x180 (and $x51 $x133)))
 (let (($x158 (=> $x180 $x101)))
 (not $x158))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x50 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x13 (bvsle ?x50 (_ bv3 32))))
 (let (($x101 (= $x13 true)))
 (let ((?x38 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x85 (bvneg ?x38)))
 (let (($x172 (= ?x85 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x153 (= $x172 true)))
 (let (($x89 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x163 (= $x89 true)))
 (let (($x140 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x36 (= $x140 true)))
 (let (($x96 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv3 32))))
 (let (($x117 (= $x96 true)))
 (let ((?x250 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x250)))
 (let ((?x248 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x249 (= (_ bv0 32) ?x248)))
 (let ((?x246 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x247 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x246)))
 (let ((?x242 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x243 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x242)))
 (let (($x241 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x244 (and $x241 $x243)))
 (let (($x240 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x245 (and $x240 $x244)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x236 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x230 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x229 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x231 (and $x229 $x230)))
 (let (($x232 (not $x231)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x228 (and $x15 $x26)))
 (let (($x234 (and (not $x228) $x232)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x204 (and $x5 $x100)))
 (let (($x17 (not $x204)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x202 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x57 (and $x202 $x198)))
 (let (($x126 (and (not $x57) $x17)))
 (let (($x121 (and (and (and (and (and (and $x126 $x234) $x236) $x238) $x245) $x247) $x249)))
 (let (($x9 (and $x121 $x251)))
 (let (($x199 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x52 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x201 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x52)))
 (let (($x196 (or false (or false (and (and true (or $x115 $x65)) (or $x201 $x199))))))
 (let (($x203 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x196)))
 (let (($x61 (and $x203 $x9)))
 (let (($x93 (= $x61 true)))
 (let ((?x7 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x155 (= (_ bv0 2) ?x7)))
 (let (($x34 (= $x155 true)))
 (let (($x95 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x185 (= $x95 true)))
 (let (($x114 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x137 (= $x114 true)))
 (let (($x177 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x103 (= $x177 true)))
 (let (($x106 (forall ((input.ind-%var1179X (_ BitVec 32)) )(let ((?x220 (bvadd (bvmul input.ind-%var1179X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x224 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x220 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x220))))
 (let ((?x75 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x220 (_ bv2 32))) ?x224)))
 (let ((?x150 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x220 (_ bv3 32))) ?x75)))
 (let ((?x215 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1179X)))
 (let (($x112 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1179X)))
 (=> $x112 (= ?x215 ?x150)))))))))
 ))
 (let (($x191 (forall ((input.ind-%var1178X (_ BitVec 32)) )(let (($x123 (and (bvule (_ bv0 32) input.ind-%var1178X) (bvult input.ind-%var1178X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x112 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1178X)))
 (= $x112 $x123))))
 ))
 (let (($x92 (and $x191 $x106)))
 (let (($x183 (= $x92 true)))
 (let ((?x149 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x30 (bvneg ?x149)))
 (let (($x165 (= ?x30 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x71 (= $x165 true)))
 (let (($x82 (= ?x30 input.dst.llvm-%n)))
 (let (($x72 (= $x82 true)))
 (let (($x184 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv3 32))))
 (let (($x187 (= $x184 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x109 (bvsub ?x94 ?x63)))
 (let (($x129 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x109) (bvult ?x94 ?x109))))
 (let (($x147 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x11 (ite $x147 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x14 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x87 (bvmul (_ bv4 64) ?x14)))
 (let ((?x132 ((_ extract 63 32) ?x87)))
 (let (($x64 (= ?x132 ?x11)))
 (let (($x162 (and $x64 $x129)))
 (let (($x116 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x122 (and $x116 $x162)))
 (let (($x138 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x76 (=> $x138 $x122)))
 (let (($x23 (= $x76 true)))
 (let (($x134 (= $x138 true)))
 (let (($x33 (and $x134 $x23)))
 (let (($x62 (and $x33 $x187)))
 (let (($x144 (and $x62 $x72)))
 (let (($x175 (and $x144 $x71)))
 (let (($x178 (and $x175 $x183)))
 (let (($x66 (and $x178 $x103)))
 (let (($x113 (and $x66 $x137)))
 (let (($x107 (and $x113 $x185)))
 (let (($x67 (and $x107 $x34)))
 (let (($x25 (and $x67 $x93)))
 (let (($x29 (and $x25 $x117)))
 (let (($x136 (and $x29 $x36)))
 (let (($x152 (and $x136 $x163)))
 (let (($x47 (and $x152 $x153)))
 (let (($x104 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x44 (and (not $x104) $x47)))
 (let (($x166 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x111 (and $x166 $x44)))
 (let (($x68 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x19 (and $x68 $x111)))
 (let (($x27 (forall ((input.ind-%var1189X (_ BitVec 32)) )(let (($x35 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1189X)))
 (=> $x35 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1189X) (_ bv0 32)))))
 ))
 (let (($x81 (forall ((input.ind-%var1188X (_ BitVec 32)) )(let (($x35 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1188X)))
 (= $x35 false)))
 ))
 (let (($x179 (and $x81 $x27)))
 (let (($x6 (and $x179 $x19)))
 (let (($x45 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x133 (and $x45 $x6)))
 (let (($x174 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x58 (bvadd ?x94 (_ bv3 32))))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x58)))
 (let (($x20 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x58)))
 (let (($x151 (or false (or false (and (and true (or $x54 $x20)) (or $x28 $x174))))))
 (let (($x120 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x151)))
 (let (($x51 (=> (and $x138 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x151)))
 (let (($x180 (and $x51 $x133)))
 (let (($x158 (=> $x180 $x101)))
 (not $x158))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x7ffffff4)
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000044)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x80000002)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x00000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000043)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000047)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000040)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000044)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x80000002)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x80000002)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (concat (k!1 (bvadd #x7ffffff7 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x7ffffff6 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x7ffffff5 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x7ffffff4 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000003) false
      (not (bvule #x00000003 x!0))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!7))
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xb133c204)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x60b1ca00)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x37fffff4)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x00000003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x60b1ca03)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xb133c207)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x60b1ca00)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xb133c204)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000004)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!7 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!7 (bvadd #x37fffff7 (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x37fffff6 (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x37fffff5 (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x37fffff4 (bvmul #x00000004 x!0))))))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1!10 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!9 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000003 x!0)
         (ite (bvule #x00000004 x!0) #x00000004 #x00000003)
         #x00000000))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m-0.L3%6%bbentry.0.1!10 (k!9 x!0)))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 45
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x48 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x218 (bvule ?x48 (_ bv4 32))))
 (let (($x8 (= $x218 true)))
 (let ((?x213 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x209 (bvneg ?x213)))
 (let (($x197 (= ?x209 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x192 (= $x197 true)))
 (let (($x146 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x208 (= $x146 true)))
 (let (($x169 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv4 32))))
 (let (($x37 (= $x169 true)))
 (let (($x88 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4 32))))
 (let (($x73 (= $x88 true)))
 (let ((?x59 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x59)))
 (let ((?x101 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x158 (= (_ bv0 32) ?x101)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let ((?x19 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x19)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (and $x111 $x6)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x180 (and $x44 $x133)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x172 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (and $x36 $x136)))
 (let (($x163 (not $x89)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x117 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x140 (and $x117 $x29)))
 (let (($x38 (and (not $x140) $x163)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x251 $x9)))
 (let (($x93 (not $x61)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x253 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x250 (and $x253 $x237)))
 (let (($x96 (and (not $x250) $x93)))
 (let (($x161 (and (and (and (and (and (and $x96 $x38) $x172) $x47) $x180) $x13) $x158)))
 (let (($x40 (and $x161 $x145)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x240 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x240)))
 (let (($x242 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x241 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x240)))
 (let (($x248 (or false (or false (and (and true (or $x241 $x242)) (or $x245 $x154))))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x248)))
 (let (($x56 (and $x121 $x40)))
 (let (($x41 (= $x56 true)))
 (let ((?x232 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x234 (= (_ bv0 2) ?x232)))
 (let (($x252 (= $x234 true)))
 (let (($x233 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x229 (= $x233 true)))
 (let (($x15 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4 32))))
 (let (($x26 (= $x15 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x17 (= $x204 true)))
 (let (($x57 (forall ((input.ind-%var1251X (_ BitVec 32)) )(let ((?x115 (bvadd (bvmul input.ind-%var1251X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x201 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x115))))
 (let ((?x195 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x115 (_ bv2 32))) ?x201)))
 (let ((?x203 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x115 (_ bv3 32))) ?x195)))
 (let ((?x178 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1251X)))
 (let (($x212 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1251X)))
 (=> $x212 (= ?x178 ?x203)))))))))
 ))
 (let (($x110 (forall ((input.ind-%var1250X (_ BitVec 32)) )(let (($x150 (and (bvule (_ bv0 32) input.ind-%var1250X) (bvult input.ind-%var1250X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x212 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1250X)))
 (= $x212 $x150))))
 ))
 (let (($x205 (and $x110 $x57)))
 (let (($x5 (= $x205 true)))
 (let ((?x46 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x123 (bvneg ?x46)))
 (let (($x98 (= ?x123 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x219 (= $x98 true)))
 (let (($x164 (= ?x123 input.dst.llvm-%n)))
 (let (($x191 (= $x164 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x149 (bvsub ?x94 ?x63)))
 (let (($x144 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x149) (bvult ?x94 ?x149))))
 (let (($x33 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x187 (ite $x33 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x122 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x76 (bvmul (_ bv4 64) ?x122)))
 (let ((?x23 ((_ extract 63 32) ?x76)))
 (let (($x62 (= ?x23 ?x187)))
 (let (($x165 (and $x62 $x144)))
 (let (($x129 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x71 (and $x129 $x165)))
 (let (($x53 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x175 (=> $x53 $x71)))
 (let (($x112 (= $x175 true)))
 (let (($x64 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4 32))))
 (let (($x156 (= $x64 true)))
 (let (($x11 (= $x53 true)))
 (let (($x109 (and $x11 $x156)))
 (let (($x207 (and $x109 $x112)))
 (let (($x215 (and $x207 $x191)))
 (let (($x220 (and $x215 $x219)))
 (let (($x100 (and $x220 $x5)))
 (let (($x126 (and $x100 $x17)))
 (let (($x228 (and $x126 $x26)))
 (let (($x230 (and $x228 $x229)))
 (let (($x235 (and $x230 $x252)))
 (let (($x78 (and $x235 $x41)))
 (let (($x141 (and $x78 $x73)))
 (let (($x216 (and $x141 $x37)))
 (let (($x211 (and $x216 $x208)))
 (let (($x148 (and $x211 $x192)))
 (let (($x24 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x210 (and (not $x24) $x148)))
 (let (($x132 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x214 (and $x132 $x210)))
 (let (($x143 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x10 (and $x143 $x214)))
 (let (($x102 (forall ((input.ind-%var1261X (_ BitVec 32)) )(let (($x108 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1261X)))
 (=> $x108 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1261X) (_ bv0 32)))))
 ))
 (let (($x27 (forall ((input.ind-%var1260X (_ BitVec 32)) )(let (($x108 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1260X)))
 (= $x108 false)))
 ))
 (let (($x176 (and $x27 $x102)))
 (let (($x206 (and $x176 $x10)))
 (let (($x79 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x181 (and $x79 $x206)))
 (let (($x90 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x20 (bvadd ?x94 (_ bv3 32))))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x86 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x20)))
 (let (($x51 (or false (or false (and (and true (or $x186 $x86)) (or $x127 $x90))))))
 (let (($x45 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x51)))
 (let (($x31 (=> (and $x53 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x51)))
 (let (($x217 (and $x31 $x181)))
 (let (($x97 (=> $x217 $x8)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x48 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x218 (bvule ?x48 (_ bv4 32))))
 (let (($x8 (= $x218 true)))
 (let ((?x213 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x209 (bvneg ?x213)))
 (let (($x197 (= ?x209 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x192 (= $x197 true)))
 (let (($x146 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x208 (= $x146 true)))
 (let (($x169 (bvsle input.spec-%var-i-0.L3%6%bbentry (_ bv4 32))))
 (let (($x37 (= $x169 true)))
 (let (($x88 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4 32))))
 (let (($x73 (= $x88 true)))
 (let ((?x59 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x145 (= (_ bv0 32) ?x59)))
 (let ((?x101 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x158 (= (_ bv0 32) ?x101)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x13 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let ((?x19 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x6 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x19)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (and $x111 $x6)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x180 (and $x44 $x133)))
 (let (($x47 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x172 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x89 (and $x36 $x136)))
 (let (($x163 (not $x89)))
 (let (($x29 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x117 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x140 (and $x117 $x29)))
 (let (($x38 (and (not $x140) $x163)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x251 $x9)))
 (let (($x93 (not $x61)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x253 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x250 (and $x253 $x237)))
 (let (($x96 (and (not $x250) $x93)))
 (let (($x161 (and (and (and (and (and (and $x96 $x38) $x172) $x47) $x180) $x13) $x158)))
 (let (($x40 (and $x161 $x145)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x240 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x240)))
 (let (($x242 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x241 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x240)))
 (let (($x248 (or false (or false (and (and true (or $x241 $x242)) (or $x245 $x154))))))
 (let (($x121 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x248)))
 (let (($x56 (and $x121 $x40)))
 (let (($x41 (= $x56 true)))
 (let ((?x232 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x234 (= (_ bv0 2) ?x232)))
 (let (($x252 (= $x234 true)))
 (let (($x233 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x229 (= $x233 true)))
 (let (($x15 (bvsle input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4 32))))
 (let (($x26 (= $x15 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x17 (= $x204 true)))
 (let (($x57 (forall ((input.ind-%var1251X (_ BitVec 32)) )(let ((?x115 (bvadd (bvmul input.ind-%var1251X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x201 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x115 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x115))))
 (let ((?x195 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x115 (_ bv2 32))) ?x201)))
 (let ((?x203 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x115 (_ bv3 32))) ?x195)))
 (let ((?x178 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1251X)))
 (let (($x212 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1251X)))
 (=> $x212 (= ?x178 ?x203)))))))))
 ))
 (let (($x110 (forall ((input.ind-%var1250X (_ BitVec 32)) )(let (($x150 (and (bvule (_ bv0 32) input.ind-%var1250X) (bvult input.ind-%var1250X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x212 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1250X)))
 (= $x212 $x150))))
 ))
 (let (($x205 (and $x110 $x57)))
 (let (($x5 (= $x205 true)))
 (let ((?x46 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x123 (bvneg ?x46)))
 (let (($x98 (= ?x123 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x219 (= $x98 true)))
 (let (($x164 (= ?x123 input.dst.llvm-%n)))
 (let (($x191 (= $x164 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x149 (bvsub ?x94 ?x63)))
 (let (($x144 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x149) (bvult ?x94 ?x149))))
 (let (($x33 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x187 (ite $x33 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x122 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x76 (bvmul (_ bv4 64) ?x122)))
 (let ((?x23 ((_ extract 63 32) ?x76)))
 (let (($x62 (= ?x23 ?x187)))
 (let (($x165 (and $x62 $x144)))
 (let (($x129 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x71 (and $x129 $x165)))
 (let (($x53 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x175 (=> $x53 $x71)))
 (let (($x112 (= $x175 true)))
 (let (($x64 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4 32))))
 (let (($x156 (= $x64 true)))
 (let (($x11 (= $x53 true)))
 (let (($x109 (and $x11 $x156)))
 (let (($x207 (and $x109 $x112)))
 (let (($x215 (and $x207 $x191)))
 (let (($x220 (and $x215 $x219)))
 (let (($x100 (and $x220 $x5)))
 (let (($x126 (and $x100 $x17)))
 (let (($x228 (and $x126 $x26)))
 (let (($x230 (and $x228 $x229)))
 (let (($x235 (and $x230 $x252)))
 (let (($x78 (and $x235 $x41)))
 (let (($x141 (and $x78 $x73)))
 (let (($x216 (and $x141 $x37)))
 (let (($x211 (and $x216 $x208)))
 (let (($x148 (and $x211 $x192)))
 (let (($x24 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x210 (and (not $x24) $x148)))
 (let (($x132 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x214 (and $x132 $x210)))
 (let (($x143 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x10 (and $x143 $x214)))
 (let (($x102 (forall ((input.ind-%var1261X (_ BitVec 32)) )(let (($x108 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1261X)))
 (=> $x108 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1261X) (_ bv0 32)))))
 ))
 (let (($x27 (forall ((input.ind-%var1260X (_ BitVec 32)) )(let (($x108 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1260X)))
 (= $x108 false)))
 ))
 (let (($x176 (and $x27 $x102)))
 (let (($x206 (and $x176 $x10)))
 (let (($x79 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x181 (and $x79 $x206)))
 (let (($x90 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x20 (bvadd ?x94 (_ bv3 32))))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x86 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x20)))
 (let (($x51 (or false (or false (and (and true (or $x186 $x86)) (or $x127 $x90))))))
 (let (($x45 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x51)))
 (let (($x31 (=> (and $x53 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x51)))
 (let (($x217 (and $x31 $x181)))
 (let (($x97 (=> $x217 $x8)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00400000)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x7ffffff0)
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x00000010)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00000005)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00400003)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000013)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00400000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x00000010)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00000005)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00000005)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (concat (k!1 (bvadd #x7ffffff3 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x7ffffff2 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x7ffffff1 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x7ffffff0 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000004) false
      (not (bvule #x00000004 x!0))))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!7))
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xb0e8f894)
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x00020000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x60affe88)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x421ffbfc)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x60affe8b)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xb0e8f897)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x60affe88)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xb0e8f894)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x00020000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x00020000)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!7 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!7 (bvadd #x421ffbff (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x421ffbfe (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x421ffbfd (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x421ffbfc (bvmul #x00000004 x!0))))))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1!10 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!9 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x00000004 x!0)
         (ite (bvule #x00000005 x!0) #x00000005 #x00000004)
         #x00000000))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m-0.L3%6%bbentry.0.1!10 (k!9 x!0)))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 46
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x135 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x188 (bvule ?x135 (_ bv4294967294 32))))
 (let (($x223 (= $x188 true)))
 (let ((?x222 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x66 (bvneg ?x222)))
 (let (($x114 (= ?x66 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x34 (= $x114 true)))
 (let (($x183 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x159 (= $x183 true)))
 (let (($x190 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x239 (= $x190 true)))
 (let ((?x8 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x8)))
 (let ((?x48 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x218 (= (_ bv0 32) ?x48)))
 (let ((?x181 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x181)))
 (let ((?x210 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x214 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x210)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x10 (and $x148 $x214)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (and $x192 $x10)))
 (let (($x197 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x213 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (and $x141 $x169)))
 (let (($x216 (not $x37)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x73 (and $x78 $x88)))
 (let (($x208 (and (not $x73) $x216)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x161 $x59)))
 (let (($x40 (not $x145)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x158 (and $x85 $x172)))
 (let (($x41 (and (not $x158) $x40)))
 (let (($x39 (and (and (and (and (and (and $x41 $x208) $x213) $x197) $x206) $x217) $x218)))
 (let (($x22 (and $x39 $x97)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x47 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x47)))
 (let (($x44 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x47)))
 (let (($x13 (or false (or false (and (and true (or $x91 $x44)) (or $x6 $x133))))))
 (let (($x101 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x13)))
 (let (($x179 (and $x101 $x22)))
 (let (($x68 (= $x179 true)))
 (let ((?x136 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x89 (= (_ bv0 2) ?x136)))
 (let (($x163 (= $x89 true)))
 (let (($x29 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x140 (= $x29 true)))
 (let (($x93 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x96 (= $x93 true)))
 (let (($x25 (forall ((input.ind-%var1341X (_ BitVec 32)) )(let ((?x242 (bvadd (bvmul input.ind-%var1341X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x154 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x242 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x242))))
 (let ((?x167 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x242 (_ bv2 32))) ?x154)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x242 (_ bv3 32))) ?x167)))
 (let ((?x204 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1341X)))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1341X)))
 (=> $x199 (= ?x204 ?x253)))))))))
 ))
 (let (($x57 (forall ((input.ind-%var1340X (_ BitVec 32)) )(let (($x202 (and (bvule (_ bv0 32) input.ind-%var1340X) (bvult input.ind-%var1340X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1340X)))
 (= $x199 $x202))))
 ))
 (let (($x251 (and $x57 $x25)))
 (let (($x9 (= $x251 true)))
 (let ((?x150 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x43 (bvneg ?x150)))
 (let (($x52 (= ?x43 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x115 (= $x52 true)))
 (let (($x110 (= ?x43 input.dst.llvm-%n)))
 (let (($x178 (= $x110 true)))
 (let (($x212 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x75 (= $x212 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x175 (bvsub ?x94 ?x63)))
 (let (($x123 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x175) (bvult ?x94 ?x175))))
 (let (($x72 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x165 (ite $x72 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x30 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x149 (bvmul (_ bv4 64) ?x30)))
 (let ((?x82 ((_ extract 63 32) ?x149)))
 (let (($x71 (= ?x82 ?x165)))
 (let (($x164 (and $x71 $x123)))
 (let (($x187 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x191 (and $x187 $x164)))
 (let (($x32 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x215 (=> $x32 $x191)))
 (let (($x98 (= $x215 true)))
 (let (($x23 (= $x32 true)))
 (let (($x219 (and $x23 $x98)))
 (let (($x224 (and $x219 $x75)))
 (let (($x103 (and $x224 $x178)))
 (let (($x74 (and $x103 $x115)))
 (let (($x61 (and $x74 $x9)))
 (let (($x117 (and $x61 $x96)))
 (let (($x152 (and $x117 $x140)))
 (let (($x38 (and $x152 $x163)))
 (let (($x35 (and $x38 $x68)))
 (let (($x157 (and $x35 $x239)))
 (let (($x226 (and $x157 $x159)))
 (let (($x67 (and $x226 $x34)))
 (let (($x76 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x7 (and (not $x76) $x67)))
 (let (($x162 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x113 (and $x162 $x7)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x95 (and $x12 $x113)))
 (let (($x64 (forall ((input.ind-%var1351X (_ BitVec 32)) )(let (($x168 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1351X)))
 (=> $x168 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1351X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var1350X (_ BitVec 32)) )(let (($x168 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1350X)))
 (= $x168 false)))
 ))
 (let (($x156 (and $x102 $x64)))
 (let (($x137 (and $x156 $x95)))
 (let (($x81 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x185 (and $x81 $x137)))
 (let (($x151 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x86 (bvadd ?x94 (_ bv3 32))))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x28 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x86)))
 (let (($x31 (or false (or false (and (and true (or $x170 $x28)) (or $x171 $x151))))))
 (let (($x79 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x31)))
 (let (($x55 (=> (and $x32 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x31)))
 (let (($x155 (and $x55 $x185)))
 (let (($x221 (=> $x155 $x223)))
 (not $x221))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x135 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x188 (bvule ?x135 (_ bv4294967294 32))))
 (let (($x223 (= $x188 true)))
 (let ((?x222 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x66 (bvneg ?x222)))
 (let (($x114 (= ?x66 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x34 (= $x114 true)))
 (let (($x183 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x159 (= $x183 true)))
 (let (($x190 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x239 (= $x190 true)))
 (let ((?x8 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x97 (= (_ bv0 32) ?x8)))
 (let ((?x48 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x218 (= (_ bv0 32) ?x48)))
 (let ((?x181 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x181)))
 (let ((?x210 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x214 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x210)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x10 (and $x148 $x214)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x206 (and $x192 $x10)))
 (let (($x197 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x213 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x37 (and $x141 $x169)))
 (let (($x216 (not $x37)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x78 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x73 (and $x78 $x88)))
 (let (($x208 (and (not $x73) $x216)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x161 $x59)))
 (let (($x40 (not $x145)))
 (let (($x172 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x158 (and $x85 $x172)))
 (let (($x41 (and (not $x158) $x40)))
 (let (($x39 (and (and (and (and (and (and $x41 $x208) $x213) $x197) $x206) $x217) $x218)))
 (let (($x22 (and $x39 $x97)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x47 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x6 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x47)))
 (let (($x44 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x47)))
 (let (($x13 (or false (or false (and (and true (or $x91 $x44)) (or $x6 $x133))))))
 (let (($x101 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x13)))
 (let (($x179 (and $x101 $x22)))
 (let (($x68 (= $x179 true)))
 (let ((?x136 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x89 (= (_ bv0 2) ?x136)))
 (let (($x163 (= $x89 true)))
 (let (($x29 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x140 (= $x29 true)))
 (let (($x93 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x96 (= $x93 true)))
 (let (($x25 (forall ((input.ind-%var1341X (_ BitVec 32)) )(let ((?x242 (bvadd (bvmul input.ind-%var1341X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x154 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x242 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x242))))
 (let ((?x167 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x242 (_ bv2 32))) ?x154)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x242 (_ bv3 32))) ?x167)))
 (let ((?x204 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1341X)))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1341X)))
 (=> $x199 (= ?x204 ?x253)))))))))
 ))
 (let (($x57 (forall ((input.ind-%var1340X (_ BitVec 32)) )(let (($x202 (and (bvule (_ bv0 32) input.ind-%var1340X) (bvult input.ind-%var1340X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1340X)))
 (= $x199 $x202))))
 ))
 (let (($x251 (and $x57 $x25)))
 (let (($x9 (= $x251 true)))
 (let ((?x150 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x43 (bvneg ?x150)))
 (let (($x52 (= ?x43 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x115 (= $x52 true)))
 (let (($x110 (= ?x43 input.dst.llvm-%n)))
 (let (($x178 (= $x110 true)))
 (let (($x212 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x75 (= $x212 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x175 (bvsub ?x94 ?x63)))
 (let (($x123 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x175) (bvult ?x94 ?x175))))
 (let (($x72 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x165 (ite $x72 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x30 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x149 (bvmul (_ bv4 64) ?x30)))
 (let ((?x82 ((_ extract 63 32) ?x149)))
 (let (($x71 (= ?x82 ?x165)))
 (let (($x164 (and $x71 $x123)))
 (let (($x187 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x191 (and $x187 $x164)))
 (let (($x32 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x215 (=> $x32 $x191)))
 (let (($x98 (= $x215 true)))
 (let (($x23 (= $x32 true)))
 (let (($x219 (and $x23 $x98)))
 (let (($x224 (and $x219 $x75)))
 (let (($x103 (and $x224 $x178)))
 (let (($x74 (and $x103 $x115)))
 (let (($x61 (and $x74 $x9)))
 (let (($x117 (and $x61 $x96)))
 (let (($x152 (and $x117 $x140)))
 (let (($x38 (and $x152 $x163)))
 (let (($x35 (and $x38 $x68)))
 (let (($x157 (and $x35 $x239)))
 (let (($x226 (and $x157 $x159)))
 (let (($x67 (and $x226 $x34)))
 (let (($x76 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x7 (and (not $x76) $x67)))
 (let (($x162 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x113 (and $x162 $x7)))
 (let (($x12 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x95 (and $x12 $x113)))
 (let (($x64 (forall ((input.ind-%var1351X (_ BitVec 32)) )(let (($x168 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1351X)))
 (=> $x168 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1351X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var1350X (_ BitVec 32)) )(let (($x168 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1350X)))
 (= $x168 false)))
 ))
 (let (($x156 (and $x102 $x64)))
 (let (($x137 (and $x156 $x95)))
 (let (($x81 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x185 (and $x81 $x137)))
 (let (($x151 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x86 (bvadd ?x94 (_ bv3 32))))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x28 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x170 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x86)))
 (let (($x31 (or false (or false (and (and true (or $x170 $x28)) (or $x171 $x151))))))
 (let (($x79 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x31)))
 (let (($x55 (=> (and $x32 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x31)))
 (let (($x155 (and $x55 $x185)))
 (let (($x221 (=> $x155 $x223)))
 (not $x221))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 162 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 47
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x5 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x240 (bvsge ?x5 (_ bv0 32))))
 (let (($x116 (= $x240 true)))
 (let ((?x232 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x234 (bvneg ?x232)))
 (let (($x233 (= ?x234 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x229 (= $x233 true)))
 (let (($x26 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x235 (= $x26 true)))
 (let (($x42 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x130 (= $x42 true)))
 (let ((?x194 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x17 (= (_ bv0 32) ?x194)))
 (let ((?x18 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x173 (= (_ bv0 32) ?x18)))
 (let ((?x221 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x221)))
 (let ((?x155 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x155)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x188 (and $x185 $x135)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x223 (and $x137 $x188)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x7 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x159 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x222 (and $x159 $x226)))
 (let (($x66 (not $x222)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (and $x239 $x157)))
 (let (($x34 (and (not $x183) $x66)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x97 $x22)))
 (let (($x68 (not $x179)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x8 (and $x69 $x209)))
 (let (($x190 (and (not $x8) $x68)))
 (let (($x189 (and (and (and (and (and (and $x190 $x34) $x7) $x95) $x223) $x128) $x173)))
 (let (($x227 (and $x189 $x17)))
 (let (($x225 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x192 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x192)))
 (let (($x210 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x192)))
 (let (($x48 (or false (or false (and (and true (or $x148 $x210)) (or $x206 $x225))))))
 (let (($x39 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x48)))
 (let (($x147 (and $x39 $x227)))
 (let (($x100 (= $x147 true)))
 (let ((?x216 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x208 (= (_ bv0 2) ?x216)))
 (let (($x142 (= $x208 true)))
 (let (($x146 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x141 (= $x146 true)))
 (let (($x78 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x88 (= $x78 true)))
 (let (($x59 (forall ((input.ind-%var1361X (_ BitVec 32)) )(let ((?x19 (bvadd (bvmul input.ind-%var1361X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x19 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x19))))
 (let ((?x101 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x19 (_ bv2 32))) ?x105)))
 (let ((?x158 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x19 (_ bv3 32))) ?x101)))
 (let ((?x61 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1361X)))
 (let (($x231 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1361X)))
 (=> $x231 (= ?x61 ?x158)))))))))
 ))
 (let (($x250 (forall ((input.ind-%var1360X (_ BitVec 32)) )(let (($x253 (and (bvule (_ bv0 32) input.ind-%var1360X) (bvult input.ind-%var1360X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x231 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1360X)))
 (= $x231 $x253))))
 ))
 (let (($x145 (and $x250 $x59)))
 (let (($x40 (= $x145 true)))
 (let ((?x195 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x202 (bvneg ?x195)))
 (let (($x126 (= ?x202 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (= $x126 true)))
 (let (($x198 (= ?x202 input.dst.llvm-%n)))
 (let (($x57 (= $x198 true)))
 (let (($x74 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x199 (= $x74 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x220 (bvsub ?x94 ?x63)))
 (let (($x150 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x220) (bvult ?x94 ?x220))))
 (let (($x191 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x98 (ite $x191 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x46 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x123 (bvmul (_ bv4 64) ?x46)))
 (let ((?x164 ((_ extract 63 32) ?x123)))
 (let (($x219 (= ?x164 ?x98)))
 (let (($x43 (and $x219 $x150)))
 (let (($x175 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x110 (and $x175 $x43)))
 (let (($x77 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x178 (=> $x77 $x110)))
 (let (($x103 (= $x178 true)))
 (let (($x165 (= $x77 true)))
 (let (($x52 (and $x165 $x103)))
 (let (($x203 (and $x52 $x199)))
 (let (($x204 (and $x203 $x57)))
 (let (($x242 (and $x204 $x241)))
 (let (($x41 (and $x242 $x40)))
 (let (($x73 (and $x41 $x88)))
 (let (($x169 (and $x73 $x141)))
 (let (($x211 (and $x169 $x142)))
 (let (($x196 (and $x211 $x100)))
 (let (($x15 (and $x196 $x130)))
 (let (($x238 (and $x15 $x235)))
 (let (($x228 (and $x238 $x229)))
 (let (($x144 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x252 (and (not $x144) $x228)))
 (let (($x82 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x131 (and $x82 $x252)))
 (let (($x62 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x107 (and $x62 $x131)))
 (let (($x33 (forall ((input.ind-%var1371X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1371X)))
 (=> $x14 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1371X) (_ bv0 32)))))
 ))
 (let (($x64 (forall ((input.ind-%var1370X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1370X)))
 (= $x14 false)))
 ))
 (let (($x184 (and $x64 $x33)))
 (let (($x65 (and $x184 $x107)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x201 (and $x27 $x65)))
 (let (($x51 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x28 (bvadd ?x94 (_ bv3 32))))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x28)))
 (let (($x127 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x28)))
 (let (($x55 (or false (or false (and (and true (or $x160 $x127)) (or $x120 $x51))))))
 (let (($x81 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x55)))
 (let (($x58 (=> (and $x77 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x55)))
 (let (($x249 (and $x58 $x201)))
 (let (($x24 (=> $x249 $x116)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x5 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x240 (bvsge ?x5 (_ bv0 32))))
 (let (($x116 (= $x240 true)))
 (let ((?x232 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x234 (bvneg ?x232)))
 (let (($x233 (= ?x234 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x229 (= $x233 true)))
 (let (($x26 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x235 (= $x26 true)))
 (let (($x42 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x130 (= $x42 true)))
 (let ((?x194 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x17 (= (_ bv0 32) ?x194)))
 (let ((?x18 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x173 (= (_ bv0 32) ?x18)))
 (let ((?x221 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x221)))
 (let ((?x155 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x155)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x188 (and $x185 $x135)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x223 (and $x137 $x188)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x7 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x159 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x222 (and $x159 $x226)))
 (let (($x66 (not $x222)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (and $x239 $x157)))
 (let (($x34 (and (not $x183) $x66)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (and $x97 $x22)))
 (let (($x68 (not $x179)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x8 (and $x69 $x209)))
 (let (($x190 (and (not $x8) $x68)))
 (let (($x189 (and (and (and (and (and (and $x190 $x34) $x7) $x95) $x223) $x128) $x173)))
 (let (($x227 (and $x189 $x17)))
 (let (($x225 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x192 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x192)))
 (let (($x210 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x192)))
 (let (($x48 (or false (or false (and (and true (or $x148 $x210)) (or $x206 $x225))))))
 (let (($x39 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x48)))
 (let (($x147 (and $x39 $x227)))
 (let (($x100 (= $x147 true)))
 (let ((?x216 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x208 (= (_ bv0 2) ?x216)))
 (let (($x142 (= $x208 true)))
 (let (($x146 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x141 (= $x146 true)))
 (let (($x78 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x88 (= $x78 true)))
 (let (($x59 (forall ((input.ind-%var1361X (_ BitVec 32)) )(let ((?x19 (bvadd (bvmul input.ind-%var1361X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x19 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x19))))
 (let ((?x101 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x19 (_ bv2 32))) ?x105)))
 (let ((?x158 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x19 (_ bv3 32))) ?x101)))
 (let ((?x61 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1361X)))
 (let (($x231 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1361X)))
 (=> $x231 (= ?x61 ?x158)))))))))
 ))
 (let (($x250 (forall ((input.ind-%var1360X (_ BitVec 32)) )(let (($x253 (and (bvule (_ bv0 32) input.ind-%var1360X) (bvult input.ind-%var1360X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x231 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1360X)))
 (= $x231 $x253))))
 ))
 (let (($x145 (and $x250 $x59)))
 (let (($x40 (= $x145 true)))
 (let ((?x195 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x202 (bvneg ?x195)))
 (let (($x126 (= ?x202 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (= $x126 true)))
 (let (($x198 (= ?x202 input.dst.llvm-%n)))
 (let (($x57 (= $x198 true)))
 (let (($x74 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x199 (= $x74 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x220 (bvsub ?x94 ?x63)))
 (let (($x150 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x220) (bvult ?x94 ?x220))))
 (let (($x191 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x98 (ite $x191 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x46 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x123 (bvmul (_ bv4 64) ?x46)))
 (let ((?x164 ((_ extract 63 32) ?x123)))
 (let (($x219 (= ?x164 ?x98)))
 (let (($x43 (and $x219 $x150)))
 (let (($x175 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x110 (and $x175 $x43)))
 (let (($x77 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x178 (=> $x77 $x110)))
 (let (($x103 (= $x178 true)))
 (let (($x165 (= $x77 true)))
 (let (($x52 (and $x165 $x103)))
 (let (($x203 (and $x52 $x199)))
 (let (($x204 (and $x203 $x57)))
 (let (($x242 (and $x204 $x241)))
 (let (($x41 (and $x242 $x40)))
 (let (($x73 (and $x41 $x88)))
 (let (($x169 (and $x73 $x141)))
 (let (($x211 (and $x169 $x142)))
 (let (($x196 (and $x211 $x100)))
 (let (($x15 (and $x196 $x130)))
 (let (($x238 (and $x15 $x235)))
 (let (($x228 (and $x238 $x229)))
 (let (($x144 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x252 (and (not $x144) $x228)))
 (let (($x82 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x131 (and $x82 $x252)))
 (let (($x62 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x107 (and $x62 $x131)))
 (let (($x33 (forall ((input.ind-%var1371X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1371X)))
 (=> $x14 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1371X) (_ bv0 32)))))
 ))
 (let (($x64 (forall ((input.ind-%var1370X (_ BitVec 32)) )(let (($x14 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1370X)))
 (= $x14 false)))
 ))
 (let (($x184 (and $x64 $x33)))
 (let (($x65 (and $x184 $x107)))
 (let (($x27 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x201 (and $x27 $x65)))
 (let (($x51 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x28 (bvadd ?x94 (_ bv3 32))))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x28)))
 (let (($x127 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x160 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x28)))
 (let (($x55 (or false (or false (and (and true (or $x160 $x127)) (or $x120 $x51))))))
 (let (($x81 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x55)))
 (let (($x58 (=> (and $x77 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x55)))
 (let (($x249 (and $x58 $x201)))
 (let (($x24 (=> $x249 $x116)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 48
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x251 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x44 (bvule ?x251 (_ bv4294967294 32))))
 (let (($x109 (= $x44 true)))
 (let ((?x163 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x38 (bvneg ?x163)))
 (let (($x152 (= ?x38 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x36 (= $x152 true)))
 (let (($x29 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x153 (= $x29 true)))
 (let (($x247 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x244 (= $x247 true)))
 (let (($x83 (forall ((input.ind-%var1381X (_ BitVec 32)) )(let ((?x116 (bvadd (bvmul input.ind-%var1381X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x213 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x116))))
 (let ((?x132 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x116 (_ bv2 32))) ?x213)))
 (let ((?x12 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x116 (_ bv3 32))) ?x132)))
 (let ((?x42 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1381X)))
 (let (($x223 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1381X)))
 (=> $x223 (= ?x42 ?x12)))))))))
 ))
 (let (($x227 (forall ((input.ind-%var1380X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var1380X) (bvult input.ind-%var1380X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x223 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1380X)))
 (= $x223 $x194))))
 ))
 (let (($x122 (and $x227 $x83)))
 (let (($x9 (= $x122 true)))
 (let (($x137 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x185 (= $x137 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x222 (bvsub ?x94 ?x63)))
 (let (($x67 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x222) (bvult ?x94 ?x222))))
 (let (($x114 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x159 (ite $x114 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x239 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x157 (bvmul (_ bv4 64) ?x239)))
 (let ((?x183 ((_ extract 63 32) ?x157)))
 (let (($x226 (= ?x183 ?x159)))
 (let (($x7 (and $x226 $x67)))
 (let (($x68 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x87 (and $x68 $x7)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x113 (=> $x124 $x87)))
 (let (($x95 (= $x113 true)))
 (let (($x35 (= $x124 true)))
 (let (($x69 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x209 (= $x69 true)))
 (let ((?x192 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x192)))
 (let ((?x236 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x218 (= (_ bv0 32) ?x236)))
 (let ((?x211 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x197 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x211)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x216 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x37)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x208 (and $x169 $x216)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x141 $x208)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x59 (and $x56 $x161)))
 (let (($x145 (not $x59)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x158 (and $x105 $x101)))
 (let (($x41 (and (not $x158) $x145)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (and $x89 $x50)))
 (let (($x133 (not $x13)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x172 (and $x198 $x57)))
 (let (($x6 (and (not $x172) $x133)))
 (let (($x181 (and (and (and (and (and (and $x6 $x41) $x88) $x146) $x142) $x197) $x218)))
 (let (($x217 (and $x181 $x148)))
 (let (($x237 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x241 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x253 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x241)))
 (let (($x231 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x242 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x241)))
 (let (($x111 (or false (or false (and (and true (or $x242 $x231)) (or $x253 $x237))))))
 (let (($x85 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x111)))
 (let (($x177 (and $x85 $x217)))
 (let (($x48 (= $x177 true)))
 (let ((?x74 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x199 (= (_ bv0 2) ?x74)))
 (let (($x203 (= $x199 true)))
 (let (($x178 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x103 (= $x178 true)))
 (let ((?x219 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x212 (bvneg ?x219)))
 (let (($x224 (= ?x212 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x150 (= $x224 true)))
 (let (($x220 (= ?x212 input.dst.llvm-%n)))
 (let (($x75 (= $x220 true)))
 (let (($x43 (and $x75 $x150)))
 (let (($x52 (and $x43 $x103)))
 (let (($x195 (and $x52 $x203)))
 (let (($x39 (and $x195 $x48)))
 (let (($x8 (and $x39 $x209)))
 (let (($x97 (and $x8 $x35)))
 (let (($x176 (and $x97 $x95)))
 (let (($x155 (and $x176 $x185)))
 (let (($x248 (and $x155 $x9)))
 (let (($x117 (and $x248 $x244)))
 (let (($x84 (and $x117 $x153)))
 (let (($x140 (and $x84 $x36)))
 (let (($x215 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x182 (and (not $x215) $x140)))
 (let (($x164 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x47 (and $x164 $x182)))
 (let (($x207 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x121 (and $x207 $x47)))
 (let (($x71 (forall ((input.ind-%var1391X (_ BitVec 32)) )(let (($x60 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1391X)))
 (=> $x60 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1391X) (_ bv0 32)))))
 ))
 (let (($x33 (forall ((input.ind-%var1390X (_ BitVec 32)) )(let (($x60 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1390X)))
 (= $x60 false)))
 ))
 (let (($x112 (and $x33 $x71)))
 (let (($x245 (and $x112 $x121)))
 (let (($x102 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x243 (and $x102 $x245)))
 (let (($x31 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x127 (bvadd ?x94 (_ bv3 32))))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x127)))
 (let (($x171 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x127)))
 (let (($x58 (or false (or false (and (and true (or $x174 $x171)) (or $x45 $x31))))))
 (let (($x27 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x58)))
 (let (($x20 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x58)))
 (let (($x91 (and $x20 $x243)))
 (let (($x76 (=> $x91 $x109)))
 (not $x76))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x251 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x44 (bvule ?x251 (_ bv4294967294 32))))
 (let (($x109 (= $x44 true)))
 (let ((?x163 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x38 (bvneg ?x163)))
 (let (($x152 (= ?x38 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x36 (= $x152 true)))
 (let (($x29 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x153 (= $x29 true)))
 (let (($x247 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x244 (= $x247 true)))
 (let (($x83 (forall ((input.ind-%var1381X (_ BitVec 32)) )(let ((?x116 (bvadd (bvmul input.ind-%var1381X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x213 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x116 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x116))))
 (let ((?x132 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x116 (_ bv2 32))) ?x213)))
 (let ((?x12 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x116 (_ bv3 32))) ?x132)))
 (let ((?x42 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1381X)))
 (let (($x223 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1381X)))
 (=> $x223 (= ?x42 ?x12)))))))))
 ))
 (let (($x227 (forall ((input.ind-%var1380X (_ BitVec 32)) )(let (($x194 (and (bvule (_ bv0 32) input.ind-%var1380X) (bvult input.ind-%var1380X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x223 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1380X)))
 (= $x223 $x194))))
 ))
 (let (($x122 (and $x227 $x83)))
 (let (($x9 (= $x122 true)))
 (let (($x137 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x185 (= $x137 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x222 (bvsub ?x94 ?x63)))
 (let (($x67 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x222) (bvult ?x94 ?x222))))
 (let (($x114 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x159 (ite $x114 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x239 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x157 (bvmul (_ bv4 64) ?x239)))
 (let ((?x183 ((_ extract 63 32) ?x157)))
 (let (($x226 (= ?x183 ?x159)))
 (let (($x7 (and $x226 $x67)))
 (let (($x68 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x87 (and $x68 $x7)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x113 (=> $x124 $x87)))
 (let (($x95 (= $x113 true)))
 (let (($x35 (= $x124 true)))
 (let (($x69 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x209 (= $x69 true)))
 (let ((?x192 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x148 (= (_ bv0 32) ?x192)))
 (let ((?x236 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x218 (= (_ bv0 32) ?x236)))
 (let ((?x211 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x197 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x211)))
 (let ((?x37 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x216 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x37)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x208 (and $x169 $x216)))
 (let (($x141 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x141 $x208)))
 (let (($x146 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x59 (and $x56 $x161)))
 (let (($x145 (not $x59)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x158 (and $x105 $x101)))
 (let (($x41 (and (not $x158) $x145)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x13 (and $x89 $x50)))
 (let (($x133 (not $x13)))
 (let (($x57 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x198 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x172 (and $x198 $x57)))
 (let (($x6 (and (not $x172) $x133)))
 (let (($x181 (and (and (and (and (and (and $x6 $x41) $x88) $x146) $x142) $x197) $x218)))
 (let (($x217 (and $x181 $x148)))
 (let (($x237 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x241 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x253 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x241)))
 (let (($x231 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x242 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x241)))
 (let (($x111 (or false (or false (and (and true (or $x242 $x231)) (or $x253 $x237))))))
 (let (($x85 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x111)))
 (let (($x177 (and $x85 $x217)))
 (let (($x48 (= $x177 true)))
 (let ((?x74 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x199 (= (_ bv0 2) ?x74)))
 (let (($x203 (= $x199 true)))
 (let (($x178 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x103 (= $x178 true)))
 (let ((?x219 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x212 (bvneg ?x219)))
 (let (($x224 (= ?x212 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x150 (= $x224 true)))
 (let (($x220 (= ?x212 input.dst.llvm-%n)))
 (let (($x75 (= $x220 true)))
 (let (($x43 (and $x75 $x150)))
 (let (($x52 (and $x43 $x103)))
 (let (($x195 (and $x52 $x203)))
 (let (($x39 (and $x195 $x48)))
 (let (($x8 (and $x39 $x209)))
 (let (($x97 (and $x8 $x35)))
 (let (($x176 (and $x97 $x95)))
 (let (($x155 (and $x176 $x185)))
 (let (($x248 (and $x155 $x9)))
 (let (($x117 (and $x248 $x244)))
 (let (($x84 (and $x117 $x153)))
 (let (($x140 (and $x84 $x36)))
 (let (($x215 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x182 (and (not $x215) $x140)))
 (let (($x164 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x47 (and $x164 $x182)))
 (let (($x207 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x121 (and $x207 $x47)))
 (let (($x71 (forall ((input.ind-%var1391X (_ BitVec 32)) )(let (($x60 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1391X)))
 (=> $x60 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1391X) (_ bv0 32)))))
 ))
 (let (($x33 (forall ((input.ind-%var1390X (_ BitVec 32)) )(let (($x60 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1390X)))
 (= $x60 false)))
 ))
 (let (($x112 (and $x33 $x71)))
 (let (($x245 (and $x112 $x121)))
 (let (($x102 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x243 (and $x102 $x245)))
 (let (($x31 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x127 (bvadd ?x94 (_ bv3 32))))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x127)))
 (let (($x171 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x174 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x127)))
 (let (($x58 (or false (or false (and (and true (or $x174 $x171)) (or $x45 $x31))))))
 (let (($x27 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x58)))
 (let (($x20 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x58)))
 (let (($x91 (and $x20 $x243)))
 (let (($x76 (=> $x91 $x109)))
 (not $x76))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 162 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 49
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x100 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x5 (bvsge ?x100 (_ bv0 32))))
 (let (($x187 (= $x5 true)))
 (let ((?x228 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x252 (bvneg ?x228)))
 (let (($x232 (= ?x252 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x234 (= $x232 true)))
 (let (($x235 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x107 (= $x235 true)))
 (let (($x221 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x128 (= $x221 true)))
 (let (($x119 (forall ((input.ind-%var1401X (_ BitVec 32)) )(let ((?x109 (bvadd (bvmul input.ind-%var1401X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x202 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x109))))
 (let ((?x162 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x109 (_ bv2 32))) ?x202)))
 (let ((?x62 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x109 (_ bv3 32))) ?x162)))
 (let ((?x247 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1401X)))
 (let (($x246 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1401X)))
 (=> $x246 (= ?x247 ?x62)))))))))
 ))
 (let (($x83 (forall ((input.ind-%var1400X (_ BitVec 32)) )(let (($x168 (and (bvule (_ bv0 32) input.ind-%var1400X) (bvult input.ind-%var1400X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x246 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1400X)))
 (= $x246 $x168))))
 ))
 (let (($x72 (and $x83 $x119)))
 (let (($x196 (= $x72 true)))
 (let (($x240 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x116 (= $x240 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x185 (bvsub ?x94 ?x63)))
 (let (($x173 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x185) (bvult ?x94 ?x185))))
 (let (($x95 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x176 (ite $x95 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x7 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x87 (bvmul (_ bv4 64) ?x7)))
 (let ((?x113 ((_ extract 63 32) ?x87)))
 (let (($x137 (= ?x113 ?x176)))
 (let (($x194 (and $x137 $x173)))
 (let (($x166 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x17 (and $x166 $x194)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x227 (=> $x70 $x17)))
 (let (($x42 (= $x227 true)))
 (let (($x226 (= $x70 true)))
 (let (($x183 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x114 (= $x183 true)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x39)))
 (let ((?x177 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x48 (= (_ bv0 32) ?x177)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let ((?x236 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x236)))
 (let (($x225 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x181 (and $x225 $x218)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x192 (and $x197 $x181)))
 (let (($x211 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x146 $x10)))
 (let (($x169 (not $x141)))
 (let (($x214 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x73 (and $x88 $x214)))
 (let (($x216 (and (not $x73) $x169)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x161 $x59)))
 (let (($x41 (not $x145)))
 (let (($x96 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x61 $x96)))
 (let (($x78 (and (not $x56) $x41)))
 (let (($x179 (and (and (and (and (and (and $x78 $x216) $x142) $x211) $x192) $x217) $x48)))
 (let (($x68 (and $x179 $x69)))
 (let (($x13 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x198 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x198)))
 (let (($x172 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x198)))
 (let (($x101 (or false (or false (and (and true (or $x57 $x172)) (or $x50 $x13))))))
 (let (($x40 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x101)))
 (let (($x190 (and $x40 $x68)))
 (let (($x239 (= $x190 true)))
 (let ((?x167 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x154 (= (_ bv0 2) ?x167)))
 (let (($x253 (= $x154 true)))
 (let (($x19 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x241 (= $x19 true)))
 (let ((?x52 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x115 (bvneg ?x52)))
 (let (($x203 (= ?x115 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x195 (= $x203 true)))
 (let (($x74 (= ?x115 input.dst.llvm-%n)))
 (let (($x199 (= $x74 true)))
 (let (($x204 (and $x199 $x195)))
 (let (($x242 (and $x204 $x241)))
 (let (($x237 (and $x242 $x253)))
 (let (($x157 (and $x237 $x239)))
 (let (($x159 (and $x157 $x114)))
 (let (($x66 (and $x159 $x226)))
 (let (($x15 (and $x66 $x42)))
 (let (($x129 (and $x15 $x116)))
 (let (($x135 (and $x129 $x196)))
 (let (($x26 (and $x135 $x128)))
 (let (($x65 (and $x26 $x107)))
 (let (($x238 (and $x65 $x234)))
 (let (($x178 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x131 (and (not $x178) $x238)))
 (let (($x43 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x201 (and $x43 $x131)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x188 (and $x75 $x201)))
 (let (($x219 (forall ((input.ind-%var1411X (_ BitVec 32)) )(let (($x30 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1411X)))
 (=> $x30 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1411X) (_ bv0 32)))))
 ))
 (let (($x71 (forall ((input.ind-%var1410X (_ BitVec 32)) )(let (($x30 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1410X)))
 (= $x30 false)))
 ))
 (let (($x212 (and $x71 $x219)))
 (let (($x108 (and $x212 $x188)))
 (let (($x64 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x18 (and $x64 $x108)))
 (let (($x55 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x171 (bvadd ?x94 (_ bv3 32))))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x171)))
 (let (($x120 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x171)))
 (let (($x20 (or false (or false (and (and true (or $x90 $x120)) (or $x79 $x55))))))
 (let (($x102 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x20)))
 (let (($x86 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x20)))
 (let (($x249 (and $x86 $x18)))
 (let (($x144 (=> $x249 $x187)))
 (not $x144))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x100 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x5 (bvsge ?x100 (_ bv0 32))))
 (let (($x187 (= $x5 true)))
 (let ((?x228 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x252 (bvneg ?x228)))
 (let (($x232 (= ?x252 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x234 (= $x232 true)))
 (let (($x235 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x107 (= $x235 true)))
 (let (($x221 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x128 (= $x221 true)))
 (let (($x119 (forall ((input.ind-%var1401X (_ BitVec 32)) )(let ((?x109 (bvadd (bvmul input.ind-%var1401X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x202 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x109 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x109))))
 (let ((?x162 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x109 (_ bv2 32))) ?x202)))
 (let ((?x62 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x109 (_ bv3 32))) ?x162)))
 (let ((?x247 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1401X)))
 (let (($x246 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1401X)))
 (=> $x246 (= ?x247 ?x62)))))))))
 ))
 (let (($x83 (forall ((input.ind-%var1400X (_ BitVec 32)) )(let (($x168 (and (bvule (_ bv0 32) input.ind-%var1400X) (bvult input.ind-%var1400X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x246 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1400X)))
 (= $x246 $x168))))
 ))
 (let (($x72 (and $x83 $x119)))
 (let (($x196 (= $x72 true)))
 (let (($x240 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x116 (= $x240 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x185 (bvsub ?x94 ?x63)))
 (let (($x173 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x185) (bvult ?x94 ?x185))))
 (let (($x95 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x176 (ite $x95 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x7 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x87 (bvmul (_ bv4 64) ?x7)))
 (let ((?x113 ((_ extract 63 32) ?x87)))
 (let (($x137 (= ?x113 ?x176)))
 (let (($x194 (and $x137 $x173)))
 (let (($x166 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x17 (and $x166 $x194)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x227 (=> $x70 $x17)))
 (let (($x42 (= $x227 true)))
 (let (($x226 (= $x70 true)))
 (let (($x183 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x114 (= $x183 true)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x39)))
 (let ((?x177 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x48 (= (_ bv0 32) ?x177)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x148)))
 (let ((?x236 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x218 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x236)))
 (let (($x225 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x181 (and $x225 $x218)))
 (let (($x197 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x192 (and $x197 $x181)))
 (let (($x211 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x142 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x146 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x146 $x10)))
 (let (($x169 (not $x141)))
 (let (($x214 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x73 (and $x88 $x214)))
 (let (($x216 (and (not $x73) $x169)))
 (let (($x59 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x161 $x59)))
 (let (($x41 (not $x145)))
 (let (($x96 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x61 $x96)))
 (let (($x78 (and (not $x56) $x41)))
 (let (($x179 (and (and (and (and (and (and $x78 $x216) $x142) $x211) $x192) $x217) $x48)))
 (let (($x68 (and $x179 $x69)))
 (let (($x13 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x198 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x198)))
 (let (($x172 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x198)))
 (let (($x101 (or false (or false (and (and true (or $x57 $x172)) (or $x50 $x13))))))
 (let (($x40 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x101)))
 (let (($x190 (and $x40 $x68)))
 (let (($x239 (= $x190 true)))
 (let ((?x167 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x154 (= (_ bv0 2) ?x167)))
 (let (($x253 (= $x154 true)))
 (let (($x19 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x241 (= $x19 true)))
 (let ((?x52 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x115 (bvneg ?x52)))
 (let (($x203 (= ?x115 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x195 (= $x203 true)))
 (let (($x74 (= ?x115 input.dst.llvm-%n)))
 (let (($x199 (= $x74 true)))
 (let (($x204 (and $x199 $x195)))
 (let (($x242 (and $x204 $x241)))
 (let (($x237 (and $x242 $x253)))
 (let (($x157 (and $x237 $x239)))
 (let (($x159 (and $x157 $x114)))
 (let (($x66 (and $x159 $x226)))
 (let (($x15 (and $x66 $x42)))
 (let (($x129 (and $x15 $x116)))
 (let (($x135 (and $x129 $x196)))
 (let (($x26 (and $x135 $x128)))
 (let (($x65 (and $x26 $x107)))
 (let (($x238 (and $x65 $x234)))
 (let (($x178 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x131 (and (not $x178) $x238)))
 (let (($x43 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x201 (and $x43 $x131)))
 (let (($x75 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x188 (and $x75 $x201)))
 (let (($x219 (forall ((input.ind-%var1411X (_ BitVec 32)) )(let (($x30 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1411X)))
 (=> $x30 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1411X) (_ bv0 32)))))
 ))
 (let (($x71 (forall ((input.ind-%var1410X (_ BitVec 32)) )(let (($x30 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1410X)))
 (= $x30 false)))
 ))
 (let (($x212 (and $x71 $x219)))
 (let (($x108 (and $x212 $x188)))
 (let (($x64 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x18 (and $x64 $x108)))
 (let (($x55 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x171 (bvadd ?x94 (_ bv3 32))))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x171)))
 (let (($x120 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x171)))
 (let (($x20 (or false (or false (and (and true (or $x90 $x120)) (or $x79 $x55))))))
 (let (($x102 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x20)))
 (let (($x86 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x20)))
 (let (($x249 (and $x86 $x18)))
 (let (($x144 (=> $x249 $x187)))
 (not $x144))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 162 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 50
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x9 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x251 (bvule ?x9 input.dst.llvm-%n)))
 (let (($x175 (= $x251 true)))
 (let ((?x140 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x182 (bvneg ?x140)))
 (let (($x163 (= ?x182 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x38 (= $x163 true)))
 (let ((?x242 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x231 (bvneg ?x242)))
 (let (($x153 (= ?x231 input.dst.llvm-%n)))
 (let (($x121 (= $x153 true)))
 (let (($x106 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x139 (= $x106 true)))
 (let (($x191 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x248 (= $x191 true)))
 (let (($x207 (forall ((input.ind-%var1421X (_ BitVec 32)) )(let ((?x249 (bvadd (bvmul input.ind-%var1421X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x144 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x249))))
 (let ((?x250 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x249 (_ bv2 32))) ?x144)))
 (let ((?x82 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x249 (_ bv3 32))) ?x250)))
 (let ((?x72 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1421X)))
 (let (($x149 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1421X)))
 (=> $x149 (= ?x72 ?x82)))))))))
 ))
 (let (($x62 (forall ((input.ind-%var1420X (_ BitVec 32)) )(let (($x202 (and (bvule (_ bv0 32) input.ind-%var1420X) (bvult input.ind-%var1420X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x149 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1420X)))
 (= $x149 $x202))))
 ))
 (let (($x60 (and $x62 $x207)))
 (let (($x23 (= $x60 true)))
 (let (($x83 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x247 (= $x83 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x42 (bvsub ?x94 ?x63)))
 (let (($x129 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x42) (bvult ?x94 ?x42))))
 (let (($x194 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x17 (ite $x194 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x223 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x189 (bvmul (_ bv4 64) ?x223)))
 (let ((?x173 ((_ extract 63 32) ?x189)))
 (let (($x227 (= ?x173 ?x17)))
 (let (($x246 (and $x227 $x129)))
 (let (($x155 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x12 (and $x155 $x246)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x132 (=> $x118 $x12)))
 (let (($x168 (= $x132 true)))
 (let (($x113 (= $x118 true)))
 (let (($x67 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x7 (= $x67 true)))
 (let ((?x68 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x68)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x39)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x179 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x148)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x22 (and $x97 $x217)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x192 $x22)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x236 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x142 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x206 (and $x142 $x8)))
 (let (($x211 (not $x206)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x216 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x208 (and $x216 $x209)))
 (let (($x197 (and (not $x208) $x211)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x73 $x37)))
 (let (($x10 (not $x146)))
 (let (($x13 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x214 (and $x50 $x13)))
 (let (($x169 (and (not $x214) $x10)))
 (let (($x226 (and (and (and (and (and (and $x169 $x197) $x236) $x181) $x177) $x179) $x69)))
 (let (($x66 (and $x226 $x190)))
 (let (($x210 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x105 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x105)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x105)))
 (let (($x41 (or false (or false (and (and true (or $x101 $x40)) (or $x56 $x210))))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x41)))
 (let (($x222 (and $x88 $x66)))
 (let (($x34 (= $x222 true)))
 (let ((?x198 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x57 (= (_ bv0 2) ?x198)))
 (let (($x172 (= $x57 true)))
 (let (($x237 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x111 (= $x237 true)))
 (let (($x167 (= ?x231 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x154 (= $x167 true)))
 (let (($x85 (and $x154 $x111)))
 (let (($x180 (and $x85 $x172)))
 (let (($x166 (and $x180 $x34)))
 (let (($x87 (and $x166 $x7)))
 (let (($x95 (and $x87 $x113)))
 (let (($x134 (and $x95 $x168)))
 (let (($x117 (and $x134 $x247)))
 (let (($x230 (and $x117 $x23)))
 (let (($x156 (and $x230 $x248)))
 (let (($x29 (and $x156 $x139)))
 (let (($x245 (and $x29 $x121)))
 (let (($x84 (and $x245 $x38)))
 (let (($x19 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x47 (and (not $x19) $x84)))
 (let (($x204 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x243 (and $x204 $x47)))
 (let (($x199 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x229 (and $x199 $x243)))
 (let (($x52 (forall ((input.ind-%var1431X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1431X)))
 (=> $x46 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1431X) (_ bv0 32)))))
 ))
 (let (($x219 (forall ((input.ind-%var1430X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1430X)))
 (= $x46 false)))
 ))
 (let (($x115 (and $x219 $x52)))
 (let (($x24 (and $x115 $x229)))
 (let (($x33 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x213 (and $x33 $x24)))
 (let (($x58 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x120 (bvadd ?x94 (_ bv3 32))))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x120)))
 (let (($x45 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x151 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x120)))
 (let (($x86 (or false (or false (and (and true (or $x151 $x45)) (or $x81 $x58))))))
 (let (($x64 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x86)))
 (let (($x28 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x86)))
 (let (($x91 (and $x28 $x213)))
 (let (($x215 (=> $x91 $x175)))
 (not $x215))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x9 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x251 (bvule ?x9 input.dst.llvm-%n)))
 (let (($x175 (= $x251 true)))
 (let ((?x140 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x182 (bvneg ?x140)))
 (let (($x163 (= ?x182 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x38 (= $x163 true)))
 (let ((?x242 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x231 (bvneg ?x242)))
 (let (($x153 (= ?x231 input.dst.llvm-%n)))
 (let (($x121 (= $x153 true)))
 (let (($x106 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x139 (= $x106 true)))
 (let (($x191 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x248 (= $x191 true)))
 (let (($x207 (forall ((input.ind-%var1421X (_ BitVec 32)) )(let ((?x249 (bvadd (bvmul input.ind-%var1421X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x144 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x249 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x249))))
 (let ((?x250 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x249 (_ bv2 32))) ?x144)))
 (let ((?x82 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x249 (_ bv3 32))) ?x250)))
 (let ((?x72 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1421X)))
 (let (($x149 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1421X)))
 (=> $x149 (= ?x72 ?x82)))))))))
 ))
 (let (($x62 (forall ((input.ind-%var1420X (_ BitVec 32)) )(let (($x202 (and (bvule (_ bv0 32) input.ind-%var1420X) (bvult input.ind-%var1420X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x149 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1420X)))
 (= $x149 $x202))))
 ))
 (let (($x60 (and $x62 $x207)))
 (let (($x23 (= $x60 true)))
 (let (($x83 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x247 (= $x83 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x42 (bvsub ?x94 ?x63)))
 (let (($x129 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x42) (bvult ?x94 ?x42))))
 (let (($x194 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x17 (ite $x194 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x223 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x189 (bvmul (_ bv4 64) ?x223)))
 (let ((?x173 ((_ extract 63 32) ?x189)))
 (let (($x227 (= ?x173 ?x17)))
 (let (($x246 (and $x227 $x129)))
 (let (($x155 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x12 (and $x155 $x246)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x132 (=> $x118 $x12)))
 (let (($x168 (= $x132 true)))
 (let (($x113 (= $x118 true)))
 (let (($x67 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x7 (= $x67 true)))
 (let ((?x68 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x68)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x39)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x179 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x217 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x148)))
 (let (($x97 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x22 (and $x97 $x217)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x192 $x22)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x236 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x142 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x206 (and $x142 $x8)))
 (let (($x211 (not $x206)))
 (let (($x209 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x216 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x208 (and $x216 $x209)))
 (let (($x197 (and (not $x208) $x211)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x146 (and $x73 $x37)))
 (let (($x10 (not $x146)))
 (let (($x13 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x214 (and $x50 $x13)))
 (let (($x169 (and (not $x214) $x10)))
 (let (($x226 (and (and (and (and (and (and $x169 $x197) $x236) $x181) $x177) $x179) $x69)))
 (let (($x66 (and $x226 $x190)))
 (let (($x210 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x105 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x56 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x105)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x105)))
 (let (($x41 (or false (or false (and (and true (or $x101 $x40)) (or $x56 $x210))))))
 (let (($x88 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x41)))
 (let (($x222 (and $x88 $x66)))
 (let (($x34 (= $x222 true)))
 (let ((?x198 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x57 (= (_ bv0 2) ?x198)))
 (let (($x172 (= $x57 true)))
 (let (($x237 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x111 (= $x237 true)))
 (let (($x167 (= ?x231 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x154 (= $x167 true)))
 (let (($x85 (and $x154 $x111)))
 (let (($x180 (and $x85 $x172)))
 (let (($x166 (and $x180 $x34)))
 (let (($x87 (and $x166 $x7)))
 (let (($x95 (and $x87 $x113)))
 (let (($x134 (and $x95 $x168)))
 (let (($x117 (and $x134 $x247)))
 (let (($x230 (and $x117 $x23)))
 (let (($x156 (and $x230 $x248)))
 (let (($x29 (and $x156 $x139)))
 (let (($x245 (and $x29 $x121)))
 (let (($x84 (and $x245 $x38)))
 (let (($x19 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x47 (and (not $x19) $x84)))
 (let (($x204 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x243 (and $x204 $x47)))
 (let (($x199 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x229 (and $x199 $x243)))
 (let (($x52 (forall ((input.ind-%var1431X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1431X)))
 (=> $x46 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1431X) (_ bv0 32)))))
 ))
 (let (($x219 (forall ((input.ind-%var1430X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1430X)))
 (= $x46 false)))
 ))
 (let (($x115 (and $x219 $x52)))
 (let (($x24 (and $x115 $x229)))
 (let (($x33 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x213 (and $x33 $x24)))
 (let (($x58 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x120 (bvadd ?x94 (_ bv3 32))))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x120)))
 (let (($x45 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x151 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x120)))
 (let (($x86 (or false (or false (and (and true (or $x151 $x45)) (or $x81 $x58))))))
 (let (($x64 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x86)))
 (let (($x28 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x86)))
 (let (($x91 (and $x28 $x213)))
 (let (($x215 (=> $x91 $x175)))
 (not $x215))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 51
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x297 (forall ((input.ind-%var1473X (_ BitVec 32)) )(let ((?x47 (bvadd (bvmul input.ind-%var1473X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x45 (bvadd ?x94 (_ bv3 32))))
 (let ((?x264 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x94 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x267 (store ?x264 (bvadd ?x94 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x270 (store ?x267 (bvadd ?x94 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x272 (store ?x270 ?x45 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x291 (concat (select ?x272 (bvadd ?x47 (_ bv2 32))) (concat (select ?x272 (bvadd ?x47 (_ bv1 32))) (select ?x272 ?x47)))))
 (let ((?x112 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1473X)))
 (let (($x49 (= input.ind-%var1473X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x295 (= (ite $x49 input.spec-%var-i-0.L3%6%bbentry ?x112) (concat (select ?x272 (bvadd ?x47 (_ bv3 32))) ?x291))))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1473X)))
 (let (($x193 (or $x18 $x49)))
 (=> $x193 $x295))))))))))))))))
 ))
 (let (($x255 (forall ((input.ind-%var1472X (_ BitVec 32)) )(let (($x5 (bvule (_ bv0 32) input.ind-%var1472X)))
 (let (($x21 (and $x5 (bvult input.ind-%var1472X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x49 (= input.ind-%var1472X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1472X)))
 (let (($x193 (or $x18 $x49)))
 (= $x193 $x21)))))))
 ))
 (let (($x298 (and $x255 $x297)))
 (let (($x299 (= $x298 true)))
 (let ((?x252 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x232 (bvneg ?x252)))
 (let (($x235 (= ?x232 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x107 (= $x235 true)))
 (let ((?x221 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x128 (= (_ bv0 2) ?x221)))
 (let (($x238 (= $x128 true)))
 (let (($x119 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x44 (= $x119 true)))
 (let (($x165 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x136 (= $x165 true)))
 (let (($x212 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x75 (= $x212 true)))
 (let (($x184 (forall ((input.ind-%var1445X (_ BitVec 32)) )(let ((?x47 (bvadd (bvmul input.ind-%var1445X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x213 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x47))))
 (let ((?x251 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv2 32))) ?x213)))
 (let ((?x147 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv3 32))) ?x251)))
 (let ((?x112 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1445X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1445X)))
 (=> $x18 (= ?x112 ?x147)))))))))
 ))
 (let (($x144 (forall ((input.ind-%var1444X (_ BitVec 32)) )(let (($x5 (bvule (_ bv0 32) input.ind-%var1444X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1444X)))
 (= $x18 (and $x5 (bvult input.ind-%var1444X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x196 (and $x144 $x184)))
 (let (($x164 (= $x196 true)))
 (let (($x202 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x162 (= $x202 true)))
 (let (($x149 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x76 (= $x149 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x240 (bvsub ?x94 ?x63)))
 (let (($x12 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x240) (bvult ?x94 ?x240))))
 (let (($x227 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x15 (ite $x227 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x173 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x194 (bvmul (_ bv4 64) ?x173)))
 (let ((?x17 ((_ extract 63 32) ?x194)))
 (let (($x42 (= ?x17 ?x15)))
 (let (($x132 (and $x42 $x12)))
 (let (($x223 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x168 (and $x223 $x132)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x134 (=> $x118 $x168)))
 (let (($x83 (= $x134 true)))
 (let (($x176 (= $x118 true)))
 (let ((?x226 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x68 (= (_ bv0 32) ?x226)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x39)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x159 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x22)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x114 (and $x217 $x177)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (and $x148 $x114)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x225 (and $x197 $x239)))
 (let (($x236 (not $x225)))
 (let (($x206 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x211 (and $x8 $x206)))
 (let (($x218 (and (not $x211) $x236)))
 (let (($x216 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x169 $x216)))
 (let (($x208 (not $x209)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x40 $x61)))
 (let (($x142 (and (not $x10) $x208)))
 (let (($x67 (and (and (and (and (and (and $x142 $x218) $x183) $x97) $x48) $x159) $x69)))
 (let (($x7 (and $x67 $x68)))
 (let (($x50 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x210 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x210)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x210)))
 (let (($x73 (or false (or false (and (and true (or $x161 $x59)) (or $x88 $x50))))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x73)))
 (let (($x87 (and $x146 $x7)))
 (let (($x113 (= $x87 true)))
 (let ((?x57 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x172 (bvneg ?x57)))
 (let (($x6 (= ?x172 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x78 (= $x6 true)))
 (let (($x180 (= ?x172 input.dst.llvm-%n)))
 (let (($x133 (= $x180 true)))
 (let (($x105 (and $x133 $x78)))
 (let (($x95 (and $x105 $x113)))
 (let (($x137 (and $x95 $x176)))
 (let (($x247 (and $x137 $x83)))
 (let (($x125 (and $x247 $x76)))
 (let (($x62 (and $x125 $x162)))
 (let (($x150 (and $x62 $x164)))
 (let (($x30 (and $x150 $x75)))
 (let (($x110 (and $x30 $x136)))
 (let (($x36 (and $x110 $x44)))
 (let (($x131 (and $x36 $x238)))
 (let (($x26 (and $x131 $x107)))
 (let (($x158 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x234 (and (not $x158) $x26)))
 (let (($x111 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x201 (and $x111 $x234)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x109 (and $x154 $x201)))
 (let (($x242 (forall ((input.ind-%var1455X (_ BitVec 32)) )(let (($x224 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1455X)))
 (=> $x224 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1455X) (_ bv0 32)))))
 ))
 (let (($x52 (forall ((input.ind-%var1454X (_ BitVec 32)) )(let (($x224 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1454X)))
 (= $x224 false)))
 ))
 (let (($x231 (and $x52 $x242)))
 (let (($x130 (and $x231 $x109)))
 (let (($x71 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x205 (and $x71 $x130)))
 (let (($x20 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd ?x94 (_ bv3 32))))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x79 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x28 (or false (or false (and (and true (or $x51 $x79)) (or $x27 $x20))))))
 (let (($x33 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x28)))
 (let (($x127 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x28)))
 (let (($x188 (and $x127 $x205)))
 (let (($x300 (=> $x188 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x297 (forall ((input.ind-%var1473X (_ BitVec 32)) )(let ((?x47 (bvadd (bvmul input.ind-%var1473X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x45 (bvadd ?x94 (_ bv3 32))))
 (let ((?x264 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x94 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x267 (store ?x264 (bvadd ?x94 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x270 (store ?x267 (bvadd ?x94 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x272 (store ?x270 ?x45 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x291 (concat (select ?x272 (bvadd ?x47 (_ bv2 32))) (concat (select ?x272 (bvadd ?x47 (_ bv1 32))) (select ?x272 ?x47)))))
 (let ((?x112 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1473X)))
 (let (($x49 (= input.ind-%var1473X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x295 (= (ite $x49 input.spec-%var-i-0.L3%6%bbentry ?x112) (concat (select ?x272 (bvadd ?x47 (_ bv3 32))) ?x291))))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1473X)))
 (let (($x193 (or $x18 $x49)))
 (=> $x193 $x295))))))))))))))))
 ))
 (let (($x255 (forall ((input.ind-%var1472X (_ BitVec 32)) )(let (($x5 (bvule (_ bv0 32) input.ind-%var1472X)))
 (let (($x21 (and $x5 (bvult input.ind-%var1472X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x49 (= input.ind-%var1472X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1472X)))
 (let (($x193 (or $x18 $x49)))
 (= $x193 $x21)))))))
 ))
 (let (($x298 (and $x255 $x297)))
 (let (($x299 (= $x298 true)))
 (let ((?x252 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x232 (bvneg ?x252)))
 (let (($x235 (= ?x232 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x107 (= $x235 true)))
 (let ((?x221 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x128 (= (_ bv0 2) ?x221)))
 (let (($x238 (= $x128 true)))
 (let (($x119 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x44 (= $x119 true)))
 (let (($x165 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x136 (= $x165 true)))
 (let (($x212 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x75 (= $x212 true)))
 (let (($x184 (forall ((input.ind-%var1445X (_ BitVec 32)) )(let ((?x47 (bvadd (bvmul input.ind-%var1445X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x213 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x47))))
 (let ((?x251 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv2 32))) ?x213)))
 (let ((?x147 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv3 32))) ?x251)))
 (let ((?x112 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1445X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1445X)))
 (=> $x18 (= ?x112 ?x147)))))))))
 ))
 (let (($x144 (forall ((input.ind-%var1444X (_ BitVec 32)) )(let (($x5 (bvule (_ bv0 32) input.ind-%var1444X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1444X)))
 (= $x18 (and $x5 (bvult input.ind-%var1444X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x196 (and $x144 $x184)))
 (let (($x164 (= $x196 true)))
 (let (($x202 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x162 (= $x202 true)))
 (let (($x149 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x76 (= $x149 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x240 (bvsub ?x94 ?x63)))
 (let (($x12 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x240) (bvult ?x94 ?x240))))
 (let (($x227 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x15 (ite $x227 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x173 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x194 (bvmul (_ bv4 64) ?x173)))
 (let ((?x17 ((_ extract 63 32) ?x194)))
 (let (($x42 (= ?x17 ?x15)))
 (let (($x132 (and $x42 $x12)))
 (let (($x223 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x168 (and $x223 $x132)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x134 (=> $x118 $x168)))
 (let (($x83 (= $x134 true)))
 (let (($x176 (= $x118 true)))
 (let ((?x226 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x68 (= (_ bv0 32) ?x226)))
 (let ((?x39 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x39)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x159 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let ((?x22 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x22)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x114 (and $x217 $x177)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x48 (and $x148 $x114)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x183 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x197 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x225 (and $x197 $x239)))
 (let (($x236 (not $x225)))
 (let (($x206 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x211 (and $x8 $x206)))
 (let (($x218 (and (not $x211) $x236)))
 (let (($x216 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x169 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x209 (and $x169 $x216)))
 (let (($x208 (not $x209)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x40 $x61)))
 (let (($x142 (and (not $x10) $x208)))
 (let (($x67 (and (and (and (and (and (and $x142 $x218) $x183) $x97) $x48) $x159) $x69)))
 (let (($x7 (and $x67 $x68)))
 (let (($x50 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x210 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x210)))
 (let (($x59 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x210)))
 (let (($x73 (or false (or false (and (and true (or $x161 $x59)) (or $x88 $x50))))))
 (let (($x146 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x73)))
 (let (($x87 (and $x146 $x7)))
 (let (($x113 (= $x87 true)))
 (let ((?x57 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x172 (bvneg ?x57)))
 (let (($x6 (= ?x172 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x78 (= $x6 true)))
 (let (($x180 (= ?x172 input.dst.llvm-%n)))
 (let (($x133 (= $x180 true)))
 (let (($x105 (and $x133 $x78)))
 (let (($x95 (and $x105 $x113)))
 (let (($x137 (and $x95 $x176)))
 (let (($x247 (and $x137 $x83)))
 (let (($x125 (and $x247 $x76)))
 (let (($x62 (and $x125 $x162)))
 (let (($x150 (and $x62 $x164)))
 (let (($x30 (and $x150 $x75)))
 (let (($x110 (and $x30 $x136)))
 (let (($x36 (and $x110 $x44)))
 (let (($x131 (and $x36 $x238)))
 (let (($x26 (and $x131 $x107)))
 (let (($x158 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x234 (and (not $x158) $x26)))
 (let (($x111 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x201 (and $x111 $x234)))
 (let (($x154 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x109 (and $x154 $x201)))
 (let (($x242 (forall ((input.ind-%var1455X (_ BitVec 32)) )(let (($x224 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1455X)))
 (=> $x224 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1455X) (_ bv0 32)))))
 ))
 (let (($x52 (forall ((input.ind-%var1454X (_ BitVec 32)) )(let (($x224 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1454X)))
 (= $x224 false)))
 ))
 (let (($x231 (and $x52 $x242)))
 (let (($x130 (and $x231 $x109)))
 (let (($x71 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x205 (and $x71 $x130)))
 (let (($x20 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x45 (bvadd ?x94 (_ bv3 32))))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x79 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x45)))
 (let (($x28 (or false (or false (and (and true (or $x51 $x79)) (or $x27 $x20))))))
 (let (($x33 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x28)))
 (let (($x127 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x28)))
 (let (($x188 (and $x127 $x205)))
 (let (($x300 (=> $x188 $x299)))
 (not $x300)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 52
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x199 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x43 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x195 (bvmul (_ bv4294967295 32) ?x43)))
 (let ((?x115 (bvneg ?x195)))
 (let (($x46 (= ?x115 ?x199)))
 (let (($x98 (= $x46 true)))
 (let ((?x293 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x295 (bvneg ?x293)))
 (let (($x296 (= ?x295 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x297 (= $x296 true)))
 (let (($x287 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x289 (= $x287 true)))
 (let (($x292 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x290 (= $x292 true)))
 (let (($x270 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x271 (= $x270 true)))
 (let (($x265 (forall ((input.ind-%var1483X (_ BitVec 32)) )(let ((?x188 (bvadd (bvmul input.ind-%var1483X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x99 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x188 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x188))))
 (let ((?x255 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x188 (_ bv2 32))) ?x99)))
 (let ((?x262 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x188 (_ bv3 32))) ?x255)))
 (let ((?x110 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1483X)))
 (let (($x213 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1483X)))
 (=> $x213 (= ?x110 ?x262)))))))))
 ))
 (let (($x75 (forall ((input.ind-%var1482X (_ BitVec 32)) )(let (($x150 (and (bvule (_ bv0 32) input.ind-%var1482X) (bvult input.ind-%var1482X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x213 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1482X)))
 (= $x213 $x150))))
 ))
 (let (($x267 (and $x75 $x265)))
 (let (($x269 (= $x267 true)))
 (let (($x91 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x9 (= $x91 true)))
 (let (($x175 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x215 (= $x175 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x62 (bvsub ?x94 ?x63)))
 (let (($x187 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x62) (bvult ?x94 ?x62))))
 (let (($x125 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x202 (ite $x125 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x117 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x149 (bvmul (_ bv4 64) ?x117)))
 (let ((?x76 ((_ extract 63 32) ?x149)))
 (let (($x162 (= ?x76 ?x202)))
 (let (($x100 (and $x162 $x187)))
 (let (($x83 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x144 (and $x83 $x100)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x112 (=> $x124 $x144)))
 (let (($x60 (= $x112 true)))
 (let (($x12 (= $x124 true)))
 (let ((?x223 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x189 (= (_ bv0 32) ?x223)))
 (let ((?x155 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x185 (= (_ bv0 32) ?x155)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x176)))
 (let ((?x7 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x7)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x113 (and $x68 $x87)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x226 $x113)))
 (let (($x67 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x114 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x177 $x114)))
 (let (($x34 (not $x48)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x22 (and $x148 $x217)))
 (let (($x159 (and (not $x22) $x34)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x181 $x183)))
 (let (($x192 (not $x66)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x61 $x10)))
 (let (($x222 (and (not $x190) $x192)))
 (let (($x42 (and (and (and (and (and (and $x222 $x159) $x39) $x67) $x95) $x137) $x185)))
 (let (($x116 (and $x42 $x189)))
 (let (($x211 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x216 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x216)))
 (let (($x208 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x209 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x216)))
 (let (($x225 (or false (or false (and (and true (or $x209 $x208)) (or $x206 $x211))))))
 (let (($x218 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x225)))
 (let (($x240 (and $x218 $x116)))
 (let (($x129 (= $x240 true)))
 (let ((?x214 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x141 (= (_ bv0 2) ?x214)))
 (let (($x73 (= $x141 true)))
 (let ((?x210 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x161 (bvneg ?x210)))
 (let (($x41 (= ?x161 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x88 (= $x41 true)))
 (let (($x59 (= ?x161 input.dst.llvm-%n)))
 (let (($x145 (= $x59 true)))
 (let (($x50 (and $x145 $x88)))
 (let (($x146 (and $x50 $x73)))
 (let (($x246 (and $x146 $x129)))
 (let (($x132 (and $x246 $x12)))
 (let (($x84 (and $x132 $x60)))
 (let (($x139 (and $x84 $x215)))
 (let (($x229 (and $x139 $x9)))
 (let (($x268 (and $x229 $x269)))
 (let (($x272 (and $x268 $x271)))
 (let (($x288 (and $x272 $x290)))
 (let (($x291 (and $x288 $x289)))
 (let (($x298 (and $x291 $x297)))
 (let (($x56 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x300 (and (not $x56) $x298)))
 (let (($x105 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x301 (and $x105 $x300)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x32 (and $x133 $x301)))
 (let (($x57 (forall ((input.ind-%var1493X (_ BitVec 32)) )(let (($x203 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1493X)))
 (=> $x203 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1493X) (_ bv0 32)))))
 ))
 (let (($x242 (forall ((input.ind-%var1492X (_ BitVec 32)) )(let (($x203 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1492X)))
 (= $x203 false)))
 ))
 (let (($x172 (and $x242 $x57)))
 (let (($x101 (and $x172 $x32)))
 (let (($x219 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x249 (and $x219 $x101)))
 (let (($x86 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x79 (bvadd ?x94 (_ bv3 32))))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x79)))
 (let (($x81 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x79)))
 (let (($x127 (or false (or false (and (and true (or $x31 $x81)) (or $x102 $x86))))))
 (let (($x71 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x127)))
 (let (($x171 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x127)))
 (let (($x207 (and $x171 $x249)))
 (let (($x233 (=> $x207 $x98)))
 (not $x233)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x199 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x43 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x195 (bvmul (_ bv4294967295 32) ?x43)))
 (let ((?x115 (bvneg ?x195)))
 (let (($x46 (= ?x115 ?x199)))
 (let (($x98 (= $x46 true)))
 (let ((?x293 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x295 (bvneg ?x293)))
 (let (($x296 (= ?x295 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x297 (= $x296 true)))
 (let (($x287 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x289 (= $x287 true)))
 (let (($x292 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x290 (= $x292 true)))
 (let (($x270 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x271 (= $x270 true)))
 (let (($x265 (forall ((input.ind-%var1483X (_ BitVec 32)) )(let ((?x188 (bvadd (bvmul input.ind-%var1483X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x99 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x188 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x188))))
 (let ((?x255 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x188 (_ bv2 32))) ?x99)))
 (let ((?x262 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x188 (_ bv3 32))) ?x255)))
 (let ((?x110 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1483X)))
 (let (($x213 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1483X)))
 (=> $x213 (= ?x110 ?x262)))))))))
 ))
 (let (($x75 (forall ((input.ind-%var1482X (_ BitVec 32)) )(let (($x150 (and (bvule (_ bv0 32) input.ind-%var1482X) (bvult input.ind-%var1482X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x213 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1482X)))
 (= $x213 $x150))))
 ))
 (let (($x267 (and $x75 $x265)))
 (let (($x269 (= $x267 true)))
 (let (($x91 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x9 (= $x91 true)))
 (let (($x175 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x215 (= $x175 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x62 (bvsub ?x94 ?x63)))
 (let (($x187 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x62) (bvult ?x94 ?x62))))
 (let (($x125 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x202 (ite $x125 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x117 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x149 (bvmul (_ bv4 64) ?x117)))
 (let ((?x76 ((_ extract 63 32) ?x149)))
 (let (($x162 (= ?x76 ?x202)))
 (let (($x100 (and $x162 $x187)))
 (let (($x83 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x144 (and $x83 $x100)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x112 (=> $x124 $x144)))
 (let (($x60 (= $x112 true)))
 (let (($x12 (= $x124 true)))
 (let ((?x223 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x189 (= (_ bv0 32) ?x223)))
 (let ((?x155 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x185 (= (_ bv0 32) ?x155)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x176)))
 (let ((?x7 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x87 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x7)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x113 (and $x68 $x87)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (and $x226 $x113)))
 (let (($x67 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x114 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x177 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x177 $x114)))
 (let (($x34 (not $x48)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x22 (and $x148 $x217)))
 (let (($x159 (and (not $x22) $x34)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x66 (and $x181 $x183)))
 (let (($x192 (not $x66)))
 (let (($x10 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x61 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x190 (and $x61 $x10)))
 (let (($x222 (and (not $x190) $x192)))
 (let (($x42 (and (and (and (and (and (and $x222 $x159) $x39) $x67) $x95) $x137) $x185)))
 (let (($x116 (and $x42 $x189)))
 (let (($x211 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x216 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x216)))
 (let (($x208 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x209 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x216)))
 (let (($x225 (or false (or false (and (and true (or $x209 $x208)) (or $x206 $x211))))))
 (let (($x218 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x225)))
 (let (($x240 (and $x218 $x116)))
 (let (($x129 (= $x240 true)))
 (let ((?x214 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x141 (= (_ bv0 2) ?x214)))
 (let (($x73 (= $x141 true)))
 (let ((?x210 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x161 (bvneg ?x210)))
 (let (($x41 (= ?x161 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x88 (= $x41 true)))
 (let (($x59 (= ?x161 input.dst.llvm-%n)))
 (let (($x145 (= $x59 true)))
 (let (($x50 (and $x145 $x88)))
 (let (($x146 (and $x50 $x73)))
 (let (($x246 (and $x146 $x129)))
 (let (($x132 (and $x246 $x12)))
 (let (($x84 (and $x132 $x60)))
 (let (($x139 (and $x84 $x215)))
 (let (($x229 (and $x139 $x9)))
 (let (($x268 (and $x229 $x269)))
 (let (($x272 (and $x268 $x271)))
 (let (($x288 (and $x272 $x290)))
 (let (($x291 (and $x288 $x289)))
 (let (($x298 (and $x291 $x297)))
 (let (($x56 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x300 (and (not $x56) $x298)))
 (let (($x105 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x301 (and $x105 $x300)))
 (let (($x133 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x32 (and $x133 $x301)))
 (let (($x57 (forall ((input.ind-%var1493X (_ BitVec 32)) )(let (($x203 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1493X)))
 (=> $x203 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1493X) (_ bv0 32)))))
 ))
 (let (($x242 (forall ((input.ind-%var1492X (_ BitVec 32)) )(let (($x203 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1492X)))
 (= $x203 false)))
 ))
 (let (($x172 (and $x242 $x57)))
 (let (($x101 (and $x172 $x32)))
 (let (($x219 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x249 (and $x219 $x101)))
 (let (($x86 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x79 (bvadd ?x94 (_ bv3 32))))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x79)))
 (let (($x81 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x31 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x79)))
 (let (($x127 (or false (or false (and (and true (or $x31 $x81)) (or $x102 $x86))))))
 (let (($x71 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x127)))
 (let (($x171 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x127)))
 (let (($x207 (and $x171 $x249)))
 (let (($x233 (=> $x207 $x98)))
 (not $x233)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 53
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x89 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x184 (bvule ?x89 (_ bv4294967294 32))))
 (let (($x109 (= $x184 true)))
 (let ((?x143 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x26 (bvneg ?x143)))
 (let (($x234 (= ?x26 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x232 (= $x234 true)))
 (let (($x147 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x53 (= $x147 true)))
 (let (($x85 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x136 (= $x85 true)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x77 (= (_ bv0 32) ?x126)))
 (let ((?x98 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x233 (= (_ bv0 32) ?x98)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let ((?x207 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x207)))
 (let (($x249 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x195 (and $x249 $x43)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x101 $x195)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x291 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x289 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x293 (and $x289 $x291)))
 (let (($x295 (not $x293)))
 (let (($x288 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x287 (and $x290 $x288)))
 (let (($x297 (and (not $x287) $x295)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x269 $x268)))
 (let (($x271 (not $x270)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x267 (and $x44 $x205)))
 (let (($x292 (and (not $x267) $x271)))
 (let (($x231 (and (and (and (and (and (and $x292 $x297) $x300) $x32) $x115) $x46) $x233)))
 (let (($x154 (and $x231 $x77)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x263 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x263)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x252 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x263)))
 (let (($x264 (or false (or false (and (and true (or $x252 $x21)) (or $x92 $x49))))))
 (let (($x265 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x264)))
 (let (($x224 (and $x265 $x154)))
 (let (($x103 (= $x224 true)))
 (let ((?x196 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x150 (= (_ bv0 2) ?x196)))
 (let (($x212 (= $x150 true)))
 (let (($x9 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x229 (= $x9 true)))
 (let (($x215 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x139 (= $x215 true)))
 (let (($x60 (forall ((input.ind-%var1503X (_ BitVec 32)) )(let ((?x149 (bvadd (bvmul input.ind-%var1503X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x162 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x149))))
 (let ((?x5 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x149 (_ bv2 32))) ?x162)))
 (let ((?x100 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x149 (_ bv3 32))) ?x5)))
 (let ((?x176 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1503X)))
 (let (($x173 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1503X)))
 (=> $x173 (= ?x176 ?x100)))))))))
 ))
 (let (($x87 (forall ((input.ind-%var1502X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1502X) (bvult input.ind-%var1502X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x173 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1502X)))
 (= $x173 $x68))))
 ))
 (let (($x84 (and $x87 $x60)))
 (let (($x47 (= $x84 true)))
 (let ((?x222 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x148 (bvneg ?x222)))
 (let (($x177 (= ?x148 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x114 (= $x177 true)))
 (let (($x217 (= ?x148 input.dst.llvm-%n)))
 (let (($x22 (= $x217 true)))
 (let (($x183 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x66 (= $x183 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x211 (bvsub ?x94 ?x63)))
 (let (($x225 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x211) (bvult ?x94 ?x211))))
 (let (($x208 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x8 (ite $x208 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x236 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x216 (bvmul (_ bv4 64) ?x236)))
 (let ((?x209 ((_ extract 63 32) ?x216)))
 (let (($x206 (= ?x209 ?x8)))
 (let (($x218 (and $x206 $x225)))
 (let (($x35 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x61 (and $x35 $x218)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x10 (=> $x16 $x61)))
 (let (($x190 (= $x10 true)))
 (let (($x141 (= $x16 true)))
 (let (($x97 (and $x141 $x190)))
 (let (($x192 (and $x97 $x66)))
 (let (($x179 (and $x192 $x22)))
 (let (($x48 (and $x179 $x114)))
 (let (($x175 (and $x48 $x47)))
 (let (($x91 (and $x175 $x139)))
 (let (($x213 (and $x91 $x229)))
 (let (($x75 (and $x213 $x212)))
 (let (($x152 (and $x75 $x103)))
 (let (($x24 (and $x152 $x136)))
 (let (($x36 (and $x24 $x53)))
 (let (($x235 (and $x36 $x232)))
 (let (($x214 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x238 (and (not $x214) $x235)))
 (let (($x50 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (and $x50 $x238)))
 (let (($x145 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x131 (and $x145 $x221)))
 (let (($x210 (forall ((input.ind-%var1513X (_ BitVec 32)) )(let (($x253 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1513X)))
 (=> $x253 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1513X) (_ bv0 32)))))
 ))
 (let (($x57 (forall ((input.ind-%var1512X (_ BitVec 32)) )(let (($x253 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1512X)))
 (= $x253 false)))
 ))
 (let (($x161 (and $x57 $x210)))
 (let (($x107 (and $x161 $x131)))
 (let (($x52 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x201 (and $x52 $x107)))
 (let (($x28 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x94 (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x27 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x81)))
 (let (($x171 (or false (or false (and (and true (or $x55 $x27)) (or $x64 $x28))))))
 (let (($x219 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x171)))
 (let (($x120 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x171)))
 (let (($x243 (and $x120 $x201)))
 (let (($x165 (=> $x243 $x109)))
 (not $x165))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x89 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x184 (bvule ?x89 (_ bv4294967294 32))))
 (let (($x109 (= $x184 true)))
 (let ((?x143 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x26 (bvneg ?x143)))
 (let (($x234 (= ?x26 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x232 (= $x234 true)))
 (let (($x147 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x53 (= $x147 true)))
 (let (($x85 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x136 (= $x85 true)))
 (let ((?x126 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x77 (= (_ bv0 32) ?x126)))
 (let ((?x98 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x233 (= (_ bv0 32) ?x98)))
 (let ((?x199 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x199)))
 (let ((?x207 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x207)))
 (let (($x249 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x195 (and $x249 $x43)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x115 (and $x101 $x195)))
 (let (($x32 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x291 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x289 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x293 (and $x289 $x291)))
 (let (($x295 (not $x293)))
 (let (($x288 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x287 (and $x290 $x288)))
 (let (($x297 (and (not $x287) $x295)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x269 $x268)))
 (let (($x271 (not $x270)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x267 (and $x44 $x205)))
 (let (($x292 (and (not $x267) $x271)))
 (let (($x231 (and (and (and (and (and (and $x292 $x297) $x300) $x32) $x115) $x46) $x233)))
 (let (($x154 (and $x231 $x77)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x263 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x263)))
 (let (($x21 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x252 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x263)))
 (let (($x264 (or false (or false (and (and true (or $x252 $x21)) (or $x92 $x49))))))
 (let (($x265 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x264)))
 (let (($x224 (and $x265 $x154)))
 (let (($x103 (= $x224 true)))
 (let ((?x196 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x150 (= (_ bv0 2) ?x196)))
 (let (($x212 (= $x150 true)))
 (let (($x9 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x229 (= $x9 true)))
 (let (($x215 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x139 (= $x215 true)))
 (let (($x60 (forall ((input.ind-%var1503X (_ BitVec 32)) )(let ((?x149 (bvadd (bvmul input.ind-%var1503X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x162 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x149 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x149))))
 (let ((?x5 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x149 (_ bv2 32))) ?x162)))
 (let ((?x100 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x149 (_ bv3 32))) ?x5)))
 (let ((?x176 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1503X)))
 (let (($x173 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1503X)))
 (=> $x173 (= ?x176 ?x100)))))))))
 ))
 (let (($x87 (forall ((input.ind-%var1502X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1502X) (bvult input.ind-%var1502X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x173 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1502X)))
 (= $x173 $x68))))
 ))
 (let (($x84 (and $x87 $x60)))
 (let (($x47 (= $x84 true)))
 (let ((?x222 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x148 (bvneg ?x222)))
 (let (($x177 (= ?x148 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x114 (= $x177 true)))
 (let (($x217 (= ?x148 input.dst.llvm-%n)))
 (let (($x22 (= $x217 true)))
 (let (($x183 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x66 (= $x183 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x211 (bvsub ?x94 ?x63)))
 (let (($x225 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x211) (bvult ?x94 ?x211))))
 (let (($x208 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x8 (ite $x208 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x236 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x216 (bvmul (_ bv4 64) ?x236)))
 (let ((?x209 ((_ extract 63 32) ?x216)))
 (let (($x206 (= ?x209 ?x8)))
 (let (($x218 (and $x206 $x225)))
 (let (($x35 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x61 (and $x35 $x218)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x10 (=> $x16 $x61)))
 (let (($x190 (= $x10 true)))
 (let (($x141 (= $x16 true)))
 (let (($x97 (and $x141 $x190)))
 (let (($x192 (and $x97 $x66)))
 (let (($x179 (and $x192 $x22)))
 (let (($x48 (and $x179 $x114)))
 (let (($x175 (and $x48 $x47)))
 (let (($x91 (and $x175 $x139)))
 (let (($x213 (and $x91 $x229)))
 (let (($x75 (and $x213 $x212)))
 (let (($x152 (and $x75 $x103)))
 (let (($x24 (and $x152 $x136)))
 (let (($x36 (and $x24 $x53)))
 (let (($x235 (and $x36 $x232)))
 (let (($x214 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x238 (and (not $x214) $x235)))
 (let (($x50 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (and $x50 $x238)))
 (let (($x145 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x131 (and $x145 $x221)))
 (let (($x210 (forall ((input.ind-%var1513X (_ BitVec 32)) )(let (($x253 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1513X)))
 (=> $x253 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1513X) (_ bv0 32)))))
 ))
 (let (($x57 (forall ((input.ind-%var1512X (_ BitVec 32)) )(let (($x253 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1512X)))
 (= $x253 false)))
 ))
 (let (($x161 (and $x57 $x210)))
 (let (($x107 (and $x161 $x131)))
 (let (($x52 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x201 (and $x52 $x107)))
 (let (($x28 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x81 (bvadd ?x94 (_ bv3 32))))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x81)))
 (let (($x27 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x55 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x81)))
 (let (($x171 (or false (or false (and (and true (or $x55 $x27)) (or $x64 $x28))))))
 (let (($x219 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x171)))
 (let (($x120 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x171)))
 (let (($x243 (and $x120 $x201)))
 (let (($x165 (=> $x243 $x109)))
 (not $x165))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 54
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x95 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x247 (bvsge ?x95 (_ bv0 32))))
 (let (($x180 (= $x247 true)))
 (let ((?x129 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x246 (bvneg ?x129)))
 (let (($x223 (= ?x246 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x189 (= $x223 true)))
 (let (($x185 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x132 (= $x185 true)))
 (let (($x39 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x194 (= $x39 true)))
 (let ((?x166 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x166)))
 (let ((?x54 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x110 (= (_ bv0 32) ?x54)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let ((?x243 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x89 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x243)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x184 (and $x201 $x89)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x107 $x184)))
 (let (($x131 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x143 (and $x53 $x36)))
 (let (($x26 (not $x143)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x147 (and $x136 $x24)))
 (let (($x232 (and (not $x147) $x26)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x77 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x224 (and $x77 $x154)))
 (let (($x103 (not $x224)))
 (let (($x301 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x251 $x301)))
 (let (($x85 (and (not $x126) $x103)))
 (let (($x241 (and (and (and (and (and (and $x85 $x232) $x238) $x131) $x109) $x130) $x110)))
 (let (($x65 (and $x241 $x137)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x249 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x101)))
 (let (($x98 (or false (or false (and (and true (or $x249 $x207)) (or $x115 $x204))))))
 (let (($x231 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x96 (and $x231 $x65)))
 (let (($x227 (= $x96 true)))
 (let ((?x295 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x297 (= (_ bv0 2) ?x295)))
 (let (($x40 (= $x297 true)))
 (let (($x296 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x289 (= $x296 true)))
 (let (($x290 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x288 (= $x290 true)))
 (let (($x268 (forall ((input.ind-%var1523X (_ BitVec 32)) )(let ((?x193 (bvadd (bvmul input.ind-%var1523X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x255 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x193))))
 (let ((?x265 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x193 (_ bv2 32))) ?x255)))
 (let ((?x267 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x193 (_ bv3 32))) ?x265)))
 (let ((?x175 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1523X)))
 (let (($x240 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1523X)))
 (=> $x240 (= ?x175 ?x267)))))))))
 ))
 (let (($x112 (forall ((input.ind-%var1522X (_ BitVec 32)) )(let (($x100 (and (bvule (_ bv0 32) input.ind-%var1522X) (bvult input.ind-%var1522X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x240 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1522X)))
 (= $x240 $x100))))
 ))
 (let (($x270 (and $x112 $x268)))
 (let (($x271 (= $x270 true)))
 (let ((?x17 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x68 (bvneg ?x17)))
 (let (($x15 (= ?x68 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x117 (= $x15 true)))
 (let (($x7 (= ?x68 input.dst.llvm-%n)))
 (let (($x87 (= $x7 true)))
 (let (($x48 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x173 (= $x48 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x181 (bvsub ?x94 ?x63)))
 (let (($x222 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x181) (bvult ?x94 ?x181))))
 (let (($x61 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x190 (ite $x61 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x239 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x225 (bvmul (_ bv4 64) ?x239)))
 (let ((?x218 ((_ extract 63 32) ?x225)))
 (let (($x97 (= ?x218 ?x190)))
 (let (($x148 (and $x97 $x222)))
 (let (($x211 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x217 (and $x211 $x148)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x22 (=> $x70 $x217)))
 (let (($x179 (= $x22 true)))
 (let (($x8 (= $x70 true)))
 (let (($x177 (and $x8 $x179)))
 (let (($x226 (and $x177 $x173)))
 (let (($x176 (and $x226 $x87)))
 (let (($x149 (and $x176 $x117)))
 (let (($x292 (and $x149 $x271)))
 (let (($x287 (and $x292 $x288)))
 (let (($x291 (and $x287 $x289)))
 (let (($x298 (and $x291 $x40)))
 (let (($x34 (and $x298 $x227)))
 (let (($x155 (and $x34 $x194)))
 (let (($x168 (and $x155 $x132)))
 (let (($x42 (and $x168 $x189)))
 (let (($x142 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x12 (and (not $x142) $x42)))
 (let (($x209 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x134 (and $x209 $x12)))
 (let (($x169 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x159 (and $x169 $x134)))
 (let (($x73 (forall ((input.ind-%var1533X (_ BitVec 32)) )(let (($x6 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1533X)))
 (=> $x6 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1533X) (_ bv0 32)))))
 ))
 (let (($x210 (forall ((input.ind-%var1532X (_ BitVec 32)) )(let (($x6 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1532X)))
 (= $x6 false)))
 ))
 (let (($x146 (and $x210 $x73)))
 (let (($x69 (and $x146 $x159)))
 (let (($x242 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x67 (and $x242 $x69)))
 (let (($x127 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x27 (bvadd ?x94 (_ bv3 32))))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x27)))
 (let (($x102 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x27)))
 (let (($x120 (or false (or false (and (and true (or $x58 $x102)) (or $x33 $x127))))))
 (let (($x52 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x120)))
 (let (($x45 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x120)))
 (let (($x83 (and $x45 $x67)))
 (let (($x56 (=> $x83 $x180)))
 (not $x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x95 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x247 (bvsge ?x95 (_ bv0 32))))
 (let (($x180 (= $x247 true)))
 (let ((?x129 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x246 (bvneg ?x129)))
 (let (($x223 (= ?x246 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x189 (= $x223 true)))
 (let (($x185 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x132 (= $x185 true)))
 (let (($x39 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x194 (= $x39 true)))
 (let ((?x166 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x166)))
 (let ((?x54 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x110 (= (_ bv0 32) ?x54)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x130 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let ((?x243 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x89 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x243)))
 (let (($x201 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x184 (and $x201 $x89)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (and $x107 $x184)))
 (let (($x131 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x143 (and $x53 $x36)))
 (let (($x26 (not $x143)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x147 (and $x136 $x24)))
 (let (($x232 (and (not $x147) $x26)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x77 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x224 (and $x77 $x154)))
 (let (($x103 (not $x224)))
 (let (($x301 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x251 $x301)))
 (let (($x85 (and (not $x126) $x103)))
 (let (($x241 (and (and (and (and (and (and $x85 $x232) $x238) $x131) $x109) $x130) $x110)))
 (let (($x65 (and $x241 $x137)))
 (let (($x204 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x249 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x101)))
 (let (($x98 (or false (or false (and (and true (or $x249 $x207)) (or $x115 $x204))))))
 (let (($x231 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x96 (and $x231 $x65)))
 (let (($x227 (= $x96 true)))
 (let ((?x295 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x297 (= (_ bv0 2) ?x295)))
 (let (($x40 (= $x297 true)))
 (let (($x296 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x289 (= $x296 true)))
 (let (($x290 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x288 (= $x290 true)))
 (let (($x268 (forall ((input.ind-%var1523X (_ BitVec 32)) )(let ((?x193 (bvadd (bvmul input.ind-%var1523X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x255 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x193 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x193))))
 (let ((?x265 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x193 (_ bv2 32))) ?x255)))
 (let ((?x267 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x193 (_ bv3 32))) ?x265)))
 (let ((?x175 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1523X)))
 (let (($x240 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1523X)))
 (=> $x240 (= ?x175 ?x267)))))))))
 ))
 (let (($x112 (forall ((input.ind-%var1522X (_ BitVec 32)) )(let (($x100 (and (bvule (_ bv0 32) input.ind-%var1522X) (bvult input.ind-%var1522X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x240 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1522X)))
 (= $x240 $x100))))
 ))
 (let (($x270 (and $x112 $x268)))
 (let (($x271 (= $x270 true)))
 (let ((?x17 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x68 (bvneg ?x17)))
 (let (($x15 (= ?x68 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x117 (= $x15 true)))
 (let (($x7 (= ?x68 input.dst.llvm-%n)))
 (let (($x87 (= $x7 true)))
 (let (($x48 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x173 (= $x48 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x181 (bvsub ?x94 ?x63)))
 (let (($x222 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x181) (bvult ?x94 ?x181))))
 (let (($x61 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x190 (ite $x61 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x239 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x225 (bvmul (_ bv4 64) ?x239)))
 (let ((?x218 ((_ extract 63 32) ?x225)))
 (let (($x97 (= ?x218 ?x190)))
 (let (($x148 (and $x97 $x222)))
 (let (($x211 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x217 (and $x211 $x148)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x22 (=> $x70 $x217)))
 (let (($x179 (= $x22 true)))
 (let (($x8 (= $x70 true)))
 (let (($x177 (and $x8 $x179)))
 (let (($x226 (and $x177 $x173)))
 (let (($x176 (and $x226 $x87)))
 (let (($x149 (and $x176 $x117)))
 (let (($x292 (and $x149 $x271)))
 (let (($x287 (and $x292 $x288)))
 (let (($x291 (and $x287 $x289)))
 (let (($x298 (and $x291 $x40)))
 (let (($x34 (and $x298 $x227)))
 (let (($x155 (and $x34 $x194)))
 (let (($x168 (and $x155 $x132)))
 (let (($x42 (and $x168 $x189)))
 (let (($x142 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x12 (and (not $x142) $x42)))
 (let (($x209 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x134 (and $x209 $x12)))
 (let (($x169 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x159 (and $x169 $x134)))
 (let (($x73 (forall ((input.ind-%var1533X (_ BitVec 32)) )(let (($x6 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1533X)))
 (=> $x6 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1533X) (_ bv0 32)))))
 ))
 (let (($x210 (forall ((input.ind-%var1532X (_ BitVec 32)) )(let (($x6 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1532X)))
 (= $x6 false)))
 ))
 (let (($x146 (and $x210 $x73)))
 (let (($x69 (and $x146 $x159)))
 (let (($x242 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x67 (and $x242 $x69)))
 (let (($x127 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x27 (bvadd ?x94 (_ bv3 32))))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x27)))
 (let (($x102 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x27)))
 (let (($x120 (or false (or false (and (and true (or $x58 $x102)) (or $x33 $x127))))))
 (let (($x52 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x120)))
 (let (($x45 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x120)))
 (let (($x83 (and $x45 $x67)))
 (let (($x56 (=> $x83 $x180)))
 (not $x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 55
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x84 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x21 (bvule ?x84 (_ bv4294967294 32))))
 (let (($x59 (= $x21 true)))
 (let ((?x212 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x75 (bvneg ?x212)))
 (let (($x213 (= ?x75 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x164 (= $x213 true)))
 (let (($x9 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x294 (= $x9 true)))
 (let (($x62 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x125 (= $x62 true)))
 (let (($x299 (forall ((input.ind-%var1543X (_ BitVec 32)) )(let ((?x180 (bvadd (bvmul input.ind-%var1543X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x300 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x180 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x180))))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x180 (_ bv2 32))) ?x300)))
 (let ((?x145 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x180 (_ bv3 32))) ?x105)))
 (let ((?x39 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1543X)))
 (let (($x109 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1543X)))
 (=> $x109 (= ?x39 ?x145)))))))))
 ))
 (let (($x65 (forall ((input.ind-%var1542X (_ BitVec 32)) )(let (($x166 (and (bvule (_ bv0 32) input.ind-%var1542X) (bvult input.ind-%var1542X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x109 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1542X)))
 (= $x109 $x166))))
 ))
 (let (($x13 (and $x65 $x299)))
 (let (($x47 (= $x13 true)))
 (let (($x107 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x201 (= $x107 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x143 (bvsub ?x94 ?x63)))
 (let (($x235 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x143) (bvult ?x94 ?x143))))
 (let (($x234 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x53 (ite $x234 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x136 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x24 (bvmul (_ bv4 64) ?x136)))
 (let ((?x147 ((_ extract 63 32) ?x24)))
 (let (($x36 (= ?x147 ?x53)))
 (let (($x238 (and $x36 $x235)))
 (let (($x103 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x78 (and $x103 $x238)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x221 (=> $x118 $x78)))
 (let (($x131 (= $x221 true)))
 (let (($x152 (= $x118 true)))
 (let (($x251 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x301 (= $x251 true)))
 (let ((?x101 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x249 (= (_ bv0 32) ?x101)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x233 (= (_ bv0 32) ?x119)))
 (let ((?x298 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x32 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x298)))
 (let ((?x293 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x293)))
 (let (($x291 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x297 (and $x291 $x295)))
 (let (($x289 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x289 $x297)))
 (let (($x296 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x288 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x272 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x268 (and $x272 $x269)))
 (let (($x270 (not $x268)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x255 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x267 (and $x255 $x265)))
 (let (($x292 (and (not $x267) $x270)))
 (let (($x262 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x264 (and $x150 $x262)))
 (let (($x49 (not $x264)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (and $x7 $x87)))
 (let (($x92 (and (not $x205) $x49)))
 (let (($x199 (and (and (and (and (and (and $x92 $x292) $x288) $x296) $x40) $x32) $x233)))
 (let (($x46 (and $x199 $x249)))
 (let (($x144 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x117 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x117)))
 (let (($x240 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x117)))
 (let (($x254 (or false (or false (and (and true (or $x149 $x240)) (or $x100 $x144))))))
 (let (($x44 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x254)))
 (let (($x237 (and $x44 $x46)))
 (let (($x98 (= $x237 true)))
 (let ((?x48 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x173 (= (_ bv0 2) ?x48)))
 (let (($x226 (= $x173 true)))
 (let (($x22 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x179 (= $x22 true)))
 (let ((?x97 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x183 (bvneg ?x97)))
 (let (($x192 (= ?x183 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x222 (= $x192 true)))
 (let (($x181 (= ?x183 input.dst.llvm-%n)))
 (let (($x66 (= $x181 true)))
 (let (($x148 (and $x66 $x222)))
 (let (($x177 (and $x148 $x179)))
 (let (($x17 (and $x177 $x226)))
 (let (($x231 (and $x17 $x98)))
 (let (($x126 (and $x231 $x301)))
 (let (($x77 (and $x126 $x152)))
 (let (($x172 (and $x77 $x131)))
 (let (($x243 (and $x172 $x201)))
 (let (($x138 (and $x243 $x47)))
 (let (($x91 (and $x138 $x125)))
 (let (($x266 (and $x91 $x294)))
 (let (($x229 (and $x266 $x164)))
 (let (($x10 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x188 (and (not $x10) $x229)))
 (let (($x218 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x263 (and $x218 $x188)))
 (let (($x197 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x187 (and $x197 $x263)))
 (let (($x206 (forall ((input.ind-%var1553X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1553X)))
 (=> $x41 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1553X) (_ bv0 32)))))
 ))
 (let (($x73 (forall ((input.ind-%var1552X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1552X)))
 (= $x41 false)))
 ))
 (let (($x157 (and $x73 $x206)))
 (let (($x202 (and $x157 $x187)))
 (let (($x57 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x76 (and $x57 $x202)))
 (let (($x171 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd ?x94 (_ bv3 32))))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x64 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x102)))
 (let (($x45 (or false (or false (and (and true (or $x20 $x64)) (or $x71 $x171))))))
 (let (($x242 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x45)))
 (let (($x79 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x45)))
 (let (($x252 (and $x79 $x76)))
 (let (($x214 (=> $x252 $x59)))
 (not $x214))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x84 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x21 (bvule ?x84 (_ bv4294967294 32))))
 (let (($x59 (= $x21 true)))
 (let ((?x212 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x75 (bvneg ?x212)))
 (let (($x213 (= ?x75 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x164 (= $x213 true)))
 (let (($x9 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x294 (= $x9 true)))
 (let (($x62 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x125 (= $x62 true)))
 (let (($x299 (forall ((input.ind-%var1543X (_ BitVec 32)) )(let ((?x180 (bvadd (bvmul input.ind-%var1543X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x300 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x180 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x180))))
 (let ((?x105 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x180 (_ bv2 32))) ?x300)))
 (let ((?x145 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x180 (_ bv3 32))) ?x105)))
 (let ((?x39 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1543X)))
 (let (($x109 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1543X)))
 (=> $x109 (= ?x39 ?x145)))))))))
 ))
 (let (($x65 (forall ((input.ind-%var1542X (_ BitVec 32)) )(let (($x166 (and (bvule (_ bv0 32) input.ind-%var1542X) (bvult input.ind-%var1542X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x109 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1542X)))
 (= $x109 $x166))))
 ))
 (let (($x13 (and $x65 $x299)))
 (let (($x47 (= $x13 true)))
 (let (($x107 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x201 (= $x107 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x143 (bvsub ?x94 ?x63)))
 (let (($x235 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x143) (bvult ?x94 ?x143))))
 (let (($x234 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x53 (ite $x234 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x136 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x24 (bvmul (_ bv4 64) ?x136)))
 (let ((?x147 ((_ extract 63 32) ?x24)))
 (let (($x36 (= ?x147 ?x53)))
 (let (($x238 (and $x36 $x235)))
 (let (($x103 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x78 (and $x103 $x238)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x221 (=> $x118 $x78)))
 (let (($x131 (= $x221 true)))
 (let (($x152 (= $x118 true)))
 (let (($x251 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x301 (= $x251 true)))
 (let ((?x101 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x249 (= (_ bv0 32) ?x101)))
 (let ((?x119 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x233 (= (_ bv0 32) ?x119)))
 (let ((?x298 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x32 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x298)))
 (let ((?x293 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x293)))
 (let (($x291 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x297 (and $x291 $x295)))
 (let (($x289 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (and $x289 $x297)))
 (let (($x296 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x288 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x272 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x268 (and $x272 $x269)))
 (let (($x270 (not $x268)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x255 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x267 (and $x255 $x265)))
 (let (($x292 (and (not $x267) $x270)))
 (let (($x262 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x264 (and $x150 $x262)))
 (let (($x49 (not $x264)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (and $x7 $x87)))
 (let (($x92 (and (not $x205) $x49)))
 (let (($x199 (and (and (and (and (and (and $x92 $x292) $x288) $x296) $x40) $x32) $x233)))
 (let (($x46 (and $x199 $x249)))
 (let (($x144 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x117 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x100 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x117)))
 (let (($x240 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x117)))
 (let (($x254 (or false (or false (and (and true (or $x149 $x240)) (or $x100 $x144))))))
 (let (($x44 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x254)))
 (let (($x237 (and $x44 $x46)))
 (let (($x98 (= $x237 true)))
 (let ((?x48 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x173 (= (_ bv0 2) ?x48)))
 (let (($x226 (= $x173 true)))
 (let (($x22 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x179 (= $x22 true)))
 (let ((?x97 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x183 (bvneg ?x97)))
 (let (($x192 (= ?x183 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x222 (= $x192 true)))
 (let (($x181 (= ?x183 input.dst.llvm-%n)))
 (let (($x66 (= $x181 true)))
 (let (($x148 (and $x66 $x222)))
 (let (($x177 (and $x148 $x179)))
 (let (($x17 (and $x177 $x226)))
 (let (($x231 (and $x17 $x98)))
 (let (($x126 (and $x231 $x301)))
 (let (($x77 (and $x126 $x152)))
 (let (($x172 (and $x77 $x131)))
 (let (($x243 (and $x172 $x201)))
 (let (($x138 (and $x243 $x47)))
 (let (($x91 (and $x138 $x125)))
 (let (($x266 (and $x91 $x294)))
 (let (($x229 (and $x266 $x164)))
 (let (($x10 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x188 (and (not $x10) $x229)))
 (let (($x218 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x263 (and $x218 $x188)))
 (let (($x197 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x187 (and $x197 $x263)))
 (let (($x206 (forall ((input.ind-%var1553X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1553X)))
 (=> $x41 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1553X) (_ bv0 32)))))
 ))
 (let (($x73 (forall ((input.ind-%var1552X (_ BitVec 32)) )(let (($x41 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1552X)))
 (= $x41 false)))
 ))
 (let (($x157 (and $x73 $x206)))
 (let (($x202 (and $x157 $x187)))
 (let (($x57 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x76 (and $x57 $x202)))
 (let (($x171 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x102 (bvadd ?x94 (_ bv3 32))))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x64 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x102)))
 (let (($x45 (or false (or false (and (and true (or $x20 $x64)) (or $x71 $x171))))))
 (let (($x242 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x45)))
 (let (($x79 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x45)))
 (let (($x252 (and $x79 $x76)))
 (let (($x214 (=> $x252 $x59)))
 (not $x214))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 56
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x227 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x95 (bvsge ?x227 (_ bv0 32))))
 (let (($x35 (= $x95 true)))
 (let ((?x42 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x12 (bvneg ?x42)))
 (let (($x129 (= ?x12 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x246 (= $x129 true)))
 (let (($x132 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x159 (= $x132 true)))
 (let (($x165 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x130 (= $x165 true)))
 (let (($x128 (forall ((input.ind-%var1563X (_ BitVec 32)) )(let ((?x59 (bvadd (bvmul input.ind-%var1563X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x68 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x59))))
 (let ((?x50 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x59 (_ bv2 32))) ?x68)))
 (let ((?x169 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x59 (_ bv3 32))) ?x50)))
 (let ((?x62 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1563X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1563X)))
 (=> $x18 (= ?x62 ?x169)))))))))
 ))
 (let (($x299 (forall ((input.ind-%var1562X (_ BitVec 32)) )(let (($x253 (and (bvule (_ bv0 32) input.ind-%var1562X) (bvult input.ind-%var1562X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1562X)))
 (= $x18 $x253))))
 ))
 (let (($x208 (and $x299 $x128)))
 (let (($x34 (= $x208 true)))
 (let (($x247 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x180 (= $x247 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x201 (bvsub ?x94 ?x63)))
 (let (($x110 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x201) (bvult ?x94 ?x201))))
 (let (($x131 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x172 (ite $x131 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x238 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x78 (bvmul (_ bv4 64) ?x238)))
 (let ((?x221 ((_ extract 63 32) ?x78)))
 (let (($x107 (= ?x221 ?x172)))
 (let (($x166 (and $x107 $x110)))
 (let (($x111 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x137 (and $x111 $x166)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x65 (=> $x124 $x137)))
 (let (($x39 (= $x65 true)))
 (let (($x36 (= $x124 true)))
 (let (($x147 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x234 (= $x147 true)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x237 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x98 (= (_ bv0 32) ?x237)))
 (let ((?x249 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x249)))
 (let ((?x119 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x233 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x119)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x199 (and $x204 $x233)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (and $x32 $x199)))
 (let (($x298 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x40 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x195 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x296 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x289 (and $x296 $x195)))
 (let (($x291 (not $x289)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x288 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x287 (and $x288 $x43)))
 (let (($x295 (and (not $x287) $x291)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x269 $x268)))
 (let (($x292 (not $x270)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x175 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x272 (and $x175 $x139)))
 (let (($x290 (and (not $x272) $x292)))
 (let (($x224 (and (and (and (and (and (and $x290 $x295) $x40) $x298) $x101) $x46) $x98)))
 (let (($x103 (and $x224 $x251)))
 (let (($x264 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x262 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x205 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x265 (or false (or false (and (and true (or $x87 $x205)) (or $x262 $x264))))))
 (let (($x271 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x265)))
 (let (($x85 (and $x271 $x103)))
 (let (($x136 (= $x85 true)))
 (let ((?x5 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x162 (= (_ bv0 2) ?x5)))
 (let (($x100 (= $x162 true)))
 (let (($x193 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x117 (= $x193 true)))
 (let ((?x177 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x114 (bvneg ?x177)))
 (let (($x226 (= ?x114 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x17 (= $x226 true)))
 (let (($x48 (= ?x114 input.dst.llvm-%n)))
 (let (($x173 (= $x48 true)))
 (let (($x176 (and $x173 $x17)))
 (let (($x149 (and $x176 $x117)))
 (let (($x144 (and $x149 $x100)))
 (let (($x24 (and $x144 $x136)))
 (let (($x53 (and $x24 $x234)))
 (let (($x26 (and $x53 $x36)))
 (let (($x155 (and $x26 $x39)))
 (let (($x88 (and $x155 $x180)))
 (let (($x89 (and $x88 $x34)))
 (let (($x185 (and $x89 $x130)))
 (let (($x69 (and $x185 $x159)))
 (let (($x168 (and $x69 $x246)))
 (let (($x22 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x134 (and (not $x22) $x168)))
 (let (($x148 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x67 (and $x148 $x134)))
 (let (($x66 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x184 (and $x66 $x67)))
 (let (($x97 (forall ((input.ind-%var1573X (_ BitVec 32)) )(let (($x236 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1573X)))
 (=> $x236 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1573X) (_ bv0 32)))))
 ))
 (let (($x206 (forall ((input.ind-%var1572X (_ BitVec 32)) )(let (($x236 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1572X)))
 (= $x236 false)))
 ))
 (let (($x183 (and $x206 $x97)))
 (let (($x203 (and $x183 $x184)))
 (let (($x210 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x54 (and $x210 $x203)))
 (let (($x120 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd ?x94 (_ bv3 32))))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x33 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x79 (or false (or false (and (and true (or $x86 $x33)) (or $x219 $x120))))))
 (let (($x57 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x79)))
 (let (($x81 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x79)))
 (let (($x83 (and $x81 $x54)))
 (let (($x142 (=> $x83 $x35)))
 (not $x142))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x227 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x95 (bvsge ?x227 (_ bv0 32))))
 (let (($x35 (= $x95 true)))
 (let ((?x42 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x12 (bvneg ?x42)))
 (let (($x129 (= ?x12 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x246 (= $x129 true)))
 (let (($x132 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x159 (= $x132 true)))
 (let (($x165 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x130 (= $x165 true)))
 (let (($x128 (forall ((input.ind-%var1563X (_ BitVec 32)) )(let ((?x59 (bvadd (bvmul input.ind-%var1563X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x68 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x59 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x59))))
 (let ((?x50 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x59 (_ bv2 32))) ?x68)))
 (let ((?x169 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x59 (_ bv3 32))) ?x50)))
 (let ((?x62 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1563X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1563X)))
 (=> $x18 (= ?x62 ?x169)))))))))
 ))
 (let (($x299 (forall ((input.ind-%var1562X (_ BitVec 32)) )(let (($x253 (and (bvule (_ bv0 32) input.ind-%var1562X) (bvult input.ind-%var1562X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1562X)))
 (= $x18 $x253))))
 ))
 (let (($x208 (and $x299 $x128)))
 (let (($x34 (= $x208 true)))
 (let (($x247 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x180 (= $x247 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x201 (bvsub ?x94 ?x63)))
 (let (($x110 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x201) (bvult ?x94 ?x201))))
 (let (($x131 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x172 (ite $x131 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x238 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x78 (bvmul (_ bv4 64) ?x238)))
 (let ((?x221 ((_ extract 63 32) ?x78)))
 (let (($x107 (= ?x221 ?x172)))
 (let (($x166 (and $x107 $x110)))
 (let (($x111 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x137 (and $x111 $x166)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x65 (=> $x124 $x137)))
 (let (($x39 (= $x65 true)))
 (let (($x36 (= $x124 true)))
 (let (($x147 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x234 (= $x147 true)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x237 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x98 (= (_ bv0 32) ?x237)))
 (let ((?x249 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x249)))
 (let ((?x119 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x233 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x119)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x199 (and $x204 $x233)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x101 (and $x32 $x199)))
 (let (($x298 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x40 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x195 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x296 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x289 (and $x296 $x195)))
 (let (($x291 (not $x289)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x288 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x287 (and $x288 $x43)))
 (let (($x295 (and (not $x287) $x291)))
 (let (($x268 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x269 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x270 (and $x269 $x268)))
 (let (($x292 (not $x270)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x175 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x272 (and $x175 $x139)))
 (let (($x290 (and (not $x272) $x292)))
 (let (($x224 (and (and (and (and (and (and $x290 $x295) $x40) $x298) $x101) $x46) $x98)))
 (let (($x103 (and $x224 $x251)))
 (let (($x264 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x262 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x205 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x265 (or false (or false (and (and true (or $x87 $x205)) (or $x262 $x264))))))
 (let (($x271 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x265)))
 (let (($x85 (and $x271 $x103)))
 (let (($x136 (= $x85 true)))
 (let ((?x5 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x162 (= (_ bv0 2) ?x5)))
 (let (($x100 (= $x162 true)))
 (let (($x193 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x117 (= $x193 true)))
 (let ((?x177 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x114 (bvneg ?x177)))
 (let (($x226 (= ?x114 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x17 (= $x226 true)))
 (let (($x48 (= ?x114 input.dst.llvm-%n)))
 (let (($x173 (= $x48 true)))
 (let (($x176 (and $x173 $x17)))
 (let (($x149 (and $x176 $x117)))
 (let (($x144 (and $x149 $x100)))
 (let (($x24 (and $x144 $x136)))
 (let (($x53 (and $x24 $x234)))
 (let (($x26 (and $x53 $x36)))
 (let (($x155 (and $x26 $x39)))
 (let (($x88 (and $x155 $x180)))
 (let (($x89 (and $x88 $x34)))
 (let (($x185 (and $x89 $x130)))
 (let (($x69 (and $x185 $x159)))
 (let (($x168 (and $x69 $x246)))
 (let (($x22 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x134 (and (not $x22) $x168)))
 (let (($x148 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x67 (and $x148 $x134)))
 (let (($x66 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x184 (and $x66 $x67)))
 (let (($x97 (forall ((input.ind-%var1573X (_ BitVec 32)) )(let (($x236 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1573X)))
 (=> $x236 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1573X) (_ bv0 32)))))
 ))
 (let (($x206 (forall ((input.ind-%var1572X (_ BitVec 32)) )(let (($x236 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1572X)))
 (= $x236 false)))
 ))
 (let (($x183 (and $x206 $x97)))
 (let (($x203 (and $x183 $x184)))
 (let (($x210 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x54 (and $x210 $x203)))
 (let (($x120 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd ?x94 (_ bv3 32))))
 (let (($x219 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x33 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x79 (or false (or false (and (and true (or $x86 $x33)) (or $x219 $x120))))))
 (let (($x57 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x79)))
 (let (($x81 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x79)))
 (let (($x83 (and $x81 $x54)))
 (let (($x142 (=> $x83 $x35)))
 (not $x142))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 57
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x84 (bvule ?x47 input.dst.llvm-%n)))
 (let (($x211 (= $x84 true)))
 (let ((?x229 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x188 (bvneg ?x229)))
 (let (($x212 (= ?x188 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x75 (= $x212 true)))
 (let ((?x149 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x240 (bvneg ?x149)))
 (let (($x294 (= ?x240 input.dst.llvm-%n)))
 (let (($x187 (= $x294 true)))
 (let (($x30 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x186 (= $x30 true)))
 (let (($x61 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x138 (= $x61 true)))
 (let (($x197 (forall ((input.ind-%var1583X (_ BitVec 32)) )(let ((?x83 (bvadd (bvmul input.ind-%var1583X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x142 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x83))))
 (let ((?x112 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x83 (_ bv2 32))) ?x142)))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x83 (_ bv3 32))) ?x112)))
 (let ((?x208 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1583X)))
 (let (($x216 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1583X)))
 (=> $x216 (= ?x208 ?x209)))))))))
 ))
 (let (($x169 (forall ((input.ind-%var1582X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1582X) (bvult input.ind-%var1582X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x216 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1582X)))
 (= $x216 $x68))))
 ))
 (let (($x41 (and $x169 $x197)))
 (let (($x141 (= $x41 true)))
 (let (($x299 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x62 (= $x299 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x39 (bvsub ?x94 ?x63)))
 (let (($x88 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x39) (bvult ?x94 ?x39))))
 (let (($x166 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x137 (ite $x166 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x109 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x241 (bvmul (_ bv4 64) ?x109)))
 (let ((?x110 ((_ extract 63 32) ?x241)))
 (let (($x65 (= ?x110 ?x137)))
 (let (($x18 (and $x65 $x88)))
 (let (($x243 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x145 (and $x243 $x18)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x105 (=> $x16 $x145)))
 (let (($x253 (= $x105 true)))
 (let (($x221 (= $x16 true)))
 (let (($x235 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x238 (= $x235 true)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x103)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x98 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x224 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x98)))
 (let ((?x249 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x249)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x77 $x46)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (and $x101 $x154)))
 (let (($x199 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (and $x40 $x126)))
 (let (($x298 (not $x115)))
 (let (($x301 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x295 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x297 (and $x295 $x301)))
 (let (($x32 (and (not $x297) $x298)))
 (let (($x293 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x296 (and $x287 $x293)))
 (let (($x195 (not $x296)))
 (let (($x264 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x262 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x262 $x264)))
 (let (($x291 (and (not $x43) $x195)))
 (let (($x36 (and (and (and (and (and (and $x291 $x32) $x119) $x199) $x237) $x224) $x251)))
 (let (($x26 (and $x36 $x85)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x255 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x255)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x265 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x255)))
 (let (($x292 (or false (or false (and (and true (or $x265 $x271)) (or $x272 $x207))))))
 (let (($x288 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x292)))
 (let (($x143 (and $x288 $x26)))
 (let (($x232 (= $x143 true)))
 (let ((?x7 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x87 (= (_ bv0 2) ?x7)))
 (let (($x205 (= $x87 true)))
 (let (($x144 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x254 (= $x144 true)))
 (let (($x5 (= ?x240 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x162 (= $x5 true)))
 (let (($x44 (and $x162 $x254)))
 (let (($x99 (and $x44 $x205)))
 (let (($x111 (and $x99 $x232)))
 (let (($x78 (and $x111 $x238)))
 (let (($x131 (and $x78 $x221)))
 (let (($x198 (and $x131 $x253)))
 (let (($x91 (and $x198 $x62)))
 (let (($x116 (and $x91 $x141)))
 (let (($x161 (and $x116 $x138)))
 (let (($x9 (and $x161 $x186)))
 (let (($x202 (and $x9 $x187)))
 (let (($x266 (and $x202 $x75)))
 (let (($x193 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x263 (and (not $x193) $x266)))
 (let (($x176 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x76 (and $x176 $x263)))
 (let (($x173 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x189 (and $x173 $x76)))
 (let (($x177 (forall ((input.ind-%var1593X (_ BitVec 32)) )(let (($x239 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1593X)))
 (=> $x239 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1593X) (_ bv0 32)))))
 ))
 (let (($x97 (forall ((input.ind-%var1592X (_ BitVec 32)) )(let (($x239 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1592X)))
 (= $x239 false)))
 ))
 (let (($x114 (and $x97 $x177)))
 (let (($x56 (and $x114 $x189)))
 (let (($x73 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x300 (and $x73 $x56)))
 (let (($x45 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd ?x94 (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x71 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x81 (or false (or false (and (and true (or $x28 $x71)) (or $x52 $x45))))))
 (let (($x210 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x81)))
 (let (($x27 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x81)))
 (let (($x252 (and $x27 $x300)))
 (let (($x10 (=> $x252 $x211)))
 (not $x10))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x47 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x84 (bvule ?x47 input.dst.llvm-%n)))
 (let (($x211 (= $x84 true)))
 (let ((?x229 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x188 (bvneg ?x229)))
 (let (($x212 (= ?x188 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x75 (= $x212 true)))
 (let ((?x149 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x240 (bvneg ?x149)))
 (let (($x294 (= ?x240 input.dst.llvm-%n)))
 (let (($x187 (= $x294 true)))
 (let (($x30 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x186 (= $x30 true)))
 (let (($x61 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x138 (= $x61 true)))
 (let (($x197 (forall ((input.ind-%var1583X (_ BitVec 32)) )(let ((?x83 (bvadd (bvmul input.ind-%var1583X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x142 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x83 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x83))))
 (let ((?x112 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x83 (_ bv2 32))) ?x142)))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x83 (_ bv3 32))) ?x112)))
 (let ((?x208 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1583X)))
 (let (($x216 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1583X)))
 (=> $x216 (= ?x208 ?x209)))))))))
 ))
 (let (($x169 (forall ((input.ind-%var1582X (_ BitVec 32)) )(let (($x68 (and (bvule (_ bv0 32) input.ind-%var1582X) (bvult input.ind-%var1582X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x216 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1582X)))
 (= $x216 $x68))))
 ))
 (let (($x41 (and $x169 $x197)))
 (let (($x141 (= $x41 true)))
 (let (($x299 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x62 (= $x299 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x39 (bvsub ?x94 ?x63)))
 (let (($x88 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x39) (bvult ?x94 ?x39))))
 (let (($x166 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x137 (ite $x166 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x109 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x241 (bvmul (_ bv4 64) ?x109)))
 (let ((?x110 ((_ extract 63 32) ?x241)))
 (let (($x65 (= ?x110 ?x137)))
 (let (($x18 (and $x65 $x88)))
 (let (($x243 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x145 (and $x243 $x18)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x105 (=> $x16 $x145)))
 (let (($x253 (= $x105 true)))
 (let (($x221 (= $x16 true)))
 (let (($x235 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x238 (= $x235 true)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x85 (= (_ bv0 32) ?x103)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x98 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x224 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x98)))
 (let ((?x249 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x46 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x249)))
 (let (($x77 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x77 $x46)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (and $x101 $x154)))
 (let (($x199 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (and $x40 $x126)))
 (let (($x298 (not $x115)))
 (let (($x301 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x295 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x297 (and $x295 $x301)))
 (let (($x32 (and (not $x297) $x298)))
 (let (($x293 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x287 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x296 (and $x287 $x293)))
 (let (($x195 (not $x296)))
 (let (($x264 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x262 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x43 (and $x262 $x264)))
 (let (($x291 (and (not $x43) $x195)))
 (let (($x36 (and (and (and (and (and (and $x291 $x32) $x119) $x199) $x237) $x224) $x251)))
 (let (($x26 (and $x36 $x85)))
 (let (($x207 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x255 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x272 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x255)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x265 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x255)))
 (let (($x292 (or false (or false (and (and true (or $x265 $x271)) (or $x272 $x207))))))
 (let (($x288 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x292)))
 (let (($x143 (and $x288 $x26)))
 (let (($x232 (= $x143 true)))
 (let ((?x7 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x87 (= (_ bv0 2) ?x7)))
 (let (($x205 (= $x87 true)))
 (let (($x144 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x254 (= $x144 true)))
 (let (($x5 (= ?x240 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x162 (= $x5 true)))
 (let (($x44 (and $x162 $x254)))
 (let (($x99 (and $x44 $x205)))
 (let (($x111 (and $x99 $x232)))
 (let (($x78 (and $x111 $x238)))
 (let (($x131 (and $x78 $x221)))
 (let (($x198 (and $x131 $x253)))
 (let (($x91 (and $x198 $x62)))
 (let (($x116 (and $x91 $x141)))
 (let (($x161 (and $x116 $x138)))
 (let (($x9 (and $x161 $x186)))
 (let (($x202 (and $x9 $x187)))
 (let (($x266 (and $x202 $x75)))
 (let (($x193 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x263 (and (not $x193) $x266)))
 (let (($x176 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x76 (and $x176 $x263)))
 (let (($x173 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x189 (and $x173 $x76)))
 (let (($x177 (forall ((input.ind-%var1593X (_ BitVec 32)) )(let (($x239 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1593X)))
 (=> $x239 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1593X) (_ bv0 32)))))
 ))
 (let (($x97 (forall ((input.ind-%var1592X (_ BitVec 32)) )(let (($x239 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1592X)))
 (= $x239 false)))
 ))
 (let (($x114 (and $x97 $x177)))
 (let (($x56 (and $x114 $x189)))
 (let (($x73 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x300 (and $x73 $x56)))
 (let (($x45 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd ?x94 (_ bv3 32))))
 (let (($x52 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x71 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x81 (or false (or false (and (and true (or $x28 $x71)) (or $x52 $x45))))))
 (let (($x210 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x81)))
 (let (($x27 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x81)))
 (let (($x252 (and $x27 $x300)))
 (let (($x10 (=> $x252 $x211)))
 (not $x10))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 58
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x285 (forall ((input.ind-%var1627X (_ BitVec 32)) )(let ((?x263 (bvadd (bvmul input.ind-%var1627X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x71 (bvadd ?x94 (_ bv3 32))))
 (let ((?x121 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x94 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x228 (store ?x121 (bvadd ?x94 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x82 (store ?x228 (bvadd ?x94 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x74 (store ?x82 ?x71 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x108 (concat (select ?x74 (bvadd ?x263 (_ bv2 32))) (concat (select ?x74 (bvadd ?x263 (_ bv1 32))) (select ?x74 ?x263)))))
 (let ((?x157 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1627X)))
 (let (($x93 (= input.ind-%var1627X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x260 (= (ite $x93 input.spec-%var-i-0.L3%6%bbentry ?x157) (concat (select ?x74 (bvadd ?x263 (_ bv3 32))) ?x108))))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1627X)))
 (let (($x244 (or $x54 $x93)))
 (=> $x244 $x260))))))))))))))))
 ))
 (let (($x230 (forall ((input.ind-%var1626X (_ BitVec 32)) )(let (($x95 (bvule (_ bv0 32) input.ind-%var1626X)))
 (let (($x72 (and $x95 (bvult input.ind-%var1626X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x93 (= input.ind-%var1626X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1626X)))
 (let (($x244 (or $x54 $x93)))
 (= $x244 $x72)))))))
 ))
 (let (($x257 (and $x230 $x285)))
 (let (($x259 (= $x257 true)))
 (let ((?x12 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x129 (bvneg ?x12)))
 (let (($x132 (= ?x129 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x159 (= $x132 true)))
 (let ((?x165 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x130 (= (_ bv0 2) ?x165)))
 (let (($x168 (= $x130 true)))
 (let (($x128 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x21 (= $x128 true)))
 (let (($x8 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x196 (= $x8 true)))
 (let (($x183 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x66 (= $x183 true)))
 (let (($x146 (forall ((input.ind-%var1603X (_ BitVec 32)) )(let ((?x263 (bvadd (bvmul input.ind-%var1603X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x300 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x263))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x263 (_ bv2 32))) ?x300)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x263 (_ bv3 32))) ?x84)))
 (let ((?x157 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1603X)))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1603X)))
 (=> $x54 (= ?x157 ?x96)))))))))
 ))
 (let (($x142 (forall ((input.ind-%var1602X (_ BitVec 32)) )(let (($x95 (bvule (_ bv0 32) input.ind-%var1602X)))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1602X)))
 (= $x54 (and $x95 (bvult input.ind-%var1602X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x34 (and $x142 $x146)))
 (let (($x218 (= $x34 true)))
 (let (($x68 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x50 (= $x68 true)))
 (let (($x216 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x214 (= $x216 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x247 (bvsub ?x94 ?x63)))
 (let (($x145 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x247) (bvult ?x94 ?x247))))
 (let (($x65 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x155 (ite $x65 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x110 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x166 (bvmul (_ bv4 64) ?x110)))
 (let ((?x137 ((_ extract 63 32) ?x166)))
 (let (($x39 (= ?x137 ?x155)))
 (let (($x105 (and $x39 $x145)))
 (let (($x109 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x253 (and $x109 $x105)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x198 (=> $x70 $x253)))
 (let (($x299 (= $x198 true)))
 (let (($x172 (= $x70 true)))
 (let ((?x36 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x103 (= (_ bv0 32) ?x36)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x224 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x224)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x237 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x154)))
 (let (($x46 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x234 (and $x46 $x237)))
 (let (($x249 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x249 $x234)))
 (let (($x77 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x204 (and $x32 $x136)))
 (let (($x119 (not $x204)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x126 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x298 (and $x126 $x115)))
 (let (($x233 (and (not $x298) $x119)))
 (let (($x295 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x291 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x301 (and $x291 $x295)))
 (let (($x297 (not $x301)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x195 (and $x271 $x175)))
 (let (($x40 (and (not $x195) $x297)))
 (let (($x235 (and (and (and (and (and (and $x40 $x233) $x147) $x77) $x98) $x53) $x251)))
 (let (($x238 (and $x235 $x103)))
 (let (($x262 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x207 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x207)))
 (let (($x268 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x207)))
 (let (($x287 (or false (or false (and (and true (or $x269 $x268)) (or $x288 $x262))))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x287)))
 (let (($x78 (and $x296 $x238)))
 (let (($x221 (= $x78 true)))
 (let ((?x87 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x205 (bvneg ?x87)))
 (let (($x92 (= ?x205 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x290 (= $x92 true)))
 (let (($x99 (= ?x205 input.dst.llvm-%n)))
 (let (($x49 (= $x99 true)))
 (let (($x255 (and $x49 $x290)))
 (let (($x131 (and $x255 $x221)))
 (let (($x107 (and $x131 $x172)))
 (let (($x62 (and $x107 $x299)))
 (let (($x170 (and $x62 $x214)))
 (let (($x169 (and $x170 $x50)))
 (let (($x222 (and $x169 $x218)))
 (let (($x236 (and $x222 $x66)))
 (let (($x217 (and $x236 $x196)))
 (let (($x164 (and $x217 $x21)))
 (let (($x134 (and $x164 $x168)))
 (let (($x185 (and $x134 $x159)))
 (let (($x267 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x246 (and (not $x267) $x185)))
 (let (($x254 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x67 (and $x254 $x246)))
 (let (($x162 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x59 (and $x162 $x67)))
 (let (($x149 (forall ((input.ind-%var1613X (_ BitVec 32)) )(let (($x192 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1613X)))
 (=> $x192 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1613X) (_ bv0 32)))))
 ))
 (let (($x177 (forall ((input.ind-%var1612X (_ BitVec 32)) )(let (($x192 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1612X)))
 (= $x192 false)))
 ))
 (let (($x240 (and $x177 $x149)))
 (let (($x194 (and $x240 $x59)))
 (let (($x206 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x113 (and $x206 $x194)))
 (let (($x79 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x71 (bvadd ?x94 (_ bv3 32))))
 (let (($x242 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x71)))
 (let (($x219 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x71)))
 (let (($x27 (or false (or false (and (and true (or $x127 $x219)) (or $x242 $x79))))))
 (let (($x73 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x27)))
 (let (($x102 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x27)))
 (let (($x184 (and $x102 $x113)))
 (let (($x286 (=> $x184 $x259)))
 (not $x286)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x285 (forall ((input.ind-%var1627X (_ BitVec 32)) )(let ((?x263 (bvadd (bvmul input.ind-%var1627X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x71 (bvadd ?x94 (_ bv3 32))))
 (let ((?x121 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x94 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x228 (store ?x121 (bvadd ?x94 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x82 (store ?x228 (bvadd ?x94 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x74 (store ?x82 ?x71 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x108 (concat (select ?x74 (bvadd ?x263 (_ bv2 32))) (concat (select ?x74 (bvadd ?x263 (_ bv1 32))) (select ?x74 ?x263)))))
 (let ((?x157 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1627X)))
 (let (($x93 (= input.ind-%var1627X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x260 (= (ite $x93 input.spec-%var-i-0.L3%6%bbentry ?x157) (concat (select ?x74 (bvadd ?x263 (_ bv3 32))) ?x108))))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1627X)))
 (let (($x244 (or $x54 $x93)))
 (=> $x244 $x260))))))))))))))))
 ))
 (let (($x230 (forall ((input.ind-%var1626X (_ BitVec 32)) )(let (($x95 (bvule (_ bv0 32) input.ind-%var1626X)))
 (let (($x72 (and $x95 (bvult input.ind-%var1626X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x93 (= input.ind-%var1626X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1626X)))
 (let (($x244 (or $x54 $x93)))
 (= $x244 $x72)))))))
 ))
 (let (($x257 (and $x230 $x285)))
 (let (($x259 (= $x257 true)))
 (let ((?x12 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x129 (bvneg ?x12)))
 (let (($x132 (= ?x129 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x159 (= $x132 true)))
 (let ((?x165 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x130 (= (_ bv0 2) ?x165)))
 (let (($x168 (= $x130 true)))
 (let (($x128 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x21 (= $x128 true)))
 (let (($x8 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x196 (= $x8 true)))
 (let (($x183 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x66 (= $x183 true)))
 (let (($x146 (forall ((input.ind-%var1603X (_ BitVec 32)) )(let ((?x263 (bvadd (bvmul input.ind-%var1603X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x300 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x263))))
 (let ((?x84 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x263 (_ bv2 32))) ?x300)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x263 (_ bv3 32))) ?x84)))
 (let ((?x157 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1603X)))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1603X)))
 (=> $x54 (= ?x157 ?x96)))))))))
 ))
 (let (($x142 (forall ((input.ind-%var1602X (_ BitVec 32)) )(let (($x95 (bvule (_ bv0 32) input.ind-%var1602X)))
 (let (($x54 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1602X)))
 (= $x54 (and $x95 (bvult input.ind-%var1602X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x34 (and $x142 $x146)))
 (let (($x218 (= $x34 true)))
 (let (($x68 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x50 (= $x68 true)))
 (let (($x216 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x214 (= $x216 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x247 (bvsub ?x94 ?x63)))
 (let (($x145 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x247) (bvult ?x94 ?x247))))
 (let (($x65 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x155 (ite $x65 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x110 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x166 (bvmul (_ bv4 64) ?x110)))
 (let ((?x137 ((_ extract 63 32) ?x166)))
 (let (($x39 (= ?x137 ?x155)))
 (let (($x105 (and $x39 $x145)))
 (let (($x109 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x253 (and $x109 $x105)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x198 (=> $x70 $x253)))
 (let (($x299 (= $x198 true)))
 (let (($x172 (= $x70 true)))
 (let ((?x36 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x103 (= (_ bv0 32) ?x36)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x224 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x224)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x237 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x154)))
 (let (($x46 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x234 (and $x46 $x237)))
 (let (($x249 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (and $x249 $x234)))
 (let (($x77 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x204 (and $x32 $x136)))
 (let (($x119 (not $x204)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x126 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x298 (and $x126 $x115)))
 (let (($x233 (and (not $x298) $x119)))
 (let (($x295 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x291 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x301 (and $x291 $x295)))
 (let (($x297 (not $x301)))
 (let (($x175 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x271 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x195 (and $x271 $x175)))
 (let (($x40 (and (not $x195) $x297)))
 (let (($x235 (and (and (and (and (and (and $x40 $x233) $x147) $x77) $x98) $x53) $x251)))
 (let (($x238 (and $x235 $x103)))
 (let (($x262 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x207 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x207)))
 (let (($x268 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x269 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x207)))
 (let (($x287 (or false (or false (and (and true (or $x269 $x268)) (or $x288 $x262))))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x287)))
 (let (($x78 (and $x296 $x238)))
 (let (($x221 (= $x78 true)))
 (let ((?x87 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x205 (bvneg ?x87)))
 (let (($x92 (= ?x205 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x290 (= $x92 true)))
 (let (($x99 (= ?x205 input.dst.llvm-%n)))
 (let (($x49 (= $x99 true)))
 (let (($x255 (and $x49 $x290)))
 (let (($x131 (and $x255 $x221)))
 (let (($x107 (and $x131 $x172)))
 (let (($x62 (and $x107 $x299)))
 (let (($x170 (and $x62 $x214)))
 (let (($x169 (and $x170 $x50)))
 (let (($x222 (and $x169 $x218)))
 (let (($x236 (and $x222 $x66)))
 (let (($x217 (and $x236 $x196)))
 (let (($x164 (and $x217 $x21)))
 (let (($x134 (and $x164 $x168)))
 (let (($x185 (and $x134 $x159)))
 (let (($x267 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x246 (and (not $x267) $x185)))
 (let (($x254 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x67 (and $x254 $x246)))
 (let (($x162 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x59 (and $x162 $x67)))
 (let (($x149 (forall ((input.ind-%var1613X (_ BitVec 32)) )(let (($x192 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1613X)))
 (=> $x192 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1613X) (_ bv0 32)))))
 ))
 (let (($x177 (forall ((input.ind-%var1612X (_ BitVec 32)) )(let (($x192 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1612X)))
 (= $x192 false)))
 ))
 (let (($x240 (and $x177 $x149)))
 (let (($x194 (and $x240 $x59)))
 (let (($x206 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x113 (and $x206 $x194)))
 (let (($x79 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x71 (bvadd ?x94 (_ bv3 32))))
 (let (($x242 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x71)))
 (let (($x219 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x71)))
 (let (($x27 (or false (or false (and (and true (or $x127 $x219)) (or $x242 $x79))))))
 (let (($x73 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x27)))
 (let (($x102 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x27)))
 (let (($x184 (and $x102 $x113)))
 (let (($x286 (=> $x184 $x259)))
 (not $x286)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 59
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x163 (not $x118)))
 (let (($x182 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x228 (not $x182)))
 (let (($x25 (or $x228 $x163)))
 (let (($x82 (= $x25 true)))
 (let ((?x167 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x123 (bvneg ?x167)))
 (let (($x72 (= ?x123 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x23 (= $x72 true)))
 (let ((?x246 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x67 (bvneg ?x246)))
 (let (($x184 (= ?x67 input.dst.llvm-%n)))
 (let (($x93 (= $x184 true)))
 (let (($x59 (= ?x67 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x194 (= $x59 true)))
 (let (($x129 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x132 (= $x129 true)))
 (let (($x168 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x134 (= $x168 true)))
 (let (($x133 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x165 (= $x133 true)))
 (let (($x217 (forall ((input.ind-%var1637X (_ BitVec 32)) )(let ((?x84 (bvadd (bvmul input.ind-%var1637X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x146 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x84))))
 (let ((?x222 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x84 (_ bv2 32))) ?x146)))
 (let ((?x236 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x84 (_ bv3 32))) ?x222)))
 (let ((?x54 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1637X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1637X)))
 (=> $x18 (= ?x54 ?x236)))))))))
 ))
 (let (($x170 (forall ((input.ind-%var1636X (_ BitVec 32)) )(let (($x216 (and (bvule (_ bv0 32) input.ind-%var1636X) (bvult input.ind-%var1636X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1636X)))
 (= $x18 $x216))))
 ))
 (let (($x128 (and $x170 $x217)))
 (let (($x21 (= $x128 true)))
 (let (($x155 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x39 (= $x155 true)))
 (let (($x110 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x166 (= $x110 true)))
 (let ((?x235 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x235)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x53 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x53)))
 (let ((?x234 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x234)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x232 (and $x237 $x98)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x224 (and $x154 $x232)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x233 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (and $x233 $x85)))
 (let (($x147 (not $x199)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x119 (and $x136 $x204)))
 (let (($x101 (and (not $x119) $x147)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x115 (and $x40 $x126)))
 (let (($x298 (not $x115)))
 (let (($x270 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x297 (and $x268 $x270)))
 (let (($x32 (and (not $x297) $x298)))
 (let (($x172 (and (and (and (and (and (and $x32 $x101) $x143) $x46) $x224) $x111) $x251)))
 (let (($x107 (and $x172 $x36)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x262 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x296 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x262)))
 (let (($x43 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x262)))
 (let (($x291 (or false (or false (and (and true (or $x264 $x43)) (or $x296 $x271))))))
 (let (($x301 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x291)))
 (let (($x243 (and $x301 $x107)))
 (let (($x201 (= $x243 true)))
 (let ((?x272 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x293 (= (_ bv0 2) ?x272)))
 (let (($x207 (= $x293 true)))
 (let (($x109 (and $x207 $x201)))
 (let (($x137 (and $x109 $x166)))
 (let (($x180 (and $x137 $x39)))
 (let (($x164 (and $x180 $x21)))
 (let (($x130 (and $x164 $x165)))
 (let (($x12 (and $x130 $x134)))
 (let (($x159 (and $x12 $x132)))
 (let (($x113 (and $x159 $x194)))
 (let (($x244 (and $x113 $x93)))
 (let (($x230 (and $x244 $x23)))
 (let (($x255 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x104 (and $x255 $x230)))
 (let (($x49 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x106 (and $x49 $x104)))
 (let (($x87 (forall ((input.ind-%var1647X (_ BitVec 32)) )(let (($x226 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1647X)))
 (=> $x226 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1647X) (_ bv0 32)))))
 ))
 (let (($x149 (forall ((input.ind-%var1646X (_ BitVec 32)) )(let (($x226 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1646X)))
 (= $x226 false)))
 ))
 (let (($x205 (and $x149 $x87)))
 (let (($x191 (and $x205 $x106)))
 (let (($x97 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x121 (and $x97 $x191)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let (($x81 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x219 (bvadd ?x94 (_ bv3 32))))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x219)))
 (let (($x52 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x219)))
 (let (($x102 (or false (or false (and (and true (or $x171 $x52)) (or $x57 $x81))))))
 (let (($x206 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x102)))
 (let (($x64 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x102)))
 (let (($x135 (and $x64 $x121)))
 (let (($x38 (=> $x135 $x82)))
 (not $x38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x163 (not $x118)))
 (let (($x182 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x228 (not $x182)))
 (let (($x25 (or $x228 $x163)))
 (let (($x82 (= $x25 true)))
 (let ((?x167 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x123 (bvneg ?x167)))
 (let (($x72 (= ?x123 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x23 (= $x72 true)))
 (let ((?x246 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x67 (bvneg ?x246)))
 (let (($x184 (= ?x67 input.dst.llvm-%n)))
 (let (($x93 (= $x184 true)))
 (let (($x59 (= ?x67 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x194 (= $x59 true)))
 (let (($x129 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x132 (= $x129 true)))
 (let (($x168 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x134 (= $x168 true)))
 (let (($x133 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x165 (= $x133 true)))
 (let (($x217 (forall ((input.ind-%var1637X (_ BitVec 32)) )(let ((?x84 (bvadd (bvmul input.ind-%var1637X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x146 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x84 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x84))))
 (let ((?x222 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x84 (_ bv2 32))) ?x146)))
 (let ((?x236 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x84 (_ bv3 32))) ?x222)))
 (let ((?x54 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1637X)))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1637X)))
 (=> $x18 (= ?x54 ?x236)))))))))
 ))
 (let (($x170 (forall ((input.ind-%var1636X (_ BitVec 32)) )(let (($x216 (and (bvule (_ bv0 32) input.ind-%var1636X) (bvult input.ind-%var1636X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x18 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1636X)))
 (= $x18 $x216))))
 ))
 (let (($x128 (and $x170 $x217)))
 (let (($x21 (= $x128 true)))
 (let (($x155 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x39 (= $x155 true)))
 (let (($x110 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x166 (= $x110 true)))
 (let ((?x235 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x235)))
 (let ((?x231 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x251 (= (_ bv0 32) ?x231)))
 (let ((?x53 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x111 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x53)))
 (let ((?x234 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x98 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x234)))
 (let (($x237 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x232 (and $x237 $x98)))
 (let (($x154 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x224 (and $x154 $x232)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x233 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x199 (and $x233 $x85)))
 (let (($x147 (not $x199)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x136 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x119 (and $x136 $x204)))
 (let (($x101 (and (not $x119) $x147)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x115 (and $x40 $x126)))
 (let (($x298 (not $x115)))
 (let (($x270 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x297 (and $x268 $x270)))
 (let (($x32 (and (not $x297) $x298)))
 (let (($x172 (and (and (and (and (and (and $x32 $x101) $x143) $x46) $x224) $x111) $x251)))
 (let (($x107 (and $x172 $x36)))
 (let (($x271 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x262 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x296 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x262)))
 (let (($x43 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x264 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x262)))
 (let (($x291 (or false (or false (and (and true (or $x264 $x43)) (or $x296 $x271))))))
 (let (($x301 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x291)))
 (let (($x243 (and $x301 $x107)))
 (let (($x201 (= $x243 true)))
 (let ((?x272 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x293 (= (_ bv0 2) ?x272)))
 (let (($x207 (= $x293 true)))
 (let (($x109 (and $x207 $x201)))
 (let (($x137 (and $x109 $x166)))
 (let (($x180 (and $x137 $x39)))
 (let (($x164 (and $x180 $x21)))
 (let (($x130 (and $x164 $x165)))
 (let (($x12 (and $x130 $x134)))
 (let (($x159 (and $x12 $x132)))
 (let (($x113 (and $x159 $x194)))
 (let (($x244 (and $x113 $x93)))
 (let (($x230 (and $x244 $x23)))
 (let (($x255 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x104 (and $x255 $x230)))
 (let (($x49 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x106 (and $x49 $x104)))
 (let (($x87 (forall ((input.ind-%var1647X (_ BitVec 32)) )(let (($x226 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1647X)))
 (=> $x226 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1647X) (_ bv0 32)))))
 ))
 (let (($x149 (forall ((input.ind-%var1646X (_ BitVec 32)) )(let (($x226 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1646X)))
 (= $x226 false)))
 ))
 (let (($x205 (and $x149 $x87)))
 (let (($x191 (and $x205 $x106)))
 (let (($x97 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x121 (and $x97 $x191)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let (($x81 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x219 (bvadd ?x94 (_ bv3 32))))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x219)))
 (let (($x52 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x171 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x219)))
 (let (($x102 (or false (or false (and (and true (or $x171 $x52)) (or $x57 $x81))))))
 (let (($x206 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x102)))
 (let (($x64 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x102)))
 (let (($x135 (and $x64 $x121)))
 (let (($x38 (=> $x135 $x82)))
 (not $x38))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 60
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x173 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x148 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x17 (bvmul (_ bv4294967295 32) ?x148)))
 (let ((?x114 (bvneg ?x17)))
 (let (($x239 (= ?x114 ?x173)))
 (let (($x190 (= $x239 true)))
 (let ((?x178 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x260 (bvneg ?x178)))
 (let (($x261 (= ?x260 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x285 (= $x261 true)))
 (let (($x275 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x281 (= $x275 true)))
 (let (($x220 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x284 (= $x220 true)))
 (let (($x5 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x267 (= $x5 true)))
 (let (($x299 (forall ((input.ind-%var1657X (_ BitVec 32)) )(let ((?x227 (bvadd (bvmul input.ind-%var1657X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x10 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x227 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x227))))
 (let ((?x142 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x227 (_ bv2 32))) ?x10)))
 (let ((?x189 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x227 (_ bv3 32))) ?x142)))
 (let ((?x38 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1657X)))
 (let (($x123 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1657X)))
 (=> $x123 (= ?x38 ?x189)))))))))
 ))
 (let (($x228 (forall ((input.ind-%var1656X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1656X) (bvult input.ind-%var1656X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x123 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1656X)))
 (= $x123 $x135))))
 ))
 (let (($x56 (and $x228 $x299)))
 (let (($x50 (= $x56 true)))
 (let (($x113 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x184 (= $x113 true)))
 (let (($x67 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x59 (= $x67 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x133 (bvsub ?x94 ?x63)))
 (let (($x134 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x133) (bvult ?x94 ?x133))))
 (let (($x128 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x21 (ite $x128 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x8 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x196 (bvmul (_ bv4 64) ?x8)))
 (let ((?x217 ((_ extract 63 32) ?x196)))
 (let (($x164 (= ?x217 ?x21)))
 (let (($x12 (and $x164 $x134)))
 (let (($x222 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x129 (and $x222 $x12)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x132 (=> $x124 $x129)))
 (let (($x159 (= $x132 true)))
 (let (($x174 (= $x124 true)))
 (let ((?x216 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x214 (= (_ bv0 32) ?x216)))
 (let ((?x91 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x91)))
 (let ((?x180 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x180)))
 (let ((?x137 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x137)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x155 (and $x166 $x65)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x110 $x155)))
 (let (($x241 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x201 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x251 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x172 (and $x231 $x251)))
 (let (($x235 (not $x172)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x131 (and $x53 $x111)))
 (let (($x107 (and (not $x131) $x235)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x237 $x234)))
 (let (($x232 (not $x98)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x32 $x136)))
 (let (($x221 (and (not $x154) $x232)))
 (let (($x183 (and (and (and (and (and (and $x221 $x107) $x201) $x241) $x39) $x18) $x62)))
 (let (($x66 (and $x183 $x214)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x26 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x233 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x26)))
 (let (($x249 (or false (or false (and (and true (or $x233 $x85)) (or $x101 $x103))))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x249)))
 (let (($x263 (and $x78 $x66)))
 (let (($x34 (= $x263 true)))
 (let ((?x24 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x40 (= (_ bv0 2) ?x24)))
 (let (($x126 (= $x40 true)))
 (let ((?x175 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x195 (bvneg ?x175)))
 (let (($x301 (= ?x195 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x268 (= $x301 true)))
 (let (($x152 (= ?x195 input.dst.llvm-%n)))
 (let (($x291 (= $x152 true)))
 (let (($x270 (and $x291 $x268)))
 (let (($x115 (and $x270 $x126)))
 (let (($x218 (and $x115 $x34)))
 (let (($x150 (and $x218 $x174)))
 (let (($x185 (and $x150 $x159)))
 (let (($x194 (and $x185 $x59)))
 (let (($x93 (and $x194 $x184)))
 (let (($x76 (and $x93 $x50)))
 (let (($x245 (and $x76 $x267)))
 (let (($x278 (and $x245 $x284)))
 (let (($x108 (and $x278 $x281)))
 (let (($x257 (and $x108 $x285)))
 (let (($x296 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x286 (and (not $x296) $x257)))
 (let (($x289 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x14 (and $x289 $x286)))
 (let (($x262 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x90 (and $x262 $x14)))
 (let (($x292 (forall ((input.ind-%var1667X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1667X)))
 (=> $x100 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1667X) (_ bv0 32)))))
 ))
 (let (($x87 (forall ((input.ind-%var1666X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1666X)))
 (= $x100 false)))
 ))
 (let (($x288 (and $x87 $x292)))
 (let (($x265 (and $x288 $x90)))
 (let (($x177 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x83 (and $x177 $x265)))
 (let (($x27 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x52 (bvadd ?x94 (_ bv3 32))))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x242 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x52)))
 (let (($x64 (or false (or false (and (and true (or $x120 $x242)) (or $x210 $x27))))))
 (let (($x97 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x64)))
 (let (($x33 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x64)))
 (let (($x197 (and $x33 $x83)))
 (let (($x223 (=> $x197 $x190)))
 (not $x223)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x173 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x148 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x17 (bvmul (_ bv4294967295 32) ?x148)))
 (let ((?x114 (bvneg ?x17)))
 (let (($x239 (= ?x114 ?x173)))
 (let (($x190 (= $x239 true)))
 (let ((?x178 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x260 (bvneg ?x178)))
 (let (($x261 (= ?x260 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x285 (= $x261 true)))
 (let (($x275 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x281 (= $x275 true)))
 (let (($x220 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x284 (= $x220 true)))
 (let (($x5 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x267 (= $x5 true)))
 (let (($x299 (forall ((input.ind-%var1657X (_ BitVec 32)) )(let ((?x227 (bvadd (bvmul input.ind-%var1657X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x10 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x227 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x227))))
 (let ((?x142 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x227 (_ bv2 32))) ?x10)))
 (let ((?x189 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x227 (_ bv3 32))) ?x142)))
 (let ((?x38 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1657X)))
 (let (($x123 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1657X)))
 (=> $x123 (= ?x38 ?x189)))))))))
 ))
 (let (($x228 (forall ((input.ind-%var1656X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var1656X) (bvult input.ind-%var1656X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x123 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1656X)))
 (= $x123 $x135))))
 ))
 (let (($x56 (and $x228 $x299)))
 (let (($x50 (= $x56 true)))
 (let (($x113 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x184 (= $x113 true)))
 (let (($x67 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x59 (= $x67 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x133 (bvsub ?x94 ?x63)))
 (let (($x134 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x133) (bvult ?x94 ?x133))))
 (let (($x128 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x21 (ite $x128 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x8 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x196 (bvmul (_ bv4 64) ?x8)))
 (let ((?x217 ((_ extract 63 32) ?x196)))
 (let (($x164 (= ?x217 ?x21)))
 (let (($x12 (and $x164 $x134)))
 (let (($x222 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x129 (and $x222 $x12)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x132 (=> $x124 $x129)))
 (let (($x159 (= $x132 true)))
 (let (($x174 (= $x124 true)))
 (let ((?x216 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x214 (= (_ bv0 32) ?x216)))
 (let ((?x91 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x62 (= (_ bv0 32) ?x91)))
 (let ((?x180 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x180)))
 (let ((?x137 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x65 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x137)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x155 (and $x166 $x65)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (and $x110 $x155)))
 (let (($x241 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x201 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x251 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x172 (and $x231 $x251)))
 (let (($x235 (not $x172)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x131 (and $x53 $x111)))
 (let (($x107 (and (not $x131) $x235)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x237 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x237 $x234)))
 (let (($x232 (not $x98)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x32 $x136)))
 (let (($x221 (and (not $x154) $x232)))
 (let (($x183 (and (and (and (and (and (and $x221 $x107) $x201) $x241) $x39) $x18) $x62)))
 (let (($x66 (and $x183 $x214)))
 (let (($x103 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x26 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x101 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x26)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x233 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x26)))
 (let (($x249 (or false (or false (and (and true (or $x233 $x85)) (or $x101 $x103))))))
 (let (($x78 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x249)))
 (let (($x263 (and $x78 $x66)))
 (let (($x34 (= $x263 true)))
 (let ((?x24 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x40 (= (_ bv0 2) ?x24)))
 (let (($x126 (= $x40 true)))
 (let ((?x175 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x195 (bvneg ?x175)))
 (let (($x301 (= ?x195 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x268 (= $x301 true)))
 (let (($x152 (= ?x195 input.dst.llvm-%n)))
 (let (($x291 (= $x152 true)))
 (let (($x270 (and $x291 $x268)))
 (let (($x115 (and $x270 $x126)))
 (let (($x218 (and $x115 $x34)))
 (let (($x150 (and $x218 $x174)))
 (let (($x185 (and $x150 $x159)))
 (let (($x194 (and $x185 $x59)))
 (let (($x93 (and $x194 $x184)))
 (let (($x76 (and $x93 $x50)))
 (let (($x245 (and $x76 $x267)))
 (let (($x278 (and $x245 $x284)))
 (let (($x108 (and $x278 $x281)))
 (let (($x257 (and $x108 $x285)))
 (let (($x296 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x286 (and (not $x296) $x257)))
 (let (($x289 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x14 (and $x289 $x286)))
 (let (($x262 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x90 (and $x262 $x14)))
 (let (($x292 (forall ((input.ind-%var1667X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1667X)))
 (=> $x100 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1667X) (_ bv0 32)))))
 ))
 (let (($x87 (forall ((input.ind-%var1666X (_ BitVec 32)) )(let (($x100 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1666X)))
 (= $x100 false)))
 ))
 (let (($x288 (and $x87 $x292)))
 (let (($x265 (and $x288 $x90)))
 (let (($x177 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x83 (and $x177 $x265)))
 (let (($x27 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x52 (bvadd ?x94 (_ bv3 32))))
 (let (($x210 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x52)))
 (let (($x242 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x52)))
 (let (($x64 (or false (or false (and (and true (or $x120 $x242)) (or $x210 $x27))))))
 (let (($x97 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x64)))
 (let (($x33 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x64)))
 (let (($x197 (and $x33 $x83)))
 (let (($x223 (=> $x197 $x190)))
 (not $x223)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 61
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x104 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x106 (bvule ?x104 (_ bv4294967294 32))))
 (let (($x105 (= $x106 true)))
 (let ((?x145 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x44 (bvneg ?x145)))
 (let (($x169 (= ?x44 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x192 (= $x169 true)))
 (let (($x23 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x230 (= $x23 true)))
 (let (($x139 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x139 true)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x15)))
 (let ((?x190 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x190)))
 (let ((?x173 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x173)))
 (let ((?x197 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x197)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x17 (and $x83 $x148)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (and $x265 $x17)))
 (let (($x90 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x281 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (and $x281 $x108)))
 (let (($x260 (not $x178)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x284 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x275 (and $x284 $x278)))
 (let (($x285 (and (not $x275) $x260)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x50 $x76)))
 (let (($x267 (not $x5)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x151 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x151 $x35)))
 (let (($x220 (and (not $x56) $x267)))
 (let (($x205 (and (and (and (and (and (and $x220 $x285) $x286) $x90) $x114) $x239) $x223)))
 (let (($x49 (and $x205 $x51)))
 (let (($x252 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x186 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x211 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x186)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x186)))
 (let (($x88 (or false (or false (and (and true (or $x162 $x157)) (or $x211 $x252))))))
 (let (($x299 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x88)))
 (let (($x226 (and $x299 $x49)))
 (let (($x117 (= $x226 true)))
 (let ((?x191 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x135 (= (_ bv0 2) ?x191)))
 (let (($x182 (= $x135 true)))
 (let (($x184 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x93 (= $x184 true)))
 (let (($x59 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x194 (= $x59 true)))
 (let (($x159 (forall ((input.ind-%var1677X (_ BitVec 32)) )(let ((?x196 (bvadd (bvmul input.ind-%var1677X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x164 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x196))))
 (let ((?x130 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x196 (_ bv2 32))) ?x164)))
 (let ((?x12 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x196 (_ bv3 32))) ?x130)))
 (let ((?x180 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1677X)))
 (let (($x170 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1677X)))
 (=> $x170 (= ?x180 ?x12)))))))))
 ))
 (let (($x65 (forall ((input.ind-%var1676X (_ BitVec 32)) )(let (($x166 (and (bvule (_ bv0 32) input.ind-%var1676X) (bvult input.ind-%var1676X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x170 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1676X)))
 (= $x170 $x166))))
 ))
 (let (($x185 (and $x65 $x159)))
 (let (($x246 (= $x185 true)))
 (let ((?x221 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x53 (bvneg ?x221)))
 (let (($x231 (= ?x53 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x251 (= $x231 true)))
 (let (($x111 (= ?x53 input.dst.llvm-%n)))
 (let (($x131 (= $x111 true)))
 (let (($x234 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x98 (= $x234 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x103 (bvsub ?x94 ?x63)))
 (let (($x249 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x103) (bvult ?x94 ?x103))))
 (let (($x85 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x147 (ite $x85 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x46 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x26 (bvmul (_ bv4 64) ?x46)))
 (let ((?x233 ((_ extract 63 32) ?x26)))
 (let (($x101 (= ?x233 ?x147)))
 (let (($x78 (and $x101 $x249)))
 (let (($x204 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x32 (and $x204 $x78)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x136 (=> $x16 $x32)))
 (let (($x154 (= $x136 true)))
 (let (($x40 (= $x16 true)))
 (let (($x224 (and $x40 $x154)))
 (let (($x232 (and $x224 $x98)))
 (let (($x36 (and $x232 $x131)))
 (let (($x172 (and $x36 $x251)))
 (let (($x67 (and $x172 $x246)))
 (let (($x113 (and $x67 $x194)))
 (let (($x123 (and $x113 $x93)))
 (let (($x228 (and $x123 $x182)))
 (let (($x69 (and $x228 $x117)))
 (let (($x244 (and $x69 $x82)))
 (let (($x269 (and $x244 $x230)))
 (let (($x179 (and $x269 $x192)))
 (let (($x24 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x144 (and (not $x24) $x179)))
 (let (($x270 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x95 (and $x270 $x144)))
 (let (($x291 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x240 (and $x291 $x95)))
 (let (($x175 (forall ((input.ind-%var1687X (_ BitVec 32)) )(let (($x92 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1687X)))
 (=> $x92 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1687X) (_ bv0 32)))))
 ))
 (let (($x292 (forall ((input.ind-%var1686X (_ BitVec 32)) )(let (($x92 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1686X)))
 (= $x92 false)))
 ))
 (let (($x195 (and $x292 $x175)))
 (let (($x213 (and $x195 $x240)))
 (let (($x149 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x247 (and $x149 $x213)))
 (let (($x102 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x242 (bvadd ?x94 (_ bv3 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x242)))
 (let (($x57 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x242)))
 (let (($x33 (or false (or false (and (and true (or $x45 $x57)) (or $x73 $x102))))))
 (let (($x177 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x33)))
 (let (($x71 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x33)))
 (let (($x167 (and $x71 $x247)))
 (let (($x25 (=> $x167 $x105)))
 (not $x25))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x104 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x106 (bvule ?x104 (_ bv4294967294 32))))
 (let (($x105 (= $x106 true)))
 (let ((?x145 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x44 (bvneg ?x145)))
 (let (($x169 (= ?x44 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x192 (= $x169 true)))
 (let (($x23 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x230 (= $x23 true)))
 (let (($x139 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x82 (= $x139 true)))
 (let ((?x15 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x15)))
 (let ((?x190 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x190)))
 (let ((?x173 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x173)))
 (let ((?x197 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x197)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x17 (and $x83 $x148)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x114 (and $x265 $x17)))
 (let (($x90 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x281 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (and $x281 $x108)))
 (let (($x260 (not $x178)))
 (let (($x278 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x284 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x275 (and $x284 $x278)))
 (let (($x285 (and (not $x275) $x260)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x50 $x76)))
 (let (($x267 (not $x5)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x151 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x56 (and $x151 $x35)))
 (let (($x220 (and (not $x56) $x267)))
 (let (($x205 (and (and (and (and (and (and $x220 $x285) $x286) $x90) $x114) $x239) $x223)))
 (let (($x49 (and $x205 $x51)))
 (let (($x252 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x186 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x211 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x186)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x162 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x186)))
 (let (($x88 (or false (or false (and (and true (or $x162 $x157)) (or $x211 $x252))))))
 (let (($x299 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x88)))
 (let (($x226 (and $x299 $x49)))
 (let (($x117 (= $x226 true)))
 (let ((?x191 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x135 (= (_ bv0 2) ?x191)))
 (let (($x182 (= $x135 true)))
 (let (($x184 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x93 (= $x184 true)))
 (let (($x59 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x194 (= $x59 true)))
 (let (($x159 (forall ((input.ind-%var1677X (_ BitVec 32)) )(let ((?x196 (bvadd (bvmul input.ind-%var1677X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x164 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x196))))
 (let ((?x130 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x196 (_ bv2 32))) ?x164)))
 (let ((?x12 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x196 (_ bv3 32))) ?x130)))
 (let ((?x180 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1677X)))
 (let (($x170 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1677X)))
 (=> $x170 (= ?x180 ?x12)))))))))
 ))
 (let (($x65 (forall ((input.ind-%var1676X (_ BitVec 32)) )(let (($x166 (and (bvule (_ bv0 32) input.ind-%var1676X) (bvult input.ind-%var1676X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x170 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1676X)))
 (= $x170 $x166))))
 ))
 (let (($x185 (and $x65 $x159)))
 (let (($x246 (= $x185 true)))
 (let ((?x221 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x53 (bvneg ?x221)))
 (let (($x231 (= ?x53 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x251 (= $x231 true)))
 (let (($x111 (= ?x53 input.dst.llvm-%n)))
 (let (($x131 (= $x111 true)))
 (let (($x234 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x98 (= $x234 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x103 (bvsub ?x94 ?x63)))
 (let (($x249 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x103) (bvult ?x94 ?x103))))
 (let (($x85 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x147 (ite $x85 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x46 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x26 (bvmul (_ bv4 64) ?x46)))
 (let ((?x233 ((_ extract 63 32) ?x26)))
 (let (($x101 (= ?x233 ?x147)))
 (let (($x78 (and $x101 $x249)))
 (let (($x204 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x32 (and $x204 $x78)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x136 (=> $x16 $x32)))
 (let (($x154 (= $x136 true)))
 (let (($x40 (= $x16 true)))
 (let (($x224 (and $x40 $x154)))
 (let (($x232 (and $x224 $x98)))
 (let (($x36 (and $x232 $x131)))
 (let (($x172 (and $x36 $x251)))
 (let (($x67 (and $x172 $x246)))
 (let (($x113 (and $x67 $x194)))
 (let (($x123 (and $x113 $x93)))
 (let (($x228 (and $x123 $x182)))
 (let (($x69 (and $x228 $x117)))
 (let (($x244 (and $x69 $x82)))
 (let (($x269 (and $x244 $x230)))
 (let (($x179 (and $x269 $x192)))
 (let (($x24 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x144 (and (not $x24) $x179)))
 (let (($x270 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x95 (and $x270 $x144)))
 (let (($x291 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x240 (and $x291 $x95)))
 (let (($x175 (forall ((input.ind-%var1687X (_ BitVec 32)) )(let (($x92 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1687X)))
 (=> $x92 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1687X) (_ bv0 32)))))
 ))
 (let (($x292 (forall ((input.ind-%var1686X (_ BitVec 32)) )(let (($x92 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1686X)))
 (= $x92 false)))
 ))
 (let (($x195 (and $x292 $x175)))
 (let (($x213 (and $x195 $x240)))
 (let (($x149 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x247 (and $x149 $x213)))
 (let (($x102 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x242 (bvadd ?x94 (_ bv3 32))))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x242)))
 (let (($x57 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x242)))
 (let (($x33 (or false (or false (and (and true (or $x45 $x57)) (or $x73 $x102))))))
 (let (($x177 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x33)))
 (let (($x71 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x33)))
 (let (($x167 (and $x71 $x247)))
 (let (($x25 (=> $x167 $x105)))
 (not $x25))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 62
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x236 (bvsge ?x39 (_ bv0 32))))
 (let (($x295 (= $x236 true)))
 (let ((?x34 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x218 (bvneg ?x34)))
 (let (($x216 (= ?x218 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x214 (= $x216 true)))
 (let (($x62 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x150 (= $x62 true)))
 (let (($x201 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x54 (= $x201 true)))
 (let ((?x243 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= (_ bv0 32) ?x243)))
 (let ((?x31 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x31)))
 (let ((?x25 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x253 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x25)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x167)))
 (let (($x247 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (and $x247 $x104)))
 (let (($x213 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (and $x213 $x106)))
 (let (($x240 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x230 $x269)))
 (let (($x44 (not $x145)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x23 (and $x82 $x244)))
 (let (($x192 (and (not $x23) $x44)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x226 (and $x51 $x49)))
 (let (($x117 (not $x226)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x72 $x14)))
 (let (($x139 (and (not $x15) $x117)))
 (let (($x7 (and (and (and (and (and (and $x139 $x192) $x144) $x240) $x105) $x253) $x38)))
 (let (($x293 (and $x7 $x18)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x265 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x265)))
 (let (($x197 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x265)))
 (let (($x190 (or false (or false (and (and true (or $x83 $x197)) (or $x114 $x254))))))
 (let (($x205 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x190)))
 (let (($x287 (and $x205 $x293)))
 (let (($x300 (= $x287 true)))
 (let ((?x260 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x285 (= (_ bv0 2) ?x260)))
 (let (($x298 (= $x285 true)))
 (let (($x261 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x281 (= $x261 true)))
 (let (($x284 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x278 (= $x284 true)))
 (let (($x76 (forall ((input.ind-%var1697X (_ BitVec 32)) )(let ((?x47 (bvadd (bvmul input.ind-%var1697X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x142 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x47))))
 (let ((?x299 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv2 32))) ?x142)))
 (let ((?x56 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv3 32))) ?x299)))
 (let ((?x67 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1697X)))
 (let (($x263 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1697X)))
 (=> $x263 (= ?x67 ?x56)))))))))
 ))
 (let (($x132 (forall ((input.ind-%var1696X (_ BitVec 32)) )(let (($x12 (and (bvule (_ bv0 32) input.ind-%var1696X) (bvult input.ind-%var1696X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x263 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1696X)))
 (= $x263 $x12))))
 ))
 (let (($x5 (and $x132 $x76)))
 (let (($x267 (= $x5 true)))
 (let ((?x160 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x166 (bvneg ?x160)))
 (let (($x84 (= ?x166 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x8 (= $x84 true)))
 (let (($x137 (= ?x166 input.dst.llvm-%n)))
 (let (($x65 (= $x137 true)))
 (let (($x172 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x170 (= $x172 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x237 (bvsub ?x94 ?x63)))
 (let (($x221 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x237) (bvult ?x94 ?x237))))
 (let (($x32 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x154 (ite $x32 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x238 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x249 (bvmul (_ bv4 64) ?x238)))
 (let ((?x78 ((_ extract 63 32) ?x249)))
 (let (($x224 (= ?x78 ?x154)))
 (let (($x53 (and $x224 $x221)))
 (let (($x103 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x111 (and $x103 $x53)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x131 (=> $x70 $x111)))
 (let (($x36 (= $x131 true)))
 (let (($x147 (= $x70 true)))
 (let (($x231 (and $x147 $x36)))
 (let (($x110 (and $x231 $x170)))
 (let (($x180 (and $x110 $x65)))
 (let (($x196 (and $x180 $x8)))
 (let (($x220 (and $x196 $x267)))
 (let (($x275 (and $x220 $x278)))
 (let (($x108 (and $x275 $x281)))
 (let (($x257 (and $x108 $x298)))
 (let (($x235 (and $x257 $x300)))
 (let (($x91 (and $x235 $x54)))
 (let (($x96 (and $x91 $x150)))
 (let (($x183 (and $x96 $x214)))
 (let (($x199 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x174 (and (not $x199) $x183)))
 (let (($x233 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x146 (and $x233 $x174)))
 (let (($x119 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x107 (and $x119 $x146)))
 (let (($x126 (forall ((input.ind-%var1707X (_ BitVec 32)) )(let (($x264 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1707X)))
 (=> $x264 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1707X) (_ bv0 32)))))
 ))
 (let (($x175 (forall ((input.ind-%var1706X (_ BitVec 32)) )(let (($x264 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1706X)))
 (= $x264 false)))
 ))
 (let (($x115 (and $x175 $x126)))
 (let (($x109 (and $x115 $x107)))
 (let (($x87 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x241 (and $x87 $x109)))
 (let (($x64 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x57 (bvadd ?x94 (_ bv3 32))))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x210 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x57)))
 (let (($x71 (or false (or false (and (and true (or $x79 $x210)) (or $x206 $x64))))))
 (let (($x149 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x71)))
 (let (($x219 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x71)))
 (let (($x222 (and $x219 $x241)))
 (let (($x296 (=> $x222 $x295)))
 (not $x296))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x39 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x236 (bvsge ?x39 (_ bv0 32))))
 (let (($x295 (= $x236 true)))
 (let ((?x34 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x218 (bvneg ?x34)))
 (let (($x216 (= ?x218 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x214 (= $x216 true)))
 (let (($x62 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x150 (= $x62 true)))
 (let (($x201 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x54 (= $x201 true)))
 (let ((?x243 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= (_ bv0 32) ?x243)))
 (let ((?x31 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x38 (= (_ bv0 32) ?x31)))
 (let ((?x25 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x253 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x25)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x167)))
 (let (($x247 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (and $x247 $x104)))
 (let (($x213 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x105 (and $x213 $x106)))
 (let (($x240 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x230 $x269)))
 (let (($x44 (not $x145)))
 (let (($x244 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x23 (and $x82 $x244)))
 (let (($x192 (and (not $x23) $x44)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x226 (and $x51 $x49)))
 (let (($x117 (not $x226)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x72 $x14)))
 (let (($x139 (and (not $x15) $x117)))
 (let (($x7 (and (and (and (and (and (and $x139 $x192) $x144) $x240) $x105) $x253) $x38)))
 (let (($x293 (and $x7 $x18)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x265 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x265)))
 (let (($x197 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x265)))
 (let (($x190 (or false (or false (and (and true (or $x83 $x197)) (or $x114 $x254))))))
 (let (($x205 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x190)))
 (let (($x287 (and $x205 $x293)))
 (let (($x300 (= $x287 true)))
 (let ((?x260 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x285 (= (_ bv0 2) ?x260)))
 (let (($x298 (= $x285 true)))
 (let (($x261 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x281 (= $x261 true)))
 (let (($x284 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x278 (= $x284 true)))
 (let (($x76 (forall ((input.ind-%var1697X (_ BitVec 32)) )(let ((?x47 (bvadd (bvmul input.ind-%var1697X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x142 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x47))))
 (let ((?x299 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv2 32))) ?x142)))
 (let ((?x56 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x47 (_ bv3 32))) ?x299)))
 (let ((?x67 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1697X)))
 (let (($x263 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1697X)))
 (=> $x263 (= ?x67 ?x56)))))))))
 ))
 (let (($x132 (forall ((input.ind-%var1696X (_ BitVec 32)) )(let (($x12 (and (bvule (_ bv0 32) input.ind-%var1696X) (bvult input.ind-%var1696X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x263 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1696X)))
 (= $x263 $x12))))
 ))
 (let (($x5 (and $x132 $x76)))
 (let (($x267 (= $x5 true)))
 (let ((?x160 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x166 (bvneg ?x160)))
 (let (($x84 (= ?x166 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x8 (= $x84 true)))
 (let (($x137 (= ?x166 input.dst.llvm-%n)))
 (let (($x65 (= $x137 true)))
 (let (($x172 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x170 (= $x172 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x237 (bvsub ?x94 ?x63)))
 (let (($x221 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x237) (bvult ?x94 ?x237))))
 (let (($x32 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x154 (ite $x32 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x238 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x249 (bvmul (_ bv4 64) ?x238)))
 (let ((?x78 ((_ extract 63 32) ?x249)))
 (let (($x224 (= ?x78 ?x154)))
 (let (($x53 (and $x224 $x221)))
 (let (($x103 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x111 (and $x103 $x53)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x131 (=> $x70 $x111)))
 (let (($x36 (= $x131 true)))
 (let (($x147 (= $x70 true)))
 (let (($x231 (and $x147 $x36)))
 (let (($x110 (and $x231 $x170)))
 (let (($x180 (and $x110 $x65)))
 (let (($x196 (and $x180 $x8)))
 (let (($x220 (and $x196 $x267)))
 (let (($x275 (and $x220 $x278)))
 (let (($x108 (and $x275 $x281)))
 (let (($x257 (and $x108 $x298)))
 (let (($x235 (and $x257 $x300)))
 (let (($x91 (and $x235 $x54)))
 (let (($x96 (and $x91 $x150)))
 (let (($x183 (and $x96 $x214)))
 (let (($x199 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x174 (and (not $x199) $x183)))
 (let (($x233 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x146 (and $x233 $x174)))
 (let (($x119 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x107 (and $x119 $x146)))
 (let (($x126 (forall ((input.ind-%var1707X (_ BitVec 32)) )(let (($x264 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1707X)))
 (=> $x264 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1707X) (_ bv0 32)))))
 ))
 (let (($x175 (forall ((input.ind-%var1706X (_ BitVec 32)) )(let (($x264 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1706X)))
 (= $x264 false)))
 ))
 (let (($x115 (and $x175 $x126)))
 (let (($x109 (and $x115 $x107)))
 (let (($x87 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x241 (and $x87 $x109)))
 (let (($x64 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x57 (bvadd ?x94 (_ bv3 32))))
 (let (($x206 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x210 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x57)))
 (let (($x71 (or false (or false (and (and true (or $x79 $x210)) (or $x206 $x64))))))
 (let (($x149 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x71)))
 (let (($x219 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x71)))
 (let (($x222 (and $x219 $x241)))
 (let (($x296 (=> $x222 $x295)))
 (not $x296))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 63
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x185 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x157 (bvule ?x185 (_ bv4294967294 32))))
 (let (($x152 (= $x157 true)))
 (let ((?x182 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x228 (bvneg ?x182)))
 (let (($x123 (= ?x228 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x121 (= $x123 true)))
 (let (($x184 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x266 (= $x184 true)))
 (let (($x133 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x128 (= $x133 true)))
 (let (($x259 (forall ((input.ind-%var1717X (_ BitVec 32)) )(let ((?x295 (bvadd (bvmul input.ind-%var1717X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x286 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x295))))
 (let ((?x289 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x295 (_ bv2 32))) ?x286)))
 (let ((?x291 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x295 (_ bv3 32))) ?x289)))
 (let ((?x201 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1717X)))
 (let (($x105 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1717X)))
 (=> $x105 (= ?x201 ?x291)))))))))
 ))
 (let (($x293 (forall ((input.ind-%var1716X (_ BitVec 32)) )(let (($x243 (and (bvule (_ bv0 32) input.ind-%var1716X) (bvult input.ind-%var1716X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x105 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1716X)))
 (= $x105 $x243))))
 ))
 (let (($x297 (and $x293 $x259)))
 (let (($x246 (= $x297 true)))
 (let (($x213 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x247 (= $x213 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x145 (bvsub ?x94 ?x63)))
 (let (($x179 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x145) (bvult ?x94 ?x145))))
 (let (($x169 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x230 (ite $x169 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x82 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x244 (bvmul (_ bv4 64) ?x82)))
 (let ((?x23 ((_ extract 63 32) ?x244)))
 (let (($x269 (= ?x23 ?x230)))
 (let (($x144 (and $x269 $x179)))
 (let (($x117 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x43 (and $x117 $x144)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x95 (=> $x118 $x43)))
 (let (($x240 (= $x95 true)))
 (let (($x69 (= $x118 true)))
 (let (($x72 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x14 (= $x72 true)))
 (let ((?x265 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x265)))
 (let ((?x74 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x74)))
 (let ((?x257 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x90 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x257)))
 (let ((?x178 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x260 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x178)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x285 (and $x108 $x260)))
 (let (($x281 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (and $x281 $x285)))
 (let (($x261 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x76 (and $x245 $x50)))
 (let (($x5 (not $x76)))
 (let (($x299 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x142 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x56 (and $x142 $x299)))
 (let (($x220 (and (not $x56) $x5)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x135 $x189)))
 (let (($x252 (not $x88)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x137 $x65)))
 (let (($x211 (and (not $x35) $x252)))
 (let (($x173 (and (and (and (and (and (and $x211 $x220) $x278) $x261) $x298) $x90) $x223)))
 (let (($x239 (and $x173 $x83)))
 (let (($x129 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x8 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x263 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x41 (or false (or false (and (and true (or $x196 $x263)) (or $x12 $x129))))))
 (let (($x151 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x41)))
 (let (($x290 (and $x151 $x239)))
 (let (($x190 (= $x290 true)))
 (let ((?x172 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x170 (= (_ bv0 2) ?x172)))
 (let (($x110 (= $x170 true)))
 (let (($x131 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x36 (= $x131 true)))
 (let ((?x224 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x234 (bvneg ?x224)))
 (let (($x232 (= ?x234 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (= $x232 true)))
 (let (($x237 (= ?x234 input.dst.llvm-%n)))
 (let (($x98 (= $x237 true)))
 (let (($x53 (and $x98 $x221)))
 (let (($x231 (and $x53 $x36)))
 (let (($x160 (and $x231 $x110)))
 (let (($x205 (and $x160 $x190)))
 (let (($x15 (and $x205 $x14)))
 (let (($x51 (and $x15 $x69)))
 (let (($x288 (and $x51 $x240)))
 (let (($x167 (and $x288 $x247)))
 (let (($x168 (and $x167 $x246)))
 (let (($x113 (and $x168 $x128)))
 (let (($x198 (and $x113 $x266)))
 (let (($x93 (and $x198 $x121)))
 (let (($x136 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x227 (and (not $x136) $x93)))
 (let (($x78 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x186 (and $x78 $x227)))
 (let (($x143 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x134 (and $x143 $x186)))
 (let (($x101 (forall ((input.ind-%var1727X (_ BitVec 32)) )(let (($x301 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1727X)))
 (=> $x301 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1727X) (_ bv0 32)))))
 ))
 (let (($x126 (forall ((input.ind-%var1726X (_ BitVec 32)) )(let (($x301 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1726X)))
 (= $x301 false)))
 ))
 (let (($x77 (and $x126 $x101)))
 (let (($x21 (and $x77 $x134)))
 (let (($x292 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x217 (and $x292 $x21)))
 (let (($x33 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x210 (bvadd ?x94 (_ bv3 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x210)))
 (let (($x73 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x210)))
 (let (($x219 (or false (or false (and (and true (or $x81 $x73)) (or $x97 $x33))))))
 (let (($x87 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x219)))
 (let (($x52 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x219)))
 (let (($x162 (and $x52 $x217)))
 (let (($x24 (=> $x162 $x152)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x185 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x157 (bvule ?x185 (_ bv4294967294 32))))
 (let (($x152 (= $x157 true)))
 (let ((?x182 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x228 (bvneg ?x182)))
 (let (($x123 (= ?x228 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x121 (= $x123 true)))
 (let (($x184 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x266 (= $x184 true)))
 (let (($x133 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x128 (= $x133 true)))
 (let (($x259 (forall ((input.ind-%var1717X (_ BitVec 32)) )(let ((?x295 (bvadd (bvmul input.ind-%var1717X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x286 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x295 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x295))))
 (let ((?x289 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x295 (_ bv2 32))) ?x286)))
 (let ((?x291 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x295 (_ bv3 32))) ?x289)))
 (let ((?x201 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1717X)))
 (let (($x105 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1717X)))
 (=> $x105 (= ?x201 ?x291)))))))))
 ))
 (let (($x293 (forall ((input.ind-%var1716X (_ BitVec 32)) )(let (($x243 (and (bvule (_ bv0 32) input.ind-%var1716X) (bvult input.ind-%var1716X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x105 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1716X)))
 (= $x105 $x243))))
 ))
 (let (($x297 (and $x293 $x259)))
 (let (($x246 (= $x297 true)))
 (let (($x213 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x247 (= $x213 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x145 (bvsub ?x94 ?x63)))
 (let (($x179 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x145) (bvult ?x94 ?x145))))
 (let (($x169 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x230 (ite $x169 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x82 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x244 (bvmul (_ bv4 64) ?x82)))
 (let ((?x23 ((_ extract 63 32) ?x244)))
 (let (($x269 (= ?x23 ?x230)))
 (let (($x144 (and $x269 $x179)))
 (let (($x117 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x43 (and $x117 $x144)))
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x95 (=> $x118 $x43)))
 (let (($x240 (= $x95 true)))
 (let (($x69 (= $x118 true)))
 (let (($x72 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x14 (= $x72 true)))
 (let ((?x265 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x265)))
 (let ((?x74 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x74)))
 (let ((?x257 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x90 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x257)))
 (let ((?x178 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x260 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x178)))
 (let (($x108 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x285 (and $x108 $x260)))
 (let (($x281 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (and $x281 $x285)))
 (let (($x261 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x278 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x50 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x76 (and $x245 $x50)))
 (let (($x5 (not $x76)))
 (let (($x299 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x142 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x56 (and $x142 $x299)))
 (let (($x220 (and (not $x56) $x5)))
 (let (($x189 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x88 (and $x135 $x189)))
 (let (($x252 (not $x88)))
 (let (($x65 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x137 $x65)))
 (let (($x211 (and (not $x35) $x252)))
 (let (($x173 (and (and (and (and (and (and $x211 $x220) $x278) $x261) $x298) $x90) $x223)))
 (let (($x239 (and $x173 $x83)))
 (let (($x129 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x8 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x8)))
 (let (($x263 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x196 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x8)))
 (let (($x41 (or false (or false (and (and true (or $x196 $x263)) (or $x12 $x129))))))
 (let (($x151 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x41)))
 (let (($x290 (and $x151 $x239)))
 (let (($x190 (= $x290 true)))
 (let ((?x172 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x170 (= (_ bv0 2) ?x172)))
 (let (($x110 (= $x170 true)))
 (let (($x131 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x36 (= $x131 true)))
 (let ((?x224 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x234 (bvneg ?x224)))
 (let (($x232 (= ?x234 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (= $x232 true)))
 (let (($x237 (= ?x234 input.dst.llvm-%n)))
 (let (($x98 (= $x237 true)))
 (let (($x53 (and $x98 $x221)))
 (let (($x231 (and $x53 $x36)))
 (let (($x160 (and $x231 $x110)))
 (let (($x205 (and $x160 $x190)))
 (let (($x15 (and $x205 $x14)))
 (let (($x51 (and $x15 $x69)))
 (let (($x288 (and $x51 $x240)))
 (let (($x167 (and $x288 $x247)))
 (let (($x168 (and $x167 $x246)))
 (let (($x113 (and $x168 $x128)))
 (let (($x198 (and $x113 $x266)))
 (let (($x93 (and $x198 $x121)))
 (let (($x136 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x227 (and (not $x136) $x93)))
 (let (($x78 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x186 (and $x78 $x227)))
 (let (($x143 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x134 (and $x143 $x186)))
 (let (($x101 (forall ((input.ind-%var1727X (_ BitVec 32)) )(let (($x301 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1727X)))
 (=> $x301 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1727X) (_ bv0 32)))))
 ))
 (let (($x126 (forall ((input.ind-%var1726X (_ BitVec 32)) )(let (($x301 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1726X)))
 (= $x301 false)))
 ))
 (let (($x77 (and $x126 $x101)))
 (let (($x21 (and $x77 $x134)))
 (let (($x292 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x217 (and $x292 $x21)))
 (let (($x33 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x210 (bvadd ?x94 (_ bv3 32))))
 (let (($x97 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x210)))
 (let (($x73 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x210)))
 (let (($x219 (or false (or false (and (and true (or $x81 $x73)) (or $x97 $x33))))))
 (let (($x87 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x219)))
 (let (($x52 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x219)))
 (let (($x162 (and $x52 $x217)))
 (let (($x24 (=> $x162 $x152)))
 (not $x24))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
unsat
(error "line 162 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 64
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x300 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x39 (bvsge ?x300 (_ bv0 32))))
 (let (($x204 (= $x39 true)))
 (let ((?x183 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x174 (bvneg ?x183)))
 (let (($x34 (= ?x174 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x218 (= $x34 true)))
 (let (($x150 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x107 (= $x150 true)))
 (let (($x25 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x253 (= $x25 true)))
 (let (($x176 (forall ((input.ind-%var1737X (_ BitVec 32)) )(let ((?x152 (bvadd (bvmul input.ind-%var1737X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x166 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x152))))
 (let ((?x270 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x152 (_ bv2 32))) ?x166)))
 (let ((?x119 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x152 (_ bv3 32))) ?x270)))
 (let ((?x133 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1737X)))
 (let (($x165 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1737X)))
 (=> $x165 (= ?x133 ?x119)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var1736X (_ BitVec 32)) )(let (($x92 (and (bvule (_ bv0 32) input.ind-%var1736X) (bvult input.ind-%var1736X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x165 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1736X)))
 (= $x165 $x92))))
 ))
 (let (($x85 (and $x259 $x176)))
 (let (($x235 (= $x85 true)))
 (let (($x236 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x295 (= $x236 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x247 (bvsub ?x94 ?x63)))
 (let (($x38 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x247) (bvult ?x94 ?x247))))
 (let (($x240 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x288 (ite $x240 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x144 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x43 (bvmul (_ bv4 64) ?x144)))
 (let ((?x95 ((_ extract 63 32) ?x43)))
 (let (($x213 (= ?x95 ?x288)))
 (let (($x243 (and $x213 $x38)))
 (let (($x255 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x18 (and $x255 $x243)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x293 (=> $x124 $x18)))
 (let (($x201 (= $x293 true)))
 (let (($x269 (= $x124 true)))
 (let (($x23 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x169 (= $x23 true)))
 (let ((?x205 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x72 (= (_ bv0 32) ?x205)))
 (let ((?x290 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x290)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x83)))
 (let ((?x74 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x74)))
 (let (($x254 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x173 (and $x254 $x223)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x265 (and $x90 $x173)))
 (let (($x257 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x298 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x261 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x281 (and $x261 $x17)))
 (let (($x108 (not $x281)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x278 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x275 (and $x278 $x148)))
 (let (($x260 (and (not $x275) $x108)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x50 $x76)))
 (let (($x220 (not $x5)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x245 (and $x67 $x194)))
 (let (($x284 (and (not $x245) $x220)))
 (let (($x226 (and (and (and (and (and (and $x284 $x260) $x298) $x257) $x265) $x239) $x190)))
 (let (($x117 (and $x226 $x72)))
 (let (($x88 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x137 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x189 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x137)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x137)))
 (let (($x299 (or false (or false (and (and true (or $x65 $x35)) (or $x189 $x88))))))
 (let (($x267 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x299)))
 (let (($x139 (and $x267 $x117)))
 (let (($x82 (= $x139 true)))
 (let ((?x130 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x164 (= (_ bv0 2) ?x130)))
 (let (($x12 (= $x164 true)))
 (let (($x47 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x8 (= $x47 true)))
 (let ((?x231 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x251 (bvneg ?x231)))
 (let (($x110 (= ?x251 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x160 (= $x110 true)))
 (let (($x172 (= ?x251 input.dst.llvm-%n)))
 (let (($x170 (= $x172 true)))
 (let (($x180 (and $x170 $x160)))
 (let (($x196 (and $x180 $x8)))
 (let (($x129 (and $x196 $x12)))
 (let (($x244 (and $x129 $x82)))
 (let (($x230 (and $x244 $x169)))
 (let (($x44 (and $x230 $x269)))
 (let (($x91 (and $x44 $x201)))
 (let (($x268 (and $x91 $x295)))
 (let (($x104 (and $x268 $x235)))
 (let (($x62 (and $x104 $x253)))
 (let (($x109 (and $x62 $x107)))
 (let (($x96 (and $x109 $x218)))
 (let (($x131 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x146 (and (not $x131) $x96)))
 (let (($x53 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (and $x53 $x146)))
 (let (($x98 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x106 (and $x98 $x241)))
 (let (($x224 (forall ((input.ind-%var1747X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1747X)))
 (=> $x46 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1747X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var1746X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1746X)))
 (= $x46 false)))
 ))
 (let (($x234 (and $x101 $x224)))
 (let (($x100 (and $x234 $x106)))
 (let (($x175 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x31 (and $x175 $x100)))
 (let (($x71 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x73 (bvadd ?x94 (_ bv3 32))))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x206 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x73)))
 (let (($x52 (or false (or false (and (and true (or $x27 $x206)) (or $x177 $x71))))))
 (let (($x292 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x52)))
 (let (($x242 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x52)))
 (let (($x222 (and $x242 $x31)))
 (let (($x199 (=> $x222 $x204)))
 (not $x199))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x300 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x39 (bvsge ?x300 (_ bv0 32))))
 (let (($x204 (= $x39 true)))
 (let ((?x183 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x174 (bvneg ?x183)))
 (let (($x34 (= ?x174 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x218 (= $x34 true)))
 (let (($x150 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x107 (= $x150 true)))
 (let (($x25 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x253 (= $x25 true)))
 (let (($x176 (forall ((input.ind-%var1737X (_ BitVec 32)) )(let ((?x152 (bvadd (bvmul input.ind-%var1737X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x166 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x152 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x152))))
 (let ((?x270 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x152 (_ bv2 32))) ?x166)))
 (let ((?x119 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x152 (_ bv3 32))) ?x270)))
 (let ((?x133 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1737X)))
 (let (($x165 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1737X)))
 (=> $x165 (= ?x133 ?x119)))))))))
 ))
 (let (($x259 (forall ((input.ind-%var1736X (_ BitVec 32)) )(let (($x92 (and (bvule (_ bv0 32) input.ind-%var1736X) (bvult input.ind-%var1736X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x165 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1736X)))
 (= $x165 $x92))))
 ))
 (let (($x85 (and $x259 $x176)))
 (let (($x235 (= $x85 true)))
 (let (($x236 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x295 (= $x236 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x247 (bvsub ?x94 ?x63)))
 (let (($x38 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x247) (bvult ?x94 ?x247))))
 (let (($x240 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x288 (ite $x240 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x144 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x43 (bvmul (_ bv4 64) ?x144)))
 (let ((?x95 ((_ extract 63 32) ?x43)))
 (let (($x213 (= ?x95 ?x288)))
 (let (($x243 (and $x213 $x38)))
 (let (($x255 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x18 (and $x255 $x243)))
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x293 (=> $x124 $x18)))
 (let (($x201 (= $x293 true)))
 (let (($x269 (= $x124 true)))
 (let (($x23 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x169 (= $x23 true)))
 (let ((?x205 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x72 (= (_ bv0 32) ?x205)))
 (let ((?x290 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x290)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x83)))
 (let ((?x74 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x74)))
 (let (($x254 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x173 (and $x254 $x223)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x265 (and $x90 $x173)))
 (let (($x257 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x298 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x261 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x281 (and $x261 $x17)))
 (let (($x108 (not $x281)))
 (let (($x148 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x278 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x275 (and $x278 $x148)))
 (let (($x260 (and (not $x275) $x108)))
 (let (($x76 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x50 $x76)))
 (let (($x220 (not $x5)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x245 (and $x67 $x194)))
 (let (($x284 (and (not $x245) $x220)))
 (let (($x226 (and (and (and (and (and (and $x284 $x260) $x298) $x257) $x265) $x239) $x190)))
 (let (($x117 (and $x226 $x72)))
 (let (($x88 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x137 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x189 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x137)))
 (let (($x35 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x137)))
 (let (($x299 (or false (or false (and (and true (or $x65 $x35)) (or $x189 $x88))))))
 (let (($x267 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x299)))
 (let (($x139 (and $x267 $x117)))
 (let (($x82 (= $x139 true)))
 (let ((?x130 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x164 (= (_ bv0 2) ?x130)))
 (let (($x12 (= $x164 true)))
 (let (($x47 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x8 (= $x47 true)))
 (let ((?x231 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x251 (bvneg ?x231)))
 (let (($x110 (= ?x251 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x160 (= $x110 true)))
 (let (($x172 (= ?x251 input.dst.llvm-%n)))
 (let (($x170 (= $x172 true)))
 (let (($x180 (and $x170 $x160)))
 (let (($x196 (and $x180 $x8)))
 (let (($x129 (and $x196 $x12)))
 (let (($x244 (and $x129 $x82)))
 (let (($x230 (and $x244 $x169)))
 (let (($x44 (and $x230 $x269)))
 (let (($x91 (and $x44 $x201)))
 (let (($x268 (and $x91 $x295)))
 (let (($x104 (and $x268 $x235)))
 (let (($x62 (and $x104 $x253)))
 (let (($x109 (and $x62 $x107)))
 (let (($x96 (and $x109 $x218)))
 (let (($x131 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x146 (and (not $x131) $x96)))
 (let (($x53 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (and $x53 $x146)))
 (let (($x98 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x106 (and $x98 $x241)))
 (let (($x224 (forall ((input.ind-%var1747X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1747X)))
 (=> $x46 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1747X) (_ bv0 32)))))
 ))
 (let (($x101 (forall ((input.ind-%var1746X (_ BitVec 32)) )(let (($x46 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1746X)))
 (= $x46 false)))
 ))
 (let (($x234 (and $x101 $x224)))
 (let (($x100 (and $x234 $x106)))
 (let (($x175 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x31 (and $x175 $x100)))
 (let (($x71 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x73 (bvadd ?x94 (_ bv3 32))))
 (let (($x177 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x206 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x73)))
 (let (($x52 (or false (or false (and (and true (or $x27 $x206)) (or $x177 $x71))))))
 (let (($x292 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x52)))
 (let (($x242 (=> (and $x124 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x52)))
 (let (($x222 (and $x242 $x31)))
 (let (($x199 (=> $x222 $x204)))
 (not $x199))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 65
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x246 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x185 (bvule ?x246 input.dst.llvm-%n)))
 (let (($x103 (= $x185 true)))
 (let ((?x93 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x227 (bvneg ?x93)))
 (let (($x182 (= ?x227 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x228 (= $x182 true)))
 (let ((?x196 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x263 (bvneg ?x196)))
 (let (($x266 (= ?x263 input.dst.llvm-%n)))
 (let (($x134 (= $x266 true)))
 (let (($x163 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x55 (= $x163 true)))
 (let (($x32 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x168 (= $x32 true)))
 (let (($x143 (forall ((input.ind-%var1757X (_ BitVec 32)) )(let ((?x222 (bvadd (bvmul input.ind-%var1757X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x199 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x222 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x222))))
 (let ((?x132 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x222 (_ bv2 32))) ?x199)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x222 (_ bv3 32))) ?x132)))
 (let ((?x85 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1757X)))
 (let (($x26 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1757X)))
 (=> $x26 (= ?x85 ?x233)))))))))
 ))
 (let (($x119 (forall ((input.ind-%var1756X (_ BitVec 32)) )(let (($x166 (and (bvule (_ bv0 32) input.ind-%var1756X) (bvult input.ind-%var1756X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x26 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1756X)))
 (= $x26 $x166))))
 ))
 (let (($x301 (and $x119 $x143)))
 (let (($x40 (= $x301 true)))
 (let (($x259 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x133 (= $x259 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x201 (bvsub ?x94 ?x63)))
 (let (($x268 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x201) (bvult ?x94 ?x201))))
 (let (($x243 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x18 (ite $x243 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x105 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x7 (bvmul (_ bv4 64) ?x105)))
 (let ((?x38 ((_ extract 63 32) ?x7)))
 (let (($x293 (= ?x38 ?x18)))
 (let (($x165 (and $x293 $x268)))
 (let (($x167 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x291 (and $x167 $x165)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x289 (=> $x16 $x291)))
 (let (($x92 (= $x289 true)))
 (let (($x95 (= $x16 true)))
 (let (($x179 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x144 (= $x179 true)))
 (let ((?x117 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x117)))
 (let ((?x205 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x72 (= (_ bv0 32) ?x205)))
 (let ((?x190 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x226 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x190)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x83)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x49 (and $x51 $x239)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x290 (and $x265 $x49)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x298 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x114 (and $x298 $x15)))
 (let (($x257 (not $x114)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x260 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x285 (and $x260 $x14)))
 (let (($x90 (and (not $x285) $x257)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x275 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x261 (and $x275 $x178)))
 (let (($x17 (not $x261)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x189 $x88)))
 (let (($x108 (and (not $x148) $x17)))
 (let (($x269 (and (and (and (and (and (and $x108 $x90) $x74) $x173) $x290) $x226) $x72)))
 (let (($x44 (and $x269 $x139)))
 (let (($x197 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x142 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x142)))
 (let (($x267 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x299 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x142)))
 (let (($x220 (or false (or false (and (and true (or $x299 $x267)) (or $x245 $x197))))))
 (let (($x278 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x220)))
 (let (($x145 (and $x278 $x44)))
 (let (($x192 (= $x145 true)))
 (let ((?x137 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x65 (= (_ bv0 2) ?x137)))
 (let (($x35 (= $x65 true)))
 (let (($x129 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x41 (= $x129 true)))
 (let (($x130 (= ?x263 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x164 (= $x130 true)))
 (let (($x151 (and $x164 $x41)))
 (let (($x10 (and $x151 $x35)))
 (let (($x255 (and $x10 $x192)))
 (let (($x43 (and $x255 $x144)))
 (let (($x240 (and $x43 $x95)))
 (let (($x207 (and $x240 $x92)))
 (let (($x113 (and $x207 $x133)))
 (let (($x66 (and $x113 $x40)))
 (let (($x195 (and $x66 $x168)))
 (let (($x184 (and $x195 $x55)))
 (let (($x21 (and $x184 $x134)))
 (let (($x198 (and $x21 $x228)))
 (let (($x47 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x186 (and (not $x47) $x198)))
 (let (($x180 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x217 (and $x180 $x186)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x214 (and $x170 $x217)))
 (let (($x231 (forall ((input.ind-%var1767X (_ BitVec 32)) )(let (($x238 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1767X)))
 (=> $x238 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1767X) (_ bv0 32)))))
 ))
 (let (($x224 (forall ((input.ind-%var1766X (_ BitVec 32)) )(let (($x238 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1766X)))
 (= $x238 false)))
 ))
 (let (($x251 (and $x224 $x231)))
 (let (($x296 (and $x251 $x214)))
 (let (($x126 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x286 (and $x126 $x296)))
 (let (($x219 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x94 (_ bv3 32))))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x97 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x206)))
 (let (($x242 (or false (or false (and (and true (or $x102 $x97)) (or $x149 $x219))))))
 (let (($x175 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x242)))
 (let (($x57 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x242)))
 (let (($x162 (and $x57 $x286)))
 (let (($x136 (=> $x162 $x103)))
 (not $x136))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x246 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x185 (bvule ?x246 input.dst.llvm-%n)))
 (let (($x103 (= $x185 true)))
 (let ((?x93 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x227 (bvneg ?x93)))
 (let (($x182 (= ?x227 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x228 (= $x182 true)))
 (let ((?x196 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x263 (bvneg ?x196)))
 (let (($x266 (= ?x263 input.dst.llvm-%n)))
 (let (($x134 (= $x266 true)))
 (let (($x163 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x55 (= $x163 true)))
 (let (($x32 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x168 (= $x32 true)))
 (let (($x143 (forall ((input.ind-%var1757X (_ BitVec 32)) )(let ((?x222 (bvadd (bvmul input.ind-%var1757X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x199 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x222 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x222))))
 (let ((?x132 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x222 (_ bv2 32))) ?x199)))
 (let ((?x233 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x222 (_ bv3 32))) ?x132)))
 (let ((?x85 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1757X)))
 (let (($x26 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1757X)))
 (=> $x26 (= ?x85 ?x233)))))))))
 ))
 (let (($x119 (forall ((input.ind-%var1756X (_ BitVec 32)) )(let (($x166 (and (bvule (_ bv0 32) input.ind-%var1756X) (bvult input.ind-%var1756X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x26 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1756X)))
 (= $x26 $x166))))
 ))
 (let (($x301 (and $x119 $x143)))
 (let (($x40 (= $x301 true)))
 (let (($x259 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x133 (= $x259 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x201 (bvsub ?x94 ?x63)))
 (let (($x268 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x201) (bvult ?x94 ?x201))))
 (let (($x243 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x18 (ite $x243 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x105 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x7 (bvmul (_ bv4 64) ?x105)))
 (let ((?x38 ((_ extract 63 32) ?x7)))
 (let (($x293 (= ?x38 ?x18)))
 (let (($x165 (and $x293 $x268)))
 (let (($x167 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x291 (and $x167 $x165)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x289 (=> $x16 $x291)))
 (let (($x92 (= $x289 true)))
 (let (($x95 (= $x16 true)))
 (let (($x179 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x144 (= $x179 true)))
 (let ((?x117 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x117)))
 (let ((?x205 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x72 (= (_ bv0 32) ?x205)))
 (let ((?x190 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x226 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x190)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x239 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x83)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x49 (and $x51 $x239)))
 (let (($x265 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x290 (and $x265 $x49)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x298 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x114 (and $x298 $x15)))
 (let (($x257 (not $x114)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x260 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x285 (and $x260 $x14)))
 (let (($x90 (and (not $x285) $x257)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x275 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x261 (and $x275 $x178)))
 (let (($x17 (not $x261)))
 (let (($x88 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x189 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x189 $x88)))
 (let (($x108 (and (not $x148) $x17)))
 (let (($x269 (and (and (and (and (and (and $x108 $x90) $x74) $x173) $x290) $x226) $x72)))
 (let (($x44 (and $x269 $x139)))
 (let (($x197 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x142 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x142)))
 (let (($x267 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x299 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x142)))
 (let (($x220 (or false (or false (and (and true (or $x299 $x267)) (or $x245 $x197))))))
 (let (($x278 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x220)))
 (let (($x145 (and $x278 $x44)))
 (let (($x192 (= $x145 true)))
 (let ((?x137 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x65 (= (_ bv0 2) ?x137)))
 (let (($x35 (= $x65 true)))
 (let (($x129 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x41 (= $x129 true)))
 (let (($x130 (= ?x263 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x164 (= $x130 true)))
 (let (($x151 (and $x164 $x41)))
 (let (($x10 (and $x151 $x35)))
 (let (($x255 (and $x10 $x192)))
 (let (($x43 (and $x255 $x144)))
 (let (($x240 (and $x43 $x95)))
 (let (($x207 (and $x240 $x92)))
 (let (($x113 (and $x207 $x133)))
 (let (($x66 (and $x113 $x40)))
 (let (($x195 (and $x66 $x168)))
 (let (($x184 (and $x195 $x55)))
 (let (($x21 (and $x184 $x134)))
 (let (($x198 (and $x21 $x228)))
 (let (($x47 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x186 (and (not $x47) $x198)))
 (let (($x180 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x217 (and $x180 $x186)))
 (let (($x170 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x214 (and $x170 $x217)))
 (let (($x231 (forall ((input.ind-%var1767X (_ BitVec 32)) )(let (($x238 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1767X)))
 (=> $x238 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1767X) (_ bv0 32)))))
 ))
 (let (($x224 (forall ((input.ind-%var1766X (_ BitVec 32)) )(let (($x238 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1766X)))
 (= $x238 false)))
 ))
 (let (($x251 (and $x224 $x231)))
 (let (($x296 (and $x251 $x214)))
 (let (($x126 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x286 (and $x126 $x296)))
 (let (($x219 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x206 (bvadd ?x94 (_ bv3 32))))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x206)))
 (let (($x97 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x206)))
 (let (($x242 (or false (or false (and (and true (or $x102 $x97)) (or $x149 $x219))))))
 (let (($x175 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x242)))
 (let (($x57 (=> (and $x16 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x242)))
 (let (($x162 (and $x57 $x286)))
 (let (($x136 (=> $x162 $x103)))
 (not $x136))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 66
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x276 (forall ((input.ind-%var1801X (_ BitVec 32)) )(let ((?x186 (bvadd (bvmul input.ind-%var1801X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x97 (bvadd ?x94 (_ bv3 32))))
 (let ((?x187 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x94 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x42 (store ?x187 (bvadd ?x94 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x209 (store ?x42 (bvadd ?x94 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x48 (store ?x209 ?x97 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x203 (concat (select ?x48 (bvadd ?x186 (_ bv2 32))) (concat (select ?x48 (bvadd ?x186 (_ bv1 32))) (select ?x48 ?x186)))))
 (let ((?x77 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1801X)))
 (let (($x215 (= input.ind-%var1801X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x248 (= (ite $x215 input.spec-%var-i-0.L3%6%bbentry ?x77) (concat (select ?x48 (bvadd ?x186 (_ bv3 32))) ?x203))))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1801X)))
 (let (($x125 (or $x31 $x215)))
 (=> $x125 $x248))))))))))))))))
 ))
 (let (($x116 (forall ((input.ind-%var1800X (_ BitVec 32)) )(let (($x39 (bvule (_ bv0 32) input.ind-%var1800X)))
 (let (($x208 (and $x39 (bvult input.ind-%var1800X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x215 (= input.ind-%var1800X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1800X)))
 (let (($x125 (or $x31 $x215)))
 (= $x125 $x208)))))))
 ))
 (let (($x140 (and $x116 $x276)))
 (let (($x153 (= $x140 true)))
 (let ((?x174 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x34 (bvneg ?x174)))
 (let (($x150 (= ?x34 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x107 (= $x150 true)))
 (let ((?x25 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x253 (= (_ bv0 2) ?x25)))
 (let (($x96 (= $x253 true)))
 (let (($x176 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x157 (= $x176 true)))
 (let (($x147 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x191 (= $x147 true)))
 (let (($x234 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x98 (= $x234 true)))
 (let (($x115 (forall ((input.ind-%var1777X (_ BitVec 32)) )(let ((?x186 (bvadd (bvmul input.ind-%var1777X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x286 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x186))))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x186 (_ bv2 32))) ?x286)))
 (let ((?x287 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x186 (_ bv3 32))) ?x185)))
 (let ((?x77 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1777X)))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1777X)))
 (=> $x31 (= ?x77 ?x287)))))))))
 ))
 (let (($x199 (forall ((input.ind-%var1776X (_ BitVec 32)) )(let (($x39 (bvule (_ bv0 32) input.ind-%var1776X)))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1776X)))
 (= $x31 (and $x39 (bvult input.ind-%var1776X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x235 (and $x199 $x115)))
 (let (($x78 (= $x235 true)))
 (let (($x166 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x270 (= $x166 true)))
 (let (($x26 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x24 (= $x26 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x236 (bvsub ?x94 ?x63)))
 (let (($x291 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x236) (bvult ?x94 ?x236))))
 (let (($x293 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x91 (ite $x293 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x38 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x243 (bvmul (_ bv4 64) ?x38)))
 (let ((?x18 ((_ extract 63 32) ?x243)))
 (let (($x201 (= ?x18 ?x91)))
 (let (($x289 (and $x201 $x291)))
 (let (($x105 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x92 (and $x105 $x289)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x207 (=> $x70 $x92)))
 (let (($x259 (= $x207 true)))
 (let (($x288 (= $x70 true)))
 (let ((?x269 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x269)))
 (let ((?x205 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x72 (= (_ bv0 32) ?x205)))
 (let ((?x226 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x230 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x226)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x290 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x49)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x169 (and $x239 $x290)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (and $x83 $x169)))
 (let (($x51 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x254 (and $x90 $x82)))
 (let (($x74 (not $x254)))
 (let (($x114 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x257 (and $x15 $x114)))
 (let (($x223 (and (not $x257) $x74)))
 (let (($x260 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x108 $x260)))
 (let (($x285 (not $x14)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (and $x267 $x67)))
 (let (($x298 (and (not $x17) $x285)))
 (let (($x179 (and (and (and (and (and (and $x298 $x223) $x23) $x51) $x190) $x230) $x72)))
 (let (($x144 (and $x179 $x117)))
 (let (($x189 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x197 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x197)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x197)))
 (let (($x275 (or false (or false (and (and true (or $x50 $x76)) (or $x278 $x189))))))
 (let (($x261 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x275)))
 (let (($x43 (and $x261 $x144)))
 (let (($x95 (= $x43 true)))
 (let ((?x65 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x35 (bvneg ?x65)))
 (let (($x211 (= ?x35 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x284 (= $x211 true)))
 (let (($x10 (= ?x35 input.dst.llvm-%n)))
 (let (($x252 (= $x10 true)))
 (let (($x142 (and $x252 $x284)))
 (let (($x240 (and $x142 $x95)))
 (let (($x213 (and $x240 $x288)))
 (let (($x133 (and $x213 $x259)))
 (let (($x58 (and $x133 $x24)))
 (let (($x119 (and $x58 $x270)))
 (let (($x221 (and $x119 $x78)))
 (let (($x46 (and $x221 $x98)))
 (let (($x111 (and $x46 $x191)))
 (let (($x121 (and $x111 $x157)))
 (let (($x146 (and $x121 $x96)))
 (let (($x62 (and $x146 $x107)))
 (let (($x56 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x218 (and (not $x56) $x62)))
 (let (($x41 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (and $x41 $x218)))
 (let (($x164 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x152 (and $x164 $x241)))
 (let (($x196 (forall ((input.ind-%var1787X (_ BitVec 32)) )(let (($x232 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1787X)))
 (=> $x232 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1787X) (_ bv0 32)))))
 ))
 (let (($x231 (forall ((input.ind-%var1786X (_ BitVec 32)) )(let (($x232 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1786X)))
 (= $x232 false)))
 ))
 (let (($x263 (and $x231 $x196)))
 (let (($x54 (and $x263 $x152)))
 (let (($x101 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x155 (and $x101 $x54)))
 (let (($x52 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x97 (bvadd ?x94 (_ bv3 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x97)))
 (let (($x177 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x97)))
 (let (($x57 (or false (or false (and (and true (or $x64 $x177)) (or $x87 $x52))))))
 (let (($x126 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x57)))
 (let (($x210 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x57)))
 (let (($x106 (and $x210 $x155)))
 (let (($x277 (=> $x106 $x153)))
 (not $x277)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x276 (forall ((input.ind-%var1801X (_ BitVec 32)) )(let ((?x186 (bvadd (bvmul input.ind-%var1801X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x97 (bvadd ?x94 (_ bv3 32))))
 (let ((?x187 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x94 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x42 (store ?x187 (bvadd ?x94 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x209 (store ?x42 (bvadd ?x94 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x48 (store ?x209 ?x97 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x203 (concat (select ?x48 (bvadd ?x186 (_ bv2 32))) (concat (select ?x48 (bvadd ?x186 (_ bv1 32))) (select ?x48 ?x186)))))
 (let ((?x77 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1801X)))
 (let (($x215 (= input.ind-%var1801X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x248 (= (ite $x215 input.spec-%var-i-0.L3%6%bbentry ?x77) (concat (select ?x48 (bvadd ?x186 (_ bv3 32))) ?x203))))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1801X)))
 (let (($x125 (or $x31 $x215)))
 (=> $x125 $x248))))))))))))))))
 ))
 (let (($x116 (forall ((input.ind-%var1800X (_ BitVec 32)) )(let (($x39 (bvule (_ bv0 32) input.ind-%var1800X)))
 (let (($x208 (and $x39 (bvult input.ind-%var1800X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x215 (= input.ind-%var1800X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1800X)))
 (let (($x125 (or $x31 $x215)))
 (= $x125 $x208)))))))
 ))
 (let (($x140 (and $x116 $x276)))
 (let (($x153 (= $x140 true)))
 (let ((?x174 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x34 (bvneg ?x174)))
 (let (($x150 (= ?x34 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x107 (= $x150 true)))
 (let ((?x25 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x253 (= (_ bv0 2) ?x25)))
 (let (($x96 (= $x253 true)))
 (let (($x176 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x157 (= $x176 true)))
 (let (($x147 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x191 (= $x147 true)))
 (let (($x234 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x98 (= $x234 true)))
 (let (($x115 (forall ((input.ind-%var1777X (_ BitVec 32)) )(let ((?x186 (bvadd (bvmul input.ind-%var1777X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x286 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x186 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x186))))
 (let ((?x185 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x186 (_ bv2 32))) ?x286)))
 (let ((?x287 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x186 (_ bv3 32))) ?x185)))
 (let ((?x77 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1777X)))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1777X)))
 (=> $x31 (= ?x77 ?x287)))))))))
 ))
 (let (($x199 (forall ((input.ind-%var1776X (_ BitVec 32)) )(let (($x39 (bvule (_ bv0 32) input.ind-%var1776X)))
 (let (($x31 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1776X)))
 (= $x31 (and $x39 (bvult input.ind-%var1776X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x235 (and $x199 $x115)))
 (let (($x78 (= $x235 true)))
 (let (($x166 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x270 (= $x166 true)))
 (let (($x26 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x24 (= $x26 true)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let ((?x236 (bvsub ?x94 ?x63)))
 (let (($x291 (ite (bvsge ?x63 (_ bv0 32)) (bvuge ?x94 ?x236) (bvult ?x94 ?x236))))
 (let (($x293 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x91 (ite $x293 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x38 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x243 (bvmul (_ bv4 64) ?x38)))
 (let ((?x18 ((_ extract 63 32) ?x243)))
 (let (($x201 (= ?x18 ?x91)))
 (let (($x289 (and $x201 $x291)))
 (let (($x105 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x92 (and $x105 $x289)))
 (let (($x70 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x207 (=> $x70 $x92)))
 (let (($x259 (= $x207 true)))
 (let (($x288 (= $x70 true)))
 (let ((?x269 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x117 (= (_ bv0 32) ?x269)))
 (let ((?x205 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x72 (= (_ bv0 32) ?x205)))
 (let ((?x226 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x230 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x226)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x290 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x49)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x169 (and $x239 $x290)))
 (let (($x83 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (and $x83 $x169)))
 (let (($x51 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x254 (and $x90 $x82)))
 (let (($x74 (not $x254)))
 (let (($x114 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x257 (and $x15 $x114)))
 (let (($x223 (and (not $x257) $x74)))
 (let (($x260 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x108 $x260)))
 (let (($x285 (not $x14)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x267 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (and $x267 $x67)))
 (let (($x298 (and (not $x17) $x285)))
 (let (($x179 (and (and (and (and (and (and $x298 $x223) $x23) $x51) $x190) $x230) $x72)))
 (let (($x144 (and $x179 $x117)))
 (let (($x189 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x197 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x278 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x197)))
 (let (($x76 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x197)))
 (let (($x275 (or false (or false (and (and true (or $x50 $x76)) (or $x278 $x189))))))
 (let (($x261 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x275)))
 (let (($x43 (and $x261 $x144)))
 (let (($x95 (= $x43 true)))
 (let ((?x65 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x35 (bvneg ?x65)))
 (let (($x211 (= ?x35 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x284 (= $x211 true)))
 (let (($x10 (= ?x35 input.dst.llvm-%n)))
 (let (($x252 (= $x10 true)))
 (let (($x142 (and $x252 $x284)))
 (let (($x240 (and $x142 $x95)))
 (let (($x213 (and $x240 $x288)))
 (let (($x133 (and $x213 $x259)))
 (let (($x58 (and $x133 $x24)))
 (let (($x119 (and $x58 $x270)))
 (let (($x221 (and $x119 $x78)))
 (let (($x46 (and $x221 $x98)))
 (let (($x111 (and $x46 $x191)))
 (let (($x121 (and $x111 $x157)))
 (let (($x146 (and $x121 $x96)))
 (let (($x62 (and $x146 $x107)))
 (let (($x56 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x218 (and (not $x56) $x62)))
 (let (($x41 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x241 (and $x41 $x218)))
 (let (($x164 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x152 (and $x164 $x241)))
 (let (($x196 (forall ((input.ind-%var1787X (_ BitVec 32)) )(let (($x232 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1787X)))
 (=> $x232 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1787X) (_ bv0 32)))))
 ))
 (let (($x231 (forall ((input.ind-%var1786X (_ BitVec 32)) )(let (($x232 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1786X)))
 (= $x232 false)))
 ))
 (let (($x263 (and $x231 $x196)))
 (let (($x54 (and $x263 $x152)))
 (let (($x101 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x155 (and $x101 $x54)))
 (let (($x52 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x97 (bvadd ?x94 (_ bv3 32))))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x97)))
 (let (($x177 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x97)))
 (let (($x57 (or false (or false (and (and true (or $x64 $x177)) (or $x87 $x52))))))
 (let (($x126 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x57)))
 (let (($x210 (=> (and $x70 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x57)))
 (let (($x106 (and $x210 $x155)))
 (let (($x277 (=> $x106 $x153)))
 (not $x277)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 67
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x188 (not $x118)))
 (let (($x42 (= $x188 false)))
 (let (($x212 (= $x42 true)))
 (let ((?x99 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x225 (bvneg ?x99)))
 (let (($x208 (= ?x225 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x141 (= $x208 true)))
 (let ((?x245 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x178 (bvneg ?x245)))
 (let (($x106 (= ?x178 input.dst.llvm-%n)))
 (let (($x215 (= $x106 true)))
 (let (($x152 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x54 (= $x152 true)))
 (let (($x62 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x218 (= $x62 true)))
 (let (($x174 (forall ((input.ind-%var1811X (_ BitVec 32)) )(let ((?x98 (bvadd (bvmul input.ind-%var1811X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x98))))
 (let ((?x121 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x98 (_ bv2 32))) ?x111)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x98 (_ bv3 32))) ?x121)))
 (let ((?x186 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1811X)))
 (let (($x24 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1811X)))
 (=> $x24 (= ?x186 ?x253)))))))))
 ))
 (let (($x199 (forall ((input.ind-%var1810X (_ BitVec 32)) )(let (($x204 (and (bvule (_ bv0 32) input.ind-%var1810X) (bvult input.ind-%var1810X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x24 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1810X)))
 (= $x24 $x204))))
 ))
 (let (($x34 (and $x199 $x174)))
 (let (($x150 (= $x34 true)))
 (let (($x207 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x259 (= $x207 true)))
 (let (($x291 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x289 (= $x291 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x7 (= (_ bv0 32) ?x105)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x247 (= (_ bv0 32) ?x167)))
 (let ((?x288 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x213 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x288)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x144)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x95 (and $x117 $x43)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x240 (and $x269 $x95)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x190 (and $x290 $x169)))
 (let (($x192 (not $x190)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x49 (and $x83 $x239)))
 (let (($x230 (and (not $x49) $x192)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x173 $x23)))
 (let (($x265 (not $x44)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x67 $x17)))
 (let (($x145 (and (not $x139) $x265)))
 (let (($x201 (and (and (and (and (and (and $x145 $x230) $x205) $x179) $x240) $x213) $x247)))
 (let (($x295 (and $x201 $x7)))
 (let (($x257 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x260 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x260)))
 (let (($x285 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x260)))
 (let (($x254 (or false (or false (and (and true (or $x14 $x285)) (or $x114 $x257))))))
 (let (($x223 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x254)))
 (let (($x236 (and $x223 $x295)))
 (let (($x268 (= $x236 true)))
 (let ((?x148 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x281 (= (_ bv0 2) ?x148)))
 (let (($x275 (= $x281 true)))
 (let (($x220 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x278 (= $x220 true)))
 (let (($x197 (= ?x178 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x50 (= $x197 true)))
 (let (($x189 (and $x50 $x278)))
 (let (($x261 (and $x189 $x275)))
 (let (($x165 (and $x261 $x268)))
 (let (($x92 (and $x165 $x289)))
 (let (($x133 (and $x92 $x259)))
 (let (($x107 (and $x133 $x150)))
 (let (($x241 (and $x107 $x218)))
 (let (($x155 (and $x241 $x54)))
 (let (($x125 (and $x155 $x215)))
 (let (($x116 (and $x125 $x141)))
 (let (($x142 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x250 (and $x142 $x116)))
 (let (($x252 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x30 (and $x252 $x250)))
 (let (($x65 (forall ((input.ind-%var1821X (_ BitVec 32)) )(let (($x110 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1821X)))
 (=> $x110 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1821X) (_ bv0 32)))))
 ))
 (let (($x196 (forall ((input.ind-%var1820X (_ BitVec 32)) )(let (($x110 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1820X)))
 (= $x110 false)))
 ))
 (let (($x35 (and $x196 $x65)))
 (let (($x61 (and $x35 $x30)))
 (let (($x224 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x187 (and $x224 $x61)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let (($x242 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x177 (bvadd ?x94 (_ bv3 32))))
 (let (($x292 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x177)))
 (let (($x149 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x177)))
 (let (($x210 (or false (or false (and (and true (or $x33 $x149)) (or $x292 $x242))))))
 (let (($x101 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x210)))
 (let (($x73 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x210)))
 (let (($x89 (and $x73 $x187)))
 (let (($x60 (=> $x89 $x212)))
 (not $x60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x118 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x188 (not $x118)))
 (let (($x42 (= $x188 false)))
 (let (($x212 (= $x42 true)))
 (let ((?x99 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x225 (bvneg ?x99)))
 (let (($x208 (= ?x225 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x141 (= $x208 true)))
 (let ((?x245 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x178 (bvneg ?x245)))
 (let (($x106 (= ?x178 input.dst.llvm-%n)))
 (let (($x215 (= $x106 true)))
 (let (($x152 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x54 (= $x152 true)))
 (let (($x62 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x218 (= $x62 true)))
 (let (($x174 (forall ((input.ind-%var1811X (_ BitVec 32)) )(let ((?x98 (bvadd (bvmul input.ind-%var1811X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x98 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x98))))
 (let ((?x121 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x98 (_ bv2 32))) ?x111)))
 (let ((?x253 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x98 (_ bv3 32))) ?x121)))
 (let ((?x186 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1811X)))
 (let (($x24 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1811X)))
 (=> $x24 (= ?x186 ?x253)))))))))
 ))
 (let (($x199 (forall ((input.ind-%var1810X (_ BitVec 32)) )(let (($x204 (and (bvule (_ bv0 32) input.ind-%var1810X) (bvult input.ind-%var1810X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x24 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1810X)))
 (= $x24 $x204))))
 ))
 (let (($x34 (and $x199 $x174)))
 (let (($x150 (= $x34 true)))
 (let (($x207 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x259 (= $x207 true)))
 (let (($x291 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x289 (= $x291 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x7 (= (_ bv0 32) ?x105)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x247 (= (_ bv0 32) ?x167)))
 (let ((?x288 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x213 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x288)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x144)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x95 (and $x117 $x43)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x240 (and $x269 $x95)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x190 (and $x290 $x169)))
 (let (($x192 (not $x190)))
 (let (($x239 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x49 (and $x83 $x239)))
 (let (($x230 (and (not $x49) $x192)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x173 $x23)))
 (let (($x265 (not $x44)))
 (let (($x17 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x67 $x17)))
 (let (($x145 (and (not $x139) $x265)))
 (let (($x201 (and (and (and (and (and (and $x145 $x230) $x205) $x179) $x240) $x213) $x247)))
 (let (($x295 (and $x201 $x7)))
 (let (($x257 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x260 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x260)))
 (let (($x285 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x260)))
 (let (($x254 (or false (or false (and (and true (or $x14 $x285)) (or $x114 $x257))))))
 (let (($x223 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x254)))
 (let (($x236 (and $x223 $x295)))
 (let (($x268 (= $x236 true)))
 (let ((?x148 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x281 (= (_ bv0 2) ?x148)))
 (let (($x275 (= $x281 true)))
 (let (($x220 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x278 (= $x220 true)))
 (let (($x197 (= ?x178 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x50 (= $x197 true)))
 (let (($x189 (and $x50 $x278)))
 (let (($x261 (and $x189 $x275)))
 (let (($x165 (and $x261 $x268)))
 (let (($x92 (and $x165 $x289)))
 (let (($x133 (and $x92 $x259)))
 (let (($x107 (and $x133 $x150)))
 (let (($x241 (and $x107 $x218)))
 (let (($x155 (and $x241 $x54)))
 (let (($x125 (and $x155 $x215)))
 (let (($x116 (and $x125 $x141)))
 (let (($x142 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x250 (and $x142 $x116)))
 (let (($x252 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x30 (and $x252 $x250)))
 (let (($x65 (forall ((input.ind-%var1821X (_ BitVec 32)) )(let (($x110 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1821X)))
 (=> $x110 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1821X) (_ bv0 32)))))
 ))
 (let (($x196 (forall ((input.ind-%var1820X (_ BitVec 32)) )(let (($x110 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1820X)))
 (= $x110 false)))
 ))
 (let (($x35 (and $x196 $x65)))
 (let (($x61 (and $x35 $x30)))
 (let (($x224 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x187 (and $x224 $x61)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let (($x242 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x177 (bvadd ?x94 (_ bv3 32))))
 (let (($x292 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x177)))
 (let (($x149 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x177)))
 (let (($x210 (or false (or false (and (and true (or $x33 $x149)) (or $x292 $x242))))))
 (let (($x101 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x210)))
 (let (($x73 (=> (and $x118 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x210)))
 (let (($x89 (and $x73 $x187)))
 (let (($x60 (=> $x89 $x212)))
 (not $x60))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 2
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!7))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x3cc26a8c)
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x3cc26a8c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfb0d2648)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x8150b6d0)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x3cc26a8c)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x3cc26a8c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x8150b6d3)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xfb0d264b)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x8150b6d0)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfb0d2648)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x3cc26a8c)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun k!7 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (ite (= x!0 #x00000000) #x00000000
      (concat (k!7 (bvadd #x00000003 (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x00000002 (bvmul #x00000004 x!0)))
              (k!7 (bvadd #x00000001 (bvmul #x00000004 x!0)))
              (k!7 (bvmul #x00000004 x!0)))))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1!10 ((x!0 (_ BitVec 32))) Bool
    (ite (= x!0 #x00000000) true
      false))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!9 ((x!0 (_ BitVec 32))) (_ BitVec 32)
    (ite (bvule #x3cc26a8c x!0)
         (ite (bvule #x3cc26a8d x!0) #x3cc26a8d #x3cc26a8c)
         #x00000000))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    (input.spec-%var-m-0.L3%6%bbentry.0.1!10 (k!9 x!0)))
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.llvm-%m () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8))
    (_ as-array k!1))
  (define-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32)
    #x434c2808)
  (define-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32)
    #x434c2808)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32)
    #x434c2808)
  (define-fun input.dst.llvm-%n () (_ BitVec 32)
    #x434c2808)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000007)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000004)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-n-1 () (_ BitVec 32)
    #x434c2808)
  (define-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32)
    #x00000001)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    false)
  (define-fun k!1 ((x!0 (_ BitVec 32))) (_ BitVec 8)
    #x00)
  (define-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    #x00000000)
  (define-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((x!0 (_ BitVec 32))) (_ BitVec
     32)
    (concat (k!1 (bvadd #x00000003 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x00000002 (bvmul #x00000004 x!0)))
            (k!1 (bvadd #x00000001 (bvmul #x00000004 x!0)))
            (k!1 (bvmul #x00000004 x!0))))
  (define-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((x!0 (_ BitVec 32))) Bool
    (not (bvule #x434c2808 x!0)))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 68
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x120 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x301 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (or $x301 $x120)))
 (let (($x130 (= $x221 true)))
 (let ((?x214 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x296 (bvneg ?x214)))
 (let (($x246 (= ?x296 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x217 (= $x246 true)))
 (let ((?x166 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x270 (bvneg ?x166)))
 (let (($x115 (= ?x270 input.dst.llvm-%n)))
 (let (($x185 (= $x115 true)))
 (let (($x55 (= ?x270 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x162 (= $x55 true)))
 (let (($x123 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x151 (= $x123 true)))
 (let (($x164 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x232 (= $x164 true)))
 (let (($x180 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x129 (= $x180 true)))
 (let (($x127 (forall ((input.ind-%var1879X (_ BitVec 32)) )(let ((?x208 (bvadd (bvmul input.ind-%var1879X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x208 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x208))))
 (let ((?x89 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x208 (_ bv2 32))) ?x30)))
 (let ((?x212 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x208 (_ bv3 32))) ?x89)))
 (let ((?x121 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1879X)))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1879X)))
 (=> $x199 (= ?x121 ?x212)))))))))
 ))
 (let (($x147 (forall ((input.ind-%var1878X (_ BitVec 32)) )(let (($x176 (and (bvule (_ bv0 32) input.ind-%var1878X) (bvult input.ind-%var1878X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1878X)))
 (= $x199 $x176))))
 ))
 (let (($x267 (and $x147 $x127)))
 (let (($x58 (= $x267 true)))
 (let (($x24 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x20 (= $x24 true)))
 (let (($x92 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x207 (= $x92 true)))
 (let ((?x213 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x213)))
 (let ((?x293 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x288 (= (_ bv0 32) ?x293)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x95)))
 (let ((?x269 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x117 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x269)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x144 (and $x18 $x117)))
 (let (($x179 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (and $x179 $x144)))
 (let (($x72 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x190 (and $x290 $x169)))
 (let (($x192 (not $x190)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (and $x239 $x49)))
 (let (($x38 (and (not $x226) $x192)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x173 $x23)))
 (let (($x265 (not $x44)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (and $x108 $x74)))
 (let (($x83 (and (not $x51) $x265)))
 (let (($x295 (and (and (and (and (and (and $x83 $x38) $x205) $x72) $x43) $x240) $x288)))
 (let (($x236 (and $x295 $x91)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x285 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x244 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x15 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x285)))
 (let (($x67 (or false (or false (and (and true (or $x298 $x15)) (or $x244 $x90))))))
 (let (($x139 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x67)))
 (let (($x268 (and $x139 $x236)))
 (let (($x165 (= $x268 true)))
 (let ((?x281 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x275 (= (_ bv0 2) ?x281)))
 (let (($x261 (= $x275 true)))
 (let (($x291 (and $x261 $x165)))
 (let (($x259 (and $x291 $x207)))
 (let (($x39 (and $x259 $x20)))
 (let (($x103 (and $x39 $x58)))
 (let (($x263 (and $x103 $x129)))
 (let (($x36 (and $x263 $x232)))
 (let (($x198 (and $x36 $x151)))
 (let (($x135 (and $x198 $x162)))
 (let (($x287 (and $x135 $x185)))
 (let (($x86 (and $x287 $x217)))
 (let (($x88 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x235 (and $x88 $x86)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x26 (and $x220 $x235)))
 (let (($x50 (forall ((input.ind-%var1889X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1889X)))
 (=> $x12 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1889X) (_ bv0 32)))))
 ))
 (let (($x65 (forall ((input.ind-%var1888X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1888X)))
 (= $x12 false)))
 ))
 (let (($x76 (and $x65 $x50)))
 (let (($x119 (and $x76 $x26)))
 (let (($x231 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x31 (and $x231 $x119)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let (($x57 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd ?x94 (_ bv3 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x87 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x149)))
 (let (($x73 (or false (or false (and (and true (or $x71 $x87)) (or $x175 $x57))))))
 (let (($x224 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x73)))
 (let (($x206 (=> (and $x120 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x73)))
 (let (($x78 (and $x206 $x31)))
 (let (($x56 (=> $x78 $x130)))
 (not $x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x120 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x301 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (or $x301 $x120)))
 (let (($x130 (= $x221 true)))
 (let ((?x214 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x296 (bvneg ?x214)))
 (let (($x246 (= ?x296 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x217 (= $x246 true)))
 (let ((?x166 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x270 (bvneg ?x166)))
 (let (($x115 (= ?x270 input.dst.llvm-%n)))
 (let (($x185 (= $x115 true)))
 (let (($x55 (= ?x270 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x162 (= $x55 true)))
 (let (($x123 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x151 (= $x123 true)))
 (let (($x164 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x232 (= $x164 true)))
 (let (($x180 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x129 (= $x180 true)))
 (let (($x127 (forall ((input.ind-%var1879X (_ BitVec 32)) )(let ((?x208 (bvadd (bvmul input.ind-%var1879X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x208 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x208))))
 (let ((?x89 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x208 (_ bv2 32))) ?x30)))
 (let ((?x212 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x208 (_ bv3 32))) ?x89)))
 (let ((?x121 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1879X)))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1879X)))
 (=> $x199 (= ?x121 ?x212)))))))))
 ))
 (let (($x147 (forall ((input.ind-%var1878X (_ BitVec 32)) )(let (($x176 (and (bvule (_ bv0 32) input.ind-%var1878X) (bvult input.ind-%var1878X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x199 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1878X)))
 (= $x199 $x176))))
 ))
 (let (($x267 (and $x147 $x127)))
 (let (($x58 (= $x267 true)))
 (let (($x24 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x20 (= $x24 true)))
 (let (($x92 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x207 (= $x92 true)))
 (let ((?x213 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x91 (= (_ bv0 32) ?x213)))
 (let ((?x293 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x288 (= (_ bv0 32) ?x293)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x95)))
 (let ((?x269 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x117 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x269)))
 (let (($x18 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x144 (and $x18 $x117)))
 (let (($x179 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (and $x179 $x144)))
 (let (($x72 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x205 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x290 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x190 (and $x290 $x169)))
 (let (($x192 (not $x190)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x226 (and $x239 $x49)))
 (let (($x38 (and (not $x226) $x192)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x173 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x44 (and $x173 $x23)))
 (let (($x265 (not $x44)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (and $x108 $x74)))
 (let (($x83 (and (not $x51) $x265)))
 (let (($x295 (and (and (and (and (and (and $x83 $x38) $x205) $x72) $x43) $x240) $x288)))
 (let (($x236 (and $x295 $x91)))
 (let (($x90 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x285 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x244 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x285)))
 (let (($x15 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x285)))
 (let (($x67 (or false (or false (and (and true (or $x298 $x15)) (or $x244 $x90))))))
 (let (($x139 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x67)))
 (let (($x268 (and $x139 $x236)))
 (let (($x165 (= $x268 true)))
 (let ((?x281 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x275 (= (_ bv0 2) ?x281)))
 (let (($x261 (= $x275 true)))
 (let (($x291 (and $x261 $x165)))
 (let (($x259 (and $x291 $x207)))
 (let (($x39 (and $x259 $x20)))
 (let (($x103 (and $x39 $x58)))
 (let (($x263 (and $x103 $x129)))
 (let (($x36 (and $x263 $x232)))
 (let (($x198 (and $x36 $x151)))
 (let (($x135 (and $x198 $x162)))
 (let (($x287 (and $x135 $x185)))
 (let (($x86 (and $x287 $x217)))
 (let (($x88 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x235 (and $x88 $x86)))
 (let (($x220 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x26 (and $x220 $x235)))
 (let (($x50 (forall ((input.ind-%var1889X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1889X)))
 (=> $x12 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1889X) (_ bv0 32)))))
 ))
 (let (($x65 (forall ((input.ind-%var1888X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1888X)))
 (= $x12 false)))
 ))
 (let (($x76 (and $x65 $x50)))
 (let (($x119 (and $x76 $x26)))
 (let (($x231 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x31 (and $x231 $x119)))
 (let ((?x63 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x94 (bvadd input.dst.llvm-%m ?x63)))
 (let (($x57 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x149 (bvadd ?x94 (_ bv3 32))))
 (let (($x175 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x149)))
 (let (($x87 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x149)))
 (let (($x73 (or false (or false (and (and true (or $x71 $x87)) (or $x175 $x57))))))
 (let (($x224 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) $x73)))
 (let (($x206 (=> (and $x120 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) $x73)))
 (let (($x78 (and $x206 $x31)))
 (let (($x56 (=> $x78 $x130)))
 (not $x56))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 69
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x22 (forall ((input.ind-%var1919X (_ BitVec 32)) )(let ((?x214 (bvadd (bvmul input.ind-%var1919X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x86 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x214))))
 (let ((?x119 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv2 32))) ?x86)))
 (let ((?x301 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv3 32))) ?x119)))
 (let ((?x127 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1919X)))
 (let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1919X)))
 (=> $x208 (= ?x127 ?x301)))))))))
 ))
 (let (($x215 (forall ((input.ind-%var1918X (_ BitVec 32)) )(let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1918X)))
 (= $x208 (and (bvule (_ bv0 32) input.ind-%var1918X) (bvult input.ind-%var1918X input.dst.llvm-%n)))))
 ))
 (let (($x248 (and $x215 $x22)))
 (let (($x156 (= $x248 true)))
 (let ((?x50 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x76 (bvneg ?x50)))
 (let (($x109 (= ?x76 input.dst.llvm-%n)))
 (let (($x194 (= $x109 true)))
 (let ((?x35 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x252 (= (_ bv0 2) ?x35)))
 (let (($x110 (= $x252 true)))
 (let (($x186 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x253 (= $x186 true)))
 (let (($x56 (forall ((input.ind-%var1899X (_ BitVec 32)) )(let ((?x214 (bvadd (bvmul input.ind-%var1899X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x86 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x214))))
 (let ((?x119 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv2 32))) ?x86)))
 (let ((?x301 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv3 32))) ?x119)))
 (let ((?x127 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1899X)))
 (let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1899X)))
 (=> $x208 (= ?x127 ?x301)))))))))
 ))
 (let (($x89 (forall ((input.ind-%var1898X (_ BitVec 32)) )(let (($x250 (bvule (_ bv0 32) input.ind-%var1898X)))
 (let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1898X)))
 (= $x208 (and $x250 (bvult input.ind-%var1898X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x202 (and $x89 $x56)))
 (let (($x171 (= $x202 true)))
 (let (($x176 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x157 (not $x176)))
 (let (($x147 (= $x157 true)))
 (let (($x39 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x199 (= $x39 true)))
 (let ((?x91 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x236 (= (_ bv0 32) ?x91)))
 (let ((?x295 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x213 (= (_ bv0 32) ?x295)))
 (let ((?x293 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x288 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x293)))
 (let ((?x105 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x105)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x240 (and $x144 $x95)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x117 $x240)))
 (let (($x269 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x205 (and $x167 $x255)))
 (let (($x247 (not $x205)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x190 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x190 $x192)))
 (let (($x72 (and (not $x38) $x247)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x226 (and $x239 $x49)))
 (let (($x230 (not $x226)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (and $x17 $x285)))
 (let (($x169 (and (not $x83) $x230)))
 (let (($x207 (and (and (and (and (and (and $x169 $x72) $x179) $x269) $x7) $x288) $x213)))
 (let (($x259 (and $x207 $x236)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x244 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x244)))
 (let (($x82 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x244)))
 (let (($x23 (or false (or false (and (and true (or $x90 $x82)) (or $x108 $x74))))))
 (let (($x265 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x133 (and $x265 $x259)))
 (let (($x24 (= $x133 true)))
 (let (($x281 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x275 (= $x281 true)))
 (let (($x189 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x88 (= $x189 true)))
 (let (($x5 (= ?x76 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x220 (= $x5 true)))
 (let (($x142 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x178 (= $x142 true)))
 (let ((?x231 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x196 (bvneg ?x231)))
 (let (($x137 (= ?x196 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x65 (= $x137 true)))
 (let (($x197 (and $x65 $x178)))
 (let (($x278 (and $x197 $x220)))
 (let (($x148 (and $x278 $x88)))
 (let (($x261 (and $x148 $x275)))
 (let (($x20 (and $x261 $x24)))
 (let (($x286 (and $x20 $x199)))
 (let (($x121 (and $x286 $x147)))
 (let (($x69 (and $x121 $x171)))
 (let (($x41 (and $x69 $x253)))
 (let (($x8 (and $x41 $x110)))
 (let (($x111 (and $x8 $x194)))
 (let (($x206 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x204 (and $x206 $x111)))
 (let (($x73 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x136 (and $x73 $x204)))
 (let (($x126 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x234 (and $x126 $x136)))
 (let (($x175 (forall ((input.ind-%var1909X (_ BitVec 32)) )(let (($x63 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1909X)))
 (=> $x63 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1909X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var1908X (_ BitVec 32)) )(let (($x63 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1908X)))
 (= $x63 false)))
 ))
 (let (($x242 (and $x102 $x175)))
 (let (($x146 (and $x242 $x234)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x174 (and $x16 $x146)))
 (let (($x276 (=> $x174 $x156)))
 (not $x276)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x22 (forall ((input.ind-%var1919X (_ BitVec 32)) )(let ((?x214 (bvadd (bvmul input.ind-%var1919X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x86 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x214))))
 (let ((?x119 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv2 32))) ?x86)))
 (let ((?x301 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv3 32))) ?x119)))
 (let ((?x127 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1919X)))
 (let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1919X)))
 (=> $x208 (= ?x127 ?x301)))))))))
 ))
 (let (($x215 (forall ((input.ind-%var1918X (_ BitVec 32)) )(let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1918X)))
 (= $x208 (and (bvule (_ bv0 32) input.ind-%var1918X) (bvult input.ind-%var1918X input.dst.llvm-%n)))))
 ))
 (let (($x248 (and $x215 $x22)))
 (let (($x156 (= $x248 true)))
 (let ((?x50 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x76 (bvneg ?x50)))
 (let (($x109 (= ?x76 input.dst.llvm-%n)))
 (let (($x194 (= $x109 true)))
 (let ((?x35 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x252 (= (_ bv0 2) ?x35)))
 (let (($x110 (= $x252 true)))
 (let (($x186 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x253 (= $x186 true)))
 (let (($x56 (forall ((input.ind-%var1899X (_ BitVec 32)) )(let ((?x214 (bvadd (bvmul input.ind-%var1899X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x86 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x214))))
 (let ((?x119 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv2 32))) ?x86)))
 (let ((?x301 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x214 (_ bv3 32))) ?x119)))
 (let ((?x127 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1899X)))
 (let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1899X)))
 (=> $x208 (= ?x127 ?x301)))))))))
 ))
 (let (($x89 (forall ((input.ind-%var1898X (_ BitVec 32)) )(let (($x250 (bvule (_ bv0 32) input.ind-%var1898X)))
 (let (($x208 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1898X)))
 (= $x208 (and $x250 (bvult input.ind-%var1898X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x202 (and $x89 $x56)))
 (let (($x171 (= $x202 true)))
 (let (($x176 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x157 (not $x176)))
 (let (($x147 (= $x157 true)))
 (let (($x39 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x199 (= $x39 true)))
 (let ((?x91 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x236 (= (_ bv0 32) ?x91)))
 (let ((?x295 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x213 (= (_ bv0 32) ?x295)))
 (let ((?x293 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x288 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x293)))
 (let ((?x105 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x95 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x105)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x240 (and $x144 $x95)))
 (let (($x117 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x117 $x240)))
 (let (($x269 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x205 (and $x167 $x255)))
 (let (($x247 (not $x205)))
 (let (($x192 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x190 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x190 $x192)))
 (let (($x72 (and (not $x38) $x247)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x239 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x226 (and $x239 $x49)))
 (let (($x230 (not $x226)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x83 (and $x17 $x285)))
 (let (($x169 (and (not $x83) $x230)))
 (let (($x207 (and (and (and (and (and (and $x169 $x72) $x179) $x269) $x7) $x288) $x213)))
 (let (($x259 (and $x207 $x236)))
 (let (($x74 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x244 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x108 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x244)))
 (let (($x82 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x244)))
 (let (($x23 (or false (or false (and (and true (or $x90 $x82)) (or $x108 $x74))))))
 (let (($x265 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x23)))
 (let (($x133 (and $x265 $x259)))
 (let (($x24 (= $x133 true)))
 (let (($x281 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x275 (= $x281 true)))
 (let (($x189 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x88 (= $x189 true)))
 (let (($x5 (= ?x76 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x220 (= $x5 true)))
 (let (($x142 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x178 (= $x142 true)))
 (let ((?x231 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x196 (bvneg ?x231)))
 (let (($x137 (= ?x196 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x65 (= $x137 true)))
 (let (($x197 (and $x65 $x178)))
 (let (($x278 (and $x197 $x220)))
 (let (($x148 (and $x278 $x88)))
 (let (($x261 (and $x148 $x275)))
 (let (($x20 (and $x261 $x24)))
 (let (($x286 (and $x20 $x199)))
 (let (($x121 (and $x286 $x147)))
 (let (($x69 (and $x121 $x171)))
 (let (($x41 (and $x69 $x253)))
 (let (($x8 (and $x41 $x110)))
 (let (($x111 (and $x8 $x194)))
 (let (($x206 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x204 (and $x206 $x111)))
 (let (($x73 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x136 (and $x73 $x204)))
 (let (($x126 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x234 (and $x126 $x136)))
 (let (($x175 (forall ((input.ind-%var1909X (_ BitVec 32)) )(let (($x63 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1909X)))
 (=> $x63 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1909X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var1908X (_ BitVec 32)) )(let (($x63 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1908X)))
 (= $x63 false)))
 ))
 (let (($x242 (and $x102 $x175)))
 (let (($x146 (and $x242 $x234)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x174 (and $x16 $x146)))
 (let (($x276 (=> $x174 $x156)))
 (not $x276)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 70
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x46 (not $x124)))
 (let (($x280 (or $x124 $x46)))
 (let (($x273 (= $x280 true)))
 (let ((?x115 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x60 (bvneg ?x115)))
 (let (($x185 (= ?x60 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x177 (= $x185 true)))
 (let ((?x23 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x265 (bvneg ?x23)))
 (let (($x225 (= ?x265 input.dst.llvm-%n)))
 (let (($x61 (= $x225 true)))
 (let (($x151 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x270 (= $x151 true)))
 (let (($x36 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x123 (= $x36 true)))
 (let (($x55 (forall ((input.ind-%var1929X (_ BitVec 32)) )(let ((?x81 (bvadd (bvmul input.ind-%var1929X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x79 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x81))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x81 (_ bv2 32))) ?x79)))
 (let ((?x218 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x81 (_ bv3 32))) ?x209)))
 (let ((?x136 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1929X)))
 (let (($x171 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1929X)))
 (=> $x171 (= ?x136 ?x218)))))))))
 ))
 (let (($x109 (forall ((input.ind-%var1928X (_ BitVec 32)) )(let (($x110 (and (bvule (_ bv0 32) input.ind-%var1928X) (bvult input.ind-%var1928X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x171 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1928X)))
 (= $x171 $x110))))
 ))
 (let (($x162 (and $x109 $x55)))
 (let (($x113 (= $x162 true)))
 (let (($x301 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x221 (= $x301 true)))
 (let (($x296 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x86 (= $x296 true)))
 (let ((?x58 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x58)))
 (let ((?x89 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x89)))
 (let ((?x141 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x141)))
 (let ((?x121 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x208 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x121)))
 (let (($x147 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x250 (and $x147 $x208)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x157 $x250)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x259 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x236 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x133 (and $x236 $x259)))
 (let (($x24 (not $x133)))
 (let (($x207 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x213 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (and $x213 $x207)))
 (let (($x39 (and (not $x91) $x24)))
 (let (($x289 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x293 (and $x7 $x289)))
 (let (($x288 (not $x293)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (and $x167 $x255)))
 (let (($x295 (and (not $x240) $x288)))
 (let (($x198 (and (and (and (and (and (and $x295 $x39) $x286) $x176) $x116) $x30) $x127)))
 (let (($x235 (and $x198 $x180)))
 (let (($x269 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x72 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x18 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x72)))
 (let (($x201 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x72)))
 (let (($x43 (or false (or false (and (and true (or $x268 $x201)) (or $x18 $x269))))))
 (let (($x95 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x43)))
 (let (($x26 (and $x95 $x235)))
 (let (($x246 (= $x26 true)))
 (let ((?x169 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x190 (= (_ bv0 2) ?x169)))
 (let (($x192 (= $x190 true)))
 (let (($x239 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x49 (= $x239 true)))
 (let (($x17 (= ?x265 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x285 (= $x17 true)))
 (let (($x226 (and $x285 $x49)))
 (let (($x38 (and $x226 $x192)))
 (let (($x217 (and $x38 $x246)))
 (let (($x119 (and $x217 $x86)))
 (let (($x130 (and $x119 $x221)))
 (let (($x166 (and $x130 $x113)))
 (let (($x232 (and $x166 $x123)))
 (let (($x135 (and $x232 $x270)))
 (let (($x187 (and $x135 $x61)))
 (let (($x219 (and $x187 $x177)))
 (let (($x145 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x262 (and $x145 $x219)))
 (let (($x139 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x155 (and $x139 $x262)))
 (let (($x223 (forall ((input.ind-%var1939X (_ BitVec 32)) )(let (($x189 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1939X)))
 (=> $x189 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1939X) (_ bv0 32)))))
 ))
 (let (($x275 (forall ((input.ind-%var1938X (_ BitVec 32)) )(let (($x189 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1938X)))
 (= $x189 false)))
 ))
 (let (($x67 (and $x275 $x223)))
 (let (($x241 (and $x67 $x155)))
 (let (($x76 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x152 (and $x76 $x241)))
 (let ((?x97 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x102 (bvadd input.dst.llvm-%m ?x97)))
 (let (($x137 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd ?x102 (_ bv3 32))))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x224 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x101)))
 (let (($x178 (or false (or false (and (and true (or $x73 $x224)) (or $x12 $x137))))))
 (let (($x50 (=> (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32))) $x178)))
 (let (($x33 (=> (and $x124 (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32)))) $x178)))
 (let (($x125 (and $x33 $x152)))
 (let (($x75 (=> $x125 $x273)))
 (not $x75))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x124 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x46 (not $x124)))
 (let (($x280 (or $x124 $x46)))
 (let (($x273 (= $x280 true)))
 (let ((?x115 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x60 (bvneg ?x115)))
 (let (($x185 (= ?x60 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x177 (= $x185 true)))
 (let ((?x23 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x265 (bvneg ?x23)))
 (let (($x225 (= ?x265 input.dst.llvm-%n)))
 (let (($x61 (= $x225 true)))
 (let (($x151 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x270 (= $x151 true)))
 (let (($x36 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x123 (= $x36 true)))
 (let (($x55 (forall ((input.ind-%var1929X (_ BitVec 32)) )(let ((?x81 (bvadd (bvmul input.ind-%var1929X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x79 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x81 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x81))))
 (let ((?x209 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x81 (_ bv2 32))) ?x79)))
 (let ((?x218 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x81 (_ bv3 32))) ?x209)))
 (let ((?x136 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var1929X)))
 (let (($x171 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1929X)))
 (=> $x171 (= ?x136 ?x218)))))))))
 ))
 (let (($x109 (forall ((input.ind-%var1928X (_ BitVec 32)) )(let (($x110 (and (bvule (_ bv0 32) input.ind-%var1928X) (bvult input.ind-%var1928X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x171 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var1928X)))
 (= $x171 $x110))))
 ))
 (let (($x162 (and $x109 $x55)))
 (let (($x113 (= $x162 true)))
 (let (($x301 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x221 (= $x301 true)))
 (let (($x296 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x86 (= $x296 true)))
 (let ((?x58 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x180 (= (_ bv0 32) ?x58)))
 (let ((?x89 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x127 (= (_ bv0 32) ?x89)))
 (let ((?x141 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x30 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x141)))
 (let ((?x121 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x208 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x121)))
 (let (($x147 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x250 (and $x147 $x208)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x116 (and $x157 $x250)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x259 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x236 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x133 (and $x236 $x259)))
 (let (($x24 (not $x133)))
 (let (($x207 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x213 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x91 (and $x213 $x207)))
 (let (($x39 (and (not $x91) $x24)))
 (let (($x289 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x293 (and $x7 $x289)))
 (let (($x288 (not $x293)))
 (let (($x255 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x167 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x240 (and $x167 $x255)))
 (let (($x295 (and (not $x240) $x288)))
 (let (($x198 (and (and (and (and (and (and $x295 $x39) $x286) $x176) $x116) $x30) $x127)))
 (let (($x235 (and $x198 $x180)))
 (let (($x269 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x72 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x18 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x72)))
 (let (($x201 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x268 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x72)))
 (let (($x43 (or false (or false (and (and true (or $x268 $x201)) (or $x18 $x269))))))
 (let (($x95 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x43)))
 (let (($x26 (and $x95 $x235)))
 (let (($x246 (= $x26 true)))
 (let ((?x169 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x190 (= (_ bv0 2) ?x169)))
 (let (($x192 (= $x190 true)))
 (let (($x239 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x49 (= $x239 true)))
 (let (($x17 (= ?x265 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x285 (= $x17 true)))
 (let (($x226 (and $x285 $x49)))
 (let (($x38 (and $x226 $x192)))
 (let (($x217 (and $x38 $x246)))
 (let (($x119 (and $x217 $x86)))
 (let (($x130 (and $x119 $x221)))
 (let (($x166 (and $x130 $x113)))
 (let (($x232 (and $x166 $x123)))
 (let (($x135 (and $x232 $x270)))
 (let (($x187 (and $x135 $x61)))
 (let (($x219 (and $x187 $x177)))
 (let (($x145 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x262 (and $x145 $x219)))
 (let (($x139 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x155 (and $x139 $x262)))
 (let (($x223 (forall ((input.ind-%var1939X (_ BitVec 32)) )(let (($x189 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1939X)))
 (=> $x189 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1939X) (_ bv0 32)))))
 ))
 (let (($x275 (forall ((input.ind-%var1938X (_ BitVec 32)) )(let (($x189 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1938X)))
 (= $x189 false)))
 ))
 (let (($x67 (and $x275 $x223)))
 (let (($x241 (and $x67 $x155)))
 (let (($x76 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x152 (and $x76 $x241)))
 (let ((?x97 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x102 (bvadd input.dst.llvm-%m ?x97)))
 (let (($x137 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x101 (bvadd ?x102 (_ bv3 32))))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x101)))
 (let (($x224 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x101)))
 (let (($x178 (or false (or false (and (and true (or $x73 $x224)) (or $x12 $x137))))))
 (let (($x50 (=> (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32))) $x178)))
 (let (($x33 (=> (and $x124 (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32)))) $x178)))
 (let (($x125 (and $x33 $x152)))
 (let (($x75 (=> $x125 $x273)))
 (not $x75))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 71
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x295 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x213 (= (_ bv0 32) ?x295)))
 (let ((?x293 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x288 (= (_ bv0 32) ?x293)))
 (let ((?x7 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x289 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x7)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x255 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x167)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x240 (and $x43 $x255)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (and $x144 $x240)))
 (let (($x117 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x269 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x268 (and $x105 $x72)))
 (let (($x201 (not $x268)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x247 (and $x38 $x205)))
 (let (($x165 (and (not $x247) $x201)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x230 (and $x49 $x226)))
 (let (($x169 (not $x230)))
 (let (($x290 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x239 (and $x83 $x290)))
 (let (($x192 (and (not $x239) $x169)))
 (let (($x133 (and (and (and (and (and (and $x192 $x165) $x269) $x117) $x92) $x289) $x288)))
 (let (($x24 (and $x133 $x213)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x244 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x244)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x244)))
 (let (($x265 (or false (or false (and (and true (or $x82 $x254)) (or $x74 $x51))))))
 (let (($x285 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x265)))
 (let (($x87 (and $x285 $x24)))
 (let (($x212 (= $x87 true)))
 (let ((?x176 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x30 (concat ?x141 (concat ?x250 (concat ?x157 ?x176)))))
 (let (($x136 (= ?x30 input.dst.llvm-%n)))
 (let (($x146 (= $x136 true)))
 (let ((?x127 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x86 (concat ?x296 (concat ?x26 (concat ?x58 ?x127)))))
 (let (($x110 (= ?x86 input.dst.llvm-%m)))
 (let (($x8 (= $x110 true)))
 (let (($x119 (= input.dst.llvm-%m ?x86)))
 (let (($x78 (= input.dst.llvm-%n ?x30)))
 (let (($x301 (and $x78 $x119)))
 (let (($x286 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x221 (and $x286 $x301)))
 (let (($x252 (and (and (and $x285 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x24) $x221)))
 (let (($x35 (= $x252 true)))
 (let (($x109 (and $x35 $x8)))
 (let (($x71 (and $x109 $x146)))
 (let (($x50 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x81 (and $x50 $x71)))
 (let (($x211 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x96 (and $x211 $x81)))
 (let (($x196 (forall ((input.ind-%var1949X (_ BitVec 32)) )(let (($x97 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1949X)))
 (=> $x97 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1949X) (_ bv0 32)))))
 ))
 (let (($x197 (forall ((input.ind-%var1948X (_ BitVec 32)) )(let (($x97 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1948X)))
 (= $x97 false)))
 ))
 (let (($x137 (and $x197 $x196)))
 (let (($x42 (and $x137 $x96)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x248 (and $x16 $x42)))
 (let (($x118 (=> $x248 $x212)))
 (not $x118)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x295 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x213 (= (_ bv0 32) ?x295)))
 (let ((?x293 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x288 (= (_ bv0 32) ?x293)))
 (let ((?x7 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x289 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x7)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x255 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x167)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x240 (and $x43 $x255)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x92 (and $x144 $x240)))
 (let (($x117 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x269 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x105 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x268 (and $x105 $x72)))
 (let (($x201 (not $x268)))
 (let (($x205 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x247 (and $x38 $x205)))
 (let (($x165 (and (not $x247) $x201)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x230 (and $x49 $x226)))
 (let (($x169 (not $x230)))
 (let (($x290 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x239 (and $x83 $x290)))
 (let (($x192 (and (not $x239) $x169)))
 (let (($x133 (and (and (and (and (and (and $x192 $x165) $x269) $x117) $x92) $x289) $x288)))
 (let (($x24 (and $x133 $x213)))
 (let (($x51 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x244 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x244)))
 (let (($x254 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x244)))
 (let (($x265 (or false (or false (and (and true (or $x82 $x254)) (or $x74 $x51))))))
 (let (($x285 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x265)))
 (let (($x87 (and $x285 $x24)))
 (let (($x212 (= $x87 true)))
 (let ((?x176 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x30 (concat ?x141 (concat ?x250 (concat ?x157 ?x176)))))
 (let (($x136 (= ?x30 input.dst.llvm-%n)))
 (let (($x146 (= $x136 true)))
 (let ((?x127 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x26 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x296 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x86 (concat ?x296 (concat ?x26 (concat ?x58 ?x127)))))
 (let (($x110 (= ?x86 input.dst.llvm-%m)))
 (let (($x8 (= $x110 true)))
 (let (($x119 (= input.dst.llvm-%m ?x86)))
 (let (($x78 (= input.dst.llvm-%n ?x30)))
 (let (($x301 (and $x78 $x119)))
 (let (($x286 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x221 (and $x286 $x301)))
 (let (($x252 (and (and (and $x285 (= input.spec-%var-n-1 input.dst.llvm-%n)) $x24) $x221)))
 (let (($x35 (= $x252 true)))
 (let (($x109 (and $x35 $x8)))
 (let (($x71 (and $x109 $x146)))
 (let (($x50 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x81 (and $x50 $x71)))
 (let (($x211 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x96 (and $x211 $x81)))
 (let (($x196 (forall ((input.ind-%var1949X (_ BitVec 32)) )(let (($x97 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1949X)))
 (=> $x97 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1949X) (_ bv0 32)))))
 ))
 (let (($x197 (forall ((input.ind-%var1948X (_ BitVec 32)) )(let (($x97 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1948X)))
 (= $x97 false)))
 ))
 (let (($x137 (and $x197 $x196)))
 (let (($x42 (and $x137 $x96)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x248 (and $x16 $x42)))
 (let (($x118 (=> $x248 $x212)))
 (not $x118)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 72
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x210 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x27 (bvneg ?x210)))
 (let (($x194 (= ?x27 input.spec-%var-n-1)))
 (let (($x64 (= $x194 true)))
 (let ((?x38 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x247 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x207 (concat ?x165 (concat ?x72 (concat ?x247 ?x38)))))
 (let (($x118 (= input.dst.llvm-%m ?x207)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x190 (concat ?x239 (concat ?x278 (concat ?x23 ?x145)))))
 (let (($x212 (= input.dst.llvm-%n ?x190)))
 (let (($x45 (and $x212 $x118)))
 (let (($x87 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x33 (and $x87 $x45)))
 (let ((?x35 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x110 (= (_ bv0 32) ?x35)))
 (let ((?x221 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x252 (= (_ bv0 32) ?x221)))
 (let ((?x119 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x119)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x127)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x246 (and $x58 $x180)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (and $x198 $x246)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x235 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x30 (and $x147 $x116)))
 (let (($x78 (not $x30)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x214 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x176 (and $x214 $x157)))
 (let (($x296 (and (not $x176) $x78)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x263 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (and $x263 $x31)))
 (let (($x121 (not $x141)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (and $x144 $x199)))
 (let (($x250 (and (not $x286) $x121)))
 (let (($x81 (and (and (and (and (and (and $x250 $x296) $x235) $x26) $x86) $x301) $x252)))
 (let (($x96 (and $x81 $x110)))
 (let (($x20 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x240 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x240)))
 (let (($x236 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x240)))
 (let (($x171 (or false (or false (and (and true (or $x92 $x236)) (or $x288 $x133))))))
 (let (($x287 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x171)))
 (let (($x25 (and (and (and $x287 $x20) $x96) $x33)))
 (let (($x102 (= $x25 true)))
 (let (($x269 (= ?x207 input.dst.llvm-%m)))
 (let (($x91 (= $x269 true)))
 (let (($x226 (= ?x190 input.dst.llvm-%n)))
 (let (($x230 (= $x226 true)))
 (let (($x291 (and $x230 $x91)))
 (let (($x126 (and $x291 $x102)))
 (let (($x67 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x101 (and $x67 $x126)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x124 (and $x44 $x101)))
 (let (($x275 (forall ((input.ind-%var1959X (_ BitVec 32)) )(let (($x197 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1959X)))
 (=> $x197 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1959X) (_ bv0 32)))))
 ))
 (let (($x12 (forall ((input.ind-%var1958X (_ BitVec 32)) )(let (($x197 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1958X)))
 (= $x197 false)))
 ))
 (let (($x244 (and $x12 $x275)))
 (let (($x103 (and $x244 $x124)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x52 (and $x16 $x103)))
 (let (($x79 (=> $x52 $x64)))
 (not $x79))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x210 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x27 (bvneg ?x210)))
 (let (($x194 (= ?x27 input.spec-%var-n-1)))
 (let (($x64 (= $x194 true)))
 (let ((?x38 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x247 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x207 (concat ?x165 (concat ?x72 (concat ?x247 ?x38)))))
 (let (($x118 (= input.dst.llvm-%m ?x207)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x23 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x190 (concat ?x239 (concat ?x278 (concat ?x23 ?x145)))))
 (let (($x212 (= input.dst.llvm-%n ?x190)))
 (let (($x45 (and $x212 $x118)))
 (let (($x87 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x33 (and $x87 $x45)))
 (let ((?x35 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x110 (= (_ bv0 32) ?x35)))
 (let ((?x221 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x252 (= (_ bv0 32) ?x221)))
 (let ((?x119 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x301 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x119)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x127)))
 (let (($x58 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x246 (and $x58 $x180)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (and $x198 $x246)))
 (let (($x26 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x235 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x147 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x30 (and $x147 $x116)))
 (let (($x78 (not $x30)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x214 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x176 (and $x214 $x157)))
 (let (($x296 (and (not $x176) $x78)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x263 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (and $x263 $x31)))
 (let (($x121 (not $x141)))
 (let (($x199 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x286 (and $x144 $x199)))
 (let (($x250 (and (not $x286) $x121)))
 (let (($x81 (and (and (and (and (and (and $x250 $x296) $x235) $x26) $x86) $x301) $x252)))
 (let (($x96 (and $x81 $x110)))
 (let (($x20 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x240 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x240)))
 (let (($x236 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x240)))
 (let (($x171 (or false (or false (and (and true (or $x92 $x236)) (or $x288 $x133))))))
 (let (($x287 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x171)))
 (let (($x25 (and (and (and $x287 $x20) $x96) $x33)))
 (let (($x102 (= $x25 true)))
 (let (($x269 (= ?x207 input.dst.llvm-%m)))
 (let (($x91 (= $x269 true)))
 (let (($x226 (= ?x190 input.dst.llvm-%n)))
 (let (($x230 (= $x226 true)))
 (let (($x291 (and $x230 $x91)))
 (let (($x126 (and $x291 $x102)))
 (let (($x67 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x101 (and $x67 $x126)))
 (let (($x44 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x124 (and $x44 $x101)))
 (let (($x275 (forall ((input.ind-%var1959X (_ BitVec 32)) )(let (($x197 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1959X)))
 (=> $x197 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1959X) (_ bv0 32)))))
 ))
 (let (($x12 (forall ((input.ind-%var1958X (_ BitVec 32)) )(let (($x197 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1958X)))
 (= $x197 false)))
 ))
 (let (($x244 (and $x12 $x275)))
 (let (($x103 (and $x244 $x124)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x52 (and $x16 $x103)))
 (let (($x79 (=> $x52 $x64)))
 (not $x79))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 73
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x97 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x224 (bvneg ?x97)))
 (let (($x50 (= ?x224 input.dst.llvm-%n)))
 (let (($x137 (= $x50 true)))
 (let ((?x87 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x101 (concat ?x25 (concat ?x118 ?x87)))))
 (let (($x74 (= ?x124 input.dst.llvm-%n)))
 (let (($x117 (= $x74 true)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x230 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x179 (concat ?x38 (concat ?x105 (concat ?x230 ?x49)))))
 (let (($x52 (= input.dst.llvm-%m ?x179)))
 (let (($x103 (= input.dst.llvm-%n ?x124)))
 (let (($x206 (and $x103 $x52)))
 (let (($x42 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x210 (and $x42 $x206)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x146)))
 (let ((?x246 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x86 (= (_ bv0 32) ?x246)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x127)))
 (let ((?x26 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x26)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x198 (and $x109 $x136)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (and $x235 $x198)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x217 (and $x157 $x176)))
 (let (($x147 (not $x217)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x214 (and $x121 $x250)))
 (let (($x30 (and (not $x214) $x147)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x208 (and $x199 $x286)))
 (let (($x263 (not $x208)))
 (let (($x292 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (and $x20 $x292)))
 (let (($x141 (and (not $x144) $x263)))
 (let (($x35 (and (and (and (and (and (and $x141 $x30) $x78) $x8) $x58) $x180) $x86)))
 (let (($x110 (and $x35 $x119)))
 (let (($x291 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x293 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x240 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x240)))
 (let (($x255 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x240)))
 (let (($x24 (or false (or false (and (and true (or $x92 $x255)) (or $x288 $x293))))))
 (let (($x287 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x24)))
 (let (($x64 (and (and (and $x287 $x291) $x110) $x210)))
 (let (($x79 (= $x64 true)))
 (let (($x207 (= ?x179 input.dst.llvm-%m)))
 (let (($x18 (= $x207 true)))
 (let (($x209 (and $x18 $x79)))
 (let (($x169 (and $x209 $x117)))
 (let (($x23 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x139 (and $x23 $x169)))
 (let (($x76 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x73 (and $x76 $x139)))
 (let (($x290 (forall ((input.ind-%var1969X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1969X)))
 (=> $x12 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1969X) (_ bv0 32)))))
 ))
 (let (($x17 (forall ((input.ind-%var1968X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1968X)))
 (= $x12 false)))
 ))
 (let (($x239 (and $x17 $x290)))
 (let (($x142 (and $x239 $x73)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x65 (and $x16 $x142)))
 (let (($x189 (=> $x65 $x137)))
 (not $x189))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x97 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x224 (bvneg ?x97)))
 (let (($x50 (= ?x224 input.dst.llvm-%n)))
 (let (($x137 (= $x50 true)))
 (let ((?x87 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x101 (concat ?x25 (concat ?x118 ?x87)))))
 (let (($x74 (= ?x124 input.dst.llvm-%n)))
 (let (($x117 (= $x74 true)))
 (let ((?x49 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x230 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x38 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x179 (concat ?x38 (concat ?x105 (concat ?x230 ?x49)))))
 (let (($x52 (= input.dst.llvm-%m ?x179)))
 (let (($x103 (= input.dst.llvm-%n ?x124)))
 (let (($x206 (and $x103 $x52)))
 (let (($x42 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x210 (and $x42 $x206)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x146)))
 (let ((?x246 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x86 (= (_ bv0 32) ?x246)))
 (let ((?x127 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x180 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x127)))
 (let ((?x26 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x136 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x26)))
 (let (($x109 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x198 (and $x109 $x136)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x58 (and $x235 $x198)))
 (let (($x8 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x176 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x157 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x217 (and $x157 $x176)))
 (let (($x147 (not $x217)))
 (let (($x250 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x121 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x214 (and $x121 $x250)))
 (let (($x30 (and (not $x214) $x147)))
 (let (($x286 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x199 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x208 (and $x199 $x286)))
 (let (($x263 (not $x208)))
 (let (($x292 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x144 (and $x20 $x292)))
 (let (($x141 (and (not $x144) $x263)))
 (let (($x35 (and (and (and (and (and (and $x141 $x30) $x78) $x8) $x58) $x180) $x86)))
 (let (($x110 (and $x35 $x119)))
 (let (($x291 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x293 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x240 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x240)))
 (let (($x255 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x240)))
 (let (($x24 (or false (or false (and (and true (or $x92 $x255)) (or $x288 $x293))))))
 (let (($x287 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x24)))
 (let (($x64 (and (and (and $x287 $x291) $x110) $x210)))
 (let (($x79 (= $x64 true)))
 (let (($x207 (= ?x179 input.dst.llvm-%m)))
 (let (($x18 (= $x207 true)))
 (let (($x209 (and $x18 $x79)))
 (let (($x169 (and $x209 $x117)))
 (let (($x23 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x139 (and $x23 $x169)))
 (let (($x76 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x73 (and $x76 $x139)))
 (let (($x290 (forall ((input.ind-%var1969X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1969X)))
 (=> $x12 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1969X) (_ bv0 32)))))
 ))
 (let (($x17 (forall ((input.ind-%var1968X (_ BitVec 32)) )(let (($x12 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1968X)))
 (= $x12 false)))
 ))
 (let (($x239 (and $x17 $x290)))
 (let (($x142 (and $x239 $x73)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x65 (and $x16 $x142)))
 (let (($x189 (=> $x65 $x137)))
 (not $x189))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 74
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x197 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x178 (= (_ bv0 2) ?x197)))
 (let (($x67 (= $x178 true)))
 (let ((?x210 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x142 (concat ?x73 (concat ?x117 (concat ?x79 ?x210)))))
 (let (($x265 (= ?x142 input.dst.llvm-%m)))
 (let (($x269 (= $x265 true)))
 (let (($x65 (= input.dst.llvm-%m ?x142)))
 (let ((?x268 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x236 (concat ?x255 (concat ?x39 (concat ?x18 ?x268)))))
 (let (($x52 (= input.dst.llvm-%n ?x236)))
 (let (($x120 (and $x52 $x65)))
 (let (($x103 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x97 (and $x103 $x120)))
 (let ((?x89 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x89)))
 (let ((?x194 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x96 (= (_ bv0 32) ?x194)))
 (let ((?x119 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x119)))
 (let ((?x246 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x246)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x35 (and $x81 $x86)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x180 $x35)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x221 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x109 (and $x221 $x235)))
 (let (($x26 (not $x109)))
 (let (($x296 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (and $x71 $x296)))
 (let (($x198 (and (not $x8) $x26)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x176 $x217)))
 (let (($x30 (not $x147)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x133 $x116)))
 (let (($x78 (and (not $x157) $x30)))
 (let (($x118 (and (and (and (and (and (and $x78 $x198) $x252) $x127) $x146) $x110) $x96)))
 (let (($x87 (and $x118 $x42)))
 (let (($x293 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x286 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x91 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x291 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x91)))
 (let (($x121 (or false (or false (and (and true (or $x291 $x27)) (or $x199 $x286))))))
 (let (($x214 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x121)))
 (let (($x137 (and (and (and $x214 $x293) $x87) $x97)))
 (let (($x189 (= $x137 true)))
 (let (($x289 (= ?x236 input.dst.llvm-%n)))
 (let (($x288 (= $x289 true)))
 (let (($x57 (and $x288 $x189)))
 (let (($x130 (and $x57 $x269)))
 (let (($x230 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x248 (and $x230 $x130)))
 (let (($x165 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x211 (and $x165 $x248)))
 (let (($x247 (forall ((input.ind-%var1979X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1979X)))
 (=> $x17 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1979X) (_ bv0 32)))))
 ))
 (let (($x83 (forall ((input.ind-%var1978X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1978X)))
 (= $x17 false)))
 ))
 (let (($x38 (and $x83 $x247)))
 (let (($x254 (and $x38 $x211)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x82 (and $x16 $x254)))
 (let (($x244 (=> $x82 $x67)))
 (not $x244)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x197 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x178 (= (_ bv0 2) ?x197)))
 (let (($x67 (= $x178 true)))
 (let ((?x210 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x79 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x73 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x142 (concat ?x73 (concat ?x117 (concat ?x79 ?x210)))))
 (let (($x265 (= ?x142 input.dst.llvm-%m)))
 (let (($x269 (= $x265 true)))
 (let (($x65 (= input.dst.llvm-%m ?x142)))
 (let ((?x268 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x236 (concat ?x255 (concat ?x39 (concat ?x18 ?x268)))))
 (let (($x52 (= input.dst.llvm-%n ?x236)))
 (let (($x120 (and $x52 $x65)))
 (let (($x103 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x97 (and $x103 $x120)))
 (let ((?x89 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x89)))
 (let ((?x194 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x96 (= (_ bv0 32) ?x194)))
 (let ((?x119 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x110 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x119)))
 (let ((?x246 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x86 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x246)))
 (let (($x81 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x35 (and $x81 $x86)))
 (let (($x180 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x146 (and $x180 $x35)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x252 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x221 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x109 (and $x221 $x235)))
 (let (($x26 (not $x109)))
 (let (($x296 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (and $x71 $x296)))
 (let (($x198 (and (not $x8) $x26)))
 (let (($x217 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x176 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x176 $x217)))
 (let (($x30 (not $x147)))
 (let (($x116 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x133 $x116)))
 (let (($x78 (and (not $x157) $x30)))
 (let (($x118 (and (and (and (and (and (and $x78 $x198) $x252) $x127) $x146) $x110) $x96)))
 (let (($x87 (and $x118 $x42)))
 (let (($x293 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x286 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x91 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x291 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x91)))
 (let (($x121 (or false (or false (and (and true (or $x291 $x27)) (or $x199 $x286))))))
 (let (($x214 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x121)))
 (let (($x137 (and (and (and $x214 $x293) $x87) $x97)))
 (let (($x189 (= $x137 true)))
 (let (($x289 (= ?x236 input.dst.llvm-%n)))
 (let (($x288 (= $x289 true)))
 (let (($x57 (and $x288 $x189)))
 (let (($x130 (and $x57 $x269)))
 (let (($x230 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x248 (and $x230 $x130)))
 (let (($x165 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x211 (and $x165 $x248)))
 (let (($x247 (forall ((input.ind-%var1979X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1979X)))
 (=> $x17 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1979X) (_ bv0 32)))))
 ))
 (let (($x83 (forall ((input.ind-%var1978X (_ BitVec 32)) )(let (($x17 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1978X)))
 (= $x17 false)))
 ))
 (let (($x38 (and $x83 $x247)))
 (let (($x254 (and $x38 $x211)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x82 (and $x16 $x254)))
 (let (($x244 (=> $x82 $x67)))
 (not $x244)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
unsat
(error "line 103 column 10: model is not available")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 75
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x12 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x223 (= $x12 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x211 (concat ?x248 (concat ?x265 (concat ?x137 ?x120)))))
 (let (($x259 (= ?x211 input.dst.llvm-%n)))
 (let (($x206 (= $x259 true)))
 (let ((?x7 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x288 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x20 (concat ?x27 (concat ?x24 (concat ?x288 ?x7)))))
 (let (($x82 (= input.dst.llvm-%m ?x20)))
 (let (($x254 (= input.dst.llvm-%n ?x211)))
 (let (($x242 (and $x254 $x82)))
 (let (($x142 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x197 (and $x142 $x242)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x52 (= (_ bv0 32) ?x103)))
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x124 (= (_ bv0 32) ?x102)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let ((?x118 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x89 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x118)))
 (let (($x96 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x42 (and $x96 $x89)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x194 $x42)))
 (let (($x212 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x86 (and $x81 $x246)))
 (let (($x35 (not $x86)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x180 (and $x127 $x33)))
 (let (($x25 (and (not $x180) $x35)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x26 $x198)))
 (let (($x58 (not $x126)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x221 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x221 $x235)))
 (let (($x101 (and (not $x109) $x58)))
 (let (($x79 (and (and (and (and (and (and $x101 $x25) $x119) $x212) $x87) $x45) $x124)))
 (let (($x210 (and $x79 $x52)))
 (let (($x208 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x293 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x217 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x224 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x293)))
 (let (($x296 (or false (or false (and (and true (or $x224 $x133)) (or $x217 $x147))))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x296)))
 (let (($x244 (and (and (and $x136 $x208) $x210) $x197)))
 (let (($x108 (= $x244 true)))
 (let (($x144 (= ?x20 input.dst.llvm-%m)))
 (let (($x199 (= $x144 true)))
 (let (($x192 (and $x199 $x108)))
 (let (($x72 (and $x192 $x206)))
 (let (($x18 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x44 (and $x18 $x72)))
 (let (($x171 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x278 (and $x171 $x44)))
 (let (($x167 (forall ((input.ind-%var1989X (_ BitVec 32)) )(let (($x83 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1989X)))
 (=> $x83 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1989X) (_ bv0 32)))))
 ))
 (let (($x205 (forall ((input.ind-%var1988X (_ BitVec 32)) )(let (($x83 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1988X)))
 (= $x83 false)))
 ))
 (let (($x255 (and $x205 $x167)))
 (let (($x285 (and $x255 $x278)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x231 (and $x16 $x285)))
 (let (($x23 (=> $x231 $x223)))
 (not $x23))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x12 (bvule (_ bv0 32) input.dst.llvm-%n)))
 (let (($x223 (= $x12 true)))
 (let ((?x120 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x248 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x211 (concat ?x248 (concat ?x265 (concat ?x137 ?x120)))))
 (let (($x259 (= ?x211 input.dst.llvm-%n)))
 (let (($x206 (= $x259 true)))
 (let ((?x7 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x288 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x24 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x20 (concat ?x27 (concat ?x24 (concat ?x288 ?x7)))))
 (let (($x82 (= input.dst.llvm-%m ?x20)))
 (let (($x254 (= input.dst.llvm-%n ?x211)))
 (let (($x242 (and $x254 $x82)))
 (let (($x142 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x197 (and $x142 $x242)))
 (let ((?x103 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x52 (= (_ bv0 32) ?x103)))
 (let ((?x102 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x124 (= (_ bv0 32) ?x102)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x45 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let ((?x118 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x89 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x118)))
 (let (($x96 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x42 (and $x96 $x89)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (and $x194 $x42)))
 (let (($x212 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x119 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x246 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x81 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x86 (and $x81 $x246)))
 (let (($x35 (not $x86)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x180 (and $x127 $x33)))
 (let (($x25 (and (not $x180) $x35)))
 (let (($x198 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x126 (and $x26 $x198)))
 (let (($x58 (not $x126)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x221 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x221 $x235)))
 (let (($x101 (and (not $x109) $x58)))
 (let (($x79 (and (and (and (and (and (and $x101 $x25) $x119) $x212) $x87) $x45) $x124)))
 (let (($x210 (and $x79 $x52)))
 (let (($x208 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x147 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x293 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x217 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x224 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x293)))
 (let (($x296 (or false (or false (and (and true (or $x224 $x133)) (or $x217 $x147))))))
 (let (($x136 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x296)))
 (let (($x244 (and (and (and $x136 $x208) $x210) $x197)))
 (let (($x108 (= $x244 true)))
 (let (($x144 (= ?x20 input.dst.llvm-%m)))
 (let (($x199 (= $x144 true)))
 (let (($x192 (and $x199 $x108)))
 (let (($x72 (and $x192 $x206)))
 (let (($x18 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x44 (and $x18 $x72)))
 (let (($x171 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x278 (and $x171 $x44)))
 (let (($x167 (forall ((input.ind-%var1989X (_ BitVec 32)) )(let (($x83 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1989X)))
 (=> $x83 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1989X) (_ bv0 32)))))
 ))
 (let (($x205 (forall ((input.ind-%var1988X (_ BitVec 32)) )(let (($x83 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1988X)))
 (= $x83 false)))
 ))
 (let (($x255 (and $x205 $x167)))
 (let (($x285 (and $x255 $x278)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x231 (and $x16 $x285)))
 (let (($x23 (=> $x231 $x223)))
 (not $x23))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 76
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x69 (forall ((input.ind-%var2009X (_ BitVec 32)) )(let ((?x262 (bvadd (bvmul input.ind-%var2009X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x125))))
 (=> false (= (_ bv0 32) ?x149))))))
 ))
 (let (($x164 (forall ((input.ind-%var2008X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var2008X) (bvult input.ind-%var2008X (_ bv0 32)))))
 ))
 (let (($x234 (and $x164 $x69)))
 (let (($x88 (= $x234 true)))
 (let ((?x197 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x285 (concat ?x278 (concat ?x206 (concat ?x108 ?x197)))))
 (let (($x65 (= ?x285 input.dst.llvm-%m)))
 (let (($x76 (= $x65 true)))
 (let (($x231 (= input.dst.llvm-%m ?x285)))
 (let ((?x292 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x116 (concat ?x133 (concat ?x121 (concat ?x199 ?x292)))))
 (let (($x82 (= input.dst.llvm-%n ?x116)))
 (let (($x12 (and $x82 $x231)))
 (let (($x254 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x223 (and $x254 $x12)))
 (let ((?x169 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x169)))
 (let ((?x67 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x67)))
 (let ((?x52 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x210 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x52)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x124 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x102)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x79 (and $x64 $x124)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (and $x45 $x79)))
 (let (($x50 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x96 (and $x74 $x194)))
 (let (($x118 (not $x96)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x212 (and $x73 $x110)))
 (let (($x42 (and (not $x212) $x118)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x246 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x246 $x86)))
 (let (($x25 (not $x35)))
 (let (($x146 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x30 $x146)))
 (let (($x119 (and (not $x81) $x25)))
 (let (($x137 (and (and (and (and (and (and $x119 $x42) $x117) $x50) $x103) $x210) $x209)))
 (let (($x120 (and $x137 $x142)))
 (let (($x147 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x198 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x286)))
 (let (($x127 (or false (or false (and (and true (or $x208 $x178)) (or $x26 $x198))))))
 (let (($x180 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x127)))
 (let (($x43 (and (and (and $x180 $x147) $x120) $x223)))
 (let (($x31 (= $x43 true)))
 (let (($x301 (= ?x116 input.dst.llvm-%n)))
 (let (($x217 (= $x301 true)))
 (let (($x240 (and $x217 $x31)))
 (let (($x105 (and $x240 $x76)))
 (let (($x288 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x290 (and $x288 $x105)))
 (let (($x250 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x201 (and $x250 $x290)))
 (let (($x287 (forall ((input.ind-%var1999X (_ BitVec 32)) )(let (($x205 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1999X)))
 (=> $x205 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1999X) (_ bv0 32)))))
 ))
 (let (($x92 (forall ((input.ind-%var1998X (_ BitVec 32)) )(let (($x205 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1998X)))
 (= $x205 false)))
 ))
 (let (($x27 (and $x92 $x287)))
 (let (($x281 (and $x27 $x201)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x17 (and $x16 $x281)))
 (let (($x114 (=> $x17 $x88)))
 (not $x114))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x69 (forall ((input.ind-%var2009X (_ BitVec 32)) )(let ((?x262 (bvadd (bvmul input.ind-%var2009X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x149 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x125))))
 (=> false (= (_ bv0 32) ?x149))))))
 ))
 (let (($x164 (forall ((input.ind-%var2008X (_ BitVec 32)) )(= false (and (bvule (_ bv0 32) input.ind-%var2008X) (bvult input.ind-%var2008X (_ bv0 32)))))
 ))
 (let (($x234 (and $x164 $x69)))
 (let (($x88 (= $x234 true)))
 (let ((?x197 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum1=/)))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x278 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x285 (concat ?x278 (concat ?x206 (concat ?x108 ?x197)))))
 (let (($x65 (= ?x285 input.dst.llvm-%m)))
 (let (($x76 (= $x65 true)))
 (let (($x231 (= input.dst.llvm-%m ?x285)))
 (let ((?x292 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x121 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x116 (concat ?x133 (concat ?x121 (concat ?x199 ?x292)))))
 (let (($x82 (= input.dst.llvm-%n ?x116)))
 (let (($x12 (and $x82 $x231)))
 (let (($x254 (= (bvand input.dst.llvm-%m (_ bv4294967292 32)) input.dst.llvm-%m)))
 (let (($x223 (and $x254 $x12)))
 (let ((?x169 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x142 (= (_ bv0 32) ?x169)))
 (let ((?x67 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x209 (= (_ bv0 32) ?x67)))
 (let ((?x52 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x210 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x52)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x124 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x102)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x79 (and $x64 $x124)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (and $x45 $x79)))
 (let (($x50 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x194 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x96 (and $x74 $x194)))
 (let (($x118 (not $x96)))
 (let (($x110 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x212 (and $x73 $x110)))
 (let (($x42 (and (not $x212) $x118)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x246 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x35 (and $x246 $x86)))
 (let (($x25 (not $x35)))
 (let (($x146 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x81 (and $x30 $x146)))
 (let (($x119 (and (not $x81) $x25)))
 (let (($x137 (and (and (and (and (and (and $x119 $x42) $x117) $x50) $x103) $x210) $x209)))
 (let (($x120 (and $x137 $x142)))
 (let (($x147 (= input.spec-%var-n-1 input.dst.llvm-%n)))
 (let (($x198 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x286 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x26 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x286)))
 (let (($x178 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x208 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x286)))
 (let (($x127 (or false (or false (and (and true (or $x208 $x178)) (or $x26 $x198))))))
 (let (($x180 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x127)))
 (let (($x43 (and (and (and $x180 $x147) $x120) $x223)))
 (let (($x31 (= $x43 true)))
 (let (($x301 (= ?x116 input.dst.llvm-%n)))
 (let (($x217 (= $x301 true)))
 (let (($x240 (and $x217 $x31)))
 (let (($x105 (and $x240 $x76)))
 (let (($x288 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x290 (and $x288 $x105)))
 (let (($x250 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x201 (and $x250 $x290)))
 (let (($x287 (forall ((input.ind-%var1999X (_ BitVec 32)) )(let (($x205 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1999X)))
 (=> $x205 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var1999X) (_ bv0 32)))))
 ))
 (let (($x92 (forall ((input.ind-%var1998X (_ BitVec 32)) )(let (($x205 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var1998X)))
 (= $x205 false)))
 ))
 (let (($x27 (and $x92 $x287)))
 (let (($x281 (and $x27 $x201)))
 (let (($x16 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x17 (and $x16 $x281)))
 (let (($x114 (=> $x17 $x88)))
 (not $x114))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 77
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x170 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x53 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x160 (bvmul (_ bv4294967295 32) ?x53)))
 (let ((?x251 (bvneg ?x160)))
 (let (($x238 (= ?x251 ?x170)))
 (let (($x154 (= $x238 true)))
 (let ((?x107 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x282 (bvneg ?x107)))
 (let (($x98 (= ?x282 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x203 (= $x98 true)))
 (let (($x11 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x106 (= $x11 true)))
 (let (($x99 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x77 (= $x99 true)))
 (let (($x300 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x10 (= $x300 true)))
 (let (($x111 (forall ((input.ind-%var2019X (_ BitVec 32)) )(let ((?x14 (bvadd (bvmul input.ind-%var2019X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x215 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x14 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x14))))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x14 (_ bv2 32))) ?x215)))
 (let ((?x41 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x14 (_ bv3 32))) ?x140)))
 (let ((?x61 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2019X)))
 (let (($x255 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2019X)))
 (=> $x255 (= ?x61 ?x41)))))))))
 ))
 (let (($x232 (forall ((input.ind-%var2018X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var2018X) (bvult input.ind-%var2018X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x255 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2018X)))
 (= $x255 $x135))))
 ))
 (let (($x94 (and $x232 $x111)))
 (let (($x298 (= $x94 true)))
 (let (($x95 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x51 (= $x95 true)))
 (let (($x39 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x247 (= $x39 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x243 (bvsub ?x92 ?x179)))
 (let (($x114 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x243) (bvult ?x92 ?x243))))
 (let (($x273 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x149 (ite $x273 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x152 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x155 (bvmul (_ bv4 64) ?x152)))
 (let ((?x125 ((_ extract 63 32) ?x155)))
 (let (($x70 (= ?x125 ?x149)))
 (let (($x261 (and $x70 $x114)))
 (let (($x280 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x295 (and $x280 $x261)))
 (let (($x175 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x176 (=> $x175 $x295)))
 (let (($x242 (= $x176 true)))
 (let (($x262 (= $x175 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x290 (= (_ bv0 32) ?x105)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x76 (= (_ bv0 32) ?x65)))
 (let ((?x31 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x31)))
 (let ((?x231 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x231)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x223 (and $x285 $x12)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (and $x72 $x223)))
 (let (($x192 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x254 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x254 $x82)))
 (let (($x278 (not $x44)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x189 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x211 (and $x189 $x269)))
 (let (($x206 (and (not $x211) $x278)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x209 $x137)))
 (let (($x142 (not $x169)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x42 $x130)))
 (let (($x239 (and (not $x67) $x142)))
 (let (($x218 (and (and (and (and (and (and $x239 $x206) $x108) $x192) $x43) $x240) $x76)))
 (let (($x129 (and $x218 $x290)))
 (let (($x124 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x248 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x248)))
 (let (($x52 (or false (or false (and (and true (or $x50 $x57)) (or $x102 $x124))))))
 (let (($x97 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x52)))
 (let (($x164 (and $x97 $x129)))
 (let (($x113 (= $x164 true)))
 (let ((?x89 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x74 (= (_ bv0 2) ?x89)))
 (let (($x194 (= $x74 true)))
 (let ((?x246 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x86 (bvneg ?x246)))
 (let (($x119 (= ?x86 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x73 (= $x119 true)))
 (let (($x35 (= ?x86 input.dst.llvm-%n)))
 (let (($x25 (= $x35 true)))
 (let (($x110 (and $x25 $x73)))
 (let (($x96 (and $x110 $x194)))
 (let (($x219 (and $x96 $x113)))
 (let (($x75 (and $x219 $x262)))
 (let (($x91 (and $x75 $x242)))
 (let (($x167 (and $x91 $x247)))
 (let (($x83 (and $x167 $x51)))
 (let (($x257 (and $x83 $x298)))
 (let (($x245 (and $x257 $x10)))
 (let (($x181 (and $x245 $x77)))
 (let (($x150 (and $x181 $x106)))
 (let (($x191 (and $x150 $x203)))
 (let (($x81 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x277 (and (not $x81) $x191)))
 (let (($x30 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x6 (and $x30 $x277)))
 (let (($x180 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x28 (and $x180 $x6)))
 (let (($x58 (forall ((input.ind-%var2029X (_ BitVec 32)) )(let (($x78 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2029X)))
 (=> $x78 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2029X) (_ bv0 32)))))
 ))
 (let (($x286 (forall ((input.ind-%var2028X (_ BitVec 32)) )(let (($x78 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2028X)))
 (= $x78 false)))
 ))
 (let (($x101 (and $x286 $x58)))
 (let (($x299 (and $x101 $x28)))
 (let (($x116 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x222 (and $x116 $x299)))
 (let (($x8 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x289 (bvadd ?x92 (_ bv3 32))))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x289)))
 (let (($x7 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x289)))
 (let (($x292 (or false (or false (and (and true (or $x288 $x7)) (or $x141 $x8))))))
 (let (($x293 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x292)))
 (let (($x207 (=> (and $x175 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x292)))
 (let (($x143 (and $x207 $x222)))
 (let (($x216 (=> $x143 $x154)))
 (not $x216)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x170 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x53 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let ((?x160 (bvmul (_ bv4294967295 32) ?x53)))
 (let ((?x251 (bvneg ?x160)))
 (let (($x238 (= ?x251 ?x170)))
 (let (($x154 (= $x238 true)))
 (let ((?x107 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x282 (bvneg ?x107)))
 (let (($x98 (= ?x282 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x203 (= $x98 true)))
 (let (($x11 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x106 (= $x11 true)))
 (let (($x99 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x77 (= $x99 true)))
 (let (($x300 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x10 (= $x300 true)))
 (let (($x111 (forall ((input.ind-%var2019X (_ BitVec 32)) )(let ((?x14 (bvadd (bvmul input.ind-%var2019X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x215 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x14 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x14))))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x14 (_ bv2 32))) ?x215)))
 (let ((?x41 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x14 (_ bv3 32))) ?x140)))
 (let ((?x61 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2019X)))
 (let (($x255 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2019X)))
 (=> $x255 (= ?x61 ?x41)))))))))
 ))
 (let (($x232 (forall ((input.ind-%var2018X (_ BitVec 32)) )(let (($x135 (and (bvule (_ bv0 32) input.ind-%var2018X) (bvult input.ind-%var2018X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x255 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2018X)))
 (= $x255 $x135))))
 ))
 (let (($x94 (and $x232 $x111)))
 (let (($x298 (= $x94 true)))
 (let (($x95 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x51 (= $x95 true)))
 (let (($x39 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x247 (= $x39 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x243 (bvsub ?x92 ?x179)))
 (let (($x114 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x243) (bvult ?x92 ?x243))))
 (let (($x273 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x149 (ite $x273 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x152 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x155 (bvmul (_ bv4 64) ?x152)))
 (let ((?x125 ((_ extract 63 32) ?x155)))
 (let (($x70 (= ?x125 ?x149)))
 (let (($x261 (and $x70 $x114)))
 (let (($x280 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x295 (and $x280 $x261)))
 (let (($x175 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x176 (=> $x175 $x295)))
 (let (($x242 (= $x176 true)))
 (let (($x262 (= $x175 true)))
 (let ((?x105 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x290 (= (_ bv0 32) ?x105)))
 (let ((?x65 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x76 (= (_ bv0 32) ?x65)))
 (let ((?x31 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x240 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x31)))
 (let ((?x231 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x231)))
 (let (($x285 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x223 (and $x285 $x12)))
 (let (($x72 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x43 (and $x72 $x223)))
 (let (($x192 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x108 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x254 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x254 $x82)))
 (let (($x278 (not $x44)))
 (let (($x269 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x189 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x211 (and $x189 $x269)))
 (let (($x206 (and (not $x211) $x278)))
 (let (($x137 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x209 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x169 (and $x209 $x137)))
 (let (($x142 (not $x169)))
 (let (($x130 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x67 (and $x42 $x130)))
 (let (($x239 (and (not $x67) $x142)))
 (let (($x218 (and (and (and (and (and (and $x239 $x206) $x108) $x192) $x43) $x240) $x76)))
 (let (($x129 (and $x218 $x290)))
 (let (($x124 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x248 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x102 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x248)))
 (let (($x57 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x248)))
 (let (($x52 (or false (or false (and (and true (or $x50 $x57)) (or $x102 $x124))))))
 (let (($x97 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x52)))
 (let (($x164 (and $x97 $x129)))
 (let (($x113 (= $x164 true)))
 (let ((?x89 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x74 (= (_ bv0 2) ?x89)))
 (let (($x194 (= $x74 true)))
 (let ((?x246 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x86 (bvneg ?x246)))
 (let (($x119 (= ?x86 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x73 (= $x119 true)))
 (let (($x35 (= ?x86 input.dst.llvm-%n)))
 (let (($x25 (= $x35 true)))
 (let (($x110 (and $x25 $x73)))
 (let (($x96 (and $x110 $x194)))
 (let (($x219 (and $x96 $x113)))
 (let (($x75 (and $x219 $x262)))
 (let (($x91 (and $x75 $x242)))
 (let (($x167 (and $x91 $x247)))
 (let (($x83 (and $x167 $x51)))
 (let (($x257 (and $x83 $x298)))
 (let (($x245 (and $x257 $x10)))
 (let (($x181 (and $x245 $x77)))
 (let (($x150 (and $x181 $x106)))
 (let (($x191 (and $x150 $x203)))
 (let (($x81 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x277 (and (not $x81) $x191)))
 (let (($x30 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x6 (and $x30 $x277)))
 (let (($x180 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x28 (and $x180 $x6)))
 (let (($x58 (forall ((input.ind-%var2029X (_ BitVec 32)) )(let (($x78 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2029X)))
 (=> $x78 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2029X) (_ bv0 32)))))
 ))
 (let (($x286 (forall ((input.ind-%var2028X (_ BitVec 32)) )(let (($x78 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2028X)))
 (= $x78 false)))
 ))
 (let (($x101 (and $x286 $x58)))
 (let (($x299 (and $x101 $x28)))
 (let (($x116 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x222 (and $x116 $x299)))
 (let (($x8 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x289 (bvadd ?x92 (_ bv3 32))))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x289)))
 (let (($x7 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x288 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x289)))
 (let (($x292 (or false (or false (and (and true (or $x288 $x7)) (or $x141 $x8))))))
 (let (($x293 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x292)))
 (let (($x207 (=> (and $x175 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x292)))
 (let (($x143 (and $x207 $x222)))
 (let (($x216 (=> $x143 $x154)))
 (not $x216)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 78
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x166 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x36 (bvule ?x166 (_ bv4294967294 32))))
 (let (($x174 (= $x36 true)))
 (let ((?x145 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x56 (bvneg ?x145)))
 (let (($x186 (= ?x56 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x148 (= $x186 true)))
 (let (($x173 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x230 (= $x173 true)))
 (let (($x26 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x270 (= $x26 true)))
 (let ((?x84 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x84)))
 (let ((?x154 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x216 (= (_ bv0 32) ?x154)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x238 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let ((?x143 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x143)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x160 (and $x222 $x53)))
 (let (($x299 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (and $x299 $x160)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x107 (and $x106 $x150)))
 (let (($x282 (not $x107)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (and $x77 $x181)))
 (let (($x203 (and (not $x11) $x282)))
 (let (($x257 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (and $x298 $x257)))
 (let (($x10 (not $x300)))
 (let (($x260 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x38 $x260)))
 (let (($x99 (and (not $x94) $x10)))
 (let (($x208 (and (and (and (and (and (and $x99 $x203) $x277) $x28) $x251) $x238) $x216)))
 (let (($x178 (and $x208 $x190)))
 (let (($x156 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x202 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x202)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x220 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x202)))
 (let (($x284 (or false (or false (and (and true (or $x220 $x62)) (or $x54 $x156))))))
 (let (($x111 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x284)))
 (let (($x157 (and $x111 $x178)))
 (let (($x301 (= $x157 true)))
 (let ((?x187 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x135 (= (_ bv0 2) ?x187)))
 (let (($x225 (= $x135 true)))
 (let (($x51 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x83 (= $x51 true)))
 (let (($x247 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x167 (= $x247 true)))
 (let (($x242 (forall ((input.ind-%var2039X (_ BitVec 32)) )(let ((?x155 (bvadd (bvmul input.ind-%var2039X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x70 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x155))))
 (let ((?x234 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x155 (_ bv2 32))) ?x70)))
 (let ((?x261 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x155 (_ bv3 32))) ?x234)))
 (let ((?x31 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2039X)))
 (let (($x201 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2039X)))
 (=> $x201 (= ?x31 ?x261)))))))))
 ))
 (let (($x12 (forall ((input.ind-%var2038X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var2038X) (bvult input.ind-%var2038X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x201 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2038X)))
 (= $x201 $x285))))
 ))
 (let (($x91 (and $x12 $x242)))
 (let (($x165 (= $x91 true)))
 (let ((?x239 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x189 (bvneg ?x239)))
 (let (($x254 (= ?x189 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x82 (= $x254 true)))
 (let (($x269 (= ?x189 input.dst.llvm-%n)))
 (let (($x211 (= $x269 true)))
 (let (($x137 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x169 (= $x137 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x124 (bvsub ?x92 ?x179)))
 (let (($x52 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x124) (bvult ?x92 ?x124))))
 (let (($x57 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x64 (ite $x57 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x210 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x248 (bvmul (_ bv4 64) ?x210)))
 (let ((?x50 ((_ extract 63 32) ?x248)))
 (let (($x102 (= ?x50 ?x64)))
 (let (($x97 (and $x102 $x52)))
 (let (($x87 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x42 (and $x87 $x97)))
 (let (($x205 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x130 (=> $x205 $x42)))
 (let (($x67 (= $x130 true)))
 (let (($x74 (= $x205 true)))
 (let (($x120 (and $x74 $x67)))
 (let (($x142 (and $x120 $x169)))
 (let (($x259 (and $x142 $x211)))
 (let (($x44 (and $x259 $x82)))
 (let (($x39 (and $x44 $x165)))
 (let (($x95 (and $x39 $x167)))
 (let (($x255 (and $x95 $x83)))
 (let (($x232 (and $x255 $x225)))
 (let (($x33 (and $x232 $x301)))
 (let (($x226 (and $x33 $x270)))
 (let (($x49 (and $x226 $x230)))
 (let (($x90 (and $x49 $x148)))
 (let (($x89 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x15 (and (not $x89) $x90)))
 (let (($x110 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x185 (and $x110 $x15)))
 (let (($x25 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x5 (and $x25 $x185)))
 (let (($x246 (forall ((input.ind-%var2049X (_ BitVec 32)) )(let (($x221 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2049X)))
 (=> $x221 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2049X) (_ bv0 32)))))
 ))
 (let (($x58 (forall ((input.ind-%var2048X (_ BitVec 32)) )(let (($x221 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2048X)))
 (= $x221 false)))
 ))
 (let (($x86 (and $x58 $x246)))
 (let (($x204 (and $x86 $x5)))
 (let (($x217 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x253 (and $x217 $x204)))
 (let (($x144 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd ?x92 (_ bv3 32))))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x224 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x207 (or false (or false (and (and true (or $x20 $x224)) (or $x121 $x144))))))
 (let (($x116 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x207)))
 (let (($x287 (=> (and $x205 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x207)))
 (let (($x18 (and $x287 $x253)))
 (let (($x123 (=> $x18 $x174)))
 (not $x123))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x166 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x36 (bvule ?x166 (_ bv4294967294 32))))
 (let (($x174 (= $x36 true)))
 (let ((?x145 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x56 (bvneg ?x145)))
 (let (($x186 (= ?x56 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x148 (= $x186 true)))
 (let (($x173 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x230 (= $x173 true)))
 (let (($x26 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x270 (= $x26 true)))
 (let ((?x84 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x190 (= (_ bv0 32) ?x84)))
 (let ((?x154 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x216 (= (_ bv0 32) ?x154)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x238 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x170)))
 (let ((?x143 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x53 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x143)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x160 (and $x222 $x53)))
 (let (($x299 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x251 (and $x299 $x160)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x277 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x106 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x107 (and $x106 $x150)))
 (let (($x282 (not $x107)))
 (let (($x181 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (and $x77 $x181)))
 (let (($x203 (and (not $x11) $x282)))
 (let (($x257 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (and $x298 $x257)))
 (let (($x10 (not $x300)))
 (let (($x260 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x94 (and $x38 $x260)))
 (let (($x99 (and (not $x94) $x10)))
 (let (($x208 (and (and (and (and (and (and $x99 $x203) $x277) $x28) $x251) $x238) $x216)))
 (let (($x178 (and $x208 $x190)))
 (let (($x156 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x202 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x54 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x202)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x220 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x202)))
 (let (($x284 (or false (or false (and (and true (or $x220 $x62)) (or $x54 $x156))))))
 (let (($x111 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x284)))
 (let (($x157 (and $x111 $x178)))
 (let (($x301 (= $x157 true)))
 (let ((?x187 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x135 (= (_ bv0 2) ?x187)))
 (let (($x225 (= $x135 true)))
 (let (($x51 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x83 (= $x51 true)))
 (let (($x247 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x167 (= $x247 true)))
 (let (($x242 (forall ((input.ind-%var2039X (_ BitVec 32)) )(let ((?x155 (bvadd (bvmul input.ind-%var2039X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x70 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x155 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x155))))
 (let ((?x234 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x155 (_ bv2 32))) ?x70)))
 (let ((?x261 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x155 (_ bv3 32))) ?x234)))
 (let ((?x31 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2039X)))
 (let (($x201 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2039X)))
 (=> $x201 (= ?x31 ?x261)))))))))
 ))
 (let (($x12 (forall ((input.ind-%var2038X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var2038X) (bvult input.ind-%var2038X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x201 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2038X)))
 (= $x201 $x285))))
 ))
 (let (($x91 (and $x12 $x242)))
 (let (($x165 (= $x91 true)))
 (let ((?x239 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x189 (bvneg ?x239)))
 (let (($x254 (= ?x189 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x82 (= $x254 true)))
 (let (($x269 (= ?x189 input.dst.llvm-%n)))
 (let (($x211 (= $x269 true)))
 (let (($x137 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x169 (= $x137 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x124 (bvsub ?x92 ?x179)))
 (let (($x52 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x124) (bvult ?x92 ?x124))))
 (let (($x57 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x64 (ite $x57 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x210 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x248 (bvmul (_ bv4 64) ?x210)))
 (let ((?x50 ((_ extract 63 32) ?x248)))
 (let (($x102 (= ?x50 ?x64)))
 (let (($x97 (and $x102 $x52)))
 (let (($x87 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x42 (and $x87 $x97)))
 (let (($x205 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x130 (=> $x205 $x42)))
 (let (($x67 (= $x130 true)))
 (let (($x74 (= $x205 true)))
 (let (($x120 (and $x74 $x67)))
 (let (($x142 (and $x120 $x169)))
 (let (($x259 (and $x142 $x211)))
 (let (($x44 (and $x259 $x82)))
 (let (($x39 (and $x44 $x165)))
 (let (($x95 (and $x39 $x167)))
 (let (($x255 (and $x95 $x83)))
 (let (($x232 (and $x255 $x225)))
 (let (($x33 (and $x232 $x301)))
 (let (($x226 (and $x33 $x270)))
 (let (($x49 (and $x226 $x230)))
 (let (($x90 (and $x49 $x148)))
 (let (($x89 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x15 (and (not $x89) $x90)))
 (let (($x110 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x185 (and $x110 $x15)))
 (let (($x25 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x5 (and $x25 $x185)))
 (let (($x246 (forall ((input.ind-%var2049X (_ BitVec 32)) )(let (($x221 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2049X)))
 (=> $x221 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2049X) (_ bv0 32)))))
 ))
 (let (($x58 (forall ((input.ind-%var2048X (_ BitVec 32)) )(let (($x221 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2048X)))
 (= $x221 false)))
 ))
 (let (($x86 (and $x58 $x246)))
 (let (($x204 (and $x86 $x5)))
 (let (($x217 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x253 (and $x217 $x204)))
 (let (($x144 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x7 (bvadd ?x92 (_ bv3 32))))
 (let (($x121 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x224 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x7)))
 (let (($x207 (or false (or false (and (and true (or $x20 $x224)) (or $x121 $x144))))))
 (let (($x116 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x207)))
 (let (($x287 (=> (and $x205 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x207)))
 (let (($x18 (and $x287 $x253)))
 (let (($x123 (=> $x18 $x174)))
 (not $x123))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 79
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x43 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x241 (bvsge ?x43 (_ bv0 32))))
 (let (($x127 (= $x241 true)))
 (let ((?x113 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x219 (bvneg ?x113)))
 (let (($x105 (= ?x219 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x290 (= $x105 true)))
 (let (($x76 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x75 (= $x76 true)))
 (let (($x108 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x281 (= $x108 true)))
 (let ((?x244 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x240 (= (_ bv0 32) ?x244)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x162)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x123)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x166 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x18)))
 (let (($x253 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x36 (and $x253 $x166)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x204 $x36)))
 (let (($x5 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x230 $x49)))
 (let (($x56 (not $x145)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x270 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x173 (and $x270 $x226)))
 (let (($x148 (and (not $x173) $x56)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x190 $x178)))
 (let (($x301 (not $x157)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x268 $x6)))
 (let (($x26 (and (not $x84) $x301)))
 (let (($x296 (and (and (and (and (and (and $x26 $x148) $x15) $x5) $x174) $x34) $x61)))
 (let (($x198 (and $x296 $x240)))
 (let (($x71 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x299 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x251 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x299)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x222 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x299)))
 (let (($x154 (or false (or false (and (and true (or $x222 $x143)) (or $x251 $x71))))))
 (let (($x208 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x154)))
 (let (($x146 (and $x208 $x198)))
 (let (($x196 (= $x146 true)))
 (let ((?x282 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x203 (= (_ bv0 2) ?x282)))
 (let (($x118 (= $x203 true)))
 (let (($x98 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x106 (= $x98 true)))
 (let (($x77 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x181 (= $x77 true)))
 (let (($x257 (forall ((input.ind-%var2059X (_ BitVec 32)) )(let ((?x276 (bvadd (bvmul input.ind-%var2059X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x276))))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x276 (_ bv2 32))) ?x140)))
 (let ((?x94 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x276 (_ bv3 32))) ?x111)))
 (let ((?x39 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2059X)))
 (let (($x164 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2059X)))
 (=> $x164 (= ?x39 ?x94)))))))))
 ))
 (let (($x176 (forall ((input.ind-%var2058X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2058X) (bvult input.ind-%var2058X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x164 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2058X)))
 (= $x164 $x261))))
 ))
 (let (($x300 (and $x176 $x257)))
 (let (($x10 (= $x300 true)))
 (let ((?x17 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x285 (bvneg ?x17)))
 (let (($x275 (= ?x285 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x152 (= $x275 true)))
 (let (($x231 (= ?x285 input.dst.llvm-%n)))
 (let (($x12 (= $x231 true)))
 (let (($x44 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x201 (= $x44 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x209 (bvsub ?x92 ?x179)))
 (let (($x239 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x209) (bvult ?x92 ?x209))))
 (let (($x42 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x67 (ite $x42 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x265 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x52 (bvmul (_ bv4 64) ?x265)))
 (let ((?x97 ((_ extract 63 32) ?x52)))
 (let (($x120 (= ?x97 ?x67)))
 (let (($x189 (and $x120 $x239)))
 (let (($x124 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x269 (and $x124 $x189)))
 (let (($x63 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x211 (=> $x63 $x269)))
 (let (($x259 (= $x211 true)))
 (let (($x64 (= $x63 true)))
 (let (($x254 (and $x64 $x259)))
 (let (($x72 (and $x254 $x201)))
 (let (($x31 (and $x72 $x12)))
 (let (($x155 (and $x31 $x152)))
 (let (($x99 (and $x155 $x10)))
 (let (($x11 (and $x99 $x181)))
 (let (($x150 (and $x11 $x106)))
 (let (($x191 (and $x150 $x118)))
 (let (($x278 (and $x191 $x196)))
 (let (($x65 (and $x278 $x281)))
 (let (($x48 (and $x65 $x75)))
 (let (($x218 (and $x48 $x290)))
 (let (($x45 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x262 (and (not $x45) $x218)))
 (let (($x50 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x46 (and $x50 $x262)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x206 (and $x117 $x46)))
 (let (($x194 (forall ((input.ind-%var2069X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2069X)))
 (=> $x147 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2069X) (_ bv0 32)))))
 ))
 (let (($x246 (forall ((input.ind-%var2068X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2068X)))
 (= $x147 false)))
 ))
 (let (($x96 (and $x246 $x194)))
 (let (($x197 (and $x96 $x206)))
 (let (($x286 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x192 (and $x286 $x197)))
 (let (($x292 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x224 (bvadd ?x92 (_ bv3 32))))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x224)))
 (let (($x141 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x224)))
 (let (($x287 (or false (or false (and (and true (or $x214 $x141)) (or $x199 $x292))))))
 (let (($x217 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x287)))
 (let (($x213 (=> (and $x63 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x287)))
 (let (($x280 (and $x213 $x192)))
 (let (($x81 (=> $x280 $x127)))
 (not $x81))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x43 (bvadd (_ bv1 32) input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x241 (bvsge ?x43 (_ bv0 32))))
 (let (($x127 (= $x241 true)))
 (let ((?x113 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x219 (bvneg ?x113)))
 (let (($x105 (= ?x219 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x290 (= $x105 true)))
 (let (($x76 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x75 (= $x76 true)))
 (let (($x108 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x281 (= $x108 true)))
 (let ((?x244 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x240 (= (_ bv0 32) ?x244)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x162)))
 (let ((?x123 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x34 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x123)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x166 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x18)))
 (let (($x253 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x36 (and $x253 $x166)))
 (let (($x204 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x174 (and $x204 $x36)))
 (let (($x5 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x230 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x230 $x49)))
 (let (($x56 (not $x145)))
 (let (($x226 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x270 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x173 (and $x270 $x226)))
 (let (($x148 (and (not $x173) $x56)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x190 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x190 $x178)))
 (let (($x301 (not $x157)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x268 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (and $x268 $x6)))
 (let (($x26 (and (not $x84) $x301)))
 (let (($x296 (and (and (and (and (and (and $x26 $x148) $x15) $x5) $x174) $x34) $x61)))
 (let (($x198 (and $x296 $x240)))
 (let (($x71 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x299 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x251 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x299)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x222 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x299)))
 (let (($x154 (or false (or false (and (and true (or $x222 $x143)) (or $x251 $x71))))))
 (let (($x208 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x154)))
 (let (($x146 (and $x208 $x198)))
 (let (($x196 (= $x146 true)))
 (let ((?x282 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x203 (= (_ bv0 2) ?x282)))
 (let (($x118 (= $x203 true)))
 (let (($x98 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x106 (= $x98 true)))
 (let (($x77 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x181 (= $x77 true)))
 (let (($x257 (forall ((input.ind-%var2059X (_ BitVec 32)) )(let ((?x276 (bvadd (bvmul input.ind-%var2059X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x140 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x276))))
 (let ((?x111 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x276 (_ bv2 32))) ?x140)))
 (let ((?x94 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x276 (_ bv3 32))) ?x111)))
 (let ((?x39 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2059X)))
 (let (($x164 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2059X)))
 (=> $x164 (= ?x39 ?x94)))))))))
 ))
 (let (($x176 (forall ((input.ind-%var2058X (_ BitVec 32)) )(let (($x261 (and (bvule (_ bv0 32) input.ind-%var2058X) (bvult input.ind-%var2058X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x164 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2058X)))
 (= $x164 $x261))))
 ))
 (let (($x300 (and $x176 $x257)))
 (let (($x10 (= $x300 true)))
 (let ((?x17 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x285 (bvneg ?x17)))
 (let (($x275 (= ?x285 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x152 (= $x275 true)))
 (let (($x231 (= ?x285 input.dst.llvm-%n)))
 (let (($x12 (= $x231 true)))
 (let (($x44 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x201 (= $x44 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x209 (bvsub ?x92 ?x179)))
 (let (($x239 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x209) (bvult ?x92 ?x209))))
 (let (($x42 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x67 (ite $x42 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x265 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x52 (bvmul (_ bv4 64) ?x265)))
 (let ((?x97 ((_ extract 63 32) ?x52)))
 (let (($x120 (= ?x97 ?x67)))
 (let (($x189 (and $x120 $x239)))
 (let (($x124 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x269 (and $x124 $x189)))
 (let (($x63 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x211 (=> $x63 $x269)))
 (let (($x259 (= $x211 true)))
 (let (($x64 (= $x63 true)))
 (let (($x254 (and $x64 $x259)))
 (let (($x72 (and $x254 $x201)))
 (let (($x31 (and $x72 $x12)))
 (let (($x155 (and $x31 $x152)))
 (let (($x99 (and $x155 $x10)))
 (let (($x11 (and $x99 $x181)))
 (let (($x150 (and $x11 $x106)))
 (let (($x191 (and $x150 $x118)))
 (let (($x278 (and $x191 $x196)))
 (let (($x65 (and $x278 $x281)))
 (let (($x48 (and $x65 $x75)))
 (let (($x218 (and $x48 $x290)))
 (let (($x45 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x262 (and (not $x45) $x218)))
 (let (($x50 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x46 (and $x50 $x262)))
 (let (($x117 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x206 (and $x117 $x46)))
 (let (($x194 (forall ((input.ind-%var2069X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2069X)))
 (=> $x147 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2069X) (_ bv0 32)))))
 ))
 (let (($x246 (forall ((input.ind-%var2068X (_ BitVec 32)) )(let (($x147 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2068X)))
 (= $x147 false)))
 ))
 (let (($x96 (and $x246 $x194)))
 (let (($x197 (and $x96 $x206)))
 (let (($x286 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x192 (and $x286 $x197)))
 (let (($x292 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x224 (bvadd ?x92 (_ bv3 32))))
 (let (($x199 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x224)))
 (let (($x141 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x214 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x224)))
 (let (($x287 (or false (or false (and (and true (or $x214 $x141)) (or $x199 $x292))))))
 (let (($x217 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x287)))
 (let (($x213 (=> (and $x63 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x287)))
 (let (($x280 (and $x213 $x192)))
 (let (($x81 (=> $x280 $x127)))
 (not $x81))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 80
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x91 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x62 (bvule ?x91 (_ bv4294967294 32))))
 (let (($x35 (= $x62 true)))
 (let ((?x225 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x232 (bvneg ?x225)))
 (let (($x255 (= ?x232 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x115 (= $x255 true)))
 (let (($x51 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x188 (= $x51 true)))
 (let (($x243 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x273 (= $x243 true)))
 (let (($x153 (forall ((input.ind-%var2079X (_ BitVec 32)) )(let ((?x127 (bvadd (bvmul input.ind-%var2079X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x127))))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x127 (_ bv2 32))) ?x277)))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x127 (_ bv3 32))) ?x30)))
 (let ((?x108 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2079X)))
 (let (($x174 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2079X)))
 (=> $x174 (= ?x108 ?x25)))))))))
 ))
 (let (($x198 (forall ((input.ind-%var2078X (_ BitVec 32)) )(let (($x244 (and (bvule (_ bv0 32) input.ind-%var2078X) (bvult input.ind-%var2078X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x174 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2078X)))
 (= $x174 $x244))))
 ))
 (let (($x212 (and $x198 $x153)))
 (let (($x165 (= $x212 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x253 (= $x204 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x145 (bvsub ?x92 ?x179)))
 (let (($x90 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x145) (bvult ?x92 ?x145))))
 (let (($x186 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x230 (ite $x186 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x270 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x226 (bvmul (_ bv4 64) ?x270)))
 (let ((?x173 ((_ extract 63 32) ?x226)))
 (let (($x49 (= ?x173 ?x230)))
 (let (($x15 (and $x49 $x90)))
 (let (($x301 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x23 (and $x301 $x15)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x185 (=> $x16 $x23)))
 (let (($x5 (= $x185 true)))
 (let (($x33 (= $x16 true)))
 (let (($x268 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x6 (= $x268 true)))
 (let ((?x299 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x222 (= (_ bv0 32) ?x299)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x216 (= (_ bv0 32) ?x60)))
 (let ((?x191 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x191)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x282 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x107)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x203 (and $x150 $x282)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (and $x106 $x203)))
 (let (($x98 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x298 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x257 (and $x245 $x298)))
 (let (($x300 (not $x257)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x94 (and $x140 $x111)))
 (let (($x99 (and (not $x94) $x300)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (and $x135 $x41)))
 (let (($x156 (not $x284)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x260 (and $x231 $x12)))
 (let (($x54 (and (not $x260) $x156)))
 (let (($x170 (and (and (and (and (and (and $x54 $x99) $x181) $x98) $x118) $x28) $x216)))
 (let (($x238 (and $x170 $x222)))
 (let (($x295 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x152 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x261 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x152)))
 (let (($x164 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x155 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x152)))
 (let (($x22 (or false (or false (and (and true (or $x155 $x164)) (or $x261 $x295))))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x22)))
 (let (($x235 (and $x38 $x238)))
 (let (($x154 (= $x235 true)))
 (let ((?x44 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x201 (= (_ bv0 2) ?x44)))
 (let (($x72 (= $x201 true)))
 (let (($x211 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x259 (= $x211 true)))
 (let ((?x120 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x137 (bvneg ?x120)))
 (let (($x142 (= ?x137 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x239 (= $x142 true)))
 (let (($x209 (= ?x137 input.dst.llvm-%n)))
 (let (($x169 (= $x209 true)))
 (let (($x189 (and $x169 $x239)))
 (let (($x254 (and $x189 $x259)))
 (let (($x17 (and $x254 $x72)))
 (let (($x208 (and $x17 $x154)))
 (let (($x84 (and $x208 $x6)))
 (let (($x190 (and $x84 $x33)))
 (let (($x101 (and $x190 $x5)))
 (let (($x18 (and $x101 $x253)))
 (let (($x88 (and $x18 $x165)))
 (let (($x95 (and $x88 $x273)))
 (let (($x267 (and $x95 $x188)))
 (let (($x83 (and $x267 $x115)))
 (let (($x130 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x14 (and (not $x130) $x83)))
 (let (($x97 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x202 (and $x97 $x14)))
 (let (($x103 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x114 (and $x103 $x202)))
 (let (($x102 (forall ((input.ind-%var2089X (_ BitVec 32)) )(let (($x119 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2089X)))
 (=> $x119 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2089X) (_ bv0 32)))))
 ))
 (let (($x194 (forall ((input.ind-%var2088X (_ BitVec 32)) )(let (($x119 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2088X)))
 (= $x119 false)))
 ))
 (let (($x79 (and $x194 $x102)))
 (let (($x149 (and $x79 $x114)))
 (let (($x58 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x125 (and $x58 $x149)))
 (let (($x207 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x141 (bvadd ?x92 (_ bv3 32))))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x141)))
 (let (($x121 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x141)))
 (let (($x213 (or false (or false (and (and true (or $x133 $x121)) (or $x293 $x207))))))
 (let (($x286 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x213)))
 (let (($x289 (=> (and $x16 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x213)))
 (let (($x220 (and $x289 $x125)))
 (let (($x89 (=> $x220 $x35)))
 (not $x89))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x91 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x62 (bvule ?x91 (_ bv4294967294 32))))
 (let (($x35 (= $x62 true)))
 (let ((?x225 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x232 (bvneg ?x225)))
 (let (($x255 (= ?x232 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x115 (= $x255 true)))
 (let (($x51 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x188 (= $x51 true)))
 (let (($x243 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x273 (= $x243 true)))
 (let (($x153 (forall ((input.ind-%var2079X (_ BitVec 32)) )(let ((?x127 (bvadd (bvmul input.ind-%var2079X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x127 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x127))))
 (let ((?x30 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x127 (_ bv2 32))) ?x277)))
 (let ((?x25 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x127 (_ bv3 32))) ?x30)))
 (let ((?x108 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2079X)))
 (let (($x174 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2079X)))
 (=> $x174 (= ?x108 ?x25)))))))))
 ))
 (let (($x198 (forall ((input.ind-%var2078X (_ BitVec 32)) )(let (($x244 (and (bvule (_ bv0 32) input.ind-%var2078X) (bvult input.ind-%var2078X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x174 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2078X)))
 (= $x174 $x244))))
 ))
 (let (($x212 (and $x198 $x153)))
 (let (($x165 (= $x212 true)))
 (let (($x204 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x253 (= $x204 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x145 (bvsub ?x92 ?x179)))
 (let (($x90 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x145) (bvult ?x92 ?x145))))
 (let (($x186 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x230 (ite $x186 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x270 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x226 (bvmul (_ bv4 64) ?x270)))
 (let ((?x173 ((_ extract 63 32) ?x226)))
 (let (($x49 (= ?x173 ?x230)))
 (let (($x15 (and $x49 $x90)))
 (let (($x301 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x23 (and $x301 $x15)))
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x185 (=> $x16 $x23)))
 (let (($x5 (= $x185 true)))
 (let (($x33 (= $x16 true)))
 (let (($x268 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x6 (= $x268 true)))
 (let ((?x299 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x222 (= (_ bv0 32) ?x299)))
 (let ((?x60 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x216 (= (_ bv0 32) ?x60)))
 (let ((?x191 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x191)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x282 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x107)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x203 (and $x150 $x282)))
 (let (($x106 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (and $x106 $x203)))
 (let (($x98 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x181 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x298 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x245 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x257 (and $x245 $x298)))
 (let (($x300 (not $x257)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x140 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x94 (and $x140 $x111)))
 (let (($x99 (and (not $x94) $x300)))
 (let (($x41 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x284 (and $x135 $x41)))
 (let (($x156 (not $x284)))
 (let (($x12 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x260 (and $x231 $x12)))
 (let (($x54 (and (not $x260) $x156)))
 (let (($x170 (and (and (and (and (and (and $x54 $x99) $x181) $x98) $x118) $x28) $x216)))
 (let (($x238 (and $x170 $x222)))
 (let (($x295 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x152 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x261 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x152)))
 (let (($x164 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x155 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x152)))
 (let (($x22 (or false (or false (and (and true (or $x155 $x164)) (or $x261 $x295))))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x22)))
 (let (($x235 (and $x38 $x238)))
 (let (($x154 (= $x235 true)))
 (let ((?x44 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x201 (= (_ bv0 2) ?x44)))
 (let (($x72 (= $x201 true)))
 (let (($x211 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x259 (= $x211 true)))
 (let ((?x120 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x137 (bvneg ?x120)))
 (let (($x142 (= ?x137 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x239 (= $x142 true)))
 (let (($x209 (= ?x137 input.dst.llvm-%n)))
 (let (($x169 (= $x209 true)))
 (let (($x189 (and $x169 $x239)))
 (let (($x254 (and $x189 $x259)))
 (let (($x17 (and $x254 $x72)))
 (let (($x208 (and $x17 $x154)))
 (let (($x84 (and $x208 $x6)))
 (let (($x190 (and $x84 $x33)))
 (let (($x101 (and $x190 $x5)))
 (let (($x18 (and $x101 $x253)))
 (let (($x88 (and $x18 $x165)))
 (let (($x95 (and $x88 $x273)))
 (let (($x267 (and $x95 $x188)))
 (let (($x83 (and $x267 $x115)))
 (let (($x130 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x14 (and (not $x130) $x83)))
 (let (($x97 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x202 (and $x97 $x14)))
 (let (($x103 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x114 (and $x103 $x202)))
 (let (($x102 (forall ((input.ind-%var2089X (_ BitVec 32)) )(let (($x119 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2089X)))
 (=> $x119 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2089X) (_ bv0 32)))))
 ))
 (let (($x194 (forall ((input.ind-%var2088X (_ BitVec 32)) )(let (($x119 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2088X)))
 (= $x119 false)))
 ))
 (let (($x79 (and $x194 $x102)))
 (let (($x149 (and $x79 $x114)))
 (let (($x58 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x125 (and $x58 $x149)))
 (let (($x207 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x141 (bvadd ?x92 (_ bv3 32))))
 (let (($x293 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x141)))
 (let (($x121 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x141)))
 (let (($x213 (or false (or false (and (and true (or $x133 $x121)) (or $x293 $x207))))))
 (let (($x286 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x213)))
 (let (($x289 (=> (and $x16 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x213)))
 (let (($x220 (and $x289 $x125)))
 (let (($x89 (=> $x220 $x35)))
 (not $x89))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 81
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x196 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x43 (bvsge ?x196 (_ bv0 32))))
 (let (($x87 (= $x43 true)))
 (let ((?x218 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x262 (bvneg ?x218)))
 (let (($x113 (= ?x262 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x219 (= $x113 true)))
 (let (($x75 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x206 (= $x75 true)))
 (let (($x123 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x34 (= $x123 true)))
 (let (($x177 (forall ((input.ind-%var2099X (_ BitVec 32)) )(let ((?x35 (bvadd (bvmul input.ind-%var2099X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x285 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x35 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x35))))
 (let ((?x110 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x35 (_ bv2 32))) ?x285)))
 (let ((?x117 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x35 (_ bv3 32))) ?x110)))
 (let ((?x243 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2099X)))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2099X)))
 (=> $x69 (= ?x243 ?x117)))))))))
 ))
 (let (($x153 (forall ((input.ind-%var2098X (_ BitVec 32)) )(let (($x221 (and (bvule (_ bv0 32) input.ind-%var2098X) (bvult input.ind-%var2098X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2098X)))
 (= $x69 $x221))))
 ))
 (let (($x57 (and $x153 $x177)))
 (let (($x278 (= $x57 true)))
 (let (($x241 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x127 (= $x241 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x253 (bvsub ?x92 ?x179)))
 (let (($x61 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x253) (bvult ?x92 ?x253))))
 (let (($x5 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x101 (ite $x5 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x15 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x23 (bvmul (_ bv4 64) ?x15)))
 (let ((?x185 ((_ extract 63 32) ?x23)))
 (let (($x204 (= ?x185 ?x101)))
 (let (($x244 (and $x204 $x61)))
 (let (($x109 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x240 (and $x109 $x244)))
 (let (($x175 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x198 (=> $x175 $x240)))
 (let (($x108 (= $x198 true)))
 (let (($x49 (= $x175 true)))
 (let (($x173 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x186 (= $x173 true)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x235 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x235)))
 (let ((?x222 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x238 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x222)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x216 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x71 $x216)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x299 (and $x28 $x170)))
 (let (($x191 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x160 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x106 (and $x98 $x160)))
 (let (($x150 (not $x106)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (and $x181 $x53)))
 (let (($x282 (and (not $x11) $x150)))
 (let (($x257 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (and $x298 $x257)))
 (let (($x99 (not $x300)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x245 (and $x39 $x167)))
 (let (($x77 (and (not $x245) $x99)))
 (let (($x157 (and (and (and (and (and (and $x77 $x282) $x118) $x191) $x299) $x238) $x154)))
 (let (($x301 (and $x157 $x268)))
 (let (($x284 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x231 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x260 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x231)))
 (let (($x111 (or false (or false (and (and true (or $x12 $x260)) (or $x41 $x284))))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x111)))
 (let (($x26 (and $x10 $x301)))
 (let (($x270 (= $x26 true)))
 (let ((?x234 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x70 (= (_ bv0 2) ?x234)))
 (let (($x261 (= $x70 true)))
 (let (($x276 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x152 (= $x276 true)))
 (let ((?x254 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x82 (bvneg ?x254)))
 (let (($x72 (= ?x82 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x17 (= $x72 true)))
 (let (($x44 (= ?x82 input.dst.llvm-%n)))
 (let (($x201 (= $x44 true)))
 (let (($x31 (and $x201 $x17)))
 (let (($x155 (and $x31 $x152)))
 (let (($x295 (and $x155 $x261)))
 (let (($x226 (and $x295 $x270)))
 (let (($x230 (and $x226 $x186)))
 (let (($x56 (and $x230 $x49)))
 (let (($x65 (and $x56 $x108)))
 (let (($x73 (and $x65 $x127)))
 (let (($x166 (and $x73 $x278)))
 (let (($x76 (and $x166 $x34)))
 (let (($x197 (and $x76 $x206)))
 (let (($x48 (and $x197 $x219)))
 (let (($x211 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x46 (and (not $x211) $x48)))
 (let (($x189 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x192 (and $x189 $x46)))
 (let (($x169 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x36 (and $x169 $x192)))
 (let (($x120 (forall ((input.ind-%var2109X (_ BitVec 32)) )(let (($x210 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2109X)))
 (=> $x210 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2109X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var2108X (_ BitVec 32)) )(let (($x210 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2108X)))
 (= $x210 false)))
 ))
 (let (($x137 (and $x102 $x120)))
 (let (($x78 (and $x137 $x36)))
 (let (($x246 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x162 (and $x246 $x78)))
 (let (($x287 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x121 (bvadd ?x92 (_ bv3 32))))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x199 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x121)))
 (let (($x289 (or false (or false (and (and true (or $x8 $x199)) (or $x116 $x287))))))
 (let (($x58 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x289)))
 (let (($x7 (=> (and $x175 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x289)))
 (let (($x280 (and $x7 $x162)))
 (let (($x45 (=> $x280 $x87)))
 (not $x45))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x196 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x43 (bvsge ?x196 (_ bv0 32))))
 (let (($x87 (= $x43 true)))
 (let ((?x218 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x262 (bvneg ?x218)))
 (let (($x113 (= ?x262 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x219 (= $x113 true)))
 (let (($x75 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x206 (= $x75 true)))
 (let (($x123 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x34 (= $x123 true)))
 (let (($x177 (forall ((input.ind-%var2099X (_ BitVec 32)) )(let ((?x35 (bvadd (bvmul input.ind-%var2099X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x285 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x35 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x35))))
 (let ((?x110 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x35 (_ bv2 32))) ?x285)))
 (let ((?x117 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x35 (_ bv3 32))) ?x110)))
 (let ((?x243 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2099X)))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2099X)))
 (=> $x69 (= ?x243 ?x117)))))))))
 ))
 (let (($x153 (forall ((input.ind-%var2098X (_ BitVec 32)) )(let (($x221 (and (bvule (_ bv0 32) input.ind-%var2098X) (bvult input.ind-%var2098X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2098X)))
 (= $x69 $x221))))
 ))
 (let (($x57 (and $x153 $x177)))
 (let (($x278 (= $x57 true)))
 (let (($x241 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x127 (= $x241 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x253 (bvsub ?x92 ?x179)))
 (let (($x61 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x253) (bvult ?x92 ?x253))))
 (let (($x5 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x101 (ite $x5 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x15 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x23 (bvmul (_ bv4 64) ?x15)))
 (let ((?x185 ((_ extract 63 32) ?x23)))
 (let (($x204 (= ?x185 ?x101)))
 (let (($x244 (and $x204 $x61)))
 (let (($x109 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x240 (and $x109 $x244)))
 (let (($x175 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x198 (=> $x175 $x240)))
 (let (($x108 (= $x198 true)))
 (let (($x49 (= $x175 true)))
 (let (($x173 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x186 (= $x173 true)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x235 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x235)))
 (let ((?x222 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x238 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x222)))
 (let ((?x60 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x216 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x60)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x71 $x216)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x299 (and $x28 $x170)))
 (let (($x191 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x118 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x160 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x98 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x106 (and $x98 $x160)))
 (let (($x150 (not $x106)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x181 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x11 (and $x181 $x53)))
 (let (($x282 (and (not $x11) $x150)))
 (let (($x257 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x300 (and $x298 $x257)))
 (let (($x99 (not $x300)))
 (let (($x167 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x245 (and $x39 $x167)))
 (let (($x77 (and (not $x245) $x99)))
 (let (($x157 (and (and (and (and (and (and $x77 $x282) $x118) $x191) $x299) $x238) $x154)))
 (let (($x301 (and $x157 $x268)))
 (let (($x284 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x231 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x41 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x231)))
 (let (($x260 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x12 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x231)))
 (let (($x111 (or false (or false (and (and true (or $x12 $x260)) (or $x41 $x284))))))
 (let (($x10 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x111)))
 (let (($x26 (and $x10 $x301)))
 (let (($x270 (= $x26 true)))
 (let ((?x234 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x70 (= (_ bv0 2) ?x234)))
 (let (($x261 (= $x70 true)))
 (let (($x276 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x152 (= $x276 true)))
 (let ((?x254 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x82 (bvneg ?x254)))
 (let (($x72 (= ?x82 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x17 (= $x72 true)))
 (let (($x44 (= ?x82 input.dst.llvm-%n)))
 (let (($x201 (= $x44 true)))
 (let (($x31 (and $x201 $x17)))
 (let (($x155 (and $x31 $x152)))
 (let (($x295 (and $x155 $x261)))
 (let (($x226 (and $x295 $x270)))
 (let (($x230 (and $x226 $x186)))
 (let (($x56 (and $x230 $x49)))
 (let (($x65 (and $x56 $x108)))
 (let (($x73 (and $x65 $x127)))
 (let (($x166 (and $x73 $x278)))
 (let (($x76 (and $x166 $x34)))
 (let (($x197 (and $x76 $x206)))
 (let (($x48 (and $x197 $x219)))
 (let (($x211 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x46 (and (not $x211) $x48)))
 (let (($x189 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x192 (and $x189 $x46)))
 (let (($x169 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x36 (and $x169 $x192)))
 (let (($x120 (forall ((input.ind-%var2109X (_ BitVec 32)) )(let (($x210 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2109X)))
 (=> $x210 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2109X) (_ bv0 32)))))
 ))
 (let (($x102 (forall ((input.ind-%var2108X (_ BitVec 32)) )(let (($x210 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2108X)))
 (= $x210 false)))
 ))
 (let (($x137 (and $x102 $x120)))
 (let (($x78 (and $x137 $x36)))
 (let (($x246 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x162 (and $x246 $x78)))
 (let (($x287 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x121 (bvadd ?x92 (_ bv3 32))))
 (let (($x116 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x121)))
 (let (($x199 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x121)))
 (let (($x289 (or false (or false (and (and true (or $x8 $x199)) (or $x116 $x287))))))
 (let (($x58 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x289)))
 (let (($x7 (=> (and $x175 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x289)))
 (let (($x280 (and $x7 $x162)))
 (let (($x45 (=> $x280 $x87)))
 (not $x45))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 82
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x165 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x91 (bvule ?x165 input.dst.llvm-%n)))
 (let (($x124 (= $x91 true)))
 (let ((?x83 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x14 (bvneg ?x83)))
 (let (($x225 (= ?x14 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x232 (= $x225 true)))
 (let ((?x155 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x164 (bvneg ?x155)))
 (let (($x188 (= ?x164 input.dst.llvm-%n)))
 (let (($x114 (= $x188 true)))
 (let (($x151 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x171 (= $x151 true)))
 (let (($x42 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x88 (= $x42 true)))
 (let (($x103 (forall ((input.ind-%var2119X (_ BitVec 32)) )(let ((?x280 (bvadd (bvmul input.ind-%var2119X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x280))))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x280 (_ bv2 32))) ?x45)))
 (let ((?x50 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x280 (_ bv3 32))) ?x176)))
 (let ((?x57 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2119X)))
 (let (($x248 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2119X)))
 (=> $x248 (= ?x57 ?x50)))))))))
 ))
 (let (($x117 (forall ((input.ind-%var2118X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var2118X) (bvult input.ind-%var2118X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x248 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2118X)))
 (= $x248 $x285))))
 ))
 (let (($x119 (and $x117 $x103)))
 (let (($x74 (= $x119 true)))
 (let (($x153 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x243 (= $x153 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x108 (bvsub ?x92 ?x179)))
 (let (($x73 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x108) (bvult ?x92 ?x108))))
 (let (($x244 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x240 (ite $x244 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x174 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x296 (bvmul (_ bv4 64) ?x174)))
 (let ((?x61 ((_ extract 63 32) ?x296)))
 (let (($x198 (= ?x61 ?x240)))
 (let (($x69 (and $x198 $x73)))
 (let (($x18 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x25 (and $x18 $x69)))
 (let (($x205 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x30 (=> $x205 $x25)))
 (let (($x221 (= $x30 true)))
 (let (($x185 (= $x205 true)))
 (let (($x90 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x15 (= $x90 true)))
 (let ((?x301 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x26 (= (_ bv0 32) ?x301)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let ((?x222 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x238 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x222)))
 (let (($x190 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x178 (and $x190 $x238)))
 (let (($x299 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x235 (and $x299 $x178)))
 (let (($x170 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x251 (and $x118 $x84)))
 (let (($x191 (not $x251)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x282 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x203 (and $x282 $x6)))
 (let (($x28 (and (not $x203) $x191)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x11 $x107)))
 (let (($x160 (not $x98)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x53 (and $x41 $x284)))
 (let (($x150 (and (not $x53) $x160)))
 (let (($x49 (and (and (and (and (and (and $x150 $x28) $x60) $x170) $x235) $x157) $x268)))
 (let (($x56 (and $x49 $x26)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x140 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x140)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x140)))
 (let (($x99 (or false (or false (and (and true (or $x111 $x10)) (or $x245 $x143))))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x99)))
 (let (($x145 (and $x181 $x56)))
 (let (($x148 (= $x145 true)))
 (let ((?x231 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x12 (= (_ bv0 2) ?x231)))
 (let (($x260 (= $x12 true)))
 (let (($x295 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x22 (= $x295 true)))
 (let (($x234 (= ?x164 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x70 (= $x234 true)))
 (let (($x38 (and $x70 $x22)))
 (let (($x215 (and $x38 $x260)))
 (let (($x109 (and $x215 $x148)))
 (let (($x23 (and $x109 $x15)))
 (let (($x5 (and $x23 $x185)))
 (let (($x126 (and $x5 $x221)))
 (let (($x95 (and $x126 $x243)))
 (let (($x129 (and $x95 $x74)))
 (let (($x86 (and $x129 $x88)))
 (let (($x51 (and $x86 $x171)))
 (let (($x149 (and $x51 $x114)))
 (let (($x267 (and $x149 $x232)))
 (let (($x276 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x202 (and (not $x276) $x267)))
 (let (($x31 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x125 (and $x31 $x202)))
 (let (($x201 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x290 (and $x201 $x125)))
 (let (($x254 (forall ((input.ind-%var2129X (_ BitVec 32)) )(let (($x265 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2129X)))
 (=> $x265 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2129X) (_ bv0 32)))))
 ))
 (let (($x120 (forall ((input.ind-%var2128X (_ BitVec 32)) )(let (($x265 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2128X)))
 (= $x265 false)))
 ))
 (let (($x82 (and $x120 $x254)))
 (let (($x81 (and $x82 $x290)))
 (let (($x194 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x277 (and $x194 $x81)))
 (let (($x213 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x199 (bvadd ?x92 (_ bv3 32))))
 (let (($x217 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x199)))
 (let (($x293 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x199)))
 (let (($x7 (or false (or false (and (and true (or $x144 $x293)) (or $x217 $x213))))))
 (let (($x246 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x7)))
 (let (($x224 (=> (and $x205 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x7)))
 (let (($x220 (and $x224 $x277)))
 (let (($x130 (=> $x220 $x124)))
 (not $x130))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let ((?x165 (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x91 (bvule ?x165 input.dst.llvm-%n)))
 (let (($x124 (= $x91 true)))
 (let ((?x83 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x14 (bvneg ?x83)))
 (let (($x225 (= ?x14 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x232 (= $x225 true)))
 (let ((?x155 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x164 (bvneg ?x155)))
 (let (($x188 (= ?x164 input.dst.llvm-%n)))
 (let (($x114 (= $x188 true)))
 (let (($x151 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x171 (= $x151 true)))
 (let (($x42 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x88 (= $x42 true)))
 (let (($x103 (forall ((input.ind-%var2119X (_ BitVec 32)) )(let ((?x280 (bvadd (bvmul input.ind-%var2119X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x280 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x280))))
 (let ((?x176 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x280 (_ bv2 32))) ?x45)))
 (let ((?x50 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x280 (_ bv3 32))) ?x176)))
 (let ((?x57 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2119X)))
 (let (($x248 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2119X)))
 (=> $x248 (= ?x57 ?x50)))))))))
 ))
 (let (($x117 (forall ((input.ind-%var2118X (_ BitVec 32)) )(let (($x285 (and (bvule (_ bv0 32) input.ind-%var2118X) (bvult input.ind-%var2118X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x248 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2118X)))
 (= $x248 $x285))))
 ))
 (let (($x119 (and $x117 $x103)))
 (let (($x74 (= $x119 true)))
 (let (($x153 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x243 (= $x153 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x108 (bvsub ?x92 ?x179)))
 (let (($x73 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x108) (bvult ?x92 ?x108))))
 (let (($x244 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x240 (ite $x244 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x174 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x296 (bvmul (_ bv4 64) ?x174)))
 (let ((?x61 ((_ extract 63 32) ?x296)))
 (let (($x198 (= ?x61 ?x240)))
 (let (($x69 (and $x198 $x73)))
 (let (($x18 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x25 (and $x18 $x69)))
 (let (($x205 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x30 (=> $x205 $x25)))
 (let (($x221 (= $x30 true)))
 (let (($x185 (= $x205 true)))
 (let (($x90 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x15 (= $x90 true)))
 (let ((?x301 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x26 (= (_ bv0 32) ?x301)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x157 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x154)))
 (let ((?x222 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x238 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x222)))
 (let (($x190 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x178 (and $x190 $x238)))
 (let (($x299 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x235 (and $x299 $x178)))
 (let (($x170 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x60 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x251 (and $x118 $x84)))
 (let (($x191 (not $x251)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x282 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x203 (and $x282 $x6)))
 (let (($x28 (and (not $x203) $x191)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x11 $x107)))
 (let (($x160 (not $x98)))
 (let (($x284 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x53 (and $x41 $x284)))
 (let (($x150 (and (not $x53) $x160)))
 (let (($x49 (and (and (and (and (and (and $x150 $x28) $x60) $x170) $x235) $x157) $x268)))
 (let (($x56 (and $x49 $x26)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x140 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x245 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x140)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x111 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x140)))
 (let (($x99 (or false (or false (and (and true (or $x111 $x10)) (or $x245 $x143))))))
 (let (($x181 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x99)))
 (let (($x145 (and $x181 $x56)))
 (let (($x148 (= $x145 true)))
 (let ((?x231 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x12 (= (_ bv0 2) ?x231)))
 (let (($x260 (= $x12 true)))
 (let (($x295 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x22 (= $x295 true)))
 (let (($x234 (= ?x164 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x70 (= $x234 true)))
 (let (($x38 (and $x70 $x22)))
 (let (($x215 (and $x38 $x260)))
 (let (($x109 (and $x215 $x148)))
 (let (($x23 (and $x109 $x15)))
 (let (($x5 (and $x23 $x185)))
 (let (($x126 (and $x5 $x221)))
 (let (($x95 (and $x126 $x243)))
 (let (($x129 (and $x95 $x74)))
 (let (($x86 (and $x129 $x88)))
 (let (($x51 (and $x86 $x171)))
 (let (($x149 (and $x51 $x114)))
 (let (($x267 (and $x149 $x232)))
 (let (($x276 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x202 (and (not $x276) $x267)))
 (let (($x31 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x125 (and $x31 $x202)))
 (let (($x201 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x290 (and $x201 $x125)))
 (let (($x254 (forall ((input.ind-%var2129X (_ BitVec 32)) )(let (($x265 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2129X)))
 (=> $x265 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2129X) (_ bv0 32)))))
 ))
 (let (($x120 (forall ((input.ind-%var2128X (_ BitVec 32)) )(let (($x265 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2128X)))
 (= $x265 false)))
 ))
 (let (($x82 (and $x120 $x254)))
 (let (($x81 (and $x82 $x290)))
 (let (($x194 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x277 (and $x194 $x81)))
 (let (($x213 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x199 (bvadd ?x92 (_ bv3 32))))
 (let (($x217 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x199)))
 (let (($x293 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x199)))
 (let (($x7 (or false (or false (and (and true (or $x144 $x293)) (or $x217 $x213))))))
 (let (($x246 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x7)))
 (let (($x224 (=> (and $x205 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x7)))
 (let (($x220 (and $x224 $x277)))
 (let (($x130 (=> $x220 $x124)))
 (not $x130))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 83
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x122 (forall ((input.ind-%var2163X (_ BitVec 32)) )(let ((?x202 (bvadd (bvmul input.ind-%var2163X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x293 (bvadd ?x92 (_ bv3 32))))
 (let ((?x134 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x92 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x183 (store ?x134 (bvadd ?x92 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x233 (store ?x183 (bvadd ?x92 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x172 (store ?x233 ?x293 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x100 (concat (select ?x172 (bvadd ?x202 (_ bv2 32))) (concat (select ?x172 (bvadd ?x202 (_ bv1 32))) (select ?x172 ?x202)))))
 (let ((?x79 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2163X)))
 (let (($x59 (= input.ind-%var2163X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x138 (= (ite $x59 input.spec-%var-i-0.L3%6%bbentry ?x79) (concat (select ?x172 (bvadd ?x202 (_ bv3 32))) ?x100))))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2163X)))
 (let (($x128 (or $x162 $x59)))
 (=> $x128 $x138))))))))))))))))
 ))
 (let (($x66 (forall ((input.ind-%var2162X (_ BitVec 32)) )(let (($x43 (bvule (_ bv0 32) input.ind-%var2162X)))
 (let (($x85 (and $x43 (bvult input.ind-%var2162X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x59 (= input.ind-%var2162X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2162X)))
 (let (($x128 (or $x162 $x59)))
 (= $x128 $x85)))))))
 ))
 (let (($x229 (and $x66 $x122)))
 (let (($x294 (= $x229 true)))
 (let ((?x262 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x113 (bvneg ?x262)))
 (let (($x75 (= ?x113 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x206 (= $x75 true)))
 (let ((?x123 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x34 (= (_ bv0 2) ?x123)))
 (let (($x48 (= $x34 true)))
 (let (($x177 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x62 (= $x177 true)))
 (let (($x64 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x187 (= $x64 true)))
 (let (($x137 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x169 (= $x137 true)))
 (let (($x96 (forall ((input.ind-%var2139X (_ BitVec 32)) )(let ((?x202 (bvadd (bvmul input.ind-%var2139X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x202))))
 (let ((?x91 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x202 (_ bv2 32))) ?x277)))
 (let ((?x146 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x202 (_ bv3 32))) ?x91)))
 (let ((?x79 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2139X)))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2139X)))
 (=> $x162 (= ?x79 ?x146)))))))))
 ))
 (let (($x45 (forall ((input.ind-%var2138X (_ BitVec 32)) )(let (($x43 (bvule (_ bv0 32) input.ind-%var2138X)))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2138X)))
 (= $x162 (and $x43 (bvult input.ind-%var2138X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x278 (and $x45 $x96)))
 (let (($x97 (= $x278 true)))
 (let (($x285 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x110 (= $x285 true)))
 (let (($x248 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x89 (= $x248 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x241 (bvsub ?x92 ?x179)))
 (let (($x25 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x241) (bvult ?x92 ?x241))))
 (let (($x198 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x65 (ite $x198 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x61 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x244 (bvmul (_ bv4 64) ?x61)))
 (let ((?x240 ((_ extract 63 32) ?x244)))
 (let (($x108 (= ?x240 ?x65)))
 (let (($x30 (and $x108 $x25)))
 (let (($x174 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x221 (and $x174 $x30)))
 (let (($x63 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x126 (=> $x63 $x221)))
 (let (($x153 (= $x126 true)))
 (let (($x101 (= $x63 true)))
 (let ((?x49 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x301 (= (_ bv0 32) ?x49)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x157 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x230 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x157)))
 (let ((?x178 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x235 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x178)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (and $x238 $x235)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (and $x222 $x186)))
 (let (($x190 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x270 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x28 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (and $x28 $x270)))
 (let (($x60 (not $x71)))
 (let (($x251 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x84 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x191 (and $x84 $x251)))
 (let (($x216 (and (not $x191) $x60)))
 (let (($x282 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x150 $x282)))
 (let (($x203 (not $x6)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x10 $x39)))
 (let (($x118 (and (not $x160) $x203)))
 (let (($x90 (and (and (and (and (and (and $x118 $x216) $x173) $x190) $x154) $x230) $x268)))
 (let (($x15 (and $x90 $x301)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x143 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x143)))
 (let (($x257 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x143)))
 (let (($x11 (or false (or false (and (and true (or $x298 $x257)) (or $x181 $x41))))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x11)))
 (let (($x23 (and $x98 $x15)))
 (let (($x185 (= $x23 true)))
 (let ((?x12 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x260 (bvneg ?x12)))
 (let (($x54 (= ?x260 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x77 (= $x54 true)))
 (let (($x215 (= ?x260 input.dst.llvm-%n)))
 (let (($x156 (= $x215 true)))
 (let (($x140 (and $x156 $x77)))
 (let (($x5 (and $x140 $x185)))
 (let (($x204 (and $x5 $x101)))
 (let (($x243 (and $x204 $x153)))
 (let (($x291 (and $x243 $x89)))
 (let (($x117 (and $x291 $x110)))
 (let (($x239 (and $x117 $x97)))
 (let (($x210 (and $x239 $x169)))
 (let (($x269 (and $x210 $x187)))
 (let (($x115 (and $x269 $x62)))
 (let (($x46 (and $x115 $x48)))
 (let (($x76 (and $x46 $x206)))
 (let (($x94 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x219 (and (not $x94) $x76)))
 (let (($x22 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x192 (and $x22 $x219)))
 (let (($x70 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x35 (and $x70 $x192)))
 (let (($x155 (forall ((input.ind-%var2149X (_ BitVec 32)) )(let (($x142 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2149X)))
 (=> $x142 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2149X) (_ bv0 32)))))
 ))
 (let (($x254 (forall ((input.ind-%var2148X (_ BitVec 32)) )(let (($x142 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2148X)))
 (= $x142 false)))
 ))
 (let (($x164 (and $x254 $x155)))
 (let (($x281 (and $x164 $x35)))
 (let (($x102 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x223 (and $x102 $x281)))
 (let (($x289 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x293 (bvadd ?x92 (_ bv3 32))))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x116 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x292 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x293)))
 (let (($x224 (or false (or false (and (and true (or $x292 $x116)) (or $x286 $x289))))))
 (let (($x194 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x224)))
 (let (($x141 (=> (and $x63 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x224)))
 (let (($x36 (and $x141 $x223)))
 (let (($x200 (=> $x36 $x294)))
 (not $x200)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x122 (forall ((input.ind-%var2163X (_ BitVec 32)) )(let ((?x202 (bvadd (bvmul input.ind-%var2163X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x293 (bvadd ?x92 (_ bv3 32))))
 (let ((?x134 (store input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x92 (_ bv0 32)) ((_ extract 7 0) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x183 (store ?x134 (bvadd ?x92 (_ bv1 32)) ((_ extract 15 8) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x233 (store ?x183 (bvadd ?x92 (_ bv2 32)) ((_ extract 23 16) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x172 (store ?x233 ?x293 ((_ extract 31 24) input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let ((?x100 (concat (select ?x172 (bvadd ?x202 (_ bv2 32))) (concat (select ?x172 (bvadd ?x202 (_ bv1 32))) (select ?x172 ?x202)))))
 (let ((?x79 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2163X)))
 (let (($x59 (= input.ind-%var2163X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x138 (= (ite $x59 input.spec-%var-i-0.L3%6%bbentry ?x79) (concat (select ?x172 (bvadd ?x202 (_ bv3 32))) ?x100))))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2163X)))
 (let (($x128 (or $x162 $x59)))
 (=> $x128 $x138))))))))))))))))
 ))
 (let (($x66 (forall ((input.ind-%var2162X (_ BitVec 32)) )(let (($x43 (bvule (_ bv0 32) input.ind-%var2162X)))
 (let (($x85 (and $x43 (bvult input.ind-%var2162X (bvadd (_ bv1 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))))
 (let (($x59 (= input.ind-%var2162X input.spec-%var-i-0.L3%6%bbentry)))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2162X)))
 (let (($x128 (or $x162 $x59)))
 (= $x128 $x85)))))))
 ))
 (let (($x229 (and $x66 $x122)))
 (let (($x294 (= $x229 true)))
 (let ((?x262 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x113 (bvneg ?x262)))
 (let (($x75 (= ?x113 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x206 (= $x75 true)))
 (let ((?x123 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x34 (= (_ bv0 2) ?x123)))
 (let (($x48 (= $x34 true)))
 (let (($x177 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x62 (= $x177 true)))
 (let (($x64 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x187 (= $x64 true)))
 (let (($x137 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x169 (= $x137 true)))
 (let (($x96 (forall ((input.ind-%var2139X (_ BitVec 32)) )(let ((?x202 (bvadd (bvmul input.ind-%var2139X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x277 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x202))))
 (let ((?x91 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x202 (_ bv2 32))) ?x277)))
 (let ((?x146 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x202 (_ bv3 32))) ?x91)))
 (let ((?x79 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2139X)))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2139X)))
 (=> $x162 (= ?x79 ?x146)))))))))
 ))
 (let (($x45 (forall ((input.ind-%var2138X (_ BitVec 32)) )(let (($x43 (bvule (_ bv0 32) input.ind-%var2138X)))
 (let (($x162 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2138X)))
 (= $x162 (and $x43 (bvult input.ind-%var2138X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x278 (and $x45 $x96)))
 (let (($x97 (= $x278 true)))
 (let (($x285 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x110 (= $x285 true)))
 (let (($x248 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x89 (= $x248 true)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let ((?x241 (bvsub ?x92 ?x179)))
 (let (($x25 (ite (bvsge ?x179 (_ bv0 32)) (bvuge ?x92 ?x241) (bvult ?x92 ?x241))))
 (let (($x198 (bvslt input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let ((?x65 (ite $x198 (_ bv4294967295 32) (_ bv0 32))))
 (let ((?x61 ((_ sign_extend 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x244 (bvmul (_ bv4 64) ?x61)))
 (let ((?x240 ((_ extract 63 32) ?x244)))
 (let (($x108 (= ?x240 ?x65)))
 (let (($x30 (and $x108 $x25)))
 (let (($x174 (= (bvand ?x92 (_ bv4294967292 32)) ?x92)))
 (let (($x221 (and $x174 $x30)))
 (let (($x63 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x126 (=> $x63 $x221)))
 (let (($x153 (= $x126 true)))
 (let (($x101 (= $x63 true)))
 (let ((?x49 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x301 (= (_ bv0 32) ?x49)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x157 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x230 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x157)))
 (let ((?x178 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x235 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x178)))
 (let (($x238 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x186 (and $x238 $x235)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x154 (and $x222 $x186)))
 (let (($x190 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x173 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x270 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x28 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (and $x28 $x270)))
 (let (($x60 (not $x71)))
 (let (($x251 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x84 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x191 (and $x84 $x251)))
 (let (($x216 (and (not $x191) $x60)))
 (let (($x282 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x6 (and $x150 $x282)))
 (let (($x203 (not $x6)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (and $x10 $x39)))
 (let (($x118 (and (not $x160) $x203)))
 (let (($x90 (and (and (and (and (and (and $x118 $x216) $x173) $x190) $x154) $x230) $x268)))
 (let (($x15 (and $x90 $x301)))
 (let (($x41 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x143 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x181 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x143)))
 (let (($x257 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x143)))
 (let (($x11 (or false (or false (and (and true (or $x298 $x257)) (or $x181 $x41))))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x11)))
 (let (($x23 (and $x98 $x15)))
 (let (($x185 (= $x23 true)))
 (let ((?x12 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x260 (bvneg ?x12)))
 (let (($x54 (= ?x260 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x77 (= $x54 true)))
 (let (($x215 (= ?x260 input.dst.llvm-%n)))
 (let (($x156 (= $x215 true)))
 (let (($x140 (and $x156 $x77)))
 (let (($x5 (and $x140 $x185)))
 (let (($x204 (and $x5 $x101)))
 (let (($x243 (and $x204 $x153)))
 (let (($x291 (and $x243 $x89)))
 (let (($x117 (and $x291 $x110)))
 (let (($x239 (and $x117 $x97)))
 (let (($x210 (and $x239 $x169)))
 (let (($x269 (and $x210 $x187)))
 (let (($x115 (and $x269 $x62)))
 (let (($x46 (and $x115 $x48)))
 (let (($x76 (and $x46 $x206)))
 (let (($x94 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x219 (and (not $x94) $x76)))
 (let (($x22 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x192 (and $x22 $x219)))
 (let (($x70 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x35 (and $x70 $x192)))
 (let (($x155 (forall ((input.ind-%var2149X (_ BitVec 32)) )(let (($x142 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2149X)))
 (=> $x142 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2149X) (_ bv0 32)))))
 ))
 (let (($x254 (forall ((input.ind-%var2148X (_ BitVec 32)) )(let (($x142 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2148X)))
 (= $x142 false)))
 ))
 (let (($x164 (and $x254 $x155)))
 (let (($x281 (and $x164 $x35)))
 (let (($x102 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x223 (and $x102 $x281)))
 (let (($x289 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x293 (bvadd ?x92 (_ bv3 32))))
 (let (($x286 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x293)))
 (let (($x116 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x292 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x293)))
 (let (($x224 (or false (or false (and (and true (or $x292 $x116)) (or $x286 $x289))))))
 (let (($x194 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x224)))
 (let (($x141 (=> (and $x63 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x224)))
 (let (($x36 (and $x141 $x223)))
 (let (($x200 (=> $x36 $x294)))
 (not $x200)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 84
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x182 (not $x16)))
 (let (($x227 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x183 (not $x227)))
 (let (($x159 (or $x183 $x182)))
 (let (($x233 (= $x159 true)))
 (let ((?x136 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x249 (bvneg ?x136)))
 (let (($x85 (= ?x249 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x40 (= $x85 true)))
 (let ((?x219 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x192 (bvneg ?x219)))
 (let (($x36 (= ?x192 input.dst.llvm-%n)))
 (let (($x59 (= $x36 true)))
 (let (($x35 (= ?x192 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x281 (= $x35 true)))
 (let (($x113 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x75 (= $x113 true)))
 (let (($x48 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x46 (= $x48 true)))
 (let (($x180 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x123 (= $x180 true)))
 (let (($x269 (forall ((input.ind-%var2173X (_ BitVec 32)) )(let ((?x91 (bvadd (bvmul input.ind-%var2173X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x91))))
 (let ((?x239 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x91 (_ bv2 32))) ?x96)))
 (let ((?x210 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x91 (_ bv3 32))) ?x239)))
 (let ((?x162 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2173X)))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2173X)))
 (=> $x69 (= ?x162 ?x210)))))))))
 ))
 (let (($x291 (forall ((input.ind-%var2172X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2172X) (bvult input.ind-%var2172X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2172X)))
 (= $x69 $x248))))
 ))
 (let (($x177 (and $x291 $x269)))
 (let (($x62 (= $x177 true)))
 (let (($x65 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x108 (= $x65 true)))
 (let (($x61 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x244 (= $x61 true)))
 (let ((?x90 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x49 (= (_ bv0 32) ?x90)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x230 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x109 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x230)))
 (let ((?x186 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x154 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x186)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x148 (and $x235 $x154)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (and $x178 $x148)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x216 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x170 (and $x216 $x26)))
 (let (($x173 (not $x170)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x270 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x270 $x71)))
 (let (($x299 (and (not $x60) $x173)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x118 $x84)))
 (let (($x191 (not $x251)))
 (let (($x300 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x257 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x257 $x300)))
 (let (($x28 (and (not $x203) $x191)))
 (let (($x101 (and (and (and (and (and (and $x28 $x299) $x145) $x238) $x157) $x109) $x268)))
 (let (($x204 (and $x101 $x49)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x41 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x41)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x284 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x41)))
 (let (($x150 (or false (or false (and (and true (or $x284 $x53)) (or $x98 $x10))))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x150)))
 (let (($x18 (and $x6 $x204)))
 (let (($x253 (= $x18 true)))
 (let ((?x245 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x107 (= (_ bv0 2) ?x245)))
 (let (($x143 (= $x107 true)))
 (let (($x174 (and $x143 $x253)))
 (let (($x240 (and $x174 $x244)))
 (let (($x127 (and $x240 $x108)))
 (let (($x115 (and $x127 $x62)))
 (let (($x34 (and $x115 $x123)))
 (let (($x262 (and $x34 $x46)))
 (let (($x206 (and $x262 $x75)))
 (let (($x223 (and $x206 $x281)))
 (let (($x128 (and $x223 $x59)))
 (let (($x66 (and $x128 $x40)))
 (let (($x140 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x112 (and $x140 $x66)))
 (let (($x156 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x163 (and $x156 $x112)))
 (let (($x12 (forall ((input.ind-%var2183X (_ BitVec 32)) )(let (($x72 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2183X)))
 (=> $x72 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2183X) (_ bv0 32)))))
 ))
 (let (($x155 (forall ((input.ind-%var2182X (_ BitVec 32)) )(let (($x72 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2182X)))
 (= $x72 false)))
 ))
 (let (($x260 (and $x155 $x12)))
 (let (($x32 (and $x260 $x163)))
 (let (($x120 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x134 (and $x120 $x32)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let (($x7 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x92 (_ bv3 32))))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x217 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x207 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x116)))
 (let (($x141 (or false (or false (and (and true (or $x207 $x217)) (or $x58 $x7))))))
 (let (($x102 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x141)))
 (let (($x121 (=> (and $x16 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x141)))
 (let (($x104 (and $x121 $x134)))
 (let (($x228 (=> $x104 $x233)))
 (not $x228))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x16 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x182 (not $x16)))
 (let (($x227 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x183 (not $x227)))
 (let (($x159 (or $x183 $x182)))
 (let (($x233 (= $x159 true)))
 (let ((?x136 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x249 (bvneg ?x136)))
 (let (($x85 (= ?x249 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x40 (= $x85 true)))
 (let ((?x219 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x192 (bvneg ?x219)))
 (let (($x36 (= ?x192 input.dst.llvm-%n)))
 (let (($x59 (= $x36 true)))
 (let (($x35 (= ?x192 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x281 (= $x35 true)))
 (let (($x113 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x75 (= $x113 true)))
 (let (($x48 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x46 (= $x48 true)))
 (let (($x180 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x123 (= $x180 true)))
 (let (($x269 (forall ((input.ind-%var2173X (_ BitVec 32)) )(let ((?x91 (bvadd (bvmul input.ind-%var2173X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x96 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x91 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x91))))
 (let ((?x239 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x91 (_ bv2 32))) ?x96)))
 (let ((?x210 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x91 (_ bv3 32))) ?x239)))
 (let ((?x162 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2173X)))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2173X)))
 (=> $x69 (= ?x162 ?x210)))))))))
 ))
 (let (($x291 (forall ((input.ind-%var2172X (_ BitVec 32)) )(let (($x248 (and (bvule (_ bv0 32) input.ind-%var2172X) (bvult input.ind-%var2172X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x69 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2172X)))
 (= $x69 $x248))))
 ))
 (let (($x177 (and $x291 $x269)))
 (let (($x62 (= $x177 true)))
 (let (($x65 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x108 (= $x65 true)))
 (let (($x61 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x244 (= $x61 true)))
 (let ((?x90 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x49 (= (_ bv0 32) ?x90)))
 (let ((?x208 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x268 (= (_ bv0 32) ?x208)))
 (let ((?x230 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x109 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x230)))
 (let ((?x186 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x154 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x186)))
 (let (($x235 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x148 (and $x235 $x154)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (and $x178 $x148)))
 (let (($x238 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x26 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x216 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x170 (and $x216 $x26)))
 (let (($x173 (not $x170)))
 (let (($x71 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x270 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x60 (and $x270 $x71)))
 (let (($x299 (and (not $x60) $x173)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x251 (and $x118 $x84)))
 (let (($x191 (not $x251)))
 (let (($x300 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x257 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x203 (and $x257 $x300)))
 (let (($x28 (and (not $x203) $x191)))
 (let (($x101 (and (and (and (and (and (and $x28 $x299) $x145) $x238) $x157) $x109) $x268)))
 (let (($x204 (and $x101 $x49)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x41 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x41)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x284 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x41)))
 (let (($x150 (or false (or false (and (and true (or $x284 $x53)) (or $x98 $x10))))))
 (let (($x6 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x150)))
 (let (($x18 (and $x6 $x204)))
 (let (($x253 (= $x18 true)))
 (let ((?x245 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x107 (= (_ bv0 2) ?x245)))
 (let (($x143 (= $x107 true)))
 (let (($x174 (and $x143 $x253)))
 (let (($x240 (and $x174 $x244)))
 (let (($x127 (and $x240 $x108)))
 (let (($x115 (and $x127 $x62)))
 (let (($x34 (and $x115 $x123)))
 (let (($x262 (and $x34 $x46)))
 (let (($x206 (and $x262 $x75)))
 (let (($x223 (and $x206 $x281)))
 (let (($x128 (and $x223 $x59)))
 (let (($x66 (and $x128 $x40)))
 (let (($x140 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x112 (and $x140 $x66)))
 (let (($x156 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x163 (and $x156 $x112)))
 (let (($x12 (forall ((input.ind-%var2183X (_ BitVec 32)) )(let (($x72 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2183X)))
 (=> $x72 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2183X) (_ bv0 32)))))
 ))
 (let (($x155 (forall ((input.ind-%var2182X (_ BitVec 32)) )(let (($x72 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2182X)))
 (= $x72 false)))
 ))
 (let (($x260 (and $x155 $x12)))
 (let (($x32 (and $x260 $x163)))
 (let (($x120 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x134 (and $x120 $x32)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let (($x7 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x116 (bvadd ?x92 (_ bv3 32))))
 (let (($x58 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x116)))
 (let (($x217 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x207 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x116)))
 (let (($x141 (or false (or false (and (and true (or $x207 $x217)) (or $x58 $x7))))))
 (let (($x102 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x141)))
 (let (($x121 (=> (and $x16 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x141)))
 (let (($x104 (and $x121 $x134)))
 (let (($x228 (=> $x104 $x233)))
 (not $x228))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 85
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x175 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x153 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x81 (or $x153 $x175)))
 (let (($x110 (= $x81 true)))
 (let ((?x124 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x130 (bvneg ?x124)))
 (let (($x79 (= ?x130 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x119 (= $x79 true)))
 (let ((?x117 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x241 (bvneg ?x117)))
 (let (($x196 (= ?x241 input.dst.llvm-%n)))
 (let (($x220 (= $x196 true)))
 (let (($x30 (= ?x241 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (= $x30 true)))
 (let (($x142 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x259 (= $x142 true)))
 (let (($x295 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x164 (= $x295 true)))
 (let (($x25 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x43 (= $x25 true)))
 (let (($x228 (forall ((input.ind-%var2193X (_ BitVec 32)) )(let ((?x85 (bvadd (bvmul input.ind-%var2193X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x163 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x85))))
 (let ((?x104 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x85 (_ bv2 32))) ?x163)))
 (let ((?x182 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x85 (_ bv3 32))) ?x104)))
 (let ((?x123 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2193X)))
 (let (($x97 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2193X)))
 (=> $x97 (= ?x123 ?x182)))))))))
 ))
 (let (($x177 (forall ((input.ind-%var2192X (_ BitVec 32)) )(let (($x187 (and (bvule (_ bv0 32) input.ind-%var2192X) (bvult input.ind-%var2192X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x97 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2192X)))
 (= $x97 $x187))))
 ))
 (let (($x172 (and $x177 $x228)))
 (let (($x24 (= $x172 true)))
 (let (($x91 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x137 (= $x91 true)))
 (let (($x291 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x162 (= $x291 true)))
 (let ((?x296 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x296)))
 (let ((?x253 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x253)))
 (let ((?x204 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x204)))
 (let ((?x268 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x101 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x268)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (and $x208 $x101)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (and $x5 $x90)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x235 (and $x23 $x178)))
 (let (($x186 (not $x235)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (and $x15 $x222)))
 (let (($x148 (and (not $x238) $x186)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x299 (and $x170 $x173)))
 (let (($x301 (not $x299)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x33 $x150)))
 (let (($x145 (and (not $x26) $x301)))
 (let (($x127 (and (and (and (and (and (and $x145 $x148) $x185) $x109) $x49) $x18) $x174)))
 (let (($x69 (and $x127 $x61)))
 (let (($x191 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x300 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x251 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x300)))
 (let (($x226 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x203 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x300)))
 (let (($x60 (or false (or false (and (and true (or $x203 $x226)) (or $x251 $x191))))))
 (let (($x216 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x60)))
 (let (($x95 (and $x216 $x69)))
 (let (($x243 (= $x95 true)))
 (let ((?x98 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x10 (= (_ bv0 2) ?x98)))
 (let (($x39 (= $x10 true)))
 (let (($x248 (and $x39 $x243)))
 (let (($x263 (and $x248 $x162)))
 (let (($x169 (and $x263 $x137)))
 (let (($x298 (and $x169 $x24)))
 (let (($x31 (and $x298 $x43)))
 (let (($x70 (and $x31 $x164)))
 (let (($x255 (and $x70 $x259)))
 (let (($x87 (and $x255 $x221)))
 (let (($x165 (and $x87 $x220)))
 (let (($x45 (and $x165 $x119)))
 (let (($x106 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x267 (and $x106 $x45)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x171 (and $x41 $x267)))
 (let (($x99 (forall ((input.ind-%var2203X (_ BitVec 32)) )(let (($x261 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2203X)))
 (=> $x261 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2203X) (_ bv0 32)))))
 ))
 (let (($x12 (forall ((input.ind-%var2202X (_ BitVec 32)) )(let (($x261 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2202X)))
 (= $x261 false)))
 ))
 (let (($x181 (and $x12 $x99)))
 (let (($x290 (and $x181 $x171)))
 (let (($x254 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x73 (and $x254 $x290)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let (($x224 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x92 (_ bv3 32))))
 (let (($x246 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x286 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x287 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x217)))
 (let (($x121 (or false (or false (and (and true (or $x287 $x286)) (or $x246 $x224))))))
 (let (($x120 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x121)))
 (let (($x199 (=> (and $x175 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x121)))
 (let (($x126 (and $x199 $x73)))
 (let (($x125 (=> $x126 $x110)))
 (not $x125))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x175 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x153 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x81 (or $x153 $x175)))
 (let (($x110 (= $x81 true)))
 (let ((?x124 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x130 (bvneg ?x124)))
 (let (($x79 (= ?x130 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x119 (= $x79 true)))
 (let ((?x117 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x241 (bvneg ?x117)))
 (let (($x196 (= ?x241 input.dst.llvm-%n)))
 (let (($x220 (= $x196 true)))
 (let (($x30 (= ?x241 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x221 (= $x30 true)))
 (let (($x142 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x259 (= $x142 true)))
 (let (($x295 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x164 (= $x295 true)))
 (let (($x25 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x43 (= $x25 true)))
 (let (($x228 (forall ((input.ind-%var2193X (_ BitVec 32)) )(let ((?x85 (bvadd (bvmul input.ind-%var2193X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x163 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x85 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x85))))
 (let ((?x104 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x85 (_ bv2 32))) ?x163)))
 (let ((?x182 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x85 (_ bv3 32))) ?x104)))
 (let ((?x123 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2193X)))
 (let (($x97 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2193X)))
 (=> $x97 (= ?x123 ?x182)))))))))
 ))
 (let (($x177 (forall ((input.ind-%var2192X (_ BitVec 32)) )(let (($x187 (and (bvule (_ bv0 32) input.ind-%var2192X) (bvult input.ind-%var2192X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))
 (let (($x97 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2192X)))
 (= $x97 $x187))))
 ))
 (let (($x172 (and $x177 $x228)))
 (let (($x24 (= $x172 true)))
 (let (($x91 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x137 (= $x91 true)))
 (let (($x291 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x162 (= $x291 true)))
 (let ((?x296 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x61 (= (_ bv0 32) ?x296)))
 (let ((?x253 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x253)))
 (let ((?x204 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x18 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x204)))
 (let ((?x268 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x101 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x268)))
 (let (($x208 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x90 (and $x208 $x101)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x49 (and $x5 $x90)))
 (let (($x109 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x185 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x178 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x235 (and $x23 $x178)))
 (let (($x186 (not $x235)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x238 (and $x15 $x222)))
 (let (($x148 (and (not $x238) $x186)))
 (let (($x173 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x170 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x299 (and $x170 $x173)))
 (let (($x301 (not $x299)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x33 $x150)))
 (let (($x145 (and (not $x26) $x301)))
 (let (($x127 (and (and (and (and (and (and $x145 $x148) $x185) $x109) $x49) $x18) $x174)))
 (let (($x69 (and $x127 $x61)))
 (let (($x191 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x300 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x251 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x300)))
 (let (($x226 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x203 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x300)))
 (let (($x60 (or false (or false (and (and true (or $x203 $x226)) (or $x251 $x191))))))
 (let (($x216 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x60)))
 (let (($x95 (and $x216 $x69)))
 (let (($x243 (= $x95 true)))
 (let ((?x98 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x10 (= (_ bv0 2) ?x98)))
 (let (($x39 (= $x10 true)))
 (let (($x248 (and $x39 $x243)))
 (let (($x263 (and $x248 $x162)))
 (let (($x169 (and $x263 $x137)))
 (let (($x298 (and $x169 $x24)))
 (let (($x31 (and $x298 $x43)))
 (let (($x70 (and $x31 $x164)))
 (let (($x255 (and $x70 $x259)))
 (let (($x87 (and $x255 $x221)))
 (let (($x165 (and $x87 $x220)))
 (let (($x45 (and $x165 $x119)))
 (let (($x106 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x267 (and $x106 $x45)))
 (let (($x41 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x171 (and $x41 $x267)))
 (let (($x99 (forall ((input.ind-%var2203X (_ BitVec 32)) )(let (($x261 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2203X)))
 (=> $x261 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2203X) (_ bv0 32)))))
 ))
 (let (($x12 (forall ((input.ind-%var2202X (_ BitVec 32)) )(let (($x261 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2202X)))
 (= $x261 false)))
 ))
 (let (($x181 (and $x12 $x99)))
 (let (($x290 (and $x181 $x171)))
 (let (($x254 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x73 (and $x254 $x290)))
 (let ((?x179 (bvmul (_ bv4 32) input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let ((?x92 (bvadd input.dst.llvm-%m ?x179)))
 (let (($x224 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x217 (bvadd ?x92 (_ bv3 32))))
 (let (($x246 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x217)))
 (let (($x286 (bvugt ?x92 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x287 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x217)))
 (let (($x121 (or false (or false (and (and true (or $x287 $x286)) (or $x246 $x224))))))
 (let (($x120 (=> (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32))) $x121)))
 (let (($x199 (=> (and $x175 (bvule ?x92 (bvsub (bvadd ?x92 (_ bv4 32)) (_ bv1 32)))) $x121)))
 (let (($x126 (and $x199 $x73)))
 (let (($x125 (=> $x126 $x110)))
 (not $x125))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 3
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
==query_number: 86
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x131 (forall ((input.ind-%var2233X (_ BitVec 32)) )(let ((?x124 (bvadd (bvmul input.ind-%var2233X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x124))))
 (let ((?x290 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv2 32))) ?x45)))
 (let ((?x153 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv3 32))) ?x290)))
 (let ((?x228 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2233X)))
 (let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2233X)))
 (=> $x85 (= ?x228 ?x153)))))))))
 ))
 (let (($x59 (forall ((input.ind-%var2232X (_ BitVec 32)) )(let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2232X)))
 (= $x85 (and (bvule (_ bv0 32) input.ind-%var2232X) (bvult input.ind-%var2232X input.dst.llvm-%n)))))
 ))
 (let (($x138 (and $x59 $x131)))
 (let (($x161 (= $x138 true)))
 (let ((?x99 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x181 (bvneg ?x99)))
 (let (($x197 (= ?x181 input.dst.llvm-%n)))
 (let (($x167 (= $x197 true)))
 (let ((?x260 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x156 (= (_ bv0 2) ?x260)))
 (let (($x72 (= $x156 true)))
 (let (($x236 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x34 (= $x236 true)))
 (let (($x125 (forall ((input.ind-%var2213X (_ BitVec 32)) )(let ((?x124 (bvadd (bvmul input.ind-%var2213X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x124))))
 (let ((?x290 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv2 32))) ?x45)))
 (let ((?x153 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv3 32))) ?x290)))
 (let ((?x228 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2213X)))
 (let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2213X)))
 (=> $x85 (= ?x228 ?x153)))))))))
 ))
 (let (($x104 (forall ((input.ind-%var2212X (_ BitVec 32)) )(let (($x112 (bvule (_ bv0 32) input.ind-%var2212X)))
 (let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2212X)))
 (= $x85 (and $x112 (bvult input.ind-%var2212X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x234 (and $x104 $x125)))
 (let (($x250 (= $x234 true)))
 (let (($x187 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x269 (not $x187)))
 (let (($x177 (= $x269 true)))
 (let (($x169 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x97 (= $x169 true)))
 (let ((?x61 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x61)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x296 (= (_ bv0 32) ?x127)))
 (let ((?x253 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x253)))
 (let ((?x65 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x204 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x65)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x18 (and $x90 $x204)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (and $x101 $x18)))
 (let (($x268 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x244 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x185 (and $x244 $x157)))
 (let (($x240 (not $x185)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x235 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (and $x235 $x186)))
 (let (($x109 (and (not $x148) $x240)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x238 (and $x15 $x222)))
 (let (($x154 (not $x238)))
 (let (($x300 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x56 $x300)))
 (let (($x178 (and (not $x145) $x154)))
 (let (($x162 (and (and (and (and (and (and $x178 $x109) $x5) $x268) $x108) $x174) $x296)))
 (let (($x263 (and $x162 $x69)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x251 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x251)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x251)))
 (let (($x173 (or false (or false (and (and true (or $x191 $x28)) (or $x33 $x150))))))
 (let (($x301 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x173)))
 (let (($x277 (and $x301 $x263)))
 (let (($x91 (= $x277 true)))
 (let (($x98 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x10 (= $x98 true)))
 (let (($x53 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x106 (= $x53 true)))
 (let (($x282 (= ?x181 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x41 (= $x282 true)))
 (let (($x140 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x107 (= $x140 true)))
 (let ((?x254 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x155 (bvneg ?x254)))
 (let (($x231 (= ?x155 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x12 (= $x231 true)))
 (let (($x143 (and $x12 $x107)))
 (let (($x284 (and $x143 $x41)))
 (let (($x11 (and $x284 $x106)))
 (let (($x39 (and $x11 $x10)))
 (let (($x137 (and $x39 $x91)))
 (let (($x64 (and $x137 $x97)))
 (let (($x123 (and $x64 $x177)))
 (let (($x160 (and $x123 $x250)))
 (let (($x22 (and $x160 $x34)))
 (let (($x152 (and $x22 $x72)))
 (let (($x180 (and $x152 $x167)))
 (let (($x199 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x202 (and $x199 $x180)))
 (let (($x121 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x135 (and $x121 $x202)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x146 (and $x194 $x135)))
 (let (($x246 (forall ((input.ind-%var2223X (_ BitVec 32)) )(let (($x179 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2223X)))
 (=> $x179 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2223X) (_ bv0 32)))))
 ))
 (let (($x144 (forall ((input.ind-%var2222X (_ BitVec 32)) )(let (($x179 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2222X)))
 (= $x179 false)))
 ))
 (let (($x7 (and $x144 $x246)))
 (let (($x46 (and $x7 $x146)))
 (let (($x205 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x262 (and $x205 $x46)))
 (let (($x122 (=> $x262 $x161)))
 (not $x122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic AUFBV)
(declare-fun input.dst.llvm-%m () (_ BitVec 32))
(declare-fun input.dst.llvm-mem.Lfor.cond%1%bbentry () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%var-m-0.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.dst.llvm-%n () (_ BitVec 32))
(declare-fun input.spec-%var-n-1 () (_ BitVec 32))
(declare-fun input.dst.llvm-%i.0.Lfor.cond%1%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-i-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-n-0.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-7.L3%6%bbentry () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.1.1 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun input.spec-%tmpvar-8.L3%6%bbentry.0.1 ((_ BitVec 32)) Bool)
(declare-fun input.spec-%tmpvar-1.L3%6%bbentry () (_ BitVec 32))
(assert
 (let (($x131 (forall ((input.ind-%var2233X (_ BitVec 32)) )(let ((?x124 (bvadd (bvmul input.ind-%var2233X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x124))))
 (let ((?x290 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv2 32))) ?x45)))
 (let ((?x153 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv3 32))) ?x290)))
 (let ((?x228 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2233X)))
 (let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2233X)))
 (=> $x85 (= ?x228 ?x153)))))))))
 ))
 (let (($x59 (forall ((input.ind-%var2232X (_ BitVec 32)) )(let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2232X)))
 (= $x85 (and (bvule (_ bv0 32) input.ind-%var2232X) (bvult input.ind-%var2232X input.dst.llvm-%n)))))
 ))
 (let (($x138 (and $x59 $x131)))
 (let (($x161 (= $x138 true)))
 (let ((?x99 (bvmul input.spec-%var-n-1 (_ bv4294967295 32))))
 (let ((?x181 (bvneg ?x99)))
 (let (($x197 (= ?x181 input.dst.llvm-%n)))
 (let (($x167 (= $x197 true)))
 (let ((?x260 ((_ extract 1 0) input.dst.llvm-%m)))
 (let (($x156 (= (_ bv0 2) ?x260)))
 (let (($x72 (= $x156 true)))
 (let (($x236 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x34 (= $x236 true)))
 (let (($x125 (forall ((input.ind-%var2213X (_ BitVec 32)) )(let ((?x124 (bvadd (bvmul input.ind-%var2213X (_ bv4 32)) input.dst.llvm-%m)))
 (let ((?x45 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv1 32))) (select input.dst.llvm-mem.Lfor.cond%1%bbentry ?x124))))
 (let ((?x290 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv2 32))) ?x45)))
 (let ((?x153 (concat (select input.dst.llvm-mem.Lfor.cond%1%bbentry (bvadd ?x124 (_ bv3 32))) ?x290)))
 (let ((?x228 (input.spec-%var-m-0.L3%6%bbentry.1.1 input.ind-%var2213X)))
 (let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2213X)))
 (=> $x85 (= ?x228 ?x153)))))))))
 ))
 (let (($x104 (forall ((input.ind-%var2212X (_ BitVec 32)) )(let (($x112 (bvule (_ bv0 32) input.ind-%var2212X)))
 (let (($x85 (input.spec-%var-m-0.L3%6%bbentry.0.1 input.ind-%var2212X)))
 (= $x85 (and $x112 (bvult input.ind-%var2212X input.dst.llvm-%i.0.Lfor.cond%1%bbentry))))))
 ))
 (let (($x234 (and $x104 $x125)))
 (let (($x250 (= $x234 true)))
 (let (($x187 (bvult input.dst.llvm-%i.0.Lfor.cond%1%bbentry input.dst.llvm-%n)))
 (let (($x269 (not $x187)))
 (let (($x177 (= $x269 true)))
 (let (($x169 (bvsge input.spec-%var-i-0.L3%6%bbentry (_ bv0 32))))
 (let (($x97 (= $x169 true)))
 (let ((?x61 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x69 (= (_ bv0 32) ?x61)))
 (let ((?x127 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x296 (= (_ bv0 32) ?x127)))
 (let ((?x253 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x253)))
 (let ((?x65 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x204 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end ?x65)))
 (let (($x90 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x18 (and $x90 $x204)))
 (let (($x101 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x108 (and $x101 $x18)))
 (let (($x268 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (= input.dst.local./*___y___foo__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x157 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x244 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x185 (and $x244 $x157)))
 (let (($x240 (not $x185)))
 (let (($x186 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x235 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (and $x235 $x186)))
 (let (($x109 (and (not $x148) $x240)))
 (let (($x222 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x238 (and $x15 $x222)))
 (let (($x154 (not $x238)))
 (let (($x300 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x56 (bvuge input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x56 $x300)))
 (let (($x178 (and (not $x145) $x154)))
 (let (($x162 (and (and (and (and (and (and $x178 $x109) $x5) $x268) $x108) $x174) $x296)))
 (let (($x263 (and $x162 $x69)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x251 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x251)))
 (let (($x28 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_end)))
 (let (($x191 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum1=/_begin ?x251)))
 (let (($x173 (or false (or false (and (and true (or $x191 $x28)) (or $x33 $x150))))))
 (let (($x301 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x173)))
 (let (($x277 (and $x301 $x263)))
 (let (($x91 (= $x277 true)))
 (let (($x98 (bvsge input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv0 32))))
 (let (($x10 (= $x98 true)))
 (let (($x53 (bvule input.spec-%var-i-0.L3%6%bbentry (_ bv4294967294 32))))
 (let (($x106 (= $x53 true)))
 (let (($x282 (= ?x181 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x41 (= $x282 true)))
 (let (($x140 (bvule input.dst.llvm-%i.0.Lfor.cond%1%bbentry (_ bv4294967294 32))))
 (let (($x107 (= $x140 true)))
 (let ((?x254 (bvmul input.spec-%var-i-0.L3%6%bbentry (_ bv4294967295 32))))
 (let ((?x155 (bvneg ?x254)))
 (let (($x231 (= ?x155 input.dst.llvm-%i.0.Lfor.cond%1%bbentry)))
 (let (($x12 (= $x231 true)))
 (let (($x143 (and $x12 $x107)))
 (let (($x284 (and $x143 $x41)))
 (let (($x11 (and $x284 $x106)))
 (let (($x39 (and $x11 $x10)))
 (let (($x137 (and $x39 $x91)))
 (let (($x64 (and $x137 $x97)))
 (let (($x123 (and $x64 $x177)))
 (let (($x160 (and $x123 $x250)))
 (let (($x22 (and $x160 $x34)))
 (let (($x152 (and $x22 $x72)))
 (let (($x180 (and $x152 $x167)))
 (let (($x199 (bvuge input.spec-%var-i-0.L3%6%bbentry input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x202 (and $x199 $x180)))
 (let (($x121 (= input.spec-%var-n-1 input.spec-%var-n-0.L3%6%bbentry)))
 (let (($x135 (and $x121 $x202)))
 (let (($x194 (= (_ bv0 32) input.spec-%tmpvar-7.L3%6%bbentry)))
 (let (($x146 (and $x194 $x135)))
 (let (($x246 (forall ((input.ind-%var2223X (_ BitVec 32)) )(let (($x179 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2223X)))
 (=> $x179 (= (input.spec-%tmpvar-8.L3%6%bbentry.1.1 input.ind-%var2223X) (_ bv0 32)))))
 ))
 (let (($x144 (forall ((input.ind-%var2222X (_ BitVec 32)) )(let (($x179 (input.spec-%tmpvar-8.L3%6%bbentry.0.1 input.ind-%var2222X)))
 (= $x179 false)))
 ))
 (let (($x7 (and $x144 $x246)))
 (let (($x46 (and $x7 $x146)))
 (let (($x205 (= (_ bv1 32) input.spec-%tmpvar-1.L3%6%bbentry)))
 (let (($x262 (and $x205 $x46)))
 (let (($x122 (=> $x262 $x161)))
 (not $x122)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
unsat
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.4087303/query
