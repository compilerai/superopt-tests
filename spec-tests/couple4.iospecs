=SpecFuncIOSpecs
=FunctionName: foo
=EntryPreconds
=pred 0
=Comment
spec_coupling(x, x)
=LhsExpr
1 : input.spec-%var-x-2 : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
2 : Lambda0 : BV:32
3 : Lambda1 : BV:32
4 : input.dst.llvm-%n : BV:32
5 : input.dst.llvm-%m : BV:32
6 : 0 : BV:32
7 : bvule(6, 2) : BOOL
8 : bvult(2, 4) : BOOL
9 : and(7, 8) : BOOL
10 : lambda(2, 9) : FUNCTION[BV:32 -> BOOL]
11 : bvule(6, 3) : BOOL
12 : bvult(3, 5) : BOOL
13 : and(11, 12) : BOOL
14 : lambda(3, 13) : FUNCTION[BV:32 -> BOOL]
15 : input.dst.llvm-mem : ARRAY[BV:32 -> BV:8]
16 : input.dst.llvm-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
17 : memlabel-mem-symbol.1.0-heap : MEMLABEL
18 : memlabel-mem-symbol.1.0-heap-arg.0 : MEMLABEL
19 : input.dst.llvm-%x : BV:32
20 : 4 : BV:32
21 : bvmul(2, 20) : BV:32
22 : bvadd(19, 21) : BV:32
23 : 4 : INT
24 : 0 : BOOL
25 : select(15, 16, 18, 22, 23, 24) : BV:32
26 : bvmul(3, 20) : BV:32
27 : bvadd(25, 26) : BV:32
28 : select(15, 16, 17, 27, 23, 24) : BV:32
29 : lambda(3, 28) : FUNCTION[BV:32 -> BV:32]
30 : map(14, 29) : MAP[BV:32 -> BV:32]
31 : lambda(2, 30) : FUNCTION[BV:32 -> MAP[BV:32 -> BV:32]]
32 : map(10, 31) : MAP[BV:32 -> MAP[BV:32 -> BV:32]]
33 : eq(1, 32) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 1
=Comment
spec_coupling(n, n)
=LhsExpr
1 : input.spec-%var-n-2 : BV:32
2 : input.dst.llvm-%n : BV:32
3 : eq(1, 2) : BV:32
=RhsExpr
1 : 1 : BOOL
=predicate done
=pred 2
=Comment
spec_coupling(m, m)
=LhsExpr
1 : input.spec-%var-m-2 : BV:32
2 : input.dst.llvm-%m : BV:32
3 : eq(1, 2) : BV:32
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=EntryPreconds done
=ExitAsserts
=pred 0
=Comment
spec_coupling(retreg, retreg)
=LhsExpr
1 : input.spec-%tmpvar-28.E0%0%1 : BV:32
2 : input.dst.llvm-%ret.0.Lfor.cond%1%0 : BV:32
3 : eq(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=predicate done
=predicate_set done
=ExitAsserts done
=SpecFuncIOSpecs done
