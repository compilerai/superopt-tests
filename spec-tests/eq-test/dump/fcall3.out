argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall3.proof
argv[9] = --spec-iospecs=fcall3.iospecs
argv[10] = fcall3.spec
argv[11] = fcall3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.1510108
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall3.c
argv[10] = -o
argv[11] = par_tmpdir/fcall3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall3.spec.etfg
argv[11] = par_tmpdir/fcall3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function bar</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 72 time spent: 0:0:0 [0.000118s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 148 time spent: 0:0:0 [0.000239s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 855 time spent: 0:0:0 [0.007653s total; 0.000009 per start]
expr_simplify_solver: num_starts 250 time spent: 0:0:0 [0.020417s total; 0.000082 per start]
expr_simplify_syntactic: num_starts 250 time spent: 0:0:0 [0.133206s total; 0.000533 per start]
expr_simplify_select_on_store: num_starts 16 time spent: 0:0:0 [0.042882s total; 0.002680 per start]
expr_simplify_using_lhs_set_helper: num_starts 214 time spent: 0:0:0 [0.169005s total; 0.000790 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1127 time spent: 0:0:0 [0.168124s total; 0.000149 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 91 time spent: 0:0:0 [0.000355s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 132 time spent: 0:0:0 [0.002033s total; 0.000015 per start]
expr_simplify_memalloc_using_memlabel: num_starts 24 time spent: 0:0:0 [0.000062s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 16 time spent: 0:0:0 [0.042180s total; 0.002636 per start]
get_arithmetic_addsub_atoms: num_starts 64 time spent: 0:0:0 [0.000079s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 132 time spent: 0:0:0 [0.001868s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 754 time spent: 0:0:0 [0.000470s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1960 time spent: 0:0:0 [0.171661s total; 0.000088 per start]
expr_do_simplify_helper_cache: num_starts 1960 time spent: 0:0:0 [0.001495s total; 0.000001 per start]
array_constant_equals: num_starts 115 time spent: 0:0:0 [0.000236s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145177 time spent: 0:0:1 [1.102961s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 24 time spent: 0:0:0 [0.005648s total; 0.000235 per start]
combo_dfa_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.099135s total; 0.002609 per start]
alias_val_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.062419s total; 0.001643 per start]
get_sprel_map_from_avail_exprs: num_starts 70 time spent: 0:0:0 [0.006545s total; 0.000093 per start]
update_memlabels_for_memslot_locs: num_starts 28 time spent: 0:0:0 [0.000131s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 72 time spent: 0:0:0 [0.005769s total; 0.000080 per start]
compute_simplified_loc_exprs_for_edge: num_starts 328 time spent: 0:0:0 [0.153751s total; 0.000469 per start]
compute_locs_definitely_written_on_edge: num_starts 72 time spent: 0:0:0 [0.000053s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.024494s total; 0.000454 per start]
edge_update_memlabel_map_for_mlvars: num_starts 36 time spent: 0:0:0 [0.000995s total; 0.000028 per start]
add_new_locs_based_on_edge: num_starts 36 time spent: 0:0:0 [0.028480s total; 0.000791 per start]
alias_val_meet: num_starts 1 time spent: 0:0:0 [0.000058s total; 0.000058 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000491s total; 0.000009 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_execution_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 3; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.bar.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.bar.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.bar.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 6e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.bar.: 8e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.5e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 3.6e-05s (num_starts 2; 0.0000s/start)
add_extra_node_at_start_pc.: 4e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 4.1e-05s (num_starts 54; 0.0000s/start)
context_constructor.solver.: 4.4e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.4e-05s (num_starts 1; 0.0001s/start)
expr_is_callee_save_const.: 6.5e-05s (num_starts 62; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 6.5e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.2e-05s (num_starts 6; 0.0000s/start)
lr_status_meet.: 8.5e-05s (num_starts 70; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9e-05s (num_starts 4; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 9.1e-05s (num_starts 2; 0.0000s/start)
main.3.: 0.000103s (num_starts 1; 0.0001s/start)
get_memlabel_set_from_mlvarnames.: 0.000108s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000117s (num_starts 14; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000148s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 0.000224s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000234s (num_starts 2; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000245s (num_starts 4; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000259s (num_starts 36; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000264s (num_starts 4; 0.0001s/start)
determinize_value_expr_map.: 0.000268s (num_starts 308; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000274s (num_starts 14; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000285s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000293s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000306s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000312s (num_starts 670; 0.0000s/start)
compute_sprel_relations.: 0.000317s (num_starts 2; 0.0002s/start)
propagate_sprels.: 0.000335s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000337s (num_starts 36; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.00034s (num_starts 36; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.00036s (num_starts 2; 0.0002s/start)
graph_with_aliasing_constructor.src.spec.bar.: 0.000441s (num_starts 1; 0.0004s/start)
populate_locid2expr_map.: 0.00046s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000481s (num_starts 2; 0.0002s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000509s (num_starts 2; 0.0003s/start)
tfg_get_write_memlabels.: 0.00054s (num_starts 2; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000566s (num_starts 72; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000609s (num_starts 36; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.bar.: 0.000829s (num_starts 1; 0.0008s/start)
tfg_get_read_memlabels.: 0.000837s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000845s (num_starts 2; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000878s (num_starts 2; 0.0004s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000884s (num_starts 36; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000925s (num_starts 2; 0.0005s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000947s (num_starts 36; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.001155s (num_starts 2; 0.0006s/start)
expr_substitute_using_available_exprs_submap.: 0.001213s (num_starts 36; 0.0000s/start)
graph_with_locs_constructor.src.spec.bar.: 0.00123s (num_starts 1; 0.0012s/start)
compute_z3_expr.: 0.001235s (num_starts 120; 0.0000s/start)
graph_visit_exprs_const.const.: 0.001244s (num_starts 4; 0.0003s/start)
canonicalize_llvm_nextpcs.: 0.001253s (num_starts 2; 0.0006s/start)
expr_linear_relation_holds::visit.var.: 0.001344s (num_starts 66; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.bar.: 0.001383s (num_starts 1; 0.0014s/start)
get_summary_for_calling_functions.: 0.001404s (num_starts 2; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.00142s (num_starts 2; 0.0007s/start)
create_closure_matrix.: 0.001434s (num_starts 64; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001855s (num_starts 2; 0.0009s/start)
graph_with_locs_constructor.src.spec.foo.: 0.00199s (num_starts 1; 0.0020s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.002187s (num_starts 749; 0.0000s/start)
graph_with_predicates_constructor.src.spec.bar.: 0.002206s (num_starts 1; 0.0022s/start)
tfg::collect_assumes_around_edge.: 0.002301s (num_starts 148; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002313s (num_starts 2; 0.0012s/start)
tfg_constructor.src.spec.bar.after_transitive_closure.: 0.002799s (num_starts 1; 0.0028s/start)
tfg_constructor.src.spec.bar.post_parsing.: 0.002806s (num_starts 1; 0.0028s/start)
tfg_constructor.src.spec.bar.after_string_contents.: 0.002815s (num_starts 1; 0.0028s/start)
tfg_constructor.src.spec.bar.after_compute_max_memlabel_varnum.: 0.002818s (num_starts 1; 0.0028s/start)
tfg_constructor.src.spec.bar.: 0.002822s (num_starts 1; 0.0028s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.002955s (num_starts 1; 0.0030s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.002996s (num_starts 2; 0.0015s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.003279s (num_starts 2; 0.0016s/start)
tfg_preprocess.dst.llvm.bar.: 0.003412s (num_starts 1; 0.0034s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.003469s (num_starts 2; 0.0017s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.003602s (num_starts 1; 0.0036s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.003724s (num_starts 38; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.003755s (num_starts 4; 0.0009s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003794s (num_starts 38; 0.0001s/start)
query:convert_from_z3.: 0.003944s (num_starts 120; 0.0000s/start)
compute_lr_status_for_expr.: 0.003975s (num_starts 58; 0.0001s/start)
populate_transitive_closure.: 0.004026s (num_starts 2; 0.0020s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004355s (num_starts 4; 0.0011s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004531s (num_starts 38; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004625s (num_starts 4; 0.0012s/start)
populate_branch_affecting_locs.: 0.004835s (num_starts 4; 0.0012s/start)
query:convert_to_z3.: 0.005571s (num_starts 120; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.005729s (num_starts 1; 0.0057s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.005731s (num_starts 36; 0.0002s/start)
populate_dominator_and_postdominator_relations.: 0.006045s (num_starts 4; 0.0015s/start)
graph_identify_back_edges.: 0.006201s (num_starts 12; 0.0005s/start)
graph_identify_natural_loops.: 0.006239s (num_starts 12; 0.0005s/start)
get_function_tfg_map.bar.: 0.006637s (num_starts 1; 0.0066s/start)
create_sp_version_relations_lattice_at_pc.: 0.006822s (num_starts 64; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.006995s (num_starts 1; 0.0070s/start)
graph_visit_exprs.: 0.007184s (num_starts 8; 0.0009s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008733s (num_starts 37; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.00939s (num_starts 1; 0.0094s/start)
compute_regions.: 0.010216s (num_starts 12; 0.0009s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.010291s (num_starts 855; 0.0000s/start)
find_dominators.: 0.011434s (num_starts 20; 0.0006s/start)
query:simplify-z3.: 0.012531s (num_starts 252; 0.0000s/start)
avail_exprs_create_submap.: 0.012565s (num_starts 110; 0.0001s/start)
graph_to_stream.: 0.012634s (num_starts 2; 0.0063s/start)
tfg::tfg_preprocess.: 0.012806s (num_starts 2; 0.0064s/start)
populate_simplified_to_state.: 0.01352s (num_starts 6; 0.0023s/start)
get_function_tfg_map.foo.: 0.014571s (num_starts 1; 0.0146s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.016379s (num_starts 1; 0.0164s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.016384s (num_starts 1; 0.0164s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.016389s (num_starts 1; 0.0164s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.016394s (num_starts 1; 0.0164s/start)
tfg_constructor.src.spec.foo.: 0.016397s (num_starts 1; 0.0164s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017972s (num_starts 38; 0.0005s/start)
get_tfg.: 0.021118s (num_starts 2; 0.0106s/start)
get_function_tfg_map.: 0.021215s (num_starts 2; 0.0106s/start)
populate_simplified_assets.: 0.021586s (num_starts 12; 0.0018s/start)
main.2.: 0.025554s (num_starts 1; 0.0256s/start)
compute_new_lr_status_on_locs.: 0.032476s (num_starts 36; 0.0009s/start)
populate_locs_potentially_modified_on_edge.: 0.059037s (num_starts 6; 0.0098s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.062495s (num_starts 38; 0.0016s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.067538s (num_starts 34; 0.0020s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.08065s (num_starts 6; 0.0134s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.080666s (num_starts 72; 0.0011s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.092577s (num_starts 855; 0.0001s/start)
populate_loc_liveness.: 0.093079s (num_starts 4; 0.0233s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.093796s (num_starts 855; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.102668s (num_starts 855; 0.0001s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.169224s (num_starts 214; 0.0008s/start)
tfg_postprocess_after_pointsto_analysis.: 0.17528s (num_starts 2; 0.0876s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.18525s (num_starts 2; 0.0926s/start)
ftmap_run_pointsto_analysis.: 0.297469s (num_starts 1; 0.2975s/start)
parse_consts_db.: 6.67564s (num_starts 1; 6.6756s/start)
main.: 7.09512s (num_starts 1; 7.0951s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:08 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:15 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file fcall3.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: bar...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG bar (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG bar: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG bar: Found 2 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG bar created 2 possibilities in group bar.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L3%1%fcallStart ending at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Updating dst fcall edge using src fcall edge for toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Computing loop hoisting select expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Adding node L3%1%fcallStart_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:23 : bar.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Adding edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : bar.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : bar.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : bar.A2: Propagated 1 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart</MSG>
<MSG>0:23 : bar.A2: Added the 1 propagated CEs at PC L3%1%fcallStart_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:23 : bar.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : bar.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : bar.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%m2
      1.: 0                     ==  input.dst.llvm-%m1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:23 : Added correlation to the product-TFG bar.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%m2
      1.: 0                     ==  input.dst.llvm-%m1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:23 : bar.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : bar.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : bar.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:23 : bar.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : bar.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : bar.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:23 : bar.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : bar.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : bar.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
<MSG>0:24 : bar.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:24 : bar.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht5-prove_trivial2-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:24 : bar.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:24 : bar.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:24 : bar.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : bar.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG bar.A2: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG bar.A2: Found 2 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:25 : product-TFG bar.A2 created 2 possibilities in group bar.A2.B...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L3%1%fcallStart --> L3%1%fcallEnd ending at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:25 : Adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Computing loop hoisting select expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Adding node L3%1%fcallEnd_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:25 : bar.A2.B2: Getting alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Found no alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Adding edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : bar.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : bar.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : bar.A2.B2: Propagated 8 out of 8 counter-examples across edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd</MSG>
<MSG>0:25 : bar.A2.B2: Added the 8 propagated CEs at PC L3%1%fcallEnd_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:25 : bar.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : bar.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : bar.A2.B2: Computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Done computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:25 : Added correlation to the product-TFG bar.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:25 : bar.A2.B2: Updating invariants over the newly added edges in edge composition L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:25 : bar.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:25 : bar.A2.B2: Checking well-formedness assertions on outgoing edges from L3%1%fcallStart_Lentry%1%fcallStart ...</MSG>
<MSG>0:25 : bar.A2.B2: Relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:25 : bar.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : bar.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 5 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : bar.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial3-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:25 : bar.A2.B2: Done relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:25 : bar.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:25 : bar.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : bar.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:25 : product-TFG bar.A2.B2: Enumerating correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L3%1%fcallEnd=>L3%1%fcallEnd[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Considering 1 paths to src pc L3%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Attempting correlation of src pathset L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : Found 1 feasible correlations for paths to src pc L3%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : product-TFG bar.A2.B2: Found 2 correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:25 : product-TFG bar.A2.B2 created 2 possibilities in group bar.A2.B2.C...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L3%1%fcallEnd --> L3%3%fcallStart ending at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:25 : Adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC L3%3%fcallStart_Lentry%2%fcallStart, src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Updating dst fcall edge using src fcall edge for toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Computing loop hoisting select expressions at toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Computing loop hoisting non-linear expressions at toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Adding node L3%3%fcallStart_Lentry%2%fcallStart to the product-TFG...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Getting alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Found no alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Adding edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : bar.A2.B2.C2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Propagated 0 out of 7 counter-examples across edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart</MSG>
<MSG>0:25 : bar.A2.B2.C2: Added the 0 propagated CEs at PC L3%3%fcallStart_Lentry%2%fcallStart and propagated further.
</MSG>
<MSG>0:25 : bar.A2.B2.C2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Done computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC L3%3%fcallStart_Lentry%2%fcallStart, src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:25 : Added correlation to the product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 0 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:25 : bar.A2.B2.C2: Updating invariants over the newly added edges in edge composition L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:25 : bar.A2.B2.C2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: unchanged</MSG>
<MSG>0:25 : bar.A2.B2.C2: Checking well-formedness assertions on outgoing edges from L3%1%fcallEnd_Lentry%1%fcallEnd ...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:27 : bar.A2.B2.C2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht9-prove_trivial1-prove8...</MSG>
<MSG>0:27 : bar.A2.B2.C2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:28 : bar.A2.B2.C2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht5-prove_trivial3-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210


<MSG>0:28 : bar.A2.B2.C2: Done relaxing invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: changed ...</MSG>
<MSG>0:28 : bar.A2.B2.C2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210


<MSG>0:28 : bar.A2.B2.C2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:28 : bar.A2.B2.C2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:28 : product-TFG bar.A2.B2.C2: Enumerating correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Considering 1 paths to src pc L3%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L3%3%fcallStart=>L3%3%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Found 1 feasible correlations for paths to src pc L3%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Considering 1 paths to src pc L3%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : Found 1 feasible correlations for paths to src pc L3%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : product-TFG bar.A2.B2.C2: Found 2 correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:28 : product-TFG bar.A2.B2.C2 created 2 possibilities in group bar.A2.B2.C2.D...</MSG>
<MSG>0:28 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:28 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:28 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:28 : Creating ssa-path for the src-tfg path L3%3%fcallStart --> L3%3%fcallEnd ending at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:28 : Adding a CG edge composition using the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:28 : Identifying common alloc-deallocs in the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd
</MSG>
<MSG>0:28 : Identified no common alloc-deallocs in the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:28 : Adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L3%3%fcallStart_Lentry%2%fcallStart and toPC L3%3%fcallEnd_Lentry%2%fcallEnd, src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Computing loop hoisting select expressions at toPC L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Computing loop hoisting non-linear expressions at toPC L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Adding node L3%3%fcallEnd_Lentry%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Getting alloca-ptrs on edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Found no alloca-ptrs on edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Adding edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Propagated 10 out of 10 counter-examples across edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Added the 10 propagated CEs at PC L3%3%fcallEnd_Lentry%2%fcallEnd and propagated further.
</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Finished executing CG's add edge function...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Computing CG regions after the addition of the edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done computing CG regions after the addition of the edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L3%3%fcallStart_Lentry%2%fcallStart and toPC L3%3%fcallEnd_Lentry%2%fcallEnd, src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : Done adding a CG edge composition using the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210


<MSG>0:28 : Added correlation to the product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:28 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 4 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210


<MSG>0:28 : bar.A2.B2.C2.D2: Updating invariants over the newly added edges in edge composition L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:28 : Constructed infer_invariants_dfa with initial worklist L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing dst graph's memlabels for edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing dst graph's memlabels for edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: unchanged</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Checking well-formedness assertions on outgoing edges from L3%3%fcallStart_Lentry%2%fcallStart ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 4 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial4-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210


<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: changed ...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2: Done relaxing memlabels and invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210


<MSG>0:28 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:28 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:29 : product-TFG bar.A2.B2.C2.D2: Enumerating correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:29 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:29 : Attempting correlation of src pathset L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:29 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:29 : product-TFG bar.A2.B2.C2.D2: Found 1 correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:29 : product-TFG bar.A2.B2.C2.D2 created 1 possibilities in group bar.A2.B2.C2.D2.E...</MSG>
<MSG>0:29 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:29 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:29 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:29 : Creating ssa-path for the src-tfg path L3%3%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:29 : Adding a CG edge composition using the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:29 : Identifying common alloc-deallocs in the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:29 : Identified no common alloc-deallocs in the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:29 : Adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L3%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Getting alloca-ptrs on edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Found no alloca-ptrs on edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Adding edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Propagated 0 out of 6 counter-examples across edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Finished executing CG's add edge function...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Computing CG regions after the addition of the edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Done computing CG regions after the addition of the edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L3%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:29 : Done adding a CG edge composition using the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : Added correlation to the product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:29 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L3%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : bar.A2.B2.C2.D2.E1: Updating invariants over the newly added edges in edge composition L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:29 : Constructed infer_invariants_dfa with initial worklist L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Relaxing dst graph's memlabels for edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Done relaxing dst graph's memlabels for edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Checking well-formedness assertions on outgoing edges from L3%3%fcallEnd_Lentry%2%fcallEnd ...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1: Done relaxing memlabels and invariants across the edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:29 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:29 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:29 : Checking equivalence proof...</MSG>
<MSG>0:30 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3v487.ce32      5.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce4      1.:z3.ce15      2.:z3v487.ce16      3.:z3.ce31      4.:z3.ce47
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258      4.:z3v487.ce275      5.:z3.ce274      6.:z3.ce290      7.:z3.ce306
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    4 visited ces:
      0.:z3v487.ce242      1.:z3v487.ce210      2.:z3.ce226      3.:z3.ce258
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce210

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L3%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function bar. 7.71s, query:smt.: 2.38234s (num_starts 44; 0.0541s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 6.76357s (num_starts 92; 0.0735s/start)ftmap_run_pointsto_analysis.: 0.172957s (num_starts 2; 0.0865s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 3e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 6e-06s (num_starts 5; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 6e-06s (num_starts 5; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 9e-06s (num_starts 12; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 9e-06s (num_starts 5; 0.0000s/start)
compute_tfg_pred_eqclass.: 1e-05s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 1.3e-05s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.8e-05s (num_starts 23; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.9e-05s (num_starts 5; 0.0000s/start)
get_paths_with_matching_to_pc.: 2.2e-05s (num_starts 9; 0.0000s/start)
get_intersected_lr_status.: 3.1e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 3.2e-05s (num_starts 15; 0.0000s/start)
lr_status_meet.: 4e-05s (num_starts 70; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.3e-05s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 4.4e-05s (num_starts 4; 0.0000s/start)
prove_trivial.: 4.6e-05s (num_starts 49; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.3e-05s (num_starts 4; 0.0000s/start)
ce_perform_memory_fuzzing.: 5.4e-05s (num_starts 46; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5.5e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::meet.: 6.4e-05s (num_starts 134; 0.0000s/start)
get_lr_status_for_loc_ids.: 6.8e-05s (num_starts 18; 0.0000s/start)
expr_is_hidden_reg.: 7.3e-05s (num_starts 89; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.9e-05s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.3e-05s (num_starts 11; 0.0000s/start)
expr_is_callee_save_const.: 9.6e-05s (num_starts 101; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.0001s (num_starts 5; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000106s (num_starts 3; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000112s (num_starts 10; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000124s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000125s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000127s (num_starts 10; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000129s (num_starts 92; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.00013s (num_starts 9; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000136s (num_starts 4; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000138s (num_starts 55; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000156s (num_starts 92; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000162s (num_starts 10; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000172s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000173s (num_starts 15; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000189s (num_starts 43; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00022s (num_starts 43; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%3%fcallEnd_Lentry%2%fcallEnd.inductive-invariants.: 0.000225s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000238s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000247s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000264s (num_starts 92; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000268s (num_starts 18; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000282s (num_starts 1; 0.0003s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000288s (num_starts 4; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000306s (num_starts 2; 0.0002s/start)
pth_collect_preds_using_atom_func.: 0.00031s (num_starts 16; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000311s (num_starts 20; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000314s (num_starts 4; 0.0001s/start)
tfg::collect_assumes_around_edge.: 0.000325s (num_starts 25; 0.0000s/start)
expr_represents_llvm_undef.: 0.000331s (num_starts 105; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000357s (num_starts 2; 0.0002s/start)
tfg_edge_composition_get_assumes.: 0.000357s (num_starts 16; 0.0000s/start)
create_closure_matrix.: 0.000369s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000369s (num_starts 2; 0.0002s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000388s (num_starts 43; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000406s (num_starts 10; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000407s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000412s (num_starts 1; 0.0004s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000417s (num_starts 10; 0.0000s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000427s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000429s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000431s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000433s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000434s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000448s (num_starts 1; 0.0004s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000458s (num_starts 104; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000511s (num_starts 1; 0.0005s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000519s (num_starts 4; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000573s (num_starts 20; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000577s (num_starts 2; 0.0003s/start)
tfg::populate_loc_definedness.before_solve.: 0.000621s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000692s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.000694s (num_starts 1; 0.0007s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000721s (num_starts 144; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000743s (num_starts 8; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000751s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.000753s (num_starts 1; 0.0008s/start)
populate_branch_affecting_locs.: 0.000766s (num_starts 3; 0.0003s/start)
compute_vars_reaching_definitions.: 0.000795s (num_starts 2; 0.0004s/start)
proof_query_is_trivial.: 0.000814s (num_starts 92; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000849s (num_starts 17; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000858s (num_starts 11; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000863s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000868s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00087s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000875s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000877s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.000878s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000878s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.00088s (num_starts 1; 0.0009s/start)
collect_assumes_around_edge.: 0.000937s (num_starts 5; 0.0002s/start)
compute_ssa_vars_renaming_map.: 0.000948s (num_starts 2; 0.0005s/start)
graph_visit_exprs.: 0.000949s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000954s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.000956s (num_starts 1; 0.0010s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000959s (num_starts 3; 0.0003s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000972s (num_starts 28; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000981s (num_starts 8; 0.0001s/start)
get_unrolled_loop_paths_from.: 0.000993s (num_starts 4; 0.0002s/start)
tfg_suffixpath_get_expr_helper.: 0.000996s (num_starts 24; 0.0000s/start)
set_result_and_counter_example.: 0.001s (num_starts 44; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown;-trivial.: 0.00101s (num_starts 2; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-trivial.: 0.001012s (num_starts 2; 0.0005s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.001012s (num_starts 141; 0.0000s/start)
tfg::populate_loc_definedness.: 0.001034s (num_starts 3; 0.0003s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001037s (num_starts 8; 0.0001s/start)
removeMostPromising.: 0.001077s (num_starts 16; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.001121s (num_starts 222; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.001224s (num_starts 2; 0.0006s/start)
populate_transitive_closure.: 0.001269s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001273s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001273s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001277s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess.: 0.001282s (num_starts 1; 0.0013s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001321s (num_starts 43; 0.0000s/start)
bv_expr_pair_ranges_merge_adjacent.: 0.001337s (num_starts 48; 0.0000s/start)
parse_yices_model.: 0.001358s (num_starts 1; 0.0014s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001359s (num_starts 5; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00141s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001415s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001438s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001441s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001445s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess.: 0.001451s (num_starts 1; 0.0015s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.001477s (num_starts 15; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-trivial.: 0.001524s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.001527s (num_starts 1; 0.0015s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001552s (num_starts 4; 0.0004s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.0016s (num_starts 141; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.001625s (num_starts 2; 0.0008s/start)
identify_address_taken_local_variables.: 0.001632s (num_starts 3; 0.0005s/start)
graph_with_guessing_sync_preds.: 0.001638s (num_starts 92; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.001653s (num_starts 2; 0.0008s/start)
check_node_stability_after_CE_addition.: 0.001741s (num_starts 65; 0.0000s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.001771s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001772s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001778s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001781s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001799s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.001825s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-trivial.: 0.001851s (num_starts 1; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001853s (num_starts 1; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.001853s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.001857s (num_starts 1; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001862s (num_starts 1; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.001877s (num_starts 1; 0.0019s/start)
find_dominators.: 0.001904s (num_starts 29; 0.0001s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001966s (num_starts 60; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.002021s (num_starts 9; 0.0002s/start)
graph_identify_back_edges.: 0.002065s (num_starts 25; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.002105s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.002107s (num_starts 1; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002119s (num_starts 2; 0.0011s/start)
graph_identify_natural_loops.: 0.002135s (num_starts 25; 0.0001s/start)
ldr_decomposition.: 0.002155s (num_starts 55; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002161s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002167s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002168s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002172s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002193s (num_starts 1; 0.0022s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.002205s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002344s (num_starts 1; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002348s (num_starts 1; 0.0023s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002425s (num_starts 4; 0.0006s/start)
expr_linear_relation_holds::visit.var.: 0.002427s (num_starts 117; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.00247s (num_starts 1; 0.0025s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-trivial.: 0.002488s (num_starts 3; 0.0008s/start)
populate_locs_potentially_modified_on_edge.: 0.002504s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear;-trivial.: 0.002563s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.002566s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.002572s (num_starts 1; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear.: 0.00258s (num_starts 1; 0.0026s/start)
parse_cvc4_model.: 0.002585s (num_starts 1; 0.0026s/start)
get_sprel_map_pair_at_pc.: 0.002591s (num_starts 43; 0.0001s/start)
get_mask_ranges_for_memlabel.: 0.002595s (num_starts 24; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.002665s (num_starts 85; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002678s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002716s (num_starts 2; 0.0014s/start)
tfg::get_aliasing_constraints_for_edge.: 0.002767s (num_starts 61; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.002811s (num_starts 110; 0.0000s/start)
construct_linear_combination_exprs.: 0.00287s (num_starts 85; 0.0000s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.002883s (num_starts 1; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-trivial.: 0.00298s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.002991s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003188s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003194s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.003201s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.003209s (num_starts 2; 0.0016s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.003266s (num_starts 144; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.003349s (num_starts 26; 0.0001s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.003454s (num_starts 26; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.003472s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.003478s (num_starts 3; 0.0012s/start)
create_sp_version_relations_lattice_at_pc.: 0.003481s (num_starts 28; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-trivial.: 0.003601s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.003606s (num_starts 3; 0.0012s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003633s (num_starts 5; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003833s (num_starts 1; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003836s (num_starts 1; 0.0038s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.003839s (num_starts 373; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003842s (num_starts 1; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.003851s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003904s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003907s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003914s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess.: 0.003924s (num_starts 1; 0.0039s/start)
do_ssa_transformation.: 0.003929s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-trivial.: 0.003957s (num_starts 4; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.003974s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-trivial.: 0.003984s (num_starts 3; 0.0013s/start)
get_next_potential_correlations.: 0.004086s (num_starts 5; 0.0008s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004104s (num_starts 20; 0.0002s/start)
cg_src_dst_tfg_copy.: 0.004216s (num_starts 2; 0.0021s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.0044s (num_starts 8; 0.0006s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.004459s (num_starts 2; 0.0022s/start)
compute_regions.: 0.004494s (num_starts 25; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.004659s (num_starts 2; 0.0023s/start)
collect_aliasing_constraints_around_path_helper.: 0.004681s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.004719s (num_starts 2; 0.0024s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.004792s (num_starts 1; 0.0048s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.004814s (num_starts 1; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.0052s (num_starts 4; 0.0013s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.005204s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.00521s (num_starts 4; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear;-trivial.: 0.005239s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.005247s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.005259s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear.: 0.005272s (num_starts 2; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.005365s (num_starts 3; 0.0018s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.005391s (num_starts 258; 0.0000s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.005439s (num_starts 31; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.00549s (num_starts 92; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.005758s (num_starts 70; 0.0001s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.005758s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.005824s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.005837s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.005866s (num_starts 3; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.005888s (num_starts 3; 0.0020s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);-trivial.: 0.006063s (num_starts 6; 0.0010s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.006072s (num_starts 258; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown;-trivial.: 0.006073s (num_starts 5; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown.: 0.006106s (num_starts 5; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-trivial.: 0.006223s (num_starts 4; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006232s (num_starts 2; 0.0031s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.006303s (num_starts 2; 0.0032s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.006369s (num_starts 343; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.006559s (num_starts 357; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.006935s (num_starts 55; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007001s (num_starts 2; 0.0035s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.007079s (num_starts 2; 0.0035s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00709s (num_starts 5; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.007095s (num_starts 5; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities..: 0.00715s (num_starts 5; 0.0014s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.007176s (num_starts 5; 0.0014s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.007256s (num_starts 55; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007541s (num_starts 20; 0.0004s/start)
pth_collect_simplified_preds_using_atom_func.: 0.0076s (num_starts 341; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00762s (num_starts 4; 0.0019s/start)
get_unrolled_paths_from.: 0.007668s (num_starts 36; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess.: 0.007673s (num_starts 4; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-trivial.: 0.007765s (num_starts 4; 0.0019s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.007972s (num_starts 43; 0.0002s/start)
ldr_decompose_and_linear_solve.: 0.008362s (num_starts 55; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.008414s (num_starts 4; 0.0021s/start)
counter_example_satisfies_preds.: 0.008513s (num_starts 180; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.008527s (num_starts 4; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.008792s (num_starts 6; 0.0015s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.00897s (num_starts 43; 0.0002s/start)
bv_linear_solve.: 0.009339s (num_starts 55; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.009444s (num_starts 6; 0.0016s/start)
populate_simplified_to_state.: 0.009571s (num_starts 3; 0.0032s/start)
query:bv_solve.: 0.00963s (num_starts 55; 0.0002s/start)
populate_simplified_assets.: 0.01016s (num_starts 6; 0.0017s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.010228s (num_starts 20; 0.0005s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.010922s (num_starts 665; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.011003s (num_starts 8; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.011124s (num_starts 8; 0.0014s/start)
avail_exprs_create_submap.: 0.011168s (num_starts 60; 0.0002s/start)
graph_to_stream.: 0.01124s (num_starts 4; 0.0028s/start)
bv_solve_returning_intermediate_structures.: 0.012461s (num_starts 55; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.012679s (num_starts 3; 0.0042s/start)
predicate_canonicalized.: 0.014312s (num_starts 85; 0.0002s/start)
bvsolve_cache_query.miss1.: 0.014466s (num_starts 55; 0.0003s/start)
bvsolve_cache_query.: 0.015091s (num_starts 55; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.015205s (num_starts 132; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%3%fcallStart_Lentry%2%fcallStart.inductive-invariants.: 0.015604s (num_starts 4; 0.0039s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);-trivial.: 0.01607s (num_starts 10; 0.0016s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.016138s (num_starts 132; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.017067s (num_starts 8; 0.0021s/start)
collect_assumes_around_path_helper.: 0.017534s (num_starts 141; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.017965s (num_starts 141; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.018047s (num_starts 8; 0.0023s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.018227s (num_starts 8; 0.0023s/start)
solve_for_bv_points.: 0.018982s (num_starts 55; 0.0003s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.019322s (num_starts 343; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-trivial.: 0.019834s (num_starts 14; 0.0014s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-trivial.: 0.020427s (num_starts 10; 0.0020s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.020572s (num_starts 5; 0.0041s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.021597s (num_starts 20; 0.0011s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.021845s (num_starts 487; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.022857s (num_starts 55; 0.0004s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.022869s (num_starts 5; 0.0046s/start)
gen_pred_from_coeff_row.simplify.: 0.023515s (num_starts 85; 0.0003s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.023833s (num_starts 343; 0.0001s/start)
lhs_set_sort.: 0.025193s (num_starts 43; 0.0006s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);-trivial.: 0.025618s (num_starts 14; 0.0018s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.026644s (num_starts 165; 0.0002s/start)
graph_ec_apply_trans_funs_helper.0.: 0.027995s (num_starts 279; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.029784s (num_starts 287; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.030594s (num_starts 287; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.031579s (num_starts 287; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallStart_Lentry%1%fcallStart.inductive-invariants.: 0.032031s (num_starts 6; 0.0053s/start)
computeWP_for_pred_across_ec.: 0.032431s (num_starts 287; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.033279s (num_starts 15; 0.0022s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.036688s (num_starts 28; 0.0013s/start)
compute_expr_eqclasses_at_pc.: 0.037265s (num_starts 4; 0.0093s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.037963s (num_starts 6; 0.0063s/start)
cg_add_node.: 0.038186s (num_starts 6; 0.0064s/start)
populate_loc_liveness.: 0.038346s (num_starts 3; 0.0128s/start)
edge_composition_apply_trans_funs_on_pred.: 0.038388s (num_starts 92; 0.0004s/start)
counter_example_falsifies_preds.: 0.040065s (num_starts 56; 0.0007s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.040253s (num_starts 14; 0.0029s/start)
tfg_relax_pointsto_vals_on_edge.: 0.041136s (num_starts 10; 0.0041s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.041353s (num_starts 132; 0.0003s/start)
gen_pred_from_coeff_row.: 0.046315s (num_starts 85; 0.0005s/start)
create_new_corr_graph_edge.new_node.: 0.046339s (num_starts 5; 0.0093s/start)
compute_preds_for_bv_points.: 0.047122s (num_starts 32; 0.0015s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.047302s (num_starts 36; 0.0013s/start)
create_new_corr_graph_edge.: 0.047452s (num_starts 5; 0.0095s/start)
counter_example_evaluate_preds.: 0.048011s (num_starts 236; 0.0002s/start)
put_smtlib_string_in_file.: 0.048063s (num_starts 88; 0.0005s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.054171s (num_starts 1; 0.0542s/start)
tfg_postprocess_after_pointsto_analysis.: 0.054366s (num_starts 2; 0.0272s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallEnd_Lentry%1%fcallEnd.inductive-invariants.: 0.057495s (num_starts 20; 0.0029s/start)
collect_inductive_preds_around_path.: 0.058881s (num_starts 92; 0.0006s/start)
get_masked_array_constant.: 0.059083s (num_starts 24; 0.0025s/start)
evaluate_memmask.: 0.062471s (num_starts 24; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070467s (num_starts 1; 0.0705s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070469s (num_starts 1; 0.0705s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.070473s (num_starts 1; 0.0705s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070477s (num_starts 1; 0.0705s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.070485s (num_starts 1; 0.0705s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.070488s (num_starts 1; 0.0705s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073573s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073594s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.073599s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;-dst-edgecond-implies-src-edgecond.: 0.073603s (num_starts 1; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075432s (num_starts 1; 0.0754s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.075438s (num_starts 1; 0.0754s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08017s (num_starts 1; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080176s (num_starts 1; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.080182s (num_starts 1; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond.: 0.080187s (num_starts 1; 0.0802s/start)
compute_lr_status_for_expr.: 0.0806s (num_starts 73; 0.0011s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.08088s (num_starts 70; 0.0012s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.08101s (num_starts 70; 0.0012s/start)
decide_hoare_triple_helper;-trivial.: 0.081814s (num_starts 49; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082793s (num_starts 1; 0.0828s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.082802s (num_starts 1; 0.0828s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083106s (num_starts 1; 0.0831s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.083112s (num_starts 1; 0.0831s/start)
compute_z3_expr.: 0.0841s (num_starts 2946; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085551s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085559s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.085567s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;-dst-edgecond-implies-src-edgecond.: 0.085571s (num_starts 1; 0.0856s/start)
query:convert_from_z3.: 0.092113s (num_starts 2902; 0.0000s/start)
evaluate_function_call.: 0.093858s (num_starts 24; 0.0039s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.099472s (num_starts 10; 0.0099s/start)
query:convert_to_z3.: 0.101837s (num_starts 2902; 0.0000s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.103166s (num_starts 56; 0.0018s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.111306s (num_starts 43; 0.0026s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.11211s (num_starts 10; 0.0112s/start)
compute_new_lr_status_on_locs.: 0.113922s (num_starts 20; 0.0057s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.113972s (num_starts 43; 0.0027s/start)
counter_example_translate_on_edge_composition_helper.: 0.13246s (num_starts 315; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.140895s (num_starts 2; 0.0704s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.140981s (num_starts 2; 0.0705s/start)
check_wfconds_on_edge.L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.144368s (num_starts 2; 0.0722s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.145926s (num_starts 46; 0.0032s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.146597s (num_starts 47; 0.0031s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.148968s (num_starts 2; 0.0745s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.149068s (num_starts 2; 0.0745s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart.: 0.150699s (num_starts 2; 0.0753s/start)
corr_graph::add_edge().: 0.156619s (num_starts 5; 0.0313s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163249s (num_starts 2; 0.0816s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.163324s (num_starts 2; 0.0817s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164886s (num_starts 1; 0.1649s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164891s (num_starts 1; 0.1649s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164895s (num_starts 1; 0.1649s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.164904s (num_starts 1; 0.1649s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate.: 0.164906s (num_starts 1; 0.1649s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.164912s (num_starts 1; 0.1649s/start)
check_wfconds_on_edge.L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart.: 0.164996s (num_starts 2; 0.0825s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166405s (num_starts 2; 0.0832s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.166417s (num_starts 2; 0.0832s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.168301s (num_starts 2; 0.0842s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.168393s (num_starts 2; 0.0842s/start)
check_wfconds_on_edge.L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd.: 0.172007s (num_starts 2; 0.0860s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.172013s (num_starts 2; 0.0860s/start)
ftmap_run_pointsto_analysis.: 0.172957s (num_starts 2; 0.0865s/start)
tfg_run_pointsto_analysis.: 0.173201s (num_starts 2; 0.0866s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174161s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174168s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174171s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.17418s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false.: 0.174184s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.174191s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 0.174519s (num_starts 3; 0.0582s/start)
tfg_populate_structs_after_ssa_construction.: 0.177738s (num_starts 2; 0.0889s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.183232s (num_starts 2; 0.0916s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.187812s (num_starts 143; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192492s (num_starts 2; 0.0962s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192532s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.192552s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.192581s (num_starts 2; 0.0963s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.194593s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.194597s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.194607s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.19461s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.194621s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate.: 0.194625s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.19463s (num_starts 1; 0.1946s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.195307s (num_starts 1; 0.1953s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.195314s (num_starts 1; 0.1953s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.195318s (num_starts 1; 0.1953s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.195325s (num_starts 1; 0.1953s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate.: 0.195329s (num_starts 1; 0.1953s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.195336s (num_starts 1; 0.1953s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198496s (num_starts 1; 0.1985s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.1985s (num_starts 1; 0.1985s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198502s (num_starts 1; 0.1985s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.19851s (num_starts 1; 0.1985s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false.: 0.198514s (num_starts 1; 0.1985s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.19852s (num_starts 1; 0.1985s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198692s (num_starts 1; 0.1987s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198697s (num_starts 1; 0.1987s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198702s (num_starts 1; 0.1987s/start)
apply_mask_and_overlay_array_constant.: 0.19905s (num_starts 143; 0.0014s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.200365s (num_starts 1; 0.2004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.204087s (num_starts 4; 0.0510s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown.: 0.204988s (num_starts 5; 0.0410s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.205355s (num_starts 5; 0.0411s/start)
corr_graph_add_correlation.: 0.205523s (num_starts 5; 0.0411s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.20763s (num_starts 7; 0.0297s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.208889s (num_starts 1; 0.2089s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.208895s (num_starts 1; 0.2089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.208898s (num_starts 1; 0.2089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.208907s (num_starts 1; 0.2089s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false.: 0.208911s (num_starts 1; 0.2089s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.208918s (num_starts 1; 0.2089s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.216307s (num_starts 1; 0.2163s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.219184s (num_starts 2; 0.1096s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.219192s (num_starts 2; 0.1096s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.219213s (num_starts 2; 0.1096s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.219219s (num_starts 2; 0.1096s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.219251s (num_starts 2; 0.1096s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.219297s (num_starts 2; 0.1096s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d).: 0.219314s (num_starts 2; 0.1097s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd).: 0.220642s (num_starts 15; 0.0147s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.221513s (num_starts 1; 0.2215s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.221517s (num_starts 1; 0.2215s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.22152s (num_starts 1; 0.2215s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.221529s (num_starts 1; 0.2215s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false.: 0.221533s (num_starts 1; 0.2215s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.221543s (num_starts 1; 0.2215s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.228436s (num_starts 5; 0.0457s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown.: 0.239253s (num_starts 16; 0.0150s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.246524s (num_starts 1; 0.2465s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.246526s (num_starts 1; 0.2465s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.246527s (num_starts 1; 0.2465s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.246534s (num_starts 1; 0.2465s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false.: 0.246537s (num_starts 1; 0.2465s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.246541s (num_starts 1; 0.2465s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275093s (num_starts 1; 0.2751s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.2751s (num_starts 1; 0.2751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.275106s (num_starts 1; 0.2751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.278736s (num_starts 4; 0.0697s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown.: 0.278747s (num_starts 4; 0.0697s/start)
query:simplify-z3.: 0.282709s (num_starts 5824; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.284706s (num_starts 7; 0.0407s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.315037s (num_starts 3; 0.1050s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon).: 0.317729s (num_starts 6; 0.0530s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.338388s (num_starts 4; 0.0846s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear.: 0.346299s (num_starts 8; 0.0433s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.361731s (num_starts 3; 0.1206s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.363571s (num_starts 2; 0.1818s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon).: 0.363665s (num_starts 4; 0.0909s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.375348s (num_starts 2; 0.1877s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.375356s (num_starts 2; 0.1877s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.375359s (num_starts 2; 0.1877s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.375383s (num_starts 2; 0.1877s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate.: 0.375392s (num_starts 2; 0.1877s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.375408s (num_starts 2; 0.1877s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.377168s (num_starts 3; 0.1257s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon).: 0.381389s (num_starts 6; 0.0636s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd).: 0.384394s (num_starts 12; 0.0320s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.395482s (num_starts 3; 0.1318s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.396074s (num_starts 4; 0.0990s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.402389s (num_starts 1; 0.4024s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.413983s (num_starts 3; 0.1380s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon).: 0.416024s (num_starts 4; 0.1040s/start)
check_wfconds_on_edge.L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d.: 0.416776s (num_starts 2; 0.2084s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.472806s (num_starts 1; 0.4728s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.504286s (num_starts 6; 0.0840s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond.: 0.504416s (num_starts 6; 0.0841s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.583979s (num_starts 2; 0.2920s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.58399s (num_starts 2; 0.2920s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.583994s (num_starts 2; 0.2920s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.585025s (num_starts 4; 0.1463s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown.: 0.585036s (num_starts 4; 0.1463s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.58809s (num_starts 6; 0.0980s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.795196s (num_starts 1; 0.7952s/start)
ce_reconcile_sorts_and_values.: 0.802595s (num_starts 49; 0.0164s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.813968s (num_starts 10; 0.0814s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.814307s (num_starts 10; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.894613s (num_starts 5; 0.1789s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.89463s (num_starts 5; 0.1789s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.894666s (num_starts 5; 0.1789s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear.: 0.894685s (num_starts 5; 0.1789s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.923338s (num_starts 1; 0.9233s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.930152s (num_starts 5; 0.1860s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.930271s (num_starts 5; 0.1861s/start)
check_equivalence_proof.: 0.950755s (num_starts 1; 0.9508s/start)
guarded_predicate_set_and.: 0.973291s (num_starts 43; 0.0226s/start)
check_wfconds_on_edge.: 1.04899s (num_starts 10; 0.1049s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.0496s (num_starts 5; 0.2099s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.0497s (num_starts 5; 0.2099s/start)
decide_hoare_triple.: 1.06018s (num_starts 10; 0.1060s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.06095s (num_starts 7; 0.1516s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 1.06117s (num_starts 7; 0.1516s/start)
dst_edge_composition_proves_false.: 1.07299s (num_starts 5; 0.2146s/start)
get_next_dst_edge_composition_to_correlate.: 1.0784s (num_starts 6; 0.1797s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.20766s (num_starts 494; 0.0024s/start)
parse_z3_model.: 1.23591s (num_starts 47; 0.0263s/start)
read_counter_examples_from_channel.: 1.24912s (num_starts 24; 0.0520s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.27698s (num_starts 6; 0.2128s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.31425s (num_starts 34; 0.0387s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.37229s (num_starts 8; 0.1715s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.37232s (num_starts 8; 0.1715s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 1.37395s (num_starts 9; 0.1527s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear.: 1.37398s (num_starts 9; 0.1527s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.41836s (num_starts 40; 0.0355s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 1.42048s (num_starts 1; 1.4205s/start)
check_preds_on_edge_compositions.: 1.4339s (num_starts 15; 0.0956s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.5442s (num_starts 10; 0.1544s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 1.54861s (num_starts 12; 0.1291s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.84019s (num_starts 10; 0.1840s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart).: 1.84683s (num_starts 16; 0.1154s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.1946s (num_starts 13; 0.1688s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart).: 2.21153s (num_starts 23; 0.0962s/start)
query:smt.: 2.38234s (num_starts 44; 0.0541s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.60522s (num_starts 17; 0.1532s/start)
decide_hoare_triple_helper;per-query-type;linear.: 2.62293s (num_starts 25; 0.1049s/start)
spawn_smt_query.: 3.63208s (num_starts 44; 0.0825s/start)
update_invariant_state_for_edges.: 5.00956s (num_starts 5; 1.0019s/start)
cg_check_new_cg_ec.: 5.03757s (num_starts 5; 1.0075s/start)
correl_entry_apply.: 5.03768s (num_starts 5; 1.0075s/start)
solver_provable.: 5.13037s (num_starts 43; 0.1193s/start)
expr_is_provable.: 5.14848s (num_starts 43; 0.1197s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 5.14965s (num_starts 43; 0.1198s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 5.15218s (num_starts 43; 0.1198s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 5.15334s (num_starts 43; 0.1198s/start)
solver_satisfiable-cache-miss.: 5.17386s (num_starts 44; 0.1176s/start)
solver_satisfiable.: 5.1742s (num_starts 44; 0.1176s/start)
expandProductCFG.: 6.12092s (num_starts 6; 1.0202s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 6.12867s (num_starts 43; 0.1425s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 6.13163s (num_starts 43; 0.1426s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 6.13249s (num_starts 43; 0.1426s/start)
bestFirstSearch.: 6.43501s (num_starts 1; 6.4350s/start)
is_expr_equal_using_lhs_set_and_precond.: 6.44687s (num_starts 43; 0.1499s/start)
prove.: 6.44731s (num_starts 43; 0.1499s/start)
prove_spawn_and_join_helper.: 6.4476s (num_starts 43; 0.1499s/start)
prove_spawn_and_join.: 6.60563s (num_starts 43; 0.1536s/start)
prove_wrapper.proof_query_not_trivial.: 6.612s (num_starts 43; 0.1538s/start)
prove_wrapper.: 6.62753s (num_starts 92; 0.0720s/start)
decide_hoare_triple_check_ub.: 6.67249s (num_starts 92; 0.0725s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.67764s (num_starts 43; 0.1553s/start)
decide_hoare_triple_helper.: 6.76357s (num_starts 92; 0.0735s/start)
decide_hoare_triple_with_alias_cons.: 6.91107s (num_starts 92; 0.0751s/start)
Time taken for equivalence check.: 7.40416s (num_starts 1; 7.4042s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 13
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>Lentry%1%fcallStart.: 1
# of paths enumerated.: 10
# of paths expanded.: 5
# of queries to linear solver.: 55
# of smt-solver-queries.: 44
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 2
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_ecs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_to_pcs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 2
Lentry%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_ecs.: 2
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 8
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 1
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 47
total-correlation-possibilities.: 10
total-correlation-possibilities-mod-lsprels.: 10
total-correlations-explored.: 6

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%1%fcallStart_Lentry%1%fcallStart.: 5
final-CG-counterexamples-generated-at-L3%3%fcallEnd_Lentry%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%3%fcallStart_Lentry%2%fcallStart.: 8
final-CG-counterexamples-total-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 7
final-CG-counterexamples-total-at-L3%1%fcallStart_Lentry%1%fcallStart.: 8
final-CG-counterexamples-total-at-L3%3%fcallEnd_Lentry%2%fcallEnd.: 6
final-CG-counterexamples-total-at-L3%3%fcallStart_Lentry%2%fcallStart.: 10
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 5
final-CG-edges.: 5
final-CG-nodes.: 6
final-CG-num-invariants.: 24
final-CG-super-edges.: 0
src-edges.: 5
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 5.24
final-CG-time-to-total-time-ratio.: 0.81
query-time-to-total-time-ratio.: 0.32

Context stats:
exprs: count: 168337
sorts: count: 160
num_proof_queries: 43
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	4123
	        hit ratio:	0.901043
m_simplify_solver:
	----------- total:	3876
	        hit ratio:	0.24613
m_z3_solver_substitution:
	----------- total:	2922
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	2922
	        hit ratio:	0
m_expr_size:
	----------- total:	8069
	        hit ratio:	0.616929
m_expr_evaluates_to_constant_visitor:
	----------- total:	53836
	        hit ratio:	0.472936
m_sort_dfa_canonicalize:
	----------- total:	204029
	        hit ratio:	0.999907
m_expr_convert_to_iexpr:
	----------- total:	486
	        hit ratio:	0.839506

z3_solver expr_query_cache entry size: 44
	----------- total:	44
	             hits:	0
	        hit ratio:	0
histogram (time taken by solver in ms):
[ 24.7880,  29.4032) (avg.  27.0540)     : 2
[ 29.4032,  34.8777) (avg.  31.6067)     : 11
[ 34.8777,  41.3714) (avg.  38.4683)     : 8
[ 41.3714,  49.0742) (avg.  47.7690)     : 1
[ 49.0742,  58.2112) (avg.  56.9060)     : 2
[ 58.2112,  69.0494) (avg.  63.3959)     : 12
[ 69.0494,  81.9054) (avg.  75.6885)     : 4
[ 81.9054,  97.1551) (avg.   0.0000)     : 0
[ 97.1551, 115.2441) (avg. 103.8247)     : 3
[115.2441, 136.7010) (avg. 135.7010)     : 1
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  0)                       : 0
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  8)                       : 15
[ 9, 11) (avg. 10)                       : 22
[11, 14) (avg. 12)                       : 6
[14, 16) (avg.  0)                       : 0
[16, 18) (avg.  0)                       : 0
[18, 20) (avg.  0)                       : 0
[20, 22) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 85,  98) (avg.  85)                    : 1
[ 98, 111) (avg.   0)                    : 0
[111, 124) (avg.   0)                    : 0
[124, 137) (avg.   0)                    : 0
[137, 150) (avg.   0)                    : 0
[150, 163) (avg. 159)                    : 2
[163, 176) (avg. 172)                    : 10
[176, 189) (avg. 182)                    : 25
[189, 202) (avg. 193)                    : 4
[202, 214) (avg. 204)                    : 2
Top 10 highest time taking queries:
1. [0.136s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.105s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.104s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.3
4. [0.102s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.1
5. [0.079s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-3-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
6. [0.077s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-8-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.076s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lentry%1%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
8. [0.072s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%1%fcallStart_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.1
9. [0.068s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.067s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%3%fcallEnd_Lentry%2%fcallEnd.dstToPC.E0%0%d.from_pcL3%3%fcallEnd_Lentry%2%f.0

<MSG>0:30 : Successfully computed equivalence for function: bar.</MSG>
<MSG>0:30 : Computing equivalence for function: foo...</MSG>
<MSG>0:30 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:30 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:31 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:31 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:31 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:31 : product-TFG foo: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:31 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:31 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:31 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:31 : product-TFG foo: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:31 : product-TFG foo created 1 possibilities in group foo.A...</MSG>
<MSG>0:31 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:31 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:31 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:31 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:31 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:31 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:31 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:31 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:31 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:31 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:31 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:31 : foo.A1: Propagated 0 out of 2 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:31 : foo.A1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:31 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:31 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:31 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:31 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:31 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:31 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:31 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:31 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:31 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:31 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:31 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:35 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:35 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:35 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:35 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:35 : Checking equivalence proof...</MSG>
<MSG>0:39 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 9.17s, query:smt.: 4.93512s (num_starts 36; 0.1371s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 8.37613s (num_starts 6; 1.3960s/start)ftmap_run_pointsto_analysis.: 0.360591s (num_starts 2; 0.1803s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 2e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 3e-06s (num_starts 2; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 4e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 4e-06s (num_starts 1; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 1.1e-05s (num_starts 3; 0.0000s/start)
collect_dst_to_src_submap_preds.: 1.3e-05s (num_starts 6; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.7e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 4.1e-05s (num_starts 2; 0.0000s/start)
check_node_stability_after_CE_addition.: 5.3e-05s (num_starts 2; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 5.5e-05s (num_starts 19; 0.0000s/start)
get_lr_status_for_loc_ids.: 6.1e-05s (num_starts 20; 0.0000s/start)
graph_with_guessing_sync_preds.: 6.4e-05s (num_starts 6; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 6.8e-05s (num_starts 3; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 7.5e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 7.7e-05s (num_starts 23; 0.0000s/start)
removeMostPromising.: 8.3e-05s (num_starts 4; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 9e-05s (num_starts 29; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.0001s (num_starts 19; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.0001s (num_starts 36; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000104s (num_starts 2; 0.0001s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000116s (num_starts 35; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000131s (num_starts 1; 0.0001s/start)
lr_status_meet.: 0.000141s (num_starts 243; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000142s (num_starts 1; 0.0001s/start)
expr_is_hidden_reg.: 0.000142s (num_starts 205; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000145s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000157s (num_starts 3; 0.0001s/start)
populate_locid2expr_map.: 0.000188s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.00019s (num_starts 2; 0.0001s/start)
expr_is_callee_save_const.: 0.0002s (num_starts 217; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000202s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000205s (num_starts 36; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000206s (num_starts 1; 0.0002s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.00021s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00022s (num_starts 1; 0.0002s/start)
collect_assumes_around_edge.: 0.000233s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000257s (num_starts 19; 0.0000s/start)
collect_inductive_preds_around_path.: 0.000262s (num_starts 6; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.000282s (num_starts 1; 0.0003s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000295s (num_starts 35; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000325s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000348s (num_starts 40; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.00036s (num_starts 22; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.00038s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::meet.: 0.00041s (num_starts 1012; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000417s (num_starts 22; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000423s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000431s (num_starts 2; 0.0002s/start)
compute_sprel_relations.: 0.000483s (num_starts 2; 0.0002s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000489s (num_starts 3; 0.0002s/start)
set_result_and_counter_example.: 0.000494s (num_starts 36; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000499s (num_starts 3; 0.0002s/start)
propagate_sprels.: 0.0005s (num_starts 2; 0.0003s/start)
create_new_corr_graph_edge.new_node.: 0.000508s (num_starts 1; 0.0005s/start)
tfg::collect_assumes_around_edge.: 0.000543s (num_starts 45; 0.0000s/start)
cg_add_node.: 0.000558s (num_starts 2; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000573s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000579s (num_starts 2; 0.0003s/start)
create_new_corr_graph_edge.: 0.000701s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000715s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000715s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000716s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000717s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000718s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000719s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities..: 0.000723s (num_starts 1; 0.0007s/start)
proof_query_is_trivial.: 0.000724s (num_starts 36; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000728s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000733s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;-trivial.: 0.000783s (num_starts 1; 0.0008s/start)
graph_locs_add_all_llvmvars.: 0.000868s (num_starts 2; 0.0004s/start)
parse_yices_model.: 0.00087s (num_starts 1; 0.0009s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000926s (num_starts 64; 0.0000s/start)
expr_represents_llvm_undef.: 0.000944s (num_starts 221; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000961s (num_starts 2; 0.0005s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000963s (num_starts 66; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.001021s (num_starts 8; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.001079s (num_starts 29; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.00108s (num_starts 35; 0.0000s/start)
populate_simplified_to_state.: 0.001081s (num_starts 3; 0.0004s/start)
create_closure_matrix.: 0.001149s (num_starts 83; 0.0000s/start)
counter_example_satisfies_preds.: 0.001252s (num_starts 8; 0.0002s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.001261s (num_starts 4; 0.0003s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001307s (num_starts 1; 0.0013s/start)
get_sprel_map_pair.: 0.001329s (num_starts 72; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001353s (num_starts 1; 0.0014s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001365s (num_starts 32; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001388s (num_starts 2; 0.0007s/start)
counter_example_translate_on_edge_composition_helper.: 0.001465s (num_starts 12; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.001597s (num_starts 3; 0.0005s/start)
parse_cvc4_model.: 0.001685s (num_starts 1; 0.0017s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002015s (num_starts 3; 0.0007s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.002023s (num_starts 12; 0.0002s/start)
tfg::populate_loc_definedness.: 0.002114s (num_starts 3; 0.0007s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002428s (num_starts 29; 0.0001s/start)
populate_branch_affecting_locs.: 0.002429s (num_starts 3; 0.0008s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.002587s (num_starts 2; 0.0013s/start)
identify_address_taken_local_variables.: 0.002613s (num_starts 1; 0.0026s/start)
create_sp_version_relations_lattice_at_pc.: 0.002662s (num_starts 83; 0.0000s/start)
apply_mask_and_overlay_array_constant.: 0.002701s (num_starts 2; 0.0014s/start)
compute_ssa_vars_renaming_map.: 0.002708s (num_starts 2; 0.0014s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002881s (num_starts 1; 0.0029s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.002969s (num_starts 48; 0.0001s/start)
collect_assumes_around_path_helper.: 0.002989s (num_starts 19; 0.0002s/start)
populate_transitive_closure.: 0.003025s (num_starts 11; 0.0003s/start)
graph_with_paths::collect_assumes_around_path.: 0.003044s (num_starts 19; 0.0002s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.003051s (num_starts 32; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.003107s (num_starts 2; 0.0016s/start)
graph_identify_back_edges.: 0.003305s (num_starts 16; 0.0002s/start)
populate_simplified_assets.: 0.003311s (num_starts 6; 0.0006s/start)
graph_identify_natural_loops.: 0.003339s (num_starts 16; 0.0002s/start)
get_next_potential_correlations.: 0.003773s (num_starts 1; 0.0038s/start)
find_dominators.: 0.003912s (num_starts 20; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.003923s (num_starts 35; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.003967s (num_starts 221; 0.0000s/start)
graph_visit_exprs.: 0.004009s (num_starts 3; 0.0013s/start)
pth_collect_preds_using_atom_func.: 0.004082s (num_starts 64; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004137s (num_starts 236; 0.0000s/start)
get_unrolled_paths_from.: 0.004171s (num_starts 6; 0.0007s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.004227s (num_starts 1236; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004342s (num_starts 96; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.004924s (num_starts 72; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.005183s (num_starts 64; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.00521s (num_starts 64; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.00563s (num_starts 35; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.006598s (num_starts 3; 0.0022s/start)
compute_vars_reaching_definitions.: 0.006633s (num_starts 2; 0.0033s/start)
compute_regions.: 0.007031s (num_starts 16; 0.0004s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.008064s (num_starts 66; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.009891s (num_starts 569; 0.0000s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.009923s (num_starts 3; 0.0033s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.010339s (num_starts 35; 0.0003s/start)
lhs_set_sort.: 0.013941s (num_starts 35; 0.0004s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.015019s (num_starts 35; 0.0004s/start)
do_ssa_transformation.: 0.01588s (num_starts 2; 0.0079s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.017703s (num_starts 1; 0.0177s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.017801s (num_starts 243; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.018165s (num_starts 243; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.018192s (num_starts 66; 0.0003s/start)
compute_lr_status_for_expr.: 0.018599s (num_starts 310; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.019074s (num_starts 40; 0.0005s/start)
ce_reconcile_sorts_and_values.: 0.02136s (num_starts 5; 0.0043s/start)
tfg::get_aliasing_constraints_for_edge.: 0.022983s (num_starts 133; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.026009s (num_starts 10; 0.0026s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.026859s (num_starts 6; 0.0045s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.026879s (num_starts 6; 0.0045s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.027765s (num_starts 7; 0.0040s/start)
collect_aliasing_constraints_around_path_helper.: 0.029572s (num_starts 32; 0.0009s/start)
expr_substitute_using_available_exprs_submap.: 0.029594s (num_starts 251; 0.0001s/start)
collect_aliasing_constraints_around_path.: 0.029655s (num_starts 20; 0.0015s/start)
parse_z3_model.: 0.031748s (num_starts 3; 0.0106s/start)
compute_new_lr_status_on_locs.: 0.032706s (num_starts 66; 0.0005s/start)
read_counter_examples_from_channel.: 0.034697s (num_starts 2; 0.0173s/start)
tfg_relax_pointsto_vals_on_edge.: 0.036493s (num_starts 2; 0.0182s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.037179s (num_starts 66; 0.0006s/start)
query:convert_to_z3.: 0.038958s (num_starts 882; 0.0000s/start)
graph_to_stream.: 0.043386s (num_starts 4; 0.0108s/start)
query:convert_from_z3.: 0.04436s (num_starts 882; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.044734s (num_starts 50; 0.0009s/start)
computeWP_for_pred_across_ec.: 0.044903s (num_starts 50; 0.0009s/start)
graph_ec_apply_trans_funs_helper.0.: 0.046197s (num_starts 62; 0.0007s/start)
graph_ec_apply_trans_funs_helper.: 0.046394s (num_starts 62; 0.0007s/start)
tfg_suffixpath_get_expr_helper.: 0.046437s (num_starts 20; 0.0023s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.046527s (num_starts 62; 0.0008s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.047905s (num_starts 35; 0.0014s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.049172s (num_starts 66; 0.0007s/start)
edge_composition_apply_trans_funs_on_pred.: 0.053447s (num_starts 6; 0.0089s/start)
avail_exprs_create_submap.: 0.053791s (num_starts 198; 0.0003s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.053937s (num_starts 10; 0.0054s/start)
put_smtlib_string_in_file.: 0.069032s (num_starts 72; 0.0010s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.074652s (num_starts 23; 0.0032s/start)
populate_loc_liveness.: 0.080012s (num_starts 3; 0.0267s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.080986s (num_starts 1463; 0.0001s/start)
counter_example_falsifies_preds.: 0.086286s (num_starts 2; 0.0431s/start)
counter_example_evaluate_preds.: 0.087515s (num_starts 10; 0.0088s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.089129s (num_starts 1; 0.0891s/start)
compute_z3_expr.: 0.094301s (num_starts 918; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.097614s (num_starts 2; 0.0488s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.102564s (num_starts 66; 0.0016s/start)
corr_graph::add_edge().: 0.107905s (num_starts 1; 0.1079s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.109133s (num_starts 1; 0.1091s/start)
corr_graph_add_correlation.: 0.109169s (num_starts 1; 0.1092s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.109216s (num_starts 1; 0.1092s/start)
query:simplify-z3.: 0.121982s (num_starts 1790; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.131128s (num_starts 64; 0.0020s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.141087s (num_starts 466; 0.0003s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.172107s (num_starts 1492; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.174355s (num_starts 1463; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.204451s (num_starts 1463; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.205437s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.205445s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.205454s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.205463s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.205473s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond.: 0.20548s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.205487s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.205493s (num_starts 2; 0.1027s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215348s (num_starts 1; 0.2153s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215351s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215352s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215353s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.215362s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.215365s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.215368s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.21537s (num_starts 1; 0.2154s/start)
decide_hoare_triple.: 0.224011s (num_starts 2; 0.1120s/start)
dst_edge_composition_proves_false.: 0.238181s (num_starts 1; 0.2382s/start)
get_next_dst_edge_composition_to_correlate.: 0.2389s (num_starts 2; 0.1195s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.246163s (num_starts 64; 0.0038s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.25444s (num_starts 35; 0.0073s/start)
guarded_predicate_set_and.: 0.281203s (num_starts 35; 0.0080s/start)
ftmap_run_pointsto_analysis.: 0.360591s (num_starts 2; 0.1803s/start)
tfg_run_pointsto_analysis.: 0.361119s (num_starts 2; 0.1806s/start)
tfg_populate_structs_after_ssa_construction.: 0.418021s (num_starts 2; 0.2090s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.420772s (num_starts 3; 0.1403s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.421614s (num_starts 4; 0.1054s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.436917s (num_starts 2; 0.2185s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.49376s (num_starts 430; 0.0035s/start)
check_equivalence_proof.: 3.8457s (num_starts 1; 3.8457s/start)
update_invariant_state_for_edges.: 4.36628s (num_starts 1; 4.3663s/start)
cg_check_new_cg_ec.: 4.36637s (num_starts 1; 4.3664s/start)
correl_entry_apply.: 4.36641s (num_starts 1; 4.3664s/start)
expandProductCFG.: 4.6092s (num_starts 2; 2.3046s/start)
bestFirstSearch.: 4.77215s (num_starts 1; 4.7722s/start)
query:smt.: 4.93512s (num_starts 36; 0.1371s/start)
spawn_smt_query.: 4.97018s (num_starts 36; 0.1381s/start)
solver_provable.: 6.61492s (num_starts 35; 0.1890s/start)
expr_is_provable.: 6.64083s (num_starts 35; 0.1897s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 6.64144s (num_starts 35; 0.1898s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 6.64358s (num_starts 35; 0.1898s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 6.65034s (num_starts 35; 0.1900s/start)
solver_satisfiable-cache-miss.: 6.65437s (num_starts 36; 0.1848s/start)
solver_satisfiable.: 6.6546s (num_starts 36; 0.1849s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 6.94158s (num_starts 35; 0.1983s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 7.01703s (num_starts 35; 0.2005s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 7.01773s (num_starts 35; 0.2005s/start)
is_expr_equal_using_lhs_set_and_precond.: 7.27202s (num_starts 35; 0.2078s/start)
prove.: 7.27247s (num_starts 35; 0.2078s/start)
prove_spawn_and_join_helper.: 7.27274s (num_starts 35; 0.2078s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.95404s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.95404s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.95405s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.95406s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.95407s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 7.95408s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 7.95409s (num_starts 2; 3.9770s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 7.95411s (num_starts 2; 3.9771s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 7.95412s (num_starts 2; 3.9771s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 7.95413s (num_starts 2; 3.9771s/start)
prove_spawn_and_join.: 8.00171s (num_starts 35; 0.2286s/start)
prove_wrapper.proof_query_not_trivial.: 8.00975s (num_starts 35; 0.2289s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 8.16084s (num_starts 4; 2.0402s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 8.1814s (num_starts 2; 4.0907s/start)
check_wfconds_on_edge.: 8.18142s (num_starts 2; 4.0907s/start)
check_preds_on_edge_compositions.: 8.18427s (num_starts 3; 2.7281s/start)
prove_wrapper.: 8.31449s (num_starts 36; 0.2310s/start)
decide_hoare_triple_check_ub.: 8.37368s (num_starts 6; 1.3956s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 8.37506s (num_starts 5; 1.6750s/start)
decide_hoare_triple_helper.: 8.37613s (num_starts 6; 1.3960s/start)
decide_hoare_triple_with_alias_cons.: 8.37641s (num_starts 6; 1.3961s/start)
Time taken for equivalence check.: 8.61853s (num_starts 1; 8.6185s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>E0%0%d.: 4
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 36
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 3
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 21
src-nodes.: 18
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 4.48
final-CG-time-to-total-time-ratio.: 0.94
query-time-to-total-time-ratio.: 0.53

Context stats:
exprs: count: 151358
sorts: count: 153
num_proof_queries: 78
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7408
	        hit ratio:	0.951404
m_simplify_solver:
	----------- total:	3578
	        hit ratio:	0.746227
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	16
	        hit ratio:	0
m_z3_solver_substitution:
	----------- total:	908
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	908
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	4
	        hit ratio:	0.75
m_expr_size:
	----------- total:	12874
	        hit ratio:	0.913314
m_contains_only_constants_or_sp_versions:
	----------- total:	8
	        hit ratio:	0.5
m_expr_evaluates_to_constant_visitor:
	----------- total:	11970
	        hit ratio:	0.666834
m_sort_dfa_canonicalize:
	----------- total:	251227
	        hit ratio:	0.999944
m_expr_convert_to_iexpr:
	----------- total:	447
	        hit ratio:	0.803132

z3_solver expr_query_cache entry size: 36
	----------- total:	80
	             hits:	0
	        hit ratio:	0
histogram (time taken by solver in ms):
[  33.8640,   49.9624) (avg.   45.4237)  : 25
[  49.9624,   73.7136) (avg.   54.7440)  : 9
[  73.7136,  108.7557) (avg.    0.0000)  : 0
[ 108.7557,  160.4563) (avg.    0.0000)  : 0
[ 160.4563,  236.7344) (avg.    0.0000)  : 0
[ 236.7344,  349.2738) (avg.    0.0000)  : 0
[ 349.2738,  515.3125) (avg.    0.0000)  : 0
[ 515.3125,  760.2831) (avg.    0.0000)  : 0
[ 760.2831, 1121.7084) (avg.    0.0000)  : 0
[1121.7084, 1654.9490) (avg. 1653.1575)  : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 2)                          : 35
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 40,  73) (avg.  40)                    : 1
[ 73, 105) (avg.   0)                    : 0
[105, 138) (avg.   0)                    : 0
[138, 170) (avg.   0)                    : 0
[170, 203) (avg.   0)                    : 0
[203, 235) (avg.   0)                    : 0
[235, 268) (avg. 263)                    : 1
[268, 300) (avg.   0)                    : 0
[300, 333) (avg. 316)                    : 2
[333, 365) (avg. 353)                    : 32
Top 10 highest time taking queries:
1. [1.654s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.1
2. [1.652s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.0
3. [0.072s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.055s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem14_of_16.0
5. [0.055s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem13_of_16.0
6. [0.054s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem3_of_16.1
7. [0.053s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem11_of_16.0
8. [0.052s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem15_of_16.0
9. [0.051s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem14_of_16.1
10. [0.051s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem13_of_16.1

<MSG>0:39 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 172 time spent: 0:0:0 [0.004177s total; 0.000024 per start]
tfg_computeWP: num_starts 385 time spent: 0:0:0 [0.065543s total; 0.000170 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1783 time spent: 0:0:0 [0.003177s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1839 time spent: 0:0:0 [0.003602s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 1857 time spent: 0:0:0 [0.003078s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 54 time spent: 0:0:0 [0.127894s total; 0.002368 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.240121s total; 0.020010 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 115 time spent: 0:0:0 [0.107870s total; 0.000938 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 58 time spent: 0:0:0 [0.132476s total; 0.002284 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 110 time spent: 0:0:0 [0.098515s total; 0.000896 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 576 time spent: 0:0:0 [0.221742s total; 0.000385 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 115 time spent: 0:0:0 [0.005690s total; 0.000049 per start]
tfg_graph_get_vars_written_on_edge: num_starts 110 time spent: 0:0:0 [0.002114s total; 0.000019 per start]
cg_with_rank_add_CE_at_pc: num_starts 67 time spent: 0:0:0 [0.127536s total; 0.001904 per start]
graph_with_ce_add_CE_at_pc: num_starts 35 time spent: 0:0:0 [0.000823s total; 0.000024 per start]
graph_with_guessing_add_CE_at_pc: num_starts 67 time spent: 0:0:0 [0.127379s total; 0.001901 per start]
point_set_add_point_using_CE: num_starts 110 time spent: 0:0:0 [0.048062s total; 0.000437 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 110 time spent: 0:0:0 [0.048440s total; 0.000440 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 55 time spent: 0:0:0 [0.124347s total; 0.002261 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 55 time spent: 0:0:0 [0.075026s total; 0.001364 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3795 time spent: 0:0:0 [0.130577s total; 0.000034 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 205 time spent: 0:0:0 [0.030697s total; 0.000150 per start]
expr_simplify_solver: num_starts 7586 time spent: 0:0:0 [0.824976s total; 0.000109 per start]
expr_simplify_syntactic: num_starts 7634 time spent: 0:0:1 [1.699171s total; 0.000223 per start]
expr_simplify_select_on_store: num_starts 501 time spent: 0:0:1 [1.475830s total; 0.002946 per start]
expr_simplify_using_lhs_set_helper: num_starts 1065 time spent: 0:0:2 [2.785471s total; 0.002615 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 13777 time spent: 0:0:2 [2.770458s total; 0.000201 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 9676 time spent: 0:0:0 [0.038291s total; 0.000004 per start]
expr_simplify_eq: num_starts 863 time spent: 0:0:0 [0.011573s total; 0.000013 per start]
expr_simplify_or: num_starts 124 time spent: 0:0:0 [0.000109s total; 0.000001 per start]
expr_simplify_and: num_starts 1119 time spent: 0:0:0 [0.008172s total; 0.000007 per start]
expr_simplify_andnot1: num_starts 4 time spent: 0:0:0 [0.000059s total; 0.000015 per start]
expr_simplify_not: num_starts 8 time spent: 0:0:0 [0.000027s total; 0.000003 per start]
expr_simplify_implies: num_starts 262 time spent: 0:0:0 [0.002490s total; 0.000010 per start]
expr_simplify_ite: num_starts 4 time spent: 0:0:0 [0.000235s total; 0.000059 per start]
canonicalize_expr_tree: num_starts 3906 time spent: 0:0:0 [0.135437s total; 0.000035 per start]
expr_simplify_memalloc_using_memlabel: num_starts 199 time spent: 0:0:0 [0.000620s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 505 time spent: 0:0:1 [1.456626s total; 0.002884 per start]
get_arithmetic_addsub_atoms: num_starts 9537 time spent: 0:0:0 [0.006387s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 875 time spent: 0:0:0 [0.009113s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 4052 time spent: 0:0:0 [0.002437s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 12075 time spent: 0:0:2 [2.327883s total; 0.000193 per start]
expr_do_simplify_helper_cache: num_starts 12075 time spent: 0:0:0 [0.011694s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 8 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 8 time spent: 0:0:0 [0.000021s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 463 time spent: 0:0:0 [0.252278s total; 0.000545 per start]
array_constant_equals: num_starts 11340 time spent: 0:0:0 [0.014373s total; 0.000001 per start]
sort_dfa_canonical: num_starts 599071 time spent: 0:0:1 [1.434072s total; 0.000002 per start]
expr_convert_to_iexpr: num_starts 957 time spent: 0:0:2 [2.086061s total; 0.002180 per start]
combo_dfa_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.358159s total; 0.004840 per start]
alias_val_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.230427s total; 0.003114 per start]
get_sprel_map_from_avail_exprs: num_starts 103 time spent: 0:0:0 [0.011848s total; 0.000115 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000119s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 172 time spent: 0:0:0 [0.036092s total; 0.000210 per start]
compute_simplified_loc_exprs_for_edge: num_starts 446 time spent: 0:0:0 [0.259553s total; 0.000582 per start]
compute_locs_definitely_written_on_edge: num_starts 172 time spent: 0:0:0 [0.000339s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.023937s total; 0.000443 per start]
edge_update_memlabel_map_for_mlvars: num_starts 86 time spent: 0:0:0 [0.008769s total; 0.000102 per start]
add_new_locs_based_on_edge: num_starts 74 time spent: 0:0:0 [0.111096s total; 0.001501 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000520s total; 0.000007 per start]
total: num_starts 1 time spent: 0:0:46 [46.540434s total; 46.540434 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 16.99s.
ftmap_run_pointsto_analysis.: 0.360591s (num_starts 2; 0.1803s/start)s.
EQ Time after pointsto analysis: 16.6285s.
EQ Time after pointsto analysis and smt_query: 8.31404s.
EQ Time after pointsto analysis and smt_query and bv-solve: 8.31404s.
Equivalence proof found. The programs are equivalent.
