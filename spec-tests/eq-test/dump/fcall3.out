argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall3.proof
argv[9] = --spec-iospecs=fcall3.iospecs
argv[10] = fcall3.spec
argv[11] = fcall3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.2173614
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall3.c
argv[10] = -o
argv[11] = par_tmpdir/fcall3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall3.spec.etfg
argv[11] = par_tmpdir/fcall3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function bar</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 72 time spent: 0:0:0 [0.000115s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 148 time spent: 0:0:0 [0.000261s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 855 time spent: 0:0:0 [0.007954s total; 0.000009 per start]
expr_simplify_solver: num_starts 250 time spent: 0:0:0 [0.021278s total; 0.000085 per start]
expr_simplify_syntactic: num_starts 250 time spent: 0:0:0 [0.136178s total; 0.000545 per start]
expr_simplify_select_on_store: num_starts 16 time spent: 0:0:0 [0.040550s total; 0.002534 per start]
expr_simplify_using_lhs_set_helper: num_starts 214 time spent: 0:0:0 [0.173848s total; 0.000812 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1127 time spent: 0:0:0 [0.172932s total; 0.000153 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 91 time spent: 0:0:0 [0.000380s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 132 time spent: 0:0:0 [0.002134s total; 0.000016 per start]
expr_simplify_memalloc_using_memlabel: num_starts 24 time spent: 0:0:0 [0.000059s total; 0.000002 per start]
expr_simplify_select_on_store_visit_function: num_starts 16 time spent: 0:0:0 [0.039853s total; 0.002491 per start]
get_arithmetic_addsub_atoms: num_starts 64 time spent: 0:0:0 [0.000076s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 132 time spent: 0:0:0 [0.001817s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 754 time spent: 0:0:0 [0.000460s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1960 time spent: 0:0:0 [0.176663s total; 0.000090 per start]
expr_do_simplify_helper_cache: num_starts 1960 time spent: 0:0:0 [0.001569s total; 0.000001 per start]
array_constant_equals: num_starts 115 time spent: 0:0:0 [0.000226s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145161 time spent: 0:0:1 [1.137934s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 24 time spent: 0:0:0 [0.006103s total; 0.000254 per start]
combo_dfa_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.100131s total; 0.002635 per start]
alias_val_xfer_and_meet: num_starts 38 time spent: 0:0:0 [0.063182s total; 0.001663 per start]
get_sprel_map_from_avail_exprs: num_starts 70 time spent: 0:0:0 [0.006542s total; 0.000093 per start]
update_memlabels_for_memslot_locs: num_starts 28 time spent: 0:0:0 [0.000133s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 72 time spent: 0:0:0 [0.005924s total; 0.000082 per start]
compute_simplified_loc_exprs_for_edge: num_starts 328 time spent: 0:0:0 [0.157622s total; 0.000481 per start]
compute_locs_definitely_written_on_edge: num_starts 72 time spent: 0:0:0 [0.000052s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.025411s total; 0.000471 per start]
edge_update_memlabel_map_for_mlvars: num_starts 36 time spent: 0:0:0 [0.001016s total; 0.000028 per start]
add_new_locs_based_on_edge: num_starts 36 time spent: 0:0:0 [0.029085s total; 0.000808 per start]
alias_val_meet: num_starts 1 time spent: 0:0:0 [0.000056s total; 0.000056 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000468s total; 0.000009 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.bar.: 0s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.bar.: 0s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.bar.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.bar.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.bar.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 3; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 3e-06s (num_starts 2; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 6e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.bar.: 8e-06s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 3.7e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 4.2e-05s (num_starts 54; 0.0000s/start)
add_assumes_to_start_edge.: 4.4e-05s (num_starts 2; 0.0000s/start)
add_extra_node_at_start_pc.: 4.8e-05s (num_starts 2; 0.0000s/start)
context_constructor.solver.: 4.9e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 5.9e-05s (num_starts 1; 0.0001s/start)
expr_is_callee_save_const.: 6.5e-05s (num_starts 62; 0.0000s/start)
get_lr_status_for_loc_ids.: 6.6e-05s (num_starts 6; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 7.1e-05s (num_starts 2; 0.0000s/start)
lr_status_meet.: 8.3e-05s (num_starts 70; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 8.3e-05s (num_starts 4; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 8.9e-05s (num_starts 2; 0.0000s/start)
main.3.: 9.5e-05s (num_starts 1; 0.0001s/start)
get_memlabel_set_from_mlvarnames.: 0.000106s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000123s (num_starts 14; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000149s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 0.000223s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000224s (num_starts 2; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000241s (num_starts 4; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000252s (num_starts 4; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000275s (num_starts 36; 0.0000s/start)
determinize_value_expr_map.: 0.00028s (num_starts 308; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000286s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.00029s (num_starts 14; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000296s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000323s (num_starts 66; 0.0000s/start)
compute_sprel_relations.: 0.000326s (num_starts 2; 0.0002s/start)
propagate_sprels.: 0.000343s (num_starts 2; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000345s (num_starts 36; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000351s (num_starts 670; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.00037s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000379s (num_starts 36; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.bar.: 0.000451s (num_starts 1; 0.0005s/start)
populate_locid2expr_map.: 0.000461s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000477s (num_starts 2; 0.0002s/start)
tfg_get_write_memlabels.: 0.000538s (num_starts 2; 0.0003s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000543s (num_starts 2; 0.0003s/start)
def_analysis::xfer_and_meet.: 0.000586s (num_starts 72; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000591s (num_starts 36; 0.0000s/start)
tfg_get_read_memlabels.: 0.000807s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000818s (num_starts 2; 0.0004s/start)
graph_with_edge_structures_constructor.src.spec.bar.: 0.000828s (num_starts 1; 0.0008s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000863s (num_starts 36; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000887s (num_starts 2; 0.0004s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000973s (num_starts 36; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.000997s (num_starts 2; 0.0005s/start)
graph_with_locs_constructor.src.spec.bar.: 0.001043s (num_starts 1; 0.0010s/start)
expr_substitute_using_available_exprs_submap.: 0.001161s (num_starts 36; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.001163s (num_starts 2; 0.0006s/start)
graph_visit_exprs_const.const.: 0.001212s (num_starts 4; 0.0003s/start)
compute_z3_expr.: 0.00128s (num_starts 120; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.001308s (num_starts 66; 0.0000s/start)
get_summary_for_calling_functions.: 0.00137s (num_starts 2; 0.0007s/start)
canonicalize_llvm_nextpcs.: 0.001376s (num_starts 2; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.001385s (num_starts 2; 0.0007s/start)
create_closure_matrix.: 0.001437s (num_starts 64; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.bar.: 0.001672s (num_starts 1; 0.0017s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001771s (num_starts 2; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.002138s (num_starts 749; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.002283s (num_starts 1; 0.0023s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002345s (num_starts 2; 0.0012s/start)
tfg::collect_assumes_around_edge.: 0.002431s (num_starts 148; 0.0000s/start)
graph_with_predicates_constructor.src.spec.bar.: 0.00259s (num_starts 1; 0.0026s/start)
tfg_constructor.src.spec.bar.after_transitive_closure.: 0.002699s (num_starts 1; 0.0027s/start)
tfg_constructor.src.spec.bar.post_parsing.: 0.002704s (num_starts 1; 0.0027s/start)
tfg_constructor.src.spec.bar.after_string_contents.: 0.002713s (num_starts 1; 0.0027s/start)
tfg_constructor.src.spec.bar.after_compute_max_memlabel_varnum.: 0.002719s (num_starts 1; 0.0027s/start)
tfg_constructor.src.spec.bar.: 0.002721s (num_starts 1; 0.0027s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.002903s (num_starts 2; 0.0015s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.003054s (num_starts 1; 0.0031s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00316s (num_starts 2; 0.0016s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.003329s (num_starts 2; 0.0017s/start)
tfg_preprocess.dst.llvm.bar.: 0.003605s (num_starts 1; 0.0036s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.003658s (num_starts 38; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003727s (num_starts 38; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.003768s (num_starts 4; 0.0009s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.003828s (num_starts 1; 0.0038s/start)
compute_lr_status_for_expr.: 0.003932s (num_starts 58; 0.0001s/start)
query:convert_from_z3.: 0.004147s (num_starts 120; 0.0000s/start)
populate_transitive_closure.: 0.004363s (num_starts 2; 0.0022s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004385s (num_starts 4; 0.0011s/start)
tfg::populate_loc_definedness.: 0.004644s (num_starts 4; 0.0012s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004701s (num_starts 38; 0.0001s/start)
populate_branch_affecting_locs.: 0.004739s (num_starts 4; 0.0012s/start)
graph_visit_exprs.: 0.005382s (num_starts 8; 0.0007s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.005575s (num_starts 36; 0.0002s/start)
query:convert_to_z3.: 0.005792s (num_starts 120; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.005965s (num_starts 1; 0.0060s/start)
populate_dominator_and_postdominator_relations.: 0.006309s (num_starts 4; 0.0016s/start)
graph_identify_back_edges.: 0.006735s (num_starts 12; 0.0006s/start)
graph_identify_natural_loops.: 0.00678s (num_starts 12; 0.0006s/start)
create_sp_version_relations_lattice_at_pc.: 0.007152s (num_starts 64; 0.0001s/start)
get_function_tfg_map.bar.: 0.00721s (num_starts 1; 0.0072s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.007339s (num_starts 1; 0.0073s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008559s (num_starts 37; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.010542s (num_starts 1; 0.0105s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.010816s (num_starts 855; 0.0000s/start)
compute_regions.: 0.011014s (num_starts 12; 0.0009s/start)
find_dominators.: 0.012213s (num_starts 20; 0.0006s/start)
avail_exprs_create_submap.: 0.012245s (num_starts 110; 0.0001s/start)
graph_to_stream.: 0.012494s (num_starts 2; 0.0062s/start)
query:simplify-z3.: 0.013019s (num_starts 252; 0.0001s/start)
tfg::tfg_preprocess.: 0.014155s (num_starts 2; 0.0071s/start)
populate_simplified_to_state.: 0.014954s (num_starts 6; 0.0025s/start)
get_function_tfg_map.foo.: 0.016231s (num_starts 1; 0.0162s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.017468s (num_starts 1; 0.0175s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.017474s (num_starts 1; 0.0175s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.017478s (num_starts 1; 0.0175s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.017483s (num_starts 1; 0.0175s/start)
tfg_constructor.src.spec.foo.: 0.017487s (num_starts 1; 0.0175s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017716s (num_starts 38; 0.0005s/start)
get_tfg.: 0.023338s (num_starts 2; 0.0117s/start)
get_function_tfg_map.: 0.023447s (num_starts 2; 0.0117s/start)
populate_simplified_assets.: 0.023585s (num_starts 12; 0.0020s/start)
main.2.: 0.024622s (num_starts 1; 0.0246s/start)
compute_new_lr_status_on_locs.: 0.032617s (num_starts 36; 0.0009s/start)
populate_locs_potentially_modified_on_edge.: 0.061956s (num_starts 6; 0.0103s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.063257s (num_starts 38; 0.0017s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.068414s (num_starts 34; 0.0020s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.081851s (num_starts 72; 0.0011s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.08557s (num_starts 6; 0.0143s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.093241s (num_starts 855; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.094488s (num_starts 855; 0.0001s/start)
populate_loc_liveness.: 0.094647s (num_starts 4; 0.0237s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.103656s (num_starts 855; 0.0001s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.174084s (num_starts 214; 0.0008s/start)
tfg_postprocess_after_pointsto_analysis.: 0.178387s (num_starts 2; 0.0892s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.188118s (num_starts 2; 0.0941s/start)
ftmap_run_pointsto_analysis.: 0.301725s (num_starts 1; 0.3017s/start)
parse_consts_db.: 6.53424s (num_starts 1; 6.5342s/start)
main.: 6.96329s (num_starts 1; 6.9633s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:13 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:20 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:20 : Reading in SPEC-LLVM I/O specification from file fcall3.iospecs...</MSG>
<MSG>0:20 : Computing equivalence for function: bar...</MSG>
<MSG>0:20 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG bar (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG bar: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG bar: Found 2 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG bar created 2 possibilities in group bar.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> L3%1%fcallStart ending at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:21 : Adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Updating dst fcall edge using src fcall edge for toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Computing loop hoisting select expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Adding node L3%1%fcallStart_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:21 : bar.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Adding edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : bar.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : bar.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : bar.A2: Propagated 1 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart</MSG>
<MSG>0:21 : bar.A2: Added the 1 propagated CEs at PC L3%1%fcallStart_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:21 : bar.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : bar.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : bar.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG bar.A2 for fromPC L0%0%d_L0%0%d and toPC L3%1%fcallStart_Lentry%1%fcallStart, src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> L3%1%fcallStart and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%m2
      1.: 0                     ==  input.dst.llvm-%m1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:21 : Added correlation to the product-TFG bar.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG bar.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%1%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%m2
      1.: 0                     ==  input.dst.llvm-%m1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:21 : bar.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart...</MSG>
<MSG>0:21 : bar.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : bar.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:21 : bar.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : bar.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart) ...</MSG>
<MSG>0:21 : bar.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:21 : bar.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:21 : bar.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:22 : bar.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
<MSG>0:22 : bar.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart)...</MSG>
<MSG>0:23 : bar.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart). changed = 1 proof-stats=dht5-prove_trivial0-prove5...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:23 : bar.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:23 : bar.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
bar.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:23 : bar.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : bar.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG bar.A2: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%1%fcallStart as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : product-TFG bar.A2: Found 2 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L3%1%fcallStart_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : product-TFG bar.A2 created 2 possibilities in group bar.A2.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%1%fcallStart --> L3%1%fcallEnd ending at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:23 : Adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Computing loop hoisting select expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Adding node L3%1%fcallEnd_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:23 : bar.A2.B2: Getting alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Found no alloca-ptrs on edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Adding edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : bar.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : bar.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : bar.A2.B2: Propagated 8 out of 8 counter-examples across edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd</MSG>
<MSG>0:23 : bar.A2.B2: Added the 8 propagated CEs at PC L3%1%fcallEnd_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : bar.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : bar.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : bar.A2.B2: Computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Done computing CG regions after the addition of the edge L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG bar.A2.B2 for fromPC L3%1%fcallStart_Lentry%1%fcallStart and toPC L3%1%fcallEnd_Lentry%1%fcallEnd, src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%1%fcallStart --> L3%1%fcallEnd and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:23 : Added correlation to the product-TFG bar.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG bar.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallStart=>L3%1%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      3.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:23 : bar.A2.B2: Updating invariants over the newly added edges in edge composition L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : bar.A2.B2: Checking well-formedness assertions on outgoing edges from L3%1%fcallStart_Lentry%1%fcallStart ...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 6 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:23 : bar.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : bar.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd)...</MSG>
<MSG>0:24 : bar.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial3-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:24 : bar.A2.B2: Done relaxing invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:24 : bar.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
bar.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4


<MSG>0:24 : bar.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : bar.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : product-TFG bar.A2.B2: Enumerating correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L3%1%fcallEnd=>L3%1%fcallEnd[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L3%1%fcallEnd as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Considering 1 paths to src pc L3%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc L3%3%fcallStart as correlation candidates for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : product-TFG bar.A2.B2: Found 2 correlations for Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}] starting at L3%1%fcallEnd_Lentry%1%fcallEnd
</MSG>
<MSG>0:24 : product-TFG bar.A2.B2 created 2 possibilities in group bar.A2.B2.C...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L3%1%fcallEnd --> L3%3%fcallStart ending at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
<MSG>0:24 : Adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC L3%3%fcallStart_Lentry%2%fcallStart, src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Updating dst fcall edge using src fcall edge for toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Computing loop hoisting select expressions at toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Computing loop hoisting non-linear expressions at toPC L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Adding node L3%3%fcallStart_Lentry%2%fcallStart to the product-TFG...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Getting alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Found no alloca-ptrs on edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Adding edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : bar.A2.B2.C2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Propagated 0 out of 8 counter-examples across edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart</MSG>
<MSG>0:24 : bar.A2.B2.C2: Added the 0 propagated CEs at PC L3%3%fcallStart_Lentry%2%fcallStart and propagated further.
</MSG>
<MSG>0:24 : bar.A2.B2.C2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Done computing CG regions after the addition of the edge L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG bar.A2.B2.C2 for fromPC L3%1%fcallEnd_Lentry%1%fcallEnd and toPC L3%3%fcallStart_Lentry%2%fcallStart, src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L3%1%fcallEnd --> L3%3%fcallStart and dst path Lentry%1%fcallEnd --> Lentry%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:24 : Added correlation to the product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG bar.A2.B2.C2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 0 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>Lentry%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L3%1%fcallEnd=>L3%3%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    1 preds:
      0.: false                 ==  true
     is_assumed_eqclass : 0
    0 visited ces


<MSG>0:24 : bar.A2.B2.C2: Updating invariants over the newly added edges in edge composition L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Done relaxing dst graph's memlabels for edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: unchanged</MSG>
<MSG>0:24 : bar.A2.B2.C2: Checking well-formedness assertions on outgoing edges from L3%1%fcallEnd_Lentry%1%fcallEnd ...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Relaxing invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart) ...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:24 : bar.A2.B2.C2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht9-prove_trivial1-prove8...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart)...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart). changed = 1 proof-stats=dht5-prove_trivial3-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183


<MSG>0:26 : bar.A2.B2.C2: Done relaxing invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: changed ...</MSG>
<MSG>0:26 : bar.A2.B2.C2: Done relaxing memlabels and invariants across the edge composition (L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
bar.A2.B2.C2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183


<MSG>0:26 : bar.A2.B2.C2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:26 : bar.A2.B2.C2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG bar.A2.B2.C2: Enumerating correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L3%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L3%3%fcallStart=>L3%3%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L3%3%fcallStart as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L3%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L3%3%fcallEnd as correlation candidates for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : product-TFG bar.A2.B2.C2: Found 2 correlations for Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}] starting at L3%3%fcallStart_Lentry%2%fcallStart
</MSG>
<MSG>0:26 : product-TFG bar.A2.B2.C2 created 2 possibilities in group bar.A2.B2.C2.D...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L3%3%fcallStart --> L3%3%fcallEnd ending at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
<MSG>0:26 : Adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L3%3%fcallStart_Lentry%2%fcallStart and toPC L3%3%fcallEnd_Lentry%2%fcallEnd, src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Computing loop hoisting select expressions at toPC L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Computing loop hoisting non-linear expressions at toPC L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Adding node L3%3%fcallEnd_Lentry%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Getting alloca-ptrs on edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Found no alloca-ptrs on edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Adding edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Propagated 10 out of 10 counter-examples across edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Added the 10 propagated CEs at PC L3%3%fcallEnd_Lentry%2%fcallEnd and propagated further.
</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Computing CG regions after the addition of the edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Done computing CG regions after the addition of the edge L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2 for fromPC L3%3%fcallStart_Lentry%2%fcallStart and toPC L3%3%fcallEnd_Lentry%2%fcallEnd, src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L3%3%fcallStart --> L3%3%fcallEnd and dst path Lentry%2%fcallStart --> Lentry%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183


<MSG>0:26 : Added correlation to the product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallStart=>Lentry%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallStart=>L3%3%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    5 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      4.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183


<MSG>0:26 : bar.A2.B2.C2.D2: Updating invariants over the newly added edges in edge composition L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Relaxing dst graph's memlabels for edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Done relaxing dst graph's memlabels for edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: unchanged</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Checking well-formedness assertions on outgoing edges from L3%3%fcallStart_Lentry%2%fcallStart ...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Relaxing invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd) ...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 5 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>0:26 : bar.A2.B2.C2.D2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 4 exprs and 1 CEs across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd)...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd). changed = 1 proof-stats=dht5-prove_trivial4-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183


<MSG>0:27 : bar.A2.B2.C2.D2: Done relaxing invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: changed ...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2: Done relaxing memlabels and invariants across the edge composition (L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
bar.A2.B2.C2.D2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183


<MSG>0:27 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : product-TFG bar.A2.B2.C2.D2: Enumerating correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : Attempting correlation of src pathset L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : product-TFG bar.A2.B2.C2.D2: Found 1 correlations for Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%3%fcallEnd_Lentry%2%fcallEnd
</MSG>
<MSG>0:27 : product-TFG bar.A2.B2.C2.D2 created 1 possibilities in group bar.A2.B2.C2.D2.E...</MSG>
<MSG>0:27 : Chose (for CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
  Nodes[5]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:27 : Finished adding lsprel-assumes for allocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:27 : Finished adding lsprel-assumes for deallocation to the product-TFG bar.A2.B2.C2.D2.E1...</MSG>
<MSG>0:27 : Creating ssa-path for the src-tfg path L3%3%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:27 : Adding a CG edge composition using the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:27 : Identifying common alloc-deallocs in the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:27 : Identified no common alloc-deallocs in the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:27 : Adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L3%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Getting alloca-ptrs on edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Found no alloca-ptrs on edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Adding edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Propagated 0 out of 7 counter-examples across edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Finished executing CG's add edge function...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Computing CG regions after the addition of the edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Done computing CG regions after the addition of the edge L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : Done adding new edge to the product-TFG bar.A2.B2.C2.D2.E1 for fromPC L3%3%fcallEnd_Lentry%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:27 : Done adding a CG edge composition using the src path L3%3%fcallEnd --> E0%0%d and dst path Lentry%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:27 : Added correlation to the product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:27 : Chose (after CE propagation) product-TFG bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0) from a frontier of size 5...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L3%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%3%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:27 : bar.A2.B2.C2.D2.E1: Updating invariants over the newly added edges in edge composition L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:27 : Constructed infer_invariants_dfa with initial worklist L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Relaxing dst graph's memlabels for edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Done relaxing dst graph's memlabels for edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Checking well-formedness assertions on outgoing edges from L3%3%fcallEnd_Lentry%2%fcallEnd ...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1: Done relaxing memlabels and invariants across the edge composition (L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
bar.A2.B2.C2.D2.E1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:27 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : bar.A2.B2.C2.D2.E1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:27 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:27 : Checking equivalence proof...</MSG>
<MSG>0:28 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%1%fcallStart_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%m1 ; 3-->input.dst.llvm-%m2 ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
      1.: 0                     ==  bvextract(input.dst.llvm-%m1, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 4-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 5-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 6-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 7-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    2 preds:
      0.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%1%fcallEnd_Lentry%1%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:z3v487.ce4      1.:z3.ce11      2.:z3v487.ce12      3.:z3.ce23      4.:z3v487.ce24      5.:z3.ce35
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce4

L3%3%fcallStart_Lentry%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [4]: 3-->input.dst.llvm-%m2 ; 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 
    3 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      2.: 0                     ==  bvextract(input.dst.llvm-%m2, 1, 0)
     is_assumed_eqclass : 0
    8 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce247      5.:z3v487.ce248      6.:z3.ce263      7.:z3.ce279
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 10-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 11-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 12-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 13-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 
    3 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      1.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

L3%3%fcallEnd_Lentry%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, bvadd(4, 4294967295)))), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), eq(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), and(andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end)))), andnot1(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)), not(and(bvuge(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), bvule(input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_end, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_end)))))), and(eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, 3), 0), eq(bvand(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, 3), 0))), and(eq(input.dst.local./*___y___bar__x__=L0%0%argnum1=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum1=/_begin), eq(input.dst.local./*___y___bar__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___bar__x__=L0%0%argnum0=/_begin))), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___foo__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 8-->input.spec-%tmpvar-24.L3%1%fcallEnd ; 9-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 14-->input.spec-%var-fi-0.L3%3%fcallStart ; 15-->input.spec-%tmpvar-25.L3%3%fcallEnd ; 16-->input.dst.llvm-%call1.Lentry%2%fcallEnd ; 
    2 preds:
      0.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.spec-%var-fi-0.L3%3%fcallStart
      1.: bvneg(bvmul(4294967295, input.spec-%tmpvar-24.L3%1%fcallEnd))  ==  input.dst.llvm-%call.Lentry%1%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:z3v487.ce215      1.:z3v487.ce183      2.:z3v487.ce199      3.:z3.ce231      4.:z3.ce263
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [4]: 17-->eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 18-->eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 19-->eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false)))) ; 20-->eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false)))) ; 
    4 preds:
      0.: eq(input.spec-fcall_arg_copy.0.spec-%var-m2-1.L3%3%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
      1.: eq(input.spec-fcall_arg_copy.0.spec-%var-m1-1.L3%1%fcallEnd, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      2.: eq(input.spec-%var-m1-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m1), 4, false))))  ==  true
      3.: eq(input.spec-%var-m2-1, map(lambda(Lambda0, and(bvule(0, Lambda0), bvult(Lambda0, 100))), lambda(Lambda1, select(input.dst.llvm-mem.Lentry%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(bvmul(Lambda1, 4), input.dst.llvm-%m2), 4, false))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce183

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[5]: L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart (C L0%0%d => C L3%1%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallStart => C L3%1%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart (C L3%1%fcallEnd => C L3%3%fcallStart at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallStart => C L3%3%fcallEnd at mu 1 delta {1,0}, A (line 6 at column 10) => A (line 6 at column 10) at mu 1 delta {1,0})
            L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d (C L3%3%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 6 at column 10) => A E0%0%d at mu 1 delta {1,0})
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L3%1%fcallStart_Lentry%1%fcallStart (C L3%1%fcallStart, A (line 6 at column 10))
                L3%1%fcallStart_Lentry%1%fcallStart [inductive-invariants] contains 8 counterexamples (for correlating 2 bv exprs)
            L3%1%fcallEnd_Lentry%1%fcallEnd (C L3%1%fcallEnd, A (line 6 at column 10))
                L3%1%fcallEnd_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            L3%3%fcallStart_Lentry%2%fcallStart (C L3%3%fcallStart, A (line 6 at column 10))
                L3%3%fcallStart_Lentry%2%fcallStart [inductive-invariants] contains 10 counterexamples (for correlating 4 bv exprs)
            L3%3%fcallEnd_Lentry%2%fcallEnd (C L3%3%fcallEnd, A (line 6 at column 10))
                L3%3%fcallEnd_Lentry%2%fcallEnd [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function bar. 7.51s, query:smt.: 2.43513s (num_starts 44; 0.0553s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 6.51303s (num_starts 86; 0.0757s/start)ftmap_run_pointsto_analysis.: 0.201584s (num_starts 2; 0.1008s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 5e-06s (num_starts 5; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 5e-06s (num_starts 4; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 5; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 8e-06s (num_starts 12; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 8e-06s (num_starts 5; 0.0000s/start)
compute_tfg_pred_eqclass.: 9e-06s (num_starts 4; 0.0000s/start)
prune_dst_memslots.: 1.6e-05s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.8e-05s (num_starts 5; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 2.1e-05s (num_starts 23; 0.0000s/start)
get_paths_with_matching_to_pc.: 2.2e-05s (num_starts 9; 0.0000s/start)
determinize_value_expr_map.: 3e-05s (num_starts 15; 0.0000s/start)
get_intersected_lr_status.: 3e-05s (num_starts 2; 0.0000s/start)
prove_trivial.: 3.4e-05s (num_starts 43; 0.0000s/start)
lr_status_meet.: 3.6e-05s (num_starts 70; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4e-05s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 4.7e-05s (num_starts 4; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 5e-05s (num_starts 1; 0.0001s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 5.8e-05s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::meet.: 5.9e-05s (num_starts 134; 0.0000s/start)
ce_perform_memory_fuzzing.: 6.3e-05s (num_starts 46; 0.0000s/start)
expr_is_hidden_reg.: 6.5e-05s (num_starts 89; 0.0000s/start)
get_lr_status_for_loc_ids.: 6.9e-05s (num_starts 18; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 9e-05s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.2e-05s (num_starts 11; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 9.5e-05s (num_starts 5; 0.0000s/start)
expr_is_callee_save_const.: 0.000102s (num_starts 101; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000106s (num_starts 3; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000117s (num_starts 86; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000121s (num_starts 10; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000133s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000136s (num_starts 9; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000142s (num_starts 10; 0.0000s/start)
collect_dst_to_src_submap_preds.: 0.000143s (num_starts 86; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000151s (num_starts 2; 0.0001s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000157s (num_starts 4; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000177s (num_starts 55; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000178s (num_starts 15; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000191s (num_starts 10; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000199s (num_starts 43; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000202s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000206s (num_starts 86; 0.0000s/start)
compute_sprel_relations.: 0.000214s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.00022s (num_starts 43; 0.0000s/start)
propagate_sprels.: 0.000224s (num_starts 2; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart.: 0.000244s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%3%fcallEnd_Lentry%2%fcallEnd.inductive-invariants.: 0.000256s (num_starts 2; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.000256s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000267s (num_starts 1; 0.0003s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.00028s (num_starts 18; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.0003s (num_starts 4; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00032s (num_starts 20; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000331s (num_starts 4; 0.0001s/start)
expr_represents_llvm_undef.: 0.000336s (num_starts 105; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000358s (num_starts 16; 0.0000s/start)
create_closure_matrix.: 0.000363s (num_starts 28; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000371s (num_starts 10; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000382s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000387s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000405s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000405s (num_starts 1; 0.0004s/start)
tfg_edge_composition_get_assumes.: 0.000405s (num_starts 16; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000408s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00041s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000415s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000422s (num_starts 1; 0.0004s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00044s (num_starts 43; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000454s (num_starts 2; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000465s (num_starts 25; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00048s (num_starts 104; 0.0000s/start)
populate_locid2expr_map.: 0.000524s (num_starts 2; 0.0003s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000531s (num_starts 4; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000601s (num_starts 20; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000618s (num_starts 10; 0.0001s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000642s (num_starts 11; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000653s (num_starts 1; 0.0007s/start)
tfg::populate_loc_definedness.before_solve.: 0.000655s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000715s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.000717s (num_starts 1; 0.0007s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000738s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00075s (num_starts 1; 0.0008s/start)
graph_locs_add_all_specvars.: 0.000752s (num_starts 2; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000753s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000755s (num_starts 1; 0.0008s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000761s (num_starts 8; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000763s (num_starts 1; 0.0008s/start)
populate_branch_affecting_locs.: 0.000776s (num_starts 3; 0.0003s/start)
compute_vars_reaching_definitions.: 0.000789s (num_starts 2; 0.0004s/start)
proof_query_is_trivial.: 0.000805s (num_starts 86; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000812s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.000814s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00084s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.000842s (num_starts 1; 0.0008s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000868s (num_starts 131; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000888s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000891s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear;-trivial.: 0.000891s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.000892s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000894s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.000894s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;linear.: 0.000897s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000902s (num_starts 1; 0.0009s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000949s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.000956s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.000958s (num_starts 1; 0.0010s/start)
generate_aliasing_constraints_from_expr.: 0.00096s (num_starts 214; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.000978s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.000981s (num_starts 1; 0.0010s/start)
set_result_and_counter_example.: 0.000981s (num_starts 44; 0.0000s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.001006s (num_starts 1; 0.0010s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001009s (num_starts 3; 0.0003s/start)
collect_assumes_around_edge.: 0.001035s (num_starts 5; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.001039s (num_starts 28; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001042s (num_starts 8; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-trivial.: 0.001076s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.001078s (num_starts 1; 0.0011s/start)
get_unrolled_loop_paths_from.: 0.001078s (num_starts 4; 0.0003s/start)
removeMostPromising.: 0.00108s (num_starts 16; 0.0001s/start)
tfg::populate_loc_definedness.: 0.001085s (num_starts 3; 0.0004s/start)
tfg_suffixpath_get_expr_helper.: 0.001088s (num_starts 24; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001096s (num_starts 8; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.001147s (num_starts 2; 0.0006s/start)
graph_visit_exprs.: 0.001218s (num_starts 3; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001267s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001271s (num_starts 1; 0.0013s/start)
populate_transitive_closure.: 0.001273s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001295s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001295s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001299s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;abstract-memlabel-asserts-houdini-guess.: 0.001305s (num_starts 1; 0.0013s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001321s (num_starts 5; 0.0003s/start)
bv_expr_pair_ranges_merge_adjacent.: 0.001363s (num_starts 48; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001388s (num_starts 43; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.001407s (num_starts 131; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.001433s (num_starts 86; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001496s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001497s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001499s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001502s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001507s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001509s (num_starts 1; 0.0015s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.00151s (num_starts 15; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001511s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;abstract-memlabel-asserts-houdini-guess.: 0.001515s (num_starts 1; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.001519s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);pred-type-unknown.: 0.00155s (num_starts 2; 0.0008s/start)
graph_visit_exprs_and_keys.: 0.001575s (num_starts 2; 0.0008s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001602s (num_starts 4; 0.0004s/start)
parse_yices_model.: 0.001629s (num_starts 1; 0.0016s/start)
identify_address_taken_local_variables.: 0.001644s (num_starts 3; 0.0005s/start)
check_node_stability_after_CE_addition.: 0.001679s (num_starts 65; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.001799s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001803s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001805s (num_starts 1; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.00181s (num_starts 2; 0.0009s/start)
find_dominators.: 0.001823s (num_starts 29; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear;-trivial.: 0.001838s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);pred-type-unknown.: 0.001842s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);linear.: 0.001869s (num_starts 2; 0.0009s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.001879s (num_starts 1; 0.0019s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.002014s (num_starts 60; 0.0000s/start)
graph_identify_back_edges.: 0.002023s (num_starts 25; 0.0001s/start)
corr_graph_enumerate_correlations.: 0.002038s (num_starts 9; 0.0002s/start)
graph_identify_natural_loops.: 0.002093s (num_starts 25; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear;-trivial.: 0.002212s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.002214s (num_starts 2; 0.0011s/start)
tfg::get_aliasing_constraints_for_edge.: 0.002215s (num_starts 57; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.00222s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002222s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.002223s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;linear.: 0.002226s (num_starts 2; 0.0011s/start)
ldr_decomposition.: 0.002227s (num_starts 55; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00223s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.002232s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002236s (num_starts 1; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.002237s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002257s (num_starts 1; 0.0023s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-trivial.: 0.002268s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-trivial.: 0.002418s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00242s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.002429s (num_starts 1; 0.0024s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.00243s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002435s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.002454s (num_starts 1; 0.0025s/start)
expr_linear_relation_holds::visit.var.: 0.002499s (num_starts 117; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002529s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002557s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002597s (num_starts 2; 0.0013s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.002622s (num_starts 24; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002631s (num_starts 3; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.002656s (num_starts 1; 0.0027s/start)
get_mask_ranges_for_memlabel.: 0.002659s (num_starts 24; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-trivial.: 0.002697s (num_starts 3; 0.0009s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.002703s (num_starts 24; 0.0001s/start)
check_wfconds_on_edge.L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.002708s (num_starts 2; 0.0014s/start)
get_sprel_map_pair_at_pc.: 0.002766s (num_starts 43; 0.0001s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.002883s (num_starts 110; 0.0000s/start)
check_wfconds_on_edge.L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd.: 0.003107s (num_starts 2; 0.0016s/start)
bv_const_ref_map2expr_map.: 0.003131s (num_starts 90; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.003179s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-trivial.: 0.003216s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.00322s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003237s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00324s (num_starts 1; 0.0032s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003301s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.003334s (num_starts 2; 0.0017s/start)
construct_linear_combination_exprs.: 0.00335s (num_starts 90; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.003359s (num_starts 144; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.003404s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.003412s (num_starts 3; 0.0011s/start)
collect_aliasing_constraints_around_path_helper.: 0.00371s (num_starts 134; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.00371s (num_starts 28; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-trivial.: 0.00371s (num_starts 2; 0.0019s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.00382s (num_starts 5; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-trivial.: 0.00389s (num_starts 4; 0.0010s/start)
get_next_potential_correlations.: 0.004226s (num_starts 5; 0.0008s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.004255s (num_starts 29; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004318s (num_starts 20; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.004349s (num_starts 86; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear;-trivial.: 0.004425s (num_starts 4; 0.0011s/start)
do_ssa_transformation.: 0.004458s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);linear.: 0.004487s (num_starts 4; 0.0011s/start)
compute_regions.: 0.004502s (num_starts 25; 0.0002s/start)
cg_src_dst_tfg_copy.: 0.00452s (num_starts 2; 0.0023s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.004616s (num_starts 8; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004744s (num_starts 2; 0.0024s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.004765s (num_starts 236; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00478s (num_starts 2; 0.0024s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.004789s (num_starts 2; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.004897s (num_starts 4; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.004907s (num_starts 4; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.005213s (num_starts 4; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.005224s (num_starts 4; 0.0013s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.005364s (num_starts 144; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.0054s (num_starts 236; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-trivial.: 0.005826s (num_starts 4; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown;-trivial.: 0.005867s (num_starts 5; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;pred-type-unknown.: 0.005903s (num_starts 5; 0.0012s/start)
expr_substitute_using_available_exprs_submap.: 0.006275s (num_starts 70; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006314s (num_starts 3; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-trivial.: 0.006558s (num_starts 6; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.006693s (num_starts 5; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.006702s (num_starts 5; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;outgoing_edges_cover_all_possibilities..: 0.006759s (num_starts 5; 0.0014s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.00678s (num_starts 5; 0.0014s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.00684s (num_starts 343; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.007372s (num_starts 55; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.007599s (num_starts 3; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.007624s (num_starts 3; 0.0025s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007705s (num_starts 20; 0.0004s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.007709s (num_starts 55; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.007861s (num_starts 43; 0.0002s/start)
get_unrolled_paths_from.: 0.008133s (num_starts 36; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.008216s (num_starts 351; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.008496s (num_starts 55; 0.0002s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.008848s (num_starts 43; 0.0002s/start)
counter_example_satisfies_preds.: 0.008907s (num_starts 182; 0.0000s/start)
bv_linear_solve.: 0.009487s (num_starts 55; 0.0002s/start)
query:bv_solve.: 0.009769s (num_starts 55; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.009987s (num_starts 8; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown;-trivial.: 0.01007s (num_starts 8; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);pred-type-unknown.: 0.010186s (num_starts 8; 0.0013s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.010379s (num_starts 599; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010608s (num_starts 6; 0.0018s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.010693s (num_starts 335; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-trivial.: 0.010796s (num_starts 6; 0.0018s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.010989s (num_starts 20; 0.0005s/start)
populate_simplified_to_state.: 0.011085s (num_starts 3; 0.0037s/start)
avail_exprs_create_submap.: 0.011442s (num_starts 60; 0.0002s/start)
pth_collect_simplified_preds_using_atom_func.: 0.011558s (num_starts 319; 0.0000s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-trivial.: 0.011681s (num_starts 10; 0.0012s/start)
graph_to_stream.: 0.011732s (num_starts 4; 0.0029s/start)
populate_simplified_assets.: 0.011752s (num_starts 6; 0.0020s/start)
bv_solve_returning_intermediate_structures.: 0.012605s (num_starts 55; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.012779s (num_starts 120; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.013468s (num_starts 120; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.014396s (num_starts 3; 0.0048s/start)
bvsolve_cache_query.miss1.: 0.014666s (num_starts 55; 0.0003s/start)
bvsolve_cache_query.: 0.015301s (num_starts 55; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%3%fcallStart_Lentry%2%fcallStart.inductive-invariants.: 0.015529s (num_starts 4; 0.0039s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);-trivial.: 0.01704s (num_starts 10; 0.0017s/start)
predicate_canonicalized.: 0.017575s (num_starts 90; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-trivial.: 0.017856s (num_starts 12; 0.0015s/start)
lhs_set_sort.: 0.01833s (num_starts 43; 0.0004s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);-trivial.: 0.019214s (num_starts 14; 0.0014s/start)
solve_for_bv_points.: 0.019523s (num_starts 55; 0.0004s/start)
collect_assumes_around_path_helper.: 0.02053s (num_starts 131; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.02093s (num_starts 131; 0.0002s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.021449s (num_starts 5; 0.0043s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.021963s (num_starts 343; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.022803s (num_starts 20; 0.0011s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.023347s (num_starts 5; 0.0047s/start)
graph_ec_apply_trans_funs_helper.0.: 0.023379s (num_starts 255; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.023461s (num_starts 55; 0.0004s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.024604s (num_starts 487; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.025091s (num_starts 263; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.025821s (num_starts 263; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.026695s (num_starts 263; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.026842s (num_starts 343; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.027336s (num_starts 165; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.027467s (num_starts 263; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.03063s (num_starts 90; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.030788s (num_starts 24; 0.0013s/start)
edge_composition_apply_trans_funs_on_pred.: 0.032554s (num_starts 86; 0.0004s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallStart_Lentry%1%fcallStart.inductive-invariants.: 0.033934s (num_starts 6; 0.0057s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.03518s (num_starts 120; 0.0003s/start)
counter_example_falsifies_preds.: 0.035263s (num_starts 42; 0.0008s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.035836s (num_starts 14; 0.0026s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.038144s (num_starts 15; 0.0025s/start)
compute_expr_eqclasses_at_pc.: 0.038507s (num_starts 4; 0.0096s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.039274s (num_starts 6; 0.0065s/start)
cg_add_node.: 0.039532s (num_starts 6; 0.0066s/start)
tfg_relax_pointsto_vals_on_edge.: 0.042034s (num_starts 10; 0.0042s/start)
counter_example_evaluate_preds.: 0.043624s (num_starts 224; 0.0002s/start)
populate_loc_liveness.: 0.043963s (num_starts 3; 0.0147s/start)
put_smtlib_string_in_file.: 0.047517s (num_starts 88; 0.0005s/start)
create_new_corr_graph_edge.new_node.: 0.0482s (num_starts 5; 0.0096s/start)
collect_inductive_preds_around_path.: 0.049104s (num_starts 86; 0.0006s/start)
create_new_corr_graph_edge.: 0.049436s (num_starts 5; 0.0099s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%1%fcallEnd_Lentry%1%fcallEnd.inductive-invariants.: 0.055763s (num_starts 20; 0.0028s/start)
gen_pred_from_coeff_row.: 0.057933s (num_starts 90; 0.0006s/start)
compute_preds_for_bv_points.: 0.058875s (num_starts 34; 0.0017s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.059059s (num_starts 38; 0.0016s/start)
decide_hoare_triple_helper;-trivial.: 0.060144s (num_starts 43; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.060684s (num_starts 1; 0.0607s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06069s (num_starts 1; 0.0607s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.060698s (num_starts 1; 0.0607s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.061481s (num_starts 1; 0.0615s/start)
tfg_postprocess_after_pointsto_analysis.: 0.06177s (num_starts 2; 0.0309s/start)
get_masked_array_constant.: 0.063542s (num_starts 24; 0.0026s/start)
evaluate_memmask.: 0.06701s (num_starts 24; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;abstract-memlabel-asserts-houdini-guess.: 0.067044s (num_starts 4; 0.0168s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069921s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.069929s (num_starts 1; 0.0699s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076623s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076627s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.076635s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;-dst-edgecond-implies-src-edgecond.: 0.076643s (num_starts 1; 0.0766s/start)
compute_lr_status_for_expr.: 0.094212s (num_starts 73; 0.0013s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.094505s (num_starts 70; 0.0014s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.094631s (num_starts 70; 0.0014s/start)
compute_z3_expr.: 0.096218s (num_starts 2938; 0.0000s/start)
evaluate_function_call.: 0.100467s (num_starts 24; 0.0042s/start)
query:convert_from_z3.: 0.108193s (num_starts 2894; 0.0000s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.110361s (num_starts 56; 0.0020s/start)
query:convert_to_z3.: 0.111431s (num_starts 2894; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.118589s (num_starts 10; 0.0119s/start)
compute_new_lr_status_on_locs.: 0.132478s (num_starts 20; 0.0066s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.132691s (num_starts 10; 0.0133s/start)
counter_example_translate_on_edge_composition_helper.: 0.135085s (num_starts 273; 0.0005s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.141655s (num_starts 46; 0.0031s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.142319s (num_starts 47; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143627s (num_starts 1; 0.1436s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143634s (num_starts 1; 0.1436s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.143643s (num_starts 1; 0.1436s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;abstract-memlabel-asserts-houdini-guess.: 0.143645s (num_starts 1; 0.1436s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.144038s (num_starts 1; 0.1440s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146505s (num_starts 2; 0.0733s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.146595s (num_starts 2; 0.0733s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.147613s (num_starts 43; 0.0034s/start)
check_wfconds_on_edge.L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart.: 0.147809s (num_starts 2; 0.0739s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152707s (num_starts 2; 0.0764s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.153018s (num_starts 43; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.153136s (num_starts 2; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.153164s (num_starts 2; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 0.1554s (num_starts 3; 0.0518s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159096s (num_starts 2; 0.0795s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159136s (num_starts 2; 0.0796s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.159155s (num_starts 2; 0.0796s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.159184s (num_starts 2; 0.0796s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164563s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16457s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164574s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.164583s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;false-predicate.: 0.164586s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);false-predicate.: 0.164591s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164613s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164615s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16462s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164621s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.16463s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;dst_edge_composition_proves_false.: 0.164635s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.164643s (num_starts 1; 0.1646s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(epsilon).: 0.166972s (num_starts 4; 0.0417s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174679s (num_starts 2; 0.0873s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174687s (num_starts 2; 0.0873s/start)
corr_graph::add_edge().: 0.174704s (num_starts 5; 0.0349s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174718s (num_starts 2; 0.0874s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.174752s (num_starts 2; 0.0874s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.174797s (num_starts 2; 0.0874s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d).: 0.174816s (num_starts 2; 0.0874s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176475s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176477s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176483s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176484s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.176494s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;dst_edge_composition_proves_false.: 0.176499s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.176507s (num_starts 1; 0.1765s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.179065s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.179068s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.179076s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.179078s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.179089s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;false-predicate.: 0.179093s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd);false-predicate.: 0.179099s (num_starts 1; 0.1791s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(epsilon).: 0.179268s (num_starts 4; 0.0448s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18714s (num_starts 2; 0.0936s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2.E1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.187167s (num_starts 2; 0.0936s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.19262s (num_starts 1; 0.1926s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192623s (num_starts 1; 0.1926s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.192625s (num_starts 1; 0.1926s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.192634s (num_starts 1; 0.1926s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;dst_edge_composition_proves_false.: 0.192638s (num_starts 1; 0.1926s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.192646s (num_starts 1; 0.1926s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.195288s (num_starts 1; 0.1953s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.196836s (num_starts 143; 0.0014s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallStart_Lentry%2%fcallStart;(L3%3%fcallStart_Lentry%2%fcallStart=>L3%3%fcallEnd_Lentry%2%fcallEnd).: 0.198591s (num_starts 15; 0.0132s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.: 0.200188s (num_starts 1; 0.2002s/start)
ftmap_run_pointsto_analysis.: 0.201584s (num_starts 2; 0.1008s/start)
tfg_run_pointsto_analysis.: 0.201836s (num_starts 2; 0.1009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.204289s (num_starts 2; 0.1021s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.204297s (num_starts 2; 0.1021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.20436s (num_starts 2; 0.1022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.204748s (num_starts 1; 0.2047s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.204754s (num_starts 1; 0.2048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.204756s (num_starts 1; 0.2048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2.D2;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.204765s (num_starts 1; 0.2048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2;dst_edge_composition_proves_false.: 0.204769s (num_starts 1; 0.2048s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.204777s (num_starts 1; 0.2048s/start)
tfg_populate_structs_after_ssa_construction.: 0.206428s (num_starts 2; 0.1032s/start)
apply_mask_and_overlay_array_constant.: 0.208663s (num_starts 143; 0.0015s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.212809s (num_starts 2; 0.1064s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.215045s (num_starts 8; 0.0269s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215436s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215442s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.215444s (num_starts 1; 0.2154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.215453s (num_starts 1; 0.2155s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;false-predicate.: 0.215457s (num_starts 1; 0.2155s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);false-predicate.: 0.215464s (num_starts 1; 0.2155s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216919s (num_starts 1; 0.2169s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216929s (num_starts 1; 0.2169s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216935s (num_starts 1; 0.2169s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.220129s (num_starts 4; 0.0550s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2;pred-type-unknown.: 0.220859s (num_starts 5; 0.0442s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);pred-type-unknown.: 0.22359s (num_starts 7; 0.0319s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.225469s (num_starts 5; 0.0451s/start)
corr_graph_add_correlation.: 0.225647s (num_starts 5; 0.0451s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229038s (num_starts 3; 0.0763s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;-dst-edgecond-implies-src-edgecond.: 0.229104s (num_starts 3; 0.0764s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.231071s (num_starts 1; 0.2311s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.23108s (num_starts 1; 0.2311s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.231086s (num_starts 1; 0.2311s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.23433s (num_starts 4; 0.0586s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;pred-type-unknown.: 0.234341s (num_starts 4; 0.0586s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);pred-type-unknown.: 0.242048s (num_starts 7; 0.0346s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.249038s (num_starts 5; 0.0498s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.305626s (num_starts 4; 0.0764s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.305761s (num_starts 4; 0.0764s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.305811s (num_starts 4; 0.0765s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.310166s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.310167s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.310171s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.310173s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.310181s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar;dst_edge_composition_proves_false.: 0.310184s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.310188s (num_starts 1; 0.3102s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.310618s (num_starts 2; 0.1553s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;linear.: 0.311799s (num_starts 8; 0.0390s/start)
query:simplify-z3.: 0.318953s (num_starts 5812; 0.0001s/start)
check_wfconds_on_edge.L3%3%fcallEnd_Lentry%2%fcallEnd=>E0%0%d_E0%0%d.: 0.337948s (num_starts 2; 0.1690s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.339107s (num_starts 3; 0.1130s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(epsilon).: 0.341524s (num_starts 4; 0.0854s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.361843s (num_starts 4; 0.0905s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.362543s (num_starts 2; 0.1813s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.362554s (num_starts 2; 0.1813s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.362555s (num_starts 2; 0.1813s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.362582s (num_starts 2; 0.1813s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;false-predicate.: 0.362594s (num_starts 2; 0.1813s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);false-predicate.: 0.36261s (num_starts 2; 0.1813s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.363823s (num_starts 3; 0.1213s/start)
decide_hoare_triple_helper;per-path;L3%3%fcallEnd_Lentry%2%fcallEnd;(epsilon).: 0.366441s (num_starts 4; 0.0916s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2.D2.E1;pred-type-unknown.: 0.379941s (num_starts 16; 0.0237s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.381472s (num_starts 2; 0.1907s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallStart_Lentry%1%fcallStart;(L3%1%fcallStart_Lentry%1%fcallStart=>L3%1%fcallEnd_Lentry%1%fcallEnd).: 0.393419s (num_starts 12; 0.0328s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.: 0.419411s (num_starts 1; 0.4194s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 0.421228s (num_starts 1; 0.4212s/start)
check_wfconds_on_edge.: 0.491936s (num_starts 10; 0.0492s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.755147s (num_starts 4; 0.1888s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.755158s (num_starts 4; 0.1888s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.755195s (num_starts 4; 0.1888s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;pred-type-unknown.: 0.755217s (num_starts 4; 0.1888s/start)
ce_reconcile_sorts_and_values.: 0.831844s (num_starts 49; 0.0170s/start)
check_equivalence_proof.: 0.872825s (num_starts 1; 0.8728s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.876173s (num_starts 5; 0.1752s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.876188s (num_starts 5; 0.1752s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 0.876236s (num_starts 5; 0.1752s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2;linear.: 0.876256s (num_starts 5; 0.1753s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.900853s (num_starts 1; 0.9009s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.921625s (num_starts 5; 0.1843s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.921748s (num_starts 5; 0.1843s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.942223s (num_starts 6; 0.1570s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);pred-type-unknown.: 0.94247s (num_starts 6; 0.1571s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.985837s (num_starts 1; 0.9858s/start)
guarded_predicate_set_and.: 1.01678s (num_starts 43; 0.0236s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.02923s (num_starts 7; 0.1470s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);linear.: 1.0295s (num_starts 7; 0.1471s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.04864s (num_starts 5; 0.2097s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.04875s (num_starts 5; 0.2097s/start)
decide_hoare_triple.: 1.05879s (num_starts 10; 0.1059s/start)
dst_edge_composition_proves_false.: 1.07227s (num_starts 5; 0.2145s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.07489s (num_starts 34; 0.0316s/start)
get_next_dst_edge_composition_to_correlate.: 1.07814s (num_starts 6; 0.1797s/start)
check_preds_on_edge_compositions.: 1.08844s (num_starts 15; 0.0726s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.22009s (num_starts 8; 0.1525s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.22011s (num_starts 8; 0.1525s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;bar.A2.B2.C2;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 1.2213s (num_starts 9; 0.1357s/start)
decide_hoare_triple_helper;per-graph-per-query-type;bar.A2.B2.C2;linear.: 1.22134s (num_starts 9; 0.1357s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.: 1.26543s (num_starts 1; 1.2654s/start)
parse_z3_model.: 1.2853s (num_starts 48; 0.0268s/start)
read_counter_examples_from_channel.: 1.29513s (num_starts 24; 0.0540s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.35508s (num_starts 503; 0.0027s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.37269s (num_starts 10; 0.1373s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);linear.: 1.37684s (num_starts 12; 0.1147s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.56494s (num_starts 10; 0.1565s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 1.59638s (num_starts 34; 0.0470s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.96625s (num_starts 13; 0.1512s/start)
decide_hoare_triple_helper;per-path;L3%1%fcallEnd_Lentry%1%fcallEnd;(L3%1%fcallEnd_Lentry%1%fcallEnd=>L3%3%fcallStart_Lentry%2%fcallStart).: 1.98419s (num_starts 23; 0.0863s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.3911s (num_starts 16; 0.1494s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%1%fcallStart_Lentry%1%fcallStart).: 2.39188s (num_starts 16; 0.1495s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.40199s (num_starts 17; 0.1413s/start)
decide_hoare_triple_helper;per-query-type;linear.: 2.41261s (num_starts 25; 0.0965s/start)
query:smt.: 2.43513s (num_starts 44; 0.0553s/start)
spawn_smt_query.: 3.73094s (num_starts 44; 0.0848s/start)
solver_provable.: 4.7713s (num_starts 43; 0.1110s/start)
expr_is_provable.: 4.78926s (num_starts 43; 0.1114s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 4.79046s (num_starts 43; 0.1114s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 4.79317s (num_starts 43; 0.1115s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 4.79437s (num_starts 43; 0.1115s/start)
solver_satisfiable-cache-miss.: 4.81288s (num_starts 44; 0.1094s/start)
solver_satisfiable.: 4.81322s (num_starts 44; 0.1094s/start)
update_invariant_state_for_edges.: 4.82495s (num_starts 5; 0.9650s/start)
cg_check_new_cg_ec.: 4.85317s (num_starts 5; 0.9706s/start)
correl_entry_apply.: 4.8533s (num_starts 5; 0.9707s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 5.81322s (num_starts 43; 0.1352s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 5.81642s (num_starts 43; 0.1353s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 5.81739s (num_starts 43; 0.1353s/start)
expandProductCFG.: 5.93642s (num_starts 6; 0.9894s/start)
is_expr_equal_using_lhs_set_and_precond.: 6.15263s (num_starts 43; 0.1431s/start)
prove.: 6.15305s (num_starts 43; 0.1431s/start)
prove_spawn_and_join_helper.: 6.15333s (num_starts 43; 0.1431s/start)
bestFirstSearch.: 6.27538s (num_starts 1; 6.2754s/start)
prove_spawn_and_join.: 6.36823s (num_starts 43; 0.1481s/start)
prove_wrapper.proof_query_not_trivial.: 6.37503s (num_starts 43; 0.1483s/start)
prove_wrapper.: 6.39236s (num_starts 86; 0.0743s/start)
decide_hoare_triple_check_ub.: 6.43088s (num_starts 86; 0.0748s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.44913s (num_starts 43; 0.1500s/start)
decide_hoare_triple_helper.: 6.51303s (num_starts 86; 0.0757s/start)
decide_hoare_triple_with_alias_cons.: 6.65622s (num_starts 86; 0.0774s/start)
Time taken for equivalence check.: 7.16741s (num_starts 1; 7.1674s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 15
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>Lentry%1%fcallStart.: 1
# of paths enumerated.: 10
# of paths expanded.: 5
# of queries to linear solver.: 55
# of smt-solver-queries.: 44
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 2
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_ecs.: 2
Lentry%1%fcallEnd=>Lentry%2%fcallStart-src_to_pcs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 2
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 2
Lentry%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_ecs.: 2
Lentry%2%fcallStart=>Lentry%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 8
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallEnd_Lentry%1%fcallEnd.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%1%fcallStart_Lentry%1%fcallStart.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.iters.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%3%fcallStart_Lentry%2%fcallStart.prove_queries.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 48
total-correlation-possibilities.: 10
total-correlation-possibilities-mod-lsprels.: 10
total-correlations-explored.: 6

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%1%fcallStart_Lentry%1%fcallStart.: 5
final-CG-counterexamples-generated-at-L3%3%fcallEnd_Lentry%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%3%fcallStart_Lentry%2%fcallStart.: 8
final-CG-counterexamples-total-at-L3%1%fcallEnd_Lentry%1%fcallEnd.: 8
final-CG-counterexamples-total-at-L3%1%fcallStart_Lentry%1%fcallStart.: 8
final-CG-counterexamples-total-at-L3%3%fcallEnd_Lentry%2%fcallEnd.: 7
final-CG-counterexamples-total-at-L3%3%fcallStart_Lentry%2%fcallStart.: 10
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 5
final-CG-edges.: 5
final-CG-nodes.: 6
final-CG-num-invariants.: 24
final-CG-super-edges.: 0
src-edges.: 5
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 5.08
final-CG-time-to-total-time-ratio.: 0.81
query-time-to-total-time-ratio.: 0.33

Context stats:
exprs: count: 168442
sorts: count: 161
num_proof_queries: 43
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3822
	        hit ratio:	0.890895
m_simplify_solver:
	----------- total:	4100
	        hit ratio:	0.288293
m_z3_solver_substitution:
	----------- total:	2918
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	2918
	        hit ratio:	0
m_expr_size:
	----------- total:	8541
	        hit ratio:	0.637747
m_expr_evaluates_to_constant_visitor:
	----------- total:	54234
	        hit ratio:	0.476104
m_sort_dfa_canonicalize:
	----------- total:	136558
	        hit ratio:	0.999854
m_expr_convert_to_iexpr:
	----------- total:	490
	        hit ratio:	0.840816

z3_solver expr_query_cache entry size: 44
	----------- total:	44
	             hits:	0
	        hit ratio:	0
histogram (time taken by solver in ms):
[ 26.8540,  31.9359) (avg.  30.2057)     : 7
[ 31.9359,  37.9795) (avg.  35.2077)     : 8
[ 37.9795,  45.1669) (avg.  38.8780)     : 3
[ 45.1669,  53.7143) (avg.  51.1258)     : 5
[ 53.7143,  63.8794) (avg.  57.0769)     : 11
[ 63.8794,  75.9680) (avg.  69.8005)     : 2
[ 75.9680,  90.3444) (avg.  84.3923)     : 3
[ 90.3444, 107.4414) (avg.  99.3860)     : 4
[107.4414, 127.7738) (avg.   0.0000)     : 0
[127.7738, 151.9540) (avg. 150.9540)     : 1
histogram (number of quantifiers in query)
[ 0,  3) (avg.  0)                       : 1
[ 3,  5) (avg.  0)                       : 0
[ 5,  7) (avg.  0)                       : 0
[ 7,  9) (avg.  8)                       : 13
[ 9, 11) (avg. 10)                       : 24
[11, 14) (avg. 12)                       : 6
[14, 16) (avg.  0)                       : 0
[16, 18) (avg.  0)                       : 0
[18, 20) (avg.  0)                       : 0
[20, 22) (avg.  0)                       : 0
histogram (number of nodes in z3 ast)
[ 85,  98) (avg.  85)                    : 1
[ 98, 111) (avg.   0)                    : 0
[111, 124) (avg.   0)                    : 0
[124, 137) (avg.   0)                    : 0
[137, 150) (avg.   0)                    : 0
[150, 163) (avg. 159)                    : 2
[163, 176) (avg. 173)                    : 8
[176, 189) (avg. 180)                    : 24
[189, 202) (avg. 194)                    : 7
[202, 214) (avg. 204)                    : 2
Top 10 highest time taking queries:
1. [0.151s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.2
2. [0.106s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.100s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%1%fcallStart_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.1
4. [0.097s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.1
5. [0.095s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.3
6. [0.090s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.083s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lentry%1%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
8. [0.080s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-8-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.075s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-3-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
10. [0.064s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-17-free_var_idx.3.from_pcL3%1%fcallEnd_Lentry%1%fcallEnd.cond_apply_set_elem0_of_1.0

<MSG>0:28 : Successfully computed equivalence for function: bar.</MSG>
<MSG>0:28 : Computing equivalence for function: foo...</MSG>
<MSG>0:28 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:28 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:29 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:29 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:29 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : product-TFG foo: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:29 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:29 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:29 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:29 : product-TFG foo: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:29 : product-TFG foo created 1 possibilities in group foo.A...</MSG>
<MSG>0:29 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:29 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:29 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:29 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:29 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:29 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:29 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:29 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:29 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:29 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:29 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:29 : foo.A1: Propagated 1 out of 2 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:29 : foo.A1: Added the 1 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:29 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:29 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:29 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:29 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:29 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:29 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:29 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:29 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:29 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:29 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:32 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:32 : foo.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:32 : foo.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:32 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:32 : Checking equivalence proof...</MSG>
<MSG>0:35 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 6.52s, query:smt.: 3.40111s (num_starts 36; 0.0945s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 5.7916s (num_starts 6; 0.9653s/start)ftmap_run_pointsto_analysis.: 0.350113s (num_starts 2; 0.1751s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2e-06s (num_starts 1; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 4e-06s (num_starts 4; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 2; 0.0000s/start)
collect_dst_to_src_submap_preds.: 1.2e-05s (num_starts 6; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 1.3e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 3.1e-05s (num_starts 1; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.5e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 4.3e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 5.5e-05s (num_starts 20; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 5.8e-05s (num_starts 19; 0.0000s/start)
graph_with_guessing_sync_preds.: 5.9e-05s (num_starts 6; 0.0000s/start)
removeMostPromising.: 7.4e-05s (num_starts 4; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 7.5e-05s (num_starts 3; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 7.8e-05s (num_starts 1; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 8.1e-05s (num_starts 29; 0.0000s/start)
determinize_value_expr_map.: 8.2e-05s (num_starts 23; 0.0000s/start)
check_node_stability_after_CE_addition.: 8.7e-05s (num_starts 3; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 9.9e-05s (num_starts 36; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000102s (num_starts 2; 0.0001s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.00011s (num_starts 19; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00012s (num_starts 35; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000137s (num_starts 1; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000138s (num_starts 1; 0.0001s/start)
lr_status_meet.: 0.000139s (num_starts 243; 0.0000s/start)
expr_is_hidden_reg.: 0.000149s (num_starts 205; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.00017s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000171s (num_starts 3; 0.0001s/start)
expr_is_callee_save_const.: 0.000181s (num_starts 217; 0.0000s/start)
populate_locid2expr_map.: 0.000185s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.00021s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000211s (num_starts 40; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000211s (num_starts 1; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000222s (num_starts 2; 0.0001s/start)
collect_inductive_preds_around_path.: 0.000224s (num_starts 6; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000225s (num_starts 1; 0.0002s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000231s (num_starts 1; 0.0002s/start)
collect_assumes_around_edge.: 0.000253s (num_starts 1; 0.0003s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000255s (num_starts 19; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000313s (num_starts 35; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000323s (num_starts 2; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000323s (num_starts 40; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.000329s (num_starts 1; 0.0003s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000345s (num_starts 3; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000351s (num_starts 22; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000354s (num_starts 3; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000368s (num_starts 2; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000422s (num_starts 22; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000422s (num_starts 1012; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000428s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000438s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00045s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000451s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000451s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000452s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000454s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000456s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;outgoing_edges_cover_all_possibilities..: 0.000459s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000462s (num_starts 1; 0.0005s/start)
set_result_and_counter_example.: 0.000463s (num_starts 36; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000466s (num_starts 1; 0.0005s/start)
compute_sprel_relations.: 0.000468s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper;-trivial.: 0.000482s (num_starts 1; 0.0005s/start)
propagate_sprels.: 0.000485s (num_starts 2; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.000555s (num_starts 45; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000575s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00058s (num_starts 2; 0.0003s/start)
create_new_corr_graph_edge.new_node.: 0.000585s (num_starts 1; 0.0006s/start)
cg_add_node.: 0.000627s (num_starts 2; 0.0003s/start)
parse_yices_model.: 0.000741s (num_starts 1; 0.0007s/start)
proof_query_is_trivial.: 0.000742s (num_starts 36; 0.0000s/start)
create_new_corr_graph_edge.: 0.000779s (num_starts 1; 0.0008s/start)
graph_locs_add_all_llvmvars.: 0.000859s (num_starts 2; 0.0004s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000871s (num_starts 64; 0.0000s/start)
expr_represents_llvm_undef.: 0.000879s (num_starts 221; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00088s (num_starts 66; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000898s (num_starts 29; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.001017s (num_starts 2; 0.0005s/start)
populate_simplified_to_state.: 0.00103s (num_starts 3; 0.0003s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001072s (num_starts 35; 0.0000s/start)
create_closure_matrix.: 0.001082s (num_starts 83; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.001235s (num_starts 8; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.001236s (num_starts 1; 0.0012s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001277s (num_starts 1; 0.0013s/start)
get_sprel_map_pair.: 0.001293s (num_starts 72; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.00137s (num_starts 32; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001413s (num_starts 2; 0.0007s/start)
tfg::populate_loc_definedness.before_solve.: 0.00161s (num_starts 3; 0.0005s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001915s (num_starts 12; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002021s (num_starts 29; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002028s (num_starts 3; 0.0007s/start)
tfg::populate_loc_definedness.: 0.002129s (num_starts 3; 0.0007s/start)
identify_address_taken_local_variables.: 0.002189s (num_starts 1; 0.0022s/start)
create_sp_version_relations_lattice_at_pc.: 0.002505s (num_starts 83; 0.0000s/start)
populate_branch_affecting_locs.: 0.002523s (num_starts 3; 0.0008s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.002585s (num_starts 2; 0.0013s/start)
compute_ssa_vars_renaming_map.: 0.002639s (num_starts 2; 0.0013s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002689s (num_starts 1; 0.0027s/start)
apply_mask_and_overlay_array_constant.: 0.002719s (num_starts 2; 0.0014s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.002732s (num_starts 48; 0.0001s/start)
counter_example_satisfies_preds.: 0.002736s (num_starts 34; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.002968s (num_starts 32; 0.0001s/start)
populate_transitive_closure.: 0.003003s (num_starts 11; 0.0003s/start)
graph_visit_exprs_and_keys.: 0.003056s (num_starts 2; 0.0015s/start)
populate_simplified_assets.: 0.003087s (num_starts 6; 0.0005s/start)
graph_identify_back_edges.: 0.003195s (num_starts 16; 0.0002s/start)
graph_identify_natural_loops.: 0.003229s (num_starts 16; 0.0002s/start)
get_next_potential_correlations.: 0.003635s (num_starts 1; 0.0036s/start)
collect_assumes_around_path_helper.: 0.003669s (num_starts 19; 0.0002s/start)
expr_linear_relation_holds::visit.var.: 0.003715s (num_starts 221; 0.0000s/start)
graph_visit_exprs.: 0.003721s (num_starts 3; 0.0012s/start)
graph_with_paths::collect_assumes_around_path.: 0.003734s (num_starts 19; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.003746s (num_starts 35; 0.0001s/start)
get_unrolled_paths_from.: 0.00381s (num_starts 6; 0.0006s/start)
find_dominators.: 0.003834s (num_starts 20; 0.0002s/start)
pth_collect_preds_using_atom_func.: 0.003933s (num_starts 64; 0.0001s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.003991s (num_starts 1236; 0.0000s/start)
compute_vars_reaching_definitions.: 0.004021s (num_starts 2; 0.0020s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.004098s (num_starts 96; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004327s (num_starts 236; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.004932s (num_starts 64; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.004969s (num_starts 64; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005s (num_starts 72; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.005162s (num_starts 35; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.006188s (num_starts 3; 0.0021s/start)
compute_regions.: 0.006936s (num_starts 16; 0.0004s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.007559s (num_starts 66; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.00929s (num_starts 3; 0.0031s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.009691s (num_starts 2; 0.0048s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.009703s (num_starts 2; 0.0049s/start)
generate_aliasing_constraints_from_expr.: 0.01021s (num_starts 569; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.010897s (num_starts 35; 0.0003s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.010971s (num_starts 4; 0.0027s/start)
do_ssa_transformation.: 0.012987s (num_starts 2; 0.0065s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.014881s (num_starts 40; 0.0004s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.015285s (num_starts 35; 0.0004s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.016436s (num_starts 1; 0.0164s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.016834s (num_starts 243; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017147s (num_starts 66; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.017181s (num_starts 243; 0.0001s/start)
compute_lr_status_for_expr.: 0.017533s (num_starts 310; 0.0001s/start)
lhs_set_sort.: 0.019357s (num_starts 35; 0.0006s/start)
counter_example_translate_on_edge_composition_helper.: 0.020853s (num_starts 16; 0.0013s/start)
ce_reconcile_sorts_and_values.: 0.020932s (num_starts 5; 0.0042s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.02172s (num_starts 10; 0.0022s/start)
tfg::get_aliasing_constraints_for_edge.: 0.023097s (num_starts 133; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.027029s (num_starts 6; 0.0045s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.027049s (num_starts 6; 0.0045s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.027875s (num_starts 7; 0.0040s/start)
expr_substitute_using_available_exprs_submap.: 0.02845s (num_starts 251; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.02954s (num_starts 32; 0.0009s/start)
collect_aliasing_constraints_around_path.: 0.029628s (num_starts 20; 0.0015s/start)
compute_new_lr_status_on_locs.: 0.030696s (num_starts 66; 0.0005s/start)
tfg_relax_pointsto_vals_on_edge.: 0.033469s (num_starts 2; 0.0167s/start)
parse_z3_model.: 0.034609s (num_starts 4; 0.0087s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.035213s (num_starts 66; 0.0005s/start)
read_counter_examples_from_channel.: 0.035956s (num_starts 2; 0.0180s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.036337s (num_starts 50; 0.0007s/start)
computeWP_for_pred_across_ec.: 0.036464s (num_starts 50; 0.0007s/start)
graph_ec_apply_trans_funs_helper.0.: 0.03777s (num_starts 62; 0.0006s/start)
graph_ec_apply_trans_funs_helper.: 0.037934s (num_starts 62; 0.0006s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.038048s (num_starts 62; 0.0006s/start)
graph_to_stream.: 0.039886s (num_starts 4; 0.0100s/start)
edge_composition_apply_trans_funs_on_pred.: 0.043078s (num_starts 6; 0.0072s/start)
counter_example_falsifies_preds.: 0.043193s (num_starts 3; 0.0144s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.043539s (num_starts 10; 0.0044s/start)
counter_example_evaluate_preds.: 0.045853s (num_starts 37; 0.0012s/start)
tfg_suffixpath_get_expr_helper.: 0.046531s (num_starts 20; 0.0023s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.047125s (num_starts 66; 0.0007s/start)
avail_exprs_create_submap.: 0.051052s (num_starts 198; 0.0003s/start)
query:convert_to_z3.: 0.053483s (num_starts 1366; 0.0000s/start)
query:convert_from_z3.: 0.06021s (num_starts 1366; 0.0000s/start)
put_smtlib_string_in_file.: 0.067646s (num_starts 72; 0.0009s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.072623s (num_starts 23; 0.0032s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.07613s (num_starts 35; 0.0022s/start)
populate_loc_liveness.: 0.078s (num_starts 3; 0.0260s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.079739s (num_starts 1463; 0.0001s/start)
corr_graph::add_edge().: 0.082677s (num_starts 1; 0.0827s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.084043s (num_starts 1; 0.0840s/start)
corr_graph_add_correlation.: 0.084081s (num_starts 1; 0.0841s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.084126s (num_starts 1; 0.0841s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.086095s (num_starts 1; 0.0861s/start)
tfg_postprocess_after_pointsto_analysis.: 0.09503s (num_starts 2; 0.0475s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.097205s (num_starts 66; 0.0015s/start)
compute_z3_expr.: 0.09722s (num_starts 1402; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129467s (num_starts 2; 0.0647s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.129471s (num_starts 64; 0.0020s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129478s (num_starts 2; 0.0647s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129493s (num_starts 2; 0.0647s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129509s (num_starts 2; 0.0648s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.129525s (num_starts 2; 0.0648s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond.: 0.12953s (num_starts 2; 0.0648s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.129537s (num_starts 2; 0.0648s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.129545s (num_starts 2; 0.0648s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.131702s (num_starts 534; 0.0002s/start)
query:simplify-z3.: 0.167475s (num_starts 2761; 0.0001s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.169952s (num_starts 1492; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.172101s (num_starts 1463; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174164s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174166s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174168s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.174171s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.174181s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.174182s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.174184s (num_starts 1; 0.1742s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.174187s (num_starts 1; 0.1742s/start)
decide_hoare_triple.: 0.181151s (num_starts 2; 0.0906s/start)
dst_edge_composition_proves_false.: 0.195011s (num_starts 1; 0.1950s/start)
get_next_dst_edge_composition_to_correlate.: 0.195581s (num_starts 2; 0.0978s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.199709s (num_starts 1463; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.23897s (num_starts 64; 0.0037s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.26224s (num_starts 35; 0.0075s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.303618s (num_starts 3; 0.1012s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.304216s (num_starts 4; 0.0761s/start)
ftmap_run_pointsto_analysis.: 0.350113s (num_starts 2; 0.1751s/start)
tfg_run_pointsto_analysis.: 0.35062s (num_starts 2; 0.1753s/start)
tfg_populate_structs_after_ssa_construction.: 0.407471s (num_starts 2; 0.2037s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.423416s (num_starts 2; 0.2117s/start)
guarded_predicate_set_and.: 0.471205s (num_starts 35; 0.0135s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.6407s (num_starts 464; 0.0035s/start)
check_equivalence_proof.: 2.62004s (num_starts 1; 2.6200s/start)
update_invariant_state_for_edges.: 3.04753s (num_starts 1; 3.0475s/start)
cg_check_new_cg_ec.: 3.04761s (num_starts 1; 3.0476s/start)
correl_entry_apply.: 3.04764s (num_starts 1; 3.0476s/start)
expandProductCFG.: 3.24696s (num_starts 2; 1.6235s/start)
bestFirstSearch.: 3.36797s (num_starts 1; 3.3680s/start)
query:smt.: 3.40111s (num_starts 36; 0.0945s/start)
spawn_smt_query.: 3.43748s (num_starts 36; 0.0955s/start)
solver_provable.: 3.86705s (num_starts 35; 0.1105s/start)
solver_satisfiable-cache-miss.: 3.89006s (num_starts 36; 0.1081s/start)
solver_satisfiable.: 3.89027s (num_starts 36; 0.1081s/start)
expr_is_provable.: 3.8938s (num_starts 35; 0.1113s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 3.89443s (num_starts 35; 0.1113s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 3.89656s (num_starts 35; 0.1113s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 3.90284s (num_starts 35; 0.1115s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 4.38348s (num_starts 35; 0.1252s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 4.45071s (num_starts 35; 0.1272s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 4.45139s (num_starts 35; 0.1272s/start)
is_expr_equal_using_lhs_set_and_precond.: 4.71042s (num_starts 35; 0.1346s/start)
prove.: 4.71089s (num_starts 35; 0.1346s/start)
prove_spawn_and_join_helper.: 4.71117s (num_starts 35; 0.1346s/start)
prove_spawn_and_join.: 5.43587s (num_starts 35; 0.1553s/start)
prove_wrapper.proof_query_not_trivial.: 5.44377s (num_starts 35; 0.1555s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.48696s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.48696s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.48697s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.48698s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.48699s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 5.48701s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 5.48702s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 5.48703s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 5.48705s (num_starts 2; 2.7435s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 5.48706s (num_starts 2; 2.7435s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 5.61749s (num_starts 4; 1.4044s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 5.64011s (num_starts 2; 2.8201s/start)
check_wfconds_on_edge.: 5.64015s (num_starts 2; 2.8201s/start)
check_preds_on_edge_compositions.: 5.643s (num_starts 3; 1.8810s/start)
prove_wrapper.: 5.73984s (num_starts 36; 0.1594s/start)
decide_hoare_triple_check_ub.: 5.789s (num_starts 6; 0.9648s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.79081s (num_starts 5; 1.1582s/start)
decide_hoare_triple_helper.: 5.7916s (num_starts 6; 0.9653s/start)
decide_hoare_triple_with_alias_cons.: 5.79189s (num_starts 6; 0.9653s/start)
Time taken for equivalence check.: 5.98868s (num_starts 1; 5.9887s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.L0%0%d=>E0%0%d.: 2
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 36
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 4
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 21
src-nodes.: 18
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 3.13
final-CG-time-to-total-time-ratio.: 0.93
query-time-to-total-time-ratio.: 0.52

Context stats:
exprs: count: 152923
sorts: count: 153
num_proof_queries: 78
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	7600
	        hit ratio:	0.948158
m_simplify_solver:
	----------- total:	4119
	        hit ratio:	0.661326
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	16
	        hit ratio:	0
m_z3_solver_substitution:
	----------- total:	1395
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	1395
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	4
	        hit ratio:	0.75
m_expr_size:
	----------- total:	13964
	        hit ratio:	0.882555
m_contains_only_constants_or_sp_versions:
	----------- total:	8
	        hit ratio:	0.5
m_expr_evaluates_to_constant_visitor:
	----------- total:	14944
	        hit ratio:	0.646681
m_sort_dfa_canonicalize:
	----------- total:	98926
	        hit ratio:	0.999858
m_expr_convert_to_iexpr:
	----------- total:	552
	        hit ratio:	0.838768

z3_solver expr_query_cache entry size: 36
	----------- total:	80
	             hits:	0
	        hit ratio:	0
histogram (time taken by solver in ms):
[ 19.4890,  28.6778) (avg.  19.4890)     : 1
[ 28.6778,  42.1991) (avg.  33.6780)     : 2
[ 42.1991,  62.0954) (avg.  47.1538)     : 31
[ 62.0954,  91.3726) (avg.   0.0000)     : 0
[ 91.3726, 134.4536) (avg.   0.0000)     : 0
[134.4536, 197.8469) (avg.   0.0000)     : 0
[197.8469, 291.1292) (avg.   0.0000)     : 0
[291.1292, 428.3930) (avg.   0.0000)     : 0
[428.3930, 630.3750) (avg.   0.0000)     : 0
[630.3750, 927.5890) (avg. 925.9700)     : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 0)                          : 1
[2, 3) (avg. 2)                          : 3
[3, 5) (avg. 4)                          : 32
[5, 6) (avg. 0)                          : 0
[6, 7) (avg. 0)                          : 0
[7, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 12) (avg. 0)                        : 0
[12, 13) (avg. 0)                        : 0
[13, 14) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 40,  74) (avg.  40)                    : 1
[ 74, 108) (avg.   0)                    : 0
[108, 142) (avg.   0)                    : 0
[142, 176) (avg.   0)                    : 0
[176, 210) (avg.   0)                    : 0
[210, 244) (avg.   0)                    : 0
[244, 278) (avg. 263)                    : 1
[278, 312) (avg.   0)                    : 0
[312, 346) (avg. 316)                    : 2
[346, 379) (avg. 367)                    : 32
Top 10 highest time taking queries:
1. [0.927s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.1
2. [0.925s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_16.0
3. [0.060s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.052s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem8_of_16.1
5. [0.051s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem6_of_16.0
6. [0.050s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem1_of_16.0
7. [0.049s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem14_of_16.0
8. [0.049s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem1_of_16.1
9. [0.048s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem8_of_16.0
10. [0.048s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.equal-ret.from_pcL0%0%d_L0%0%d.cond_apply_set_elem13_of_16.1

<MSG>0:35 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 172 time spent: 0:0:0 [0.004041s total; 0.000023 per start]
tfg_computeWP: num_starts 385 time spent: 0:0:0 [0.053852s total; 0.000140 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1813 time spent: 0:0:0 [0.003153s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1867 time spent: 0:0:0 [0.003407s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 1821 time spent: 0:0:0 [0.002959s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 54 time spent: 0:0:0 [0.139530s total; 0.002584 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 12 time spent: 0:0:0 [0.235889s total; 0.019657 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 149 time spent: 0:0:0 [0.134038s total; 0.000900 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 58 time spent: 0:0:0 [0.094290s total; 0.001626 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 138 time spent: 0:0:0 [0.120697s total; 0.000875 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 695 time spent: 0:0:0 [0.197068s total; 0.000284 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 141 time spent: 0:0:0 [0.007450s total; 0.000053 per start]
tfg_graph_get_vars_written_on_edge: num_starts 138 time spent: 0:0:0 [0.003297s total; 0.000024 per start]
cg_with_rank_add_CE_at_pc: num_starts 68 time spent: 0:0:0 [0.139125s total; 0.002046 per start]
graph_with_ce_add_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.000885s total; 0.000024 per start]
graph_with_guessing_add_CE_at_pc: num_starts 68 time spent: 0:0:0 [0.138928s total; 0.002043 per start]
point_set_add_point_using_CE: num_starts 110 time spent: 0:0:0 [0.047182s total; 0.000429 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 110 time spent: 0:0:0 [0.047551s total; 0.000432 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 56 time spent: 0:0:0 [0.135831s total; 0.002426 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 56 time spent: 0:0:0 [0.087409s total; 0.001561 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3735 time spent: 0:0:0 [0.114639s total; 0.000031 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 205 time spent: 0:0:0 [0.030230s total; 0.000147 per start]
expr_simplify_solver: num_starts 8351 time spent: 0:0:0 [0.965737s total; 0.000116 per start]
expr_simplify_syntactic: num_starts 8412 time spent: 0:0:1 [1.822290s total; 0.000217 per start]
expr_simplify_select_on_store: num_starts 544 time spent: 0:0:1 [1.581992s total; 0.002908 per start]
expr_simplify_using_lhs_set_helper: num_starts 1108 time spent: 0:0:3 [3.074194s total; 0.002775 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 15031 time spent: 0:0:3 [3.058416s total; 0.000203 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 11202 time spent: 0:0:0 [0.044531s total; 0.000004 per start]
expr_simplify_eq: num_starts 986 time spent: 0:0:0 [0.012514s total; 0.000013 per start]
expr_simplify_or: num_starts 128 time spent: 0:0:0 [0.000104s total; 0.000001 per start]
expr_simplify_and: num_starts 1218 time spent: 0:0:0 [0.008602s total; 0.000007 per start]
expr_simplify_andnot1: num_starts 14 time spent: 0:0:0 [0.000253s total; 0.000018 per start]
expr_simplify_not: num_starts 18 time spent: 0:0:0 [0.000081s total; 0.000005 per start]
expr_simplify_implies: num_starts 281 time spent: 0:0:0 [0.002691s total; 0.000010 per start]
expr_simplify_ite: num_starts 4 time spent: 0:0:0 [0.000217s total; 0.000054 per start]
canonicalize_expr_tree: num_starts 4389 time spent: 0:0:0 [0.151389s total; 0.000034 per start]
expr_simplify_memalloc_using_memlabel: num_starts 236 time spent: 0:0:0 [0.000663s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 548 time spent: 0:0:1 [1.563248s total; 0.002853 per start]
get_arithmetic_addsub_atoms: num_starts 10175 time spent: 0:0:0 [0.006576s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 875 time spent: 0:0:0 [0.008902s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 4052 time spent: 0:0:0 [0.002439s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 11966 time spent: 0:0:2 [2.609681s total; 0.000218 per start]
expr_do_simplify_helper_cache: num_starts 11966 time spent: 0:0:0 [0.011472s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 8 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 8 time spent: 0:0:0 [0.000019s total; 0.000002 per start]
evaluate_expr_and_check_bounds: num_starts 556 time spent: 0:0:0 [0.227155s total; 0.000409 per start]
array_constant_equals: num_starts 11568 time spent: 0:0:0 [0.014566s total; 0.000001 per start]
sort_dfa_canonical: num_starts 379283 time spent: 0:0:1 [1.251029s total; 0.000003 per start]
expr_convert_to_iexpr: num_starts 1066 time spent: 0:0:0 [0.413520s total; 0.000388 per start]
combo_dfa_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.371540s total; 0.005021 per start]
alias_val_xfer_and_meet: num_starts 74 time spent: 0:0:0 [0.247892s total; 0.003350 per start]
get_sprel_map_from_avail_exprs: num_starts 103 time spent: 0:0:0 [0.011304s total; 0.000110 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000118s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 172 time spent: 0:0:0 [0.034422s total; 0.000200 per start]
compute_simplified_loc_exprs_for_edge: num_starts 446 time spent: 0:0:0 [0.257462s total; 0.000577 per start]
compute_locs_definitely_written_on_edge: num_starts 172 time spent: 0:0:0 [0.000340s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 54 time spent: 0:0:0 [0.026353s total; 0.000488 per start]
edge_update_memlabel_map_for_mlvars: num_starts 86 time spent: 0:0:0 [0.008289s total; 0.000096 per start]
add_new_locs_based_on_edge: num_starts 74 time spent: 0:0:0 [0.111836s total; 0.001511 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000475s total; 0.000006 per start]
total: num_starts 1 time spent: 0:0:41 [41.612471s total; 41.612471 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 14.13s.
ftmap_run_pointsto_analysis.: 0.350113s (num_starts 2; 0.1751s/start)s.
EQ Time after pointsto analysis: 13.7792s.
EQ Time after pointsto analysis and smt_query: 8.03941s.
EQ Time after pointsto analysis and smt_query and bv-solve: 8.03941s.
Equivalence proof found. The programs are equivalent.
