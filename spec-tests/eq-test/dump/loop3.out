argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=loop3.proof
argv[9] = --spec-iospecs=loop3.iospecs
argv[10] = loop3.spec
argv[11] = loop3.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.1495112
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/loop3.c
argv[10] = -o
argv[11] = par_tmpdir/loop3.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/loop3.spec.etfg
argv[11] = par_tmpdir/loop3.c.bc
argv[12] = -o
argv[13] = par_tmpdir/loop3.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 68 time spent: 0:0:0 [0.000127s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 102 time spent: 0:0:0 [0.000188s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 612 time spent: 0:0:0 [0.002414s total; 0.000004 per start]
expr_simplify_solver: num_starts 46 time spent: 0:0:0 [0.005394s total; 0.000117 per start]
expr_simplify_syntactic: num_starts 46 time spent: 0:0:0 [0.002018s total; 0.000044 per start]
expr_simplify_using_lhs_set_helper: num_starts 59 time spent: 0:0:0 [0.010096s total; 0.000171 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 135 time spent: 0:0:0 [0.009954s total; 0.000074 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 48 time spent: 0:0:0 [0.000226s total; 0.000005 per start]
expr_simplify_not: num_starts 2 time spent: 0:0:0 [0.000008s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 30 time spent: 0:0:0 [0.000458s total; 0.000015 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 44 time spent: 0:0:0 [0.000041s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 60 time spent: 0:0:0 [0.000700s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 131 time spent: 0:0:0 [0.000126s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1397 time spent: 0:0:0 [0.011356s total; 0.000008 per start]
expr_do_simplify_helper_cache: num_starts 1397 time spent: 0:0:0 [0.000877s total; 0.000001 per start]
array_constant_equals: num_starts 3 time spent: 0:0:0 [0.000009s total; 0.000003 per start]
sort_dfa_canonical: num_starts 141745 time spent: 0:0:1 [1.192169s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 8 time spent: 0:0:0 [0.001011s total; 0.000126 per start]
combo_dfa_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.044873s total; 0.000690 per start]
alias_val_xfer_and_meet: num_starts 65 time spent: 0:0:0 [0.014018s total; 0.000216 per start]
get_sprel_map_from_avail_exprs: num_starts 86 time spent: 0:0:0 [0.005489s total; 0.000064 per start]
update_memlabels_for_memslot_locs: num_starts 20 time spent: 0:0:0 [0.000088s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 130 time spent: 0:0:0 [0.005155s total; 0.000040 per start]
compute_simplified_loc_exprs_for_edge: num_starts 365 time spent: 0:0:0 [0.017802s total; 0.000049 per start]
compute_locs_definitely_written_on_edge: num_starts 130 time spent: 0:0:0 [0.000051s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 28 time spent: 0:0:0 [0.005351s total; 0.000191 per start]
edge_update_memlabel_map_for_mlvars: num_starts 65 time spent: 0:0:0 [0.000397s total; 0.000006 per start]
add_new_locs_based_on_edge: num_starts 65 time spent: 0:0:0 [0.008576s total; 0.000132 per start]
expand_locset_to_include_slots_for_memmask: num_starts 45 time spent: 0:0:0 [0.000092s total; 0.000002 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 3e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 1e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 1.6e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.1e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 2.2e-05s (num_starts 22; 0.0000s/start)
lr_status_meet.: 2.4e-05s (num_starts 31; 0.0000s/start)
expr_is_callee_save_const.: 3.1e-05s (num_starts 26; 0.0000s/start)
add_extra_node_at_start_pc.: 3.8e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 4.9e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.4e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 5.9e-05s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 7.3e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 7.8e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_specvars.: 8.4e-05s (num_starts 1; 0.0001s/start)
main.3.: 8.4e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9e-05s (num_starts 10; 0.0000s/start)
propagate_sprels.: 9.6e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000102s (num_starts 33; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000105s (num_starts 5; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000125s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.000145s (num_starts 177; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000145s (num_starts 33; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000171s (num_starts 1; 0.0002s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000174s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000178s (num_starts 28; 0.0000s/start)
populate_locid2expr_map.: 0.000208s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000281s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000286s (num_starts 65; 0.0000s/start)
canonicalize_llvm_nextpcs.: 0.000317s (num_starts 1; 0.0003s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000323s (num_starts 65; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.00038s (num_starts 1; 0.0004s/start)
compute_z3_expr.: 0.000392s (num_starts 28; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000406s (num_starts 1; 0.0004s/start)
def_analysis::xfer_and_meet.: 0.000411s (num_starts 66; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000439s (num_starts 45; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00046s (num_starts 759; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000494s (num_starts 1; 0.0005s/start)
expr_linear_relation_holds::visit.var.: 0.000533s (num_starts 28; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000607s (num_starts 65; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000794s (num_starts 1; 0.0008s/start)
populate_simplified_to_state.: 0.000804s (num_starts 3; 0.0003s/start)
populate_exit_return_values_for_llvm_method.: 0.000883s (num_starts 1; 0.0009s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00106s (num_starts 552; 0.0000s/start)
create_closure_matrix.: 0.001298s (num_starts 85; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.001304s (num_starts 51; 0.0000s/start)
graph_visit_exprs.: 0.00137s (num_starts 4; 0.0003s/start)
query:convert_from_z3.: 0.001393s (num_starts 28; 0.0000s/start)
query:convert_to_z3.: 0.001436s (num_starts 28; 0.0001s/start)
compute_lr_status_for_expr.: 0.001471s (num_starts 36; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.001475s (num_starts 102; 0.0000s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00154s (num_starts 31; 0.0000s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001596s (num_starts 31; 0.0001s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001723s (num_starts 1; 0.0017s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002068s (num_starts 1; 0.0021s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.002079s (num_starts 1; 0.0021s/start)
populate_transitive_closure.: 0.002404s (num_starts 1; 0.0024s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.003391s (num_starts 65; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.003658s (num_starts 2; 0.0018s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.003741s (num_starts 1; 0.0037s/start)
query:simplify-z3.: 0.003861s (num_starts 58; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004098s (num_starts 612; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.004133s (num_starts 2; 0.0021s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.00426s (num_starts 1; 0.0043s/start)
compute_new_lr_status_on_locs.: 0.004362s (num_starts 65; 0.0001s/start)
populate_simplified_assets.: 0.004371s (num_starts 6; 0.0007s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.004422s (num_starts 1; 0.0044s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.004461s (num_starts 68; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.004489s (num_starts 2; 0.0022s/start)
graph_to_stream.: 0.004495s (num_starts 1; 0.0045s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.004577s (num_starts 1; 0.0046s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.004675s (num_starts 65; 0.0001s/start)
tfg::populate_loc_definedness.: 0.004721s (num_starts 2; 0.0024s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.005039s (num_starts 1; 0.0050s/start)
graph_identify_back_edges.: 0.00535s (num_starts 6; 0.0009s/start)
graph_identify_natural_loops.: 0.005602s (num_starts 6; 0.0009s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.005851s (num_starts 65; 0.0001s/start)
populate_branch_affecting_locs.: 0.006189s (num_starts 2; 0.0031s/start)
create_sp_version_relations_lattice_at_pc.: 0.006555s (num_starts 85; 0.0001s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.007977s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.007982s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.007987s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.007993s (num_starts 1; 0.0080s/start)
tfg_constructor.src.spec.foo.: 0.007998s (num_starts 1; 0.0080s/start)
avail_exprs_create_submap.: 0.008015s (num_starts 195; 0.0000s/start)
find_dominators.: 0.008401s (num_starts 10; 0.0008s/start)
populate_locs_potentially_modified_on_edge.: 0.008943s (num_starts 3; 0.0030s/start)
compute_regions.: 0.009089s (num_starts 6; 0.0015s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.010155s (num_starts 59; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.011584s (num_starts 1; 0.0116s/start)
tfg::tfg_preprocess.: 0.011587s (num_starts 1; 0.0116s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.012595s (num_starts 65; 0.0002s/start)
main.2.: 0.013099s (num_starts 1; 0.0131s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.013331s (num_starts 3; 0.0044s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.013455s (num_starts 612; 0.0000s/start)
populate_loc_liveness.: 0.013679s (num_starts 2; 0.0068s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.01413s (num_starts 65; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.014376s (num_starts 612; 0.0000s/start)
get_tfg.: 0.015531s (num_starts 1; 0.0155s/start)
get_function_tfg_map.foo.: 0.015563s (num_starts 1; 0.0156s/start)
get_function_tfg_map.: 0.015565s (num_starts 1; 0.0156s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.017743s (num_starts 612; 0.0000s/start)
tfg_postprocess_after_pointsto_analysis.: 0.038098s (num_starts 1; 0.0381s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.044975s (num_starts 65; 0.0007s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.047284s (num_starts 1; 0.0473s/start)
ftmap_run_pointsto_analysis.: 0.10363s (num_starts 1; 0.1036s/start)
parse_consts_db.: 7.08662s (num_starts 1; 7.0866s/start)
main.: 7.25645s (num_starts 1; 7.2565s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file loop3.iospecs...</MSG>
<MSG>0:21 : Computing equivalence for function: foo...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG foo: Enumerating correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%12%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%12%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%12%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%15%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%15%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%15%bbentry as correlation candidates for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo: Found 3 correlations for L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%12%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%12%bbentry ending at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting select expressions at toPC L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding node L3%12%bbentry_Lfor.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:22 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2: Added the 3 propagated CEs at PC L3%12%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L3%12%bbentry and dst path L0%0%d --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L3%12%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:22 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%12%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    7 preds:
      0.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      1.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      2.: 0                     ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      4.: 0                     ==  input.spec-%var-n-0.L3%12%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
      6.: 0                     ==  input.spec-%var-n-1
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-n-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    3 preds:
      0.: bvule(input.dst.llvm-%n, 0)  ==  true
      1.: bvsle(input.dst.llvm-%n, 0)  ==  true
      2.: bvsge(input.dst.llvm-%n, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    4 preds:
      0.: bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      1.: bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      2.: bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
      3.: bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3


<MSG>0:22 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>0:22 : foo.A2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:22 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:22 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    6 preds:
      0.: 1                     ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: 0                     ==  input.spec-%var-r-0.L3%12%bbentry
      4.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
      5.: 1                     ==  input.spec-%var-i-0.L3%12%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    4 preds:
      0.: bvule(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      2.: bvsle(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      3.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    3 preds:
      0.: bvule(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      1.: bvsle(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
      2.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      2.: bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      3.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:22 : foo.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:22 : product-TFG foo.A2: Enumerating correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Considering 2 paths to src pc L3%12%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L3%12%bbentry=>L3%12%bbentry[mu 0, delta {0,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L3%12%bbentry=>L3%12%bbentry[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Found 2 feasible correlations for paths to src pc L3%12%bbentry as correlation candidates for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2: Found 2 correlations for Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>L3%12%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L3%12%bbentry --> L3%12%bbentry ending at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Getting alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Found no alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Adding edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : foo.A2.B2: Propagated 5 out of 7 counter-examples across edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry</MSG>
<MSG>0:22 : foo.A2.B2: Added the 5 propagated CEs at PC L3%12%bbentry_Lfor.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:22 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : foo.A2.B2: Computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC L3%12%bbentry_Lfor.cond%1%bbentry, src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L3%12%bbentry --> L3%12%bbentry and dst path Lfor.cond%1%bbentry --> Lfor.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:22 : Added correlation to the product-TFG foo.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 13 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>L3%12%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    2 preds:
      0.: bvuge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
      1.: bvsge(input.spec-%var-i-0.L3%12%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    1 preds:
      0.: bvsge(input.spec-%var-r-0.L3%12%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    2 preds:
      0.: bvuge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
      1.: bvsge(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, 1)  ==  true
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:22 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:22 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%12%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 2 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:22 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%12%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 7 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass src-branches-const-ineq (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%n (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>0:23 : foo.A2.B2: Relaxing invariant eqclass dst-ineq (type HOUDINI) with 8 exprs and 4 CEs across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing invariant eqclass dst-ineq (type HOUDINI) across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:23 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:23 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40


<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Enumerating correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%12%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2: Found 1 correlations for Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%12%bbentry_Lfor.cond%1%bbentry
</MSG>
<MSG>0:23 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%12%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Adding edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Propagated 6 out of 22 counter-examples across edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : foo.A2.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%12%bbentry_Lfor.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%12%bbentry --> E0%0%d and dst path Lfor.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 4...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%12%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lfor.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%12%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%12%bbentry_Lfor.cond%1%bbentry ...</MSG>
<MSG>0:23 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : foo.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : foo.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:23 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%12%bbentry_Lfor.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (8 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce3
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [7]: 2-->input.spec-%var-n-1 ; 3-->input.spec-%var-i-0.L3%12%bbentry ; 4-->input.spec-%var-n-0.L3%12%bbentry ; 5-->input.spec-%var-r-0.L3%12%bbentry ; 6-->input.dst.llvm-%n ; 7-->input.dst.llvm-%r.0.Lfor.cond%1%bbentry ; 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-i-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%i.0.Lfor.cond%1%bbentry
      1.: bvneg(bvmul(input.spec-%var-r-0.L3%12%bbentry, 4294967295))  ==  input.dst.llvm-%r.0.Lfor.cond%1%bbentry
      2.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.dst.llvm-%n
      3.: bvneg(bvmul(input.spec-%var-n-1, 4294967295))  ==  input.spec-%var-n-0.L3%12%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce39      2.:cvc4.ce143      3.:cvc4.ce191
    eqclass 2:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 3-->input.spec-%var-i-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 3:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 4-->input.spec-%var-n-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 4:
    smallest point cover name src-branches-const-ineq, type BV_CONST_INEQ, exprs [1]: 5-->input.spec-%var-r-0.L3%12%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    3 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:cvc4.ce338
    eqclass 5:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%n, type BV_CONST_INEQ, exprs [1]: 6-->input.dst.llvm-%n ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40
    eqclass 6:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 8-->input.dst.llvm-%i.0.Lfor.cond%1%bbentry ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce191      2.:z3v487.ce262      3.:z3.ce414
    eqclass 7:
    smallest point cover name dst-ineq, type HOUDINI, exprs [8]: 9-->bvslt(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 10-->bvult(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 11-->bvslt(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 12-->bvult(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 13-->bvsle(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 14-->bvule(input.dst.llvm-%n, input.dst.llvm-%i.0.Lfor.cond%1%bbentry) ; 15-->bvsle(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 16-->bvule(input.dst.llvm-%i.0.Lfor.cond%1%bbentry, input.dst.llvm-%n) ; 
    0 preds:
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce3      1.:cvc4.ce75      2.:cvc4.ce39      3.:z3v487.ce40

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry (C L0%0%d => C L3%12%bbentry at mu 1 delta {1,0}, A L0%0%d => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry => C L3%12%bbentry at mu 1 delta {1,0}, A (line 3 at column 21) => A (line 3 at column 21) at mu 1 delta {1,0})
            L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%12%bbentry => C E0%0%d at mu 1 delta {1,0}, A (line 3 at column 21) => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%12%bbentry_Lfor.cond%1%bbentry (C L3%12%bbentry, A (line 3 at column 21))
                L3%12%bbentry_Lfor.cond%1%bbentry [inductive-invariants] contains 22 counterexamples (for correlating 7 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 1.52s, query:smt.: 0.309811s (num_starts 21; 0.0148s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.974032s (num_starts 61; 0.0160s/start)ftmap_run_pointsto_analysis.: 0.112453s (num_starts 2; 0.0562s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 2; 0.0000s/start)
compute_tfg_pred_eqclass.: 4e-06s (num_starts 1; 0.0000s/start)
prune_dst_memslots.: 5e-06s (num_starts 1; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 6e-06s (num_starts 5; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 7e-06s (num_starts 3; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 7e-06s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.4e-05s (num_starts 19; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 1.4e-05s (num_starts 3; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.7e-05s (num_starts 15; 0.0000s/start)
remove_complex_bv_exprs.: 1.8e-05s (num_starts 1; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 1.8e-05s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1.9e-05s (num_starts 19; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.9e-05s (num_starts 5; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.: 2.4e-05s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L0%0%d_L0%0%d.: 2.5e-05s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 3.1e-05s (num_starts 24; 0.0000s/start)
invariant_inference_xfer.dst-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 3.1e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 3.1e-05s (num_starts 32; 0.0000s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 3.2e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 3.9e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 4e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 4.4e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 5.1e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.5e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 6.6e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 6.8e-05s (num_starts 23; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 8.4e-05s (num_starts 63; 0.0000s/start)
collect_dst_to_src_submap_preds.: 9.1e-05s (num_starts 61; 0.0000s/start)
expr_is_hidden_reg.: 0.0001s (num_starts 84; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry.: 0.000118s (num_starts 2; 0.0001s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000123s (num_starts 31; 0.0000s/start)
lr_status_meet.: 0.00013s (num_starts 126; 0.0000s/start)
expr_is_callee_save_const.: 0.000136s (num_starts 96; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000136s (num_starts 65; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.00014s (num_starts 16; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.000151s (num_starts 29; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000151s (num_starts 3; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000153s (num_starts 22; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.000168s (num_starts 40; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000189s (num_starts 40; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00019s (num_starts 29; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000191s (num_starts 1; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000202s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::meet.: 0.000215s (num_starts 280; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000216s (num_starts 2; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000218s (num_starts 8; 0.0000s/start)
compute_sprel_relations.: 0.000227s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000243s (num_starts 17; 0.0000s/start)
propagate_sprels.: 0.000243s (num_starts 2; 0.0001s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000245s (num_starts 6; 0.0000s/start)
populate_locid2expr_map.: 0.000246s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000256s (num_starts 9; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000267s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000287s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.0003s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.0003s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000302s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000303s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000304s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000306s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000317s (num_starts 1; 0.0003s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000323s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000324s (num_starts 1; 0.0003s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.00034s (num_starts 90; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000341s (num_starts 17; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000344s (num_starts 90; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000354s (num_starts 24; 0.0000s/start)
set_result_and_counter_example.: 0.00036s (num_starts 21; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.00036s (num_starts 25; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.00038s (num_starts 2; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000405s (num_starts 30; 0.0000s/start)
collect_assumes_around_edge.: 0.000409s (num_starts 3; 0.0001s/start)
identify_address_taken_local_variables.: 0.000425s (num_starts 1; 0.0004s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000432s (num_starts 8; 0.0001s/start)
proof_query_is_trivial.: 0.000501s (num_starts 63; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000546s (num_starts 61; 0.0000s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.000548s (num_starts 2; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000556s (num_starts 1; 0.0006s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000622s (num_starts 40; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.00064s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.00067s (num_starts 1; 0.0007s/start)
pth_collect_preds_using_atom_func.: 0.000675s (num_starts 52; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000692s (num_starts 2; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000719s (num_starts 187; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000733s (num_starts 40; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000735s (num_starts 2; 0.0004s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000748s (num_starts 3; 0.0002s/start)
tfg_edge_composition_get_assumes.: 0.000755s (num_starts 52; 0.0000s/start)
create_closure_matrix.: 0.000786s (num_starts 62; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000833s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.000835s (num_starts 1; 0.0008s/start)
expr_represents_llvm_undef.: 0.000844s (num_starts 103; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.000858s (num_starts 29; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000859s (num_starts 269; 0.0000s/start)
populate_simplified_to_state.: 0.000876s (num_starts 3; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.0009s (num_starts 47; 0.0000s/start)
construct_linear_combination_exprs.: 0.00091s (num_starts 28; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.001s (num_starts 5; 0.0002s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001019s (num_starts 26; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001081s (num_starts 2; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001116s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001117s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00112s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.001124s (num_starts 1; 0.0011s/start)
ldr_decomposition.: 0.00114s (num_starts 22; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001179s (num_starts 5; 0.0002s/start)
get_unrolled_loop_paths_from.: 0.001192s (num_starts 1; 0.0012s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001211s (num_starts 5; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00122s (num_starts 47; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.001313s (num_starts 512; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001318s (num_starts 1; 0.0013s/start)
pth_collect_simplified_preds_using_atom_func.: 0.001361s (num_starts 61; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001396s (num_starts 5; 0.0003s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.001407s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001423s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001425s (num_starts 1; 0.0014s/start)
tfg::populate_loc_definedness.before_solve.: 0.001446s (num_starts 3; 0.0005s/start)
get_sprel_map_pair_at_pc.: 0.00145s (num_starts 31; 0.0000s/start)
graph_locs_add_all_specvars.: 0.001512s (num_starts 2; 0.0008s/start)
removeMostPromising.: 0.001547s (num_starts 10; 0.0002s/start)
graph_visit_exprs.: 0.001557s (num_starts 3; 0.0005s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001585s (num_starts 24; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.001656s (num_starts 113; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001844s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001942s (num_starts 2; 0.0010s/start)
bv_const_ref_map2expr_map.: 0.001959s (num_starts 28; 0.0001s/start)
tfg::populate_loc_definedness.: 0.001959s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.001978s (num_starts 2; 0.0010s/start)
populate_simplified_assets.: 0.002059s (num_starts 6; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002063s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-trivial.: 0.002067s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned;-trivial.: 0.00207s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-trivial.: 0.002076s (num_starts 2; 0.0010s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.002077s (num_starts 22; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002081s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-unsigned.: 0.002088s (num_starts 2; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.002106s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002253s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.002269s (num_starts 2; 0.0011s/start)
expr_linear_relation_holds::visit.var.: 0.002578s (num_starts 103; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002593s (num_starts 2; 0.0013s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.002759s (num_starts 29; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.002886s (num_starts 52; 0.0001s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.002949s (num_starts 29; 0.0001s/start)
graph_identify_back_edges.: 0.002962s (num_starts 21; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.00306s (num_starts 24; 0.0001s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.003095s (num_starts 3; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.003138s (num_starts 4; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.003144s (num_starts 4; 0.0008s/start)
collect_assumes_around_path_helper.: 0.003165s (num_starts 90; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.003169s (num_starts 2; 0.0016s/start)
find_dominators.: 0.003187s (num_starts 25; 0.0001s/start)
graph_identify_natural_loops.: 0.003188s (num_starts 21; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.003225s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.003233s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-trivial.: 0.003241s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed;-trivial.: 0.003247s (num_starts 3; 0.0011s/start)
graph_visit_exprs_and_keys.: 0.003251s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.003308s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-trivial.: 0.003315s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed;-trivial.: 0.003321s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-trivial.: 0.003328s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.003336s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;lb-signed.: 0.003349s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.003374s (num_starts 3; 0.0011s/start)
graph_with_paths::collect_assumes_around_path.: 0.003403s (num_starts 90; 0.0000s/start)
populate_branch_affecting_locs.: 0.003407s (num_starts 3; 0.0011s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.003443s (num_starts 53; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003448s (num_starts 3; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.003454s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.003459s (num_starts 3; 0.0012s/start)
tfg::get_aliasing_constraints_for_edge.: 0.003464s (num_starts 155; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned;-trivial.: 0.003465s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003474s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.003488s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.0035s (num_starts 3; 0.0012s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-unsigned.: 0.003513s (num_starts 3; 0.0012s/start)
tfg_suffixpath_get_expr_helper.: 0.003517s (num_starts 16; 0.0002s/start)
populate_locs_potentially_modified_on_edge.: 0.003749s (num_starts 3; 0.0012s/start)
expr_substitute_using_available_exprs_submap.: 0.003888s (num_starts 127; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.003958s (num_starts 20; 0.0002s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.004005s (num_starts 20; 0.0002s/start)
compute_vars_reaching_definitions.: 0.004219s (num_starts 2; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00441s (num_starts 3; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004414s (num_starts 3; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.004421s (num_starts 3; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.00443s (num_starts 3; 0.0015s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-trivial.: 0.004456s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004459s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.004462s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.004464s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004468s (num_starts 2; 0.0022s/start)
create_sp_version_relations_lattice_at_pc.: 0.004695s (num_starts 62; 0.0001s/start)
populate_transitive_closure.: 0.004768s (num_starts 27; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.00503s (num_starts 3; 0.0017s/start)
collect_aliasing_constraints_around_path_helper.: 0.005064s (num_starts 106; 0.0000s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.005175s (num_starts 18; 0.0003s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.005347s (num_starts 1; 0.0053s/start)
compute_expr_eqclasses_at_pc.: 0.00535s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.00535s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.005352s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.005355s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.005358s (num_starts 1; 0.0054s/start)
collect_aliasing_constraints_around_path.: 0.005435s (num_starts 66; 0.0001s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.005651s (num_starts 1; 0.0057s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00582s (num_starts 4; 0.0015s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.005823s (num_starts 3; 0.0019s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.005842s (num_starts 3; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.005882s (num_starts 4; 0.0015s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.005971s (num_starts 28; 0.0002s/start)
cg_add_node.: 0.006002s (num_starts 3; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.006321s (num_starts 4; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.006328s (num_starts 4; 0.0016s/start)
lhs_set_sort.: 0.006473s (num_starts 31; 0.0002s/start)
check_node_stability_after_CE_addition.: 0.00727s (num_starts 44; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007771s (num_starts 6; 0.0013s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.007844s (num_starts 6; 0.0013s/start)
predicate_canonicalized.: 0.007937s (num_starts 28; 0.0003s/start)
compute_regions.: 0.007978s (num_starts 21; 0.0004s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.008175s (num_starts 47; 0.0002s/start)
get_next_potential_correlations.: 0.00845s (num_starts 3; 0.0028s/start)
collect_inductive_preds_around_path.: 0.008458s (num_starts 61; 0.0001s/start)
create_new_corr_graph_edge.new_node.: 0.008565s (num_starts 2; 0.0043s/start)
counter_example_falsifies_preds.: 0.00862s (num_starts 77; 0.0001s/start)
create_new_corr_graph_edge.: 0.008752s (num_starts 3; 0.0029s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.008896s (num_starts 47; 0.0002s/start)
compute_lr_status_for_expr.: 0.008987s (num_starts 134; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.009161s (num_starts 4; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.009169s (num_starts 4; 0.0023s/start)
ldr_decompose_and_linear_solve.: 0.009254s (num_starts 22; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.009427s (num_starts 8; 0.0012s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.009639s (num_starts 126; 0.0001s/start)
bv_linear_solve.: 0.009732s (num_starts 22; 0.0004s/start)
query:bv_solve.: 0.00988s (num_starts 22; 0.0004s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.009923s (num_starts 126; 0.0001s/start)
query:convert_to_z3.: 0.010555s (num_starts 161; 0.0001s/start)
counter_example_satisfies_preds.: 0.011022s (num_starts 386; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.011278s (num_starts 47; 0.0002s/start)
bv_solve_returning_intermediate_structures.: 0.011547s (num_starts 22; 0.0005s/start)
avail_exprs_create_submap.: 0.011582s (num_starts 141; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.011815s (num_starts 4; 0.0030s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.011836s (num_starts 154; 0.0001s/start)
query:convert_from_z3.: 0.012049s (num_starts 161; 0.0001s/start)
gen_pred_from_coeff_row.simplify.: 0.012355s (num_starts 28; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012809s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012811s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012814s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012816s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.012818s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.012825s (num_starts 1; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.013131s (num_starts 2; 0.0066s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.013137s (num_starts 2; 0.0066s/start)
bvsolve_cache_query.miss1.: 0.01323s (num_starts 22; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.013435s (num_starts 743; 0.0000s/start)
bvsolve_cache_query.: 0.013445s (num_starts 22; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01371s (num_starts 1; 0.0137s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013712s (num_starts 1; 0.0137s/start)
populate_loc_liveness.: 0.01391s (num_starts 3; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.013965s (num_starts 8; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.013982s (num_starts 8; 0.0017s/start)
compute_z3_expr.: 0.01409s (num_starts 182; 0.0001s/start)
put_smtlib_string_in_file.: 0.014153s (num_starts 42; 0.0003s/start)
do_ssa_transformation.: 0.01474s (num_starts 2; 0.0074s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.015258s (num_starts 80; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.015467s (num_starts 8; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.015518s (num_starts 8; 0.0019s/start)
graph_to_stream.: 0.015729s (num_starts 4; 0.0039s/start)
solve_for_bv_points.: 0.016288s (num_starts 22; 0.0007s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.016831s (num_starts 78; 0.0002s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.017729s (num_starts 344; 0.0001s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.018023s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.018187s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.018195s (num_starts 3; 0.0061s/start)
counter_example_evaluate_preds.: 0.018501s (num_starts 463; 0.0000s/start)
compute_new_lr_status_on_locs.: 0.018701s (num_starts 47; 0.0004s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.019554s (num_starts 22; 0.0009s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020137s (num_starts 1; 0.0201s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020139s (num_starts 1; 0.0201s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02014s (num_starts 1; 0.0201s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020141s (num_starts 1; 0.0201s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020143s (num_starts 1; 0.0201s/start)
get_unrolled_paths_from.: 0.020707s (num_starts 15; 0.0014s/start)
propagate_nodece_across_edge.: 0.021998s (num_starts 10; 0.0022s/start)
tfg_relax_pointsto_vals_on_edge.: 0.022824s (num_starts 17; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-trivial.: 0.023074s (num_starts 12; 0.0019s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.023367s (num_starts 21; 0.0011s/start)
parse_z3_model.: 0.023681s (num_starts 9; 0.0026s/start)
gen_pred_from_coeff_row.: 0.02454s (num_starts 28; 0.0009s/start)
compute_preds_for_bv_points.: 0.024881s (num_starts 5; 0.0050s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.024924s (num_starts 9; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.025507s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.025511s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.025517s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.025524s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.025529s (num_starts 2; 0.0128s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.026115s (num_starts 31; 0.0008s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.026805s (num_starts 47; 0.0006s/start)
tfg_postprocess_after_pointsto_analysis.: 0.027035s (num_starts 2; 0.0135s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.027578s (num_starts 783; 0.0000s/start)
parse_cvc4_model.: 0.027828s (num_starts 9; 0.0031s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.028189s (num_starts 31; 0.0009s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);-trivial.: 0.028865s (num_starts 16; 0.0018s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.029111s (num_starts 743; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.029848s (num_starts 158; 0.0002s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.030027s (num_starts 79; 0.0004s/start)
graph_ec_apply_trans_funs_helper.: 0.031369s (num_starts 163; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.03173s (num_starts 163; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.032187s (num_starts 163; 0.0002s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.03243s (num_starts 176; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.032532s (num_starts 20; 0.0016s/start)
computeWP_for_pred_across_ec.: 0.032639s (num_starts 163; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033273s (num_starts 2; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033277s (num_starts 2; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.033284s (num_starts 2; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.033291s (num_starts 2; 0.0166s/start)
query:simplify-z3.: 0.034799s (num_starts 324; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.036285s (num_starts 9; 0.0040s/start)
check_wfconds_on_edge.L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry.: 0.037504s (num_starts 3; 0.0125s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.039699s (num_starts 30; 0.0013s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.040136s (num_starts 743; 0.0001s/start)
parse_yices_model.: 0.040229s (num_starts 9; 0.0045s/start)
guarded_predicate_set_and.: 0.040914s (num_starts 29; 0.0014s/start)
edge_composition_apply_trans_funs_on_pred.: 0.040923s (num_starts 61; 0.0007s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.041206s (num_starts 78; 0.0005s/start)
check_wfconds_on_edge.L3%12%bbentry_Lfor.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.044392s (num_starts 2; 0.0222s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046976s (num_starts 3; 0.0157s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04698s (num_starts 3; 0.0157s/start)
check_equivalence_proof.: 0.048665s (num_starts 1; 0.0487s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.050105s (num_starts 28; 0.0018s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.050475s (num_starts 41; 0.0012s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.05077s (num_starts 41; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.051503s (num_starts 5; 0.0103s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.051515s (num_starts 5; 0.0103s/start)
apply_mask_and_overlay_array_constant.: 0.052693s (num_starts 28; 0.0019s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%12%bbentry_Lfor.cond%1%bbentry.inductive-invariants.: 0.060814s (num_starts 15; 0.0041s/start)
decide_hoare_triple_helper;-trivial.: 0.064084s (num_starts 41; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069812s (num_starts 1; 0.0698s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069815s (num_starts 1; 0.0698s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.069823s (num_starts 1; 0.0698s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.069827s (num_starts 1; 0.0698s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.073468s (num_starts 30; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07662s (num_starts 4; 0.0192s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076637s (num_starts 4; 0.0192s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076648s (num_starts 4; 0.0192s/start)
check_wfconds_on_edge.: 0.082082s (num_starts 7; 0.0117s/start)
counter_example_translate_on_edge_composition_helper.: 0.085509s (num_starts 382; 0.0002s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088021s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088024s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088029s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088031s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.088039s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.088042s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.088048s (num_starts 1; 0.0880s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.088375s (num_starts 2; 0.0442s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.090663s (num_starts 12; 0.0076s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 0.090691s (num_starts 12; 0.0076s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.091906s (num_starts 3; 0.0306s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.093132s (num_starts 224; 0.0004s/start)
read_counter_examples_from_channel.: 0.093506s (num_starts 9; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094191s (num_starts 1; 0.0942s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094198s (num_starts 1; 0.0942s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094206s (num_starts 1; 0.0942s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094213s (num_starts 1; 0.0942s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.095687s (num_starts 3; 0.0319s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.096423s (num_starts 17; 0.0057s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.097288s (num_starts 24; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.097479s (num_starts 4; 0.0244s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.097497s (num_starts 4; 0.0244s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.097511s (num_starts 4; 0.0244s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);ub-signed.: 0.097525s (num_starts 4; 0.0244s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.097546s (num_starts 42; 0.0023s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.099927s (num_starts 16; 0.0062s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099932s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099939s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099947s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.099955s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.099971s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-unsigned.: 0.099978s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-unsigned.: 0.099992s (num_starts 2; 0.0500s/start)
decide_hoare_triple_helper;per-query-type;lb-unsigned.: 0.102083s (num_starts 4; 0.0255s/start)
check_preds_on_edge_compositions.: 0.102753s (num_starts 10; 0.0103s/start)
ftmap_run_pointsto_analysis.: 0.112453s (num_starts 2; 0.0562s/start)
tfg_run_pointsto_analysis.: 0.11285s (num_starts 2; 0.0564s/start)
corr_graph::add_edge().: 0.120737s (num_starts 3; 0.0402s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.121857s (num_starts 3; 0.0406s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.121875s (num_starts 3; 0.0406s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.121881s (num_starts 3; 0.0406s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.: 0.122416s (num_starts 3; 0.0408s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.12421s (num_starts 1; 0.1242s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.12421s (num_starts 1; 0.1242s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.124226s (num_starts 1; 0.1242s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.124232s (num_starts 1; 0.1242s/start)
tfg_populate_structs_after_ssa_construction.: 0.124951s (num_starts 2; 0.0625s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.125044s (num_starts 7; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.125066s (num_starts 7; 0.0179s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.130486s (num_starts 3; 0.0435s/start)
corr_graph_add_correlation.: 0.130613s (num_starts 3; 0.0435s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);linear.: 0.13146s (num_starts 11; 0.0120s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.13374s (num_starts 3; 0.0446s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.142379s (num_starts 2; 0.0712s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.144147s (num_starts 1; 0.1441s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152873s (num_starts 2; 0.0764s/start)
decide_hoare_triple_helper;per-query-type;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152879s (num_starts 2; 0.0764s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152881s (num_starts 2; 0.0764s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152887s (num_starts 2; 0.0764s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.152903s (num_starts 2; 0.0765s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;lb-signed.: 0.152911s (num_starts 2; 0.0765s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);lb-signed.: 0.152925s (num_starts 2; 0.0765s/start)
decide_hoare_triple_helper;per-query-type;lb-signed.: 0.15628s (num_starts 5; 0.0313s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.194011s (num_starts 2; 0.0970s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.194078s (num_starts 2; 0.0970s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198492s (num_starts 7; 0.0284s/start)
ce_reconcile_sorts_and_values.: 0.214696s (num_starts 27; 0.0080s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216027s (num_starts 4; 0.0540s/start)
invariant_inference_xfer.src-branches-const-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.: 0.216295s (num_starts 9; 0.0240s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.231333s (num_starts 27; 0.0086s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%12%bbentry_Lfor.cond%1%bbentry).: 0.240042s (num_starts 25; 0.0096s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.253781s (num_starts 6; 0.0423s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(epsilon).: 0.258444s (num_starts 8; 0.0323s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.282043s (num_starts 3; 0.0940s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.282115s (num_starts 3; 0.0940s/start)
dst_edge_composition_proves_false.: 0.298469s (num_starts 3; 0.0995s/start)
decide_hoare_triple.: 0.299888s (num_starts 5; 0.0600s/start)
get_next_dst_edge_composition_to_correlate.: 0.309541s (num_starts 4; 0.0774s/start)
query:smt.: 0.309811s (num_starts 21; 0.0148s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.3294s (num_starts 8; 0.0412s/start)
decide_hoare_triple_helper;per-path;L3%12%bbentry_Lfor.cond%1%bbentry;(L3%12%bbentry_Lfor.cond%1%bbentry=>L3%12%bbentry_Lfor.cond%1%bbentry).: 0.358785s (num_starts 24; 0.0149s/start)
spawn_smt_query.: 0.403566s (num_starts 21; 0.0192s/start)
update_invariant_state_for_edges.: 0.772901s (num_starts 3; 0.2576s/start)
cg_check_new_cg_ec.: 0.775788s (num_starts 3; 0.2586s/start)
correl_entry_apply.: 0.775959s (num_starts 3; 0.2587s/start)
solver_provable.: 0.778239s (num_starts 29; 0.0268s/start)
expr_is_provable.: 0.784478s (num_starts 29; 0.0271s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.784993s (num_starts 29; 0.0271s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.786707s (num_starts 29; 0.0271s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.787509s (num_starts 29; 0.0272s/start)
solver_satisfiable-cache-miss.: 0.799173s (num_starts 21; 0.0381s/start)
solver_satisfiable.: 0.79935s (num_starts 30; 0.0266s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.830927s (num_starts 29; 0.0287s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.835965s (num_starts 31; 0.0270s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.836581s (num_starts 31; 0.0270s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.859426s (num_starts 31; 0.0277s/start)
prove.: 0.859624s (num_starts 31; 0.0277s/start)
prove_spawn_and_join_helper.: 0.859781s (num_starts 31; 0.0277s/start)
prove_spawn_and_join.: 0.898896s (num_starts 31; 0.0290s/start)
prove_wrapper.proof_query_not_trivial.: 0.902115s (num_starts 31; 0.0291s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.908143s (num_starts 20; 0.0454s/start)
prove_wrapper.: 0.90909s (num_starts 63; 0.0144s/start)
decide_hoare_triple_check_ub.: 0.953924s (num_starts 61; 0.0156s/start)
decide_hoare_triple_helper.: 0.974032s (num_starts 61; 0.0160s/start)
decide_hoare_triple_with_alias_cons.: 1.072s (num_starts 61; 0.0176s/start)
expandProductCFG.: 1.09482s (num_starts 4; 0.2737s/start)
bestFirstSearch.: 1.25958s (num_starts 1; 1.2596s/start)
Time taken for equivalence check.: 1.30947s (num_starts 1; 1.3095s/start)

counters:
# of paths enumerated.: 12
# of paths expanded.: 3
# of queries to linear solver.: 22
# of smt-solver-queries.: 21
L0%0%d=>Lfor.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lfor.cond%1%bbentry-src_to_pcs.: 3
Lfor.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lfor.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_ecs.: 2
Lfor.cond%1%bbentry=>Lfor.cond%1%bbentry-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%n.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.dst-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 0
smallest_point_cover_xfer.dst-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.src-branches-const-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.src-branches-const-ineq.from.L3%12%bbentry_Lfor.cond%1%bbentry.prove_queries.: 3
smt-queries-cache-hits.: 9
smt-queries-cvc4-sat.: 9
smt-queries-yices-sat.: 9
smt-queries-z3-sat.: 9
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%12%bbentry_Lfor.cond%1%bbentry.: 9
final-CG-counterexamples-total-at-L3%12%bbentry_Lfor.cond%1%bbentry.: 22
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 5
final-CG-super-edges.: 0
src-edges.: 11
src-nodes.: 10
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.91
final-CG-time-to-total-time-ratio.: 0.72
query-time-to-total-time-ratio.: 0.24

Context stats:
exprs: count: 141318
sorts: count: 144
num_proof_queries: 31
num_proof_queries_answered_by_syntactic_check: 2
cache_stats:
m_simplify:
	----------- total:	3657
	        hit ratio:	0.955701
m_simplify_solver:
	----------- total:	528
	        hit ratio:	0.685606
m_z3_solver_substitution:
	----------- total:	163
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	166
	        hit ratio:	0
m_expr_size:
	----------- total:	2905
	        hit ratio:	0.919105
m_expr_evaluates_to_constant_visitor:
	----------- total:	2774
	        hit ratio:	0.739726
m_sort_dfa_canonicalize:
	----------- total:	34064
	        hit ratio:	0.999706
m_expr_convert_to_iexpr:
	----------- total:	277
	        hit ratio:	0.758123

z3_solver expr_query_cache entry size: 21
	----------- total:	30
	             hits:	9
	        hit ratio:	0.3
histogram (time taken by solver in ms):
[ 3.7910,  4.8103) (avg.  4.0843)        : 3
[ 4.8103,  6.1038) (avg.  5.0943)        : 8
[ 6.1038,  7.7450) (avg.  6.6030)        : 1
[ 7.7450,  9.8275) (avg.  0.0000)        : 0
[ 9.8275, 12.4699) (avg.  0.0000)        : 0
[12.4699, 15.8229) (avg. 14.4370)        : 1
[15.8229, 20.0774) (avg. 17.8840)        : 2
[20.0774, 25.4759) (avg. 24.2170)        : 1
[25.4759, 32.3260) (avg. 32.0310)        : 1
[32.3260, 41.0180) (avg. 35.8888)        : 4
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  51) (avg.  40)                    : 1
[ 51,  62) (avg.   0)                    : 0
[ 62,  73) (avg.  72)                    : 3
[ 73,  83) (avg.  79)                    : 6
[ 83,  94) (avg.  88)                    : 3
[ 94, 105) (avg. 100)                    : 2
[105, 115) (avg. 112)                    : 5
[115, 126) (avg.   0)                    : 0
[126, 137) (avg.   0)                    : 0
[137, 147) (avg. 137)                    : 1
Top 10 highest time taking queries:
1. [0.040s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst-branches-const-ineq.input.dst.llvm-%i.0.Lfor.cond%1%bbentry.lb-unsigned.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond.0
3. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%12%bbentry_Lfor.cond%1%bbentry.dstToPC.E0%0%d.from_pcL3%12%bbentry_Lfor.con.0
4. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%12%bbentry_Lfor.cond%1%bbentry.dstToPC.Lfor.cond%1%bbentry.from_pcL3%12%bbe.0
6. [0.024s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-signed.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.1
7. [0.019s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lfor.cond%1%bbentry.from_pcL0%0%d_L0%0%d.cond_apply_set_.0
8. [0.017s] SOLVER_RES_TRUE memlabel_assertions_sat.0
9. [0.014s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.src-branches-const-ineq.ub-signed.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
10. [0.007s] SOLVER_RES_FALSE decide_hoare_triple_check_ub.src-branches-const-ineq.lb-unsigned.from_pcL3%12%bbentry_Lfor.cond%1%bbentry.cond_apply_set_elem0_of_1.0

<MSG>0:23 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 104 time spent: 0:0:0 [0.002295s total; 0.000022 per start]
tfg_computeWP: num_starts 233 time spent: 0:0:0 [0.026700s total; 0.000115 per start]
tfg_get_simplified_to_state_for_edge: num_starts 946 time spent: 0:0:0 [0.001615s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1082 time spent: 0:0:0 [0.001816s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 403 time spent: 0:0:0 [0.000755s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 27 time spent: 0:0:0 [0.127077s total; 0.004707 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.116347s total; 0.019391 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 334 time spent: 0:0:0 [0.070322s total; 0.000211 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 80 time spent: 0:0:0 [0.029611s total; 0.000370 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 284 time spent: 0:0:0 [0.047466s total; 0.000167 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1224 time spent: 0:0:0 [0.049709s total; 0.000041 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 284 time spent: 0:0:0 [0.008575s total; 0.000030 per start]
tfg_graph_get_vars_written_on_edge: num_starts 284 time spent: 0:0:0 [0.007572s total; 0.000027 per start]
cg_with_rank_add_CE_at_pc: num_starts 44 time spent: 0:0:0 [0.104746s total; 0.002381 per start]
graph_with_ce_add_CE_at_pc: num_starts 27 time spent: 0:0:0 [0.000754s total; 0.000028 per start]
graph_with_guessing_add_CE_at_pc: num_starts 44 time spent: 0:0:0 [0.103759s total; 0.002358 per start]
point_set_add_point_using_CE: num_starts 176 time spent: 0:0:0 [0.031023s total; 0.000176 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 176 time spent: 0:0:0 [0.031610s total; 0.000180 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.095465s total; 0.003672 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 26 time spent: 0:0:0 [0.063033s total; 0.002424 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1917 time spent: 0:0:0 [0.022631s total; 0.000012 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 352 time spent: 0:0:0 [0.014337s total; 0.000041 per start]
expr_simplify_solver: num_starts 561 time spent: 0:0:0 [0.056403s total; 0.000101 per start]
expr_simplify_syntactic: num_starts 561 time spent: 0:0:0 [0.021315s total; 0.000038 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.007979s total; 0.003989 per start]
expr_simplify_using_lhs_set_helper: num_starts 273 time spent: 0:0:0 [0.101438s total; 0.000372 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1148 time spent: 0:0:0 [0.099895s total; 0.000087 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 592 time spent: 0:0:0 [0.003826s total; 0.000006 per start]
expr_simplify_eq: num_starts 118 time spent: 0:0:0 [0.001406s total; 0.000012 per start]
expr_simplify_or: num_starts 5 time spent: 0:0:0 [0.000008s total; 0.000002 per start]
expr_simplify_and: num_starts 14 time spent: 0:0:0 [0.000124s total; 0.000009 per start]
expr_simplify_not: num_starts 17 time spent: 0:0:0 [0.000071s total; 0.000004 per start]
expr_simplify_implies: num_starts 7 time spent: 0:0:0 [0.000068s total; 0.000010 per start]
canonicalize_expr_tree: num_starts 189 time spent: 0:0:0 [0.005618s total; 0.000030 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.007920s total; 0.003960 per start]
get_arithmetic_addsub_atoms: num_starts 834 time spent: 0:0:0 [0.000866s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 244 time spent: 0:0:0 [0.003540s total; 0.000015 per start]
expr_is_consts_struct_constant: num_starts 372 time spent: 0:0:0 [0.000369s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3939 time spent: 0:0:0 [0.103887s total; 0.000026 per start]
expr_do_simplify_helper_cache: num_starts 3939 time spent: 0:0:0 [0.003874s total; 0.000001 per start]
evaluate_expr_and_check_bounds: num_starts 1095 time spent: 0:0:0 [0.063789s total; 0.000058 per start]
array_constant_equals: num_starts 555 time spent: 0:0:0 [0.000915s total; 0.000002 per start]
sort_dfa_canonical: num_starts 175783 time spent: 0:0:1 [1.189332s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 285 time spent: 0:0:0 [0.144379s total; 0.000507 per start]
combo_dfa_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.073405s total; 0.002447 per start]
alias_val_xfer_and_meet: num_starts 30 time spent: 0:0:0 [0.039613s total; 0.001320 per start]
get_sprel_map_from_avail_exprs: num_starts 47 time spent: 0:0:0 [0.004189s total; 0.000089 per start]
update_memlabels_for_memslot_locs: num_starts 15 time spent: 0:0:0 [0.000086s total; 0.000006 per start]
populate_gen_and_kill_sets_for_edge: num_starts 94 time spent: 0:0:0 [0.017520s total; 0.000186 per start]
compute_simplified_loc_exprs_for_edge: num_starts 261 time spent: 0:0:0 [0.043052s total; 0.000165 per start]
compute_locs_definitely_written_on_edge: num_starts 94 time spent: 0:0:0 [0.000210s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 34 time spent: 0:0:0 [0.008135s total; 0.000239 per start]
edge_update_memlabel_map_for_mlvars: num_starts 47 time spent: 0:0:0 [0.001326s total; 0.000028 per start]
add_new_locs_based_on_edge: num_starts 30 time spent: 0:0:0 [0.025682s total; 0.000856 per start]
expand_locset_to_include_slots_for_memmask: num_starts 62 time spent: 0:0:0 [0.000151s total; 0.000002 per start]
total: num_starts 1 time spent: 0:0:30 [30.319653s total; 30.319653 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 1.52s.
ftmap_run_pointsto_analysis.: 0.112453s (num_starts 2; 0.0562s/start)s.
EQ Time after pointsto analysis: 1.41076s.
EQ Time after pointsto analysis and smt_query: 0.501666s.
EQ Time after pointsto analysis and smt_query and bv-solve: 0.488221s.
Equivalence proof found. The programs are equivalent.
