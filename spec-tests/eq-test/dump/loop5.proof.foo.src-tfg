=TFG_SSA:
=TFG_SPEC src.spec.foo:
=TFG:
=Nodes: L0%0%d L3%6%bbentry L3%7%d L3%8%bbentry L3%9%bbentry L3%20%d L3%21%bbentry L3%24%bbentry L3%27%d L3%28%bbentry L3%31%bbentry L3%34%bbentry L3%36%bbentry E0%0%d
=Edges:
L0%0%d => L3%6%bbentry
L3%6%bbentry => L3%7%d
L3%7%d => L3%9%bbentry
L3%7%d => L3%8%bbentry
L3%8%bbentry => L3%36%bbentry
L3%9%bbentry => L3%20%d
L3%20%d => L3%24%bbentry
L3%20%d => L3%21%bbentry
L3%21%bbentry => L3%34%bbentry
L3%24%bbentry => L3%27%d
L3%27%d => L3%31%bbentry
L3%27%d => L3%28%bbentry
L3%28%bbentry => L3%34%bbentry
L3%34%bbentry => L3%36%bbentry
L3%36%bbentry => E0%0%d
L3%31%bbentry => L3%6%bbentry (backedge) 
=graph done
=is_ssa_graph:
1
=StartState:
=spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=state_end
=PC to var-version map at L0%0%d
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%6%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%7%d
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%8%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%9%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%20%d
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%21%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%24%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%27%d
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%28%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%31%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%34%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at L3%36%bbentry
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=PC to var-version map at E0%0%d
=version for spec-mem.alloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=version for spec-mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=var-version done
=graph_with_var_versions done
=FunctionName: foo
=Input: tfg-method-arg.0
=arg addr
1 : (undefined) : UNDEFINED
=arg val
1 : input.spec-%var-n-1 : BV:32
=arg end
=Node outputs: E0%0%d
=Output: spec-%ret-reg
1 : input.spec-%tmpvar-24.E0%0%d : BV:32
=Node outputs done for E0%0%d
=input_outputs done
=Symbol-map:
=Touched symbols:
=Symbol-map done
=Locals-map:
=Locals-map done
=Global assumes
=global assume predicate_set done
Memlabel map for call-context {*;foo}
=memlabel_map.0 for call-context {*;foo}
mlheap.src.spec.foo : memlabel-mem--heap
=Edge: L0%0%d => L3%6%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-22.L3%6%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-21.L3%6%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%var-i-0.L3%6%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%var-n-0.L3%6%bbentry
1 : input.spec-%var-n-1 : BV:32
=spec-%var-r-0.L3%6%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.spec-ghostvar.itervar.1.L3%6%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:2:((((func_head*ctor_bv)*ctor_bv)*(inline_entry*func_head))*(ghost_var.itervar.firstedge*ghost_var.itervar.secondedge))
tfg_edge_comment end

=Edge: L3%6%bbentry => L3%7%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-0.L3%7%d
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
2 : input.spec-%var-n-0.L3%6%bbentry : BV:32
3 : bvsgt(1, 2) : BOOL
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*intrinsic_app_bvsgt)
tfg_edge_comment end

=Edge: L3%7%d => L3%9%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-0.L3%7%d : BOOL
2 : not(1) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:5:ite_false_split
tfg_edge_comment end

=Edge: L3%7%d => L3%8%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-0.L3%7%d : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:5:ite_true_split
tfg_edge_comment end

=Edge: L3%8%bbentry => L3%36%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-19.L3%36%bbentry
1 : input.spec-%var-r-0.L3%6%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(bb_entry*ite_true_merge)
tfg_edge_comment end

=Edge: L3%9%bbentry => L3%20%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-5.L3%20%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : input.spec-%var-i-0.L3%6%bbentry : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-6.L3%20%d
1 : 10 { 0xa +1.119e129 } : BV:32
=spec-%tmpvar-7.L3%20%d
1 : input.spec-%var-r-0.L3%6%bbentry : BV:32
2 : input.spec-%var-i-0.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-8.L3%20%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : input.spec-%var-i-0.L3%6%bbentry : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
8 : 10 { 0xa +1.119e129 } : BV:32
9 : input.spec-%var-r-0.L3%6%bbentry : BV:32
10 : bvadd(9, 4) : BV:32
11 : map_set(7, 8, 10) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-9.L3%20%d
1 : 10 { 0xa +1.119e129 } : BV:32
=spec-%tmpvar-1.L3%20%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-10.L3%20%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : input.spec-%var-i-0.L3%6%bbentry : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
8 : 10 { 0xa +1.119e129 } : BV:32
9 : input.spec-%var-r-0.L3%6%bbentry : BV:32
10 : bvadd(9, 4) : BV:32
11 : map_set(7, 8, 10) : MAP[BV:32 -> BV:32]
12 : map_get(11, 8) : SUM[UNIT,BV:32]
=spec-%tmpvar-2.L3%20%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=spec-%tmpvar-3.L3%20%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-4.L3%20%d
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%var-m1-0.L3%20%d
1 : SORT2EXPR.VAR : MAP[BV:32 -> BV:32]
2 : map_init(1) : MAP[BV:32 -> BV:32]
3 : 4 { 0x4 +1.47e129 } : BV:32
4 : input.spec-%var-i-0.L3%6%bbentry : BV:32
5 : 1 { 0x1 +1.11e129 } : BV:32
6 : bvadd(4, 5) : BV:32
7 : map_set(2, 3, 6) : MAP[BV:32 -> BV:32]
8 : 10 { 0xa +1.119e129 } : BV:32
9 : input.spec-%var-r-0.L3%6%bbentry : BV:32
10 : bvadd(9, 4) : BV:32
11 : map_set(7, 8, 10) : MAP[BV:32 -> BV:32]
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((((((bb_entry*ctor_map)*ctor_bv)*ctor_bv)*intrinsic_app_bvadd)*(intrinsic_app_map_set*ctor_bv))*intrinsic_app_bvadd)*(((intrinsic_app_map_set*letin_def)*ctor_bv)*intrinsic_app_map_get))
tfg_edge_comment end

=Edge: L3%20%d => L3%24%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:20:match_sum_cond_1
tfg_edge_comment end

=Edge: L3%20%d => L3%21%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:17:match_sum_cond_0
tfg_edge_comment end

=Edge: L3%21%bbentry => L3%34%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-11.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-17.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-0.L3%34%bbentry
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)
tfg_edge_comment end

=Edge: L3%24%bbentry => L3%27%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-12.L3%27%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=spec-%tmpvar-13.L3%27%d
1 : input.spec-%var-m1-0.L3%20%d : MAP[BV:32 -> BV:32]
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%var-y2-0.L3%27%d
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_1)*ctor_bv)*intrinsic_app_map_get)
tfg_edge_comment end

=Edge: L3%27%d => L3%31%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:27:match_sum_cond_1
tfg_edge_comment end

=Edge: L3%27%d => L3%28%bbentry
=Edge.EdgeCond: 
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=Edge.StateTo: 
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:24:match_sum_cond_0
tfg_edge_comment end

=Edge: L3%28%bbentry => L3%34%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-17.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-14.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-16.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u2-0.L3%34%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((((bb_entry*match_sum_val_0)*ctor_bv)*match_sum_merge_0)*match_sum_merge_1)
tfg_edge_comment end

=Edge: L3%34%bbentry => L3%36%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-19.L3%36%bbentry
1 : input.spec-%tmpvar-17.L3%34%bbentry : BV:32
=spec-%tmpvar-18.L3%36%bbentry
1 : input.spec-%tmpvar-17.L3%34%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*letin_body)*ite_false_merge)
tfg_edge_comment end

=Edge: L3%36%bbentry => E0%0%d
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=spec-%tmpvar-23.E0%0%d
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=spec-%tmpvar-24.E0%0%d
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:((bb_entry*func_ret)*(inline_exit*func_ret))
tfg_edge_comment end

=Edge: L3%31%bbentry => L3%6%bbentry
=Edge.EdgeCond: 
1 : 1 { 0x1 } : BOOL
=Edge.StateTo: 
=spec-%var-i-0.L3%6%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-n-0.L3%6%bbentry
1 : input.spec-%var-n-0.L3%6%bbentry : BV:32
=spec-%var-r-0.L3%6%bbentry
1 : input.spec-%var-y2-0.L3%27%d : BV:32
=src.spec-ghostvar.itervar.1.L3%6%bbentry
1 : input.src.spec-ghostvar.itervar.1.L3%6%bbentry : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%var-y1-0.L3%6%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=Edge.Assumes.begin:
=Edge.Assumes.end
=Edge.te_comment
0:-1:(((bb_entry*match_sum_val_1)*tailrec_backedge)*(ghost_var.itervar.firstedge*ghost_var.itervar.secondedge))
tfg_edge_comment end

=graph_with_predicates_done

=start_pc_preconditions
=graph_with_precondition_done

=Locs in src.spec.foo
=Loc 1 in src.spec.foo.
REGMEM
spec-%var-n-1
1 : input.spec-%var-n-1 : BV:32
=Loc 35 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--heap
=Loc 36 in src.spec.foo.
MASKED
=mem
1 : input.spec-mem : ARRAY[BV:32 -> BV:8]
=memalloc
1 : input.spec-mem.alloc : ARRAY[BV:32 -> MEMLABEL]
=memlabel
memlabel-mem--arg.0
=Loc 37 in src.spec.foo.
REGMEM
spec-%tmpvar-0.L3%7%d
1 : input.spec-%tmpvar-0.L3%7%d : BOOL
=Loc 38 in src.spec.foo.
REGMEM
spec-%tmpvar-10.L3%20%d
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
=Loc 39 in src.spec.foo.
REGMEM
spec-%tmpvar-13.L3%27%d
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
=Loc 40 in src.spec.foo.
REGMEM
spec-%var-i-0.L3%6%bbentry
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
=Loc 41 in src.spec.foo.
REGMEM
spec-%var-n-0.L3%6%bbentry
1 : input.spec-%var-n-0.L3%6%bbentry : BV:32
=Loc 42 in src.spec.foo.
REGMEM
spec-%tmpvar-19.L3%36%bbentry
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=Loc 43 in src.spec.foo.
REGMEM
spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-20.E0%0%d : BV:32
=Loc 44 in src.spec.foo.
REGMEM
spec-%tmpvar-23.E0%0%d
1 : input.spec-%tmpvar-23.E0%0%d : BV:32
=Loc 45 in src.spec.foo.
REGMEM
spec-%tmpvar-24.E0%0%d
1 : input.spec-%tmpvar-24.E0%0%d : BV:32
=Loc 46 in src.spec.foo.
REGMEM
spec-%tmpvar-12.L3%27%d
1 : input.spec-%tmpvar-12.L3%27%d : BV:32
=Loc 47 in src.spec.foo.
REGMEM
spec-%var-m1-0.L3%20%d
1 : input.spec-%var-m1-0.L3%20%d : MAP[BV:32 -> BV:32]
=Loc 48 in src.spec.foo.
REGMEM
spec-%var-y2-0.L3%27%d
1 : input.spec-%var-y2-0.L3%27%d : BV:32
=Loc 49 in src.spec.foo.
REGMEM
spec-%tmpvar-1.L3%20%d
1 : input.spec-%tmpvar-1.L3%20%d : MAP[BV:32 -> BV:32]
=Loc 50 in src.spec.foo.
REGMEM
spec-%tmpvar-2.L3%20%d
1 : input.spec-%tmpvar-2.L3%20%d : BV:32
=Loc 51 in src.spec.foo.
REGMEM
spec-%tmpvar-3.L3%20%d
1 : input.spec-%tmpvar-3.L3%20%d : BV:32
=Loc 52 in src.spec.foo.
REGMEM
spec-%tmpvar-4.L3%20%d
1 : input.spec-%tmpvar-4.L3%20%d : BV:32
=Loc 53 in src.spec.foo.
REGMEM
spec-%tmpvar-5.L3%20%d
1 : input.spec-%tmpvar-5.L3%20%d : MAP[BV:32 -> BV:32]
=Loc 54 in src.spec.foo.
REGMEM
spec-%tmpvar-6.L3%20%d
1 : input.spec-%tmpvar-6.L3%20%d : BV:32
=Loc 55 in src.spec.foo.
REGMEM
spec-%tmpvar-7.L3%20%d
1 : input.spec-%tmpvar-7.L3%20%d : BV:32
=Loc 56 in src.spec.foo.
REGMEM
spec-%tmpvar-8.L3%20%d
1 : input.spec-%tmpvar-8.L3%20%d : MAP[BV:32 -> BV:32]
=Loc 57 in src.spec.foo.
REGMEM
spec-%tmpvar-9.L3%20%d
1 : input.spec-%tmpvar-9.L3%20%d : BV:32
=Loc 58 in src.spec.foo.
REGMEM
spec-%var-r-0.L3%6%bbentry
1 : input.spec-%var-r-0.L3%6%bbentry : BV:32
=Loc 59 in src.spec.foo.
REGMEM
spec-%tmpvar-21.L3%6%bbentry
1 : input.spec-%tmpvar-21.L3%6%bbentry : BV:32
=Loc 60 in src.spec.foo.
REGMEM
spec-%tmpvar-22.L3%6%bbentry
1 : input.spec-%tmpvar-22.L3%6%bbentry : BV:32
=Loc 61 in src.spec.foo.
REGMEM
src.spec-ghostvar.itervar.1.L3%6%bbentry
1 : input.src.spec-ghostvar.itervar.1.L3%6%bbentry : BV:32
=Loc 62 in src.spec.foo.
REGMEM
spec-%var-y1-0.L3%6%bbentry
1 : input.spec-%var-y1-0.L3%6%bbentry : BV:32
=Loc 63 in src.spec.foo.
REGMEM
spec-%tmpvar-11.L3%34%bbentry
1 : input.spec-%tmpvar-11.L3%34%bbentry : BV:32
=Loc 64 in src.spec.foo.
REGMEM
spec-%tmpvar-17.L3%34%bbentry
1 : input.spec-%tmpvar-17.L3%34%bbentry : BV:32
=Loc 65 in src.spec.foo.
REGMEM
spec-%var-u-0.L3%34%bbentry
1 : input.spec-%var-u-0.L3%34%bbentry : UNIT
=Loc 66 in src.spec.foo.
REGMEM
spec-%tmpvar-14.L3%34%bbentry
1 : input.spec-%tmpvar-14.L3%34%bbentry : BV:32
=Loc 67 in src.spec.foo.
REGMEM
spec-%tmpvar-16.L3%34%bbentry
1 : input.spec-%tmpvar-16.L3%34%bbentry : BV:32
=Loc 68 in src.spec.foo.
REGMEM
spec-%var-u2-0.L3%34%bbentry
1 : input.spec-%var-u2-0.L3%34%bbentry : UNIT
=Loc 69 in src.spec.foo.
REGMEM
spec-%tmpvar-18.L3%36%bbentry
1 : input.spec-%tmpvar-18.L3%36%bbentry : BV:32
=Locs end
=Liveness in src.spec.foo
=live locs at L0%0%d
1, 
=live locs at L3%6%bbentry
40, 41, 58, 
=live locs at L3%7%d
37, 40, 41, 58, 
=live locs at L3%8%bbentry
58, 
=live locs at L3%9%bbentry
40, 41, 58, 
=live locs at L3%20%d
38, 41, 47, 
=live locs at L3%21%bbentry

=live locs at L3%24%bbentry
38, 41, 47, 
=live locs at L3%27%d
39, 41, 48, 
=live locs at L3%28%bbentry

=live locs at L3%31%bbentry
39, 41, 48, 
=live locs at L3%34%bbentry
64, 
=live locs at L3%36%bbentry
42, 
=live locs at E0%0%d
45[f], 

=Definedness in src.spec.foo
=loc definedness at L0%0%d
1, 35, 36
=loc definedness at L3%6%bbentry
1, 35, 36, 40, 41, 58, 59, 60, 61
=loc definedness at L3%7%d
1, 35, 36, 37, 40, 41, 58, 59, 60, 61
=loc definedness at L3%8%bbentry
1, 35, 36, 37, 40, 41, 58, 59, 60, 61
=loc definedness at L3%9%bbentry
1, 35, 36, 37, 40, 41, 58, 59, 60, 61
=loc definedness at L3%20%d
1, 35, 36, 37, 38, 40, 41, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
=loc definedness at L3%21%bbentry
1, 35, 36, 37, 38, 40, 41, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
=loc definedness at L3%24%bbentry
1, 35, 36, 37, 38, 40, 41, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
=loc definedness at L3%27%d
1, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
=loc definedness at L3%28%bbentry
1, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
=loc definedness at L3%31%bbentry
1, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
=loc definedness at L3%34%bbentry
1, 35, 36, 37, 38, 40, 41, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64
=loc definedness at L3%36%bbentry
1, 35, 36, 37, 40, 41, 42, 58, 59, 60, 61
=loc definedness at E0%0%d
1, 35, 36, 37, 40, 41, 42, 43, 44, 45, 58, 59, 60, 61

=Branch affecting variable locs in src.spec.foo
=branch affecting variable locs at L0%0%d
1
=branch affecting variable locs at L3%6%bbentry
40, 41, 58
=branch affecting variable locs at L3%7%d
37, 40, 41, 58
=branch affecting variable locs at L3%8%bbentry

=branch affecting variable locs at L3%9%bbentry
40, 41, 58
=branch affecting variable locs at L3%20%d
38, 41, 47
=branch affecting variable locs at L3%21%bbentry

=branch affecting variable locs at L3%24%bbentry
38, 41, 47
=branch affecting variable locs at L3%27%d
39, 41, 48
=branch affecting variable locs at L3%28%bbentry

=branch affecting variable locs at L3%31%bbentry
39, 41, 48
=branch affecting variable locs at L3%34%bbentry

=branch affecting variable locs at L3%36%bbentry

=branch affecting variable locs at E0%0%d


=Relevant Memlabels in src.spec.foo
=relevant memlabels
=function: foo
memlabel-mem--heap
memlabel-mem--arg.0
=touched symbol ids

=relevant memlabels done
=graph_with_locs_done
=graph_with_edge_structures
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry for loc_id 40 {input.spec-%var-i-0.L3%6%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry for loc_id 41 {input.spec-%var-n-0.L3%6%bbentry }
1 : input.spec-%var-n-1 : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry for loc_id 58 {input.spec-%var-r-0.L3%6%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry for loc_id 59 {input.spec-%tmpvar-21.L3%6%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry for loc_id 60 {input.spec-%tmpvar-22.L3%6%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry for loc_id 61 {input.src.spec-ghostvar.itervar.1.L3%6%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L0%0%d=>L3%6%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%6%bbentry=>L3%7%d
=graph_with_edge_structures.loc_to_expr_map at L3%6%bbentry=>L3%7%d for loc_id 37 {input.spec-%tmpvar-0.L3%7%d }
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
2 : input.spec-%var-n-0.L3%6%bbentry : BV:32
3 : bvsgt(1, 2) : BOOL
=graph_with_edge_structures.loc_to_expr_map at L3%6%bbentry=>L3%7%d done
=graph_with_edge_structures.loc_to_expr_map at L3%7%d=>L3%8%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%7%d=>L3%8%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%7%d=>L3%9%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%7%d=>L3%9%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%8%bbentry=>L3%36%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%8%bbentry=>L3%36%bbentry for loc_id 42 {input.spec-%tmpvar-19.L3%36%bbentry }
1 : input.spec-%var-r-0.L3%6%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%8%bbentry=>L3%36%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 38 {input.spec-%tmpvar-10.L3%20%d }
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
14 : 10 { 0xa +1.119e129 } : BV:32
15 : input.spec-%var-r-0.L3%6%bbentry : BV:32
16 : bvadd(11, 15) : BV:32
17 : map_set(13, 14, 16) : MAP[BV:32 -> BV:32]
18 : map_get(17, 14) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 47 {input.spec-%var-m1-0.L3%20%d }
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
14 : 10 { 0xa +1.119e129 } : BV:32
15 : input.spec-%var-r-0.L3%6%bbentry : BV:32
16 : bvadd(11, 15) : BV:32
17 : map_set(13, 14, 16) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 49 {input.spec-%tmpvar-1.L3%20%d }
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 50 {input.spec-%tmpvar-2.L3%20%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 51 {input.spec-%tmpvar-3.L3%20%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 52 {input.spec-%tmpvar-4.L3%20%d }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.spec-%var-i-0.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 53 {input.spec-%tmpvar-5.L3%20%d }
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 54 {input.spec-%tmpvar-6.L3%20%d }
1 : 10 { 0xa +1.119e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 55 {input.spec-%tmpvar-7.L3%20%d }
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
2 : input.spec-%var-r-0.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 56 {input.spec-%tmpvar-8.L3%20%d }
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
14 : 10 { 0xa +1.119e129 } : BV:32
15 : input.spec-%var-r-0.L3%6%bbentry : BV:32
16 : bvadd(11, 15) : BV:32
17 : map_set(13, 14, 16) : MAP[BV:32 -> BV:32]
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d for loc_id 57 {input.spec-%tmpvar-9.L3%20%d }
1 : 10 { 0xa +1.119e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%9%bbentry=>L3%20%d done
=graph_with_edge_structures.loc_to_expr_map at L3%20%d=>L3%21%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%20%d=>L3%21%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%20%d=>L3%24%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%20%d=>L3%24%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%21%bbentry=>L3%34%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%21%bbentry=>L3%34%bbentry for loc_id 63 {input.spec-%tmpvar-11.L3%34%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%21%bbentry=>L3%34%bbentry for loc_id 64 {input.spec-%tmpvar-17.L3%34%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%21%bbentry=>L3%34%bbentry for loc_id 65 {input.spec-%var-u-0.L3%34%bbentry }
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L3%21%bbentry=>L3%34%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%24%bbentry=>L3%27%d
=graph_with_edge_structures.loc_to_expr_map at L3%24%bbentry=>L3%27%d for loc_id 39 {input.spec-%tmpvar-13.L3%27%d }
1 : input.spec-%var-m1-0.L3%20%d : MAP[BV:32 -> BV:32]
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=graph_with_edge_structures.loc_to_expr_map at L3%24%bbentry=>L3%27%d for loc_id 46 {input.spec-%tmpvar-12.L3%27%d }
1 : 4 { 0x4 +1.47e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%24%bbentry=>L3%27%d for loc_id 48 {input.spec-%var-y2-0.L3%27%d }
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%24%bbentry=>L3%27%d done
=graph_with_edge_structures.loc_to_expr_map at L3%27%d=>L3%28%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%27%d=>L3%28%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%27%d=>L3%31%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%27%d=>L3%31%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%28%bbentry=>L3%34%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%28%bbentry=>L3%34%bbentry for loc_id 64 {input.spec-%tmpvar-17.L3%34%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%28%bbentry=>L3%34%bbentry for loc_id 66 {input.spec-%tmpvar-14.L3%34%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%28%bbentry=>L3%34%bbentry for loc_id 67 {input.spec-%tmpvar-16.L3%34%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%28%bbentry=>L3%34%bbentry for loc_id 68 {input.spec-%var-u2-0.L3%34%bbentry }
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=graph_with_edge_structures.loc_to_expr_map at L3%28%bbentry=>L3%34%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%31%bbentry=>L3%6%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%31%bbentry=>L3%6%bbentry for loc_id 40 {input.spec-%var-i-0.L3%6%bbentry }
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%31%bbentry=>L3%6%bbentry for loc_id 58 {input.spec-%var-r-0.L3%6%bbentry }
1 : input.spec-%var-y2-0.L3%27%d : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%31%bbentry=>L3%6%bbentry for loc_id 61 {input.src.spec-ghostvar.itervar.1.L3%6%bbentry }
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.spec-ghostvar.itervar.1.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%31%bbentry=>L3%6%bbentry for loc_id 62 {input.spec-%var-y1-0.L3%6%bbentry }
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%31%bbentry=>L3%6%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%34%bbentry=>L3%36%bbentry
=graph_with_edge_structures.loc_to_expr_map at L3%34%bbentry=>L3%36%bbentry for loc_id 42 {input.spec-%tmpvar-19.L3%36%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%34%bbentry=>L3%36%bbentry for loc_id 69 {input.spec-%tmpvar-18.L3%36%bbentry }
1 : 0 { 0x0 +1.0e129 } : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%34%bbentry=>L3%36%bbentry done
=graph_with_edge_structures.loc_to_expr_map at L3%36%bbentry=>E0%0%d
=graph_with_edge_structures.loc_to_expr_map at L3%36%bbentry=>E0%0%d for loc_id 43 {input.spec-%tmpvar-20.E0%0%d }
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%36%bbentry=>E0%0%d for loc_id 44 {input.spec-%tmpvar-23.E0%0%d }
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%36%bbentry=>E0%0%d for loc_id 45 {input.spec-%tmpvar-24.E0%0%d }
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=graph_with_edge_structures.loc_to_expr_map at L3%36%bbentry=>E0%0%d done
=graph_with_edge_structures.loc_to_expr_map done
=graph_with_edge_structures done
=graph_with_ml_contiguity_info vacuous mls
vacuous mls at L0%0%d:
vacuous mls at L3%6%bbentry:
vacuous mls at L3%7%d:
vacuous mls at L3%8%bbentry:
vacuous mls at L3%9%bbentry:
vacuous mls at L3%20%d:
vacuous mls at L3%21%bbentry:
vacuous mls at L3%24%bbentry:
vacuous mls at L3%27%d:
vacuous mls at L3%28%bbentry:
vacuous mls at L3%31%bbentry:
vacuous mls at L3%34%bbentry:
vacuous mls at L3%36%bbentry:
vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info non-vacuous mls
non-vacuous mls at L0%0%d:
non-vacuous mls at L3%6%bbentry:
non-vacuous mls at L3%7%d:
non-vacuous mls at L3%8%bbentry:
non-vacuous mls at L3%9%bbentry:
non-vacuous mls at L3%20%d:
non-vacuous mls at L3%21%bbentry:
non-vacuous mls at L3%24%bbentry:
non-vacuous mls at L3%27%d:
non-vacuous mls at L3%28%bbentry:
non-vacuous mls at L3%31%bbentry:
non-vacuous mls at L3%34%bbentry:
non-vacuous mls at L3%36%bbentry:
non-vacuous mls at E0%0%d:
=graph_with_ml_contiguity_info discontiguous mls
discontiguous mls:
=graph_with_ml_contiguity_info done
=Available expressions in src.spec.foo
=avail_exprs begin
=loc 1
=loc_expr
140273 : input.spec-%var-n-1 : BV:32
=avail_exprs_val.m_is_top 1
=avail_exprs_val.end
=loc 41
=loc_expr
140392 : input.spec-%var-n-0.L3%6%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : input.spec-%var-n-1 : BV:32
=avail_exprs_val.end
=loc 46
=loc_expr
140416 : input.spec-%tmpvar-12.L3%27%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 49
=loc_expr
140417 : input.spec-%tmpvar-1.L3%20%d : MAP[BV:32 -> BV:32]
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
=avail_exprs_val.end
=loc 50
=loc_expr
140418 : input.spec-%tmpvar-2.L3%20%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 4 { 0x4 +1.47e129 } : BV:32
=avail_exprs_val.end
=loc 51
=loc_expr
140419 : input.spec-%tmpvar-3.L3%20%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
=avail_exprs_val.end
=loc 54
=loc_expr
140422 : input.spec-%tmpvar-6.L3%20%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 10 { 0xa +1.119e129 } : BV:32
=avail_exprs_val.end
=loc 57
=loc_expr
140425 : input.spec-%tmpvar-9.L3%20%d : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 10 { 0xa +1.119e129 } : BV:32
=avail_exprs_val.end
=loc 59
=loc_expr
140426 : input.spec-%tmpvar-21.L3%6%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 1 { 0x1 +1.11e129 } : BV:32
=avail_exprs_val.end
=loc 60
=loc_expr
140427 : input.spec-%tmpvar-22.L3%6%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 63
=loc_expr
140429 : input.spec-%tmpvar-11.L3%34%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 64
=loc_expr
140412 : input.spec-%tmpvar-17.L3%34%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 66
=loc_expr
140431 : input.spec-%tmpvar-14.L3%34%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 67
=loc_expr
140432 : input.spec-%tmpvar-16.L3%34%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=loc 69
=loc_expr
140434 : input.spec-%tmpvar-18.L3%36%bbentry : BV:32
=avail_exprs_val.m_is_top 0
=avail_exprs_val.m_expr
1 : 0 { 0x0 +1.0e129 } : BV:32
=avail_exprs_val.end
=avail_exprs end
=sprel_map in src.spec.foo
=loc 46 expr
1 : input.spec-%tmpvar-12.L3%27%d : BV:32
=loc 46 spreled-expr
140287 : 4 { 0x4 +1.47e129 } : BV:32
=loc 49 expr
1 : input.spec-%tmpvar-1.L3%20%d : MAP[BV:32 -> BV:32]
=loc 49 spreled-expr
140440 : Lambda15 : BV:32
140338 : 0 { 0x0 } : BOOL
140441 : lambda(140440, 140338) : FUNCTION[BV:32 -> BOOL]
140442 : Lambda16 : BV:32
140277 : 0 { 0x0 +1.0e129 } : BV:32
140443 : lambda(140442, 140277) : FUNCTION[BV:32 -> BV:32]
140444 : map(140441, 140443) : MAP[BV:32 -> BV:32]
140445 : sym_const(140444) : MAP[BV:32 -> BV:32]
=loc 50 expr
1 : input.spec-%tmpvar-2.L3%20%d : BV:32
=loc 50 spreled-expr
140287 : 4 { 0x4 +1.47e129 } : BV:32
=loc 51 expr
1 : input.spec-%tmpvar-3.L3%20%d : BV:32
=loc 51 spreled-expr
140276 : 1 { 0x1 +1.11e129 } : BV:32
=loc 54 expr
1 : input.spec-%tmpvar-6.L3%20%d : BV:32
=loc 54 spreled-expr
140294 : 10 { 0xa +1.119e129 } : BV:32
=loc 57 expr
1 : input.spec-%tmpvar-9.L3%20%d : BV:32
=loc 57 spreled-expr
140294 : 10 { 0xa +1.119e129 } : BV:32
=loc 59 expr
1 : input.spec-%tmpvar-21.L3%6%bbentry : BV:32
=loc 59 spreled-expr
140276 : 1 { 0x1 +1.11e129 } : BV:32
=loc 60 expr
1 : input.spec-%tmpvar-22.L3%6%bbentry : BV:32
=loc 60 spreled-expr
140277 : 0 { 0x0 +1.0e129 } : BV:32
=loc 63 expr
1 : input.spec-%tmpvar-11.L3%34%bbentry : BV:32
=loc 63 spreled-expr
140277 : 0 { 0x0 +1.0e129 } : BV:32
=loc 64 expr
1 : input.spec-%tmpvar-17.L3%34%bbentry : BV:32
=loc 64 spreled-expr
140277 : 0 { 0x0 +1.0e129 } : BV:32
=loc 66 expr
1 : input.spec-%tmpvar-14.L3%34%bbentry : BV:32
=loc 66 spreled-expr
140277 : 0 { 0x0 +1.0e129 } : BV:32
=loc 67 expr
1 : input.spec-%tmpvar-16.L3%34%bbentry : BV:32
=loc 67 spreled-expr
140277 : 0 { 0x0 +1.0e129 } : BV:32
=loc 69 expr
1 : input.spec-%tmpvar-18.L3%36%bbentry : BV:32
=loc 69 spreled-expr
140277 : 0 { 0x0 +1.0e129 } : BV:32
=sprel_map done
=lr-status-map
=lr-status-map at call-context {*;foo}
=loc_id 1 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 35 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 36 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, )
=loc_id 37 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 38 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 39 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 40 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 41 lr-status in lr-status-map at call-context {*;foo}
lr_status_bottom(; memlabel-mem--heap, memlabel-mem--arg.0, )
=loc_id 42 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 43 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 44 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 45 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 46 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 47 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 48 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 49 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 50 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 51 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 52 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 53 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 54 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 55 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 56 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 57 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 58 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 59 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 60 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 61 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 62 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 63 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 64 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 65 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 66 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 67 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 68 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=loc_id 69 lr-status in lr-status-map at call-context {*;foo}
lr_status_linearly_related(; )
=lr-status-map done
=lr-status-for-sprel-locs-map
=loc_id 46 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 49 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 50 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 51 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 54 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 57 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 59 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 60 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 63 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 64 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 66 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 67 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=loc_id 69 lr-status in lr-status-for-sprel-locs-map
lr_status_linearly_related(; )
=lr-status-for-sprel-locs-map done
=graph_with_aliasing_done
=Memlabel assertions empty
=Memlabel assertions done
=graph_with_proofs done
=graph_with_ce done
=graph_with_points done
=graph_with_guessing done
=graph_with_simplified_assets
=graph_with_simplified_assets.simplified_edgecond at L0%0%d=>L3%6%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%6%bbentry=>L3%7%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%7%d=>L3%8%bbentry
1 : input.spec-%tmpvar-0.L3%7%d : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%7%d=>L3%9%bbentry
1 : input.spec-%tmpvar-0.L3%7%d : BOOL
2 : not(1) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%8%bbentry=>L3%36%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%9%bbentry=>L3%20%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%20%d=>L3%21%bbentry
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%20%d=>L3%24%bbentry
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%21%bbentry=>L3%34%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%24%bbentry=>L3%27%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%27%d=>L3%28%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%27%d=>L3%31%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_is(1, 2) : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%28%bbentry=>L3%34%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%31%bbentry=>L3%6%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%34%bbentry=>L3%36%bbentry
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond at L3%36%bbentry=>E0%0%d
1 : 1 { 0x1 } : BOOL
=graph_with_simplified_assets.simplified_edgecond done
=graph_with_simplified_assets.simplified_to_state at L0%0%d=>L3%6%bbentry
=spec-%tmpvar-22.L3%6%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-21.L3%6%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%var-i-0.L3%6%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%var-n-0.L3%6%bbentry
1 : input.spec-%var-n-1 : BV:32
=spec-%var-r-0.L3%6%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=src.spec-ghostvar.itervar.1.L3%6%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%6%bbentry=>L3%7%d
=spec-%tmpvar-0.L3%7%d
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
2 : input.spec-%var-n-0.L3%6%bbentry : BV:32
3 : bvsgt(1, 2) : BOOL
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%7%d=>L3%8%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%7%d=>L3%9%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%8%bbentry=>L3%36%bbentry
=spec-%tmpvar-19.L3%36%bbentry
1 : input.spec-%var-r-0.L3%6%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%9%bbentry=>L3%20%d
=spec-%tmpvar-5.L3%20%d
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-6.L3%20%d
1 : 10 { 0xa +1.119e129 } : BV:32
=spec-%tmpvar-7.L3%20%d
1 : input.spec-%var-i-0.L3%6%bbentry : BV:32
2 : input.spec-%var-r-0.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%tmpvar-8.L3%20%d
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
14 : 10 { 0xa +1.119e129 } : BV:32
15 : input.spec-%var-r-0.L3%6%bbentry : BV:32
16 : bvadd(11, 15) : BV:32
17 : map_set(13, 14, 16) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-9.L3%20%d
1 : 10 { 0xa +1.119e129 } : BV:32
=spec-%tmpvar-1.L3%20%d
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
=spec-%tmpvar-10.L3%20%d
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
14 : 10 { 0xa +1.119e129 } : BV:32
15 : input.spec-%var-r-0.L3%6%bbentry : BV:32
16 : bvadd(11, 15) : BV:32
17 : map_set(13, 14, 16) : MAP[BV:32 -> BV:32]
18 : map_get(17, 14) : SUM[UNIT,BV:32]
=spec-%tmpvar-2.L3%20%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=spec-%tmpvar-3.L3%20%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=spec-%tmpvar-4.L3%20%d
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.spec-%var-i-0.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%var-m1-0.L3%20%d
1 : Lambda15 : BV:32
2 : 0 { 0x0 } : BOOL
3 : lambda(1, 2) : FUNCTION[BV:32 -> BOOL]
4 : Lambda16 : BV:32
5 : 0 { 0x0 +1.0e129 } : BV:32
6 : lambda(4, 5) : FUNCTION[BV:32 -> BV:32]
7 : map(3, 6) : MAP[BV:32 -> BV:32]
8 : sym_const(7) : MAP[BV:32 -> BV:32]
9 : 4 { 0x4 +1.47e129 } : BV:32
10 : 1 { 0x1 +1.11e129 } : BV:32
11 : input.spec-%var-i-0.L3%6%bbentry : BV:32
12 : bvadd(10, 11) : BV:32
13 : map_set(8, 9, 12) : MAP[BV:32 -> BV:32]
14 : 10 { 0xa +1.119e129 } : BV:32
15 : input.spec-%var-r-0.L3%6%bbentry : BV:32
16 : bvadd(11, 15) : BV:32
17 : map_set(13, 14, 16) : MAP[BV:32 -> BV:32]
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%20%d=>L3%21%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%20%d=>L3%24%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%21%bbentry=>L3%34%bbentry
=spec-%tmpvar-11.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-17.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u-0.L3%34%bbentry
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%24%bbentry=>L3%27%d
=spec-%tmpvar-12.L3%27%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=spec-%tmpvar-13.L3%27%d
1 : input.spec-%var-m1-0.L3%20%d : MAP[BV:32 -> BV:32]
2 : 4 { 0x4 +1.47e129 } : BV:32
3 : map_get(1, 2) : SUM[UNIT,BV:32]
=spec-%var-y2-0.L3%27%d
1 : input.spec-%tmpvar-10.L3%20%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%27%d=>L3%28%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%27%d=>L3%31%bbentry
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%28%bbentry=>L3%34%bbentry
=spec-%tmpvar-17.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-14.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-16.L3%34%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%var-u2-0.L3%34%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 0 { 0x0 +1.0e1025 } : INT
3 : sum_get(1, 2) : UNIT
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%31%bbentry=>L3%6%bbentry
=spec-%var-i-0.L3%6%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=spec-%var-r-0.L3%6%bbentry
1 : input.spec-%var-y2-0.L3%27%d : BV:32
=src.spec-ghostvar.itervar.1.L3%6%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
2 : input.src.spec-ghostvar.itervar.1.L3%6%bbentry : BV:32
3 : bvadd(1, 2) : BV:32
=spec-%var-y1-0.L3%6%bbentry
1 : input.spec-%tmpvar-13.L3%27%d : SUM[UNIT,BV:32]
2 : 1 { 0x1 +1.0e1025 } : INT
3 : sum_get(1, 2) : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%34%bbentry=>L3%36%bbentry
=spec-%tmpvar-19.L3%36%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=spec-%tmpvar-18.L3%36%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state at L3%36%bbentry=>E0%0%d
=spec-%tmpvar-20.E0%0%d
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=spec-%tmpvar-23.E0%0%d
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=spec-%tmpvar-24.E0%0%d
1 : input.spec-%tmpvar-19.L3%36%bbentry : BV:32
=state_end
=graph_with_simplified_assets.simplified_to_state done
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L3%6%bbentry
=graph_with_simplified_assets.simplified_assumes at L0%0%d=>L3%6%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%6%bbentry=>L3%7%d
=graph_with_simplified_assets.simplified_assumes at L3%6%bbentry=>L3%7%d done
=graph_with_simplified_assets.simplified_assumes at L3%7%d=>L3%8%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%7%d=>L3%8%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%7%d=>L3%9%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%7%d=>L3%9%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%8%bbentry=>L3%36%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%8%bbentry=>L3%36%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%9%bbentry=>L3%20%d
=graph_with_simplified_assets.simplified_assumes at L3%9%bbentry=>L3%20%d done
=graph_with_simplified_assets.simplified_assumes at L3%20%d=>L3%21%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%20%d=>L3%21%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%20%d=>L3%24%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%20%d=>L3%24%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%21%bbentry=>L3%34%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%21%bbentry=>L3%34%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%24%bbentry=>L3%27%d
=graph_with_simplified_assets.simplified_assumes at L3%24%bbentry=>L3%27%d done
=graph_with_simplified_assets.simplified_assumes at L3%27%d=>L3%28%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%27%d=>L3%28%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%27%d=>L3%31%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%27%d=>L3%31%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%28%bbentry=>L3%34%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%28%bbentry=>L3%34%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%31%bbentry=>L3%6%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%31%bbentry=>L3%6%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%34%bbentry=>L3%36%bbentry
=graph_with_simplified_assets.simplified_assumes at L3%34%bbentry=>L3%36%bbentry done
=graph_with_simplified_assets.simplified_assumes at L3%36%bbentry=>E0%0%d
=graph_with_simplified_assets.simplified_assumes at L3%36%bbentry=>E0%0%d done
=graph_with_simplified_assets.simplified_assumes done
=graph_with_simplified_assets done
=max-memlabel-varnum
0
=String-contents:
=Nextpc-map:
=Nextpc-map done
=suffixpaths for src.spec.foo
=suffixpath_at_L0%0%d for src.spec.foo
=suffixpath_at_L0%0%d.graph_edge_composition
(epsilon)
=suffixpath_at_L3%6%bbentry for src.spec.foo
=suffixpath_at_L3%6%bbentry.graph_edge_composition
(L0%0%d=>L3%6%bbentry)
=suffixpath_at_L3%7%d for src.spec.foo
=suffixpath_at_L3%7%d.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*(L3%6%bbentry=>L3%7%d))
=suffixpath_at_L3%8%bbentry for src.spec.foo
=suffixpath_at_L3%8%bbentry.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*(L3%7%d=>L3%8%bbentry)))
=suffixpath_at_L3%9%bbentry for src.spec.foo
=suffixpath_at_L3%9%bbentry.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*(L3%7%d=>L3%9%bbentry)))
=suffixpath_at_L3%20%d for src.spec.foo
=suffixpath_at_L3%20%d.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*(L3%9%bbentry=>L3%20%d))))
=suffixpath_at_L3%21%bbentry for src.spec.foo
=suffixpath_at_L3%21%bbentry.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*(L3%20%d=>L3%21%bbentry)))))
=suffixpath_at_L3%24%bbentry for src.spec.foo
=suffixpath_at_L3%24%bbentry.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*(L3%20%d=>L3%24%bbentry)))))
=suffixpath_at_L3%27%d for src.spec.foo
=suffixpath_at_L3%27%d.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%24%bbentry)*(L3%24%bbentry=>L3%27%d))))))
=suffixpath_at_L3%28%bbentry for src.spec.foo
=suffixpath_at_L3%28%bbentry.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%24%bbentry)*((L3%24%bbentry=>L3%27%d)*(L3%27%d=>L3%28%bbentry)))))))
=suffixpath_at_L3%31%bbentry for src.spec.foo
=suffixpath_at_L3%31%bbentry.graph_edge_composition
((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%24%bbentry)*((L3%24%bbentry=>L3%27%d)*(L3%27%d=>L3%31%bbentry)))))))
=suffixpath_at_L3%34%bbentry for src.spec.foo
=suffixpath_at_L3%34%bbentry.graph_edge_composition
(((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%21%bbentry)*(L3%21%bbentry=>L3%34%bbentry))))))+((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%24%bbentry)*((L3%24%bbentry=>L3%27%d)*((L3%27%d=>L3%28%bbentry)*(L3%28%bbentry=>L3%34%bbentry)))))))))
=suffixpath_at_L3%36%bbentry for src.spec.foo
=suffixpath_at_L3%36%bbentry.graph_edge_composition
(((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%8%bbentry)*(L3%8%bbentry=>L3%36%bbentry))))+((((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%21%bbentry)*(L3%21%bbentry=>L3%34%bbentry))))))+((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%24%bbentry)*((L3%24%bbentry=>L3%27%d)*((L3%27%d=>L3%28%bbentry)*(L3%28%bbentry=>L3%34%bbentry)))))))))*(L3%34%bbentry=>L3%36%bbentry)))
=suffixpath_at_E0%0%d for src.spec.foo
=suffixpath_at_E0%0%d.graph_edge_composition
((((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%8%bbentry)*(L3%8%bbentry=>L3%36%bbentry))))+((((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%21%bbentry)*(L3%21%bbentry=>L3%34%bbentry))))))+((L0%0%d=>L3%6%bbentry)*((L3%6%bbentry=>L3%7%d)*((L3%7%d=>L3%9%bbentry)*((L3%9%bbentry=>L3%20%d)*((L3%20%d=>L3%24%bbentry)*((L3%24%bbentry=>L3%27%d)*((L3%27%d=>L3%28%bbentry)*(L3%28%bbentry=>L3%34%bbentry)))))))))*(L3%34%bbentry=>L3%36%bbentry)))*(L3%36%bbentry=>E0%0%d))
=suffixpaths for src.spec.foo done
=tfg.assumes_around_edge
tfg.assumes_around_edge at L0%0%d=>L3%6%bbentry
tfg.assumes_around_edge at L0%0%d=>L3%6%bbentry done
tfg.assumes_around_edge at L3%6%bbentry=>L3%7%d
tfg.assumes_around_edge at L3%6%bbentry=>L3%7%d done
tfg.assumes_around_edge at L3%7%d=>L3%8%bbentry
tfg.assumes_around_edge at L3%7%d=>L3%8%bbentry done
tfg.assumes_around_edge at L3%7%d=>L3%9%bbentry
tfg.assumes_around_edge at L3%7%d=>L3%9%bbentry done
tfg.assumes_around_edge at L3%8%bbentry=>L3%36%bbentry
tfg.assumes_around_edge at L3%8%bbentry=>L3%36%bbentry done
tfg.assumes_around_edge at L3%9%bbentry=>L3%20%d
tfg.assumes_around_edge at L3%9%bbentry=>L3%20%d done
tfg.assumes_around_edge at L3%20%d=>L3%21%bbentry
tfg.assumes_around_edge at L3%20%d=>L3%21%bbentry done
tfg.assumes_around_edge at L3%20%d=>L3%24%bbentry
tfg.assumes_around_edge at L3%20%d=>L3%24%bbentry done
tfg.assumes_around_edge at L3%21%bbentry=>L3%34%bbentry
tfg.assumes_around_edge at L3%21%bbentry=>L3%34%bbentry done
tfg.assumes_around_edge at L3%24%bbentry=>L3%27%d
tfg.assumes_around_edge at L3%24%bbentry=>L3%27%d done
tfg.assumes_around_edge at L3%27%d=>L3%28%bbentry
tfg.assumes_around_edge at L3%27%d=>L3%28%bbentry done
tfg.assumes_around_edge at L3%27%d=>L3%31%bbentry
tfg.assumes_around_edge at L3%27%d=>L3%31%bbentry done
tfg.assumes_around_edge at L3%28%bbentry=>L3%34%bbentry
tfg.assumes_around_edge at L3%28%bbentry=>L3%34%bbentry done
tfg.assumes_around_edge at L3%31%bbentry=>L3%6%bbentry
tfg.assumes_around_edge at L3%31%bbentry=>L3%6%bbentry done
tfg.assumes_around_edge at L3%34%bbentry=>L3%36%bbentry
tfg.assumes_around_edge at L3%34%bbentry=>L3%36%bbentry done
tfg.assumes_around_edge at L3%36%bbentry=>E0%0%d
tfg.assumes_around_edge at L3%36%bbentry=>E0%0%d done
tfg.assumes_around_edge done
=TFGdone
=TFG_SPEC_done
=TFG_SSA_done
