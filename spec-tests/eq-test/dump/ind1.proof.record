==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x84 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x73 (or (bvugt input.memlabel-mem--arg.1_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) $x73) (or $x77 $x78)) (or $x83 $x84))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x8 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x8)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x10 (and $x11 $x12)))
 (let (($x17 (and $x10 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x84 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x83 (bvugt input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x78 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x73 (or (bvugt input.memlabel-mem--arg.1_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.1_end))))
 (let (($x67 (or (bvugt input.memlabel-mem--arg.0_begin ?x64) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x86 (and (and (and (and true $x67) $x73) (or $x77 $x78)) (or $x83 $x84))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false $x86)))))
 (let (($x52 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x51 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x51 $x52)))
 (let ((?x47 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x48 (= ?x47 (_ bv0 32))))
 (let ((?x43 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x45 (= ?x43 (_ bv0 32))))
 (let (($x49 (and $x45 $x48)))
 (let (($x34 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x33 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x35 (and $x33 $x34)))
 (let (($x36 (not $x35)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x30 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x30 $x31)))
 (let (($x38 (and (not $x32) $x36)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x24 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x26 (and $x24 $x25)))
 (let (($x27 (not $x26)))
 (let (($x22 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x21 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x23 (and $x21 $x22)))
 (let (($x29 (and (not $x23) $x27)))
 (let (($x39 (and $x29 $x38)))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x19 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x8 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x12 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x8)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x10 (and $x11 $x12)))
 (let (($x17 (and $x10 $x16)))
 (let (($x20 (and $x17 $x19)))
 (let (($x40 (and $x20 $x39)))
 (let (($x50 (and $x40 $x49)))
 (let (($x54 (and $x50 $x53)))
 (and $x54 $x90)))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.1_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b11111111111000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b11111111111000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b11111111100000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b11111111100000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b11111111100000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b11111111111000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x6de35f8f)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x61e31003)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x61e31000)
  (define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x6de35f8c)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x61e31000)
  (define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.1_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.1_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv3763329252 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv3120919140 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv3120919143 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv3763329255 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x105 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x106 (not $x105)))
 (let (($x169 (or $x105 $x106)))
 (let (($x170 (= $x169 false)))
 (let (($x171 (= $x170 true)))
 (let (($x161 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x160 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x162 (= $x160 $x161)))
 (let (($x158 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x156 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x159 (= $x156 $x158)))
 (let (($x163 (and $x159 $x162)))
 (let (($x164 (= $x163 true)))
 (let ((?x146 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x150 (bvuge ?x146 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x151 (= $x149 $x150)))
 (let (($x147 (= ?x146 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x148 (= $x145 $x147)))
 (let (($x152 (and $x148 $x151)))
 (let (($x153 (= $x152 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x138 (concat ?x135 (concat ?x132 ?x130)))))
 (let (($x140 (= ?x139 input.dst.llvm-%l)))
 (let (($x141 (= $x140 true)))
 (let (($x142 (= $x141 true)))
 (let (($x119 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x113 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x113)))
 (let (($x115 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x113)))
 (let (($x123 (or false (or false (and (and true (or $x114 $x115)) (or $x118 $x119))))))
 (let (($x125 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x123)))
 (let (($x109 (=> (and $x106 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x123)))
 (let (($x110 (= $x109 true)))
 (let (($x126 (= $x110 true)))
 (let (($x127 (= $x126 true)))
 (let ((?x57 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x98 (concat ?x95 (concat ?x91 ?x57)))))
 (let (($x100 (= ?x99 input.dst.llvm-%val)))
 (let (($x101 (= $x100 true)))
 (let (($x102 (= $x101 true)))
 (let ((?x39 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x9 (= (_ bv0 32) ?x39)))
 (let ((?x89 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x53 (= (_ bv0 32) ?x89)))
 (let ((?x78 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x78)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x56)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x60 (and $x42 $x54)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x82 $x60)))
 (let (($x73 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x44 $x23)))
 (let (($x48 (not $x32)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (and $x7 $x37)))
 (let (($x40 (and (not $x71) $x48)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x76 $x85)))
 (let (($x68 (not $x5)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x52 (and $x46 $x62)))
 (let (($x63 (and (not $x52) $x68)))
 (let (($x45 (and (and (and (and (and (and $x63 $x40) $x38) $x73) $x83) $x84) $x53)))
 (let (($x28 (and $x45 $x9)))
 (let (($x24 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x20 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x86 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x20)))
 (let (($x51 (or false (or false (and (and true (or $x15 $x86)) (or $x72 $x24))))))
 (let (($x75 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x51)))
 (let (($x6 (and $x75 $x28)))
 (let (($x47 (= $x6 true)))
 (let (($x33 (= $x47 true)))
 (let (($x87 (= $x33 true)))
 (let (($x25 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x8 (= $x25 true)))
 (let (($x35 (= $x8 true)))
 (let (($x43 (= $x35 true)))
 (let (($x88 (and $x43 $x87)))
 (let (($x103 (and $x88 $x102)))
 (let (($x128 (and $x103 $x127)))
 (let (($x143 (and $x128 $x142)))
 (let (($x154 (and $x143 $x153)))
 (let (($x165 (and $x154 $x164)))
 (let (($x14 (= false false)))
 (let (($x166 (and $x14 $x165)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x167 (and $x29 $x166)))
 (let (($x16 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x168 (and $x16 $x167)))
 (let (($x172 (=> $x168 $x171)))
 (not $x172)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x105 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x106 (not $x105)))
 (let (($x169 (or $x105 $x106)))
 (let (($x170 (= $x169 false)))
 (let (($x171 (= $x170 true)))
 (let (($x161 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x160 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x162 (= $x160 $x161)))
 (let (($x158 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x156 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x159 (= $x156 $x158)))
 (let (($x163 (and $x159 $x162)))
 (let (($x164 (= $x163 true)))
 (let ((?x146 (ite $x105 (_ bv0 32) (_ bv1 32))))
 (let (($x150 (bvuge ?x146 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x151 (= $x149 $x150)))
 (let (($x147 (= ?x146 (_ bv0 32))))
 (let (($x145 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x148 (= $x145 $x147)))
 (let (($x152 (and $x148 $x151)))
 (let (($x153 (= $x152 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x135 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x139 (concat ?x138 (concat ?x135 (concat ?x132 ?x130)))))
 (let (($x140 (= ?x139 input.dst.llvm-%l)))
 (let (($x141 (= $x140 true)))
 (let (($x142 (= $x141 true)))
 (let (($x119 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x113 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x118 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x113)))
 (let (($x115 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x114 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x113)))
 (let (($x123 (or false (or false (and (and true (or $x114 $x115)) (or $x118 $x119))))))
 (let (($x125 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x123)))
 (let (($x109 (=> (and $x106 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x123)))
 (let (($x110 (= $x109 true)))
 (let (($x126 (= $x110 true)))
 (let (($x127 (= $x126 true)))
 (let ((?x57 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x98 (concat ?x95 (concat ?x91 ?x57)))))
 (let (($x100 (= ?x99 input.dst.llvm-%val)))
 (let (($x101 (= $x100 true)))
 (let (($x102 (= $x101 true)))
 (let ((?x39 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x9 (= (_ bv0 32) ?x39)))
 (let ((?x89 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x53 (= (_ bv0 32) ?x89)))
 (let ((?x78 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x78)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x56)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x60 (and $x42 $x54)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x82 $x60)))
 (let (($x73 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x23 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x44 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x44 $x23)))
 (let (($x48 (not $x32)))
 (let (($x37 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x71 (and $x7 $x37)))
 (let (($x40 (and (not $x71) $x48)))
 (let (($x85 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x76 $x85)))
 (let (($x68 (not $x5)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x52 (and $x46 $x62)))
 (let (($x63 (and (not $x52) $x68)))
 (let (($x45 (and (and (and (and (and (and $x63 $x40) $x38) $x73) $x83) $x84) $x53)))
 (let (($x28 (and $x45 $x9)))
 (let (($x24 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x20 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x86 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x15 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x20)))
 (let (($x51 (or false (or false (and (and true (or $x15 $x86)) (or $x72 $x24))))))
 (let (($x75 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x51)))
 (let (($x6 (and $x75 $x28)))
 (let (($x47 (= $x6 true)))
 (let (($x33 (= $x47 true)))
 (let (($x87 (= $x33 true)))
 (let (($x25 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x8 (= $x25 true)))
 (let (($x35 (= $x8 true)))
 (let (($x43 (= $x35 true)))
 (let (($x88 (and $x43 $x87)))
 (let (($x103 (and $x88 $x102)))
 (let (($x128 (and $x103 $x127)))
 (let (($x143 (and $x128 $x142)))
 (let (($x154 (and $x143 $x153)))
 (let (($x165 (and $x154 $x164)))
 (let (($x14 (= false false)))
 (let (($x166 (and $x14 $x165)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x167 (and $x29 $x166)))
 (let (($x16 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x168 (and $x16 $x167)))
 (let (($x172 (=> $x168 $x171)))
 (not $x172)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b10100000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b01010000000000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b01010000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b01010000000000000000000000000000)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_10)
(function @fun_10
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x5a54e64c)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0a29b64c)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xbb)
                     #x0a29b64d
                     #x80)
              #x0a29b64c
              #xfc)
       #x0a29b64e
       #xff))
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xbbff80fc)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #xbbbbbbbb)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #xbbbbbbbb)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0a29b64f)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x5a54e64f)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0a29b64c)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x5a54e64c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv2147352579 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147352576 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv2147352576 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x111 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x112 (not $x111)))
 (let (($x180 (or $x111 $x112)))
 (let (($x181 (= $x180 false)))
 (let (($x182 (= $x181 true)))
 (let (($x172 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x58 (not $x172)))
 (let (($x168 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x36 (not $x168)))
 (let (($x173 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x11 (= $x172 $x173)))
 (let (($x170 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x171 (= $x168 $x170)))
 (let (($x174 (and (and (and $x171 $x11) $x36) $x58)))
 (let (($x175 (= $x174 true)))
 (let (($x164 (not true)))
 (let (($x165 (= $x164 true)))
 (let (($x154 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x158 (not $x154)))
 (let (($x150 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x157 (not $x150)))
 (let ((?x151 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x151 (_ bv1 32))))
 (let (($x156 (= $x154 $x155)))
 (let (($x152 (= ?x151 (_ bv0 32))))
 (let (($x153 (= $x150 $x152)))
 (let (($x161 (and (and (and $x153 $x156) $x157) $x158)))
 (let (($x162 (= $x161 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x144 (concat ?x143 (concat ?x140 (concat ?x133 ?x132)))))
 (let (($x145 (= ?x144 input.dst.llvm-%l)))
 (let (($x146 (= $x145 true)))
 (let (($x147 (= $x146 true)))
 (let (($x125 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x120 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x118)))
 (let (($x127 (or false (or false (and (and true (or $x119 $x120)) (or $x123 $x125))))))
 (let (($x137 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x127)))
 (let (($x114 (=> (and $x112 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x127)))
 (let (($x115 (= $x114 true)))
 (let (($x138 (= $x115 true)))
 (let (($x134 (= $x138 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x102 (concat ?x101 (concat ?x96 (concat ?x59 ?x94)))))
 (let (($x103 (= ?x102 input.dst.llvm-%val)))
 (let (($x104 (= $x103 true)))
 (let (($x105 (= $x104 true)))
 (let ((?x80 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x89 (= (_ bv0 32) ?x80)))
 (let ((?x78 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x78)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x64 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x83)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x77)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x54 (and $x82 $x56)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x67 $x54)))
 (let (($x73 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x23 $x32)))
 (let (($x40 (not $x48)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x71 $x66)))
 (let (($x74 (and (not $x44) $x40)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x85 $x5)))
 (let (($x63 (not $x68)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x16 $x69)))
 (let (($x37 (and (not $x76) $x63)))
 (let (($x6 (and (and (and (and (and (and $x37 $x74) $x17) $x73) $x60) $x64) $x84)))
 (let (($x47 (and $x6 $x89)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x18 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x18)))
 (let (($x13 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x18)))
 (let (($x62 (or false (or false (and (and true (or $x10 $x13)) (or $x50 $x49))))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x62)))
 (let (($x33 (and $x81 $x47)))
 (let (($x87 (= $x33 true)))
 (let (($x88 (= $x87 true)))
 (let (($x90 (= $x88 true)))
 (let (($x35 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x43 (= $x35 true)))
 (let (($x25 (= $x43 true)))
 (let (($x8 (= $x25 true)))
 (let (($x97 (and $x8 $x90)))
 (let (($x106 (and $x97 $x105)))
 (let (($x135 (and $x106 $x134)))
 (let (($x148 (and $x135 $x147)))
 (let (($x163 (and $x148 $x162)))
 (let (($x166 (and $x163 $x165)))
 (let (($x176 (and $x166 $x175)))
 (let (($x29 (= false false)))
 (let (($x177 (and $x29 $x176)))
 (let (($x21 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x178 (and $x21 $x177)))
 (let (($x34 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x179 (and $x34 $x178)))
 (let (($x183 (=> $x179 $x182)))
 (not $x183))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x111 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x112 (not $x111)))
 (let (($x180 (or $x111 $x112)))
 (let (($x181 (= $x180 false)))
 (let (($x182 (= $x181 true)))
 (let (($x172 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x58 (not $x172)))
 (let (($x168 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x36 (not $x168)))
 (let (($x173 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x11 (= $x172 $x173)))
 (let (($x170 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x171 (= $x168 $x170)))
 (let (($x174 (and (and (and $x171 $x11) $x36) $x58)))
 (let (($x175 (= $x174 true)))
 (let (($x164 (not true)))
 (let (($x165 (= $x164 true)))
 (let (($x154 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x158 (not $x154)))
 (let (($x150 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x157 (not $x150)))
 (let ((?x151 (ite $x111 (_ bv0 32) (_ bv1 32))))
 (let (($x155 (bvuge ?x151 (_ bv1 32))))
 (let (($x156 (= $x154 $x155)))
 (let (($x152 (= ?x151 (_ bv0 32))))
 (let (($x153 (= $x150 $x152)))
 (let (($x161 (and (and (and $x153 $x156) $x157) $x158)))
 (let (($x162 (= $x161 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x143 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x144 (concat ?x143 (concat ?x140 (concat ?x133 ?x132)))))
 (let (($x145 (= ?x144 input.dst.llvm-%l)))
 (let (($x146 (= $x145 true)))
 (let (($x147 (= $x146 true)))
 (let (($x125 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x120 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x118)))
 (let (($x127 (or false (or false (and (and true (or $x119 $x120)) (or $x123 $x125))))))
 (let (($x137 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x127)))
 (let (($x114 (=> (and $x112 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x127)))
 (let (($x115 (= $x114 true)))
 (let (($x138 (= $x115 true)))
 (let (($x134 (= $x138 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x101 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x102 (concat ?x101 (concat ?x96 (concat ?x59 ?x94)))))
 (let (($x103 (= ?x102 input.dst.llvm-%val)))
 (let (($x104 (= $x103 true)))
 (let (($x105 (= $x104 true)))
 (let ((?x80 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x89 (= (_ bv0 32) ?x80)))
 (let ((?x78 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x78)))
 (let ((?x83 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x64 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x83)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x56 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x77)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x54 (and $x82 $x56)))
 (let (($x67 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x60 (and $x67 $x54)))
 (let (($x73 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x23 $x32)))
 (let (($x40 (not $x48)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x71 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x44 (and $x71 $x66)))
 (let (($x74 (and (not $x44) $x40)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x85 $x5)))
 (let (($x63 (not $x68)))
 (let (($x69 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x76 (and $x16 $x69)))
 (let (($x37 (and (not $x76) $x63)))
 (let (($x6 (and (and (and (and (and (and $x37 $x74) $x17) $x73) $x60) $x64) $x84)))
 (let (($x47 (and $x6 $x89)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x18 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x18)))
 (let (($x13 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x18)))
 (let (($x62 (or false (or false (and (and true (or $x10 $x13)) (or $x50 $x49))))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x62)))
 (let (($x33 (and $x81 $x47)))
 (let (($x87 (= $x33 true)))
 (let (($x88 (= $x87 true)))
 (let (($x90 (= $x88 true)))
 (let (($x35 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x43 (= $x35 true)))
 (let (($x25 (= $x43 true)))
 (let (($x8 (= $x25 true)))
 (let (($x97 (and $x8 $x90)))
 (let (($x106 (and $x97 $x105)))
 (let (($x135 (and $x106 $x134)))
 (let (($x148 (and $x135 $x147)))
 (let (($x163 (and $x148 $x162)))
 (let (($x166 (and $x163 $x165)))
 (let (($x176 (and $x166 $x175)))
 (let (($x29 (= false false)))
 (let (($x177 (and $x29 $x176)))
 (let (($x21 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x178 (and $x21 $x177)))
 (let (($x34 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x179 (and $x34 $x178)))
 (let (($x183 (=> $x179 $x182)))
 (not $x183))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x124 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x116 (not $x124)))
 (let (($x113 (or $x124 $x116)))
 (let (($x185 (= $x113 false)))
 (let (($x186 (= $x185 true)))
 (let (($x70 (= false false)))
 (let (($x169 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x180 (=> $x169 $x70)))
 (let (($x178 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x173 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x179 (= $x173 $x178)))
 (let (($x176 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x177 (= $x169 $x176)))
 (let (($x182 (and (and $x177 $x179) $x180)))
 (let (($x183 (= $x182 true)))
 (let (($x11 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x129 (= $x173 $x11)))
 (let (($x171 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x172 (= $x169 $x171)))
 (let (($x167 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x108 (and (and $x167 $x172) $x129)))
 (let (($x58 (= $x108 true)))
 (let (($x154 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x161 (=> $x154 $x70)))
 (let ((?x155 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x160 (bvuge ?x155 (_ bv1 32))))
 (let (($x157 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x158 (= $x157 $x160)))
 (let (($x156 (= ?x155 (_ bv0 32))))
 (let (($x159 (= $x154 $x156)))
 (let (($x163 (and (and $x159 $x158) $x161)))
 (let (($x164 (= $x163 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x148 (concat ?x147 (concat ?x144 (concat ?x132 ?x130)))))
 (let (($x149 (= ?x148 input.dst.llvm-%l)))
 (let (($x150 (= $x149 true)))
 (let (($x151 (= $x150 true)))
 (let (($x127 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x122 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x125 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x122)))
 (let (($x138 (or false (or false (and (and true (or $x123 $x125)) (or $x126 $x127))))))
 (let (($x135 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x138)))
 (let (($x118 (=> (and $x116 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x138)))
 (let (($x119 (= $x118 true)))
 (let (($x142 (= $x119 true)))
 (let (($x143 (= $x142 true)))
 (let ((?x57 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x91 (concat ?x96 ?x57)))))
 (let (($x105 (= ?x104 input.dst.llvm-%val)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let ((?x64 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x64)))
 (let ((?x9 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x9)))
 (let ((?x54 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x54)))
 (let ((?x82 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x42 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x82)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (and $x39 $x42)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x73 $x77)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x23 $x32)))
 (let (($x40 (not $x48)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (and $x66 $x44)))
 (let (($x53 (and (not $x41) $x40)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x85 $x5)))
 (let (($x63 (not $x68)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x7 (and $x12 $x14)))
 (let (($x71 (and (not $x7) $x63)))
 (let (($x47 (and (and (and (and (and (and $x71 $x53) $x17) $x61) $x56) $x60) $x83)))
 (let (($x33 (and $x47 $x28)))
 (let (($x75 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x79 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x16 (or false (or false (and (and true (or $x72 $x79)) (or $x51 $x75))))))
 (let (($x76 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x16)))
 (let (($x87 (and $x76 $x33)))
 (let (($x88 (= $x87 true)))
 (let (($x90 (= $x88 true)))
 (let (($x97 (= $x90 true)))
 (let (($x52 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x34 (= $x52 true)))
 (let (($x43 (= $x34 true)))
 (let (($x35 (= $x43 true)))
 (let (($x98 (and $x35 $x97)))
 (let (($x111 (and $x98 $x107)))
 (let (($x139 (and $x111 $x143)))
 (let (($x152 (and $x139 $x151)))
 (let (($x165 (and $x152 $x164)))
 (let (($x174 (and $x165 $x58)))
 (let (($x184 (and $x174 $x183)))
 (let (($x20 (and $x70 $x184)))
 (let (($x31 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x93 (and $x31 $x20)))
 (let (($x55 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x131 (and $x55 $x93)))
 (let (($x187 (=> $x131 $x186)))
 (not $x187)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x124 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x116 (not $x124)))
 (let (($x113 (or $x124 $x116)))
 (let (($x185 (= $x113 false)))
 (let (($x186 (= $x185 true)))
 (let (($x70 (= false false)))
 (let (($x169 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x180 (=> $x169 $x70)))
 (let (($x178 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x173 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x179 (= $x173 $x178)))
 (let (($x176 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x177 (= $x169 $x176)))
 (let (($x182 (and (and $x177 $x179) $x180)))
 (let (($x183 (= $x182 true)))
 (let (($x11 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x129 (= $x173 $x11)))
 (let (($x171 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x172 (= $x169 $x171)))
 (let (($x167 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x108 (and (and $x167 $x172) $x129)))
 (let (($x58 (= $x108 true)))
 (let (($x154 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x161 (=> $x154 $x70)))
 (let ((?x155 (ite $x124 (_ bv0 32) (_ bv1 32))))
 (let (($x160 (bvuge ?x155 (_ bv1 32))))
 (let (($x157 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x158 (= $x157 $x160)))
 (let (($x156 (= ?x155 (_ bv0 32))))
 (let (($x159 (= $x154 $x156)))
 (let (($x163 (and (and $x159 $x158) $x161)))
 (let (($x164 (= $x163 true)))
 (let ((?x130 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x132 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x144 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x148 (concat ?x147 (concat ?x144 (concat ?x132 ?x130)))))
 (let (($x149 (= ?x148 input.dst.llvm-%l)))
 (let (($x150 (= $x149 true)))
 (let (($x151 (= $x150 true)))
 (let (($x127 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x122 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x126 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x125 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x122)))
 (let (($x138 (or false (or false (and (and true (or $x123 $x125)) (or $x126 $x127))))))
 (let (($x135 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x138)))
 (let (($x118 (=> (and $x116 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x138)))
 (let (($x119 (= $x118 true)))
 (let (($x142 (= $x119 true)))
 (let (($x143 (= $x142 true)))
 (let ((?x57 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x91 (concat ?x96 ?x57)))))
 (let (($x105 (= ?x104 input.dst.llvm-%val)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let ((?x64 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x64)))
 (let ((?x9 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x9)))
 (let ((?x54 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x60 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x54)))
 (let ((?x82 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x42 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x82)))
 (let (($x39 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (and $x39 $x42)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x56 (and $x73 $x77)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x17 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x23 $x32)))
 (let (($x40 (not $x48)))
 (let (($x44 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x41 (and $x66 $x44)))
 (let (($x53 (and (not $x41) $x40)))
 (let (($x5 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x85 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x68 (and $x85 $x5)))
 (let (($x63 (not $x68)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x12 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x7 (and $x12 $x14)))
 (let (($x71 (and (not $x7) $x63)))
 (let (($x47 (and (and (and (and (and (and $x71 $x53) $x17) $x61) $x56) $x60) $x83)))
 (let (($x33 (and $x47 $x28)))
 (let (($x75 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x13 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x51 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x79 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x13)))
 (let (($x16 (or false (or false (and (and true (or $x72 $x79)) (or $x51 $x75))))))
 (let (($x76 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x16)))
 (let (($x87 (and $x76 $x33)))
 (let (($x88 (= $x87 true)))
 (let (($x90 (= $x88 true)))
 (let (($x97 (= $x90 true)))
 (let (($x52 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x34 (= $x52 true)))
 (let (($x43 (= $x34 true)))
 (let (($x35 (= $x43 true)))
 (let (($x98 (and $x35 $x97)))
 (let (($x111 (and $x98 $x107)))
 (let (($x139 (and $x111 $x143)))
 (let (($x152 (and $x139 $x151)))
 (let (($x165 (and $x152 $x164)))
 (let (($x174 (and $x165 $x58)))
 (let (($x184 (and $x174 $x183)))
 (let (($x20 (and $x70 $x184)))
 (let (($x31 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x93 (and $x31 $x20)))
 (let (($x55 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x131 (and $x55 $x93)))
 (let (($x187 (=> $x131 $x186)))
 (not $x187)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b10100000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b01010000000000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b01010000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b01010000000000000000000000000000)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b00000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_10)
(function @fun_10
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x7ab00000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x40a8fffc)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x27)
                     #x40a8fffd
                     #x54)
              #x40a8fffc
              #xf8)
       #x40a8fffe
       #xe9))
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x27e954f8)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x27272727)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x27272727)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x40a8ffff)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x7ab00003)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x40a8fffc)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x7ab00000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv2147352579 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147352576 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv2147352576 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x120 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x121 (not $x120)))
 (let (($x191 (or $x120 $x121)))
 (let (($x192 (= $x191 false)))
 (let (($x193 (= $x192 true)))
 (let (($x8 (= false false)))
 (let (($x36 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x186 (=> $x36 $x8)))
 (let (($x11 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x129 (not $x11)))
 (let (($x113 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x185 (= $x11 $x113)))
 (let (($x93 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x131 (= $x36 $x93)))
 (let (($x25 (and (and (and $x131 $x185) $x129) $x186)))
 (let (($x101 (= $x25 true)))
 (let (($x177 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x178 (= $x11 $x177)))
 (let (($x175 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x176 (= $x36 $x175)))
 (let (($x58 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x182 (and (and (and (and (not $x36) $x129) $x58) $x176) $x178)))
 (let (($x183 (= $x182 true)))
 (let (($x160 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x166 (=> $x160 $x8)))
 (let (($x161 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x165 (not $x161)))
 (let ((?x158 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x163 (bvuge ?x158 (_ bv1 32))))
 (let (($x164 (= $x161 $x163)))
 (let (($x162 (= ?x158 (_ bv0 32))))
 (let (($x70 (= $x160 $x162)))
 (let (($x169 (and (and (and $x70 $x164) $x165) $x166)))
 (let (($x170 (= $x169 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x153 (concat ?x152 (concat ?x149 (concat ?x136 ?x132)))))
 (let (($x154 (= ?x153 input.dst.llvm-%l)))
 (let (($x155 (= $x154 true)))
 (let (($x156 (= $x155 true)))
 (let (($x135 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x126 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x126)))
 (let (($x137 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x126)))
 (let (($x143 (or false (or false (and (and true (or $x127 $x137)) (or $x138 $x135))))))
 (let (($x146 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x143)))
 (let (($x123 (=> (and $x121 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x143)))
 (let (($x125 (= $x123 true)))
 (let (($x147 (= $x125 true)))
 (let (($x141 (= $x147 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x92 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x107 (concat ?x106 (concat ?x99 (concat ?x92 ?x94)))))
 (let (($x111 (= ?x107 input.dst.llvm-%val)))
 (let (($x112 (= $x111 true)))
 (let (($x124 (= $x112 true)))
 (let ((?x89 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x9 (= (_ bv0 32) ?x89)))
 (let ((?x54 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x54)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x80 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x56)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x67)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x42 (and $x73 $x82)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x77 (and $x6 $x42)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x40 (and $x32 $x48)))
 (let (($x53 (not $x40)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x23 (and $x41 $x74)))
 (let (($x38 (and (not $x23) $x53)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x63 (and $x5 $x68)))
 (let (($x71 (not $x63)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x43 $x86)))
 (let (($x44 (and (not $x85) $x71)))
 (let (($x87 (and (and (and (and (and (and $x44 $x38) $x84) $x61) $x77) $x80) $x60)))
 (let (($x88 (and $x87 $x9)))
 (let (($x81 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x22 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x22)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x22)))
 (let (($x14 (or false (or false (and (and true (or $x50 $x26)) (or $x62 $x81))))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x14)))
 (let (($x90 (and $x37 $x88)))
 (let (($x97 (= $x90 true)))
 (let (($x98 (= $x97 true)))
 (let (($x100 (= $x98 true)))
 (let (($x24 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x55 (= $x24 true)))
 (let (($x18 (= $x55 true)))
 (let (($x69 (= $x18 true)))
 (let (($x102 (and $x69 $x100)))
 (let (($x116 (and $x102 $x124)))
 (let (($x144 (and $x116 $x141)))
 (let (($x159 (and $x144 $x156)))
 (let (($x171 (and $x159 $x170)))
 (let (($x184 (and $x171 $x183)))
 (let (($x140 (and $x184 $x101)))
 (let (($x128 (and $x8 $x140)))
 (let (($x27 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x189 (and $x27 $x128)))
 (let (($x31 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x190 (and $x31 $x189)))
 (let (($x194 (=> $x190 $x193)))
 (not $x194)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x120 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x121 (not $x120)))
 (let (($x191 (or $x120 $x121)))
 (let (($x192 (= $x191 false)))
 (let (($x193 (= $x192 true)))
 (let (($x8 (= false false)))
 (let (($x36 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x186 (=> $x36 $x8)))
 (let (($x11 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x129 (not $x11)))
 (let (($x113 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x185 (= $x11 $x113)))
 (let (($x93 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x131 (= $x36 $x93)))
 (let (($x25 (and (and (and $x131 $x185) $x129) $x186)))
 (let (($x101 (= $x25 true)))
 (let (($x177 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x178 (= $x11 $x177)))
 (let (($x175 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x176 (= $x36 $x175)))
 (let (($x58 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x182 (and (and (and (and (not $x36) $x129) $x58) $x176) $x178)))
 (let (($x183 (= $x182 true)))
 (let (($x160 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x166 (=> $x160 $x8)))
 (let (($x161 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x165 (not $x161)))
 (let ((?x158 (ite $x120 (_ bv0 32) (_ bv1 32))))
 (let (($x163 (bvuge ?x158 (_ bv1 32))))
 (let (($x164 (= $x161 $x163)))
 (let (($x162 (= ?x158 (_ bv0 32))))
 (let (($x70 (= $x160 $x162)))
 (let (($x169 (and (and (and $x70 $x164) $x165) $x166)))
 (let (($x170 (= $x169 true)))
 (let ((?x132 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x136 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x153 (concat ?x152 (concat ?x149 (concat ?x136 ?x132)))))
 (let (($x154 (= ?x153 input.dst.llvm-%l)))
 (let (($x155 (= $x154 true)))
 (let (($x156 (= $x155 true)))
 (let (($x135 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x126 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x126)))
 (let (($x137 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x126)))
 (let (($x143 (or false (or false (and (and true (or $x127 $x137)) (or $x138 $x135))))))
 (let (($x146 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x143)))
 (let (($x123 (=> (and $x121 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x143)))
 (let (($x125 (= $x123 true)))
 (let (($x147 (= $x125 true)))
 (let (($x141 (= $x147 true)))
 (let ((?x94 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x92 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x107 (concat ?x106 (concat ?x99 (concat ?x92 ?x94)))))
 (let (($x111 (= ?x107 input.dst.llvm-%val)))
 (let (($x112 (= $x111 true)))
 (let (($x124 (= $x112 true)))
 (let ((?x89 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x9 (= (_ bv0 32) ?x89)))
 (let ((?x54 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x60 (= (_ bv0 32) ?x54)))
 (let ((?x56 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x80 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x56)))
 (let ((?x67 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x82 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x67)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x42 (and $x73 $x82)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x77 (and $x6 $x42)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x84 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x40 (and $x32 $x48)))
 (let (($x53 (not $x40)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x41 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x23 (and $x41 $x74)))
 (let (($x38 (and (not $x23) $x53)))
 (let (($x68 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x63 (and $x5 $x68)))
 (let (($x71 (not $x63)))
 (let (($x86 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x43 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x85 (and $x43 $x86)))
 (let (($x44 (and (not $x85) $x71)))
 (let (($x87 (and (and (and (and (and (and $x44 $x38) $x84) $x61) $x77) $x80) $x60)))
 (let (($x88 (and $x87 $x9)))
 (let (($x81 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x22 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x62 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x22)))
 (let (($x26 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x50 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x22)))
 (let (($x14 (or false (or false (and (and true (or $x50 $x26)) (or $x62 $x81))))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x14)))
 (let (($x90 (and $x37 $x88)))
 (let (($x97 (= $x90 true)))
 (let (($x98 (= $x97 true)))
 (let (($x100 (= $x98 true)))
 (let (($x24 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x55 (= $x24 true)))
 (let (($x18 (= $x55 true)))
 (let (($x69 (= $x18 true)))
 (let (($x102 (and $x69 $x100)))
 (let (($x116 (and $x102 $x124)))
 (let (($x144 (and $x116 $x141)))
 (let (($x159 (and $x144 $x156)))
 (let (($x171 (and $x159 $x170)))
 (let (($x184 (and $x171 $x183)))
 (let (($x140 (and $x184 $x101)))
 (let (($x128 (and $x8 $x140)))
 (let (($x27 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x189 (and $x27 $x128)))
 (let (($x31 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x190 (and $x31 $x189)))
 (let (($x194 (=> $x190 $x193)))
 (not $x194)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x110 (not $x109)))
 (let (($x307 (or $x109 $x110)))
 (let (($x308 (= $x307 false)))
 (let (($x309 (= $x308 true)))
 (let (($x290 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x289 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x291 (= $x289 $x290)))
 (let (($x219 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x140 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x278 (and $x140 $x219)))
 (let (($x292 (=> $x278 $x291)))
 (let (($x286 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x284 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x287 (= $x284 $x286)))
 (let (($x288 (=> $x278 $x287)))
 (let (($x281 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x282 (=> $x278 $x281)))
 (let (($x275 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x276 (= $x219 $x275)))
 (let (($x277 (=> $x140 $x276)))
 (let (($x7 (= false false)))
 (let (($x202 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x249 (and $x140 $x202)))
 (let (($x250 (=> $x249 $x7)))
 (let (($x272 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x273 (= $x202 $x272)))
 (let (($x274 (=> $x140 $x273)))
 (let (($x269 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x270 (=> $x140 $x269)))
 (let (($x175 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x241 (=> $x175 $x7)))
 (let (($x266 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x267 (= $x140 $x266)))
 (let (($x264 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x265 (= $x175 $x264)))
 (let (($x298 (and (and (and (and (and (and $x265 $x267) $x241) $x270) $x274) $x250) $x277)))
 (let (($x301 (and (and (and $x298 $x282) $x288) $x292)))
 (let (($x302 (= $x301 true)))
 (let (($x251 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x252 (= $x219 $x251)))
 (let (($x253 (=> $x140 $x252)))
 (let (($x246 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x247 (= $x202 $x246)))
 (let (($x248 (=> $x140 $x247)))
 (let (($x243 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x244 (=> $x140 $x243)))
 (let (($x239 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x240 (= $x140 $x239)))
 (let (($x237 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x238 (= $x175 $x237)))
 (let (($x235 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x259 (and (and (and (and (and (and $x235 $x238) $x240) $x241) $x244) $x248) $x250)))
 (let (($x260 (and $x259 $x253)))
 (let (($x261 (= $x260 true)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x178 (concat ?x177 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x131 (concat ?x93 (concat ?x183 ?x178))))
 (let ((?x203 (bvadd ?x131 (_ bv4 32))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv1 32))) (select input.dst.llvm-mem ?x203))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv2 32))) ?x207))))
 (let (($x214 (= (_ bv0 32) ?x213)))
 (let ((?x215 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x215 (_ bv1 32))))
 (let (($x221 (= $x219 $x220)))
 (let (($x168 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x191 (and $x168 $x140)))
 (let (($x222 (=> $x191 $x221)))
 (let (($x216 (= ?x215 (_ bv0 32))))
 (let (($x217 (= $x202 $x216)))
 (let (($x218 (=> $x191 $x217)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem ?x131))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv2 32))) ?x34))))
 (let (($x199 (= input.spec-%var-l-0.2.1.2.0 ?x198)))
 (let (($x200 (=> $x191 $x199)))
 (let (($x113 (= (_ bv0 32) ?x131)))
 (let ((?x185 (ite $x113 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x185 (_ bv1 32))))
 (let (($x189 (= $x140 $x128)))
 (let (($x190 (=> $x168 $x189)))
 (let (($x25 (and $x168 $x175)))
 (let (($x101 (=> $x25 $x7)))
 (let (($x187 (= ?x185 (_ bv0 32))))
 (let (($x188 (= $x175 $x187)))
 (let (($x186 (=> $x168 $x188)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x36)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x129)))
 (let (($x58 (= input.spec-%var-l-0.2.0 ?x108)))
 (let (($x181 (=> $x168 $x58)))
 (let (($x163 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x169 (=> $x163 $x7)))
 (let ((?x164 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x164 (_ bv1 32))))
 (let (($x166 (= $x168 $x8)))
 (let (($x167 (= ?x164 (_ bv0 32))))
 (let (($x165 (= $x163 $x167)))
 (let (($x228 (and (and (and (and (and (and $x165 $x166) $x169) $x181) $x186) $x101) $x190)))
 (let (($x231 (and (and (and $x228 $x200) $x218) $x222)))
 (let (($x232 (= $x231 true)))
 (let ((?x136 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x157 (concat ?x159 (concat ?x154 (concat ?x145 ?x136)))))
 (let (($x160 (= ?x157 input.dst.llvm-%l)))
 (let (($x158 (= $x160 true)))
 (let (($x162 (= $x158 true)))
 (let (($x146 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x138 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x118 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x138)))
 (let (($x141 (or false (or false (and (and true (or $x135 $x118)) (or $x143 $x146))))))
 (let (($x151 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x141)))
 (let (($x127 (=> (and $x110 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x141)))
 (let (($x137 (= $x127 true)))
 (let (($x152 (= $x137 true)))
 (let (($x148 (= $x152 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x112 (concat ?x104 (concat ?x91 ?x95)))))
 (let (($x116 (= ?x124 input.dst.llvm-%val)))
 (let (($x117 (= $x116 true)))
 (let (($x120 (= $x117 true)))
 (let ((?x33 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x54 (= (_ bv0 32) ?x33)))
 (let ((?x56 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x80 (= (_ bv0 32) ?x56)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x77)))
 (let ((?x39 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x39)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x82 (and $x6 $x67)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x42 (and $x64 $x82)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x47 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x48 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x48 $x40)))
 (let (($x38 (not $x53)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x23 $x78)))
 (let (($x17 (and (not $x32) $x38)))
 (let (($x63 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x68 $x63)))
 (let (($x44 (not $x71)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x15 $x35)))
 (let (($x74 (and (not $x5) $x44)))
 (let (($x90 (and (and (and (and (and (and $x74 $x17) $x47) $x61) $x42) $x28) $x80)))
 (let (($x97 (and $x90 $x54)))
 (let (($x12 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x49 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x49)))
 (let (($x86 (or false (or false (and (and true (or $x13 $x55)) (or $x10 $x12))))))
 (let (($x66 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x86)))
 (let (($x98 (and $x66 $x97)))
 (let (($x100 (= $x98 true)))
 (let (($x102 (= $x100 true)))
 (let (($x103 (= $x102 true)))
 (let (($x50 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x75 (= $x50 true)))
 (let (($x29 (= $x75 true)))
 (let (($x16 (= $x29 true)))
 (let (($x105 (and $x16 $x103)))
 (let (($x121 (and $x105 $x120)))
 (let (($x149 (and $x121 $x148)))
 (let (($x70 (and $x149 $x162)))
 (let (($x233 (and $x70 $x232)))
 (let (($x262 (and $x233 $x261)))
 (let (($x303 (and $x262 $x302)))
 (let (($x304 (and $x7 $x303)))
 (let (($x81 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x305 (and $x81 $x304)))
 (let (($x19 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x306 (and $x19 $x305)))
 (let (($x310 (=> $x306 $x309)))
 (not $x310)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x109 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x110 (not $x109)))
 (let (($x307 (or $x109 $x110)))
 (let (($x308 (= $x307 false)))
 (let (($x309 (= $x308 true)))
 (let (($x290 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x289 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x291 (= $x289 $x290)))
 (let (($x219 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x140 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x278 (and $x140 $x219)))
 (let (($x292 (=> $x278 $x291)))
 (let (($x286 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x284 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x287 (= $x284 $x286)))
 (let (($x288 (=> $x278 $x287)))
 (let (($x281 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x282 (=> $x278 $x281)))
 (let (($x275 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x276 (= $x219 $x275)))
 (let (($x277 (=> $x140 $x276)))
 (let (($x7 (= false false)))
 (let (($x202 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x249 (and $x140 $x202)))
 (let (($x250 (=> $x249 $x7)))
 (let (($x272 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x273 (= $x202 $x272)))
 (let (($x274 (=> $x140 $x273)))
 (let (($x269 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x270 (=> $x140 $x269)))
 (let (($x175 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x241 (=> $x175 $x7)))
 (let (($x266 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x267 (= $x140 $x266)))
 (let (($x264 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x265 (= $x175 $x264)))
 (let (($x298 (and (and (and (and (and (and $x265 $x267) $x241) $x270) $x274) $x250) $x277)))
 (let (($x301 (and (and (and $x298 $x282) $x288) $x292)))
 (let (($x302 (= $x301 true)))
 (let (($x251 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x252 (= $x219 $x251)))
 (let (($x253 (=> $x140 $x252)))
 (let (($x246 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x247 (= $x202 $x246)))
 (let (($x248 (=> $x140 $x247)))
 (let (($x243 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x244 (=> $x140 $x243)))
 (let (($x239 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x240 (= $x140 $x239)))
 (let (($x237 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x238 (= $x175 $x237)))
 (let (($x235 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x259 (and (and (and (and (and (and $x235 $x238) $x240) $x241) $x244) $x248) $x250)))
 (let (($x260 (and $x259 $x253)))
 (let (($x261 (= $x260 true)))
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x178 (concat ?x177 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x93 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x131 (concat ?x93 (concat ?x183 ?x178))))
 (let ((?x203 (bvadd ?x131 (_ bv4 32))))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv1 32))) (select input.dst.llvm-mem ?x203))))
 (let ((?x213 (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x203 (_ bv2 32))) ?x207))))
 (let (($x214 (= (_ bv0 32) ?x213)))
 (let ((?x215 (ite $x214 (_ bv0 32) (_ bv1 32))))
 (let (($x220 (bvuge ?x215 (_ bv1 32))))
 (let (($x221 (= $x219 $x220)))
 (let (($x168 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x191 (and $x168 $x140)))
 (let (($x222 (=> $x191 $x221)))
 (let (($x216 (= ?x215 (_ bv0 32))))
 (let (($x217 (= $x202 $x216)))
 (let (($x218 (=> $x191 $x217)))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv1 32))) (select input.dst.llvm-mem ?x131))))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x131 (_ bv2 32))) ?x34))))
 (let (($x199 (= input.spec-%var-l-0.2.1.2.0 ?x198)))
 (let (($x200 (=> $x191 $x199)))
 (let (($x113 (= (_ bv0 32) ?x131)))
 (let ((?x185 (ite $x113 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x185 (_ bv1 32))))
 (let (($x189 (= $x140 $x128)))
 (let (($x190 (=> $x168 $x189)))
 (let (($x25 (and $x168 $x175)))
 (let (($x101 (=> $x25 $x7)))
 (let (($x187 (= ?x185 (_ bv0 32))))
 (let (($x188 (= $x175 $x187)))
 (let (($x186 (=> $x168 $x188)))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x129 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x36)))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x129)))
 (let (($x58 (= input.spec-%var-l-0.2.0 ?x108)))
 (let (($x181 (=> $x168 $x58)))
 (let (($x163 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x169 (=> $x163 $x7)))
 (let ((?x164 (ite $x109 (_ bv0 32) (_ bv1 32))))
 (let (($x8 (bvuge ?x164 (_ bv1 32))))
 (let (($x166 (= $x168 $x8)))
 (let (($x167 (= ?x164 (_ bv0 32))))
 (let (($x165 (= $x163 $x167)))
 (let (($x228 (and (and (and (and (and (and $x165 $x166) $x169) $x181) $x186) $x101) $x190)))
 (let (($x231 (and (and (and $x228 $x200) $x218) $x222)))
 (let (($x232 (= $x231 true)))
 (let ((?x136 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x145 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x157 (concat ?x159 (concat ?x154 (concat ?x145 ?x136)))))
 (let (($x160 (= ?x157 input.dst.llvm-%l)))
 (let (($x158 (= $x160 true)))
 (let (($x162 (= $x158 true)))
 (let (($x146 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x138 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x138)))
 (let (($x118 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x138)))
 (let (($x141 (or false (or false (and (and true (or $x135 $x118)) (or $x143 $x146))))))
 (let (($x151 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x141)))
 (let (($x127 (=> (and $x110 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x141)))
 (let (($x137 (= $x127 true)))
 (let (($x152 (= $x137 true)))
 (let (($x148 (= $x152 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x91 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x112 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x112 (concat ?x104 (concat ?x91 ?x95)))))
 (let (($x116 (= ?x124 input.dst.llvm-%val)))
 (let (($x117 (= $x116 true)))
 (let (($x120 (= $x117 true)))
 (let ((?x33 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x54 (= (_ bv0 32) ?x33)))
 (let ((?x56 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x80 (= (_ bv0 32) ?x56)))
 (let ((?x77 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x28 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x77)))
 (let ((?x39 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x67 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x39)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x82 (and $x6 $x67)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x42 (and $x64 $x82)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x47 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x40 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x48 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (and $x48 $x40)))
 (let (($x38 (not $x53)))
 (let (($x78 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x23 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x32 (and $x23 $x78)))
 (let (($x17 (and (not $x32) $x38)))
 (let (($x63 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x71 (and $x68 $x63)))
 (let (($x44 (not $x71)))
 (let (($x35 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x15 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x15 $x35)))
 (let (($x74 (and (not $x5) $x44)))
 (let (($x90 (and (and (and (and (and (and $x74 $x17) $x47) $x61) $x42) $x28) $x80)))
 (let (($x97 (and $x90 $x54)))
 (let (($x12 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x49 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x49)))
 (let (($x55 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x49)))
 (let (($x86 (or false (or false (and (and true (or $x13 $x55)) (or $x10 $x12))))))
 (let (($x66 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x86)))
 (let (($x98 (and $x66 $x97)))
 (let (($x100 (= $x98 true)))
 (let (($x102 (= $x100 true)))
 (let (($x103 (= $x102 true)))
 (let (($x50 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x75 (= $x50 true)))
 (let (($x29 (= $x75 true)))
 (let (($x16 (= $x29 true)))
 (let (($x105 (and $x16 $x103)))
 (let (($x121 (and $x105 $x120)))
 (let (($x149 (and $x121 $x148)))
 (let (($x70 (and $x149 $x162)))
 (let (($x233 (and $x70 $x232)))
 (let (($x262 (and $x233 $x261)))
 (let (($x303 (and $x262 $x302)))
 (let (($x304 (and $x7 $x303)))
 (let (($x81 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x305 (and $x81 $x304)))
 (let (($x19 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x306 (and $x19 $x305)))
 (let (($x310 (=> $x306 $x309)))
 (not $x310)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b10100000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b01010000000000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b01010000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b01010000000000000000000000000000)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4244635904 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4244635907 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4244635904 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv4244635655 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv4244635652 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv4244635652 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfbfff96c)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00ff6168)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00ff616b)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xfbfff96f)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00ff6168)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfbfff96c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x114 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x115 (not $x114)))
 (let (($x321 (or $x114 $x115)))
 (let (($x322 (= $x321 false)))
 (let (($x323 (= $x322 true)))
 (let (($x301 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x227 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x264 (and $x227 $x216)))
 (let (($x307 (and $x264 $x301)))
 (let (($x308 (not $x307)))
 (let (($x300 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x305 (and $x264 $x300)))
 (let (($x306 (not $x305)))
 (let (($x302 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x303 (= $x301 $x302)))
 (let (($x304 (=> $x264 $x303)))
 (let (($x290 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x291 (= $x300 $x290)))
 (let (($x292 (=> $x264 $x291)))
 (let (($x286 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x287 (=> $x264 $x286)))
 (let (($x282 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x299 (= $x216 $x282)))
 (let (($x283 (=> $x227 $x299)))
 (let (($x52 (= false false)))
 (let (($x200 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x253 (and $x227 $x200)))
 (let (($x260 (=> $x253 $x52)))
 (let (($x279 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x280 (= $x200 $x279)))
 (let (($x281 (=> $x227 $x280)))
 (let (($x277 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x298 (=> $x227 $x277)))
 (let (($x20 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x247 (=> $x20 $x52)))
 (let (($x297 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x275 (= $x227 $x297)))
 (let (($x274 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x296 (= $x20 $x274)))
 (let (($x57 (and (and (and (and (and (and $x296 $x275) $x247) $x298) $x281) $x260) $x283)))
 (let (($x315 (and (and (and (and (and $x57 $x287) $x292) $x304) $x306) $x308)))
 (let (($x316 (= $x315 true)))
 (let (($x265 (not $x264)))
 (let (($x261 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x262 (= $x216 $x261)))
 (let (($x263 (=> $x227 $x262)))
 (let (($x259 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x251 (= $x200 $x259)))
 (let (($x252 (=> $x227 $x251)))
 (let (($x258 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x249 (=> $x227 $x258)))
 (let (($x245 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x246 (= $x227 $x245)))
 (let (($x244 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x257 (= $x20 $x244)))
 (let (($x242 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x269 (and (and (and (and (and (and $x242 $x257) $x246) $x247) $x249) $x252) $x260)))
 (let (($x295 (and (and $x269 $x263) $x265)))
 (let (($x271 (= $x295 true)))
 (let (($x169 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x190 (and $x169 $x227)))
 (let (($x221 (and $x190 $x200)))
 (let (($x222 (not $x221)))
 (let (($x219 (and $x190 $x216)))
 (let (($x220 (not $x219)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x180 (concat ?x183 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x113 (concat ?x131 (concat ?x176 ?x180))))
 (let ((?x229 (bvadd ?x113 (_ bv4 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x211))))
 (let (($x207 (= (_ bv0 32) ?x204)))
 (let ((?x210 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (bvuge ?x210 (_ bv1 32))))
 (let (($x218 (= $x216 $x217)))
 (let (($x230 (=> $x190 $x218)))
 (let (($x213 (= ?x210 (_ bv0 32))))
 (let (($x214 (= $x200 $x213)))
 (let (($x215 (=> $x190 $x214)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem ?x113))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv2 32))) ?x197))))
 (let (($x122 (= input.spec-%var-l-0.2.1.2.0 ?x34)))
 (let (($x198 (=> $x190 $x122)))
 (let (($x185 (= (_ bv0 32) ?x113)))
 (let ((?x187 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x187 (_ bv1 32))))
 (let (($x128 (= $x227 $x140)))
 (let (($x189 (=> $x169 $x128)))
 (let (($x25 (and $x169 $x20)))
 (let (($x101 (=> $x25 $x52)))
 (let (($x188 (= ?x187 (_ bv0 32))))
 (let (($x186 (= $x20 $x188)))
 (let (($x226 (=> $x169 $x186)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x170)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x108)))
 (let (($x225 (= input.spec-%var-l-0.2.0 ?x181)))
 (let (($x174 (=> $x169 $x225)))
 (let (($x8 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x173 (=> $x8 $x52)))
 (let ((?x166 (ite $x114 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x166 (_ bv1 32))))
 (let (($x179 (= $x169 $x224)))
 (let (($x223 (= ?x166 (_ bv0 32))))
 (let (($x7 (= $x8 $x223)))
 (let (($x236 (and (and (and (and (and (and $x7 $x179) $x173) $x174) $x226) $x101) $x189)))
 (let (($x240 (and (and (and (and (and $x236 $x198) $x215) $x230) $x220) $x222)))
 (let (($x255 (= $x240 true)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x70 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x161 (concat ?x70 (concat ?x160 (concat ?x150 ?x145)))))
 (let (($x163 (= ?x161 input.dst.llvm-%l)))
 (let (($x164 (= $x163 true)))
 (let (($x167 (= $x164 true)))
 (let (($x151 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x143 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x143)))
 (let (($x123 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x146 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x143)))
 (let (($x148 (or false (or false (and (and true (or $x146 $x123)) (or $x141 $x151))))))
 (let (($x156 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x148)))
 (let (($x135 (=> (and $x115 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x148)))
 (let (($x118 (= $x135 true)))
 (let (($x159 (= $x118 true)))
 (let (($x153 (= $x159 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x120 (concat ?x117 (concat ?x107 (concat ?x99 ?x96)))))
 (let (($x121 (= ?x120 input.dst.llvm-%val)))
 (let (($x134 (= $x121 true)))
 (let (($x109 (= $x134 true)))
 (let ((?x88 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x88)))
 (let ((?x77 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x77)))
 (let ((?x42 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x9 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x42)))
 (let ((?x73 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x73)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x67 (and $x64 $x39)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x82 (and $x89 $x67)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x40 $x53)))
 (let (($x17 (not $x38)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x74 $x15)))
 (let (($x84 (and (not $x48) $x17)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x79 $x49)))
 (let (($x66 (not $x14)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x69 $x62)))
 (let (($x22 (and (not $x86) $x66)))
 (let (($x98 (and (and (and (and (and (and $x22 $x84) $x87) $x61) $x82) $x9) $x28)))
 (let (($x100 (and $x98 $x56)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x63 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x18 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x72 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x63)))
 (let (($x29 (or false (or false (and (and true (or $x76 $x72)) (or $x18 $x23))))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x29)))
 (let (($x102 (and $x43 $x100)))
 (let (($x103 (= $x102 true)))
 (let (($x105 (= $x103 true)))
 (let (($x106 (= $x105 true)))
 (let (($x13 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x65 (= $x13 true)))
 (let (($x68 (= $x65 true)))
 (let (($x27 (= $x68 true)))
 (let (($x111 (and $x27 $x106)))
 (let (($x110 (and $x111 $x109)))
 (let (($x154 (and $x110 $x153)))
 (let (($x165 (and $x154 $x167)))
 (let (($x241 (and $x165 $x255)))
 (let (($x272 (and $x241 $x271)))
 (let (($x317 (and $x272 $x316)))
 (let (($x318 (and $x52 $x317)))
 (let (($x126 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x319 (and $x126 $x318)))
 (let (($x21 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x320 (and $x21 $x319)))
 (let (($x324 (=> $x320 $x323)))
 (not $x324))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x114 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x115 (not $x114)))
 (let (($x321 (or $x114 $x115)))
 (let (($x322 (= $x321 false)))
 (let (($x323 (= $x322 true)))
 (let (($x301 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x227 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x264 (and $x227 $x216)))
 (let (($x307 (and $x264 $x301)))
 (let (($x308 (not $x307)))
 (let (($x300 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x305 (and $x264 $x300)))
 (let (($x306 (not $x305)))
 (let (($x302 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x303 (= $x301 $x302)))
 (let (($x304 (=> $x264 $x303)))
 (let (($x290 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x291 (= $x300 $x290)))
 (let (($x292 (=> $x264 $x291)))
 (let (($x286 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x287 (=> $x264 $x286)))
 (let (($x282 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x299 (= $x216 $x282)))
 (let (($x283 (=> $x227 $x299)))
 (let (($x52 (= false false)))
 (let (($x200 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x253 (and $x227 $x200)))
 (let (($x260 (=> $x253 $x52)))
 (let (($x279 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x280 (= $x200 $x279)))
 (let (($x281 (=> $x227 $x280)))
 (let (($x277 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x298 (=> $x227 $x277)))
 (let (($x20 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x247 (=> $x20 $x52)))
 (let (($x297 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x275 (= $x227 $x297)))
 (let (($x274 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x296 (= $x20 $x274)))
 (let (($x57 (and (and (and (and (and (and $x296 $x275) $x247) $x298) $x281) $x260) $x283)))
 (let (($x315 (and (and (and (and (and $x57 $x287) $x292) $x304) $x306) $x308)))
 (let (($x316 (= $x315 true)))
 (let (($x265 (not $x264)))
 (let (($x261 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x262 (= $x216 $x261)))
 (let (($x263 (=> $x227 $x262)))
 (let (($x259 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x251 (= $x200 $x259)))
 (let (($x252 (=> $x227 $x251)))
 (let (($x258 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x249 (=> $x227 $x258)))
 (let (($x245 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x246 (= $x227 $x245)))
 (let (($x244 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x257 (= $x20 $x244)))
 (let (($x242 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x269 (and (and (and (and (and (and $x242 $x257) $x246) $x247) $x249) $x252) $x260)))
 (let (($x295 (and (and $x269 $x263) $x265)))
 (let (($x271 (= $x295 true)))
 (let (($x169 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x190 (and $x169 $x227)))
 (let (($x221 (and $x190 $x200)))
 (let (($x222 (not $x221)))
 (let (($x219 (and $x190 $x216)))
 (let (($x220 (not $x219)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x180 (concat ?x183 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x176 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x113 (concat ?x131 (concat ?x176 ?x180))))
 (let ((?x229 (bvadd ?x113 (_ bv4 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv1 32))) (select input.dst.llvm-mem ?x229))))
 (let ((?x204 (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x229 (_ bv2 32))) ?x211))))
 (let (($x207 (= (_ bv0 32) ?x204)))
 (let ((?x210 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x217 (bvuge ?x210 (_ bv1 32))))
 (let (($x218 (= $x216 $x217)))
 (let (($x230 (=> $x190 $x218)))
 (let (($x213 (= ?x210 (_ bv0 32))))
 (let (($x214 (= $x200 $x213)))
 (let (($x215 (=> $x190 $x214)))
 (let ((?x197 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv1 32))) (select input.dst.llvm-mem ?x113))))
 (let ((?x34 (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x113 (_ bv2 32))) ?x197))))
 (let (($x122 (= input.spec-%var-l-0.2.1.2.0 ?x34)))
 (let (($x198 (=> $x190 $x122)))
 (let (($x185 (= (_ bv0 32) ?x113)))
 (let ((?x187 (ite $x185 (_ bv0 32) (_ bv1 32))))
 (let (($x140 (bvuge ?x187 (_ bv1 32))))
 (let (($x128 (= $x227 $x140)))
 (let (($x189 (=> $x169 $x128)))
 (let (($x25 (and $x169 $x20)))
 (let (($x101 (=> $x25 $x52)))
 (let (($x188 (= ?x187 (_ bv0 32))))
 (let (($x186 (= $x20 $x188)))
 (let (($x226 (=> $x169 $x186)))
 (let ((?x170 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x108 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x170)))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x108)))
 (let (($x225 (= input.spec-%var-l-0.2.0 ?x181)))
 (let (($x174 (=> $x169 $x225)))
 (let (($x8 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x173 (=> $x8 $x52)))
 (let ((?x166 (ite $x114 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x166 (_ bv1 32))))
 (let (($x179 (= $x169 $x224)))
 (let (($x223 (= ?x166 (_ bv0 32))))
 (let (($x7 (= $x8 $x223)))
 (let (($x236 (and (and (and (and (and (and $x7 $x179) $x173) $x174) $x226) $x101) $x189)))
 (let (($x240 (and (and (and (and (and $x236 $x198) $x215) $x230) $x220) $x222)))
 (let (($x255 (= $x240 true)))
 (let ((?x145 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x70 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x161 (concat ?x70 (concat ?x160 (concat ?x150 ?x145)))))
 (let (($x163 (= ?x161 input.dst.llvm-%l)))
 (let (($x164 (= $x163 true)))
 (let (($x167 (= $x164 true)))
 (let (($x151 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x143 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x141 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x143)))
 (let (($x123 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x146 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x143)))
 (let (($x148 (or false (or false (and (and true (or $x146 $x123)) (or $x141 $x151))))))
 (let (($x156 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x148)))
 (let (($x135 (=> (and $x115 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x148)))
 (let (($x118 (= $x135 true)))
 (let (($x159 (= $x118 true)))
 (let (($x153 (= $x159 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x120 (concat ?x117 (concat ?x107 (concat ?x99 ?x96)))))
 (let (($x121 (= ?x120 input.dst.llvm-%val)))
 (let (($x134 (= $x121 true)))
 (let (($x109 (= $x134 true)))
 (let ((?x88 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x56 (= (_ bv0 32) ?x88)))
 (let ((?x77 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x77)))
 (let ((?x42 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x9 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x42)))
 (let ((?x73 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x39 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x73)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x67 (and $x64 $x39)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x82 (and $x89 $x67)))
 (let (($x61 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x87 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x53 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x40 $x53)))
 (let (($x17 (not $x38)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x48 (and $x74 $x15)))
 (let (($x84 (and (not $x48) $x17)))
 (let (($x49 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x79 $x49)))
 (let (($x66 (not $x14)))
 (let (($x62 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x86 (and $x69 $x62)))
 (let (($x22 (and (not $x86) $x66)))
 (let (($x98 (and (and (and (and (and (and $x22 $x84) $x87) $x61) $x82) $x9) $x28)))
 (let (($x100 (and $x98 $x56)))
 (let (($x23 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x63 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x18 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x72 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x63)))
 (let (($x29 (or false (or false (and (and true (or $x76 $x72)) (or $x18 $x23))))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x29)))
 (let (($x102 (and $x43 $x100)))
 (let (($x103 (= $x102 true)))
 (let (($x105 (= $x103 true)))
 (let (($x106 (= $x105 true)))
 (let (($x13 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x65 (= $x13 true)))
 (let (($x68 (= $x65 true)))
 (let (($x27 (= $x68 true)))
 (let (($x111 (and $x27 $x106)))
 (let (($x110 (and $x111 $x109)))
 (let (($x154 (and $x110 $x153)))
 (let (($x165 (and $x154 $x167)))
 (let (($x241 (and $x165 $x255)))
 (let (($x272 (and $x241 $x271)))
 (let (($x317 (and $x272 $x316)))
 (let (($x318 (and $x52 $x317)))
 (let (($x126 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x319 (and $x126 $x318)))
 (let (($x21 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x320 (and $x21 $x319)))
 (let (($x324 (=> $x320 $x323)))
 (not $x324))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b10100000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b10100000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b01010000000000000000000000000011)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b01010000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b01010000000000000000000000000000)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xfffe1f7c)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x04fe1738)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x00))
  (define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x04fe173b)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xfffe1f7f)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x04fe1738)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xfffe1f7c)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483651 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv2147352579 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv2147352576 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv2147352576 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x35 (not $x21)))
 (let (($x193 (or $x21 $x35)))
 (let (($x59 (not $x193)))
 (let (($x131 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x183 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x195 (or $x183 $x131)))
 (let (($x133 (or $x195 $x59)))
 (let (($x192 (= $x133 true)))
 (let (($x196 (= $x192 true)))
 (let (($x101 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x25 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x235 (= $x25 $x101)))
 (let (($x226 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x188 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x234 (= $x188 $x226)))
 (let (($x227 (and $x234 $x235)))
 (let (($x140 (= $x227 true)))
 (let ((?x177 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x177 (_ bv1 32))))
 (let (($x180 (= $x183 $x93)))
 (let (($x176 (= ?x177 (_ bv0 32))))
 (let (($x182 (= $x131 $x176)))
 (let (($x178 (and $x182 $x180)))
 (let (($x113 (= $x178 true)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x225 (concat ?x181 (concat ?x11 (concat ?x129 ?x58)))))
 (let (($x174 (= ?x225 input.dst.llvm-%l)))
 (let (($x233 (= $x174 true)))
 (let (($x175 (= $x233 true)))
 (let (($x223 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x167 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x165 (and true $x167)))
 (let (($x168 (and $x167 $x165)))
 (let (($x7 (and $x168 $x223)))
 (let (($x169 (= true $x7)))
 (let (($x224 (=> $x35 $x169)))
 (let (($x179 (= $x224 true)))
 (let (($x231 (= $x179 true)))
 (let (($x52 (= $x231 true)))
 (let (($x157 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (= $x157 true)))
 (let (($x136 (= $x160 true)))
 (let (($x150 (= $x136 true)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x135 (concat ?x156 (concat ?x137 (concat ?x147 ?x123)))))
 (let (($x118 (= ?x135 input.dst.llvm-%val)))
 (let (($x159 (= $x118 true)))
 (let (($x153 (= $x159 true)))
 (let ((?x91 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x124 (= (_ bv0 32) ?x91)))
 (let ((?x99 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x96 (= (_ bv0 32) ?x99)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x107)))
 (let ((?x116 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x117 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x116)))
 (let (($x112 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x95 (and $x112 $x117)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x92 (and $x111 $x95)))
 (let (($x106 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (and $x77 $x28)))
 (let (($x88 (not $x98)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x42 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (and $x42 $x9)))
 (let (($x100 (and (not $x97) $x88)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (and $x6 $x73)))
 (let (($x67 (not $x39)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x74 $x15)))
 (let (($x54 (and (not $x64) $x67)))
 (let (($x139 (and (and (and (and (and (and $x54 $x100) $x103) $x106) $x92) $x104) $x96)))
 (let (($x114 (and $x139 $x124)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x40 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x40)))
 (let (($x38 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x40)))
 (let (($x61 (or false (or false (and (and true (or $x53 $x38)) (or $x80 $x47))))))
 (let (($x89 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x61)))
 (let (($x115 (and $x89 $x114)))
 (let (($x144 (= $x115 true)))
 (let (($x119 (= $x144 true)))
 (let (($x142 (= $x119 true)))
 (let (($x79 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x49 (= $x79 true)))
 (let (($x14 (= $x49 true)))
 (let (($x66 (= $x14 true)))
 (let (($x149 (and $x66 $x142)))
 (let (($x154 (and $x149 $x153)))
 (let (($x145 (and $x154 $x150)))
 (let (($x155 (and $x145 $x150)))
 (let (($x173 (and $x155 $x52)))
 (let (($x20 (and $x173 $x175)))
 (let (($x185 (and $x20 $x113)))
 (let (($x128 (and $x185 $x140)))
 (let (($x62 (= false false)))
 (let (($x189 (and $x62 $x128)))
 (let (($x69 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x236 (and $x69 $x189)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x190 (and $x29 $x236)))
 (let (($x41 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x55 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x85)))
 (let (($x23 (or false (or false (and (and true (or $x37 $x55)) (or $x10 $x41))))))
 (let (($x32 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x23)))
 (let (($x31 (=> (and $x35 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x23)))
 (let (($x228 (and $x31 $x190)))
 (let (($x191 (=> $x228 $x196)))
 (not $x191))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x21 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x35 (not $x21)))
 (let (($x193 (or $x21 $x35)))
 (let (($x59 (not $x193)))
 (let (($x131 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x183 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x195 (or $x183 $x131)))
 (let (($x133 (or $x195 $x59)))
 (let (($x192 (= $x133 true)))
 (let (($x196 (= $x192 true)))
 (let (($x101 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x25 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x235 (= $x25 $x101)))
 (let (($x226 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x188 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x234 (= $x188 $x226)))
 (let (($x227 (and $x234 $x235)))
 (let (($x140 (= $x227 true)))
 (let ((?x177 (ite $x21 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x177 (_ bv1 32))))
 (let (($x180 (= $x183 $x93)))
 (let (($x176 (= ?x177 (_ bv0 32))))
 (let (($x182 (= $x131 $x176)))
 (let (($x178 (and $x182 $x180)))
 (let (($x113 (= $x178 true)))
 (let ((?x58 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x129 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x225 (concat ?x181 (concat ?x11 (concat ?x129 ?x58)))))
 (let (($x174 (= ?x225 input.dst.llvm-%l)))
 (let (($x233 (= $x174 true)))
 (let (($x175 (= $x233 true)))
 (let (($x223 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x167 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x165 (and true $x167)))
 (let (($x168 (and $x167 $x165)))
 (let (($x7 (and $x168 $x223)))
 (let (($x169 (= true $x7)))
 (let (($x224 (=> $x35 $x169)))
 (let (($x179 (= $x224 true)))
 (let (($x231 (= $x179 true)))
 (let (($x52 (= $x231 true)))
 (let (($x157 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x160 (= $x157 true)))
 (let (($x136 (= $x160 true)))
 (let (($x150 (= $x136 true)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x135 (concat ?x156 (concat ?x137 (concat ?x147 ?x123)))))
 (let (($x118 (= ?x135 input.dst.llvm-%val)))
 (let (($x159 (= $x118 true)))
 (let (($x153 (= $x159 true)))
 (let ((?x91 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x124 (= (_ bv0 32) ?x91)))
 (let ((?x99 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x96 (= (_ bv0 32) ?x99)))
 (let ((?x107 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x104 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x107)))
 (let ((?x116 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x117 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x116)))
 (let (($x112 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x95 (and $x112 $x117)))
 (let (($x111 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x92 (and $x111 $x95)))
 (let (($x106 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x103 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x98 (and $x77 $x28)))
 (let (($x88 (not $x98)))
 (let (($x9 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x42 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x97 (and $x42 $x9)))
 (let (($x100 (and (not $x97) $x88)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x6 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x39 (and $x6 $x73)))
 (let (($x67 (not $x39)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x64 (and $x74 $x15)))
 (let (($x54 (and (not $x64) $x67)))
 (let (($x139 (and (and (and (and (and (and $x54 $x100) $x103) $x106) $x92) $x104) $x96)))
 (let (($x114 (and $x139 $x124)))
 (let (($x47 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x40 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x80 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x40)))
 (let (($x38 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x40)))
 (let (($x61 (or false (or false (and (and true (or $x53 $x38)) (or $x80 $x47))))))
 (let (($x89 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x61)))
 (let (($x115 (and $x89 $x114)))
 (let (($x144 (= $x115 true)))
 (let (($x119 (= $x144 true)))
 (let (($x142 (= $x119 true)))
 (let (($x79 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x49 (= $x79 true)))
 (let (($x14 (= $x49 true)))
 (let (($x66 (= $x14 true)))
 (let (($x149 (and $x66 $x142)))
 (let (($x154 (and $x149 $x153)))
 (let (($x145 (and $x154 $x150)))
 (let (($x155 (and $x145 $x150)))
 (let (($x173 (and $x155 $x52)))
 (let (($x20 (and $x173 $x175)))
 (let (($x185 (and $x20 $x113)))
 (let (($x128 (and $x185 $x140)))
 (let (($x62 (= false false)))
 (let (($x189 (and $x62 $x128)))
 (let (($x69 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x236 (and $x69 $x189)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x190 (and $x29 $x236)))
 (let (($x41 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x85 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x55 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x85)))
 (let (($x23 (or false (or false (and (and true (or $x37 $x55)) (or $x10 $x41))))))
 (let (($x32 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x23)))
 (let (($x31 (=> (and $x35 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x23)))
 (let (($x228 (and $x31 $x190)))
 (let (($x191 (=> $x228 $x196)))
 (not $x191))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x203)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x209)))
 (let (($x210 (= input.spec-%var-l-0.2.0 ?x207)))
 (let (($x213 (= $x210 true)))
 (let (($x214 (= $x213 true)))
 (let (($x194 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x75 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x34 (= $x75 $x194)))
 (let (($x146 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x197 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x232 (= $x197 $x146)))
 (let (($x122 (and $x232 $x34)))
 (let (($x198 (= $x122 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x236 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x236 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x193 (= $x63 $x195)))
 (let (($x190 (= ?x236 (_ bv0 32))))
 (let (($x189 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x228 (= $x189 $x190)))
 (let (($x59 (and $x228 $x193)))
 (let (($x133 (= $x59 true)))
 (let ((?x233 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x183 (concat ?x177 (concat ?x20 ?x233)))))
 (let (($x235 (= ?x93 input.dst.llvm-%l)))
 (let (($x227 (= $x235 true)))
 (let (($x140 (= $x227 true)))
 (let (($x180 (= input.dst.llvm-%l ?x93)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x162 (concat ?x154 (concat ?x118 (concat ?x123 ?x125)))))
 (let (($x225 (= input.dst.llvm-%val ?x162)))
 (let ((?x83 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x14 (= (_ bv0 32) ?x83)))
 (let ((?x66 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x66)))
 (let ((?x54 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x54)))
 (let ((?x100 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x105 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x100)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x74 (and $x15 $x105)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x102 (and $x139 $x74)))
 (let (($x9 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x111 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x28 (and $x49 $x64)))
 (let (($x72 (not $x28)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x73 $x98)))
 (let (($x112 (and (not $x38) $x72)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x80 $x31)))
 (let (($x117 (not $x109)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x97 $x42)))
 (let (($x90 (and (not $x61) $x117)))
 (let (($x119 (and (and (and (and (and (and $x90 $x112) $x111) $x9) $x102) $x120) $x84)))
 (let (($x142 (and $x119 $x14)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x69 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x104 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x69)))
 (let (($x19 (or false (or false (and (and true (or $x43 $x104)) (or $x91 $x92))))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x19)))
 (let (($x149 (and $x37 $x142)))
 (let (($x113 (and (and $x149 $x225) $x180)))
 (let (($x18 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x185 (and $x18 $x113)))
 (let (($x155 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x187 (and $x155 $x185)))
 (let (($x181 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x179 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x231 (and true $x179)))
 (let (($x52 (and $x179 $x231)))
 (let (($x172 (and $x52 $x181)))
 (let (($x11 (= true $x172)))
 (let (($x47 (not $x13)))
 (let (($x36 (=> $x47 $x11)))
 (let (($x188 (and $x36 $x187)))
 (let (($x186 (and true $x188)))
 (let (($x226 (= $x186 true)))
 (let (($x234 (= $x226 true)))
 (let (($x25 (= $x234 true)))
 (let (($x129 (= $x36 true)))
 (let (($x58 (= $x129 true)))
 (let (($x171 (= $x58 true)))
 (let (($x165 (= $x47 true)))
 (let (($x168 (= $x165 true)))
 (let (($x8 (= $x168 true)))
 (let (($x161 (= $x155 true)))
 (let (($x158 (= $x161 true)))
 (let (($x163 (= $x158 true)))
 (let (($x70 (= ?x162 input.dst.llvm-%val)))
 (let (($x157 (= $x70 true)))
 (let (($x160 (= $x157 true)))
 (let (($x143 (= $x149 true)))
 (let (($x148 (= $x143 true)))
 (let (($x156 (= $x148 true)))
 (let (($x6 (= $x18 true)))
 (let (($x77 (= $x6 true)))
 (let (($x124 (= $x77 true)))
 (let (($x151 (and $x124 $x156)))
 (let (($x136 (and $x151 $x160)))
 (let (($x164 (and $x136 $x163)))
 (let (($x167 (and $x164 $x163)))
 (let (($x166 (and $x167 $x8)))
 (let (($x170 (and $x166 $x171)))
 (let (($x101 (and $x170 $x25)))
 (let (($x128 (and $x101 $x140)))
 (let (($x192 (and $x128 $x133)))
 (let (($x196 (and $x192 $x133)))
 (let (($x237 (and $x196 $x198)))
 (let (($x199 (and $x63 $x237)))
 (let (($x114 (= false false)))
 (let (($x200 (and $x114 $x199)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x229 (and $x29 $x200)))
 (let (($x53 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x205 (and $x53 $x229)))
 (let (($x103 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x12 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x85 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x12)))
 (let (($x107 (or false (or false (and (and true (or $x46 $x85)) (or $x39 $x103))))))
 (let (($x99 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x107)))
 (let (($x79 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x107)))
 (let (($x206 (and $x79 $x205)))
 (let (($x215 (=> $x206 $x214)))
 (not $x215)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x203 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x209 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x203)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x209)))
 (let (($x210 (= input.spec-%var-l-0.2.0 ?x207)))
 (let (($x213 (= $x210 true)))
 (let (($x214 (= $x213 true)))
 (let (($x194 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x75 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x34 (= $x75 $x194)))
 (let (($x146 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x197 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x232 (= $x197 $x146)))
 (let (($x122 (and $x232 $x34)))
 (let (($x198 (= $x122 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x236 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x195 (bvuge ?x236 (_ bv1 32))))
 (let (($x63 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x193 (= $x63 $x195)))
 (let (($x190 (= ?x236 (_ bv0 32))))
 (let (($x189 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x228 (= $x189 $x190)))
 (let (($x59 (and $x228 $x193)))
 (let (($x133 (= $x59 true)))
 (let ((?x233 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x20 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x93 (concat ?x183 (concat ?x177 (concat ?x20 ?x233)))))
 (let (($x235 (= ?x93 input.dst.llvm-%l)))
 (let (($x227 (= $x235 true)))
 (let (($x140 (= $x227 true)))
 (let (($x180 (= input.dst.llvm-%l ?x93)))
 (let ((?x125 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x123 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x162 (concat ?x154 (concat ?x118 (concat ?x123 ?x125)))))
 (let (($x225 (= input.dst.llvm-%val ?x162)))
 (let ((?x83 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x14 (= (_ bv0 32) ?x83)))
 (let ((?x66 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x66)))
 (let ((?x54 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x120 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x54)))
 (let ((?x100 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x105 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x100)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x74 (and $x15 $x105)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x102 (and $x139 $x74)))
 (let (($x9 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x111 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x28 (and $x49 $x64)))
 (let (($x72 (not $x28)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x73 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x38 (and $x73 $x98)))
 (let (($x112 (and (not $x38) $x72)))
 (let (($x31 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x80 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x109 (and $x80 $x31)))
 (let (($x117 (not $x109)))
 (let (($x42 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x97 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x61 (and $x97 $x42)))
 (let (($x90 (and (not $x61) $x117)))
 (let (($x119 (and (and (and (and (and (and $x90 $x112) $x111) $x9) $x102) $x120) $x84)))
 (let (($x142 (and $x119 $x14)))
 (let (($x92 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x69 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x91 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x104 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x43 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x69)))
 (let (($x19 (or false (or false (and (and true (or $x43 $x104)) (or $x91 $x92))))))
 (let (($x37 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x19)))
 (let (($x149 (and $x37 $x142)))
 (let (($x113 (and (and $x149 $x225) $x180)))
 (let (($x18 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x185 (and $x18 $x113)))
 (let (($x155 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x187 (and $x155 $x185)))
 (let (($x181 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x179 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x231 (and true $x179)))
 (let (($x52 (and $x179 $x231)))
 (let (($x172 (and $x52 $x181)))
 (let (($x11 (= true $x172)))
 (let (($x47 (not $x13)))
 (let (($x36 (=> $x47 $x11)))
 (let (($x188 (and $x36 $x187)))
 (let (($x186 (and true $x188)))
 (let (($x226 (= $x186 true)))
 (let (($x234 (= $x226 true)))
 (let (($x25 (= $x234 true)))
 (let (($x129 (= $x36 true)))
 (let (($x58 (= $x129 true)))
 (let (($x171 (= $x58 true)))
 (let (($x165 (= $x47 true)))
 (let (($x168 (= $x165 true)))
 (let (($x8 (= $x168 true)))
 (let (($x161 (= $x155 true)))
 (let (($x158 (= $x161 true)))
 (let (($x163 (= $x158 true)))
 (let (($x70 (= ?x162 input.dst.llvm-%val)))
 (let (($x157 (= $x70 true)))
 (let (($x160 (= $x157 true)))
 (let (($x143 (= $x149 true)))
 (let (($x148 (= $x143 true)))
 (let (($x156 (= $x148 true)))
 (let (($x6 (= $x18 true)))
 (let (($x77 (= $x6 true)))
 (let (($x124 (= $x77 true)))
 (let (($x151 (and $x124 $x156)))
 (let (($x136 (and $x151 $x160)))
 (let (($x164 (and $x136 $x163)))
 (let (($x167 (and $x164 $x163)))
 (let (($x166 (and $x167 $x8)))
 (let (($x170 (and $x166 $x171)))
 (let (($x101 (and $x170 $x25)))
 (let (($x128 (and $x101 $x140)))
 (let (($x192 (and $x128 $x133)))
 (let (($x196 (and $x192 $x133)))
 (let (($x237 (and $x196 $x198)))
 (let (($x199 (and $x63 $x237)))
 (let (($x114 (= false false)))
 (let (($x200 (and $x114 $x199)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x229 (and $x29 $x200)))
 (let (($x53 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x205 (and $x53 $x229)))
 (let (($x103 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x12 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x85 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x12)))
 (let (($x107 (or false (or false (and (and true (or $x46 $x85)) (or $x39 $x103))))))
 (let (($x99 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x107)))
 (let (($x79 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x107)))
 (let (($x206 (and $x79 $x205)))
 (let (($x215 (=> $x206 $x214)))
 (not $x215)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b01010000000000000000000000000100)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00101000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b01010000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b01010000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00101000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00101000000000000000000000000011)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_19)
(function @fun_19
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_19 #b01010000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x4b980004)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xb9)
                     #x4b980004
                     #xd8)
              #x4b980005
              #xff)
       #x4b980007
       #x5f))
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x46464646)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x46464646)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x46464646)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x5fb9ffd8)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #xb9b9b9b9)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #xb9b9b9b9)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x4b980007)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x4b980004)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000800)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb649de78)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x59800004)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x97979797)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x68)
                     #xb649de7a
                     #x38)
              #xb649de7b
              #x0b)
       #xb649de78
       #x78))
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x97979797)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x97979797)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0b386878)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x68686868)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb649de7b)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x59800007)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb649de78)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x59800004)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x216)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x230)))
 (let (($x220 (= input.spec-%var-l-0.2.0 ?x219)))
 (let (($x239 (= $x220 true)))
 (let (($x221 (= $x239 true)))
 (let (($x201 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x212 (not $x201)))
 (let (($x229 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x202 (not $x229)))
 (let (($x211 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x208 (= $x201 $x211)))
 (let (($x206 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x204 (= $x229 $x206)))
 (let (($x207 (and (and (and $x204 $x208) $x202) $x212)))
 (let (($x210 (= $x207 true)))
 (let (($x198 (not true)))
 (let (($x237 (= $x198 true)))
 (let (($x6 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x22 (not $x6)))
 (let (($x193 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x197 (not $x193)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x59 (_ bv1 32))))
 (let (($x191 (= $x6 $x196)))
 (let (($x133 (= ?x59 (_ bv0 32))))
 (let (($x192 (= $x193 $x133)))
 (let (($x75 (and (and (and $x192 $x191) $x197) $x22)))
 (let (($x194 (= $x75 true)))
 (let ((?x233 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x176 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x186 (concat ?x188 (concat ?x113 (concat ?x176 ?x233)))))
 (let (($x190 (= ?x186 input.dst.llvm-%l)))
 (let (($x228 (= $x190 true)))
 (let (($x63 (= $x228 true)))
 (let (($x226 (= input.dst.llvm-%l ?x186)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x145 (concat ?x150 (concat ?x157 (concat ?x141 ?x123)))))
 (let (($x175 (= input.dst.llvm-%val ?x145)))
 (let ((?x119 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x119)))
 (let ((?x66 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x66)))
 (let ((?x120 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x120)))
 (let ((?x74 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x74)))
 (let (($x105 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x115 (and $x105 $x102)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x54 (and $x100 $x115)))
 (let (($x15 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x112 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (and $x112 $x82)))
 (let (($x111 (not $x45)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x64 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x72 (and $x64 $x28)))
 (let (($x17 (and (not $x72) $x111)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x90 $x73)))
 (let (($x38 (not $x98)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x104 $x33)))
 (let (($x49 (and (not $x117) $x38)))
 (let (($x156 (and (and (and (and (and (and $x49 $x17) $x89) $x15) $x54) $x144) $x84)))
 (let (($x151 (and $x156 $x83)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x92 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x92)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x92)))
 (let (($x80 (or false (or false (and (and true (or $x48 $x110)) (or $x37 $x97))))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x80)))
 (let (($x127 (and $x109 $x151)))
 (let (($x25 (and (and $x127 $x175) $x226)))
 (let (($x41 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x101 (and $x41 $x25)))
 (let (($x165 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x235 (and $x165 $x101)))
 (let (($x171 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x172 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x11 (and true $x172)))
 (let (($x36 (and $x172 $x11)))
 (let (($x170 (and $x36 $x171)))
 (let (($x225 (= true $x170)))
 (let (($x47 (not $x13)))
 (let (($x178 (=> $x47 $x225)))
 (let (($x227 (and $x178 $x235)))
 (let (($x140 (and true $x227)))
 (let (($x128 (= $x140 true)))
 (let (($x55 (= $x128 true)))
 (let (($x189 (= $x55 true)))
 (let (($x182 (= $x178 true)))
 (let (($x183 (= $x182 true)))
 (let (($x131 (= $x183 true)))
 (let (($x169 (= $x47 true)))
 (let (($x224 (= $x169 true)))
 (let (($x179 (= $x224 true)))
 (let (($x168 (= $x165 true)))
 (let (($x8 (= $x168 true)))
 (let (($x166 (= $x8 true)))
 (let (($x155 (= ?x145 input.dst.llvm-%val)))
 (let (($x161 (= $x155 true)))
 (let (($x158 (= $x161 true)))
 (let (($x153 (= $x127 true)))
 (let (($x154 (= $x153 true)))
 (let (($x152 (= $x154 true)))
 (let (($x62 (= $x41 true)))
 (let (($x56 (= $x62 true)))
 (let (($x69 (= $x56 true)))
 (let (($x135 (and $x69 $x152)))
 (let (($x163 (and $x135 $x158)))
 (let (($x7 (and $x163 $x166)))
 (let (($x223 (and $x7 $x166)))
 (let (($x231 (and $x223 $x179)))
 (let (($x177 (and $x231 $x131)))
 (let (($x236 (and $x177 $x189)))
 (let (($x195 (and $x236 $x63)))
 (let (($x34 (and $x195 $x194)))
 (let (($x122 (and $x34 $x194)))
 (let (($x199 (and $x122 $x237)))
 (let (($x213 (and $x199 $x210)))
 (let (($x214 (and $x6 $x213)))
 (let (($x96 (= false false)))
 (let (($x215 (and $x96 $x214)))
 (let (($x16 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x238 (and $x16 $x215)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x68 (and $x29 $x238)))
 (let (($x95 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x60 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x60)))
 (let (($x81 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x60)))
 (let (($x23 (or false (or false (and (and true (or $x86 $x81)) (or $x88 $x95))))))
 (let (($x53 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x23)))
 (let (($x138 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x23)))
 (let (($x10 (and $x138 $x68)))
 (let (($x222 (=> $x10 $x221)))
 (not $x222))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x216 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x230 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x216)))
 (let ((?x219 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x230)))
 (let (($x220 (= input.spec-%var-l-0.2.0 ?x219)))
 (let (($x239 (= $x220 true)))
 (let (($x221 (= $x239 true)))
 (let (($x201 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x212 (not $x201)))
 (let (($x229 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x202 (not $x229)))
 (let (($x211 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x208 (= $x201 $x211)))
 (let (($x206 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x204 (= $x229 $x206)))
 (let (($x207 (and (and (and $x204 $x208) $x202) $x212)))
 (let (($x210 (= $x207 true)))
 (let (($x198 (not true)))
 (let (($x237 (= $x198 true)))
 (let (($x6 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x22 (not $x6)))
 (let (($x193 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x197 (not $x193)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x59 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x59 (_ bv1 32))))
 (let (($x191 (= $x6 $x196)))
 (let (($x133 (= ?x59 (_ bv0 32))))
 (let (($x192 (= $x193 $x133)))
 (let (($x75 (and (and (and $x192 $x191) $x197) $x22)))
 (let (($x194 (= $x75 true)))
 (let ((?x233 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x176 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x188 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x186 (concat ?x188 (concat ?x113 (concat ?x176 ?x233)))))
 (let (($x190 (= ?x186 input.dst.llvm-%l)))
 (let (($x228 (= $x190 true)))
 (let (($x63 (= $x228 true)))
 (let (($x226 (= input.dst.llvm-%l ?x186)))
 (let ((?x123 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x157 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x150 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x145 (concat ?x150 (concat ?x157 (concat ?x141 ?x123)))))
 (let (($x175 (= input.dst.llvm-%val ?x145)))
 (let ((?x119 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x83 (= (_ bv0 32) ?x119)))
 (let ((?x66 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x66)))
 (let ((?x120 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x144 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x120)))
 (let ((?x74 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x102 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x74)))
 (let (($x105 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x115 (and $x105 $x102)))
 (let (($x100 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x54 (and $x100 $x115)))
 (let (($x15 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x89 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x112 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x45 (and $x112 $x82)))
 (let (($x111 (not $x45)))
 (let (($x28 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x64 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x72 (and $x64 $x28)))
 (let (($x17 (and (not $x72) $x111)))
 (let (($x73 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x98 (and $x90 $x73)))
 (let (($x38 (not $x98)))
 (let (($x33 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x104 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x117 (and $x104 $x33)))
 (let (($x49 (and (not $x117) $x38)))
 (let (($x156 (and (and (and (and (and (and $x49 $x17) $x89) $x15) $x54) $x144) $x84)))
 (let (($x151 (and $x156 $x83)))
 (let (($x97 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x92 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x92)))
 (let (($x110 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x48 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x92)))
 (let (($x80 (or false (or false (and (and true (or $x48 $x110)) (or $x37 $x97))))))
 (let (($x109 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x80)))
 (let (($x127 (and $x109 $x151)))
 (let (($x25 (and (and $x127 $x175) $x226)))
 (let (($x41 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x101 (and $x41 $x25)))
 (let (($x165 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x235 (and $x165 $x101)))
 (let (($x171 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x172 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x11 (and true $x172)))
 (let (($x36 (and $x172 $x11)))
 (let (($x170 (and $x36 $x171)))
 (let (($x225 (= true $x170)))
 (let (($x47 (not $x13)))
 (let (($x178 (=> $x47 $x225)))
 (let (($x227 (and $x178 $x235)))
 (let (($x140 (and true $x227)))
 (let (($x128 (= $x140 true)))
 (let (($x55 (= $x128 true)))
 (let (($x189 (= $x55 true)))
 (let (($x182 (= $x178 true)))
 (let (($x183 (= $x182 true)))
 (let (($x131 (= $x183 true)))
 (let (($x169 (= $x47 true)))
 (let (($x224 (= $x169 true)))
 (let (($x179 (= $x224 true)))
 (let (($x168 (= $x165 true)))
 (let (($x8 (= $x168 true)))
 (let (($x166 (= $x8 true)))
 (let (($x155 (= ?x145 input.dst.llvm-%val)))
 (let (($x161 (= $x155 true)))
 (let (($x158 (= $x161 true)))
 (let (($x153 (= $x127 true)))
 (let (($x154 (= $x153 true)))
 (let (($x152 (= $x154 true)))
 (let (($x62 (= $x41 true)))
 (let (($x56 (= $x62 true)))
 (let (($x69 (= $x56 true)))
 (let (($x135 (and $x69 $x152)))
 (let (($x163 (and $x135 $x158)))
 (let (($x7 (and $x163 $x166)))
 (let (($x223 (and $x7 $x166)))
 (let (($x231 (and $x223 $x179)))
 (let (($x177 (and $x231 $x131)))
 (let (($x236 (and $x177 $x189)))
 (let (($x195 (and $x236 $x63)))
 (let (($x34 (and $x195 $x194)))
 (let (($x122 (and $x34 $x194)))
 (let (($x199 (and $x122 $x237)))
 (let (($x213 (and $x199 $x210)))
 (let (($x214 (and $x6 $x213)))
 (let (($x96 (= false false)))
 (let (($x215 (and $x96 $x214)))
 (let (($x16 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x238 (and $x16 $x215)))
 (let (($x29 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x68 (and $x29 $x238)))
 (let (($x95 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x60 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x60)))
 (let (($x81 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x60)))
 (let (($x23 (or false (or false (and (and true (or $x86 $x81)) (or $x88 $x95))))))
 (let (($x53 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x23)))
 (let (($x138 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x23)))
 (let (($x10 (and $x138 $x68)))
 (let (($x222 (=> $x10 $x221)))
 (not $x222))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x222)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x43)))
 (let (($x35 (= input.spec-%var-l-0.2.0 ?x20)))
 (let (($x255 (= $x35 true)))
 (let (($x241 (= $x255 true)))
 (let (($x124 (= false false)))
 (let (($x206 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x10 (=> $x206 $x124)))
 (let (($x238 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x208 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x68 (= $x208 $x238)))
 (let (($x214 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x215 (= $x206 $x214)))
 (let (($x217 (and (and $x215 $x68) $x10)))
 (let (($x218 (= $x217 true)))
 (let (($x203 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x202 (= $x208 $x203)))
 (let (($x201 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x211 (= $x206 $x201)))
 (let (($x229 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x212 (and (and $x229 $x211) $x202)))
 (let (($x207 (= $x212 true)))
 (let (($x191 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x194 (=> $x191 $x124)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x146 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x146 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x75 (= $x62 $x22)))
 (let (($x197 (= ?x146 (_ bv0 32))))
 (let (($x232 (= $x191 $x197)))
 (let (($x122 (and (and $x232 $x75) $x194)))
 (let (($x198 (= $x122 true)))
 (let ((?x233 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x140 (concat ?x227 (concat ?x25 (concat ?x185 ?x233)))))
 (let (($x133 (= ?x140 input.dst.llvm-%l)))
 (let (($x192 (= $x133 true)))
 (let (($x6 (= $x192 true)))
 (let (($x128 (= input.dst.llvm-%l ?x140)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x167 (concat ?x164 (concat ?x161 (concat ?x159 ?x141)))))
 (let (($x184 (= input.dst.llvm-%val ?x167)))
 (let ((?x156 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x156)))
 (let ((?x66 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x66)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x144)))
 (let ((?x115 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x115)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x143 (and $x102 $x54)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x120 (and $x74 $x143)))
 (let (($x105 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x149 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x17 $x14)))
 (let (($x89 (not $x9)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x111 (and $x82 $x45)))
 (let (($x139 (and (not $x111) $x89)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x28 (and $x49 $x64)))
 (let (($x72 (not $x28)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (and $x110 $x121)))
 (let (($x112 (and (not $x38) $x72)))
 (let (($x152 (and (and (and (and (and (and $x112 $x139) $x149) $x105) $x120) $x148) $x84)))
 (let (($x135 (and $x152 $x119)))
 (let (($x104 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x97 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x97)))
 (let (($x61 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x97)))
 (let (($x90 (or false (or false (and (and true (or $x42 $x61)) (or $x109 $x104))))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x90)))
 (let (($x118 (and $x98 $x135)))
 (let (($x189 (and (and $x118 $x184) $x128)))
 (let (($x50 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x236 (and $x50 $x189)))
 (let (($x169 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x190 (and $x169 $x236)))
 (let (($x131 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x170 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x225 (and true $x170)))
 (let (($x178 (and $x170 $x225)))
 (let (($x177 (and $x178 $x131)))
 (let (($x175 (= true $x177)))
 (let (($x47 (not $x13)))
 (let (($x234 (=> $x47 $x175)))
 (let (($x228 (and $x234 $x190)))
 (let (($x63 (and true $x228)))
 (let (($x195 (= $x63 true)))
 (let (($x18 (= $x195 true)))
 (let (($x193 (= $x18 true)))
 (let (($x187 (= $x234 true)))
 (let (($x188 (= $x187 true)))
 (let (($x180 (= $x188 true)))
 (let (($x108 (= $x47 true)))
 (let (($x181 (= $x108 true)))
 (let (($x172 (= $x181 true)))
 (let (($x224 (= $x169 true)))
 (let (($x179 (= $x224 true)))
 (let (($x231 (= $x179 true)))
 (let (($x165 (= ?x167 input.dst.llvm-%val)))
 (let (($x168 (= $x165 true)))
 (let (($x8 (= $x168 true)))
 (let (($x136 (= $x118 true)))
 (let (($x150 (= $x136 true)))
 (let (($x162 (= $x150 true)))
 (let (($x91 (= $x50 true)))
 (let (($x31 (= $x91 true)))
 (let (($x92 (= $x31 true)))
 (let (($x70 (and $x92 $x162)))
 (let (($x166 (and $x70 $x8)))
 (let (($x173 (and $x166 $x231)))
 (let (($x52 (and $x173 $x231)))
 (let (($x11 (and $x52 $x172)))
 (let (($x113 (and $x11 $x180)))
 (let (($x59 (and $x113 $x193)))
 (let (($x196 (and $x59 $x6)))
 (let (($x237 (and $x196 $x198)))
 (let (($x199 (and $x237 $x198)))
 (let (($x210 (and $x199 $x207)))
 (let (($x174 (and $x210 $x218)))
 (let (($x126 (and $x62 $x174)))
 (let (($x137 (and $x124 $x126)))
 (let (($x77 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x216 (and $x77 $x137)))
 (let (($x16 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x230 (and $x16 $x216)))
 (let (($x79 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x103 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x39)))
 (let (($x106 (or false (or false (and (and true (or $x134 $x103)) (or $x99 $x79))))))
 (let (($x29 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x106)))
 (let (($x12 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x106)))
 (let (($x219 (and $x12 $x230)))
 (let (($x256 (=> $x219 $x241)))
 (not $x256)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x222 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x222)))
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x43)))
 (let (($x35 (= input.spec-%var-l-0.2.0 ?x20)))
 (let (($x255 (= $x35 true)))
 (let (($x241 (= $x255 true)))
 (let (($x124 (= false false)))
 (let (($x206 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x10 (=> $x206 $x124)))
 (let (($x238 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x208 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x68 (= $x208 $x238)))
 (let (($x214 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x215 (= $x206 $x214)))
 (let (($x217 (and (and $x215 $x68) $x10)))
 (let (($x218 (= $x217 true)))
 (let (($x203 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x202 (= $x208 $x203)))
 (let (($x201 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x211 (= $x206 $x201)))
 (let (($x229 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x212 (and (and $x229 $x211) $x202)))
 (let (($x207 (= $x212 true)))
 (let (($x191 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x194 (=> $x191 $x124)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x146 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x22 (bvuge ?x146 (_ bv1 32))))
 (let (($x62 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x75 (= $x62 $x22)))
 (let (($x197 (= ?x146 (_ bv0 32))))
 (let (($x232 (= $x191 $x197)))
 (let (($x122 (and (and $x232 $x75) $x194)))
 (let (($x198 (= $x122 true)))
 (let ((?x233 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x25 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x140 (concat ?x227 (concat ?x25 (concat ?x185 ?x233)))))
 (let (($x133 (= ?x140 input.dst.llvm-%l)))
 (let (($x192 (= $x133 true)))
 (let (($x6 (= $x192 true)))
 (let (($x128 (= input.dst.llvm-%l ?x140)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x159 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x167 (concat ?x164 (concat ?x161 (concat ?x159 ?x141)))))
 (let (($x184 (= input.dst.llvm-%val ?x167)))
 (let ((?x156 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x156)))
 (let ((?x66 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x66)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x148 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x144)))
 (let ((?x115 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x115)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x143 (and $x102 $x54)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x120 (and $x74 $x143)))
 (let (($x105 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x149 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x14 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x17 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x9 (and $x17 $x14)))
 (let (($x89 (not $x9)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x111 (and $x82 $x45)))
 (let (($x139 (and (not $x111) $x89)))
 (let (($x64 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x49 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x28 (and $x49 $x64)))
 (let (($x72 (not $x28)))
 (let (($x121 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x110 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x38 (and $x110 $x121)))
 (let (($x112 (and (not $x38) $x72)))
 (let (($x152 (and (and (and (and (and (and $x112 $x139) $x149) $x105) $x120) $x148) $x84)))
 (let (($x135 (and $x152 $x119)))
 (let (($x104 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x97 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x97)))
 (let (($x61 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x97)))
 (let (($x90 (or false (or false (and (and true (or $x42 $x61)) (or $x109 $x104))))))
 (let (($x98 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x90)))
 (let (($x118 (and $x98 $x135)))
 (let (($x189 (and (and $x118 $x184) $x128)))
 (let (($x50 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x236 (and $x50 $x189)))
 (let (($x169 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x190 (and $x169 $x236)))
 (let (($x131 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x170 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x225 (and true $x170)))
 (let (($x178 (and $x170 $x225)))
 (let (($x177 (and $x178 $x131)))
 (let (($x175 (= true $x177)))
 (let (($x47 (not $x13)))
 (let (($x234 (=> $x47 $x175)))
 (let (($x228 (and $x234 $x190)))
 (let (($x63 (and true $x228)))
 (let (($x195 (= $x63 true)))
 (let (($x18 (= $x195 true)))
 (let (($x193 (= $x18 true)))
 (let (($x187 (= $x234 true)))
 (let (($x188 (= $x187 true)))
 (let (($x180 (= $x188 true)))
 (let (($x108 (= $x47 true)))
 (let (($x181 (= $x108 true)))
 (let (($x172 (= $x181 true)))
 (let (($x224 (= $x169 true)))
 (let (($x179 (= $x224 true)))
 (let (($x231 (= $x179 true)))
 (let (($x165 (= ?x167 input.dst.llvm-%val)))
 (let (($x168 (= $x165 true)))
 (let (($x8 (= $x168 true)))
 (let (($x136 (= $x118 true)))
 (let (($x150 (= $x136 true)))
 (let (($x162 (= $x150 true)))
 (let (($x91 (= $x50 true)))
 (let (($x31 (= $x91 true)))
 (let (($x92 (= $x31 true)))
 (let (($x70 (and $x92 $x162)))
 (let (($x166 (and $x70 $x8)))
 (let (($x173 (and $x166 $x231)))
 (let (($x52 (and $x173 $x231)))
 (let (($x11 (and $x52 $x172)))
 (let (($x113 (and $x11 $x180)))
 (let (($x59 (and $x113 $x193)))
 (let (($x196 (and $x59 $x6)))
 (let (($x237 (and $x196 $x198)))
 (let (($x199 (and $x237 $x198)))
 (let (($x210 (and $x199 $x207)))
 (let (($x174 (and $x210 $x218)))
 (let (($x126 (and $x62 $x174)))
 (let (($x137 (and $x124 $x126)))
 (let (($x77 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x216 (and $x77 $x137)))
 (let (($x16 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x230 (and $x16 $x216)))
 (let (($x79 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x103 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x39)))
 (let (($x106 (or false (or false (and (and true (or $x134 $x103)) (or $x99 $x79))))))
 (let (($x29 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x106)))
 (let (($x12 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x106)))
 (let (($x219 (and $x12 $x230)))
 (let (($x256 (=> $x219 $x241)))
 (not $x256)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b01010000000000000000000000000100)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00101000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b01010000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b01010000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00101000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00101000000000000000000000000011)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_19)
(function @fun_19
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_19 #b01010000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00008000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x264bfffc)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb0e14024)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xf3)
                     #xb0e14025
                     #x58)
              #xb0e14024
              #x38)
       #xb0e14027
       #xb7))
  (define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xb7f35838)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #xf3f3f3f3)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #xf3f3f3f3)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb0e14027)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x264bffff)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb0e14024)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x264bfffc)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%l () (_ BitVec 32) (_ bv4293918712 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4294716856 32) (_ bv248 8)) (_ bv4294716857 32) (_ bv255 8)) (_ bv4294716858 32) (_ bv239 8)) (_ bv4294716859 32) (_ bv255 8)) (_ bv4293918712 32) (_ bv255 8)) (_ bv4293918713 32) (_ bv255 8)) (_ bv4293918714 32) (_ bv63 8)) (_ bv4293918715 32) (_ bv2 8)))
(define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32) (_ bv1828716544 32))
(define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv134217728 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32) (_ bv16384 32))
(define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32) (_ bv1828716544 32))
(define-fun input.spec-%var-l-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4294716856 32))
(define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32) (_ bv4294192636 32))
(define-fun input.dst.llvm-%val () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4294716856 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4294716859 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32) (_ bv4294192636 32))
(define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32) (_ bv4294192639 32))
(define-fun input.spec-%var-val-0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32) (_ bv1828716544 32))
(define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32) (_ bv1828716544 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x48)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x257 (= input.spec-%var-l-0.2.0 ?x244)))
 (let (($x266 (= $x257 true)))
 (let (($x245 (= $x266 true)))
 (let (($x50 (= false false)))
 (let (($x208 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x240 (=> $x208 $x50)))
 (let (($x202 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x212 (not $x202)))
 (let (($x219 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x147 (= $x202 $x219)))
 (let (($x216 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x230 (= $x208 $x216)))
 (let (($x221 (and (and (and $x230 $x147) $x212) $x240)))
 (let (($x220 (= $x221 true)))
 (let (($x238 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x68 (= $x202 $x238)))
 (let (($x214 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x215 (= $x208 $x214)))
 (let (($x210 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x218 (and (and (and (and (not $x208) $x212) $x210) $x215) $x68)))
 (let (($x174 (= $x218 true)))
 (let (($x34 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x200 (=> $x34 $x50)))
 (let (($x31 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x199 (not $x31)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x124 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x198 (bvuge ?x124 (_ bv1 32))))
 (let (($x237 (= $x31 $x198)))
 (let (($x194 (= ?x124 (_ bv0 32))))
 (let (($x122 (= $x34 $x194)))
 (let (($x206 (and (and (and $x122 $x237) $x199) $x200)))
 (let (($x204 (= $x206 true)))
 (let ((?x186 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x195 (concat ?x63 (concat ?x236 (concat ?x140 ?x186)))))
 (let (($x232 (= ?x195 input.dst.llvm-%l)))
 (let (($x62 (= $x232 true)))
 (let (($x22 (= $x62 true)))
 (let (($x18 (= input.dst.llvm-%l ?x195)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x158 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x223 (concat ?x8 (concat ?x158 ?x141)))))
 (let (($x185 (= input.dst.llvm-%val ?x169)))
 (let ((?x156 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x156)))
 (let ((?x84 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x152 (= (_ bv0 32) ?x84)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x66 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x154)))
 (let ((?x120 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x120)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x144 (and $x143 $x153)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x54 $x144)))
 (let (($x115 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x149 (and $x83 $x15)))
 (let (($x151 (not $x149)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (and $x9 $x89)))
 (let (($x105 (and (not $x139) $x151)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x111 (and $x82 $x45)))
 (let (($x142 (not $x111)))
 (let (($x80 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x112 (and $x67 $x80)))
 (let (($x14 (and (not $x112) $x142)))
 (let (($x70 (and (and (and (and (and (and $x14 $x105) $x74) $x115) $x148) $x66) $x152)))
 (let (($x157 (and $x70 $x119)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x87 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x64 (or false (or false (and (and true (or $x117 $x87)) (or $x110 $x121))))))
 (let (($x72 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x64)))
 (let (($x163 (and $x72 $x157)))
 (let (($x59 (and (and $x163 $x185) $x18)))
 (let (($x37 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x133 (and $x37 $x59)))
 (let (($x181 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x192 (and $x181 $x133)))
 (let (($x113 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x175 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x234 (and true $x175)))
 (let (($x187 (and $x175 $x234)))
 (let (($x184 (and $x187 $x113)))
 (let (($x55 (= true $x184)))
 (let (($x47 (not $x13)))
 (let (($x235 (=> $x47 $x55)))
 (let (($x6 (and $x235 $x192)))
 (let (($x196 (and true $x6)))
 (let (($x41 (= $x196 true)))
 (let (($x191 (= $x41 true)))
 (let (($x146 (= $x191 true)))
 (let (($x227 (= $x235 true)))
 (let (($x226 (= $x227 true)))
 (let (($x25 (= $x226 true)))
 (let (($x171 (= $x47 true)))
 (let (($x170 (= $x171 true)))
 (let (($x225 (= $x170 true)))
 (let (($x172 (= $x181 true)))
 (let (($x11 (= $x172 true)))
 (let (($x129 (= $x11 true)))
 (let (($x224 (= ?x169 input.dst.llvm-%val)))
 (let (($x179 (= $x224 true)))
 (let (($x231 (= $x179 true)))
 (let (($x164 (= $x163 true)))
 (let (($x145 (= $x164 true)))
 (let (($x155 (= $x145 true)))
 (let (($x73 (= $x37 true)))
 (let (($x97 (= $x73 true)))
 (let (($x42 (= $x97 true)))
 (let (($x161 (and $x42 $x155)))
 (let (($x173 (and $x161 $x231)))
 (let (($x36 (and $x173 $x129)))
 (let (($x58 (and $x36 $x129)))
 (let (($x178 (and $x58 $x225)))
 (let (($x93 (and $x178 $x25)))
 (let (($x197 (and $x93 $x146)))
 (let (($x75 (and $x197 $x22)))
 (let (($x201 (and $x75 $x204)))
 (let (($x211 (and $x201 $x204)))
 (let (($x126 (and $x211 $x174)))
 (let (($x222 (and $x126 $x220)))
 (let (($x43 (and $x31 $x222)))
 (let (($x20 (and $x50 $x43)))
 (let (($x69 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x35 (and $x69 $x20)))
 (let (($x77 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x255 (and $x77 $x35)))
 (let (($x138 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x88 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x95 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x88)))
 (let (($x40 (or false (or false (and (and true (or $x32 $x95)) (or $x53 $x138))))))
 (let (($x16 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x40)))
 (let (($x60 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x40)))
 (let (($x241 (and $x60 $x255)))
 (let (($x246 (=> $x241 $x245)))
 (not $x246)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x48)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x78)))
 (let (($x257 (= input.spec-%var-l-0.2.0 ?x244)))
 (let (($x266 (= $x257 true)))
 (let (($x245 (= $x266 true)))
 (let (($x50 (= false false)))
 (let (($x208 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x240 (=> $x208 $x50)))
 (let (($x202 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x212 (not $x202)))
 (let (($x219 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x147 (= $x202 $x219)))
 (let (($x216 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x230 (= $x208 $x216)))
 (let (($x221 (and (and (and $x230 $x147) $x212) $x240)))
 (let (($x220 (= $x221 true)))
 (let (($x238 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x68 (= $x202 $x238)))
 (let (($x214 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x215 (= $x208 $x214)))
 (let (($x210 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x218 (and (and (and (and (not $x208) $x212) $x210) $x215) $x68)))
 (let (($x174 (= $x218 true)))
 (let (($x34 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x200 (=> $x34 $x50)))
 (let (($x31 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x199 (not $x31)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x124 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x198 (bvuge ?x124 (_ bv1 32))))
 (let (($x237 (= $x31 $x198)))
 (let (($x194 (= ?x124 (_ bv0 32))))
 (let (($x122 (= $x34 $x194)))
 (let (($x206 (and (and (and $x122 $x237) $x199) $x200)))
 (let (($x204 (= $x206 true)))
 (let ((?x186 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x195 (concat ?x63 (concat ?x236 (concat ?x140 ?x186)))))
 (let (($x232 (= ?x195 input.dst.llvm-%l)))
 (let (($x62 (= $x232 true)))
 (let (($x22 (= $x62 true)))
 (let (($x18 (= input.dst.llvm-%l ?x195)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x158 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x8 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x223 (concat ?x8 (concat ?x158 ?x141)))))
 (let (($x185 (= input.dst.llvm-%val ?x169)))
 (let ((?x156 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x156)))
 (let ((?x84 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x152 (= (_ bv0 32) ?x84)))
 (let ((?x154 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x66 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x154)))
 (let ((?x120 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x153 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x120)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x144 (and $x143 $x153)))
 (let (($x54 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x148 (and $x54 $x144)))
 (let (($x115 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x74 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x149 (and $x83 $x15)))
 (let (($x151 (not $x149)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x139 (and $x9 $x89)))
 (let (($x105 (and (not $x139) $x151)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x111 (and $x82 $x45)))
 (let (($x142 (not $x111)))
 (let (($x80 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x112 (and $x67 $x80)))
 (let (($x14 (and (not $x112) $x142)))
 (let (($x70 (and (and (and (and (and (and $x14 $x105) $x74) $x115) $x148) $x66) $x152)))
 (let (($x157 (and $x70 $x119)))
 (let (($x121 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x33 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x110 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x33)))
 (let (($x87 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x117 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x33)))
 (let (($x64 (or false (or false (and (and true (or $x117 $x87)) (or $x110 $x121))))))
 (let (($x72 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x64)))
 (let (($x163 (and $x72 $x157)))
 (let (($x59 (and (and $x163 $x185) $x18)))
 (let (($x37 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x133 (and $x37 $x59)))
 (let (($x181 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x192 (and $x181 $x133)))
 (let (($x113 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x175 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x234 (and true $x175)))
 (let (($x187 (and $x175 $x234)))
 (let (($x184 (and $x187 $x113)))
 (let (($x55 (= true $x184)))
 (let (($x47 (not $x13)))
 (let (($x235 (=> $x47 $x55)))
 (let (($x6 (and $x235 $x192)))
 (let (($x196 (and true $x6)))
 (let (($x41 (= $x196 true)))
 (let (($x191 (= $x41 true)))
 (let (($x146 (= $x191 true)))
 (let (($x227 (= $x235 true)))
 (let (($x226 (= $x227 true)))
 (let (($x25 (= $x226 true)))
 (let (($x171 (= $x47 true)))
 (let (($x170 (= $x171 true)))
 (let (($x225 (= $x170 true)))
 (let (($x172 (= $x181 true)))
 (let (($x11 (= $x172 true)))
 (let (($x129 (= $x11 true)))
 (let (($x224 (= ?x169 input.dst.llvm-%val)))
 (let (($x179 (= $x224 true)))
 (let (($x231 (= $x179 true)))
 (let (($x164 (= $x163 true)))
 (let (($x145 (= $x164 true)))
 (let (($x155 (= $x145 true)))
 (let (($x73 (= $x37 true)))
 (let (($x97 (= $x73 true)))
 (let (($x42 (= $x97 true)))
 (let (($x161 (and $x42 $x155)))
 (let (($x173 (and $x161 $x231)))
 (let (($x36 (and $x173 $x129)))
 (let (($x58 (and $x36 $x129)))
 (let (($x178 (and $x58 $x225)))
 (let (($x93 (and $x178 $x25)))
 (let (($x197 (and $x93 $x146)))
 (let (($x75 (and $x197 $x22)))
 (let (($x201 (and $x75 $x204)))
 (let (($x211 (and $x201 $x204)))
 (let (($x126 (and $x211 $x174)))
 (let (($x222 (and $x126 $x220)))
 (let (($x43 (and $x31 $x222)))
 (let (($x20 (and $x50 $x43)))
 (let (($x69 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x35 (and $x69 $x20)))
 (let (($x77 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x255 (and $x77 $x35)))
 (let (($x138 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x88 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x88)))
 (let (($x95 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x32 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x88)))
 (let (($x40 (or false (or false (and (and true (or $x32 $x95)) (or $x53 $x138))))))
 (let (($x16 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x40)))
 (let (($x60 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x40)))
 (let (($x241 (and $x60 $x255)))
 (let (($x246 (=> $x241 $x245)))
 (not $x246)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x208)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x212)))
 (let (($x210 (= input.spec-%var-l-0.2.0 ?x207)))
 (let (($x347 (= $x210 true)))
 (let (($x348 (= $x347 true)))
 (let (($x328 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x327 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x329 (= $x327 $x328)))
 (let (($x253 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x222 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x320 (and $x222 $x253)))
 (let (($x330 (=> $x320 $x329)))
 (let (($x94 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x24 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x132 (= $x24 $x94)))
 (let (($x326 (=> $x320 $x132)))
 (let (($x323 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x324 (=> $x320 $x323)))
 (let (($x317 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x318 (= $x253 $x317)))
 (let (($x319 (=> $x222 $x318)))
 (let (($x37 (= false false)))
 (let (($x267 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x283 (and $x222 $x267)))
 (let (($x57 (=> $x283 $x37)))
 (let (($x308 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x315 (= $x267 $x308)))
 (let (($x316 (=> $x222 $x315)))
 (let (($x306 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x314 (=> $x222 $x306)))
 (let (($x214 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x214 $x37)))
 (let (($x304 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x313 (= $x222 $x304)))
 (let (($x302 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x303 (= $x214 $x302)))
 (let (($x336 (and (and (and (and (and (and $x303 $x313) $x278) $x314) $x316) $x57) $x319)))
 (let (($x339 (and (and (and $x336 $x324) $x326) $x330)))
 (let (($x340 (= $x339 true)))
 (let (($x284 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x285 (= $x253 $x284)))
 (let (($x286 (=> $x222 $x285)))
 (let (($x30 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x282 (= $x267 $x30)))
 (let (($x299 (=> $x222 $x282)))
 (let (($x280 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x281 (=> $x222 $x280)))
 (let (($x298 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x311 (= $x222 $x298)))
 (let (($x276 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x277 (= $x214 $x276)))
 (let (($x309 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x290 (and (and (and (and (and (and $x309 $x277) $x311) $x278) $x281) $x299) $x57)))
 (let (($x291 (and $x290 $x286)))
 (let (($x292 (= $x291 true)))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x68 (concat ?x238 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x174 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x230 (concat ?x216 (concat ?x174 ?x68))))
 (let ((?x65 (bvadd ?x230 (_ bv4 32))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x85))))
 (let (($x250 (= (_ bv0 32) ?x294)))
 (let ((?x259 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x260 (bvuge ?x259 (_ bv1 32))))
 (let (($x269 (= $x253 $x260)))
 (let (($x97 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x255 (and $x97 $x222)))
 (let (($x261 (=> $x255 $x269)))
 (let (($x251 (= ?x259 (_ bv0 32))))
 (let (($x252 (= $x267 $x251)))
 (let (($x268 (=> $x255 $x252)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x242))))
 (let (($x266 (= input.spec-%var-l-0.2.1.2.0 ?x257)))
 (let (($x245 (=> $x255 $x266)))
 (let (($x219 (= (_ bv0 32) ?x230)))
 (let ((?x147 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x147 (_ bv1 32))))
 (let (($x20 (= $x222 $x43)))
 (let (($x35 (=> $x97 $x20)))
 (let (($x221 (and $x97 $x214)))
 (let (($x220 (=> $x221 $x37)))
 (let (($x44 (= ?x147 (_ bv0 32))))
 (let (($x239 (= $x214 $x44)))
 (let (($x240 (=> $x97 $x239)))
 (let (($x10 (=> $x97 $x210)))
 (let (($x229 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x204 (=> $x229 $x37)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x199 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x200 (bvuge ?x199 (_ bv1 32))))
 (let (($x206 (= $x97 $x200)))
 (let (($x205 (= ?x199 (_ bv0 32))))
 (let (($x50 (= $x229 $x205)))
 (let (($x295 (and (and (and (and (and (and $x50 $x206) $x204) $x10) $x240) $x220) $x35)))
 (let (($x273 (and (and (and $x295 $x245) $x268) $x261)))
 (let (($x274 (= $x273 true)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x41 (concat ?x196 (concat ?x133 (concat ?x195 ?x128)))))
 (let (($x122 (= ?x41 input.dst.llvm-%l)))
 (let (($x31 (= $x122 true)))
 (let (($x198 (= $x31 true)))
 (let (($x191 (= input.dst.llvm-%l ?x41)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x108 (concat ?x231 (concat ?x166 ?x141)))))
 (let (($x140 (= input.dst.llvm-%val ?x181)))
 (let ((?x156 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x156)))
 (let ((?x152 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x152)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x162)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x148)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x144 $x150)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x66 (and $x153 $x154)))
 (let (($x120 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x74 (and $x135 $x127)))
 (let (($x118 (not $x74)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x149 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x105 (and $x149 $x151)))
 (let (($x115 (and (not $x105) $x118)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x9 $x89)))
 (let (($x100 (not $x139)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x90 $x98)))
 (let (($x15 (and (not $x14) $x100)))
 (let (($x161 (and (and (and (and (and (and $x15 $x115) $x54) $x120) $x66) $x84) $x70)))
 (let (($x123 (and $x161 $x119)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x38 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x38)))
 (let (($x45 (or false (or false (and (and true (or $x5 $x49)) (or $x67 $x80))))))
 (let (($x142 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x45)))
 (let (($x7 (and $x142 $x123)))
 (let (($x197 (and (and $x7 $x140) $x191)))
 (let (($x104 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x232 (and $x104 $x197)))
 (let (($x170 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x62 (and $x170 $x232)))
 (let (($x93 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x55 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x235 (and true $x55)))
 (let (($x227 (and $x55 $x235)))
 (let (($x185 (and $x227 $x93)))
 (let (($x193 (= true $x185)))
 (let (($x47 (not $x13)))
 (let (($x228 (=> $x47 $x193)))
 (let (($x22 (and $x228 $x62)))
 (let (($x75 (and true $x22)))
 (let (($x91 (= $x75 true)))
 (let (($x34 (= $x91 true)))
 (let (($x124 (= $x34 true)))
 (let (($x63 (= $x228 true)))
 (let (($x189 (= $x63 true)))
 (let (($x236 (= $x189 true)))
 (let (($x177 (= $x47 true)))
 (let (($x175 (= $x177 true)))
 (let (($x234 (= $x175 true)))
 (let (($x225 (= $x170 true)))
 (let (($x178 (= $x225 true)))
 (let (($x183 (= $x178 true)))
 (let (($x172 (= ?x181 input.dst.llvm-%val)))
 (let (($x11 (= $x172 true)))
 (let (($x129 (= $x11 true)))
 (let (($x223 (= $x7 true)))
 (let (($x165 (= $x223 true)))
 (let (($x168 (= $x165 true)))
 (let (($x28 (= $x104 true)))
 (let (($x33 (= $x28 true)))
 (let (($x117 (= $x33 true)))
 (let (($x8 (and $x117 $x168)))
 (let (($x36 (and $x8 $x129)))
 (let (($x182 (and $x36 $x183)))
 (let (($x131 (and $x182 $x183)))
 (let (($x187 (and $x131 $x234)))
 (let (($x101 (and $x187 $x236)))
 (let (($x194 (and $x101 $x124)))
 (let (($x237 (and $x194 $x198)))
 (let (($x296 (and $x237 $x274)))
 (let (($x297 (and $x296 $x274)))
 (let (($x312 (and $x297 $x292)))
 (let (($x341 (and $x312 $x340)))
 (let (($x342 (and $x97 $x341)))
 (let (($x343 (and $x37 $x342)))
 (let (($x19 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x344 (and $x19 $x343)))
 (let (($x69 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x345 (and $x69 $x344)))
 (let (($x12 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x79 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x99)))
 (let (($x76 (or false (or false (and (and true (or $x107 $x79)) (or $x29 $x12))))))
 (let (($x77 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x76)))
 (let (($x39 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x76)))
 (let (($x346 (and $x39 $x345)))
 (let (($x349 (=> $x346 $x348)))
 (not $x349)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x208 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x212 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x208)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x212)))
 (let (($x210 (= input.spec-%var-l-0.2.0 ?x207)))
 (let (($x347 (= $x210 true)))
 (let (($x348 (= $x347 true)))
 (let (($x328 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x327 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x329 (= $x327 $x328)))
 (let (($x253 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x222 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x320 (and $x222 $x253)))
 (let (($x330 (=> $x320 $x329)))
 (let (($x94 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x24 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x132 (= $x24 $x94)))
 (let (($x326 (=> $x320 $x132)))
 (let (($x323 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x324 (=> $x320 $x323)))
 (let (($x317 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x318 (= $x253 $x317)))
 (let (($x319 (=> $x222 $x318)))
 (let (($x37 (= false false)))
 (let (($x267 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x283 (and $x222 $x267)))
 (let (($x57 (=> $x283 $x37)))
 (let (($x308 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x315 (= $x267 $x308)))
 (let (($x316 (=> $x222 $x315)))
 (let (($x306 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x314 (=> $x222 $x306)))
 (let (($x214 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x278 (=> $x214 $x37)))
 (let (($x304 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x313 (= $x222 $x304)))
 (let (($x302 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x303 (= $x214 $x302)))
 (let (($x336 (and (and (and (and (and (and $x303 $x313) $x278) $x314) $x316) $x57) $x319)))
 (let (($x339 (and (and (and $x336 $x324) $x326) $x330)))
 (let (($x340 (= $x339 true)))
 (let (($x284 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x285 (= $x253 $x284)))
 (let (($x286 (=> $x222 $x285)))
 (let (($x30 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x282 (= $x267 $x30)))
 (let (($x299 (=> $x222 $x282)))
 (let (($x280 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x281 (=> $x222 $x280)))
 (let (($x298 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x311 (= $x222 $x298)))
 (let (($x276 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x277 (= $x214 $x276)))
 (let (($x309 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x290 (and (and (and (and (and (and $x309 $x277) $x311) $x278) $x281) $x299) $x57)))
 (let (($x291 (and $x290 $x286)))
 (let (($x292 (= $x291 true)))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x68 (concat ?x238 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x174 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x230 (concat ?x216 (concat ?x174 ?x68))))
 (let ((?x65 (bvadd ?x230 (_ bv4 32))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv1 32))) (select input.dst.llvm-mem ?x65))))
 (let ((?x294 (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x65 (_ bv2 32))) ?x85))))
 (let (($x250 (= (_ bv0 32) ?x294)))
 (let ((?x259 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x260 (bvuge ?x259 (_ bv1 32))))
 (let (($x269 (= $x253 $x260)))
 (let (($x97 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x255 (and $x97 $x222)))
 (let (($x261 (=> $x255 $x269)))
 (let (($x251 (= ?x259 (_ bv0 32))))
 (let (($x252 (= $x267 $x251)))
 (let (($x268 (=> $x255 $x252)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv1 32))) (select input.dst.llvm-mem ?x230))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x230 (_ bv2 32))) ?x242))))
 (let (($x266 (= input.spec-%var-l-0.2.1.2.0 ?x257)))
 (let (($x245 (=> $x255 $x266)))
 (let (($x219 (= (_ bv0 32) ?x230)))
 (let ((?x147 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x43 (bvuge ?x147 (_ bv1 32))))
 (let (($x20 (= $x222 $x43)))
 (let (($x35 (=> $x97 $x20)))
 (let (($x221 (and $x97 $x214)))
 (let (($x220 (=> $x221 $x37)))
 (let (($x44 (= ?x147 (_ bv0 32))))
 (let (($x239 (= $x214 $x44)))
 (let (($x240 (=> $x97 $x239)))
 (let (($x10 (=> $x97 $x210)))
 (let (($x229 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x204 (=> $x229 $x37)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x199 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x200 (bvuge ?x199 (_ bv1 32))))
 (let (($x206 (= $x97 $x200)))
 (let (($x205 (= ?x199 (_ bv0 32))))
 (let (($x50 (= $x229 $x205)))
 (let (($x295 (and (and (and (and (and (and $x50 $x206) $x204) $x10) $x240) $x220) $x35)))
 (let (($x273 (and (and (and $x295 $x245) $x268) $x261)))
 (let (($x274 (= $x273 true)))
 (let ((?x128 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x41 (concat ?x196 (concat ?x133 (concat ?x195 ?x128)))))
 (let (($x122 (= ?x41 input.dst.llvm-%l)))
 (let (($x31 (= $x122 true)))
 (let (($x198 (= $x31 true)))
 (let (($x191 (= input.dst.llvm-%l ?x41)))
 (let ((?x141 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x108 (concat ?x231 (concat ?x166 ?x141)))))
 (let (($x140 (= input.dst.llvm-%val ?x181)))
 (let ((?x156 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x119 (= (_ bv0 32) ?x156)))
 (let ((?x152 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x152)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x162)))
 (let ((?x148 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x150 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x148)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x144 $x150)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x66 (and $x153 $x154)))
 (let (($x120 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x54 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x127 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x135 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x74 (and $x135 $x127)))
 (let (($x118 (not $x74)))
 (let (($x151 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x149 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x105 (and $x149 $x151)))
 (let (($x115 (and (not $x105) $x118)))
 (let (($x89 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x139 (and $x9 $x89)))
 (let (($x100 (not $x139)))
 (let (($x98 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x90 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x14 (and $x90 $x98)))
 (let (($x15 (and (not $x14) $x100)))
 (let (($x161 (and (and (and (and (and (and $x15 $x115) $x54) $x120) $x66) $x84) $x70)))
 (let (($x123 (and $x161 $x119)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x38 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x49 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x38)))
 (let (($x45 (or false (or false (and (and true (or $x5 $x49)) (or $x67 $x80))))))
 (let (($x142 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x45)))
 (let (($x7 (and $x142 $x123)))
 (let (($x197 (and (and $x7 $x140) $x191)))
 (let (($x104 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x232 (and $x104 $x197)))
 (let (($x170 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x62 (and $x170 $x232)))
 (let (($x93 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x55 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x235 (and true $x55)))
 (let (($x227 (and $x55 $x235)))
 (let (($x185 (and $x227 $x93)))
 (let (($x193 (= true $x185)))
 (let (($x47 (not $x13)))
 (let (($x228 (=> $x47 $x193)))
 (let (($x22 (and $x228 $x62)))
 (let (($x75 (and true $x22)))
 (let (($x91 (= $x75 true)))
 (let (($x34 (= $x91 true)))
 (let (($x124 (= $x34 true)))
 (let (($x63 (= $x228 true)))
 (let (($x189 (= $x63 true)))
 (let (($x236 (= $x189 true)))
 (let (($x177 (= $x47 true)))
 (let (($x175 (= $x177 true)))
 (let (($x234 (= $x175 true)))
 (let (($x225 (= $x170 true)))
 (let (($x178 (= $x225 true)))
 (let (($x183 (= $x178 true)))
 (let (($x172 (= ?x181 input.dst.llvm-%val)))
 (let (($x11 (= $x172 true)))
 (let (($x129 (= $x11 true)))
 (let (($x223 (= $x7 true)))
 (let (($x165 (= $x223 true)))
 (let (($x168 (= $x165 true)))
 (let (($x28 (= $x104 true)))
 (let (($x33 (= $x28 true)))
 (let (($x117 (= $x33 true)))
 (let (($x8 (and $x117 $x168)))
 (let (($x36 (and $x8 $x129)))
 (let (($x182 (and $x36 $x183)))
 (let (($x131 (and $x182 $x183)))
 (let (($x187 (and $x131 $x234)))
 (let (($x101 (and $x187 $x236)))
 (let (($x194 (and $x101 $x124)))
 (let (($x237 (and $x194 $x198)))
 (let (($x296 (and $x237 $x274)))
 (let (($x297 (and $x296 $x274)))
 (let (($x312 (and $x297 $x292)))
 (let (($x341 (and $x312 $x340)))
 (let (($x342 (and $x97 $x341)))
 (let (($x343 (and $x37 $x342)))
 (let (($x19 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x344 (and $x19 $x343)))
 (let (($x69 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x345 (and $x69 $x344)))
 (let (($x12 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x99 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x99)))
 (let (($x79 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x99)))
 (let (($x76 (or false (or false (and (and true (or $x107 $x79)) (or $x29 $x12))))))
 (let (($x77 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x76)))
 (let (($x39 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x76)))
 (let (($x346 (and $x39 $x345)))
 (let (($x349 (=> $x346 $x348)))
 (not $x349)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x68 (= input.spec-%var-l-0.2.0 input.dst.llvm-%val)))
 (let (($x126 (= $x68 true)))
 (let (($x230 (= $x126 true)))
 (let (($x270 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x213 (= $x10 $x270)))
 (let (($x207 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x208 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x210 (= $x208 $x207)))
 (let (($x214 (and $x210 $x213)))
 (let (($x137 (= $x214 true)))
 (let (($x86 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x262 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x262 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x254 (= $x28 $x263)))
 (let (($x37 (= ?x262 (_ bv0 32))))
 (let (($x206 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x204 (= $x206 $x37)))
 (let (($x203 (and $x204 $x254)))
 (let (($x202 (= $x203 true)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x191 (concat ?x41 (concat ?x128 (concat ?x133 ?x196)))))
 (let (($x205 (= ?x191 input.dst.llvm-%val)))
 (let (($x50 (= $x205 true)))
 (let (($x97 (= $x50 true)))
 (let (($x146 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x237 (= $x146 true)))
 (let (($x73 (= $x237 true)))
 (let (($x229 (= $x73 true)))
 (let ((?x188 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x193 (concat ?x185 (concat ?x226 (concat ?x184 ?x188)))))
 (let (($x232 (= input.dst.llvm-%l ?x193)))
 (let (($x197 (= input.dst.llvm-%val ?x191)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x11)))
 (let ((?x181 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x172 (= (_ bv0 32) ?x181)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x173 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x169)))
 (let ((?x231 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x167 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x231)))
 (let (($x179 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x166 (and $x179 $x167)))
 (let (($x224 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x141 (and $x224 $x166)))
 (let (($x108 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (and $x119 $x123)))
 (let (($x223 (not $x7)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x70 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x156 (and $x70 $x161)))
 (let (($x168 (and (not $x156) $x223)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x66 $x145)))
 (let (($x84 (not $x162)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x102 $x135)))
 (let (($x152 (and (not $x154) $x84)))
 (let (($x178 (and (and (and (and (and (and $x152 $x168) $x160) $x108) $x141) $x173) $x172)))
 (let (($x183 (and $x178 $x129)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x118)))
 (let (($x144 (or false (or false (and (and true (or $x115 $x157)) (or $x163 $x143))))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x144)))
 (let (($x182 (and $x150 $x183)))
 (let (($x22 (and (and $x182 $x197) $x232)))
 (let (($x75 (and $x146 $x22)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x91 (and $x38 $x75)))
 (let (($x14 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x82 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x45 (and true $x82)))
 (let (($x142 (and $x82 $x45)))
 (let (($x83 (and $x142 $x14)))
 (let (($x9 (= true $x83)))
 (let (($x47 (not $x86)))
 (let (($x89 (=> $x47 $x9)))
 (let (($x34 (and $x89 $x91)))
 (let (($x124 (and true $x34)))
 (let (($x194 (= $x124 true)))
 (let (($x122 (= $x194 true)))
 (let (($x31 (= $x122 true)))
 (let (($x228 (= ?x193 input.dst.llvm-%l)))
 (let (($x63 (= $x228 true)))
 (let (($x189 (= $x63 true)))
 (let (($x131 (= $x182 true)))
 (let (($x177 (= $x131 true)))
 (let (($x175 (= $x177 true)))
 (let (($x5 (= $x38 true)))
 (let (($x49 (= $x5 true)))
 (let (($x64 (= $x49 true)))
 (let (($x139 (= $x89 true)))
 (let (($x100 (= $x139 true)))
 (let (($x15 (= $x100 true)))
 (let (($x33 (= $x86 true)))
 (let (($x117 (= $x33 true)))
 (let (($x110 (= $x117 true)))
 (let (($x72 (and $x110 $x64)))
 (let (($x149 (and $x72 $x15)))
 (let (($x151 (and $x149 $x64)))
 (let (($x234 (and $x151 $x175)))
 (let (($x236 (and $x234 $x189)))
 (let (($x198 (and $x236 $x31)))
 (let (($x199 (and $x198 $x229)))
 (let (($x200 (and $x199 $x97)))
 (let (($x211 (and $x200 $x202)))
 (let (($x209 (and $x211 $x202)))
 (let (($x216 (and $x209 $x137)))
 (let (($x218 (and $x28 $x216)))
 (let (($x109 (= false false)))
 (let (($x174 (and $x109 $x218)))
 (let (($x42 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x217 (and $x42 $x174)))
 (let (($x92 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x238 (and $x92 $x217)))
 (let (($x16 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x79 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x79)))
 (let (($x23 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x79)))
 (let (($x39 (or false (or false (and (and true (or $x53 $x23)) (or $x40 $x16))))))
 (let (($x56 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x39)))
 (let (($x103 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x39)))
 (let (($x215 (and $x103 $x238)))
 (let (($x219 (=> $x215 $x230)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x68 (= input.spec-%var-l-0.2.0 input.dst.llvm-%val)))
 (let (($x126 (= $x68 true)))
 (let (($x230 (= $x126 true)))
 (let (($x270 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x10 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x213 (= $x10 $x270)))
 (let (($x207 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x208 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x210 (= $x208 $x207)))
 (let (($x214 (and $x210 $x213)))
 (let (($x137 (= $x214 true)))
 (let (($x86 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x262 (ite $x86 (_ bv0 32) (_ bv1 32))))
 (let (($x263 (bvuge ?x262 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x254 (= $x28 $x263)))
 (let (($x37 (= ?x262 (_ bv0 32))))
 (let (($x206 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x204 (= $x206 $x37)))
 (let (($x203 (and $x204 $x254)))
 (let (($x202 (= $x203 true)))
 (let ((?x196 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x133 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x41 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x191 (concat ?x41 (concat ?x128 (concat ?x133 ?x196)))))
 (let (($x205 (= ?x191 input.dst.llvm-%val)))
 (let (($x50 (= $x205 true)))
 (let (($x97 (= $x50 true)))
 (let (($x146 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x237 (= $x146 true)))
 (let (($x73 (= $x237 true)))
 (let (($x229 (= $x73 true)))
 (let ((?x188 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x184 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x193 (concat ?x185 (concat ?x226 (concat ?x184 ?x188)))))
 (let (($x232 (= input.dst.llvm-%l ?x193)))
 (let (($x197 (= input.dst.llvm-%val ?x191)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x129 (= (_ bv0 32) ?x11)))
 (let ((?x181 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x172 (= (_ bv0 32) ?x181)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x173 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x169)))
 (let ((?x231 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x167 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x231)))
 (let (($x179 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x166 (and $x179 $x167)))
 (let (($x224 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x141 (and $x224 $x166)))
 (let (($x108 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x160 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x7 (and $x119 $x123)))
 (let (($x223 (not $x7)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x70 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x156 (and $x70 $x161)))
 (let (($x168 (and (not $x156) $x223)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x66 $x145)))
 (let (($x84 (not $x162)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x102 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x102 $x135)))
 (let (($x152 (and (not $x154) $x84)))
 (let (($x178 (and (and (and (and (and (and $x152 $x168) $x160) $x108) $x141) $x173) $x172)))
 (let (($x183 (and $x178 $x129)))
 (let (($x143 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x118 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x118)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x118)))
 (let (($x144 (or false (or false (and (and true (or $x115 $x157)) (or $x163 $x143))))))
 (let (($x150 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x144)))
 (let (($x182 (and $x150 $x183)))
 (let (($x22 (and (and $x182 $x197) $x232)))
 (let (($x75 (and $x146 $x22)))
 (let (($x38 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x91 (and $x38 $x75)))
 (let (($x14 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x82 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x45 (and true $x82)))
 (let (($x142 (and $x82 $x45)))
 (let (($x83 (and $x142 $x14)))
 (let (($x9 (= true $x83)))
 (let (($x47 (not $x86)))
 (let (($x89 (=> $x47 $x9)))
 (let (($x34 (and $x89 $x91)))
 (let (($x124 (and true $x34)))
 (let (($x194 (= $x124 true)))
 (let (($x122 (= $x194 true)))
 (let (($x31 (= $x122 true)))
 (let (($x228 (= ?x193 input.dst.llvm-%l)))
 (let (($x63 (= $x228 true)))
 (let (($x189 (= $x63 true)))
 (let (($x131 (= $x182 true)))
 (let (($x177 (= $x131 true)))
 (let (($x175 (= $x177 true)))
 (let (($x5 (= $x38 true)))
 (let (($x49 (= $x5 true)))
 (let (($x64 (= $x49 true)))
 (let (($x139 (= $x89 true)))
 (let (($x100 (= $x139 true)))
 (let (($x15 (= $x100 true)))
 (let (($x33 (= $x86 true)))
 (let (($x117 (= $x33 true)))
 (let (($x110 (= $x117 true)))
 (let (($x72 (and $x110 $x64)))
 (let (($x149 (and $x72 $x15)))
 (let (($x151 (and $x149 $x64)))
 (let (($x234 (and $x151 $x175)))
 (let (($x236 (and $x234 $x189)))
 (let (($x198 (and $x236 $x31)))
 (let (($x199 (and $x198 $x229)))
 (let (($x200 (and $x199 $x97)))
 (let (($x211 (and $x200 $x202)))
 (let (($x209 (and $x211 $x202)))
 (let (($x216 (and $x209 $x137)))
 (let (($x218 (and $x28 $x216)))
 (let (($x109 (= false false)))
 (let (($x174 (and $x109 $x218)))
 (let (($x42 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x217 (and $x42 $x174)))
 (let (($x92 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x238 (and $x92 $x217)))
 (let (($x16 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x79 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x79)))
 (let (($x23 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x53 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x79)))
 (let (($x39 (or false (or false (and (and true (or $x53 $x23)) (or $x40 $x16))))))
 (let (($x56 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x39)))
 (let (($x103 (=> (and $x47 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x39)))
 (let (($x215 (and $x103 $x238)))
 (let (($x219 (=> $x215 $x230)))
 (not $x219))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x180)))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x239)))
 (let (($x221 (= input.spec-%var-val-0 ?x264)))
 (let (($x220 (= $x221 true)))
 (let (($x265 (= $x220 true)))
 (let (($x218 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x174 (= $x216 $x218)))
 (let (($x214 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x270 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x137 (= $x270 $x214)))
 (let (($x217 (and $x137 $x174)))
 (let (($x238 (= $x217 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x254 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x254 (_ bv1 32))))
 (let (($x211 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x201 (= $x211 $x209)))
 (let (($x203 (= ?x254 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x202 (= $x110 $x203)))
 (let (($x208 (and $x202 $x201)))
 (let (($x212 (= $x208 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x34 (concat ?x22 (concat ?x197 ?x18)))))
 (let (($x37 (= ?x124 input.dst.llvm-%l)))
 (let (($x204 (= $x37 true)))
 (let (($x28 (= $x204 true)))
 (let (($x133 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x200 (= $x133 true)))
 (let (($x104 (= $x200 true)))
 (let (($x206 (= $x104 true)))
 (let (($x194 (= input.dst.llvm-%l ?x124)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x224 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x173 (concat ?x169 (concat ?x166 (concat ?x224 ?x108)))))
 (let (($x196 (= input.dst.llvm-%val ?x173)))
 (let ((?x152 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x152)))
 (let ((?x162 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x162)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x66)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x102)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x150 $x135)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x144 $x154)))
 (let (($x153 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x157 (and $x118 $x115)))
 (let (($x136 (not $x157)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (and $x127 $x74)))
 (let (($x163 (and (not $x148) $x136)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x89 $x139)))
 (let (($x15 (not $x100)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x111 $x38)))
 (let (($x151 (and (not $x9) $x15)))
 (let (($x7 (and (and (and (and (and (and $x151 $x163) $x120) $x153) $x155) $x145) $x84)))
 (let (($x223 (and $x7 $x70)))
 (let (($x82 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x98 (or false (or false (and (and true (or $x72 $x80)) (or $x17 $x82))))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x168 (and $x83 $x223)))
 (let (($x31 (and (and $x168 $x196) $x194)))
 (let (($x198 (and $x133 $x31)))
 (let (($x182 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x237 (and $x182 $x198)))
 (let (($x189 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x55 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x25 (and true $x55)))
 (let (($x193 (and $x55 $x25)))
 (let (($x236 (and $x193 $x189)))
 (let (($x140 (= true $x236)))
 (let (($x81 (not $x13)))
 (let (($x146 (=> $x81 $x140)))
 (let (($x73 (and $x146 $x237)))
 (let (($x229 (and true $x73)))
 (let (($x199 (= $x229 true)))
 (let (($x205 (= $x199 true)))
 (let (($x50 (= $x205 true)))
 (let (($x192 (= $x146 true)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x93 (= $x81 true)))
 (let (($x185 (= $x93 true)))
 (let (($x235 (= $x185 true)))
 (let (($x131 (= $x182 true)))
 (let (($x177 (= $x131 true)))
 (let (($x175 (= $x177 true)))
 (let (($x181 (= ?x173 input.dst.llvm-%val)))
 (let (($x172 (= $x181 true)))
 (let (($x178 (= $x172 true)))
 (let (($x36 (= $x168 true)))
 (let (($x8 (= $x36 true)))
 (let (($x160 (= $x8 true)))
 (let (($x11 (and $x160 $x178)))
 (let (($x234 (and $x11 $x175)))
 (let (($x187 (and $x234 $x175)))
 (let (($x227 (and $x187 $x235)))
 (let (($x128 (and $x227 $x195)))
 (let (($x97 (and $x128 $x50)))
 (let (($x262 (and $x97 $x206)))
 (let (($x263 (and $x262 $x28)))
 (let (($x207 (and $x263 $x212)))
 (let (($x210 (and $x207 $x212)))
 (let (($x215 (and $x210 $x238)))
 (let (($x68 (and $x110 $x215)))
 (let (($x33 (= false false)))
 (let (($x126 (and $x33 $x68)))
 (let (($x109 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x230 (and $x109 $x126)))
 (let (($x19 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x219 (and $x19 $x230)))
 (let (($x76 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x29 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x23)))
 (let (($x103 (or false (or false (and (and true (or $x138 $x29)) (or $x60 $x76))))))
 (let (($x69 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x103)))
 (let (($x32 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x103)))
 (let (($x147 (and $x32 $x219)))
 (let (($x222 (=> $x147 $x265)))
 (not $x222)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x180)))
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x239)))
 (let (($x221 (= input.spec-%var-val-0 ?x264)))
 (let (($x220 (= $x221 true)))
 (let (($x265 (= $x220 true)))
 (let (($x218 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x216 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x174 (= $x216 $x218)))
 (let (($x214 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x270 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x137 (= $x270 $x214)))
 (let (($x217 (and $x137 $x174)))
 (let (($x238 (= $x217 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x254 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x209 (bvuge ?x254 (_ bv1 32))))
 (let (($x211 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x201 (= $x211 $x209)))
 (let (($x203 (= ?x254 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x202 (= $x110 $x203)))
 (let (($x208 (and $x202 $x201)))
 (let (($x212 (= $x208 true)))
 (let ((?x18 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x124 (concat ?x34 (concat ?x22 (concat ?x197 ?x18)))))
 (let (($x37 (= ?x124 input.dst.llvm-%l)))
 (let (($x204 (= $x37 true)))
 (let (($x28 (= $x204 true)))
 (let (($x133 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x200 (= $x133 true)))
 (let (($x104 (= $x200 true)))
 (let (($x206 (= $x104 true)))
 (let (($x194 (= input.dst.llvm-%l ?x124)))
 (let ((?x108 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x224 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x166 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x169 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x173 (concat ?x169 (concat ?x166 (concat ?x224 ?x108)))))
 (let (($x196 (= input.dst.llvm-%val ?x173)))
 (let ((?x152 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x152)))
 (let ((?x162 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x84 (= (_ bv0 32) ?x162)))
 (let ((?x66 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x145 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x66)))
 (let ((?x102 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x135 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x102)))
 (let (($x150 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (and $x150 $x135)))
 (let (($x144 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x144 $x154)))
 (let (($x153 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x115 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x118 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x157 (and $x118 $x115)))
 (let (($x136 (not $x157)))
 (let (($x74 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x127 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x148 (and $x127 $x74)))
 (let (($x163 (and (not $x148) $x136)))
 (let (($x139 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x89 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x100 (and $x89 $x139)))
 (let (($x15 (not $x100)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x9 (and $x111 $x38)))
 (let (($x151 (and (not $x9) $x15)))
 (let (($x7 (and (and (and (and (and (and $x151 $x163) $x120) $x153) $x155) $x145) $x84)))
 (let (($x223 (and $x7 $x70)))
 (let (($x82 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x64 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x64)))
 (let (($x80 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x64)))
 (let (($x98 (or false (or false (and (and true (or $x72 $x80)) (or $x17 $x82))))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x98)))
 (let (($x168 (and $x83 $x223)))
 (let (($x31 (and (and $x168 $x196) $x194)))
 (let (($x198 (and $x133 $x31)))
 (let (($x182 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x237 (and $x182 $x198)))
 (let (($x189 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x55 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x25 (and true $x55)))
 (let (($x193 (and $x55 $x25)))
 (let (($x236 (and $x193 $x189)))
 (let (($x140 (= true $x236)))
 (let (($x81 (not $x13)))
 (let (($x146 (=> $x81 $x140)))
 (let (($x73 (and $x146 $x237)))
 (let (($x229 (and true $x73)))
 (let (($x199 (= $x229 true)))
 (let (($x205 (= $x199 true)))
 (let (($x50 (= $x205 true)))
 (let (($x192 (= $x146 true)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x93 (= $x81 true)))
 (let (($x185 (= $x93 true)))
 (let (($x235 (= $x185 true)))
 (let (($x131 (= $x182 true)))
 (let (($x177 (= $x131 true)))
 (let (($x175 (= $x177 true)))
 (let (($x181 (= ?x173 input.dst.llvm-%val)))
 (let (($x172 (= $x181 true)))
 (let (($x178 (= $x172 true)))
 (let (($x36 (= $x168 true)))
 (let (($x8 (= $x36 true)))
 (let (($x160 (= $x8 true)))
 (let (($x11 (and $x160 $x178)))
 (let (($x234 (and $x11 $x175)))
 (let (($x187 (and $x234 $x175)))
 (let (($x227 (and $x187 $x235)))
 (let (($x128 (and $x227 $x195)))
 (let (($x97 (and $x128 $x50)))
 (let (($x262 (and $x97 $x206)))
 (let (($x263 (and $x262 $x28)))
 (let (($x207 (and $x263 $x212)))
 (let (($x210 (and $x207 $x212)))
 (let (($x215 (and $x210 $x238)))
 (let (($x68 (and $x110 $x215)))
 (let (($x33 (= false false)))
 (let (($x126 (and $x33 $x68)))
 (let (($x109 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x230 (and $x109 $x126)))
 (let (($x19 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x219 (and $x19 $x230)))
 (let (($x76 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x23 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x23)))
 (let (($x29 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x138 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x23)))
 (let (($x103 (or false (or false (and (and true (or $x138 $x29)) (or $x60 $x76))))))
 (let (($x69 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x103)))
 (let (($x32 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x103)))
 (let (($x147 (and $x32 $x219)))
 (let (($x222 (=> $x147 $x265)))
 (not $x222)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x81 (not $x13)))
 (let (($x50 (or $x13 $x81)))
 (let (($x97 (= $x50 true)))
 (let (($x200 (= $x97 true)))
 (let (($x124 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x75 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x194 (= $x75 $x124)))
 (let (($x18 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x191 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x62 (= $x191 $x18)))
 (let (($x31 (and $x62 $x194)))
 (let (($x198 (= $x31 true)))
 (let ((?x195 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x195 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x122 (= $x133 $x196)))
 (let (($x128 (= ?x195 (_ bv0 32))))
 (let (($x41 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x59 (= $x41 $x128)))
 (let (($x91 (and $x59 $x122)))
 (let (($x34 (= $x91 true)))
 (let ((?x227 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x228 (concat ?x55 (concat ?x226 ?x227)))))
 (let (($x189 (= ?x63 input.dst.llvm-%l)))
 (let (($x236 (= $x189 true)))
 (let (($x140 (= $x236 true)))
 (let ((?x225 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x177 (concat ?x183 (concat ?x172 ?x225)))))
 (let (($x234 (= ?x175 input.dst.llvm-%val)))
 (let (($x187 (= $x234 true)))
 (let (($x93 (= $x187 true)))
 (let ((?x168 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x168)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x7 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x7)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x123 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x145)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x162 (and $x66 $x123)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x84 (and $x119 $x162)))
 (let (($x155 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (and $x156 $x164)))
 (let (($x165 (not $x153)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (and $x161 $x143)))
 (let (($x150 (and (not $x120) $x165)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x115 (and $x54 $x118)))
 (let (($x157 (not $x115)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x82 $x45)))
 (let (($x163 (and (not $x148) $x157)))
 (let (($x231 (and (and (and (and (and (and $x163 $x150) $x135) $x155) $x84) $x152) $x223)))
 (let (($x167 (and $x231 $x36)))
 (let (($x89 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x98)))
 (let (($x151 (or false (or false (and (and true (or $x83 $x111)) (or $x149 $x89))))))
 (let (($x74 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x151)))
 (let (($x166 (and $x74 $x167)))
 (let (($x171 (= $x166 true)))
 (let (($x224 (= $x171 true)))
 (let (($x108 (= $x224 true)))
 (let (($x72 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x80 (= $x72 true)))
 (let (($x67 (= $x80 true)))
 (let (($x112 (= $x67 true)))
 (let (($x179 (and $x112 $x108)))
 (let (($x185 (and $x179 $x93)))
 (let (($x146 (and $x185 $x140)))
 (let (($x232 (and $x146 $x34)))
 (let (($x237 (and $x232 $x198)))
 (let (($x49 (= false false)))
 (let (($x73 (and $x49 $x237)))
 (let (($x5 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x229 (and $x5 $x73)))
 (let (($x109 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x199 (and $x109 $x229)))
 (let (($x56 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x106 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x106)))
 (let (($x12 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x106)))
 (let (($x95 (or false (or false (and (and true (or $x40 $x12)) (or $x39 $x56))))))
 (let (($x19 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x95)))
 (let (($x27 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x95)))
 (let (($x205 (and $x27 $x199)))
 (let (($x104 (=> $x205 $x200)))
 (not $x104))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let (($x81 (not $x13)))
 (let (($x50 (or $x13 $x81)))
 (let (($x97 (= $x50 true)))
 (let (($x200 (= $x97 true)))
 (let (($x124 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x75 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x194 (= $x75 $x124)))
 (let (($x18 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x191 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x62 (= $x191 $x18)))
 (let (($x31 (and $x62 $x194)))
 (let (($x198 (= $x31 true)))
 (let ((?x195 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x196 (bvuge ?x195 (_ bv1 32))))
 (let (($x133 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x122 (= $x133 $x196)))
 (let (($x128 (= ?x195 (_ bv0 32))))
 (let (($x41 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x59 (= $x41 $x128)))
 (let (($x91 (and $x59 $x122)))
 (let (($x34 (= $x91 true)))
 (let ((?x227 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x228 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x228 (concat ?x55 (concat ?x226 ?x227)))))
 (let (($x189 (= ?x63 input.dst.llvm-%l)))
 (let (($x236 (= $x189 true)))
 (let (($x140 (= $x236 true)))
 (let ((?x225 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x172 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x175 (concat ?x177 (concat ?x183 (concat ?x172 ?x225)))))
 (let (($x234 (= ?x175 input.dst.llvm-%val)))
 (let (($x187 (= $x234 true)))
 (let (($x93 (= $x187 true)))
 (let ((?x168 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x36 (= (_ bv0 32) ?x168)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x7 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x7)))
 (let ((?x145 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x123 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x145)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x162 (and $x66 $x123)))
 (let (($x119 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x84 (and $x119 $x162)))
 (let (($x155 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x135 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x153 (and $x156 $x164)))
 (let (($x165 (not $x153)))
 (let (($x143 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x161 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x120 (and $x161 $x143)))
 (let (($x150 (and (not $x120) $x165)))
 (let (($x118 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x54 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x115 (and $x54 $x118)))
 (let (($x157 (not $x115)))
 (let (($x45 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x82 $x45)))
 (let (($x163 (and (not $x148) $x157)))
 (let (($x231 (and (and (and (and (and (and $x163 $x150) $x135) $x155) $x84) $x152) $x223)))
 (let (($x167 (and $x231 $x36)))
 (let (($x89 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x98 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x98)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x98)))
 (let (($x151 (or false (or false (and (and true (or $x83 $x111)) (or $x149 $x89))))))
 (let (($x74 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x151)))
 (let (($x166 (and $x74 $x167)))
 (let (($x171 (= $x166 true)))
 (let (($x224 (= $x171 true)))
 (let (($x108 (= $x224 true)))
 (let (($x72 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x80 (= $x72 true)))
 (let (($x67 (= $x80 true)))
 (let (($x112 (= $x67 true)))
 (let (($x179 (and $x112 $x108)))
 (let (($x185 (and $x179 $x93)))
 (let (($x146 (and $x185 $x140)))
 (let (($x232 (and $x146 $x34)))
 (let (($x237 (and $x232 $x198)))
 (let (($x49 (= false false)))
 (let (($x73 (and $x49 $x237)))
 (let (($x5 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x229 (and $x5 $x73)))
 (let (($x109 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x199 (and $x109 $x229)))
 (let (($x56 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x106 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x106)))
 (let (($x12 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x106)))
 (let (($x95 (or false (or false (and (and true (or $x40 $x12)) (or $x39 $x56))))))
 (let (($x19 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x95)))
 (let (($x27 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x95)))
 (let (($x205 (and $x27 $x199)))
 (let (($x104 (=> $x205 $x200)))
 (not $x104))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x264)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x265)))
 (let (($x47 (= input.spec-%var-l-0.2.0 ?x43)))
 (let (($x121 (= $x47 true)))
 (let (($x52 (= $x121 true)))
 (let (($x68 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x215 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x126 (= $x215 $x68)))
 (let (($x217 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x218 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x238 (= $x218 $x217)))
 (let (($x230 (and $x238 $x126)))
 (let (($x219 (= $x230 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x208 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x208 (_ bv1 32))))
 (let (($x80 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x10 (= $x80 $x210)))
 (let (($x212 (= ?x208 (_ bv0 32))))
 (let (($x201 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x207 (= $x201 $x212)))
 (let (($x270 (and $x207 $x10)))
 (let (($x213 (= $x270 true)))
 (let ((?x31 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x237 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x200 (concat ?x97 (concat ?x199 (concat ?x237 ?x31)))))
 (let (($x203 (= ?x200 input.dst.llvm-%l)))
 (let (($x202 (= $x203 true)))
 (let (($x211 (= $x202 true)))
 (let (($x197 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x91 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x34 (and true $x91)))
 (let (($x232 (and $x91 $x34)))
 (let (($x18 (and $x232 $x197)))
 (let (($x62 (= true $x18)))
 (let (($x81 (not $x13)))
 (let (($x75 (=> $x81 $x62)))
 (let (($x263 (= $x75 true)))
 (let (($x117 (= $x263 true)))
 (let (($x110 (= $x117 true)))
 (let (($x104 (= input.dst.llvm-%l ?x200)))
 (let ((?x172 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x228 (concat ?x193 (concat ?x187 (concat ?x178 ?x172)))))
 (let (($x124 (= input.dst.llvm-%val ?x228)))
 (let ((?x231 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x168 (= (_ bv0 32) ?x231)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x169 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x152)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x162)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x123 $x84)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x145 $x170)))
 (let (($x66 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x102 (and $x150 $x8)))
 (let (($x135 (not $x102)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x164 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x165 (and $x164 $x153)))
 (let (($x154 (and (not $x165) $x135)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x163 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x163 $x161)))
 (let (($x120 (not $x143)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x111 $x38)))
 (let (($x156 (and (not $x157) $x120)))
 (let (($x108 (and (and (and (and (and (and $x156 $x154) $x58) $x66) $x7) $x169) $x223)))
 (let (($x179 (and $x108 $x168)))
 (let (($x82 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x89 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x89)))
 (let (($x54 (or false (or false (and (and true (or $x139 $x100)) (or $x74 $x82))))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x141 (and $x115 $x179)))
 (let (($x21 (and (and $x141 $x124) $x104)))
 (let (($x142 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x17 (and $x142 $x21)))
 (let (($x25 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x173 (and $x25 $x17)))
 (let (($x235 (and $x75 $x173)))
 (let (($x99 (and true $x235)))
 (let (($x262 (= $x99 true)))
 (let (($x37 (= $x262 true)))
 (let (($x204 (= $x37 true)))
 (let (($x192 (= $x81 true)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x63 (= $x25 true)))
 (let (($x189 (= $x63 true)))
 (let (($x236 (= $x189 true)))
 (let (($x188 (= ?x228 input.dst.llvm-%val)))
 (let (($x55 (= $x188 true)))
 (let (($x113 (= $x55 true)))
 (let (($x131 (= $x141 true)))
 (let (($x177 (= $x131 true)))
 (let (($x11 (= $x177 true)))
 (let (($x90 (= $x142 true)))
 (let (($x127 (= $x90 true)))
 (let (($x98 (= $x127 true)))
 (let (($x129 (and $x98 $x11)))
 (let (($x226 (and $x129 $x113)))
 (let (($x140 (and $x226 $x236)))
 (let (($x146 (and $x140 $x236)))
 (let (($x128 (and $x146 $x195)))
 (let (($x28 (and $x128 $x204)))
 (let (($x254 (and $x28 $x110)))
 (let (($x209 (and $x254 $x211)))
 (let (($x214 (and $x209 $x213)))
 (let (($x137 (and $x214 $x213)))
 (let (($x147 (and $x137 $x219)))
 (let (($x240 (and $x80 $x147)))
 (let (($x64 (= false false)))
 (let (($x134 (and $x64 $x240)))
 (let (($x14 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x44 (and $x14 $x134)))
 (let (($x5 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x105 (and $x5 $x44)))
 (let (($x32 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x60 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x60)))
 (let (($x76 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x60)))
 (let (($x88 (or false (or false (and (and true (or $x16 $x76)) (or $x69 $x32))))))
 (let (($x109 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x88)))
 (let (($x23 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x88)))
 (let (($x6 (and $x23 $x105)))
 (let (($x190 (=> $x6 $x52)))
 (not $x190)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x264 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x264)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x265)))
 (let (($x47 (= input.spec-%var-l-0.2.0 ?x43)))
 (let (($x121 (= $x47 true)))
 (let (($x52 (= $x121 true)))
 (let (($x68 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x215 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x126 (= $x215 $x68)))
 (let (($x217 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x218 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x238 (= $x218 $x217)))
 (let (($x230 (and $x238 $x126)))
 (let (($x219 (= $x230 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x208 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x210 (bvuge ?x208 (_ bv1 32))))
 (let (($x80 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x10 (= $x80 $x210)))
 (let (($x212 (= ?x208 (_ bv0 32))))
 (let (($x201 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x207 (= $x201 $x212)))
 (let (($x270 (and $x207 $x10)))
 (let (($x213 (= $x270 true)))
 (let ((?x31 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x237 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x199 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x200 (concat ?x97 (concat ?x199 (concat ?x237 ?x31)))))
 (let (($x203 (= ?x200 input.dst.llvm-%l)))
 (let (($x202 (= $x203 true)))
 (let (($x211 (= $x202 true)))
 (let (($x197 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x91 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x34 (and true $x91)))
 (let (($x232 (and $x91 $x34)))
 (let (($x18 (and $x232 $x197)))
 (let (($x62 (= true $x18)))
 (let (($x81 (not $x13)))
 (let (($x75 (=> $x81 $x62)))
 (let (($x263 (= $x75 true)))
 (let (($x117 (= $x263 true)))
 (let (($x110 (= $x117 true)))
 (let (($x104 (= input.dst.llvm-%l ?x200)))
 (let ((?x172 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x193 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x228 (concat ?x193 (concat ?x187 (concat ?x178 ?x172)))))
 (let (($x124 (= input.dst.llvm-%val ?x228)))
 (let ((?x231 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x168 (= (_ bv0 32) ?x231)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x152 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x169 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x152)))
 (let ((?x162 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x162)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x170 (and $x123 $x84)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x7 (and $x145 $x170)))
 (let (($x66 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x102 (and $x150 $x8)))
 (let (($x135 (not $x102)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x164 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x165 (and $x164 $x153)))
 (let (($x154 (and (not $x165) $x135)))
 (let (($x161 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x163 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x163 $x161)))
 (let (($x120 (not $x143)))
 (let (($x38 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x111 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x157 (and $x111 $x38)))
 (let (($x156 (and (not $x157) $x120)))
 (let (($x108 (and (and (and (and (and (and $x156 $x154) $x58) $x66) $x7) $x169) $x223)))
 (let (($x179 (and $x108 $x168)))
 (let (($x82 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x89 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x89)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x89)))
 (let (($x54 (or false (or false (and (and true (or $x139 $x100)) (or $x74 $x82))))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x54)))
 (let (($x141 (and $x115 $x179)))
 (let (($x21 (and (and $x141 $x124) $x104)))
 (let (($x142 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x17 (and $x142 $x21)))
 (let (($x25 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x173 (and $x25 $x17)))
 (let (($x235 (and $x75 $x173)))
 (let (($x99 (and true $x235)))
 (let (($x262 (= $x99 true)))
 (let (($x37 (= $x262 true)))
 (let (($x204 (= $x37 true)))
 (let (($x192 (= $x81 true)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x63 (= $x25 true)))
 (let (($x189 (= $x63 true)))
 (let (($x236 (= $x189 true)))
 (let (($x188 (= ?x228 input.dst.llvm-%val)))
 (let (($x55 (= $x188 true)))
 (let (($x113 (= $x55 true)))
 (let (($x131 (= $x141 true)))
 (let (($x177 (= $x131 true)))
 (let (($x11 (= $x177 true)))
 (let (($x90 (= $x142 true)))
 (let (($x127 (= $x90 true)))
 (let (($x98 (= $x127 true)))
 (let (($x129 (and $x98 $x11)))
 (let (($x226 (and $x129 $x113)))
 (let (($x140 (and $x226 $x236)))
 (let (($x146 (and $x140 $x236)))
 (let (($x128 (and $x146 $x195)))
 (let (($x28 (and $x128 $x204)))
 (let (($x254 (and $x28 $x110)))
 (let (($x209 (and $x254 $x211)))
 (let (($x214 (and $x209 $x213)))
 (let (($x137 (and $x214 $x213)))
 (let (($x147 (and $x137 $x219)))
 (let (($x240 (and $x80 $x147)))
 (let (($x64 (= false false)))
 (let (($x134 (and $x64 $x240)))
 (let (($x14 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x44 (and $x14 $x134)))
 (let (($x5 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x105 (and $x5 $x44)))
 (let (($x32 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x60 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x60)))
 (let (($x76 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x60)))
 (let (($x88 (or false (or false (and (and true (or $x16 $x76)) (or $x69 $x32))))))
 (let (($x109 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x88)))
 (let (($x23 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x88)))
 (let (($x6 (and $x23 $x105)))
 (let (($x190 (=> $x6 $x52)))
 (not $x190)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b01010000000000000000000000000100)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00101000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b01010000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b01010000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00101000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00101000000000000000000000000011)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_19)
(function @fun_19
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_19 #b01010000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x4b980004)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xb9)
                     #x4b980004
                     #xd8)
              #x4b980005
              #xff)
       #x4b980007
       #x5f))
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x46464646)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x46464646)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x46464646)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x5fb9ffd8)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #xb9b9b9b9)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #xb9b9b9b9)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x4b980007)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x80000003)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x4b980004)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x80000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00000800)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb649de78)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x59800004)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x97979797)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x68)
                     #xb649de7a
                     #x38)
              #xb649de7b
              #x0b)
       #xb649de78
       #x78))
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x97979797)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x97979797)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x0b386878)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x68686868)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x68686868)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb649de7b)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x59800007)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb649de78)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x59800004)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x20)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x255)))
 (let (($x244 (= input.spec-%var-l-0.2.0 ?x78)))
 (let (($x71 (= $x244 true)))
 (let (($x256 (= $x71 true)))
 (let (($x221 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x116 (not $x221)))
 (let (($x44 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x239 (not $x44)))
 (let (($x220 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x180 (= $x221 $x220)))
 (let (($x6 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x222 (= $x44 $x6)))
 (let (($x43 (and (and (and $x222 $x180) $x239) $x116)))
 (let (($x47 (= $x43 true)))
 (let (($x219 (not true)))
 (let (($x147 (= $x219 true)))
 (let (($x90 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x174 (not $x90)))
 (let (($x10 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x218 (not $x10)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x270 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x270 (_ bv1 32))))
 (let (($x216 (= $x90 $x137)))
 (let (($x213 (= ?x270 (_ bv0 32))))
 (let (($x214 (= $x10 $x213)))
 (let (($x215 (and (and (and $x214 $x216) $x218) $x174)))
 (let (($x68 (= $x215 true)))
 (let ((?x31 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x235 (concat ?x21 (concat ?x205 ?x31)))))
 (let (($x212 (= ?x99 input.dst.llvm-%l)))
 (let (($x207 (= $x212 true)))
 (let (($x80 (= $x207 true)))
 (let (($x50 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x18 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x62 (and true $x18)))
 (let (($x75 (and $x18 $x62)))
 (let (($x97 (and $x75 $x50)))
 (let (($x229 (= true $x97)))
 (let (($x81 (not $x13)))
 (let (($x199 (=> $x81 $x229)))
 (let (($x209 (= $x199 true)))
 (let (($x72 (= $x209 true)))
 (let (($x201 (= $x72 true)))
 (let (($x262 (= input.dst.llvm-%l ?x99)))
 (let ((?x178 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x184 (concat ?x227 (concat ?x55 (concat ?x182 ?x178)))))
 (let (($x198 (= input.dst.llvm-%val ?x184)))
 (let ((?x108 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x231 (= (_ bv0 32) ?x108)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x224 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x169)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x170)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x171 (and $x84 $x7)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x152 (and $x162 $x171)))
 (let (($x123 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x155 (and $x154 $x36)))
 (let (($x58 (not $x155)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x135 (and $x8 $x102)))
 (let (($x119 (and (not $x135) $x58)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x153 (and $x156 $x164)))
 (let (($x165 (not $x153)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x100 $x15)))
 (let (($x150 (and (not $x120) $x165)))
 (let (($x11 (and (and (and (and (and (and $x150 $x119) $x166) $x123) $x152) $x224) $x223)))
 (let (($x129 (and $x11 $x231)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x82 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x82)))
 (let (($x148 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x82)))
 (let (($x163 (or false (or false (and (and true (or $x45 $x148)) (or $x115 $x111))))))
 (let (($x143 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x163)))
 (let (($x183 (and $x143 $x129)))
 (let (($x204 (and (and $x183 $x198) $x262)))
 (let (($x9 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x28 (and $x9 $x204)))
 (let (($x192 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x263 (and $x192 $x28)))
 (let (($x117 (and $x199 $x263)))
 (let (($x110 (and true $x117)))
 (let (($x254 (= $x110 true)))
 (let (($x203 (= $x254 true)))
 (let (($x202 (= $x203 true)))
 (let (($x196 (= $x81 true)))
 (let (($x122 (= $x196 true)))
 (let (($x91 (= $x122 true)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x128 (= $x195 true)))
 (let (($x25 (= ?x184 input.dst.llvm-%val)))
 (let (($x63 (= $x25 true)))
 (let (($x189 (= $x63 true)))
 (let (($x185 (= $x183 true)))
 (let (($x193 (= $x185 true)))
 (let (($x175 (= $x193 true)))
 (let (($x149 (= $x9 true)))
 (let (($x118 (= $x149 true)))
 (let (($x89 (= $x118 true)))
 (let (($x234 (and $x89 $x175)))
 (let (($x236 (and $x234 $x189)))
 (let (($x133 (and $x236 $x128)))
 (let (($x59 (and $x133 $x128)))
 (let (($x34 (and $x59 $x91)))
 (let (($x211 (and $x34 $x202)))
 (let (($x208 (and $x211 $x201)))
 (let (($x210 (and $x208 $x80)))
 (let (($x126 (and $x210 $x68)))
 (let (($x230 (and $x126 $x68)))
 (let (($x240 (and $x230 $x147)))
 (let (($x121 (and $x240 $x47)))
 (let (($x52 (and $x90 $x121)))
 (let (($x112 (= false false)))
 (let (($x190 (and $x112 $x52)))
 (let (($x67 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x96 (and $x67 $x190)))
 (let (($x14 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x114 (and $x14 $x96)))
 (let (($x27 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x56 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x39)))
 (let (($x92 (or false (or false (and (and true (or $x77 $x56)) (or $x19 $x27))))))
 (let (($x5 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x92)))
 (let (($x106 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x92)))
 (let (($x83 (and $x106 $x114)))
 (let (($x125 (=> $x83 $x256)))
 (not $x125))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x20 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x20)))
 (let ((?x78 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x255)))
 (let (($x244 (= input.spec-%var-l-0.2.0 ?x78)))
 (let (($x71 (= $x244 true)))
 (let (($x256 (= $x71 true)))
 (let (($x221 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x116 (not $x221)))
 (let (($x44 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x239 (not $x44)))
 (let (($x220 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x180 (= $x221 $x220)))
 (let (($x6 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x222 (= $x44 $x6)))
 (let (($x43 (and (and (and $x222 $x180) $x239) $x116)))
 (let (($x47 (= $x43 true)))
 (let (($x219 (not true)))
 (let (($x147 (= $x219 true)))
 (let (($x90 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x174 (not $x90)))
 (let (($x10 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x218 (not $x10)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x270 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x137 (bvuge ?x270 (_ bv1 32))))
 (let (($x216 (= $x90 $x137)))
 (let (($x213 (= ?x270 (_ bv0 32))))
 (let (($x214 (= $x10 $x213)))
 (let (($x215 (and (and (and $x214 $x216) $x218) $x174)))
 (let (($x68 (= $x215 true)))
 (let ((?x31 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x21 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x99 (concat ?x235 (concat ?x21 (concat ?x205 ?x31)))))
 (let (($x212 (= ?x99 input.dst.llvm-%l)))
 (let (($x207 (= $x212 true)))
 (let (($x80 (= $x207 true)))
 (let (($x50 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x18 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x62 (and true $x18)))
 (let (($x75 (and $x18 $x62)))
 (let (($x97 (and $x75 $x50)))
 (let (($x229 (= true $x97)))
 (let (($x81 (not $x13)))
 (let (($x199 (=> $x81 $x229)))
 (let (($x209 (= $x199 true)))
 (let (($x72 (= $x209 true)))
 (let (($x201 (= $x72 true)))
 (let (($x262 (= input.dst.llvm-%l ?x99)))
 (let ((?x178 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x227 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x184 (concat ?x227 (concat ?x55 (concat ?x182 ?x178)))))
 (let (($x198 (= input.dst.llvm-%val ?x184)))
 (let ((?x108 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x231 (= (_ bv0 32) ?x108)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x224 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x169)))
 (let ((?x170 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x7 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x170)))
 (let (($x84 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x171 (and $x84 $x7)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x152 (and $x162 $x171)))
 (let (($x123 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x36 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x154 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x155 (and $x154 $x36)))
 (let (($x58 (not $x155)))
 (let (($x102 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x8 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x135 (and $x8 $x102)))
 (let (($x119 (and (not $x135) $x58)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x153 (and $x156 $x164)))
 (let (($x165 (not $x153)))
 (let (($x15 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x100 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x120 (and $x100 $x15)))
 (let (($x150 (and (not $x120) $x165)))
 (let (($x11 (and (and (and (and (and (and $x150 $x119) $x166) $x123) $x152) $x224) $x223)))
 (let (($x129 (and $x11 $x231)))
 (let (($x111 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x82 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x115 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x82)))
 (let (($x148 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x45 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x82)))
 (let (($x163 (or false (or false (and (and true (or $x45 $x148)) (or $x115 $x111))))))
 (let (($x143 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x163)))
 (let (($x183 (and $x143 $x129)))
 (let (($x204 (and (and $x183 $x198) $x262)))
 (let (($x9 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x28 (and $x9 $x204)))
 (let (($x192 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x263 (and $x192 $x28)))
 (let (($x117 (and $x199 $x263)))
 (let (($x110 (and true $x117)))
 (let (($x254 (= $x110 true)))
 (let (($x203 (= $x254 true)))
 (let (($x202 (= $x203 true)))
 (let (($x196 (= $x81 true)))
 (let (($x122 (= $x196 true)))
 (let (($x91 (= $x122 true)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x128 (= $x195 true)))
 (let (($x25 (= ?x184 input.dst.llvm-%val)))
 (let (($x63 (= $x25 true)))
 (let (($x189 (= $x63 true)))
 (let (($x185 (= $x183 true)))
 (let (($x193 (= $x185 true)))
 (let (($x175 (= $x193 true)))
 (let (($x149 (= $x9 true)))
 (let (($x118 (= $x149 true)))
 (let (($x89 (= $x118 true)))
 (let (($x234 (and $x89 $x175)))
 (let (($x236 (and $x234 $x189)))
 (let (($x133 (and $x236 $x128)))
 (let (($x59 (and $x133 $x128)))
 (let (($x34 (and $x59 $x91)))
 (let (($x211 (and $x34 $x202)))
 (let (($x208 (and $x211 $x201)))
 (let (($x210 (and $x208 $x80)))
 (let (($x126 (and $x210 $x68)))
 (let (($x230 (and $x126 $x68)))
 (let (($x240 (and $x230 $x147)))
 (let (($x121 (and $x240 $x47)))
 (let (($x52 (and $x90 $x121)))
 (let (($x112 (= false false)))
 (let (($x190 (and $x112 $x52)))
 (let (($x67 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x96 (and $x67 $x190)))
 (let (($x14 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x114 (and $x14 $x96)))
 (let (($x27 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x39 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x19 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x39)))
 (let (($x56 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x77 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x39)))
 (let (($x92 (or false (or false (and (and true (or $x77 $x56)) (or $x19 $x27))))))
 (let (($x5 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x92)))
 (let (($x106 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x92)))
 (let (($x83 (and $x106 $x114)))
 (let (($x125 (=> $x83 $x256)))
 (not $x125))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x125)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x139)))
 (let (($x29 (= input.spec-%var-l-0.2.0 ?x237)))
 (let (($x243 (= $x29 true)))
 (let (($x242 (= $x243 true)))
 (let (($x98 (= false false)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x83 (=> $x6 $x98)))
 (let (($x96 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x180 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x114 (= $x180 $x96)))
 (let (($x52 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x190 (= $x6 $x52)))
 (let (($x35 (and (and $x190 $x114) $x83)))
 (let (($x295 (= $x35 true)))
 (let (($x264 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x239 (= $x180 $x264)))
 (let (($x221 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x220 (= $x6 $x221)))
 (let (($x44 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x116 (and (and $x44 $x220) $x239)))
 (let (($x43 (= $x116 true)))
 (let (($x216 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x68 (=> $x216 $x98)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x217 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x174 (bvuge ?x217 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x215 (= $x149 $x174)))
 (let (($x218 (= ?x217 (_ bv0 32))))
 (let (($x238 (= $x216 $x218)))
 (let (($x230 (and (and $x238 $x215) $x68)))
 (let (($x219 (= $x230 true)))
 (let ((?x31 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x110 (concat ?x117 (concat ?x204 (concat ?x17 ?x31)))))
 (let (($x213 (= ?x110 input.dst.llvm-%l)))
 (let (($x214 (= $x213 true)))
 (let (($x90 (= $x214 true)))
 (let (($x173 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x97 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x229 (and true $x97)))
 (let (($x199 (and $x97 $x229)))
 (let (($x235 (and $x199 $x173)))
 (let (($x104 (= true $x235)))
 (let (($x81 (not $x13)))
 (let (($x21 (=> $x81 $x104)))
 (let (($x210 (= $x21 true)))
 (let (($x142 (= $x210 true)))
 (let (($x10 (= $x142 true)))
 (let (($x254 (= input.dst.llvm-%l ?x110)))
 (let ((?x182 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x146 (concat ?x140 (concat ?x63 (concat ?x93 ?x182)))))
 (let (($x73 (= input.dst.llvm-%val ?x146)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x11)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x224 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x224)))
 (let ((?x171 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x171)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x131 (and $x7 $x152)))
 (let (($x170 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x170 $x131)))
 (let (($x84 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x66 (and $x119 $x168)))
 (let (($x166 (not $x66)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (and $x36 $x155)))
 (let (($x145 (and (not $x58) $x166)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (and $x150 $x8)))
 (let (($x135 (not $x102)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x148 $x136)))
 (let (($x154 (and (not $x165) $x135)))
 (let (($x175 (and (and (and (and (and (and $x154 $x145) $x141) $x84) $x169) $x177) $x223)))
 (let (($x234 (and $x175 $x108)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x111 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x111)))
 (let (($x156 (or false (or false (and (and true (or $x38 $x157)) (or $x143 $x100))))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x156)))
 (let (($x187 (and $x153 $x234)))
 (let (($x202 (and (and $x187 $x73) $x254)))
 (let (($x151 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x211 (and $x151 $x202)))
 (let (($x196 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x209 (and $x196 $x211)))
 (let (($x72 (and $x21 $x209)))
 (let (($x201 (and true $x72)))
 (let (($x208 (= $x201 true)))
 (let (($x212 (= $x208 true)))
 (let (($x207 (= $x212 true)))
 (let (($x191 (= $x81 true)))
 (let (($x197 (= $x191 true)))
 (let (($x18 (= $x197 true)))
 (let (($x122 (= $x196 true)))
 (let (($x91 (= $x122 true)))
 (let (($x34 (= $x91 true)))
 (let (($x192 (= ?x146 input.dst.llvm-%val)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x226 (= $x187 true)))
 (let (($x227 (= $x226 true)))
 (let (($x228 (= $x227 true)))
 (let (($x74 (= $x151 true)))
 (let (($x161 (= $x74 true)))
 (let (($x82 (= $x161 true)))
 (let (($x188 (and $x82 $x228)))
 (let (($x128 (and $x188 $x195)))
 (let (($x22 (and $x128 $x34)))
 (let (($x232 (and $x22 $x34)))
 (let (($x62 (and $x232 $x18)))
 (let (($x80 (and $x62 $x207)))
 (let (($x270 (and $x80 $x10)))
 (let (($x137 (and $x270 $x90)))
 (let (($x147 (and $x137 $x219)))
 (let (($x240 (and $x147 $x219)))
 (let (($x47 (and $x240 $x43)))
 (let (($x194 (and $x47 $x295)))
 (let (($x107 (and $x149 $x194)))
 (let (($x181 (and $x98 $x107)))
 (let (($x127 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x20 (and $x127 $x181)))
 (let (($x67 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x255 (and $x67 $x20)))
 (let (($x23 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x69 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x32 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x69)))
 (let (($x42 (or false (or false (and (and true (or $x103 $x32)) (or $x109 $x23))))))
 (let (($x14 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x42)))
 (let (($x60 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x42)))
 (let (($x78 (and $x60 $x255)))
 (let (($x48 (=> $x78 $x242)))
 (not $x48)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x125 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x125)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x139)))
 (let (($x29 (= input.spec-%var-l-0.2.0 ?x237)))
 (let (($x243 (= $x29 true)))
 (let (($x242 (= $x243 true)))
 (let (($x98 (= false false)))
 (let (($x6 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x83 (=> $x6 $x98)))
 (let (($x96 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x180 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x114 (= $x180 $x96)))
 (let (($x52 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x190 (= $x6 $x52)))
 (let (($x35 (and (and $x190 $x114) $x83)))
 (let (($x295 (= $x35 true)))
 (let (($x264 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x239 (= $x180 $x264)))
 (let (($x221 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x220 (= $x6 $x221)))
 (let (($x44 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x116 (and (and $x44 $x220) $x239)))
 (let (($x43 (= $x116 true)))
 (let (($x216 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x68 (=> $x216 $x98)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x217 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x174 (bvuge ?x217 (_ bv1 32))))
 (let (($x149 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x215 (= $x149 $x174)))
 (let (($x218 (= ?x217 (_ bv0 32))))
 (let (($x238 (= $x216 $x218)))
 (let (($x230 (and (and $x238 $x215) $x68)))
 (let (($x219 (= $x230 true)))
 (let ((?x31 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x17 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x204 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x117 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x110 (concat ?x117 (concat ?x204 (concat ?x17 ?x31)))))
 (let (($x213 (= ?x110 input.dst.llvm-%l)))
 (let (($x214 (= $x213 true)))
 (let (($x90 (= $x214 true)))
 (let (($x173 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x97 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x229 (and true $x97)))
 (let (($x199 (and $x97 $x229)))
 (let (($x235 (and $x199 $x173)))
 (let (($x104 (= true $x235)))
 (let (($x81 (not $x13)))
 (let (($x21 (=> $x81 $x104)))
 (let (($x210 (= $x21 true)))
 (let (($x142 (= $x210 true)))
 (let (($x10 (= $x142 true)))
 (let (($x254 (= input.dst.llvm-%l ?x110)))
 (let ((?x182 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x93 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x140 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x146 (concat ?x140 (concat ?x63 (concat ?x93 ?x182)))))
 (let (($x73 (= input.dst.llvm-%val ?x146)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x11)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x70)))
 (let ((?x224 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x177 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x224)))
 (let ((?x171 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x152 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x171)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x131 (and $x7 $x152)))
 (let (($x170 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x169 (and $x170 $x131)))
 (let (($x84 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x141 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x168 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x119 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x66 (and $x119 $x168)))
 (let (($x166 (not $x66)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x58 (and $x36 $x155)))
 (let (($x145 (and (not $x58) $x166)))
 (let (($x8 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x150 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x102 (and $x150 $x8)))
 (let (($x135 (not $x102)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x165 (and $x148 $x136)))
 (let (($x154 (and (not $x165) $x135)))
 (let (($x175 (and (and (and (and (and (and $x154 $x145) $x141) $x84) $x169) $x177) $x223)))
 (let (($x234 (and $x175 $x108)))
 (let (($x100 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x111 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x143 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x111)))
 (let (($x157 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x111)))
 (let (($x156 (or false (or false (and (and true (or $x38 $x157)) (or $x143 $x100))))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x156)))
 (let (($x187 (and $x153 $x234)))
 (let (($x202 (and (and $x187 $x73) $x254)))
 (let (($x151 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x211 (and $x151 $x202)))
 (let (($x196 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x209 (and $x196 $x211)))
 (let (($x72 (and $x21 $x209)))
 (let (($x201 (and true $x72)))
 (let (($x208 (= $x201 true)))
 (let (($x212 (= $x208 true)))
 (let (($x207 (= $x212 true)))
 (let (($x191 (= $x81 true)))
 (let (($x197 (= $x191 true)))
 (let (($x18 (= $x197 true)))
 (let (($x122 (= $x196 true)))
 (let (($x91 (= $x122 true)))
 (let (($x34 (= $x91 true)))
 (let (($x192 (= ?x146 input.dst.llvm-%val)))
 (let (($x41 (= $x192 true)))
 (let (($x195 (= $x41 true)))
 (let (($x226 (= $x187 true)))
 (let (($x227 (= $x226 true)))
 (let (($x228 (= $x227 true)))
 (let (($x74 (= $x151 true)))
 (let (($x161 (= $x74 true)))
 (let (($x82 (= $x161 true)))
 (let (($x188 (and $x82 $x228)))
 (let (($x128 (and $x188 $x195)))
 (let (($x22 (and $x128 $x34)))
 (let (($x232 (and $x22 $x34)))
 (let (($x62 (and $x232 $x18)))
 (let (($x80 (and $x62 $x207)))
 (let (($x270 (and $x80 $x10)))
 (let (($x137 (and $x270 $x90)))
 (let (($x147 (and $x137 $x219)))
 (let (($x240 (and $x147 $x219)))
 (let (($x47 (and $x240 $x43)))
 (let (($x194 (and $x47 $x295)))
 (let (($x107 (and $x149 $x194)))
 (let (($x181 (and $x98 $x107)))
 (let (($x127 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x20 (and $x127 $x181)))
 (let (($x67 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x255 (and $x67 $x20)))
 (let (($x23 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x69 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x69)))
 (let (($x32 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x69)))
 (let (($x42 (or false (or false (and (and true (or $x103 $x32)) (or $x109 $x23))))))
 (let (($x14 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x42)))
 (let (($x60 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x42)))
 (let (($x78 (and $x60 $x255)))
 (let (($x48 (=> $x78 $x242)))
 (not $x48)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%l #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node_next-0.L2%9%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%9%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-l-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ #b01010000000000000000000000000100)
(= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ #b00101000000000000000000000000000)
(= input.dst.llvm-%val #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin #b01010000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end #b01010000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin #b00101000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end #b00101000000000000000000000000011)
(= input.spec-%var-val-0 #b00000000000000000000000000000000)
(= input.spec-%tmpvar-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.spec-%var-node_val-0.L2%9%bbentry #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_19)
(function @fun_19
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_19 #b01010000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x00008000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #x264bfffc)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xb0e14024)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #xf3)
                     #xb0e14025
                     #x58)
              #xb0e14024
              #x38)
       #xb0e14027
       #xb7))
  (define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #x0c0c0c0c)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #xb7f35838)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #xf3f3f3f3)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #xf3f3f3f3)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xb0e14027)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #x264bffff)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xb0e14024)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #x264bfffc)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 1
==solver_id: 0
==recvd_data
==DATA_START==
sat
(
  (define-fun input.spec-%var-l-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x5e03cd54)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32)
    #xffeffffc)
  (define-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32)
    #xbbbbbbbb)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x44)
                     #x5e03cd56
                     #x00)
              #x5e03cd57
              #x5e)
       #x5e03cd54
       #x40))
  (define-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32)
    #xbbbbbbbb)
  (define-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32)
    #xbbbbbbbb)
  (define-fun input.spec-%var-l-0.2.0 () (_ BitVec 32)
    #xbbbbbbbb)
  (define-fun input.dst.llvm-%l () (_ BitVec 32)
    #x5e004440)
  (define-fun input.spec-%var-val-0 () (_ BitVec 32)
    #x44444444)
  (define-fun input.dst.llvm-%val () (_ BitVec 32)
    #x44444444)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x5e03cd57)
  (define-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32)
    #xffefffff)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x5e03cd54)
  (define-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32)
    #xffeffffc)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x45)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x12)))
 (let (($x271 (= input.spec-%var-l-0.2.0 ?x245)))
 (let (($x246 (= $x271 true)))
 (let (($x267 (= $x246 true)))
 (let (($x151 (= false false)))
 (let (($x180 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x176 (=> $x180 $x151)))
 (let (($x239 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x116 (not $x239)))
 (let (($x78 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x225 (= $x239 $x78)))
 (let (($x20 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x255 (= $x180 $x20)))
 (let (($x256 (and (and (and $x255 $x225) $x116) $x176)))
 (let (($x244 (= $x256 true)))
 (let (($x96 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x114 (= $x239 $x96)))
 (let (($x52 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x190 (= $x180 $x52)))
 (let (($x47 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x295 (and (and (and (and (not $x180) $x116) $x47) $x190) $x114)))
 (let (($x194 (= $x295 true)))
 (let (($x126 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x134 (=> $x126 $x151)))
 (let (($x161 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x240 (not $x161)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x98 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x98 (_ bv1 32))))
 (let (($x147 (= $x161 $x219)))
 (let (($x68 (= ?x98 (_ bv0 32))))
 (let (($x230 (= $x126 $x68)))
 (let (($x6 (and (and (and $x230 $x147) $x240) $x134)))
 (let (($x222 (= $x6 true)))
 (let ((?x99 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x208 (concat ?x201 (concat ?x211 (concat ?x110 ?x99)))))
 (let (($x238 (= ?x208 input.dst.llvm-%l)))
 (let (($x149 (= $x238 true)))
 (let (($x174 (= $x149 true)))
 (let (($x117 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x104 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x21 (and true $x104)))
 (let (($x73 (and $x104 $x21)))
 (let (($x262 (and $x73 $x117)))
 (let (($x204 (= true $x262)))
 (let (($x81 (not $x13)))
 (let (($x200 (=> $x81 $x204)))
 (let (($x9 (= $x200 true)))
 (let (($x216 (= $x9 true)))
 (let (($x217 (= $x216 true)))
 (let (($x212 (= input.dst.llvm-%l ?x208)))
 (let ((?x182 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x196 (concat ?x59 (concat ?x195 (concat ?x189 ?x182)))))
 (let (($x17 (= input.dst.llvm-%val ?x196)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x11)))
 (let ((?x223 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x175 (= (_ bv0 32) ?x223)))
 (let ((?x193 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x70 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x193)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x185 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x169)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x224 (and $x131 $x185)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x152 $x224)))
 (let (($x171 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x170 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x231 $x123)))
 (let (($x129 (not $x141)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x66 $x166)))
 (let (($x84 (and (not $x145) $x129)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (and $x36 $x155)))
 (let (($x179 (not $x58)))
 (let (($x163 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x144 $x163)))
 (let (($x168 (and (not $x154) $x179)))
 (let (($x188 (and (and (and (and (and (and $x168 $x84) $x170) $x171) $x177) $x70) $x175)))
 (let (($x55 (and $x188 $x108)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x15)))
 (let (($x8 (or false (or false (and (and true (or $x120 $x160)) (or $x148 $x136))))))
 (let (($x135 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x8)))
 (let (($x236 (and $x135 $x55)))
 (let (($x80 (and (and $x236 $x17) $x212)))
 (let (($x115 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x210 (and $x115 $x80)))
 (let (($x197 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x142 (and $x197 $x210)))
 (let (($x10 (and $x200 $x142)))
 (let (($x270 (and true $x10)))
 (let (($x213 (= $x270 true)))
 (let (($x214 (= $x213 true)))
 (let (($x90 (= $x214 true)))
 (let (($x50 (= $x81 true)))
 (let (($x97 (= $x50 true)))
 (let (($x229 (= $x97 true)))
 (let (($x18 (= $x197 true)))
 (let (($x62 (= $x18 true)))
 (let (($x124 (= $x62 true)))
 (let (($x122 (= ?x196 input.dst.llvm-%val)))
 (let (($x91 (= $x122 true)))
 (let (($x34 (= $x91 true)))
 (let (($x140 (= $x236 true)))
 (let (($x184 (= $x140 true)))
 (let (($x25 (= $x184 true)))
 (let (($x164 (= $x115 true)))
 (let (($x111 (= $x164 true)))
 (let (($x38 (= $x111 true)))
 (let (($x63 (and $x38 $x25)))
 (let (($x22 (and $x63 $x34)))
 (let (($x75 (and $x22 $x124)))
 (let (($x206 (and $x75 $x124)))
 (let (($x199 (and $x206 $x229)))
 (let (($x137 (and $x199 $x90)))
 (let (($x218 (and $x137 $x217)))
 (let (($x215 (and $x218 $x174)))
 (let (($x221 (and $x215 $x222)))
 (let (($x220 (and $x221 $x222)))
 (let (($x107 (and $x220 $x194)))
 (let (($x125 (and $x107 $x244)))
 (let (($x139 (and $x161 $x125)))
 (let (($x237 (and $x151 $x139)))
 (let (($x89 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x29 (and $x89 $x237)))
 (let (($x127 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x243 (and $x127 $x29)))
 (let (($x106 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x19 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x27 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x19)))
 (let (($x33 (or false (or false (and (and true (or $x95 $x27)) (or $x5 $x106))))))
 (let (($x67 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x33)))
 (let (($x39 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x33)))
 (let (($x242 (and $x39 $x243)))
 (let (($x65 (=> $x242 $x267)))
 (not $x65)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x45 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x12 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x45)))
 (let ((?x245 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x12)))
 (let (($x271 (= input.spec-%var-l-0.2.0 ?x245)))
 (let (($x246 (= $x271 true)))
 (let (($x267 (= $x246 true)))
 (let (($x151 (= false false)))
 (let (($x180 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x176 (=> $x180 $x151)))
 (let (($x239 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x116 (not $x239)))
 (let (($x78 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x225 (= $x239 $x78)))
 (let (($x20 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x255 (= $x180 $x20)))
 (let (($x256 (and (and (and $x255 $x225) $x116) $x176)))
 (let (($x244 (= $x256 true)))
 (let (($x96 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x114 (= $x239 $x96)))
 (let (($x52 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x190 (= $x180 $x52)))
 (let (($x47 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x295 (and (and (and (and (not $x180) $x116) $x47) $x190) $x114)))
 (let (($x194 (= $x295 true)))
 (let (($x126 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x134 (=> $x126 $x151)))
 (let (($x161 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x240 (not $x161)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x98 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x98 (_ bv1 32))))
 (let (($x147 (= $x161 $x219)))
 (let (($x68 (= ?x98 (_ bv0 32))))
 (let (($x230 (= $x126 $x68)))
 (let (($x6 (and (and (and $x230 $x147) $x240) $x134)))
 (let (($x222 (= $x6 true)))
 (let ((?x99 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x208 (concat ?x201 (concat ?x211 (concat ?x110 ?x99)))))
 (let (($x238 (= ?x208 input.dst.llvm-%l)))
 (let (($x149 (= $x238 true)))
 (let (($x174 (= $x149 true)))
 (let (($x117 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x104 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x21 (and true $x104)))
 (let (($x73 (and $x104 $x21)))
 (let (($x262 (and $x73 $x117)))
 (let (($x204 (= true $x262)))
 (let (($x81 (not $x13)))
 (let (($x200 (=> $x81 $x204)))
 (let (($x9 (= $x200 true)))
 (let (($x216 (= $x9 true)))
 (let (($x217 (= $x216 true)))
 (let (($x212 (= input.dst.llvm-%l ?x208)))
 (let ((?x182 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x189 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x196 (concat ?x59 (concat ?x195 (concat ?x189 ?x182)))))
 (let (($x17 (= input.dst.llvm-%val ?x196)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x11)))
 (let ((?x223 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x175 (= (_ bv0 32) ?x223)))
 (let ((?x193 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x70 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x193)))
 (let ((?x169 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x185 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x169)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x224 (and $x131 $x185)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x152 $x224)))
 (let (($x171 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x170 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x123 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x141 (and $x231 $x123)))
 (let (($x129 (not $x141)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x145 (and $x66 $x166)))
 (let (($x84 (and (not $x145) $x129)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x36 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x58 (and $x36 $x155)))
 (let (($x179 (not $x58)))
 (let (($x163 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x144 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x154 (and $x144 $x163)))
 (let (($x168 (and (not $x154) $x179)))
 (let (($x188 (and (and (and (and (and (and $x168 $x84) $x170) $x171) $x177) $x70) $x175)))
 (let (($x55 (and $x188 $x108)))
 (let (($x136 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x15 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x15)))
 (let (($x160 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x15)))
 (let (($x8 (or false (or false (and (and true (or $x120 $x160)) (or $x148 $x136))))))
 (let (($x135 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x8)))
 (let (($x236 (and $x135 $x55)))
 (let (($x80 (and (and $x236 $x17) $x212)))
 (let (($x115 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x210 (and $x115 $x80)))
 (let (($x197 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x142 (and $x197 $x210)))
 (let (($x10 (and $x200 $x142)))
 (let (($x270 (and true $x10)))
 (let (($x213 (= $x270 true)))
 (let (($x214 (= $x213 true)))
 (let (($x90 (= $x214 true)))
 (let (($x50 (= $x81 true)))
 (let (($x97 (= $x50 true)))
 (let (($x229 (= $x97 true)))
 (let (($x18 (= $x197 true)))
 (let (($x62 (= $x18 true)))
 (let (($x124 (= $x62 true)))
 (let (($x122 (= ?x196 input.dst.llvm-%val)))
 (let (($x91 (= $x122 true)))
 (let (($x34 (= $x91 true)))
 (let (($x140 (= $x236 true)))
 (let (($x184 (= $x140 true)))
 (let (($x25 (= $x184 true)))
 (let (($x164 (= $x115 true)))
 (let (($x111 (= $x164 true)))
 (let (($x38 (= $x111 true)))
 (let (($x63 (and $x38 $x25)))
 (let (($x22 (and $x63 $x34)))
 (let (($x75 (and $x22 $x124)))
 (let (($x206 (and $x75 $x124)))
 (let (($x199 (and $x206 $x229)))
 (let (($x137 (and $x199 $x90)))
 (let (($x218 (and $x137 $x217)))
 (let (($x215 (and $x218 $x174)))
 (let (($x221 (and $x215 $x222)))
 (let (($x220 (and $x221 $x222)))
 (let (($x107 (and $x220 $x194)))
 (let (($x125 (and $x107 $x244)))
 (let (($x139 (and $x161 $x125)))
 (let (($x237 (and $x151 $x139)))
 (let (($x89 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x29 (and $x89 $x237)))
 (let (($x127 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x243 (and $x127 $x29)))
 (let (($x106 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x19 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x19)))
 (let (($x27 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x19)))
 (let (($x33 (or false (or false (and (and true (or $x95 $x27)) (or $x5 $x106))))))
 (let (($x67 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x33)))
 (let (($x39 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x33)))
 (let (($x242 (and $x39 $x243)))
 (let (($x65 (=> $x242 $x267)))
 (not $x65)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x180)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x116)))
 (let (($x47 (= input.spec-%var-l-0.2.0 ?x43)))
 (let (($x46 (= $x47 true)))
 (let (($x87 (= $x46 true)))
 (let (($x132 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x326 (= $x94 $x132)))
 (let (($x251 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x125 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x319 (and $x125 $x251)))
 (let (($x338 (=> $x319 $x326)))
 (let (($x325 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x24 (= $x324 $x325)))
 (let (($x51 (=> $x319 $x24)))
 (let (($x321 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x322 (=> $x319 $x321)))
 (let (($x335 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x317 (= $x251 $x335)))
 (let (($x318 (=> $x125 $x317)))
 (let (($x115 (= false false)))
 (let (($x258 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x289 (and $x125 $x258)))
 (let (($x283 (=> $x289 $x115)))
 (let (($x315 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x316 (= $x258 $x315)))
 (let (($x334 (=> $x125 $x316)))
 (let (($x333 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x307 (=> $x125 $x333)))
 (let (($x52 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x279 (=> $x52 $x115)))
 (let (($x305 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x306 (= $x125 $x305)))
 (let (($x331 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x332 (= $x52 $x331)))
 (let (($x340 (and (and (and (and (and (and $x332 $x306) $x279) $x307) $x334) $x283) $x318)))
 (let (($x343 (and (and (and $x340 $x322) $x51) $x338)))
 (let (($x344 (= $x343 true)))
 (let (($x57 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x251 $x57)))
 (let (($x284 (=> $x125 $x290)))
 (let (($x30 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x282 (= $x258 $x30)))
 (let (($x299 (=> $x125 $x282)))
 (let (($x281 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x300 (=> $x125 $x281)))
 (let (($x278 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x288 (= $x125 $x278)))
 (let (($x311 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x130 (= $x52 $x311)))
 (let (($x287 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x301 (and (and (and (and (and (and $x287 $x130) $x288) $x279) $x300) $x299) $x283)))
 (let (($x302 (and $x301 $x284)))
 (let (($x303 (= $x302 true)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x114 (concat ?x96 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x20 (concat ?x194 ?x114))))
 (let ((?x40 (bvadd ?x255 (_ bv4 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x76))))
 (let (($x85 (= (_ bv0 32) ?x61)))
 (let ((?x248 (ite $x85 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x248 (_ bv1 32))))
 (let (($x268 (= $x251 $x252)))
 (let (($x111 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x243 (and $x111 $x125)))
 (let (($x272 (=> $x243 $x268)))
 (let (($x294 (= ?x248 (_ bv0 32))))
 (let (($x250 (= $x258 $x294)))
 (let (($x259 (=> $x243 $x250)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x257))))
 (let (($x246 (= input.spec-%var-l-0.2.1.2.0 ?x271)))
 (let (($x267 (=> $x243 $x246)))
 (let (($x78 (= (_ bv0 32) ?x255)))
 (let ((?x225 (ite $x78 (_ bv0 32) (_ bv1 32))))
 (let (($x139 (bvuge ?x225 (_ bv1 32))))
 (let (($x237 (= $x125 $x139)))
 (let (($x29 (=> $x111 $x237)))
 (let (($x256 (and $x111 $x52)))
 (let (($x244 (=> $x256 $x115)))
 (let (($x79 (= ?x225 (_ bv0 32))))
 (let (($x71 (= $x52 $x79)))
 (let (($x176 (=> $x111 $x71)))
 (let (($x83 (=> $x111 $x47)))
 (let (($x44 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x222 (=> $x44 $x115)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x240 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x134 (bvuge ?x240 (_ bv1 32))))
 (let (($x6 (= $x111 $x134)))
 (let (($x105 (= ?x240 (_ bv0 32))))
 (let (($x151 (= $x44 $x105)))
 (let (($x274 (and (and (and (and (and (and $x151 $x6) $x222) $x83) $x176) $x244) $x29)))
 (let (($x275 (and (and (and $x274 $x267) $x259) $x272)))
 (let (($x309 (= $x275 true)))
 (let ((?x254 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x213 (concat ?x270 (concat ?x210 (concat ?x208 ?x254)))))
 (let (($x230 (= ?x213 input.dst.llvm-%l)))
 (let (($x161 (= $x230 true)))
 (let (($x219 (= $x161 true)))
 (let (($x201 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x204 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x200 (and true $x204)))
 (let (($x17 (and $x204 $x200)))
 (let (($x202 (and $x17 $x201)))
 (let (($x211 (= true $x202)))
 (let (($x81 (not $x13)))
 (let (($x28 (=> $x81 $x211)))
 (let (($x74 (= $x28 true)))
 (let (($x126 (= $x74 true)))
 (let (($x98 (= $x126 true)))
 (let (($x214 (= input.dst.llvm-%l ?x213)))
 (let ((?x182 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x197 (concat ?x191 (concat ?x34 (concat ?x128 ?x182)))))
 (let (($x110 (= input.dst.llvm-%val ?x197)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x11)))
 (let ((?x175 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x188 (= (_ bv0 32) ?x175)))
 (let ((?x228 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x228)))
 (let ((?x177 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x227 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x177)))
 (let (($x224 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x193 (and $x224 $x227)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x70 (and $x185 $x193)))
 (let (($x169 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x152 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x234 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x170 (and $x234 $x183)))
 (let (($x187 (not $x170)))
 (let (($x129 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x141 $x129)))
 (let (($x171 (and (not $x84) $x187)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x66 $x166)))
 (let (($x162 (not $x145)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x156 $x153)))
 (let (($x123 (and (not $x168) $x162)))
 (let (($x63 (and (and (and (and (and (and $x123 $x171) $x152) $x169) $x70) $x223) $x188)))
 (let (($x178 (and $x63 $x108)))
 (let (($x163 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x165 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x165)))
 (let (($x155 (or false (or false (and (and true (or $x167 $x150)) (or $x144 $x163))))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x155)))
 (let (($x133 (and $x179 $x178)))
 (let (($x137 (and (and $x133 $x110) $x214)))
 (let (($x100 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x9 (and $x100 $x137)))
 (let (($x97 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x216 (and $x97 $x9)))
 (let (($x217 (and $x28 $x216)))
 (let (($x218 (and true $x217)))
 (let (($x238 (= $x218 true)))
 (let (($x149 (= $x238 true)))
 (let (($x174 (= $x149 true)))
 (let (($x235 (= $x81 true)))
 (let (($x104 (= $x235 true)))
 (let (($x21 (= $x104 true)))
 (let (($x229 (= $x97 true)))
 (let (($x199 (= $x229 true)))
 (let (($x37 (= $x199 true)))
 (let (($x18 (= ?x197 input.dst.llvm-%val)))
 (let (($x62 (= $x18 true)))
 (let (($x124 (= $x62 true)))
 (let (($x59 (= $x133 true)))
 (let (($x192 (= $x59 true)))
 (let (($x41 (= $x192 true)))
 (let (($x102 (= $x100 true)))
 (let (($x15 (= $x102 true)))
 (let (($x120 (= $x15 true)))
 (let (($x195 (and $x120 $x41)))
 (let (($x75 (and $x195 $x124)))
 (let (($x198 (and $x75 $x37)))
 (let (($x173 (and $x198 $x37)))
 (let (($x73 (and $x173 $x21)))
 (let (($x215 (and $x73 $x174)))
 (let (($x68 (and $x215 $x98)))
 (let (($x147 (and $x68 $x219)))
 (let (($x310 (and $x147 $x309)))
 (let (($x276 (and $x310 $x309)))
 (let (($x304 (and $x276 $x303)))
 (let (($x345 (and $x304 $x344)))
 (let (($x346 (and $x111 $x345)))
 (let (($x347 (and $x115 $x346)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x348 (and $x54 $x347)))
 (let (($x89 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x349 (and $x89 $x348)))
 (let (($x60 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x109 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x23 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x109)))
 (let (($x49 (or false (or false (and (and true (or $x88 $x23)) (or $x14 $x60))))))
 (let (($x127 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x49)))
 (let (($x69 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x49)))
 (let (($x350 (and $x69 $x349)))
 (let (($x158 (=> $x350 $x87)))
 (not $x158)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x180)))
 (let ((?x43 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x116)))
 (let (($x47 (= input.spec-%var-l-0.2.0 ?x43)))
 (let (($x46 (= $x47 true)))
 (let (($x87 (= $x46 true)))
 (let (($x132 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x326 (= $x94 $x132)))
 (let (($x251 (bvuge input.spec-%var-l-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x125 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x319 (and $x125 $x251)))
 (let (($x338 (=> $x319 $x326)))
 (let (($x325 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.1.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-l-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x24 (= $x324 $x325)))
 (let (($x51 (=> $x319 $x24)))
 (let (($x321 (= input.spec-%var-l-0.2.1.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.1.2.0)))
 (let (($x322 (=> $x319 $x321)))
 (let (($x335 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv1 32))))
 (let (($x317 (= $x251 $x335)))
 (let (($x318 (=> $x125 $x317)))
 (let (($x115 (= false false)))
 (let (($x258 (= input.spec-%var-l-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x289 (and $x125 $x258)))
 (let (($x283 (=> $x289 $x115)))
 (let (($x315 (= input.spec-%var-node_next-0.L2%9%bbentry.2.1.0 (_ bv0 32))))
 (let (($x316 (= $x258 $x315)))
 (let (($x334 (=> $x125 $x316)))
 (let (($x333 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node_next-0.L2%9%bbentry.2.0)))
 (let (($x307 (=> $x125 $x333)))
 (let (($x52 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x279 (=> $x52 $x115)))
 (let (($x305 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x306 (= $x125 $x305)))
 (let (($x331 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x332 (= $x52 $x331)))
 (let (($x340 (and (and (and (and (and (and $x332 $x306) $x279) $x307) $x334) $x283) $x318)))
 (let (($x343 (and (and (and $x340 $x322) $x51) $x338)))
 (let (($x344 (= $x343 true)))
 (let (($x57 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x290 (= $x251 $x57)))
 (let (($x284 (=> $x125 $x290)))
 (let (($x30 (= input.spec-%var-node-0.L2%9%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x282 (= $x258 $x30)))
 (let (($x299 (=> $x125 $x282)))
 (let (($x281 (= input.spec-%var-l-0.2.1.2.0 input.spec-%var-node-0.L2%9%bbentry.1.2.0)))
 (let (($x300 (=> $x125 $x281)))
 (let (($x278 (bvuge input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv1 32))))
 (let (($x288 (= $x125 $x278)))
 (let (($x311 (= input.spec-%var-node-0.L2%9%bbentry.1.0 (_ bv0 32))))
 (let (($x130 (= $x52 $x311)))
 (let (($x287 (= input.spec-%var-l-0.2.0 input.spec-%var-node-0.L2%9%bbentry.0)))
 (let (($x301 (and (and (and (and (and (and $x287 $x130) $x288) $x279) $x300) $x299) $x283)))
 (let (($x302 (and $x301 $x284)))
 (let (($x303 (= $x302 true)))
 (let ((?x96 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))))
 (let ((?x114 (concat ?x96 (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv4 32))))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv2 32)))))
 (let ((?x20 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x20 (concat ?x194 ?x114))))
 (let ((?x40 (bvadd ?x255 (_ bv4 32))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv1 32))) (select input.dst.llvm-mem ?x40))))
 (let ((?x61 (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x40 (_ bv2 32))) ?x76))))
 (let (($x85 (= (_ bv0 32) ?x61)))
 (let ((?x248 (ite $x85 (_ bv0 32) (_ bv1 32))))
 (let (($x252 (bvuge ?x248 (_ bv1 32))))
 (let (($x268 (= $x251 $x252)))
 (let (($x111 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x243 (and $x111 $x125)))
 (let (($x272 (=> $x243 $x268)))
 (let (($x294 (= ?x248 (_ bv0 32))))
 (let (($x250 (= $x258 $x294)))
 (let (($x259 (=> $x243 $x250)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x257))))
 (let (($x246 (= input.spec-%var-l-0.2.1.2.0 ?x271)))
 (let (($x267 (=> $x243 $x246)))
 (let (($x78 (= (_ bv0 32) ?x255)))
 (let ((?x225 (ite $x78 (_ bv0 32) (_ bv1 32))))
 (let (($x139 (bvuge ?x225 (_ bv1 32))))
 (let (($x237 (= $x125 $x139)))
 (let (($x29 (=> $x111 $x237)))
 (let (($x256 (and $x111 $x52)))
 (let (($x244 (=> $x256 $x115)))
 (let (($x79 (= ?x225 (_ bv0 32))))
 (let (($x71 (= $x52 $x79)))
 (let (($x176 (=> $x111 $x71)))
 (let (($x83 (=> $x111 $x47)))
 (let (($x44 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x222 (=> $x44 $x115)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x240 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x134 (bvuge ?x240 (_ bv1 32))))
 (let (($x6 (= $x111 $x134)))
 (let (($x105 (= ?x240 (_ bv0 32))))
 (let (($x151 (= $x44 $x105)))
 (let (($x274 (and (and (and (and (and (and $x151 $x6) $x222) $x83) $x176) $x244) $x29)))
 (let (($x275 (and (and (and $x274 $x267) $x259) $x272)))
 (let (($x309 (= $x275 true)))
 (let ((?x254 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x213 (concat ?x270 (concat ?x210 (concat ?x208 ?x254)))))
 (let (($x230 (= ?x213 input.dst.llvm-%l)))
 (let (($x161 (= $x230 true)))
 (let (($x219 (= $x161 true)))
 (let (($x201 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x204 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x200 (and true $x204)))
 (let (($x17 (and $x204 $x200)))
 (let (($x202 (and $x17 $x201)))
 (let (($x211 (= true $x202)))
 (let (($x81 (not $x13)))
 (let (($x28 (=> $x81 $x211)))
 (let (($x74 (= $x28 true)))
 (let (($x126 (= $x74 true)))
 (let (($x98 (= $x126 true)))
 (let (($x214 (= input.dst.llvm-%l ?x213)))
 (let ((?x182 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x34 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x197 (concat ?x191 (concat ?x34 (concat ?x128 ?x182)))))
 (let (($x110 (= input.dst.llvm-%val ?x197)))
 (let ((?x11 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x108 (= (_ bv0 32) ?x11)))
 (let ((?x175 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x188 (= (_ bv0 32) ?x175)))
 (let ((?x228 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x223 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x228)))
 (let ((?x177 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x227 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x177)))
 (let (($x224 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x193 (and $x224 $x227)))
 (let (($x185 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x70 (and $x185 $x193)))
 (let (($x169 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x152 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x234 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x170 (and $x234 $x183)))
 (let (($x187 (not $x170)))
 (let (($x129 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x141 $x129)))
 (let (($x171 (and (not $x84) $x187)))
 (let (($x166 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x145 (and $x66 $x166)))
 (let (($x162 (not $x145)))
 (let (($x153 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x156 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x156 $x153)))
 (let (($x123 (and (not $x168) $x162)))
 (let (($x63 (and (and (and (and (and (and $x123 $x171) $x152) $x169) $x70) $x223) $x188)))
 (let (($x178 (and $x63 $x108)))
 (let (($x163 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x165 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x144 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x165)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x167 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x165)))
 (let (($x155 (or false (or false (and (and true (or $x167 $x150)) (or $x144 $x163))))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x155)))
 (let (($x133 (and $x179 $x178)))
 (let (($x137 (and (and $x133 $x110) $x214)))
 (let (($x100 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x9 (and $x100 $x137)))
 (let (($x97 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x216 (and $x97 $x9)))
 (let (($x217 (and $x28 $x216)))
 (let (($x218 (and true $x217)))
 (let (($x238 (= $x218 true)))
 (let (($x149 (= $x238 true)))
 (let (($x174 (= $x149 true)))
 (let (($x235 (= $x81 true)))
 (let (($x104 (= $x235 true)))
 (let (($x21 (= $x104 true)))
 (let (($x229 (= $x97 true)))
 (let (($x199 (= $x229 true)))
 (let (($x37 (= $x199 true)))
 (let (($x18 (= ?x197 input.dst.llvm-%val)))
 (let (($x62 (= $x18 true)))
 (let (($x124 (= $x62 true)))
 (let (($x59 (= $x133 true)))
 (let (($x192 (= $x59 true)))
 (let (($x41 (= $x192 true)))
 (let (($x102 (= $x100 true)))
 (let (($x15 (= $x102 true)))
 (let (($x120 (= $x15 true)))
 (let (($x195 (and $x120 $x41)))
 (let (($x75 (and $x195 $x124)))
 (let (($x198 (and $x75 $x37)))
 (let (($x173 (and $x198 $x37)))
 (let (($x73 (and $x173 $x21)))
 (let (($x215 (and $x73 $x174)))
 (let (($x68 (and $x215 $x98)))
 (let (($x147 (and $x68 $x219)))
 (let (($x310 (and $x147 $x309)))
 (let (($x276 (and $x310 $x309)))
 (let (($x304 (and $x276 $x303)))
 (let (($x345 (and $x304 $x344)))
 (let (($x346 (and $x111 $x345)))
 (let (($x347 (and $x115 $x346)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x348 (and $x54 $x347)))
 (let (($x89 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x349 (and $x89 $x348)))
 (let (($x60 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x109 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x109)))
 (let (($x23 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x109)))
 (let (($x49 (or false (or false (and (and true (or $x88 $x23)) (or $x14 $x60))))))
 (let (($x127 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x49)))
 (let (($x69 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x49)))
 (let (($x350 (and $x69 $x349)))
 (let (($x158 (=> $x350 $x87)))
 (not $x158)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x225)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x176)))
 (let (($x244 (= input.spec-%var-val-0 ?x256)))
 (let (($x273 (= $x244 true)))
 (let (($x125 (= $x273 true)))
 (let (($x121 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x269 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x52 (= $x269 $x121)))
 (let (($x47 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x116 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x83 (= $x116 $x47)))
 (let (($x181 (and $x83 $x52)))
 (let (($x20 (= $x181 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x253 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (bvuge ?x253 (_ bv1 32))))
 (let (($x260 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x264 (= $x260 $x241)))
 (let (($x115 (= ?x253 (_ bv0 32))))
 (let (($x15 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x222 (= $x15 $x115)))
 (let (($x239 (and $x222 $x264)))
 (let (($x220 (= $x239 true)))
 (let ((?x210 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x9 (concat ?x137 (concat ?x142 (concat ?x208 ?x210)))))
 (let (($x151 (= ?x9 input.dst.llvm-%l)))
 (let (($x111 (= $x151 true)))
 (let (($x134 (= $x111 true)))
 (let (($x10 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x164 (= $x10 true)))
 (let (($x44 (= $x164 true)))
 (let (($x240 (= $x44 true)))
 (let (($x202 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x200 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x17 (and true $x200)))
 (let (($x207 (and $x200 $x17)))
 (let (($x211 (and $x207 $x202)))
 (let (($x28 (= true $x211)))
 (let (($x81 (not $x13)))
 (let (($x110 (=> $x81 $x28)))
 (let (($x230 (= $x110 true)))
 (let (($x161 (= $x230 true)))
 (let (($x219 (= $x161 true)))
 (let (($x216 (= input.dst.llvm-%l ?x9)))
 (let ((?x232 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x197 (concat ?x22 (concat ?x128 (concat ?x122 ?x232)))))
 (let (($x270 (= input.dst.llvm-%val ?x197)))
 (let ((?x228 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x228)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x184 (= (_ bv0 32) ?x70)))
 (let ((?x227 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x193 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x227)))
 (let ((?x140 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x185 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x140)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x224 (and $x169 $x185)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x131 $x224)))
 (let (($x236 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x226 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (and $x7 $x234)))
 (let (($x170 (not $x183)))
 (let (($x129 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x141 $x129)))
 (let (($x171 (and (not $x84) $x170)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x231 $x66)))
 (let (($x145 (not $x166)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x148 $x136)))
 (let (($x123 (and (not $x168) $x145)))
 (let (($x108 (and (and (and (and (and (and $x123 $x171) $x226) $x236) $x177) $x193) $x184)))
 (let (($x178 (and $x108 $x223)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x167 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x167)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x150 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x167)))
 (let (($x179 (or false (or false (and (and true (or $x150 $x8)) (or $x163 $x154))))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x179)))
 (let (($x133 (and $x153 $x178)))
 (let (($x218 (and (and $x133 $x270) $x216)))
 (let (($x238 (and $x10 $x218)))
 (let (($x229 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x149 (and $x229 $x238)))
 (let (($x174 (and $x110 $x149)))
 (let (($x215 (and true $x174)))
 (let (($x74 (= $x215 true)))
 (let (($x126 (= $x74 true)))
 (let (($x98 (= $x126 true)))
 (let (($x104 (= $x81 true)))
 (let (($x21 (= $x104 true)))
 (let (($x73 (= $x21 true)))
 (let (($x199 (= $x229 true)))
 (let (($x37 (= $x199 true)))
 (let (($x198 (= $x37 true)))
 (let (($x62 (= ?x197 input.dst.llvm-%val)))
 (let (($x124 (= $x62 true)))
 (let (($x75 (= $x124 true)))
 (let (($x59 (= $x133 true)))
 (let (($x192 (= $x59 true)))
 (let (($x41 (= $x192 true)))
 (let (($x206 (and $x41 $x75)))
 (let (($x173 (and $x206 $x198)))
 (let (($x235 (and $x173 $x198)))
 (let (($x263 (and $x235 $x73)))
 (let (($x68 (and $x263 $x98)))
 (let (($x147 (and $x68 $x219)))
 (let (($x105 (and $x147 $x240)))
 (let (($x6 (and $x105 $x134)))
 (let (($x265 (and $x6 $x220)))
 (let (($x221 (and $x265 $x220)))
 (let (($x295 (and $x221 $x20)))
 (let (($x194 (and $x15 $x295)))
 (let (($x100 (= false false)))
 (let (($x35 (and $x100 $x194)))
 (let (($x143 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x96 (and $x143 $x35)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x190 (and $x54 $x96)))
 (let (($x39 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x5)))
 (let (($x106 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x5)))
 (let (($x64 (or false (or false (and (and true (or $x92 $x106)) (or $x67 $x39))))))
 (let (($x89 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x64)))
 (let (($x19 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x64)))
 (let (($x114 (and $x19 $x190)))
 (let (($x139 (=> $x114 $x125)))
 (not $x139)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%l () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-val-0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_next-0.L2%9%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.llvm-%val () (_ BitVec 32))
(declare-fun input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end () (_ BitVec 32))
(declare-fun input.spec-%tmpvar-0.L2%9%bbentry () (_ BitVec 32))
(declare-fun input.spec-%var-l-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node_val-0.L2%9%bbentry () (_ BitVec 32))
(assert
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%l))))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv2 32))) ?x225)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%l (_ bv3 32))) ?x176)))
 (let (($x244 (= input.spec-%var-val-0 ?x256)))
 (let (($x273 (= $x244 true)))
 (let (($x125 (= $x273 true)))
 (let (($x121 (bvuge input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv1 32))))
 (let (($x269 (bvuge input.spec-%var-l-0.2.1.0 (_ bv1 32))))
 (let (($x52 (= $x269 $x121)))
 (let (($x47 (= input.spec-%var-node_next-0.L2%9%bbentry.0 (_ bv0 32))))
 (let (($x116 (= input.spec-%var-l-0.2.1.0 (_ bv0 32))))
 (let (($x83 (= $x116 $x47)))
 (let (($x181 (and $x83 $x52)))
 (let (($x20 (= $x181 true)))
 (let (($x13 (= (_ bv0 32) input.dst.llvm-%l)))
 (let ((?x253 (ite $x13 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (bvuge ?x253 (_ bv1 32))))
 (let (($x260 (bvuge input.spec-%var-l-0.0 (_ bv1 32))))
 (let (($x264 (= $x260 $x241)))
 (let (($x115 (= ?x253 (_ bv0 32))))
 (let (($x15 (= input.spec-%var-l-0.0 (_ bv0 32))))
 (let (($x222 (= $x15 $x115)))
 (let (($x239 (and $x222 $x264)))
 (let (($x220 (= $x239 true)))
 (let ((?x210 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum0=/)))
 (let ((?x208 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x137 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x9 (concat ?x137 (concat ?x142 (concat ?x208 ?x210)))))
 (let (($x151 (= ?x9 input.dst.llvm-%l)))
 (let (($x111 (= $x151 true)))
 (let (($x134 (= $x111 true)))
 (let (($x10 (= input.spec-%var-val-0 input.dst.llvm-%val)))
 (let (($x164 (= $x10 true)))
 (let (($x44 (= $x164 true)))
 (let (($x240 (= $x44 true)))
 (let (($x202 (= (bvand input.dst.llvm-%l (_ bv4294967292 32)) input.dst.llvm-%l)))
 (let (($x200 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))) (bvult input.dst.llvm-%l (bvsub input.dst.llvm-%l (_ bv0 32))))))
 (let (($x17 (and true $x200)))
 (let (($x207 (and $x200 $x17)))
 (let (($x211 (and $x207 $x202)))
 (let (($x28 (= true $x211)))
 (let (($x81 (not $x13)))
 (let (($x110 (=> $x81 $x28)))
 (let (($x230 (= $x110 true)))
 (let (($x161 (= $x230 true)))
 (let (($x219 (= $x161 true)))
 (let (($x216 (= input.dst.llvm-%l ?x9)))
 (let ((?x232 (select input.dst.llvm-mem input.dst.local./*___y___head_or__x__=L0%0%argnum1=/)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv1 32)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv2 32)))))
 (let ((?x22 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32)))))
 (let ((?x197 (concat ?x22 (concat ?x128 (concat ?x122 ?x232)))))
 (let (($x270 (= input.dst.llvm-%val ?x197)))
 (let ((?x228 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x223 (= (_ bv0 32) ?x228)))
 (let ((?x70 (bvand input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ (_ bv3 32))))
 (let (($x184 (= (_ bv0 32) ?x70)))
 (let ((?x227 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x193 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end ?x227)))
 (let ((?x140 (bvadd input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin (_ bv3 32))))
 (let (($x185 (= input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end ?x140)))
 (let (($x169 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x224 (and $x169 $x185)))
 (let (($x131 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x177 (and $x131 $x224)))
 (let (($x236 (= input.dst.local./*___y___head_or__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x226 (= input.dst.local./*___y___head_or__x__=L0%0%argnum1=/ input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x234 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x7 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x183 (and $x7 $x234)))
 (let (($x170 (not $x183)))
 (let (($x129 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x141 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin)))
 (let (($x84 (and $x141 $x129)))
 (let (($x171 (and (not $x84) $x170)))
 (let (($x66 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x231 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x231 $x66)))
 (let (($x145 (not $x166)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvuge input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin)))
 (let (($x168 (and $x148 $x136)))
 (let (($x123 (and (not $x168) $x145)))
 (let (($x108 (and (and (and (and (and (and $x123 $x171) $x226) $x236) $x177) $x193) $x184)))
 (let (($x178 (and $x108 $x223)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x167 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x163 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x167)))
 (let (($x8 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x150 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x167)))
 (let (($x179 (or false (or false (and (and true (or $x150 $x8)) (or $x163 $x154))))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) $x179)))
 (let (($x133 (and $x153 $x178)))
 (let (($x218 (and (and $x133 $x270) $x216)))
 (let (($x238 (and $x10 $x218)))
 (let (($x229 (= (bvand input.dst.llvm-%l (_ bv4294967288 32)) input.dst.llvm-%l)))
 (let (($x149 (and $x229 $x238)))
 (let (($x174 (and $x110 $x149)))
 (let (($x215 (and true $x174)))
 (let (($x74 (= $x215 true)))
 (let (($x126 (= $x74 true)))
 (let (($x98 (= $x126 true)))
 (let (($x104 (= $x81 true)))
 (let (($x21 (= $x104 true)))
 (let (($x73 (= $x21 true)))
 (let (($x199 (= $x229 true)))
 (let (($x37 (= $x199 true)))
 (let (($x198 (= $x37 true)))
 (let (($x62 (= ?x197 input.dst.llvm-%val)))
 (let (($x124 (= $x62 true)))
 (let (($x75 (= $x124 true)))
 (let (($x59 (= $x133 true)))
 (let (($x192 (= $x59 true)))
 (let (($x41 (= $x192 true)))
 (let (($x206 (and $x41 $x75)))
 (let (($x173 (and $x206 $x198)))
 (let (($x235 (and $x173 $x198)))
 (let (($x263 (and $x235 $x73)))
 (let (($x68 (and $x263 $x98)))
 (let (($x147 (and $x68 $x219)))
 (let (($x105 (and $x147 $x240)))
 (let (($x6 (and $x105 $x134)))
 (let (($x265 (and $x6 $x220)))
 (let (($x221 (and $x265 $x220)))
 (let (($x295 (and $x221 $x20)))
 (let (($x194 (and $x15 $x295)))
 (let (($x100 (= false false)))
 (let (($x35 (and $x100 $x194)))
 (let (($x143 (= input.spec-%var-l-0.2.0 input.spec-%tmpvar-0.L2%9%bbentry)))
 (let (($x96 (and $x143 $x35)))
 (let (($x54 (= input.spec-%var-l-0.2.0 input.spec-%var-node_val-0.L2%9%bbentry)))
 (let (($x190 (and $x54 $x96)))
 (let (($x39 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_end)))
 (let ((?x5 (bvadd input.dst.llvm-%l (_ bv3 32))))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum0=/_begin ?x5)))
 (let (($x106 (bvugt input.dst.llvm-%l input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_end)))
 (let (($x92 (bvugt input.dst.memlabel-mem--local./*___y___head_or__x__=L0%0%argnum1=/_begin ?x5)))
 (let (($x64 (or false (or false (and (and true (or $x92 $x106)) (or $x67 $x39))))))
 (let (($x89 (=> (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32))) $x64)))
 (let (($x19 (=> (and $x81 (bvule input.dst.llvm-%l (bvsub (bvadd input.dst.llvm-%l (_ bv4 32)) (_ bv1 32)))) $x64)))
 (let (($x114 (and $x19 $x190)))
 (let (($x139 (=> $x114 $x125)))
 (not $x139)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.2171646/query
