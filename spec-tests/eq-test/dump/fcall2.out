argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall2.proof
argv[9] = --spec-iospecs=fcall2.iospecs
argv[10] = fcall2.spec
argv[11] = fcall2.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.1510089
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall2.spec.etfg
argv[11] = par_tmpdir/fcall2.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall2.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000069s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000093s total; 0.000001 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.002982s total; 0.000007 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.009865s total; 0.000096 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.055041s total; 0.000534 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.005278s total; 0.002639 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000722s total; 0.000080 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.069027s total; 0.000972 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.068700s total; 0.000168 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000212s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000045s total; 0.000015 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000011s total; 0.000004 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.001020s total; 0.000019 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000024s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.005207s total; 0.002603 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000021s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000033s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.001135s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000147s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.070058s total; 0.000075 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000594s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000125s total; 0.000002 per start]
sort_dfa_canonical: num_starts 142235 time spent: 0:0:1 [1.100577s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 5 time spent: 0:0:0 [0.000706s total; 0.000141 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.050613s total; 0.001947 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.036340s total; 0.001398 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001804s total; 0.000047 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000039s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002762s total; 0.000055 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.057176s total; 0.000303 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000024s total; 0.000000 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.017185s total; 0.000573 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000442s total; 0.000018 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.010782s total; 0.000431 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000166s total; 0.000004 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.opt_map.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 4e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 4e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 9e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.3e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 1.4e-05s (num_starts 20; 0.0000s/start)
get_intersected_lr_status.: 2e-05s (num_starts 2; 0.0000s/start)
add_assumes_to_start_edge.: 2.5e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 2.6e-05s (num_starts 32; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.6e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 4.2e-05s (num_starts 2; 0.0000s/start)
context_constructor.solver.: 4.3e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 4.3e-05s (num_starts 44; 0.0000s/start)
tfg_get_write_memlabels.: 4.4e-05s (num_starts 1; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 5e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 5.1e-05s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.3e-05s (num_starts 8; 0.0000s/start)
context_constructor.: 5.4e-05s (num_starts 1; 0.0001s/start)
tfg_get_read_memlabels.: 6.2e-05s (num_starts 1; 0.0001s/start)
graph_visit_exprs_const.const.: 9e-05s (num_starts 2; 0.0000s/start)
main.3.: 9.2e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 9.8e-05s (num_starts 113; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000109s (num_starts 2; 0.0001s/start)
get_summary_for_calling_functions.: 0.000114s (num_starts 1; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000119s (num_starts 23; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.000122s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000125s (num_starts 2; 0.0001s/start)
compute_reachable_memlabels_map.: 0.000128s (num_starts 1; 0.0001s/start)
compute_sprel_relations.: 0.000129s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000135s (num_starts 4; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000136s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000138s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000139s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000139s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000142s (num_starts 277; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000153s (num_starts 6; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.00017s (num_starts 1; 0.0002s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000176s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000184s (num_starts 25; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000186s (num_starts 23; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000205s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000218s (num_starts 49; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000227s (num_starts 23; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000228s (num_starts 48; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000258s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000265s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.00028s (num_starts 1; 0.0003s/start)
populate_locid2expr_map.: 0.000305s (num_starts 4; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000363s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000393s (num_starts 2; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00041s (num_starts 25; 0.0000s/start)
populate_transitive_closure.: 0.000413s (num_starts 2; 0.0002s/start)
expr_substitute_using_available_exprs_submap.: 0.000448s (num_starts 17; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.000453s (num_starts 1; 0.0005s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.000466s (num_starts 1; 0.0005s/start)
canonicalize_llvm_nextpcs.: 0.00049s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000517s (num_starts 34; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000527s (num_starts 1; 0.0005s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000561s (num_starts 143; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.000606s (num_starts 1; 0.0006s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.000627s (num_starts 1; 0.0006s/start)
populate_exit_return_values_for_llvm_method.: 0.000666s (num_starts 2; 0.0003s/start)
compute_z3_expr.: 0.000707s (num_starts 52; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000805s (num_starts 2; 0.0004s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000806s (num_starts 1; 0.0008s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.000851s (num_starts 1; 0.0009s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000853s (num_starts 2; 0.0004s/start)
expr_linear_relation_holds::visit.var.: 0.000895s (num_starts 49; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000946s (num_starts 66; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001035s (num_starts 2; 0.0005s/start)
tfg_preprocess.dst.llvm.update_val.: 0.001096s (num_starts 1; 0.0011s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001211s (num_starts 2; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001292s (num_starts 2; 0.0006s/start)
populate_dominator_and_postdominator_relations.: 0.001462s (num_starts 4; 0.0004s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001534s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.001538s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.001543s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001549s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.: 0.001551s (num_starts 1; 0.0016s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001642s (num_starts 1; 0.0016s/start)
tfg::populate_loc_definedness.before_solve.: 0.001794s (num_starts 4; 0.0004s/start)
graph_visit_exprs.: 0.0018s (num_starts 8; 0.0002s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.002013s (num_starts 25; 0.0001s/start)
query:convert_from_z3.: 0.002139s (num_starts 52; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002171s (num_starts 4; 0.0005s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002269s (num_starts 26; 0.0001s/start)
tfg::populate_loc_definedness.: 0.002318s (num_starts 4; 0.0006s/start)
query:convert_to_z3.: 0.002589s (num_starts 52; 0.0000s/start)
get_function_tfg_map.update_val.: 0.002613s (num_starts 1; 0.0026s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002628s (num_starts 1; 0.0026s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002703s (num_starts 25; 0.0001s/start)
graph_identify_back_edges.: 0.002722s (num_starts 12; 0.0002s/start)
populate_branch_affecting_locs.: 0.002746s (num_starts 4; 0.0007s/start)
graph_identify_natural_loops.: 0.002761s (num_starts 12; 0.0002s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.003275s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.00328s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.003289s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.003294s (num_starts 1; 0.0033s/start)
tfg_constructor.src.spec.opt_map.: 0.003297s (num_starts 1; 0.0033s/start)
create_sp_version_relations_lattice_at_pc.: 0.00333s (num_starts 34; 0.0001s/start)
find_dominators.: 0.003838s (num_starts 20; 0.0002s/start)
avail_exprs_create_submap.: 0.003936s (num_starts 75; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004173s (num_starts 404; 0.0000s/start)
graph_to_stream.: 0.004798s (num_starts 2; 0.0024s/start)
compute_regions.: 0.005158s (num_starts 12; 0.0004s/start)
query:simplify-z3.: 0.006195s (num_starts 106; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006395s (num_starts 26; 0.0002s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.006679s (num_starts 1; 0.0067s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.006889s (num_starts 20; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.006925s (num_starts 20; 0.0003s/start)
compute_lr_status_for_expr.: 0.007049s (num_starts 29; 0.0002s/start)
tfg::tfg_preprocess.: 0.007779s (num_starts 2; 0.0039s/start)
main.2.: 0.008885s (num_starts 1; 0.0089s/start)
populate_simplified_to_state.: 0.010559s (num_starts 6; 0.0018s/start)
get_function_tfg_map.opt_map.: 0.011414s (num_starts 1; 0.0114s/start)
populate_simplified_assets.: 0.013033s (num_starts 12; 0.0011s/start)
get_tfg.: 0.013959s (num_starts 2; 0.0070s/start)
populate_locs_potentially_modified_on_edge.: 0.013959s (num_starts 6; 0.0023s/start)
get_function_tfg_map.: 0.014034s (num_starts 2; 0.0070s/start)
compute_new_lr_status_on_locs.: 0.02482s (num_starts 25; 0.0010s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.027014s (num_starts 6; 0.0045s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.028647s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.029246s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.032795s (num_starts 404; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.033955s (num_starts 48; 0.0007s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.036392s (num_starts 26; 0.0014s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.039891s (num_starts 24; 0.0017s/start)
populate_loc_liveness.: 0.043886s (num_starts 4; 0.0110s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.06912s (num_starts 71; 0.0010s/start)
tfg_postprocess_after_pointsto_analysis.: 0.075229s (num_starts 2; 0.0376s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.079299s (num_starts 2; 0.0396s/start)
ftmap_run_pointsto_analysis.: 0.137206s (num_starts 1; 0.1372s/start)
parse_consts_db.: 6.71601s (num_starts 1; 6.7160s/start)
main.: 6.89896s (num_starts 1; 6.8990s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:21 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:21 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:22 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:22 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:22 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Attempting correlation of src pathset L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map: Found 2 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:22 : product-TFG opt_map created 2 possibilities in group opt_map.A...</MSG>
<MSG>0:22 : Chose (for CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:22 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:22 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:22 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%fcallStart ending at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:22 : Adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:22 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:22 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:22 : Adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Updating dst fcall edge using src fcall edge for toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Computing loop hoisting select expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Adding node L3%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:22 : opt_map.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Adding edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:22 : opt_map.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:22 : opt_map.A2: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:22 : opt_map.A2: Added the 1 propagated CEs at PC L3%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:22 : opt_map.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:22 : opt_map.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:22 : opt_map.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : Done adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:22 : Added correlation to the product-TFG opt_map.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:22 : Chose (after CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:22 : opt_map.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:22 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:22 : opt_map.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht7-prove_trivial0-prove7...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:22 : opt_map.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:22 : opt_map.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:23 : opt_map.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : product-TFG opt_map.A2: Found 2 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:23 : product-TFG opt_map.A2 created 2 possibilities in group opt_map.A2.B...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%5%fcallStart --> L3%5%fcallEnd ending at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing loop hoisting select expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Adding node L3%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:23 : opt_map.A2.B2: Getting alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Found no alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Adding edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2: Propagated 9 out of 9 counter-examples across edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:23 : opt_map.A2.B2: Added the 9 propagated CEs at PC L3%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2: Computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 6 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 6 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:23 : opt_map.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2: Done relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:23 : opt_map.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:23 : opt_map.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2 created 1 possibilities in group opt_map.A2.B2.C...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L3%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Getting alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Found no alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Adding edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Propagated 0 out of 9 counter-examples across edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG opt_map.A2.B2.C1 created 1 possibilities in group opt_map.A2.B2.C1.D...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:23 : Adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : Added correlation to the product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:23 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:23 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:23 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    6 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:z3v487.ce64      4.:cvc4.ce63      5.:cvc4.ce102
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 9 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 2.16s, query:smt.: 0.487981s (num_starts 32; 0.0152s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.47104s (num_starts 50; 0.0294s/start)ftmap_run_pointsto_analysis.: 0.147622s (num_starts 2; 0.0738s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 2e-06s (num_starts 3; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
prune_dst_memslots.: 5e-06s (num_starts 2; 0.0000s/start)
prove_trivial.: 8e-06s (num_starts 14; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 8e-06s (num_starts 4; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 9e-06s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.5e-05s (num_starts 20; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.5e-05s (num_starts 6; 0.0000s/start)
remove_complex_bv_exprs.: 2.3e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 2.3e-05s (num_starts 2; 0.0000s/start)
get_intersected_lr_status.: 2.4e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.2e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 3.3e-05s (num_starts 22; 0.0000s/start)
ce_perform_memory_fuzzing.: 4.2e-05s (num_starts 33; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 4.3e-05s (num_starts 1; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5.8e-05s (num_starts 50; 0.0000s/start)
lr_status_meet.: 6.3e-05s (num_starts 78; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6.8e-05s (num_starts 50; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 6.9e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 7.4e-05s (num_starts 21; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 7.7e-05s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::meet.: 8.6e-05s (num_starts 148; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 9.3e-05s (num_starts 108; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000106s (num_starts 31; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000118s (num_starts 6; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000118s (num_starts 16; 0.0000s/start)
expr_is_callee_save_const.: 0.000123s (num_starts 132; 0.0000s/start)
proof_query_is_trivial_helper.: 0.000125s (num_starts 52; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.00013s (num_starts 8; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000141s (num_starts 36; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000159s (num_starts 2; 0.0001s/start)
get_sprel_map_pair.: 0.000163s (num_starts 43; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000167s (num_starts 15; 0.0000s/start)
compute_sprel_relations.: 0.000178s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000183s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.000188s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000198s (num_starts 23; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000209s (num_starts 36; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000222s (num_starts 12; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.00023s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000237s (num_starts 15; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000256s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000292s (num_starts 17; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.000299s (num_starts 3; 0.0001s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000305s (num_starts 10; 0.0000s/start)
populate_locid2expr_map.: 0.000322s (num_starts 2; 0.0002s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000322s (num_starts 2; 0.0002s/start)
compute_bv_bool_eqclass.: 0.000338s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000343s (num_starts 1; 0.0003s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000345s (num_starts 4; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000382s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000399s (num_starts 46; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000417s (num_starts 80; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000427s (num_starts 94; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000428s (num_starts 1; 0.0004s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000441s (num_starts 17; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000441s (num_starts 35; 0.0000s/start)
set_result_and_counter_example.: 0.000456s (num_starts 32; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000457s (num_starts 1; 0.0005s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000462s (num_starts 6; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000466s (num_starts 2; 0.0002s/start)
proof_query_is_trivial.: 0.000475s (num_starts 50; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000522s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000539s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000543s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000545s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000553s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000554s (num_starts 1; 0.0006s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000557s (num_starts 6; 0.0001s/start)
graph_with_guessing_sync_preds.: 0.000561s (num_starts 50; 0.0000s/start)
expr_represents_llvm_undef.: 0.000563s (num_starts 140; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000563s (num_starts 94; 0.0000s/start)
tfg::collect_assumes_around_edge.: 0.000583s (num_starts 37; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000599s (num_starts 17; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000686s (num_starts 2; 0.0003s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000723s (num_starts 149; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000762s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.000762s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000768s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000772s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000781s (num_starts 1; 0.0008s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000791s (num_starts 4; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-trivial.: 0.000808s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.000812s (num_starts 1; 0.0008s/start)
removeMostPromising.: 0.000815s (num_starts 13; 0.0001s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000847s (num_starts 16; 0.0001s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000849s (num_starts 6; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000872s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000873s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.000875s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000878s (num_starts 1; 0.0009s/start)
tfg::populate_loc_definedness.before_solve.: 0.000878s (num_starts 3; 0.0003s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000879s (num_starts 17; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess.: 0.00088s (num_starts 1; 0.0009s/start)
pth_collect_preds_using_atom_func.: 0.000891s (num_starts 21; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000906s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown;-trivial.: 0.00095s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-trivial.: 0.000953s (num_starts 1; 0.0010s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000973s (num_starts 4; 0.0002s/start)
collect_assumes_around_edge.: 0.000989s (num_starts 4; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-trivial.: 0.000999s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001001s (num_starts 1; 0.0010s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.00101s (num_starts 36; 0.0000s/start)
identify_address_taken_local_variables.: 0.001023s (num_starts 2; 0.0005s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001024s (num_starts 6; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001029s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.001032s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001038s (num_starts 1; 0.0010s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001041s (num_starts 1; 0.0010s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001048s (num_starts 33; 0.0000s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001054s (num_starts 6; 0.0002s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.001073s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001096s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.0011s (num_starts 1; 0.0011s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.001173s (num_starts 27; 0.0000s/start)
tfg_edge_composition_get_assumes.: 0.001193s (num_starts 21; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.001215s (num_starts 36; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001218s (num_starts 3; 0.0004s/start)
corr_graph_enumerate_correlations.: 0.001233s (num_starts 6; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001235s (num_starts 18; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001274s (num_starts 18; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001298s (num_starts 35; 0.0000s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001303s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001308s (num_starts 2; 0.0007s/start)
tfg::populate_loc_definedness.: 0.001311s (num_starts 3; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-trivial.: 0.001316s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.00132s (num_starts 1; 0.0013s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.001335s (num_starts 45; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.001361s (num_starts 36; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001453s (num_starts 45; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001467s (num_starts 29; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.001515s (num_starts 2; 0.0008s/start)
graph_visit_exprs.: 0.001518s (num_starts 3; 0.0005s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.0016s (num_starts 3; 0.0005s/start)
compute_vars_reaching_definitions.: 0.001624s (num_starts 2; 0.0008s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001646s (num_starts 18; 0.0001s/start)
ldr_decomposition.: 0.001658s (num_starts 31; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00169s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001692s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001699s (num_starts 1; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001704s (num_starts 1; 0.0017s/start)
graph_visit_exprs_and_keys.: 0.001713s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-trivial.: 0.001751s (num_starts 2; 0.0009s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001789s (num_starts 80; 0.0000s/start)
propagate_nodece_across_edge.: 0.001794s (num_starts 3; 0.0006s/start)
populate_branch_affecting_locs.: 0.001852s (num_starts 3; 0.0006s/start)
construct_linear_combination_exprs.: 0.001921s (num_starts 55; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001962s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001965s (num_starts 2; 0.0010s/start)
generate_aliasing_constraints_from_expr.: 0.001971s (num_starts 353; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002001s (num_starts 2; 0.0010s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.002017s (num_starts 78; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.002021s (num_starts 2; 0.0010s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.002056s (num_starts 1; 0.0021s/start)
populate_transitive_closure.: 0.002066s (num_starts 15; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002117s (num_starts 4; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002131s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.002152s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.002185s (num_starts 2; 0.0011s/start)
bv_const_ref_map2expr_map.: 0.00222s (num_starts 55; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.002413s (num_starts 3; 0.0008s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.002525s (num_starts 199; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.002537s (num_starts 22; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.002568s (num_starts 46; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.002688s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002692s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002699s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.002703s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00272s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.002725s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.002731s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002767s (num_starts 2; 0.0014s/start)
cg_src_dst_tfg_copy.: 0.002853s (num_starts 1; 0.0029s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.002889s (num_starts 80; 0.0000s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.002973s (num_starts 1; 0.0030s/start)
graph_identify_back_edges.: 0.002976s (num_starts 24; 0.0001s/start)
find_dominators.: 0.003002s (num_starts 28; 0.0001s/start)
graph_identify_natural_loops.: 0.00305s (num_starts 24; 0.0001s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003162s (num_starts 3; 0.0011s/start)
pth_collect_simplified_preds_using_atom_func.: 0.003173s (num_starts 90; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.00319s (num_starts 149; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.003194s (num_starts 46; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.003591s (num_starts 111; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.003723s (num_starts 82; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.003737s (num_starts 36; 0.0001s/start)
get_next_potential_correlations.: 0.003959s (num_starts 4; 0.0010s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004167s (num_starts 1; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.004171s (num_starts 1; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.004174s (num_starts 1; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-trivial.: 0.004531s (num_starts 4; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004692s (num_starts 4; 0.0012s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.004703s (num_starts 2; 0.0024s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.004756s (num_starts 4; 0.0012s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.004876s (num_starts 36; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005172s (num_starts 505; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.005348s (num_starts 35; 0.0002s/start)
tfg::get_aliasing_constraints_for_edge.: 0.0054s (num_starts 142; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.006079s (num_starts 4; 0.0015s/start)
ldr_decompose_and_linear_solve.: 0.006396s (num_starts 31; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.006471s (num_starts 6; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-trivial.: 0.006486s (num_starts 1; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.006489s (num_starts 1; 0.0065s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.006913s (num_starts 6; 0.0012s/start)
collect_assumes_around_path_helper.: 0.006922s (num_starts 94; 0.0001s/start)
bv_linear_solve.: 0.007s (num_starts 31; 0.0002s/start)
compute_regions.: 0.0071s (num_starts 24; 0.0003s/start)
graph_with_paths::collect_assumes_around_path.: 0.007159s (num_starts 94; 0.0001s/start)
query:bv_solve.: 0.007185s (num_starts 31; 0.0002s/start)
do_ssa_transformation.: 0.007291s (num_starts 2; 0.0036s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.007538s (num_starts 1; 0.0075s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.007563s (num_starts 75; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.00767s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007674s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.00769s (num_starts 2; 0.0038s/start)
populate_simplified_to_state.: 0.007838s (num_starts 3; 0.0026s/start)
lhs_set_sort.: 0.007908s (num_starts 36; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-trivial.: 0.008411s (num_starts 2; 0.0042s/start)
collect_inductive_preds_around_path.: 0.008588s (num_starts 50; 0.0002s/start)
populate_simplified_assets.: 0.008845s (num_starts 6; 0.0015s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.009039s (num_starts 75; 0.0001s/start)
bv_solve_returning_intermediate_structures.: 0.009268s (num_starts 31; 0.0003s/start)
counter_example_satisfies_preds.: 0.00935s (num_starts 235; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.009599s (num_starts 35; 0.0003s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.010334s (num_starts 425; 0.0000s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.010639s (num_starts 35; 0.0003s/start)
bvsolve_cache_query.miss1.: 0.010715s (num_starts 31; 0.0003s/start)
query:convert_to_z3.: 0.010965s (num_starts 214; 0.0001s/start)
bvsolve_cache_query.: 0.011103s (num_starts 31; 0.0004s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.011272s (num_starts 3; 0.0038s/start)
counter_example_falsifies_preds.: 0.011277s (num_starts 47; 0.0002s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.011848s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.011855s (num_starts 3; 0.0040s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.011998s (num_starts 26; 0.0005s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.012069s (num_starts 26; 0.0005s/start)
get_unrolled_paths_from.: 0.012205s (num_starts 25; 0.0005s/start)
graph_to_stream.: 0.013187s (num_starts 4; 0.0033s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.013368s (num_starts 25; 0.0005s/start)
query:convert_from_z3.: 0.013419s (num_starts 214; 0.0001s/start)
solve_for_bv_points.: 0.013758s (num_starts 31; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.01401s (num_starts 2; 0.0070s/start)
predicate_canonicalized.: 0.014014s (num_starts 55; 0.0003s/start)
collect_aliasing_constraints_around_path_helper.: 0.014164s (num_starts 135; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014382s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014384s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014389s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014393s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.014396s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.01441s (num_starts 1; 0.0144s/start)
collect_aliasing_constraints_around_path.: 0.014557s (num_starts 83; 0.0002s/start)
avail_exprs_create_submap.: 0.015345s (num_starts 105; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities..: 0.015726s (num_starts 3; 0.0052s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.015735s (num_starts 3; 0.0052s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.0162s (num_starts 4; 0.0040s/start)
compute_expr_eqclasses_at_pc.: 0.016652s (num_starts 2; 0.0083s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.016905s (num_starts 31; 0.0005s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.017072s (num_starts 4; 0.0043s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01749s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.017709s (num_starts 6; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017759s (num_starts 1; 0.0178s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017762s (num_starts 1; 0.0178s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.017764s (num_starts 1; 0.0178s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond.: 0.017767s (num_starts 1; 0.0178s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017881s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.017883s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.017888s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.017892s (num_starts 1; 0.0179s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.018056s (num_starts 1; 0.0181s/start)
graph_ec_apply_trans_funs_helper.0.: 0.01856s (num_starts 214; 0.0001s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.019545s (num_starts 109; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019714s (num_starts 1; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019719s (num_starts 1; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01972s (num_starts 1; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.019723s (num_starts 1; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.019728s (num_starts 1; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.019729s (num_starts 1; 0.0197s/start)
counter_example_evaluate_preds.: 0.019914s (num_starts 282; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.019994s (num_starts 220; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020222s (num_starts 1; 0.0202s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.020228s (num_starts 1; 0.0202s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.020426s (num_starts 220; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020466s (num_starts 1; 0.0205s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.020474s (num_starts 1; 0.0205s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.020613s (num_starts 2; 0.0103s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.020679s (num_starts 216; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020823s (num_starts 1; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.020829s (num_starts 1; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.020838s (num_starts 1; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.020841s (num_starts 1; 0.0208s/start)
edge_composition_apply_trans_funs_on_pred.: 0.020851s (num_starts 50; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021071s (num_starts 1; 0.0211s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021074s (num_starts 1; 0.0211s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.021079s (num_starts 1; 0.0211s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.021083s (num_starts 1; 0.0211s/start)
cg_add_node.: 0.021176s (num_starts 4; 0.0053s/start)
computeWP_for_pred_across_ec.: 0.021259s (num_starts 216; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.022697s (num_starts 1; 0.0227s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.022703s (num_starts 1; 0.0227s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.023919s (num_starts 2; 0.0120s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.02396s (num_starts 1; 0.0240s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.023967s (num_starts 1; 0.0240s/start)
put_smtlib_string_in_file.: 0.024158s (num_starts 64; 0.0004s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart.: 0.024407s (num_starts 2; 0.0122s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.025013s (num_starts 75; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.025188s (num_starts 3; 0.0084s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.0253s (num_starts 35; 0.0007s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.025651s (num_starts 505; 0.0001s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.026437s (num_starts 585; 0.0000s/start)
gen_pred_from_coeff_row.simplify.: 0.026569s (num_starts 55; 0.0005s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.02719s (num_starts 4; 0.0068s/start)
create_new_corr_graph_edge.new_node.: 0.027319s (num_starts 3; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027729s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027736s (num_starts 1; 0.0277s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027857s (num_starts 1; 0.0279s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.027857s (num_starts 1; 0.0279s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.027861s (num_starts 1; 0.0279s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown.: 0.027867s (num_starts 1; 0.0279s/start)
create_new_corr_graph_edge.: 0.027913s (num_starts 4; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.02907s (num_starts 2; 0.0145s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear.: 0.029079s (num_starts 2; 0.0145s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.029348s (num_starts 2; 0.0147s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.029447s (num_starts 1; 0.0294s/start)
compute_z3_expr.: 0.030583s (num_starts 246; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.030637s (num_starts 37; 0.0008s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.030877s (num_starts 37; 0.0008s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.031556s (num_starts 505; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.031704s (num_starts 22; 0.0014s/start)
query:simplify-z3.: 0.033796s (num_starts 442; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.035237s (num_starts 2; 0.0176s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.035541s (num_starts 36; 0.0010s/start)
populate_loc_liveness.: 0.036821s (num_starts 3; 0.0123s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.038631s (num_starts 36; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038939s (num_starts 2; 0.0195s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.038945s (num_starts 2; 0.0195s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.038983s (num_starts 2; 0.0195s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.038989s (num_starts 2; 0.0195s/start)
guarded_predicate_set_and.: 0.039141s (num_starts 36; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040183s (num_starts 2; 0.0201s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.040665s (num_starts 2; 0.0203s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.040722s (num_starts 2; 0.0204s/start)
decide_hoare_triple_helper;-trivial.: 0.041304s (num_starts 19; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.042993s (num_starts 4; 0.0107s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.043504s (num_starts 2; 0.0218s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.043564s (num_starts 2; 0.0218s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.044419s (num_starts 2; 0.0222s/start)
gen_pred_from_coeff_row.: 0.046674s (num_starts 55; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047436s (num_starts 2; 0.0237s/start)
compute_preds_for_bv_points.: 0.047528s (num_starts 15; 0.0032s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.047626s (num_starts 17; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown.: 0.049016s (num_starts 6; 0.0082s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.049722s (num_starts 4; 0.0124s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.050638s (num_starts 1; 0.0506s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051802s (num_starts 2; 0.0259s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051805s (num_starts 2; 0.0259s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.051852s (num_starts 2; 0.0259s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.051859s (num_starts 2; 0.0259s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.052089s (num_starts 5; 0.0104s/start)
tfg_postprocess_after_pointsto_analysis.: 0.052919s (num_starts 2; 0.0265s/start)
parse_z3_model.: 0.053404s (num_starts 12; 0.0045s/start)
tfg_relax_pointsto_vals_on_edge.: 0.055128s (num_starts 18; 0.0031s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.056961s (num_starts 9; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.059656s (num_starts 3; 0.0199s/start)
compute_lr_status_for_expr.: 0.063041s (num_starts 87; 0.0007s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.063136s (num_starts 78; 0.0008s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.063307s (num_starts 78; 0.0008s/start)
parse_cvc4_model.: 0.067072s (num_starts 12; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.067214s (num_starts 4; 0.0168s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.0695s (num_starts 21; 0.0033s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.071023s (num_starts 56; 0.0013s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.073208s (num_starts 17; 0.0043s/start)
apply_mask_and_overlay_array_constant.: 0.074798s (num_starts 56; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075937s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075939s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.075945s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false.: 0.075949s (num_starts 1; 0.0759s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07654s (num_starts 1; 0.0765s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076547s (num_starts 1; 0.0765s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07655s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.076562s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate.: 0.076565s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.076572s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07687s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076875s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076877s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.076887s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false.: 0.076891s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.076897s (num_starts 1; 0.0769s/start)
check_wfconds_on_edge.L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.079268s (num_starts 2; 0.0396s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079372s (num_starts 4; 0.0198s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083376s (num_starts 1; 0.0834s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08338s (num_starts 1; 0.0834s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083382s (num_starts 1; 0.0834s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.08339s (num_starts 1; 0.0834s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false.: 0.083394s (num_starts 1; 0.0834s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.083402s (num_starts 1; 0.0834s/start)
evaluate_function_call.: 0.083978s (num_starts 15; 0.0056s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084496s (num_starts 1; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084502s (num_starts 1; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084506s (num_starts 1; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.084515s (num_starts 1; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate.: 0.084518s (num_starts 1; 0.0845s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.084526s (num_starts 1; 0.0845s/start)
check_wfconds_on_edge.L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0.086277s (num_starts 2; 0.0431s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.086569s (num_starts 17; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear.: 0.087849s (num_starts 6; 0.0146s/start)
compute_new_lr_status_on_locs.: 0.090556s (num_starts 35; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092393s (num_starts 1; 0.0924s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.092397s (num_starts 1; 0.0924s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.093413s (num_starts 2; 0.0467s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.094474s (num_starts 3; 0.0315s/start)
parse_yices_model.: 0.096627s (num_starts 12; 0.0081s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097631s (num_starts 1; 0.0976s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097635s (num_starts 1; 0.0976s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097638s (num_starts 1; 0.0976s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.098466s (num_starts 5; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.098605s (num_starts 2; 0.0493s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown.: 0.098612s (num_starts 2; 0.0493s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.099447s (num_starts 3; 0.0331s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.103083s (num_starts 2; 0.0515s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.106237s (num_starts 46; 0.0023s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.10789s (num_starts 4; 0.0270s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.110452s (num_starts 8; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.112614s (num_starts 2; 0.0563s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.113217s (num_starts 1; 0.1132s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.113217s (num_starts 1; 0.1132s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.113223s (num_starts 1; 0.1132s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.113226s (num_starts 1; 0.1132s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown.: 0.113652s (num_starts 3; 0.0379s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.126952s (num_starts 33; 0.0038s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.127214s (num_starts 22; 0.0058s/start)
corr_graph::add_edge().: 0.139518s (num_starts 4; 0.0349s/start)
counter_example_translate_on_edge_composition_helper.: 0.146148s (num_starts 247; 0.0006s/start)
ftmap_run_pointsto_analysis.: 0.147622s (num_starts 2; 0.0738s/start)
tfg_run_pointsto_analysis.: 0.147934s (num_starts 2; 0.0740s/start)
tfg_populate_structs_after_ssa_construction.: 0.156354s (num_starts 2; 0.0782s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161018s (num_starts 5; 0.0322s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161042s (num_starts 2; 0.0805s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.16109s (num_starts 2; 0.0805s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.161992s (num_starts 6; 0.0270s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.166055s (num_starts 2; 0.0830s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.168486s (num_starts 4; 0.0421s/start)
corr_graph_add_correlation.: 0.168625s (num_starts 4; 0.0422s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.174743s (num_starts 4; 0.0437s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.189143s (num_starts 2; 0.0946s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.189187s (num_starts 2; 0.0946s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.205884s (num_starts 1; 0.2059s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.216356s (num_starts 4; 0.0541s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.216402s (num_starts 248; 0.0009s/start)
read_counter_examples_from_channel.: 0.219198s (num_starts 12; 0.0183s/start)
check_wfconds_on_edge.: 0.219379s (num_starts 8; 0.0274s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd).: 0.223584s (num_starts 10; 0.0224s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.227416s (num_starts 1; 0.2274s/start)
ce_reconcile_sorts_and_values.: 0.229804s (num_starts 36; 0.0064s/start)
check_equivalence_proof.: 0.230245s (num_starts 1; 0.2302s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.238747s (num_starts 5; 0.0477s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.246616s (num_starts 7; 0.0352s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.282506s (num_starts 6; 0.0471s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.289187s (num_starts 12; 0.0241s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.322135s (num_starts 25; 0.0129s/start)
check_preds_on_edge_compositions.: 0.339964s (num_starts 12; 0.0283s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.349395s (num_starts 4; 0.0873s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.349475s (num_starts 4; 0.0874s/start)
decide_hoare_triple.: 0.373281s (num_starts 7; 0.0533s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.375085s (num_starts 6; 0.0625s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.375105s (num_starts 6; 0.0625s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.381636s (num_starts 7; 0.0545s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear.: 0.38165s (num_starts 7; 0.0545s/start)
dst_edge_composition_proves_false.: 0.386458s (num_starts 4; 0.0966s/start)
get_next_dst_edge_composition_to_correlate.: 0.394728s (num_starts 5; 0.0789s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.428572s (num_starts 1; 0.4286s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.434691s (num_starts 9; 0.0483s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.448933s (num_starts 11; 0.0408s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.482158s (num_starts 11; 0.0438s/start)
query:smt.: 0.487981s (num_starts 32; 0.0152s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.49862s (num_starts 15; 0.0332s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.655711s (num_starts 13; 0.0504s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart).: 0.673956s (num_starts 19; 0.0355s/start)
spawn_smt_query.: 0.707543s (num_starts 32; 0.0221s/start)
update_invariant_state_for_edges.: 1.07871s (num_starts 4; 0.2697s/start)
cg_check_new_cg_ec.: 1.08464s (num_starts 4; 0.2712s/start)
correl_entry_apply.: 1.08472s (num_starts 4; 0.2712s/start)
solver_provable.: 1.22139s (num_starts 36; 0.0339s/start)
expr_is_provable.: 1.23066s (num_starts 36; 0.0342s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.23126s (num_starts 36; 0.0342s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.23326s (num_starts 36; 0.0343s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.2354s (num_starts 36; 0.0343s/start)
solver_satisfiable-cache-miss.: 1.25185s (num_starts 32; 0.0391s/start)
solver_satisfiable.: 1.25205s (num_starts 37; 0.0338s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.27747s (num_starts 36; 0.0355s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.28079s (num_starts 36; 0.0356s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.28148s (num_starts 36; 0.0356s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.34098s (num_starts 36; 0.0372s/start)
prove.: 1.34124s (num_starts 36; 0.0373s/start)
prove_spawn_and_join_helper.: 1.34143s (num_starts 36; 0.0373s/start)
prove_spawn_and_join.: 1.4127s (num_starts 36; 0.0392s/start)
prove_wrapper.proof_query_not_trivial.: 1.41652s (num_starts 36; 0.0393s/start)
prove_wrapper.: 1.42606s (num_starts 50; 0.0285s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.42792s (num_starts 31; 0.0461s/start)
decide_hoare_triple_check_ub.: 1.44984s (num_starts 50; 0.0290s/start)
decide_hoare_triple_helper.: 1.47104s (num_starts 50; 0.0294s/start)
expandProductCFG.: 1.48396s (num_starts 5; 0.2968s/start)
decide_hoare_triple_with_alias_cons.: 1.59865s (num_starts 50; 0.0320s/start)
bestFirstSearch.: 1.70693s (num_starts 1; 1.7069s/start)
Time taken for equivalence check.: 1.94018s (num_starts 1; 1.9402s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 9
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 8
# of paths expanded.: 4
# of queries to linear solver.: 31
# of smt-solver-queries.: 32
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 2
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 2
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 2
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 4
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 2
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 5
smt-queries-cvc4-sat.: 12
smt-queries-yices-sat.: 12
smt-queries-z3-sat.: 12
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 5
final-CG-counterexamples-total-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 9
final-CG-counterexamples-total-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 9
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 11
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.25
final-CG-time-to-total-time-ratio.: 0.73
query-time-to-total-time-ratio.: 0.26

Context stats:
exprs: count: 142321
sorts: count: 152
num_proof_queries: 36
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3614
	        hit ratio:	0.951301
m_simplify_solver:
	----------- total:	707
	        hit ratio:	0.677511
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	36
	        hit ratio:	0.888889
m_z3_solver_substitution:
	----------- total:	228
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	228
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	2
	        hit ratio:	0.5
m_expr_size:
	----------- total:	1589
	        hit ratio:	0.825677
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	4591
	        hit ratio:	0.604226
m_sort_dfa_canonicalize:
	----------- total:	46538
	        hit ratio:	0.999656
m_expr_convert_to_iexpr:
	----------- total:	209
	        hit ratio:	0.645933

z3_solver expr_query_cache entry size: 32
	----------- total:	37
	             hits:	5
	        hit ratio:	0.135135
histogram (time taken by solver in ms):
[ 3.2940,  4.2820) (avg.  3.8364)        : 7
[ 4.2820,  5.5665) (avg.  4.7196)        : 7
[ 5.5665,  7.2361) (avg.  6.3360)        : 6
[ 7.2361,  9.4066) (avg.  0.0000)        : 0
[ 9.4066, 12.2282) (avg.  0.0000)        : 0
[12.2282, 15.8960) (avg.  0.0000)        : 0
[15.8960, 20.6641) (avg.  0.0000)        : 0
[20.6641, 26.8623) (avg. 25.3363)        : 3
[26.8623, 34.9197) (avg. 31.4605)        : 4
[34.9197, 45.3940) (avg. 37.5838)        : 5
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  51) (avg.  40)                    : 1
[ 51,  62) (avg.   0)                    : 0
[ 62,  73) (avg.   0)                    : 0
[ 73,  84) (avg.   0)                    : 0
[ 84,  94) (avg.   0)                    : 0
[ 94, 105) (avg. 104)                    : 3
[105, 116) (avg. 110)                    : 2
[116, 127) (avg. 123)                    : 22
[127, 138) (avg. 132)                    : 3
[138, 148) (avg. 138)                    : 1
Top 10 highest time taking queries:
1. [0.044s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-6-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0
4. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-3-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.036s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
6. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.030s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL3%5%fcallEnd_Lif.then.0
9. [0.027s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0
10. [0.026s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallStart_Lif.then%2%fcallStart.dstToPC.Lif.then%2%fcallEnd.from_pcL3%5%.0

<MSG>0:24 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:24 : Computing equivalence for function: update_val...</MSG>
<MSG>0:24 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:24 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:24 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:24 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:24 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:24 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:24 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:24 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:24 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:24 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:24 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:24 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:24 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:24 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:24 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:24 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:24 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:24 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:24 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:24 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:24 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:24 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:24 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:24 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:24 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:24 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:24 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:24 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:24 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:24 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:24 : Checking equivalence proof...</MSG>
<MSG>0:24 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.16s, query:smt.: 0.042929s (num_starts 3; 0.0143s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.086707s (num_starts 4; 0.0217s/start)ftmap_run_pointsto_analysis.: 0.014592s (num_starts 2; 0.0073s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 2e-06s (num_starts 1; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 2e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 4; 0.0000s/start)
ce_perform_memory_fuzzing.: 3e-06s (num_starts 3; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
sp_version_relations_val_t::meet.: 4e-06s (num_starts 9; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 5e-06s (num_starts 3; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5e-06s (num_starts 4; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6e-06s (num_starts 4; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 8e-06s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9e-06s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 1e-05s (num_starts 3; 0.0000s/start)
proof_query_is_trivial_helper.: 1.1e-05s (num_starts 4; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 1.3e-05s (num_starts 3; 0.0000s/start)
get_intersected_lr_status.: 1.3e-05s (num_starts 2; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1.3e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 1.6e-05s (num_starts 13; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.6e-05s (num_starts 1; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 1.7e-05s (num_starts 7; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 1.7e-05s (num_starts 3; 0.0000s/start)
lr_status_meet.: 1.7e-05s (num_starts 21; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 2e-05s (num_starts 13; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.1e-05s (num_starts 2; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 2.2e-05s (num_starts 1; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.3e-05s (num_starts 1; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.4e-05s (num_starts 1; 0.0000s/start)
graph_with_guessing_sync_preds.: 2.5e-05s (num_starts 4; 0.0000s/start)
def_analysis::xfer_and_meet.: 2.6e-05s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 2.6e-05s (num_starts 25; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 2.8e-05s (num_starts 3; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 3.2e-05s (num_starts 13; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.3e-05s (num_starts 1; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.5e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_exvregs.: 3.9e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 4.1e-05s (num_starts 2; 0.0000s/start)
proof_query_is_trivial.: 4.2e-05s (num_starts 4; 0.0000s/start)
create_closure_matrix.: 4.3e-05s (num_starts 6; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 5e-05s (num_starts 7; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 5.5e-05s (num_starts 16; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 6e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 6.3e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_local_vars.: 6.8e-05s (num_starts 2; 0.0000s/start)
set_result_and_counter_example.: 6.8e-05s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 6.8e-05s (num_starts 1; 0.0001s/start)
pth_collect_preds_using_atom_func.: 6.9e-05s (num_starts 5; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 7.1e-05s (num_starts 18; 0.0000s/start)
removeMostPromising.: 7.4e-05s (num_starts 4; 0.0000s/start)
collect_assumes_around_edge.: 7.5e-05s (num_starts 1; 0.0001s/start)
segment_memory_and_perform_commonMEM_optimization.: 7.5e-05s (num_starts 3; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 7.8e-05s (num_starts 2; 0.0000s/start)
tfg_edge_composition_get_assumes.: 7.9e-05s (num_starts 5; 0.0000s/start)
tfg::collect_assumes_around_edge.: 8e-05s (num_starts 5; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 8.7e-05s (num_starts 4; 0.0000s/start)
get_sprel_map_pair_at_pc.: 9.2e-05s (num_starts 3; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 9.3e-05s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 9.5e-05s (num_starts 11; 0.0000s/start)
compute_sprel_relations.: 9.8e-05s (num_starts 2; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.000103s (num_starts 6; 0.0000s/start)
propagate_sprels.: 0.000106s (num_starts 2; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.000113s (num_starts 2; 0.0001s/start)
collect_inductive_preds_around_path.: 0.000118s (num_starts 4; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000121s (num_starts 2; 0.0001s/start)
populate_locid2expr_map.: 0.000123s (num_starts 2; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000124s (num_starts 7; 0.0000s/start)
generate_aliasing_constraints_from_expr.: 0.000127s (num_starts 51; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000129s (num_starts 3; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000129s (num_starts 1; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000131s (num_starts 1; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000135s (num_starts 11; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000139s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00014s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000141s (num_starts 2; 0.0001s/start)
check_node_stability_after_CE_addition.: 0.000155s (num_starts 6; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000157s (num_starts 4; 0.0000s/start)
identify_address_taken_local_variables.: 0.000162s (num_starts 1; 0.0002s/start)
populate_simplified_to_state.: 0.000162s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000164s (num_starts 1; 0.0002s/start)
corr_graph_enumerate_correlations.: 0.000166s (num_starts 1; 0.0002s/start)
populate_branch_affecting_locs.: 0.000167s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000175s (num_starts 1; 0.0002s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000177s (num_starts 3; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000203s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000203s (num_starts 29; 0.0000s/start)
counter_example_falsifies_preds.: 0.000206s (num_starts 3; 0.0001s/start)
populate_transitive_closure.: 0.000221s (num_starts 11; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000223s (num_starts 3; 0.0001s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000235s (num_starts 3; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000236s (num_starts 3; 0.0001s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000246s (num_starts 1; 0.0002s/start)
graph_visit_exprs_and_keys.: 0.00026s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000262s (num_starts 4; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.000268s (num_starts 21; 0.0000s/start)
graph_visit_exprs.: 0.000286s (num_starts 3; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000296s (num_starts 1; 0.0003s/start)
collect_assumes_around_path_helper.: 0.000299s (num_starts 13; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000308s (num_starts 1; 0.0003s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000308s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000309s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00031s (num_starts 1; 0.0003s/start)
tfg::get_aliasing_constraints_for_edge.: 0.00031s (num_starts 9; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000311s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000312s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000313s (num_starts 1; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000313s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.000317s (num_starts 1; 0.0003s/start)
populate_simplified_assets.: 0.000317s (num_starts 6; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000318s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.00032s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000322s (num_starts 1; 0.0003s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.000327s (num_starts 4; 0.0001s/start)
graph_with_paths::collect_assumes_around_path.: 0.000332s (num_starts 13; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000336s (num_starts 4; 0.0001s/start)
tfg::populate_loc_definedness.: 0.000341s (num_starts 3; 0.0001s/start)
find_dominators.: 0.000342s (num_starts 19; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000392s (num_starts 6; 0.0001s/start)
get_next_potential_correlations.: 0.000393s (num_starts 1; 0.0004s/start)
graph_identify_back_edges.: 0.000396s (num_starts 15; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.000401s (num_starts 6; 0.0001s/start)
graph_identify_natural_loops.: 0.000421s (num_starts 15; 0.0000s/start)
counter_example_satisfies_preds.: 0.000424s (num_starts 18; 0.0000s/start)
lhs_set_sort.: 0.000428s (num_starts 3; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.00044s (num_starts 2; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.000455s (num_starts 5; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.000457s (num_starts 3; 0.0002s/start)
collect_aliasing_constraints_around_path_helper.: 0.000489s (num_starts 22; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.00052s (num_starts 3; 0.0002s/start)
create_new_corr_graph_edge.new_node.: 0.000532s (num_starts 1; 0.0005s/start)
collect_aliasing_constraints_around_path.: 0.000535s (num_starts 14; 0.0000s/start)
cg_add_node.: 0.000576s (num_starts 2; 0.0003s/start)
counter_example_evaluate_preds.: 0.000588s (num_starts 21; 0.0000s/start)
create_new_corr_graph_edge.: 0.000597s (num_starts 1; 0.0006s/start)
expr_linear_relation_holds::visit.var.: 0.000621s (num_starts 29; 0.0000s/start)
graph_ec_apply_trans_funs_helper.0.: 0.000625s (num_starts 12; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.000659s (num_starts 12; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.000683s (num_starts 6; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000685s (num_starts 12; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000699s (num_starts 4; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000718s (num_starts 12; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.000752s (num_starts 12; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000784s (num_starts 3; 0.0003s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000791s (num_starts 4; 0.0002s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000823s (num_starts 28; 0.0000s/start)
get_unrolled_paths_from.: 0.000837s (num_starts 6; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000878s (num_starts 117; 0.0000s/start)
compute_regions.: 0.000925s (num_starts 15; 0.0001s/start)
avail_exprs_create_submap.: 0.000971s (num_starts 12; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.001056s (num_starts 4; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.001099s (num_starts 6; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001129s (num_starts 6; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001182s (num_starts 6; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.001194s (num_starts 4; 0.0003s/start)
put_smtlib_string_in_file.: 0.001256s (num_starts 6; 0.0002s/start)
do_ssa_transformation.: 0.001265s (num_starts 2; 0.0006s/start)
query:convert_to_z3.: 0.00164s (num_starts 34; 0.0000s/start)
compute_lr_status_for_expr.: 0.001688s (num_starts 25; 0.0001s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.00173s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001771s (num_starts 21; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001928s (num_starts 1; 0.0019s/start)
compute_z3_expr.: 0.002009s (num_starts 37; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002422s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.00244s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002442s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.002445s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.002447s (num_starts 1; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.00245s (num_starts 1; 0.0024s/start)
query:convert_from_z3.: 0.002545s (num_starts 34; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.002575s (num_starts 4; 0.0006s/start)
decide_hoare_triple_helper;-trivial.: 0.002804s (num_starts 2; 0.0014s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.003135s (num_starts 6; 0.0005s/start)
parse_yices_model.: 0.003174s (num_starts 2; 0.0016s/start)
check_equivalence_proof.: 0.003737s (num_starts 1; 0.0037s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.003776s (num_starts 2; 0.0019s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.003878s (num_starts 124; 0.0000s/start)
graph_to_stream.: 0.003878s (num_starts 4; 0.0010s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.003951s (num_starts 3; 0.0013s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.004068s (num_starts 117; 0.0000s/start)
apply_mask_and_overlay_array_constant.: 0.004151s (num_starts 3; 0.0014s/start)
counter_example_translate_on_edge_composition_helper.: 0.004416s (num_starts 21; 0.0002s/start)
populate_loc_liveness.: 0.005133s (num_starts 3; 0.0017s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.005203s (num_starts 117; 0.0000s/start)
parse_z3_model.: 0.005223s (num_starts 2; 0.0026s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.005242s (num_starts 2; 0.0026s/start)
tfg_relax_pointsto_vals_on_edge.: 0.005259s (num_starts 2; 0.0026s/start)
parse_cvc4_model.: 0.005654s (num_starts 2; 0.0028s/start)
corr_graph::add_edge().: 0.006169s (num_starts 1; 0.0062s/start)
guarded_predicate_set_and.: 0.006257s (num_starts 3; 0.0021s/start)
query:simplify-z3.: 0.006378s (num_starts 68; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.006956s (num_starts 2; 0.0035s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.006977s (num_starts 1; 0.0070s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.007004s (num_starts 1; 0.0070s/start)
corr_graph_add_correlation.: 0.007011s (num_starts 1; 0.0070s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.007056s (num_starts 1; 0.0071s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.008058s (num_starts 3; 0.0027s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.008159s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011439s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01144s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011442s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011445s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011447s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.013901s (num_starts 2; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.013906s (num_starts 2; 0.0070s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.013911s (num_starts 2; 0.0070s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.013916s (num_starts 2; 0.0070s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.013922s (num_starts 2; 0.0070s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.014067s (num_starts 2; 0.0070s/start)
update_invariant_state_for_edges.: 0.014131s (num_starts 1; 0.0141s/start)
cg_check_new_cg_ec.: 0.014186s (num_starts 1; 0.0142s/start)
correl_entry_apply.: 0.014205s (num_starts 1; 0.0142s/start)
read_counter_examples_from_channel.: 0.014364s (num_starts 2; 0.0072s/start)
ftmap_run_pointsto_analysis.: 0.014592s (num_starts 2; 0.0073s/start)
tfg_run_pointsto_analysis.: 0.014737s (num_starts 2; 0.0074s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.014747s (num_starts 2; 0.0074s/start)
check_wfconds_on_edge.: 0.014761s (num_starts 2; 0.0074s/start)
check_preds_on_edge_compositions.: 0.014832s (num_starts 3; 0.0049s/start)
tfg_populate_structs_after_ssa_construction.: 0.015934s (num_starts 2; 0.0080s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.018469s (num_starts 2; 0.0092s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.019516s (num_starts 34; 0.0006s/start)
ce_reconcile_sorts_and_values.: 0.02039s (num_starts 6; 0.0034s/start)
query:smt.: 0.042929s (num_starts 3; 0.0143s/start)
spawn_smt_query.: 0.057343s (num_starts 3; 0.0191s/start)
solver_provable.: 0.064521s (num_starts 3; 0.0215s/start)
expr_is_provable.: 0.065s (num_starts 3; 0.0217s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.065048s (num_starts 3; 0.0217s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.065203s (num_starts 3; 0.0217s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.065281s (num_starts 3; 0.0218s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.071747s (num_starts 3; 0.0239s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.071984s (num_starts 3; 0.0240s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.072036s (num_starts 3; 0.0240s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072266s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072266s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072267s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072267s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072268s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.072272s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.072275s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.072279s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.072284s (num_starts 1; 0.0723s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.072615s (num_starts 2; 0.0363s/start)
decide_hoare_triple.: 0.073178s (num_starts 2; 0.0366s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.074723s (num_starts 3; 0.0249s/start)
prove.: 0.074741s (num_starts 3; 0.0249s/start)
prove_spawn_and_join_helper.: 0.074755s (num_starts 3; 0.0249s/start)
dst_edge_composition_proves_false.: 0.076388s (num_starts 1; 0.0764s/start)
get_next_dst_edge_composition_to_correlate.: 0.076958s (num_starts 2; 0.0385s/start)
prove_spawn_and_join.: 0.083685s (num_starts 3; 0.0279s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083797s (num_starts 2; 0.0419s/start)
prove_wrapper.proof_query_not_trivial.: 0.083963s (num_starts 3; 0.0280s/start)
prove_wrapper.: 0.084554s (num_starts 4; 0.0211s/start)
decide_hoare_triple_check_ub.: 0.085862s (num_starts 4; 0.0215s/start)
decide_hoare_triple_helper.: 0.086707s (num_starts 4; 0.0217s/start)
decide_hoare_triple_with_alias_cons.: 0.086979s (num_starts 4; 0.0217s/start)
solver_satisfiable-cache-miss.: 0.088159s (num_starts 3; 0.0294s/start)
solver_satisfiable.: 0.088184s (num_starts 4; 0.0220s/start)
expandProductCFG.: 0.091643s (num_starts 2; 0.0458s/start)
bestFirstSearch.: 0.125564s (num_starts 1; 0.1256s/start)
Time taken for equivalence check.: 0.129571s (num_starts 1; 0.1296s/start)

counters:
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.02
final-CG-time-to-total-time-ratio.: 0.17
query-time-to-total-time-ratio.: 0.34

Context stats:
exprs: count: 140978
sorts: count: 149
num_proof_queries: 39
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	409
	        hit ratio:	0.93154
m_simplify_solver:
	----------- total:	73
	        hit ratio:	0.534247
m_z3_solver_substitution:
	----------- total:	34
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	34
	        hit ratio:	0
m_expr_size:
	----------- total:	205
	        hit ratio:	0.741463
m_expr_evaluates_to_constant_visitor:
	----------- total:	353
	        hit ratio:	0.498584
m_sort_dfa_canonicalize:
	----------- total:	2673
	        hit ratio:	0.997381
m_expr_convert_to_iexpr:
	----------- total:	3
	        hit ratio:	0

z3_solver expr_query_cache entry size: 3
	----------- total:	41
	             hits:	1
	        hit ratio:	0.0243902
histogram (time taken by solver in ms):
[ 4.0860,  4.8249) (avg.  4.0860)        : 1
[ 4.8249,  5.6974) (avg.  0.0000)        : 0
[ 5.6974,  6.7277) (avg.  0.0000)        : 0
[ 6.7277,  7.9443) (avg.  0.0000)        : 0
[ 7.9443,  9.3808) (avg.  0.0000)        : 0
[ 9.3808, 11.0772) (avg.  0.0000)        : 0
[11.0772, 13.0803) (avg.  0.0000)        : 0
[13.0803, 15.4457) (avg.  0.0000)        : 0
[15.4457, 18.2388) (avg.  0.0000)        : 0
[18.2388, 21.5370) (avg. 19.4070)        : 2
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 45) (avg. 40)                       : 1
[45, 49) (avg.  0)                       : 0
[49, 53) (avg.  0)                       : 0
[53, 58) (avg.  0)                       : 0
[58, 62) (avg.  0)                       : 0
[62, 66) (avg.  0)                       : 0
[66, 71) (avg.  0)                       : 0
[71, 75) (avg. 72)                       : 2
[75, 79) (avg.  0)                       : 0
[79, 83) (avg.  0)                       : 0

<MSG>0:24 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.001310s total; 0.000024 per start]
tfg_computeWP: num_starts 238 time spent: 0:0:0 [0.015364s total; 0.000065 per start]
tfg_get_simplified_to_state_for_edge: num_starts 824 time spent: 0:0:0 [0.001264s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 916 time spent: 0:0:0 [0.001382s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 527 time spent: 0:0:0 [0.000836s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 41 time spent: 0:0:0 [0.098427s total; 0.002401 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.136785s total; 0.013678 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 192 time spent: 0:0:0 [0.135580s total; 0.000706 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 47 time spent: 0:0:0 [0.022822s total; 0.000486 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 183 time spent: 0:0:0 [0.120827s total; 0.000660 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 830 time spent: 0:0:0 [0.129623s total; 0.000156 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 189 time spent: 0:0:0 [0.007682s total; 0.000041 per start]
tfg_graph_get_vars_written_on_edge: num_starts 183 time spent: 0:0:0 [0.003220s total; 0.000018 per start]
cg_with_rank_add_CE_at_pc: num_starts 52 time spent: 0:0:0 [0.096348s total; 0.001853 per start]
graph_with_ce_add_CE_at_pc: num_starts 27 time spent: 0:0:0 [0.000493s total; 0.000018 per start]
graph_with_guessing_add_CE_at_pc: num_starts 52 time spent: 0:0:0 [0.096235s total; 0.001851 per start]
point_set_add_point_using_CE: num_starts 78 time spent: 0:0:0 [0.023149s total; 0.000297 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 78 time spent: 0:0:0 [0.023416s total; 0.000300 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.092709s total; 0.002506 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 37 time spent: 0:0:0 [0.068710s total; 0.001857 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1501 time spent: 0:0:0 [0.021865s total; 0.000015 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 184 time spent: 0:0:0 [0.014775s total; 0.000080 per start]
expr_simplify_solver: num_starts 831 time spent: 0:0:0 [0.072321s total; 0.000087 per start]
expr_simplify_syntactic: num_starts 831 time spent: 0:0:0 [0.185284s total; 0.000223 per start]
expr_simplify_select_on_store: num_starts 33 time spent: 0:0:0 [0.089499s total; 0.002712 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001417s total; 0.000094 per start]
expr_simplify_using_lhs_set_helper: num_starts 325 time spent: 0:0:0 [0.284130s total; 0.000874 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1923 time spent: 0:0:0 [0.282134s total; 0.000147 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 961 time spent: 0:0:0 [0.004305s total; 0.000004 per start]
expr_simplify_eq: num_starts 209 time spent: 0:0:0 [0.002355s total; 0.000011 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000011s total; 0.000001 per start]
expr_simplify_and: num_starts 35 time spent: 0:0:0 [0.000173s total; 0.000005 per start]
expr_simplify_not: num_starts 25 time spent: 0:0:0 [0.000096s total; 0.000004 per start]
expr_simplify_implies: num_starts 34 time spent: 0:0:0 [0.000321s total; 0.000009 per start]
expr_simplify_ite: num_starts 17 time spent: 0:0:0 [0.000850s total; 0.000050 per start]
canonicalize_expr_tree: num_starts 292 time spent: 0:0:0 [0.008457s total; 0.000029 per start]
expr_simplify_memalloc_using_memlabel: num_starts 22 time spent: 0:0:0 [0.000071s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 36 time spent: 0:0:0 [0.088693s total; 0.002464 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000073s total; 0.000073 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000057s total; 0.000004 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000007s total; 0.000007 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
get_arithmetic_addsub_atoms: num_starts 1365 time spent: 0:0:0 [0.001089s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.004843s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 383 time spent: 0:0:0 [0.000361s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 4224 time spent: 0:0:0 [0.265828s total; 0.000063 per start]
expr_do_simplify_helper_cache: num_starts 4224 time spent: 0:0:0 [0.003643s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2 time spent: 0:0:0 [0.000001s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2 time spent: 0:0:0 [0.000011s total; 0.000005 per start]
evaluate_expr_and_check_bounds: num_starts 593 time spent: 0:0:0 [0.144280s total; 0.000243 per start]
array_constant_equals: num_starts 5726 time spent: 0:0:0 [0.007130s total; 0.000001 per start]
sort_dfa_canonical: num_starts 190839 time spent: 0:0:1 [1.240639s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 217 time spent: 0:0:0 [0.243060s total; 0.001120 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.091771s total; 0.004830 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.076933s total; 0.004049 per start]
get_sprel_map_from_avail_exprs: num_starts 36 time spent: 0:0:0 [0.001945s total; 0.000054 per start]
update_memlabels_for_memslot_locs: num_starts 13 time spent: 0:0:0 [0.000056s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.010191s total; 0.000131 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.098800s total; 0.000470 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000129s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.020554s total; 0.000514 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001531s total; 0.000039 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.014855s total; 0.000782 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000227s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:31 [31.325477s total; 31.325477 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.33s.
ftmap_run_pointsto_analysis.: 0.014592s (num_starts 2; 0.0073s/start)s.
EQ Time after pointsto analysis: 2.31589s.
EQ Time after pointsto analysis and smt_query: 2.23134s.
EQ Time after pointsto analysis and smt_query and bv-solve: 2.23134s.
Equivalence proof found. The programs are equivalent.
