argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=fcall2.proof
argv[9] = --spec-iospecs=fcall2.iospecs
argv[10] = fcall2.spec
argv[11] = fcall2.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.2173565
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/fcall2.c
argv[10] = -o
argv[11] = par_tmpdir/fcall2.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/fcall2.spec.etfg
argv[11] = par_tmpdir/fcall2.c.bc
argv[12] = -o
argv[13] = par_tmpdir/fcall2.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function update_val</MSG>
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function opt_map</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 46 time spent: 0:0:0 [0.000071s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 66 time spent: 0:0:0 [0.000103s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 404 time spent: 0:0:0 [0.003174s total; 0.000008 per start]
expr_simplify_solver: num_starts 103 time spent: 0:0:0 [0.010571s total; 0.000103 per start]
expr_simplify_syntactic: num_starts 103 time spent: 0:0:0 [0.062099s total; 0.000603 per start]
expr_simplify_select_on_store: num_starts 2 time spent: 0:0:0 [0.006617s total; 0.003308 per start]
expr_simplify_store_on_store: num_starts 9 time spent: 0:0:0 [0.000830s total; 0.000092 per start]
expr_simplify_using_lhs_set_helper: num_starts 71 time spent: 0:0:0 [0.077198s total; 0.001087 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 408 time spent: 0:0:0 [0.076824s total; 0.000188 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 45 time spent: 0:0:0 [0.000193s total; 0.000004 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000040s total; 0.000013 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 54 time spent: 0:0:0 [0.001082s total; 0.000020 per start]
expr_simplify_memalloc_using_memlabel: num_starts 8 time spent: 0:0:0 [0.000025s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 2 time spent: 0:0:0 [0.006532s total; 0.003266 per start]
memlabels_are_independent: num_starts 7 time spent: 0:0:0 [0.000021s total; 0.000003 per start]
get_arithmetic_addsub_atoms: num_starts 42 time spent: 0:0:0 [0.000031s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 89 time spent: 0:0:0 [0.001094s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 186 time spent: 0:0:0 [0.000149s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 937 time spent: 0:0:0 [0.078371s total; 0.000084 per start]
expr_do_simplify_helper_cache: num_starts 937 time spent: 0:0:0 [0.000669s total; 0.000001 per start]
array_constant_equals: num_starts 57 time spent: 0:0:0 [0.000120s total; 0.000002 per start]
sort_dfa_canonical: num_starts 142235 time spent: 0:0:1 [1.113306s total; 0.000008 per start]
expr_convert_to_iexpr: num_starts 5 time spent: 0:0:0 [0.000795s total; 0.000159 per start]
combo_dfa_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.050767s total; 0.001953 per start]
alias_val_xfer_and_meet: num_starts 26 time spent: 0:0:0 [0.036772s total; 0.001414 per start]
get_sprel_map_from_avail_exprs: num_starts 38 time spent: 0:0:0 [0.001748s total; 0.000046 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000035s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 50 time spent: 0:0:0 [0.002761s total; 0.000055 per start]
compute_simplified_loc_exprs_for_edge: num_starts 189 time spent: 0:0:0 [0.065359s total; 0.000346 per start]
compute_locs_definitely_written_on_edge: num_starts 50 time spent: 0:0:0 [0.000030s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 30 time spent: 0:0:0 [0.019874s total; 0.000662 per start]
edge_update_memlabel_map_for_mlvars: num_starts 25 time spent: 0:0:0 [0.000421s total; 0.000017 per start]
add_new_locs_based_on_edge: num_starts 25 time spent: 0:0:0 [0.010213s total; 0.000409 per start]
expand_locset_to_include_slots_for_memmask: num_starts 40 time spent: 0:0:0 [0.000209s total; 0.000005 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.opt_map.: 0s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.update_val.: 0s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.opt_map.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.update_val.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.opt_map.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-06s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_loc_for_arg_expr.: 2e-06s (num_starts 1; 0.0000s/start)
get_memlabel_set_from_mlvarnames.: 2e-06s (num_starts 2; 0.0000s/start)
graph_with_ce_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.opt_map.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.update_val.: 2e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 2e-06s (num_starts 2; 0.0000s/start)
tfg_constructor.src.spec.update_val.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 2; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.update_val.: 3e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 4e-06s (num_starts 2; 0.0000s/start)
graph_with_guessing_constructor.src.spec.opt_map.: 8e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.3e-05s (num_starts 4; 0.0000s/start)
lr_status_meet.: 1.4e-05s (num_starts 20; 0.0000s/start)
get_intersected_lr_status.: 2.2e-05s (num_starts 2; 0.0000s/start)
expr_is_hidden_reg.: 2.3e-05s (num_starts 32; 0.0000s/start)
add_assumes_to_start_edge.: 2.9e-05s (num_starts 2; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_arg_locs_in_fcall_edge.: 3.3e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.8e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4e-05s (num_starts 4; 0.0000s/start)
context_constructor.: 4.4e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 4.6e-05s (num_starts 2; 0.0000s/start)
expr_is_callee_save_const.: 4.7e-05s (num_starts 44; 0.0000s/start)
identify_farg_memlabels_at_pc.calling.compute_lr_status_for_expr.: 5e-05s (num_starts 1; 0.0001s/start)
tfg_get_read_memlabels.: 5.5e-05s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 5.7e-05s (num_starts 8; 0.0000s/start)
tfg_get_write_memlabels.: 7.3e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_indvars.: 0.0001s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000101s (num_starts 2; 0.0001s/start)
main.3.: 0.000105s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.000109s (num_starts 113; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000109s (num_starts 23; 0.0000s/start)
graph_visit_exprs_const.const.: 0.000113s (num_starts 2; 0.0001s/start)
compute_reachable_memlabels_map.: 0.000115s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000117s (num_starts 2; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000128s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000131s (num_starts 4; 0.0000s/start)
compute_sprel_relations.: 0.000134s (num_starts 2; 0.0001s/start)
get_summary_for_calling_functions.: 0.000134s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::meet.: 0.000138s (num_starts 277; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.compute_summary_function.: 0.000141s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000147s (num_starts 2; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_convert_caller_pointsto_value_to_callee_pointsto_value.: 0.000158s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000161s (num_starts 6; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.identify_farg_memlabels_at_pc.: 0.000166s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000169s (num_starts 2; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.000172s (num_starts 23; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000185s (num_starts 25; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000189s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000225s (num_starts 49; 0.0000s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_update_callee_boundary_value.: 0.000249s (num_starts 1; 0.0002s/start)
graph_with_edge_structures_constructor.src.spec.update_val.: 0.000257s (num_starts 1; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000257s (num_starts 2; 0.0001s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000274s (num_starts 23; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000277s (num_starts 48; 0.0000s/start)
populate_locid2expr_map.: 0.000321s (num_starts 4; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000346s (num_starts 25; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000367s (num_starts 2; 0.0002s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000388s (num_starts 25; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.update_val.: 0.0004s (num_starts 1; 0.0004s/start)
populate_transitive_closure.: 0.000439s (num_starts 2; 0.0002s/start)
canonicalize_llvm_nextpcs.: 0.000447s (num_starts 2; 0.0002s/start)
graph_with_locs_constructor.src.spec.update_val.: 0.000465s (num_starts 1; 0.0005s/start)
create_closure_matrix.: 0.000482s (num_starts 34; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000499s (num_starts 17; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.update_val.: 0.000507s (num_starts 1; 0.0005s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000555s (num_starts 143; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.opt_map.: 0.000632s (num_starts 1; 0.0006s/start)
populate_exit_return_values_for_llvm_method.: 0.000668s (num_starts 2; 0.0003s/start)
graph_with_predicates_constructor.src.spec.update_val.: 0.000684s (num_starts 1; 0.0007s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000754s (num_starts 2; 0.0004s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000772s (num_starts 2; 0.0004s/start)
compute_z3_expr.: 0.00078s (num_starts 52; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.000865s (num_starts 49; 0.0000s/start)
graph_with_edge_structures_constructor.src.spec.opt_map.: 0.000874s (num_starts 1; 0.0009s/start)
graph_with_locs_constructor.src.spec.opt_map.: 0.000893s (num_starts 1; 0.0009s/start)
tfg::collect_assumes_around_edge.: 0.001036s (num_starts 66; 0.0000s/start)
tfg_preprocess.dst.llvm.update_val.: 0.00113s (num_starts 1; 0.0011s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001236s (num_starts 2; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001431s (num_starts 2; 0.0007s/start)
populate_dominator_and_postdominator_relations.: 0.001465s (num_starts 4; 0.0004s/start)
tfg_constructor.src.spec.update_val.after_transitive_closure.: 0.001489s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.post_parsing.: 0.001494s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_string_contents.: 0.001499s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.after_compute_max_memlabel_varnum.: 0.001504s (num_starts 1; 0.0015s/start)
tfg_constructor.src.spec.update_val.: 0.001508s (num_starts 1; 0.0015s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001536s (num_starts 2; 0.0008s/start)
graph_with_simplified_assets_constructor.src.spec.opt_map.: 0.001649s (num_starts 1; 0.0016s/start)
graph_visit_exprs.: 0.001773s (num_starts 8; 0.0002s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.002091s (num_starts 25; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.002125s (num_starts 4; 0.0005s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002211s (num_starts 26; 0.0001s/start)
query:convert_from_z3.: 0.002228s (num_starts 52; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002584s (num_starts 4; 0.0006s/start)
get_function_tfg_map.update_val.: 0.00266s (num_starts 1; 0.0027s/start)
graph_with_predicates_constructor.src.spec.opt_map.: 0.002719s (num_starts 1; 0.0027s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002753s (num_starts 25; 0.0001s/start)
tfg::populate_loc_definedness.: 0.002757s (num_starts 4; 0.0007s/start)
query:convert_to_z3.: 0.002798s (num_starts 52; 0.0001s/start)
graph_identify_back_edges.: 0.002902s (num_starts 12; 0.0002s/start)
graph_identify_natural_loops.: 0.002939s (num_starts 12; 0.0002s/start)
populate_branch_affecting_locs.: 0.002973s (num_starts 4; 0.0007s/start)
create_sp_version_relations_lattice_at_pc.: 0.003059s (num_starts 34; 0.0001s/start)
tfg_constructor.src.spec.opt_map.after_transitive_closure.: 0.003477s (num_starts 1; 0.0035s/start)
tfg_constructor.src.spec.opt_map.post_parsing.: 0.003482s (num_starts 1; 0.0035s/start)
tfg_constructor.src.spec.opt_map.after_string_contents.: 0.003492s (num_starts 1; 0.0035s/start)
tfg_constructor.src.spec.opt_map.after_compute_max_memlabel_varnum.: 0.003497s (num_starts 1; 0.0035s/start)
tfg_constructor.src.spec.opt_map.: 0.003501s (num_starts 1; 0.0035s/start)
find_dominators.: 0.004007s (num_starts 20; 0.0002s/start)
avail_exprs_create_submap.: 0.004011s (num_starts 75; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.004556s (num_starts 404; 0.0000s/start)
graph_to_stream.: 0.004924s (num_starts 2; 0.0025s/start)
compute_regions.: 0.005459s (num_starts 12; 0.0005s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006512s (num_starts 26; 0.0003s/start)
query:simplify-z3.: 0.006666s (num_starts 106; 0.0001s/start)
tfg_preprocess.dst.llvm.opt_map.: 0.0067s (num_starts 1; 0.0067s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.007157s (num_starts 20; 0.0004s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.007192s (num_starts 20; 0.0004s/start)
compute_lr_status_for_expr.: 0.007329s (num_starts 29; 0.0003s/start)
tfg::tfg_preprocess.: 0.007836s (num_starts 2; 0.0039s/start)
main.2.: 0.009387s (num_starts 1; 0.0094s/start)
get_function_tfg_map.opt_map.: 0.011529s (num_starts 1; 0.0115s/start)
populate_simplified_to_state.: 0.011908s (num_starts 6; 0.0020s/start)
get_tfg.: 0.014102s (num_starts 2; 0.0071s/start)
get_function_tfg_map.: 0.014194s (num_starts 2; 0.0071s/start)
populate_simplified_assets.: 0.014705s (num_starts 12; 0.0012s/start)
populate_locs_potentially_modified_on_edge.: 0.015536s (num_starts 6; 0.0026s/start)
compute_new_lr_status_on_locs.: 0.025872s (num_starts 25; 0.0010s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.030266s (num_starts 6; 0.0050s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.031709s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.032331s (num_starts 404; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.03608s (num_starts 404; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.036827s (num_starts 26; 0.0014s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.039709s (num_starts 24; 0.0017s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.042183s (num_starts 48; 0.0009s/start)
populate_loc_liveness.: 0.053109s (num_starts 4; 0.0133s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.077309s (num_starts 71; 0.0011s/start)
tfg_postprocess_after_pointsto_analysis.: 0.088747s (num_starts 2; 0.0444s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.092881s (num_starts 2; 0.0464s/start)
ftmap_run_pointsto_analysis.: 0.150546s (num_starts 1; 0.1505s/start)
parse_consts_db.: 6.40251s (num_starts 1; 6.4025s/start)
main.: 6.5996s (num_starts 1; 6.5996s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:06 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:12 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:19 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:19 : Reading in SPEC-LLVM I/O specification from file fcall2.iospecs...</MSG>
<MSG>0:19 : Computing equivalence for function: opt_map...</MSG>
<MSG>0:19 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:19 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:19 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:19 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:19 : Chose (after CE propagation) product-TFG opt_map (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:20 : product-TFG opt_map: Enumerating correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map: Found 2 correlations for L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:20 : product-TFG opt_map created 2 possibilities in group opt_map.A...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%fcallStart ending at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
<MSG>0:20 : Adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Updating dst fcall edge using src fcall edge for toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Computing loop hoisting select expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Adding node L3%5%fcallStart_Lif.then%2%fcallStart to the product-TFG...</MSG>
<MSG>0:20 : opt_map.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Adding edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : opt_map.A2: Propagated 1 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart</MSG>
<MSG>0:20 : opt_map.A2: Added the 1 propagated CEs at PC L3%5%fcallStart_Lif.then%2%fcallStart and propagated further.
</MSG>
<MSG>0:20 : opt_map.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:20 : opt_map.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:20 : opt_map.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding new edge to the product-TFG opt_map.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%fcallStart_Lif.then%2%fcallStart, src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%fcallStart and dst path L0%0%d --> Lif.then%2%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:20 : Added correlation to the product-TFG opt_map.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:20 : Chose (after CE propagation) product-TFG opt_map.A2 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lif.then%2%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%fcallStart[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    5 preds:
      0.: 0                     ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: 0                     ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 2147483648            ==  input.dst.llvm-%opt
      4.: 0                     ==  input.spec-%var-val-1.L3%5%fcallStart
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:20 : opt_map.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:20 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: unchanged</MSG>
<MSG>0:20 : opt_map.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart) ...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht6-prove_trivial0-prove6...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:20 : opt_map.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart)...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:20 : opt_map.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed ...</MSG>
<MSG>0:20 : opt_map.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
opt_map.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:20 : opt_map.A2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:20 : opt_map.A2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:20 : product-TFG opt_map.A2: Enumerating correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallStart[mu 0, delta {0,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L3%5%fcallStart as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Considering 1 paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Attempting correlation of src pathset L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : Found 1 feasible correlations for paths to src pc L3%5%fcallEnd as correlation candidates for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : product-TFG opt_map.A2: Found 2 correlations for Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}] starting at L3%5%fcallStart_Lif.then%2%fcallStart
</MSG>
<MSG>0:20 : product-TFG opt_map.A2 created 2 possibilities in group opt_map.A2.B...</MSG>
<MSG>0:20 : Chose (for CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:20 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:20 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2...</MSG>
<MSG>0:20 : Creating ssa-path for the src-tfg path L3%5%fcallStart --> L3%5%fcallEnd ending at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:20 : Adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:20 : Identifying common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd
</MSG>
<MSG>0:20 : Identified no common alloc-deallocs in the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
<MSG>0:20 : Adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A2.B2: Computing loop hoisting select expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A2.B2: Computing loop hoisting non-linear expressions at toPC L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A2.B2: Adding node L3%5%fcallEnd_Lif.then%2%fcallEnd to the product-TFG...</MSG>
<MSG>0:20 : opt_map.A2.B2: Getting alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A2.B2: Found no alloca-ptrs on edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A2.B2: Adding edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:20 : opt_map.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:20 : opt_map.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:20 : opt_map.A2.B2: Propagated 7 out of 7 counter-examples across edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd</MSG>
<MSG>0:21 : opt_map.A2.B2: Added the 7 propagated CEs at PC L3%5%fcallEnd_Lif.then%2%fcallEnd and propagated further.
</MSG>
<MSG>0:21 : opt_map.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A2.B2: Computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done computing CG regions after the addition of the edge L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A2.B2 for fromPC L3%5%fcallStart_Lif.then%2%fcallStart and toPC L3%5%fcallEnd_Lif.then%2%fcallEnd, src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L3%5%fcallStart --> L3%5%fcallEnd and dst path Lif.then%2%fcallStart --> Lif.then%2%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : Added correlation to the product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A2.B2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallStart=>Lif.then%2%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallStart=>L3%5%fcallEnd[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      1.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: unchanged</MSG>
<MSG>0:21 : opt_map.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%fcallStart_Lif.then%2%fcallStart ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd) ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 5 exprs and 5 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:21 : opt_map.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd)...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2.B2: Done relaxing invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed ...</MSG>
<MSG>0:21 : opt_map.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
opt_map.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5


<MSG>0:21 : opt_map.A2.B2 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2.B2 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2: Enumerating correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2: Found 1 correlations for Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%fcallEnd_Lif.then%2%fcallEnd
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2 created 1 possibilities in group opt_map.A2.B2.C...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L3%5%fcallEnd --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Getting alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Found no alloca-ptrs on edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Adding edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Propagated 0 out of 8 counter-examples across edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Added the 0 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A2.B2.C1 for fromPC L3%5%fcallEnd_Lif.then%2%fcallEnd and toPC E0%0%d_E0%0%d, src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L3%5%fcallEnd --> E0%0%d and dst path Lif.then%2%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : Added correlation to the product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lif.then%2%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%fcallEnd_Lif.then%2%fcallEnd ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
opt_map.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2.C1: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2.C1: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG opt_map.A2.B2.C1 created 1 possibilities in group opt_map.A2.B2.C1.D...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG opt_map.A2.B2.C1.D1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Propagated 3 out of 5 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG opt_map.A2.B2.C1.D1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : Added correlation to the product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1.D1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
opt_map.A2.B2.C1.D1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : opt_map.A2.B2.C1.D1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:21 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%fcallStart_Lif.then%2%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 4-->select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false) ; 5-->input.dst.llvm-%tobool.Lentry%2%d ; 6-->input.dst.llvm-%0.Lif.then%2%fcallStart ; 
    4 preds:
      0.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.dst.llvm-%0.Lif.then%2%fcallStart
      1.: 1                     ==  bvzero_ext(bool_to_bv(input.dst.llvm-%tobool.Lentry%2%d), 31)
      2.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, mlvar.dst.llvm.opt_map.0, input.dst.llvm-%opt, 4, false)
      3.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
     is_assumed_eqclass : 0
    4 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63
    eqclass 2:
    smallest point cover name expr-group-region_agrees_with_memlabel, type HOUDINI, exprs [1]: 7-->region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap) ; 
    1 preds:
      0.: region_agrees_with_memlabel(input.dst.llvm-mem.alloc, input.dst.llvm-%opt, 4, memlabel-mem-no-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 8-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 9-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

L3%5%fcallEnd_Lif.then%2%fcallEnd: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___opt_map__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___opt_map__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-symbol.2-local./*___y___update_val__x__=L0%0%argnum0=/-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [5]: 2-->input.spec-%var-val-1.L3%5%fcallStart ; 3-->input.dst.llvm-%opt ; 10-->input.spec-%tmpvar-3.L3%5%fcallEnd ; 11-->input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd ; 12-->input.dst.llvm-%call.Lif.then%2%fcallEnd ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%opt, 1, 0)
      1.: bvneg(bvmul(input.spec-%var-val-1.L3%5%fcallStart, 4294967295))  ==  input.spec-fcall_arg_copy.0.spec-%var-val-1.L3%5%fcallEnd
     is_assumed_eqclass : 0
    5 visited ces:
      0.:yices.ce5      1.:z3v487.ce25      2.:cvc4.ce24      3.:cvc4.ce63      4.:cvc4.ce180
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 13-->eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 14-->eq(input.spec-%tmpvar-6.E0%0%d, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false))) ; 
    1 preds:
      0.: eq(input.spec-%var-opt-0, sum(ite(eq(0, input.dst.llvm-%opt), 0, 1), unit, select(input.dst.llvm-mem.Lif.then%2%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, input.dst.llvm-%opt, 4, false)))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:yices.ce5

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[4]: L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart (C L0%0%d => C L3%5%fcallStart at mu 1 delta {1,0}, A L0%0%d => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallStart => C L3%5%fcallEnd at mu 1 delta {1,0}, A (line 7 at column 23) => A (line 7 at column 23) at mu 1 delta {1,0})
            L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d (C L3%5%fcallEnd => C E0%0%d at mu 1 delta {1,0}, A (line 7 at column 23) => A E0%0%d at mu 1 delta {1,0})
            L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 6 counterexamples (for correlating 0 bv exprs)
            L3%5%fcallStart_Lif.then%2%fcallStart (C L3%5%fcallStart, A (line 7 at column 23))
                L3%5%fcallStart_Lif.then%2%fcallStart [inductive-invariants] contains 7 counterexamples (for correlating 5 bv exprs)
            L3%5%fcallEnd_Lif.then%2%fcallEnd (C L3%5%fcallEnd, A (line 7 at column 23))
                L3%5%fcallEnd_Lif.then%2%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 5 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function opt_map. 2.08s, query:smt.: 0.443869s (num_starts 31; 0.0143s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 1.33606s (num_starts 47; 0.0284s/start)ftmap_run_pointsto_analysis.: 0.15724s (num_starts 2; 0.0786s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 3e-06s (num_starts 2; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 3e-06s (num_starts 3; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 6e-06s (num_starts 2; 0.0000s/start)
prune_dst_memslots.: 6e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 8e-06s (num_starts 4; 0.0000s/start)
prove_trivial.: 9e-06s (num_starts 10; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.1e-05s (num_starts 4; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1.3e-05s (num_starts 20; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.8e-05s (num_starts 6; 0.0000s/start)
get_intersected_lr_status.: 2.1e-05s (num_starts 2; 0.0000s/start)
remove_complex_bv_exprs.: 2.6e-05s (num_starts 2; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3.1e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.4e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 3.8e-05s (num_starts 22; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 4e-05s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 5.3e-05s (num_starts 30; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5.9e-05s (num_starts 47; 0.0000s/start)
sp_version_relations_val_t::meet.: 6.6e-05s (num_starts 148; 0.0000s/start)
lr_status_meet.: 6.7e-05s (num_starts 78; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 7.2e-05s (num_starts 2; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 7.5e-05s (num_starts 3; 0.0000s/start)
collect_dst_to_src_submap_preds.: 7.8e-05s (num_starts 47; 0.0000s/start)
get_lr_status_for_loc_ids.: 9.1e-05s (num_starts 21; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 9.1e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 9.2e-05s (num_starts 108; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.000114s (num_starts 26; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000118s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000121s (num_starts 15; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000121s (num_starts 16; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000122s (num_starts 8; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000124s (num_starts 6; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000135s (num_starts 2; 0.0001s/start)
proof_query_is_trivial_helper.: 0.000136s (num_starts 57; 0.0000s/start)
expr_is_callee_save_const.: 0.00014s (num_starts 132; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000146s (num_starts 37; 0.0000s/start)
compute_sprel_relations.: 0.00015s (num_starts 2; 0.0001s/start)
propagate_sprels.: 0.00016s (num_starts 2; 0.0001s/start)
get_sprel_map_pair.: 0.000178s (num_starts 43; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.00018s (num_starts 23; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 0.000192s (num_starts 15; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000205s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000212s (num_starts 1; 0.0002s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000238s (num_starts 12; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.000264s (num_starts 10; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000269s (num_starts 37; 0.0000s/start)
populate_locid2expr_map.: 0.000282s (num_starts 2; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000288s (num_starts 17; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.000306s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000325s (num_starts 1; 0.0003s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallEnd_Lif.then%2%fcallEnd.inductive-invariants.: 0.000337s (num_starts 3; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000349s (num_starts 2; 0.0002s/start)
create_closure_matrix.: 0.000361s (num_starts 46; 0.0000s/start)
compute_bv_bool_eqclass.: 0.000367s (num_starts 2; 0.0002s/start)
graph_locs_add_all_llvmvars.: 0.000408s (num_starts 2; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000409s (num_starts 1; 0.0004s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000419s (num_starts 35; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000431s (num_starts 6; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000437s (num_starts 1; 0.0004s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000438s (num_starts 2; 0.0002s/start)
populate_dominator_and_postdominator_relations.: 0.000453s (num_starts 2; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000454s (num_starts 80; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000482s (num_starts 91; 0.0000s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000489s (num_starts 17; 0.0000s/start)
proof_query_is_trivial.: 0.000526s (num_starts 47; 0.0000s/start)
set_result_and_counter_example.: 0.000533s (num_starts 31; 0.0000s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000539s (num_starts 14; 0.0000s/start)
expr_represents_llvm_undef.: 0.000557s (num_starts 140; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.000558s (num_starts 47; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000579s (num_starts 2; 0.0003s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000587s (num_starts 1; 0.0006s/start)
tfg::collect_assumes_around_edge.: 0.000594s (num_starts 37; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000602s (num_starts 91; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000623s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000626s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000629s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00064s (num_starts 1; 0.0006s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.000674s (num_starts 17; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000681s (num_starts 149; 0.0000s/start)
pth_collect_preds_using_atom_func.: 0.000687s (num_starts 21; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00071s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000718s (num_starts 1; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000721s (num_starts 4; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000722s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00073s (num_starts 1; 0.0007s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.000779s (num_starts 16; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000794s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-trivial.: 0.000833s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.000835s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-trivial.: 0.000876s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.000878s (num_starts 1; 0.0009s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000888s (num_starts 6; 0.0001s/start)
removeMostPromising.: 0.000893s (num_starts 13; 0.0001s/start)
tfg_edge_composition_get_assumes.: 0.000943s (num_starts 21; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.000944s (num_starts 27; 0.0000s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000967s (num_starts 6; 0.0002s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.00097s (num_starts 4; 0.0002s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000986s (num_starts 28; 0.0000s/start)
get_unrolled_loop_paths_from.: 0.000989s (num_starts 3; 0.0003s/start)
identify_address_taken_local_variables.: 0.001033s (num_starts 2; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001065s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001066s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.00107s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.001074s (num_starts 1; 0.0011s/start)
tfg::populate_loc_definedness.before_initialize.: 0.001098s (num_starts 3; 0.0004s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001105s (num_starts 37; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001158s (num_starts 1; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001158s (num_starts 1; 0.0012s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001158s (num_starts 29; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.001159s (num_starts 41; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001162s (num_starts 1; 0.0012s/start)
compute_ssa_vars_renaming_map.: 0.001167s (num_starts 2; 0.0006s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.001173s (num_starts 6; 0.0002s/start)
collect_assumes_around_edge.: 0.001185s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.: 0.001186s (num_starts 3; 0.0004s/start)
interesting_wp_exprs_apply_trans_funs.: 0.001207s (num_starts 6; 0.0002s/start)
compute_vars_reaching_definitions.: 0.001247s (num_starts 2; 0.0006s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001251s (num_starts 35; 0.0000s/start)
graph_visit_exprs.: 0.001255s (num_starts 3; 0.0004s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.001267s (num_starts 41; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.001294s (num_starts 1; 0.0013s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.001303s (num_starts 18; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.001329s (num_starts 18; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001337s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00134s (num_starts 2; 0.0007s/start)
graph_visit_exprs_and_keys.: 0.001341s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.001363s (num_starts 1; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.001367s (num_starts 1; 0.0014s/start)
corr_graph_enumerate_correlations.: 0.001395s (num_starts 6; 0.0002s/start)
get_sprel_map_pair_at_pc.: 0.001494s (num_starts 37; 0.0000s/start)
ldr_decomposition.: 0.001495s (num_starts 26; 0.0001s/start)
populate_transitive_closure.: 0.001551s (num_starts 15; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00163s (num_starts 3; 0.0005s/start)
propagate_nodece_across_edge.: 0.00166s (num_starts 3; 0.0006s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.001675s (num_starts 18; 0.0001s/start)
aliasing_constraints.convert_to_expr.: 0.001681s (num_starts 37; 0.0000s/start)
populate_branch_affecting_locs.: 0.001725s (num_starts 3; 0.0006s/start)
construct_linear_combination_exprs.: 0.001897s (num_starts 41; 0.0000s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.002072s (num_starts 65; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002214s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002217s (num_starts 2; 0.0011s/start)
generate_aliasing_constraints_from_expr.: 0.002226s (num_starts 353; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-trivial.: 0.002233s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002255s (num_starts 2; 0.0011s/start)
check_node_stability_after_CE_addition.: 0.002318s (num_starts 41; 0.0001s/start)
bv_const_ref_map2expr_map.: 0.002334s (num_starts 41; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.002346s (num_starts 3; 0.0008s/start)
graph_identify_back_edges.: 0.002362s (num_starts 24; 0.0001s/start)
find_dominators.: 0.002403s (num_starts 28; 0.0001s/start)
graph_identify_natural_loops.: 0.002428s (num_starts 24; 0.0001s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.002546s (num_starts 3; 0.0008s/start)
tfg_suffixpath_get_expr_helper.: 0.002573s (num_starts 22; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002661s (num_starts 80; 0.0000s/start)
cg_src_dst_tfg_copy.: 0.002913s (num_starts 1; 0.0029s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.00303s (num_starts 1; 0.0030s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.003093s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003096s (num_starts 2; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.003102s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.003113s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.003137s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.003145s (num_starts 2; 0.0016s/start)
create_sp_version_relations_lattice_at_pc.: 0.003164s (num_starts 46; 0.0001s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.003177s (num_starts 4; 0.0008s/start)
expr_linear_relation_holds::visit.var.: 0.003355s (num_starts 149; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.003768s (num_starts 82; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003819s (num_starts 3; 0.0013s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.003869s (num_starts 80; 0.0000s/start)
get_next_potential_correlations.: 0.004262s (num_starts 4; 0.0011s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.004298s (num_starts 37; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004776s (num_starts 190; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005026s (num_starts 1; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005027s (num_starts 1; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.005031s (num_starts 1; 0.0050s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.00528s (num_starts 35; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.005366s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-trivial.: 0.005371s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.005377s (num_starts 1; 0.0054s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.005421s (num_starts 37; 0.0001s/start)
pth_collect_simplified_preds_using_atom_func.: 0.005471s (num_starts 85; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.005519s (num_starts 505; 0.0000s/start)
do_ssa_transformation.: 0.005554s (num_starts 2; 0.0028s/start)
compute_regions.: 0.005626s (num_starts 24; 0.0002s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-trivial.: 0.005643s (num_starts 2; 0.0028s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005752s (num_starts 106; 0.0001s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-trivial.: 0.006072s (num_starts 2; 0.0030s/start)
tfg::get_aliasing_constraints_for_edge.: 0.006236s (num_starts 142; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.006526s (num_starts 26; 0.0003s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.006664s (num_starts 4; 0.0017s/start)
bv_linear_solve.: 0.007009s (num_starts 26; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.00702s (num_starts 1; 0.0070s/start)
lhs_set_sort.: 0.007079s (num_starts 37; 0.0002s/start)
query:bv_solve.: 0.007182s (num_starts 26; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.007362s (num_starts 2; 0.0037s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.007369s (num_starts 2; 0.0037s/start)
collect_inductive_preds_around_path.: 0.007646s (num_starts 47; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.00814s (num_starts 70; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-trivial.: 0.008177s (num_starts 3; 0.0027s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.008523s (num_starts 2; 0.0043s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.008526s (num_starts 2; 0.0043s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.00854s (num_starts 2; 0.0043s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-trivial.: 0.008939s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.008943s (num_starts 1; 0.0089s/start)
bv_solve_returning_intermediate_structures.: 0.00901s (num_starts 26; 0.0003s/start)
populate_simplified_to_state.: 0.009066s (num_starts 3; 0.0030s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.009744s (num_starts 35; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-trivial.: 0.009833s (num_starts 4; 0.0025s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009931s (num_starts 1; 0.0099s/start)
collect_assumes_around_path_helper.: 0.009932s (num_starts 91; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009937s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009942s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.009947s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00995s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.009963s (num_starts 1; 0.0100s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.009981s (num_starts 70; 0.0001s/start)
populate_simplified_assets.: 0.010031s (num_starts 6; 0.0017s/start)
graph_with_paths::collect_assumes_around_path.: 0.010179s (num_starts 91; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010282s (num_starts 1; 0.0103s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.010283s (num_starts 1; 0.0103s/start)
counter_example_falsifies_preds.: 0.010346s (num_starts 42; 0.0002s/start)
bvsolve_cache_query.miss1.: 0.0104s (num_starts 26; 0.0004s/start)
counter_example_satisfies_preds.: 0.010663s (num_starts 207; 0.0001s/start)
bvsolve_cache_query.: 0.010701s (num_starts 26; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.010701s (num_starts 5; 0.0021s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.010926s (num_starts 35; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;outgoing_edges_cover_all_possibilities..: 0.011313s (num_starts 3; 0.0038s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.011324s (num_starts 3; 0.0038s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.01145s (num_starts 392; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011749s (num_starts 1; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011752s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.011758s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011907s (num_starts 1; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011912s (num_starts 1; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.011914s (num_starts 1; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011918s (num_starts 1; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.011923s (num_starts 1; 0.0119s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.012389s (num_starts 3; 0.0041s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-trivial.: 0.012609s (num_starts 7; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012662s (num_starts 1; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012671s (num_starts 1; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.012676s (num_starts 1; 0.0127s/start)
get_unrolled_paths_from.: 0.01275s (num_starts 25; 0.0005s/start)
solve_for_bv_points.: 0.013167s (num_starts 26; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013412s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.013416s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.013422s (num_starts 1; 0.0134s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.013451s (num_starts 26; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.013521s (num_starts 2; 0.0068s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;linear.: 0.013528s (num_starts 2; 0.0068s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.01353s (num_starts 26; 0.0005s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.01356s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.013564s (num_starts 3; 0.0045s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.013772s (num_starts 1; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014012s (num_starts 1; 0.0140s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014014s (num_starts 1; 0.0140s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.014016s (num_starts 1; 0.0140s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;-dst-edgecond-implies-src-edgecond.: 0.014019s (num_starts 1; 0.0140s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014122s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.014124s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.01413s (num_starts 1; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.014135s (num_starts 1; 0.0141s/start)
query:convert_to_z3.: 0.014264s (num_starts 211; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-trivial.: 0.014372s (num_starts 3; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;abstract-memlabel-asserts-houdini-guess.: 0.014596s (num_starts 2; 0.0073s/start)
predicate_canonicalized.: 0.014815s (num_starts 41; 0.0004s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.014905s (num_starts 25; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01542s (num_starts 1; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015426s (num_starts 1; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.015436s (num_starts 1; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.015442s (num_starts 1; 0.0154s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.015667s (num_starts 1; 0.0157s/start)
collect_aliasing_constraints_around_path_helper.: 0.015708s (num_starts 135; 0.0001s/start)
avail_exprs_create_submap.: 0.015722s (num_starts 105; 0.0001s/start)
graph_to_stream.: 0.01575s (num_starts 4; 0.0039s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.015885s (num_starts 26; 0.0006s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-trivial.: 0.015932s (num_starts 2; 0.0080s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-trivial.: 0.015939s (num_starts 2; 0.0080s/start)
collect_aliasing_constraints_around_path.: 0.016093s (num_starts 83; 0.0002s/start)
query:convert_from_z3.: 0.016552s (num_starts 211; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.01672s (num_starts 1; 0.0167s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.016725s (num_starts 1; 0.0167s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.016974s (num_starts 2; 0.0085s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);pred-type-unknown.: 0.017156s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018389s (num_starts 1; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.018398s (num_starts 1; 0.0184s/start)
check_wfconds_on_edge.L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0.018408s (num_starts 2; 0.0092s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.018607s (num_starts 91; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.018832s (num_starts 3; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018876s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.018877s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.018883s (num_starts 1; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;pred-type-unknown.: 0.01889s (num_starts 1; 0.0189s/start)
counter_example_evaluate_preds.: 0.020259s (num_starts 249; 0.0001s/start)
graph_ec_apply_trans_funs_helper.0.: 0.020269s (num_starts 204; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);linear.: 0.020925s (num_starts 4; 0.0052s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart.: 0.021321s (num_starts 2; 0.0107s/start)
graph_ec_apply_trans_funs_helper.: 0.021899s (num_starts 210; 0.0001s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.022344s (num_starts 210; 0.0001s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.022653s (num_starts 206; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.022775s (num_starts 47; 0.0005s/start)
compute_expr_eqclasses_at_pc.: 0.023202s (num_starts 2; 0.0116s/start)
computeWP_for_pred_across_ec.: 0.023287s (num_starts 206; 0.0001s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.023697s (num_starts 4; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;-dst-edgecond-implies-src-edgecond.: 0.023886s (num_starts 4; 0.0060s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.024128s (num_starts 5; 0.0048s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.024285s (num_starts 2; 0.0121s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.024445s (num_starts 70; 0.0003s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.024453s (num_starts 2; 0.0122s/start)
put_smtlib_string_in_file.: 0.025618s (num_starts 62; 0.0004s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.025787s (num_starts 35; 0.0007s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.027488s (num_starts 505; 0.0001s/start)
cg_add_node.: 0.028146s (num_starts 4; 0.0070s/start)
gen_pred_from_coeff_row.simplify.: 0.028191s (num_starts 41; 0.0007s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.028934s (num_starts 4; 0.0072s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.029196s (num_starts 585; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029528s (num_starts 2; 0.0148s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.029535s (num_starts 2; 0.0148s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.029586s (num_starts 2; 0.0148s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.029594s (num_starts 2; 0.0148s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.032895s (num_starts 4; 0.0082s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.033446s (num_starts 505; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033863s (num_starts 1; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.033864s (num_starts 1; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.033869s (num_starts 1; 0.0339s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;abstract-memlabel-asserts-houdini-guess.: 0.033873s (num_starts 1; 0.0339s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.034124s (num_starts 1; 0.0341s/start)
create_new_corr_graph_edge.new_node.: 0.035008s (num_starts 3; 0.0117s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.035103s (num_starts 2; 0.0176s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.035647s (num_starts 22; 0.0016s/start)
create_new_corr_graph_edge.: 0.035654s (num_starts 4; 0.0089s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.036099s (num_starts 32; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.036199s (num_starts 3; 0.0121s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.036396s (num_starts 32; 0.0011s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.037244s (num_starts 2; 0.0186s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.037249s (num_starts 2; 0.0186s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 0.037308s (num_starts 2; 0.0187s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d).: 0.037316s (num_starts 2; 0.0187s/start)
compute_z3_expr.: 0.037836s (num_starts 242; 0.0002s/start)
populate_loc_liveness.: 0.041337s (num_starts 3; 0.0138s/start)
query:simplify-z3.: 0.043416s (num_starts 440; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;pred-type-unknown.: 0.045012s (num_starts 6; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046407s (num_starts 3; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.046416s (num_starts 3; 0.0155s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047261s (num_starts 2; 0.0236s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.047265s (num_starts 2; 0.0236s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.047317s (num_starts 2; 0.0237s/start)
gen_pred_from_coeff_row.: 0.049233s (num_starts 41; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.049558s (num_starts 4; 0.0124s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.049852s (num_starts 6; 0.0083s/start)
compute_preds_for_bv_points.: 0.049988s (num_starts 11; 0.0045s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.050066s (num_starts 13; 0.0039s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.05181s (num_starts 37; 0.0014s/start)
parse_z3_model.: 0.052224s (num_starts 11; 0.0047s/start)
decide_hoare_triple_helper;-trivial.: 0.052677s (num_starts 17; 0.0031s/start)
guarded_predicate_set_and.: 0.052681s (num_starts 37; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1.D1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.053453s (num_starts 4; 0.0134s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%fcallStart_Lif.then%2%fcallStart.inductive-invariants.: 0.054924s (num_starts 9; 0.0061s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.055914s (num_starts 37; 0.0015s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.056924s (num_starts 1; 0.0569s/start)
tfg_relax_pointsto_vals_on_edge.: 0.057921s (num_starts 18; 0.0032s/start)
tfg_postprocess_after_pointsto_analysis.: 0.058329s (num_starts 2; 0.0292s/start)
check_wfconds_on_edge.L3%5%fcallEnd_Lif.then%2%fcallEnd=>E0%0%d_E0%0%d.: 0.058659s (num_starts 2; 0.0293s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1.D1;linear.: 0.060841s (num_starts 6; 0.0101s/start)
compute_lr_status_for_expr.: 0.069337s (num_starts 87; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069441s (num_starts 1; 0.0694s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.069444s (num_starts 78; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069444s (num_starts 1; 0.0694s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.069449s (num_starts 1; 0.0694s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2.C1;dst_edge_composition_proves_false.: 0.069453s (num_starts 1; 0.0695s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.0696s (num_starts 78; 0.0009s/start)
parse_cvc4_model.: 0.069991s (num_starts 11; 0.0064s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070278s (num_starts 1; 0.0703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070287s (num_starts 1; 0.0703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07029s (num_starts 1; 0.0703s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.0703s (num_starts 1; 0.0703s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;false-predicate.: 0.070303s (num_starts 1; 0.0703s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);false-predicate.: 0.070309s (num_starts 1; 0.0703s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076662s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076669s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076671s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.076678s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;dst_edge_composition_proves_false.: 0.076682s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.076688s (num_starts 1; 0.0767s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.078778s (num_starts 17; 0.0046s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.080435s (num_starts 44; 0.0018s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082823s (num_starts 1; 0.0828s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08283s (num_starts 1; 0.0828s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.083659s (num_starts 18; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2.B2;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.083722s (num_starts 2; 0.0419s/start)
apply_mask_and_overlay_array_constant.: 0.084783s (num_starts 44; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);pred-type-unknown.: 0.085118s (num_starts 3; 0.0284s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088563s (num_starts 2; 0.0443s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.091955s (num_starts 17; 0.0054s/start)
parse_yices_model.: 0.093205s (num_starts 11; 0.0085s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09428s (num_starts 1; 0.0943s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094286s (num_starts 1; 0.0943s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094289s (num_starts 1; 0.0943s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.094301s (num_starts 1; 0.0943s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;dst_edge_composition_proves_false.: 0.094307s (num_starts 1; 0.0943s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.094316s (num_starts 1; 0.0943s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallEnd_Lif.then%2%fcallEnd;(epsilon).: 0.094321s (num_starts 4; 0.0236s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.094578s (num_starts 2; 0.0473s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2.B2;pred-type-unknown.: 0.09549s (num_starts 3; 0.0318s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097141s (num_starts 1; 0.0971s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097149s (num_starts 1; 0.0971s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097152s (num_starts 1; 0.0972s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.097163s (num_starts 1; 0.0972s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;false-predicate.: 0.097169s (num_starts 1; 0.0972s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);false-predicate.: 0.097179s (num_starts 1; 0.0972s/start)
compute_new_lr_status_on_locs.: 0.098501s (num_starts 35; 0.0028s/start)
evaluate_function_call.: 0.099339s (num_starts 13; 0.0076s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.106024s (num_starts 2; 0.0530s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.107071s (num_starts 1; 0.1071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.107073s (num_starts 1; 0.1071s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.10708s (num_starts 1; 0.1071s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map;dst_edge_composition_proves_false.: 0.107083s (num_starts 1; 0.1071s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(epsilon).: 0.112221s (num_starts 4; 0.0281s/start)
check_wfconds_on_edge.: 0.12294s (num_starts 8; 0.0154s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.12531s (num_starts 41; 0.0031s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.126021s (num_starts 2; 0.0630s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.126025s (num_starts 2; 0.0630s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.126043s (num_starts 2; 0.0630s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;pred-type-unknown.: 0.126053s (num_starts 2; 0.0630s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.139148s (num_starts 30; 0.0046s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.139434s (num_starts 21; 0.0066s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.142723s (num_starts 3; 0.0476s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);pred-type-unknown.: 0.142806s (num_starts 3; 0.0476s/start)
corr_graph::add_edge().: 0.156156s (num_starts 4; 0.0390s/start)
ftmap_run_pointsto_analysis.: 0.15724s (num_starts 2; 0.0786s/start)
tfg_run_pointsto_analysis.: 0.157495s (num_starts 2; 0.0787s/start)
tfg_populate_structs_after_ssa_construction.: 0.164942s (num_starts 2; 0.0825s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16575s (num_starts 3; 0.0553s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.167427s (num_starts 2; 0.0837s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.16748s (num_starts 2; 0.0837s/start)
counter_example_translate_on_edge_composition_helper.: 0.171471s (num_starts 219; 0.0008s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.172366s (num_starts 2; 0.0862s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.176503s (num_starts 2; 0.0883s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.176549s (num_starts 2; 0.0883s/start)
decide_hoare_triple_helper;per-path;L3%5%fcallStart_Lif.then%2%fcallStart;(L3%5%fcallStart_Lif.then%2%fcallStart=>L3%5%fcallEnd_Lif.then%2%fcallEnd).: 0.178645s (num_starts 10; 0.0179s/start)
check_equivalence_proof.: 0.17993s (num_starts 1; 0.1799s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.192909s (num_starts 4; 0.0482s/start)
corr_graph_add_correlation.: 0.193056s (num_starts 4; 0.0483s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.199758s (num_starts 4; 0.0499s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.: 0.209202s (num_starts 1; 0.2092s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.21069s (num_starts 5; 0.0421s/start)
read_counter_examples_from_channel.: 0.217317s (num_starts 11; 0.0198s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.21844s (num_starts 23; 0.0095s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.219438s (num_starts 7; 0.0313s/start)
check_preds_on_edge_compositions.: 0.236479s (num_starts 12; 0.0197s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.254159s (num_starts 1; 0.2542s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.273535s (num_starts 243; 0.0011s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.274559s (num_starts 7; 0.0392s/start)
ce_reconcile_sorts_and_values.: 0.275624s (num_starts 33; 0.0084s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.285487s (num_starts 12; 0.0238s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.308982s (num_starts 5; 0.0618s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.309007s (num_starts 5; 0.0618s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;opt_map.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.318011s (num_starts 6; 0.0530s/start)
decide_hoare_triple_helper;per-graph-per-query-type;opt_map.A2;linear.: 0.318031s (num_starts 6; 0.0530s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.347457s (num_starts 4; 0.0869s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.347543s (num_starts 4; 0.0869s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.355331s (num_starts 8; 0.0444s/start)
decide_hoare_triple.: 0.366698s (num_starts 7; 0.0524s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.368027s (num_starts 9; 0.0409s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);linear.: 0.37156s (num_starts 10; 0.0372s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.372093s (num_starts 1; 0.3721s/start)
dst_edge_composition_proves_false.: 0.38517s (num_starts 4; 0.0963s/start)
decide_hoare_triple_helper;per-query-type;linear.: 0.392446s (num_starts 14; 0.0280s/start)
get_next_dst_edge_composition_to_correlate.: 0.393889s (num_starts 5; 0.0788s/start)
query:smt.: 0.443869s (num_starts 31; 0.0143s/start)
spawn_smt_query.: 0.661599s (num_starts 31; 0.0213s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.671915s (num_starts 16; 0.0420s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%fcallStart_Lif.then%2%fcallStart).: 0.688529s (num_starts 18; 0.0383s/start)
update_invariant_state_for_edges.: 1.01129s (num_starts 4; 0.2528s/start)
cg_check_new_cg_ec.: 1.01722s (num_starts 4; 0.2543s/start)
correl_entry_apply.: 1.0173s (num_starts 4; 0.2543s/start)
solver_provable.: 1.04288s (num_starts 37; 0.0282s/start)
expr_is_provable.: 1.05336s (num_starts 37; 0.0285s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 1.05409s (num_starts 37; 0.0285s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 1.05639s (num_starts 37; 0.0286s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 1.05915s (num_starts 37; 0.0286s/start)
solver_satisfiable-cache-miss.: 1.06343s (num_starts 31; 0.0343s/start)
solver_satisfiable.: 1.0637s (num_starts 38; 0.0280s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 1.11518s (num_starts 37; 0.0301s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 1.11948s (num_starts 37; 0.0303s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 1.12027s (num_starts 37; 0.0303s/start)
is_expr_equal_using_lhs_set_and_precond.: 1.1724s (num_starts 37; 0.0317s/start)
prove.: 1.17266s (num_starts 37; 0.0317s/start)
prove_spawn_and_join_helper.: 1.17286s (num_starts 37; 0.0317s/start)
prove_spawn_and_join.: 1.27076s (num_starts 37; 0.0343s/start)
prove_wrapper.proof_query_not_trivial.: 1.27496s (num_starts 37; 0.0345s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.28147s (num_starts 30; 0.0427s/start)
prove_wrapper.: 1.28786s (num_starts 47; 0.0274s/start)
decide_hoare_triple_check_ub.: 1.31364s (num_starts 47; 0.0279s/start)
decide_hoare_triple_helper.: 1.33606s (num_starts 47; 0.0284s/start)
expandProductCFG.: 1.41608s (num_starts 5; 0.2832s/start)
decide_hoare_triple_with_alias_cons.: 1.47593s (num_starts 47; 0.0314s/start)
bestFirstSearch.: 1.65735s (num_starts 1; 1.6574s/start)
Time taken for equivalence check.: 1.84095s (num_starts 1; 1.8410s/start)

counters:
# of assume sat failures for cg-edge-assume-unknown.: 8
# of assume sat failures for undef-behaviour-align-assume.edge.L0%0%d=>Lentry%2%d.: 6
# of paths enumerated.: 8
# of paths expanded.: 4
# of queries to linear solver.: 26
# of smt-solver-queries.: 31
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
L0%0%d=>Lif.then%2%fcallStart-src_ecs.: 2
L0%0%d=>Lif.then%2%fcallStart-src_to_pcs.: 2
Lif.then%2%fcallEnd=>E0%0%d-src_ecs.: 1
Lif.then%2%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_ecs.: 2
Lif.then%2%fcallStart=>Lif.then%2%fcallEnd-src_to_pcs.: 2
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 1
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%fcallStart_Lif.then%2%fcallStart.prove_queries.: 2
smt-queries-cache-hits.: 7
smt-queries-cvc4-sat.: 11
smt-queries-yices-sat.: 11
smt-queries-z3-sat.: 11
total-correlation-possibilities.: 7
total-correlation-possibilities-mod-lsprels.: 7
total-correlations-explored.: 5

flags:
dst-aloc.: 0
dst-edges.: 7
dst-nodes.: 7
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 0
final-CG-counterexamples-generated-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 3
final-CG-counterexamples-total-at-L3%5%fcallEnd_Lif.then%2%fcallEnd.: 8
final-CG-counterexamples-total-at-L3%5%fcallStart_Lif.then%2%fcallStart.: 7
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 4
final-CG-edges.: 4
final-CG-nodes.: 4
final-CG-num-invariants.: 11
final-CG-super-edges.: 0
src-edges.: 8
src-nodes.: 8
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 1.21
final-CG-time-to-total-time-ratio.: 0.73
query-time-to-total-time-ratio.: 0.24

Context stats:
exprs: count: 142238
sorts: count: 150
num_proof_queries: 37
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3367
	        hit ratio:	0.949807
m_simplify_solver:
	----------- total:	743
	        hit ratio:	0.69179
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	42
	        hit ratio:	0.904762
m_z3_solver_substitution:
	----------- total:	229
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	229
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	2
	        hit ratio:	0.5
m_expr_size:
	----------- total:	1663
	        hit ratio:	0.831028
m_contains_only_constants_or_sp_versions:
	----------- total:	4
	        hit ratio:	0.75
m_expr_evaluates_to_constant_visitor:
	----------- total:	4299
	        hit ratio:	0.614561
m_sort_dfa_canonicalize:
	----------- total:	21311
	        hit ratio:	0.999343
m_expr_convert_to_iexpr:
	----------- total:	205
	        hit ratio:	0.643902

z3_solver expr_query_cache entry size: 31
	----------- total:	38
	             hits:	7
	        hit ratio:	0.184211
histogram (time taken by solver in ms):
[ 3.1800,  4.1634) (avg.  3.7572)        : 5
[ 4.1634,  5.4510) (avg.  4.8847)        : 9
[ 5.4510,  7.1368) (avg.  6.0182)        : 5
[ 7.1368,  9.3440) (avg.  7.3770)        : 1
[ 9.3440, 12.2337) (avg.  0.0000)        : 0
[12.2337, 16.0171) (avg. 14.6940)        : 1
[16.0171, 20.9706) (avg.  0.0000)        : 0
[20.9706, 27.4560) (avg. 26.7885)        : 2
[27.4560, 35.9470) (avg. 30.5063)        : 6
[35.9470, 47.0640) (avg. 46.0185)        : 2
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40,  51) (avg.  40)                    : 1
[ 51,  62) (avg.   0)                    : 0
[ 62,  73) (avg.   0)                    : 0
[ 73,  84) (avg.   0)                    : 0
[ 84,  94) (avg.   0)                    : 0
[ 94, 105) (avg. 104)                    : 3
[105, 116) (avg. 113)                    : 7
[116, 127) (avg. 122)                    : 16
[127, 138) (avg. 131)                    : 3
[138, 148) (avg. 138)                    : 1
Top 10 highest time taking queries:
1. [0.046s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.6.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.046s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-10-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.034s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0
4. [0.032s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.E0%0%d.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
5. [0.031s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_L0%0%d.dstToPC.Lif.then%2%fcallStart.from_pcL0%0%d_L0%0%d.cond_apply_se.0
6. [0.029s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.028s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallEnd_Lif.then%2%fcallEnd.dstToPC.E0%0%d.from_pcL3%5%fcallEnd_Lif.then.0
8. [0.028s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.027s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%fcallStart_Lif.then%2%fcallStart.dstToPC.Lif.then%2%fcallEnd.from_pcL3%5%.0
10. [0.026s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.false-predicate.from_pcL3%5%fcallStart_Lif.then%2%fcallStart.cond_apply_set_elem0_of_1.0

<MSG>0:21 : Successfully computed equivalence for function: opt_map.</MSG>
<MSG>0:21 : Computing equivalence for function: update_val...</MSG>
<MSG>0:21 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:21 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:21 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:21 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG update_val (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : product-TFG update_val: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Considering 1 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG update_val: Found 1 correlations for L0%0%d=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:21 : product-TFG update_val created 1 possibilities in group update_val.A...</MSG>
<MSG>0:21 : Chose (for CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:21 : Finished adding lsprel-assumes for allocation to the product-TFG update_val.A1...</MSG>
<MSG>0:21 : Finished adding lsprel-assumes for deallocation to the product-TFG update_val.A1...</MSG>
<MSG>0:21 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:21 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>0:21 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>0:21 : Adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:21 : update_val.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Adding edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:21 : update_val.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:21 : update_val.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:21 : update_val.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d</MSG>
<MSG>0:21 : update_val.A1: Added the 3 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:21 : update_val.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:21 : update_val.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:21 : update_val.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : Done adding new edge to the product-TFG update_val.A1 for fromPC L0%0%d_L0%0%d and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d...</MSG>
<MSG>0:21 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : Added correlation to the product-TFG update_val.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:21 : Chose (after CE propagation) product-TFG update_val.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : update_val.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:21 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>E0%0%d_E0%0%d...</MSG>
<MSG>0:21 : update_val.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:21 : update_val.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:21 : update_val.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:21 : update_val.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4869:
update_val.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:21 : update_val.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:21 : update_val.A1 (d:0, s:0, sp: 0): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:21 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:21 : Checking equivalence proof...</MSG>
<MSG>0:21 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[1]: L0%0%d_L0%0%d=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A L0%0%d => A E0%0%d at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function update_val. 0.18s, query:smt.: 0.045371s (num_starts 3; 0.0151s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 0.097347s (num_starts 4; 0.0243s/start)ftmap_run_pointsto_analysis.: 0.016735s (num_starts 2; 0.0084s/start)

Printing statistics:

timers:
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 0s (num_starts 1; 0.0000s/start)
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 1e-06s (num_starts 1; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 1e-06s (num_starts 1; 0.0000s/start)
prove_trivial.: 1e-06s (num_starts 1; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 4; 0.0000s/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
ce_perform_memory_fuzzing.: 4e-06s (num_starts 3; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 4e-06s (num_starts 1; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 5e-06s (num_starts 3; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5e-06s (num_starts 4; 0.0000s/start)
sp_version_relations_val_t::meet.: 5e-06s (num_starts 9; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 6e-06s (num_starts 1; 0.0000s/start)
collect_dst_to_src_submap_preds.: 6e-06s (num_starts 4; 0.0000s/start)
proof_query_is_trivial_helper.: 1e-05s (num_starts 4; 0.0000s/start)
determinize_value_expr_map.: 1.2e-05s (num_starts 3; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 1.2e-05s (num_starts 3; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 1.2e-05s (num_starts 3; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 1.5e-05s (num_starts 3; 0.0000s/start)
expr_is_hidden_reg.: 1.6e-05s (num_starts 13; 0.0000s/start)
get_intersected_lr_status.: 1.6e-05s (num_starts 2; 0.0000s/start)
lr_status_meet.: 1.7e-05s (num_starts 21; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 1.7e-05s (num_starts 1; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 2.1e-05s (num_starts 7; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 2.1e-05s (num_starts 13; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 2.2e-05s (num_starts 1; 0.0000s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 2.2e-05s (num_starts 3; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 2.3e-05s (num_starts 1; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 2.4e-05s (num_starts 2; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 2.6e-05s (num_starts 1; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 2.6e-05s (num_starts 1; 0.0000s/start)
graph_with_guessing_sync_preds.: 2.7e-05s (num_starts 4; 0.0000s/start)
def_analysis::xfer_and_meet.: 3.1e-05s (num_starts 3; 0.0000s/start)
expr_is_callee_save_const.: 3.1e-05s (num_starts 25; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 3.5e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 3.6e-05s (num_starts 1; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 3.6e-05s (num_starts 13; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 3.8e-05s (num_starts 2; 0.0000s/start)
proof_query_is_trivial.: 4.2e-05s (num_starts 4; 0.0000s/start)
graph_locs_add_all_exvregs.: 4.3e-05s (num_starts 2; 0.0000s/start)
graph_locs_add_all_indvars.: 4.3e-05s (num_starts 2; 0.0000s/start)
create_closure_matrix.: 5.2e-05s (num_starts 6; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 5.7e-05s (num_starts 7; 0.0000s/start)
graph_locs_add_local_vars_for_edge.: 6.9e-05s (num_starts 2; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 7e-05s (num_starts 2; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 7.3e-05s (num_starts 1; 0.0001s/start)
graph_locs_add_all_local_vars.: 7.5e-05s (num_starts 2; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 7.8e-05s (num_starts 18; 0.0000s/start)
set_result_and_counter_example.: 7.9e-05s (num_starts 3; 0.0000s/start)
pth_collect_preds_using_atom_func.: 8e-05s (num_starts 5; 0.0000s/start)
removeMostPromising.: 8.2e-05s (num_starts 4; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 8.2e-05s (num_starts 4; 0.0000s/start)
segment_memory_and_perform_commonMEM_optimization.: 8.4e-05s (num_starts 3; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 8.5e-05s (num_starts 2; 0.0000s/start)
get_sprel_map_pair_at_pc.: 9.1e-05s (num_starts 3; 0.0000s/start)
tfg_edge_composition_get_assumes.: 9.2e-05s (num_starts 5; 0.0000s/start)
tfg::collect_assumes_around_edge.: 9.9e-05s (num_starts 5; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000101s (num_starts 4; 0.0000s/start)
collect_inductive_preds_around_path.: 0.000107s (num_starts 4; 0.0000s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.00011s (num_starts 2; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000111s (num_starts 11; 0.0000s/start)
compute_sprel_relations.: 0.000114s (num_starts 2; 0.0001s/start)
collect_assumes_around_edge.: 0.00012s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000123s (num_starts 2; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.000125s (num_starts 51; 0.0000s/start)
populate_locid2expr_map.: 0.000132s (num_starts 2; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.000134s (num_starts 2; 0.0001s/start)
graph_locs_add_all_specvars.: 0.000142s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000143s (num_starts 1; 0.0001s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000146s (num_starts 1; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.000148s (num_starts 7; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.000151s (num_starts 3; 0.0001s/start)
graph_locs_add_all_llvmvars.: 0.000161s (num_starts 2; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000162s (num_starts 1; 0.0002s/start)
check_node_stability_after_CE_addition.: 0.000173s (num_starts 6; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000174s (num_starts 1; 0.0002s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000177s (num_starts 2; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.00018s (num_starts 4; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.000184s (num_starts 1; 0.0002s/start)
populate_branch_affecting_locs.: 0.000186s (num_starts 3; 0.0001s/start)
identify_address_taken_local_variables.: 0.00019s (num_starts 1; 0.0002s/start)
populate_simplified_to_state.: 0.000192s (num_starts 3; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.000203s (num_starts 16; 0.0000s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.000208s (num_starts 3; 0.0001s/start)
counter_example_falsifies_preds.: 0.000218s (num_starts 3; 0.0001s/start)
compute_vars_reaching_definitions.: 0.000225s (num_starts 2; 0.0001s/start)
expr_represents_llvm_undef.: 0.000236s (num_starts 29; 0.0000s/start)
populate_transitive_closure.: 0.000249s (num_starts 11; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.000251s (num_starts 6; 0.0000s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.000257s (num_starts 3; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.000273s (num_starts 3; 0.0001s/start)
graph_visit_exprs_and_keys.: 0.000285s (num_starts 2; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.000289s (num_starts 3; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.000295s (num_starts 21; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.000296s (num_starts 11; 0.0000s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.000303s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000308s (num_starts 4; 0.0001s/start)
graph_visit_exprs.: 0.000319s (num_starts 3; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.000325s (num_starts 9; 0.0000s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.00035s (num_starts 4; 0.0001s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000358s (num_starts 1; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.000361s (num_starts 4; 0.0001s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.000362s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000373s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.000373s (num_starts 1; 0.0004s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000373s (num_starts 3; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000376s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000376s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000378s (num_starts 1; 0.0004s/start)
find_dominators.: 0.000378s (num_starts 19; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00038s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;outgoing_edges_cover_all_possibilities..: 0.000383s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.000387s (num_starts 1; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.00039s (num_starts 1; 0.0004s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.00039s (num_starts 6; 0.0001s/start)
populate_simplified_assets.: 0.000391s (num_starts 6; 0.0001s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.000395s (num_starts 6; 0.0001s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.0004s (num_starts 5; 0.0001s/start)
tfg::populate_loc_definedness.: 0.000408s (num_starts 3; 0.0001s/start)
graph_identify_back_edges.: 0.000423s (num_starts 15; 0.0000s/start)
get_next_potential_correlations.: 0.000436s (num_starts 1; 0.0004s/start)
compute_ssa_vars_renaming_map.: 0.000448s (num_starts 2; 0.0002s/start)
counter_example_satisfies_preds.: 0.000453s (num_starts 18; 0.0000s/start)
graph_identify_natural_loops.: 0.000454s (num_starts 15; 0.0000s/start)
lhs_set_sort.: 0.000458s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.000489s (num_starts 5; 0.0001s/start)
collect_aliasing_constraints_around_path_helper.: 0.000508s (num_starts 22; 0.0000s/start)
populate_locs_potentially_modified_on_edge.: 0.000522s (num_starts 3; 0.0002s/start)
collect_aliasing_constraints_around_path.: 0.000563s (num_starts 14; 0.0000s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.000574s (num_starts 3; 0.0002s/start)
create_new_corr_graph_edge.new_node.: 0.000613s (num_starts 1; 0.0006s/start)
graph_ec_apply_trans_funs_helper.0.: 0.000614s (num_starts 12; 0.0001s/start)
collect_assumes_around_path_helper.: 0.000619s (num_starts 13; 0.0000s/start)
counter_example_evaluate_preds.: 0.000627s (num_starts 21; 0.0000s/start)
graph_with_paths::collect_assumes_around_path.: 0.000652s (num_starts 13; 0.0001s/start)
graph_ec_apply_trans_funs_helper.: 0.000655s (num_starts 12; 0.0001s/start)
cg_add_node.: 0.00066s (num_starts 2; 0.0003s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.000681s (num_starts 12; 0.0001s/start)
expr_linear_relation_holds::visit.var.: 0.000682s (num_starts 29; 0.0000s/start)
create_new_corr_graph_edge.: 0.00069s (num_starts 1; 0.0007s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.000712s (num_starts 12; 0.0001s/start)
computeWP_for_pred_across_ec.: 0.000748s (num_starts 12; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.000794s (num_starts 4; 0.0002s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.000853s (num_starts 33; 0.0000s/start)
create_sp_version_relations_lattice_at_pc.: 0.000855s (num_starts 6; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.000899s (num_starts 4; 0.0002s/start)
get_unrolled_paths_from.: 0.000917s (num_starts 6; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.000924s (num_starts 3; 0.0003s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.000987s (num_starts 117; 0.0000s/start)
compute_regions.: 0.001018s (num_starts 15; 0.0001s/start)
edge_composition_apply_trans_funs_on_pred.: 0.001069s (num_starts 4; 0.0003s/start)
avail_exprs_create_submap.: 0.001087s (num_starts 12; 0.0001s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.00113s (num_starts 6; 0.0002s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.001164s (num_starts 6; 0.0002s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.001174s (num_starts 6; 0.0002s/start)
put_smtlib_string_in_file.: 0.001259s (num_starts 6; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.00132s (num_starts 4; 0.0003s/start)
do_ssa_transformation.: 0.001367s (num_starts 2; 0.0007s/start)
compute_lr_status_for_expr.: 0.001873s (num_starts 25; 0.0001s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.001911s (num_starts 1; 0.0019s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.001919s (num_starts 21; 0.0001s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.001967s (num_starts 21; 0.0001s/start)
query:convert_to_z3.: 0.002741s (num_starts 39; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.002833s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-trivial.: 0.002897s (num_starts 1; 0.0029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002899s (num_starts 1; 0.0029s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.002901s (num_starts 1; 0.0029s/start)
compute_new_lr_status_on_locs.: 0.002903s (num_starts 4; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-trivial.: 0.002903s (num_starts 1; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.002907s (num_starts 1; 0.0029s/start)
compute_z3_expr.: 0.003095s (num_starts 42; 0.0001s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.003316s (num_starts 6; 0.0006s/start)
decide_hoare_triple_helper;-trivial.: 0.003327s (num_starts 2; 0.0017s/start)
graph_to_stream.: 0.003969s (num_starts 4; 0.0010s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.004166s (num_starts 3; 0.0014s/start)
query:convert_from_z3.: 0.004226s (num_starts 39; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.004269s (num_starts 2; 0.0021s/start)
apply_mask_and_overlay_array_constant.: 0.004378s (num_starts 3; 0.0015s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.004392s (num_starts 124; 0.0000s/start)
check_equivalence_proof.: 0.004404s (num_starts 1; 0.0044s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.004589s (num_starts 117; 0.0000s/start)
counter_example_translate_on_edge_composition_helper.: 0.004648s (num_starts 21; 0.0002s/start)
parse_yices_model.: 0.005356s (num_starts 2; 0.0027s/start)
parse_z3_model.: 0.005507s (num_starts 2; 0.0028s/start)
populate_loc_liveness.: 0.005803s (num_starts 3; 0.0019s/start)
parse_cvc4_model.: 0.005809s (num_starts 2; 0.0029s/start)
tfg_relax_pointsto_vals_on_edge.: 0.005884s (num_starts 2; 0.0029s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.005924s (num_starts 117; 0.0001s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.006091s (num_starts 2; 0.0030s/start)
corr_graph::add_edge().: 0.006462s (num_starts 1; 0.0065s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.007353s (num_starts 1; 0.0074s/start)
corr_graph_add_correlation.: 0.007386s (num_starts 1; 0.0074s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.007431s (num_starts 1; 0.0074s/start)
tfg_postprocess_after_pointsto_analysis.: 0.007948s (num_starts 2; 0.0040s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.007985s (num_starts 1; 0.0080s/start)
query:simplify-z3.: 0.010718s (num_starts 78; 0.0001s/start)
guarded_predicate_set_and.: 0.012854s (num_starts 3; 0.0043s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.016025s (num_starts 3; 0.0053s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.016126s (num_starts 3; 0.0054s/start)
ftmap_run_pointsto_analysis.: 0.016735s (num_starts 2; 0.0084s/start)
tfg_run_pointsto_analysis.: 0.016892s (num_starts 2; 0.0084s/start)
read_counter_examples_from_channel.: 0.016975s (num_starts 2; 0.0085s/start)
tfg_populate_structs_after_ssa_construction.: 0.018236s (num_starts 2; 0.0091s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.021008s (num_starts 2; 0.0105s/start)
ce_reconcile_sorts_and_values.: 0.021588s (num_starts 6; 0.0036s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021966s (num_starts 1; 0.0220s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021968s (num_starts 1; 0.0220s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021971s (num_starts 1; 0.0220s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021973s (num_starts 1; 0.0220s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.021974s (num_starts 1; 0.0220s/start)
update_invariant_state_for_edges.: 0.024771s (num_starts 1; 0.0248s/start)
cg_check_new_cg_ec.: 0.024831s (num_starts 1; 0.0248s/start)
correl_entry_apply.: 0.024851s (num_starts 1; 0.0249s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.024892s (num_starts 2; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val.A1;pred-type-unknown.: 0.024897s (num_starts 2; 0.0124s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 0.024902s (num_starts 2; 0.0125s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d);pred-type-unknown.: 0.024907s (num_starts 2; 0.0125s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>E0%0%d_E0%0%d).: 0.024912s (num_starts 2; 0.0125s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.025063s (num_starts 2; 0.0125s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>E0%0%d_E0%0%d.: 0.025849s (num_starts 2; 0.0129s/start)
check_wfconds_on_edge.: 0.025865s (num_starts 2; 0.0129s/start)
check_preds_on_edge_compositions.: 0.025973s (num_starts 3; 0.0087s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.034549s (num_starts 36; 0.0010s/start)
query:smt.: 0.045371s (num_starts 3; 0.0151s/start)
solver_provable.: 0.059698s (num_starts 3; 0.0199s/start)
expr_is_provable.: 0.060225s (num_starts 3; 0.0201s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 0.060279s (num_starts 3; 0.0201s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 0.060449s (num_starts 3; 0.0201s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 0.060546s (num_starts 3; 0.0202s/start)
spawn_smt_query.: 0.06241s (num_starts 3; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07185s (num_starts 1; 0.0718s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07185s (num_starts 1; 0.0718s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07185s (num_starts 1; 0.0718s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07185s (num_starts 1; 0.0718s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071851s (num_starts 1; 0.0719s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;update_val;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.071856s (num_starts 1; 0.0719s/start)
decide_hoare_triple_helper;per-graph-per-query-type;update_val;dst_edge_composition_proves_false.: 0.07186s (num_starts 1; 0.0719s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.071865s (num_starts 1; 0.0719s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.071867s (num_starts 1; 0.0719s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.072267s (num_starts 2; 0.0361s/start)
decide_hoare_triple.: 0.072911s (num_starts 2; 0.0365s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 0.073633s (num_starts 3; 0.0245s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 0.073878s (num_starts 3; 0.0246s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 0.073932s (num_starts 3; 0.0246s/start)
dst_edge_composition_proves_false.: 0.076662s (num_starts 1; 0.0767s/start)
is_expr_equal_using_lhs_set_and_precond.: 0.077037s (num_starts 3; 0.0257s/start)
prove.: 0.077057s (num_starts 3; 0.0257s/start)
prove_spawn_and_join_helper.: 0.077075s (num_starts 3; 0.0257s/start)
get_next_dst_edge_composition_to_correlate.: 0.077303s (num_starts 2; 0.0387s/start)
solver_satisfiable-cache-miss.: 0.089706s (num_starts 3; 0.0299s/start)
solver_satisfiable.: 0.089736s (num_starts 4; 0.0224s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.093903s (num_starts 2; 0.0470s/start)
prove_spawn_and_join.: 0.094019s (num_starts 3; 0.0313s/start)
prove_wrapper.proof_query_not_trivial.: 0.094306s (num_starts 3; 0.0314s/start)
prove_wrapper.: 0.094998s (num_starts 4; 0.0237s/start)
decide_hoare_triple_check_ub.: 0.09631s (num_starts 4; 0.0241s/start)
decide_hoare_triple_helper.: 0.097347s (num_starts 4; 0.0243s/start)
decide_hoare_triple_with_alias_cons.: 0.097679s (num_starts 4; 0.0244s/start)
expandProductCFG.: 0.102682s (num_starts 2; 0.0513s/start)
bestFirstSearch.: 0.143808s (num_starts 1; 0.1438s/start)
Time taken for equivalence check.: 0.148555s (num_starts 1; 0.1486s/start)

counters:
# of paths enumerated.: 2
# of paths expanded.: 1
# of smt-solver-queries.: 3
L0%0%d=>E0%0%d-src_ecs.: 1
L0%0%d=>E0%0%d-src_to_pcs.: 1
smt-queries-cache-hits.: 1
smt-queries-cvc4-sat.: 2
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 2
total-correlation-possibilities.: 2
total-correlation-possibilities-mod-lsprels.: 2
total-correlations-explored.: 2

flags:
dst-aloc.: 0
dst-edges.: 1
dst-nodes.: 2
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 1
final-CG-edges.: 1
final-CG-nodes.: 2
final-CG-num-invariants.: 0
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 0.03
final-CG-time-to-total-time-ratio.: 0.22
query-time-to-total-time-ratio.: 0.32

Context stats:
exprs: count: 140995
sorts: count: 149
num_proof_queries: 40
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	417
	        hit ratio:	0.928058
m_simplify_solver:
	----------- total:	114
	        hit ratio:	0.657895
m_z3_solver_substitution:
	----------- total:	39
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	39
	        hit ratio:	0
m_expr_size:
	----------- total:	289
	        hit ratio:	0.785467
m_expr_evaluates_to_constant_visitor:
	----------- total:	434
	        hit ratio:	0.550691
m_sort_dfa_canonicalize:
	----------- total:	2719
	        hit ratio:	0.997425
m_expr_convert_to_iexpr:
	----------- total:	3
	        hit ratio:	0

z3_solver expr_query_cache entry size: 3
	----------- total:	42
	             hits:	1
	        hit ratio:	0.0238095
histogram (time taken by solver in ms):
[ 3.8400,  4.6374) (avg.  3.8400)        : 1
[ 4.6374,  5.6003) (avg.  0.0000)        : 0
[ 5.6003,  6.7632) (avg.  0.0000)        : 0
[ 6.7632,  8.1676) (avg.  0.0000)        : 0
[ 8.1676,  9.8636) (avg.  0.0000)        : 0
[ 9.8636, 11.9117) (avg.  0.0000)        : 0
[11.9117, 14.3852) (avg.  0.0000)        : 0
[14.3852, 17.3723) (avg. 17.1540)        : 1
[17.3723, 20.9796) (avg.  0.0000)        : 0
[20.9796, 25.3360) (avg. 24.3360)        : 1
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[40, 46) (avg. 40)                       : 1
[46, 51) (avg.  0)                       : 0
[51, 56) (avg.  0)                       : 0
[56, 61) (avg.  0)                       : 0
[61, 66) (avg.  0)                       : 0
[66, 71) (avg.  0)                       : 0
[71, 76) (avg. 71)                       : 1
[76, 81) (avg.  0)                       : 0
[81, 86) (avg. 81)                       : 1
[86, 91) (avg.  0)                       : 0

<MSG>0:21 : Successfully computed equivalence for function: update_val.</MSG>

tfg_edge_expr_wp_fn: num_starts 54 time spent: 0:0:0 [0.001134s total; 0.000021 per start]
tfg_computeWP: num_starts 232 time spent: 0:0:0 [0.016829s total; 0.000073 per start]
tfg_get_simplified_to_state_for_edge: num_starts 802 time spent: 0:0:0 [0.001399s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 900 time spent: 0:0:0 [0.001524s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 525 time spent: 0:0:0 [0.000861s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 38 time spent: 0:0:0 [0.102744s total; 0.002704 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 10 time spent: 0:0:0 [0.154186s total; 0.015419 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 170 time spent: 0:0:0 [0.159385s total; 0.000938 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 42 time spent: 0:0:0 [0.022099s total; 0.000526 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 161 time spent: 0:0:0 [0.142730s total; 0.000887 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 702 time spent: 0:0:0 [0.150646s total; 0.000215 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 167 time spent: 0:0:0 [0.008912s total; 0.000053 per start]
tfg_graph_get_vars_written_on_edge: num_starts 161 time spent: 0:0:0 [0.003566s total; 0.000022 per start]
cg_with_rank_add_CE_at_pc: num_starts 47 time spent: 0:0:0 [0.100796s total; 0.002145 per start]
graph_with_ce_add_CE_at_pc: num_starts 24 time spent: 0:0:0 [0.000447s total; 0.000019 per start]
graph_with_guessing_add_CE_at_pc: num_starts 47 time spent: 0:0:0 [0.100689s total; 0.002142 per start]
point_set_add_point_using_CE: num_starts 65 time spent: 0:0:0 [0.026510s total; 0.000408 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 65 time spent: 0:0:0 [0.026776s total; 0.000412 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.097462s total; 0.003046 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 32 time spent: 0:0:0 [0.070129s total; 0.002192 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1440 time spent: 0:0:0 [0.021637s total; 0.000015 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 157 time spent: 0:0:0 [0.017516s total; 0.000112 per start]
expr_simplify_solver: num_starts 908 time spent: 0:0:0 [0.093677s total; 0.000103 per start]
expr_simplify_syntactic: num_starts 908 time spent: 0:0:0 [0.223323s total; 0.000246 per start]
expr_simplify_select_on_store: num_starts 40 time spent: 0:0:0 [0.126817s total; 0.003170 per start]
expr_simplify_store_on_store: num_starts 15 time spent: 0:0:0 [0.001337s total; 0.000089 per start]
expr_simplify_using_lhs_set_helper: num_starts 322 time spent: 0:0:0 [0.346249s total; 0.001075 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 2040 time spent: 0:0:0 [0.344008s total; 0.000169 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 1205 time spent: 0:0:0 [0.005450s total; 0.000005 per start]
expr_simplify_eq: num_starts 245 time spent: 0:0:0 [0.003145s total; 0.000013 per start]
expr_simplify_or: num_starts 18 time spent: 0:0:0 [0.000024s total; 0.000001 per start]
expr_simplify_and: num_starts 74 time spent: 0:0:0 [0.000422s total; 0.000006 per start]
expr_simplify_not: num_starts 25 time spent: 0:0:0 [0.000103s total; 0.000004 per start]
expr_simplify_implies: num_starts 13 time spent: 0:0:0 [0.000134s total; 0.000010 per start]
expr_simplify_ite: num_starts 20 time spent: 0:0:0 [0.001172s total; 0.000059 per start]
canonicalize_expr_tree: num_starts 298 time spent: 0:0:0 [0.010778s total; 0.000036 per start]
expr_simplify_memalloc_using_memlabel: num_starts 25 time spent: 0:0:0 [0.000078s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 43 time spent: 0:0:0 [0.125746s total; 0.002924 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1 time spent: 0:0:0 [0.000077s total; 0.000077 per start]
memlabels_are_independent: num_starts 13 time spent: 0:0:0 [0.000068s total; 0.000005 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000009s total; 0.000009 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
is_overlapping_atoms_pair_syntactic: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
is_overlapping_considering_type_constraints: num_starts 1 time spent: 0:0:0 [0.000004s total; 0.000004 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1 time spent: 0:0:0 [0.000003s total; 0.000003 per start]
is_gep_inbounds_offset: num_starts 1 time spent: 0:0:0 [0.000001s total; 0.000001 per start]
get_arithmetic_addsub_atoms: num_starts 1511 time spent: 0:0:0 [0.001238s total; 0.000001 per start]
expr_is_variable_start: num_starts 1 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 365 time spent: 0:0:0 [0.005120s total; 0.000014 per start]
expr_is_consts_struct_constant: num_starts 383 time spent: 0:0:0 [0.000368s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3985 time spent: 0:0:0 [0.317939s total; 0.000080 per start]
expr_do_simplify_helper_cache: num_starts 3985 time spent: 0:0:0 [0.003726s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2 time spent: 0:0:0 [0.000000s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2 time spent: 0:0:0 [0.000013s total; 0.000006 per start]
evaluate_expr_and_check_bounds: num_starts 511 time spent: 0:0:0 [0.168002s total; 0.000329 per start]
array_constant_equals: num_starts 5310 time spent: 0:0:0 [0.007772s total; 0.000001 per start]
sort_dfa_canonical: num_starts 165658 time spent: 0:0:1 [1.102063s total; 0.000007 per start]
expr_convert_to_iexpr: num_starts 213 time spent: 0:0:0 [0.060123s total; 0.000282 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.098007s total; 0.005158 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.082993s total; 0.004368 per start]
get_sprel_map_from_avail_exprs: num_starts 36 time spent: 0:0:0 [0.001870s total; 0.000052 per start]
update_memlabels_for_memslot_locs: num_starts 13 time spent: 0:0:0 [0.000057s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 78 time spent: 0:0:0 [0.010498s total; 0.000135 per start]
compute_simplified_loc_exprs_for_edge: num_starts 210 time spent: 0:0:0 [0.094545s total; 0.000450 per start]
compute_locs_definitely_written_on_edge: num_starts 78 time spent: 0:0:0 [0.000145s total; 0.000002 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 40 time spent: 0:0:0 [0.023463s total; 0.000587 per start]
edge_update_memlabel_map_for_mlvars: num_starts 39 time spent: 0:0:0 [0.001512s total; 0.000039 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.015183s total; 0.000799 per start]
expand_locset_to_include_slots_for_memmask: num_starts 54 time spent: 0:0:0 [0.000246s total; 0.000005 per start]
total: num_starts 1 time spent: 0:0:29 [29.003984s total; 29.003984 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 2.27s.
ftmap_run_pointsto_analysis.: 0.016735s (num_starts 2; 0.0084s/start)s.
EQ Time after pointsto analysis: 2.25516s.
EQ Time after pointsto analysis and smt_query: 2.16016s.
EQ Time after pointsto analysis and smt_query and bv-solve: 2.16016s.
Equivalence proof found. The programs are equivalent.
