argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind4.proof
argv[9] = --spec-iospecs=ind4.iospecs
argv[10] = ind4.spec
argv[11] = ind4.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.1506577
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind4.c
argv[10] = -o
argv[11] = par_tmpdir/ind4.c.bc.tmp
argv[12] = -m32

argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind4.spec.etfg
argv[11] = par_tmpdir/ind4.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind4.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function foo</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 108 time spent: 0:0:0 [0.000192s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 105 time spent: 0:0:0 [0.000191s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 971 time spent: 0:0:0 [0.006366s total; 0.000007 per start]
expr_simplify_solver: num_starts 79 time spent: 0:0:0 [0.008838s total; 0.000112 per start]
expr_simplify_syntactic: num_starts 79 time spent: 0:0:0 [0.023918s total; 0.000303 per start]
expr_simplify_select_on_store: num_starts 8 time spent: 0:0:0 [0.021236s total; 0.002655 per start]
expr_simplify_using_lhs_set_helper: num_starts 83 time spent: 0:0:0 [0.038034s total; 0.000458 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 260 time spent: 0:0:0 [0.037771s total; 0.000145 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 67 time spent: 0:0:0 [0.000365s total; 0.000005 per start]
expr_simplify_eq: num_starts 3 time spent: 0:0:0 [0.000044s total; 0.000015 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000010s total; 0.000003 per start]
canonicalize_expr_tree: num_starts 51 time spent: 0:0:0 [0.000920s total; 0.000018 per start]
expr_simplify_memalloc_using_memlabel: num_starts 5 time spent: 0:0:0 [0.000014s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.021000s total; 0.002625 per start]
get_arithmetic_addsub_atoms: num_starts 63 time spent: 0:0:0 [0.000069s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 135 time spent: 0:0:0 [0.001640s total; 0.000012 per start]
expr_is_consts_struct_constant: num_starts 1225 time spent: 0:0:0 [0.000774s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 2233 time spent: 0:0:0 [0.040071s total; 0.000018 per start]
expr_do_simplify_helper_cache: num_starts 2233 time spent: 0:0:0 [0.001453s total; 0.000001 per start]
array_constant_equals: num_starts 19 time spent: 0:0:0 [0.000042s total; 0.000002 per start]
sort_dfa_canonical: num_starts 143947 time spent: 0:0:1 [1.266164s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 6 time spent: 0:0:0 [0.001869s total; 0.000311 per start]
combo_dfa_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.122897s total; 0.001536 per start]
alias_val_xfer_and_meet: num_starts 80 time spent: 0:0:0 [0.037141s total; 0.000464 per start]
get_sprel_map_from_avail_exprs: num_starts 106 time spent: 0:0:0 [0.014421s total; 0.000136 per start]
update_memlabels_for_memslot_locs: num_starts 25 time spent: 0:0:0 [0.000127s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 160 time spent: 0:0:0 [0.010430s total; 0.000065 per start]
compute_simplified_loc_exprs_for_edge: num_starts 453 time spent: 0:0:0 [0.047628s total; 0.000105 per start]
compute_locs_definitely_written_on_edge: num_starts 160 time spent: 0:0:0 [0.000091s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 49 time spent: 0:0:0 [0.006737s total; 0.000137 per start]
edge_update_memlabel_map_for_mlvars: num_starts 80 time spent: 0:0:0 [0.001422s total; 0.000018 per start]
add_new_locs_based_on_edge: num_starts 80 time spent: 0:0:0 [0.025808s total; 0.000323 per start]
expand_locset_to_include_slots_for_memmask: num_starts 74 time spent: 0:0:0 [0.000248s total; 0.000003 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.spec.foo.: 0s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.foo.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.foo.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.foo.: 3e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 5e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.foo.: 9e-06s (num_starts 1; 0.0000s/start)
get_lr_status_for_loc_ids.: 1.8e-05s (num_starts 5; 0.0000s/start)
get_intersected_lr_status.: 2.4e-05s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 2.7e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 3.2e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 4.1e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 4.6e-05s (num_starts 53; 0.0000s/start)
context_constructor.: 5e-05s (num_starts 1; 0.0001s/start)
lr_status_meet.: 5.6e-05s (num_starts 61; 0.0000s/start)
expr_is_callee_save_const.: 6.7e-05s (num_starts 57; 0.0000s/start)
main.3.: 8.3e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 9.1e-05s (num_starts 2; 0.0000s/start)
determinize_value_expr_map.: 0.000133s (num_starts 154; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000162s (num_starts 1; 0.0002s/start)
graph_locs_add_all_specvars.: 0.000172s (num_starts 1; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000185s (num_starts 12; 0.0000s/start)
compute_sprel_relations.: 0.000192s (num_starts 1; 0.0002s/start)
populate_locid2expr_map.: 0.000196s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000198s (num_starts 41; 0.0000s/start)
propagate_sprels.: 0.000203s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000232s (num_starts 23; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000234s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000261s (num_starts 41; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000262s (num_starts 2; 0.0001s/start)
graph_locs_add_all_local_vars.: 0.000295s (num_starts 1; 0.0003s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000298s (num_starts 5; 0.0001s/start)
expr_represents_llvm_undef.: 0.000351s (num_starts 59; 0.0000s/start)
graph_with_aliasing_constructor.src.spec.foo.: 0.000394s (num_starts 1; 0.0004s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000549s (num_starts 1; 0.0005s/start)
compute_z3_expr.: 0.000588s (num_starts 48; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000669s (num_starts 80; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000691s (num_starts 1193; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.0007s (num_starts 82; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000787s (num_starts 1; 0.0008s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000882s (num_starts 1; 0.0009s/start)
canonicalize_llvm_nextpcs.: 0.000889s (num_starts 1; 0.0009s/start)
populate_simplified_to_state.: 0.000952s (num_starts 3; 0.0003s/start)
populate_transitive_closure.: 0.001066s (num_starts 1; 0.0011s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.001114s (num_starts 80; 0.0000s/start)
graph_with_locs_constructor.src.spec.foo.: 0.001167s (num_starts 1; 0.0012s/start)
populate_exit_return_values_for_llvm_method.: 0.001242s (num_starts 1; 0.0012s/start)
expr_linear_relation_holds::visit.var.: 0.001283s (num_starts 59; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001314s (num_starts 80; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001545s (num_starts 1; 0.0015s/start)
graph_with_edge_structures_constructor.src.spec.foo.: 0.001569s (num_starts 1; 0.0016s/start)
tfg::collect_assumes_around_edge.: 0.001574s (num_starts 105; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.001948s (num_starts 67; 0.0000s/start)
query:convert_from_z3.: 0.002048s (num_starts 48; 0.0000s/start)
create_closure_matrix.: 0.002072s (num_starts 105; 0.0000s/start)
query:convert_to_z3.: 0.002372s (num_starts 48; 0.0000s/start)
graph_with_simplified_assets_constructor.src.spec.foo.: 0.002686s (num_starts 1; 0.0027s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.002872s (num_starts 67; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.003244s (num_starts 1; 0.0032s/start)
populate_dominator_and_postdominator_relations.: 0.003422s (num_starts 2; 0.0017s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.003544s (num_starts 61; 0.0001s/start)
compute_lr_status_for_expr.: 0.003566s (num_starts 78; 0.0000s/start)
graph_visit_exprs.: 0.003658s (num_starts 4; 0.0009s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.003659s (num_starts 61; 0.0001s/start)
graph_with_predicates_constructor.src.spec.foo.: 0.004159s (num_starts 1; 0.0042s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00481s (num_starts 1815; 0.0000s/start)
query:simplify-z3.: 0.005921s (num_starts 99; 0.0001s/start)
populate_simplified_assets.: 0.006045s (num_starts 6; 0.0010s/start)
tfg_constructor.src.spec.foo.after_transitive_closure.: 0.006135s (num_starts 1; 0.0061s/start)
tfg_constructor.src.spec.foo.post_parsing.: 0.006141s (num_starts 1; 0.0061s/start)
tfg_constructor.src.spec.foo.after_string_contents.: 0.006145s (num_starts 1; 0.0061s/start)
tfg_constructor.src.spec.foo.after_compute_max_memlabel_varnum.: 0.00615s (num_starts 1; 0.0062s/start)
tfg_constructor.src.spec.foo.: 0.006154s (num_starts 1; 0.0062s/start)
graph_identify_back_edges.: 0.006539s (num_starts 6; 0.0011s/start)
tfg::populate_loc_definedness.before_solve.: 0.006666s (num_starts 2; 0.0033s/start)
graph_identify_natural_loops.: 0.006872s (num_starts 6; 0.0011s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.007035s (num_starts 971; 0.0000s/start)
tfg::populate_loc_definedness.before_initialize.: 0.007126s (num_starts 2; 0.0036s/start)
tfg::populate_loc_definedness.: 0.007411s (num_starts 2; 0.0037s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.008053s (num_starts 1; 0.0081s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.008244s (num_starts 1; 0.0082s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.008492s (num_starts 1; 0.0085s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.008609s (num_starts 80; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.008984s (num_starts 105; 0.0001s/start)
graph_to_stream.: 0.009026s (num_starts 1; 0.0090s/start)
compute_new_lr_status_on_locs.: 0.009032s (num_starts 80; 0.0001s/start)
find_dominators.: 0.009248s (num_starts 10; 0.0009s/start)
compute_regions.: 0.011107s (num_starts 6; 0.0019s/start)
populate_branch_affecting_locs.: 0.011433s (num_starts 2; 0.0057s/start)
populate_locs_potentially_modified_on_edge.: 0.016458s (num_starts 3; 0.0055s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.01653s (num_starts 80; 0.0002s/start)
tfg_preprocess.dst.llvm.foo.: 0.018734s (num_starts 1; 0.0187s/start)
tfg::tfg_preprocess.: 0.018737s (num_starts 1; 0.0187s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.021904s (num_starts 108; 0.0002s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.022517s (num_starts 3; 0.0075s/start)
get_tfg.: 0.02444s (num_starts 1; 0.0244s/start)
get_function_tfg_map.foo.: 0.024473s (num_starts 1; 0.0245s/start)
get_function_tfg_map.: 0.024477s (num_starts 1; 0.0245s/start)
main.2.: 0.024655s (num_starts 1; 0.0247s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.028341s (num_starts 80; 0.0004s/start)
populate_loc_liveness.: 0.035016s (num_starts 2; 0.0175s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.037304s (num_starts 80; 0.0005s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.038117s (num_starts 83; 0.0005s/start)
avail_exprs_create_submap.: 0.041261s (num_starts 240; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.045108s (num_starts 971; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.046594s (num_starts 971; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.051421s (num_starts 80; 0.0006s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.054455s (num_starts 971; 0.0001s/start)
tfg_postprocess_after_pointsto_analysis.: 0.082936s (num_starts 1; 0.0829s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.099329s (num_starts 1; 0.0993s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.12303s (num_starts 80; 0.0015s/start)
ftmap_run_pointsto_analysis.: 0.240351s (num_starts 1; 0.2404s/start)
parse_consts_db.: 7.28578s (num_starts 1; 7.2858s/start)
main.: 7.60217s (num_starts 1; 7.6022s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:08 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:15 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:23 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:23 : Reading in SPEC-LLVM I/O specification from file ind4.iospecs...</MSG>
<MSG>0:23 : Computing equivalence for function: foo...</MSG>
<MSG>0:23 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:23 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG foo: Enumerating correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L3%8%bbentry as correlation candidates for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG foo: Found 3 correlations for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG foo created 3 possibilities in group foo.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : Adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Computing loop hoisting select expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Computing loop hoisting non-linear expressions at toPC L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Adding node L3%5%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:23 : foo.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Adding edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : foo.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : foo.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : foo.A2: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:23 : foo.A2: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:23 : foo.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : foo.A2: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : foo.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG foo.A2 for fromPC L0%0%d_L0%0%d and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L3%5%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    7 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      5.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      6.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:23 : Added correlation to the product-TFG foo.A2 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG foo.A2 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    7 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      4.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      5.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      6.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:23 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:23 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:23 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:23 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:24 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:24 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht7-prove_trivial4-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:25 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:25 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:25 : foo.A2 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:25 : Chosen product-TFG foo.A2 will be explored later...</MSG>
<MSG>0:25 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG foo.A3 (d:0, s:0, sp: 0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A3...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A3...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L3%8%bbentry ending at L3%8%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Computing loop hoisting select expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Computing loop hoisting non-linear expressions at toPC L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Adding node L3%8%bbentry_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:25 : foo.A3: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Adding edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : foo.A3: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : foo.A3: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : foo.A3: marking unstable at L0%0%d_L0%0%d due to failing condition:
wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140357 : input.dst.llvm-%l : BV:32                 : 0
140366 : 8 { 0x8 +1.0e1025 } : INT                 : 8
140367 : islangaligned(140357, 140366) : BOOL      : true
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( ind(1, 1, 0, Indxform17, lambda(Lambda34, Lambda34), lambda(Lambda35, sum(0, unit, prod(429532086, Indxform17)))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
140495 : sum_is(140273, 140279) : BOOL             : false
141743 : implies(140367, 140495) : BOOL            : false

ce =
=counter_example_begin yices.ce11 c13d75f32473383649d53dc8f0a2466
=input.spec-%var-l-1
1 : 1 { 0x1 +1.0e1025 } : INT
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : Indxform17 : BV:32
4 : Lambda34 : BV:32
5 : lambda(4, 4) : FUNCTION[BV:32 -> BV:32]
6 : Lambda35 : BV:32
7 : unit : UNIT
8 : 429532086 { 0x199a23b6 +1.20421481e180 } : BV:32
9 : prod(8, 3) : PROD[BV:32,BV:32]
10 : sum(2, 7, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(6, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 1, 2, 3, 5, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : sym_const(12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=counter_example.random_seed
2632935803
=counter_example_end


failcond-expr = implies(islangaligned(input.dst.llvm-%l, 8), sum_is(input.spec-%var-l-1, 1)):
1 : input.dst.llvm-%l : BV:32
2 : 8 { 0x8 +1.0e1025 } : INT
3 : islangaligned(1, 2) : BOOL
4 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
5 : 1 { 0x1 +1.0e1025 } : INT
6 : sum_is(4, 5) : BOOL
7 : implies(3, 6) : BOOL
</MSG>
<MSG>0:25 : foo.A3: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : foo.A3: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : foo.A3: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A3: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L3%8%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG foo.A3 for fromPC L0%0%d_L0%0%d and toPC L3%8%bbentry_Lwhile.cond%1%bbentry, src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L3%8%bbentry and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Failed correlation of src pathset L0%0%d=>L3%8%bbentry[mu 1, delta {1,0}] as correlation candidate for L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_L0%0%d: failcond = wfcond.from_pcL0%0%d_L0%0%d.to_pcL3%8%bbentry_Lwhile.cond%1%bbentry-dst-edgecond-implies-src-edgecond
140357 : input.dst.llvm-%l : BV:32                 : 0
140366 : 8 { 0x8 +1.0e1025 } : INT                 : 8
140367 : islangaligned(140357, 140366) : BOOL      : true
140273 : input.spec-%var-l-1 : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]] : ( ind(1, 1, 0, Indxform17, lambda(Lambda34, Lambda34), lambda(Lambda35, sum(0, unit, prod(429532086, Indxform17)))) )
140279 : 1 { 0x1 +1.0e1025 } : INT                 : 1
140495 : sum_is(140273, 140279) : BOOL             : false
141743 : implies(140367, 140495) : BOOL            : false

ce =
=counter_example_begin yices.ce11 c13d75f32473383649d53dc8f0a2466
=input.spec-%var-l-1
1 : 1 { 0x1 +1.0e1025 } : INT
2 : 0 { 0x0 +1.0e129 } : BV:32
3 : Indxform17 : BV:32
4 : Lambda34 : BV:32
5 : lambda(4, 4) : FUNCTION[BV:32 -> BV:32]
6 : Lambda35 : BV:32
7 : unit : UNIT
8 : 429532086 { 0x199a23b6 +1.20421481e180 } : BV:32
9 : prod(8, 3) : PROD[BV:32,BV:32]
10 : sum(2, 7, 9) : SUM[UNIT,PROD[BV:32,BV:32]]
11 : lambda(6, 10) : FUNCTION[BV:32 -> SUM[UNIT,PROD[BV:32,BV:32]]]
12 : ind(1, 1, 2, 3, 5, 11) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
13 : sym_const(12) : IND[Type0,SUM[UNIT,PROD[BV:32,DECL[Type0]]]]
=input.spec-%tmpvar-5.L3%5%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-%l
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.llvm-mem
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.llvm-mem.alloc
1 : ([ 0; 2147483647 ] -> memlabel-mem-may-straddle-symbol.1-heap, [ 2147483648; 2147483651 ] -> memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/, [ 2147483652; 4294967295 ] -> memlabel-mem-may-straddle-symbol.1-heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local./*___y___foo__x__=L0%0%argnum0=/
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin
1 : 2147483648 { 0x80000000 -2147483648 -1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.spec-%var-l-1.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=counter_example.random_seed
2632935803
=counter_example_end


</MSG>
<MSG>0:25 : Discovered that the correlation was useless for the product-TFG foo.A3 (d:0, s:0, sp: 0)...</MSG>
<MSG>0:25 : Chose (for CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:25 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1...</MSG>
<MSG>0:25 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1...</MSG>
<MSG>0:25 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:25 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : Adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Adding node L0%0%d_Lwhile.cond%1%bbentry to the product-TFG...</MSG>
<MSG>0:25 : foo.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:25 : foo.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:25 : foo.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:25 : foo.A1: Propagated 3 out of 3 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:25 : foo.A1: Added the 3 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:25 : foo.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:25 : foo.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:25 : foo.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding new edge to the product-TFG foo.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:25 : Added correlation to the product-TFG foo.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:25 : Chose (after CE propagation) product-TFG foo.A1 (d:0, s:0, sp: 0) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:0, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      1.: bvsle(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
      2.: bvsge(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 0)  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:25 : foo.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:25 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:25 : foo.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:25 : foo.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 3 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:25 : foo.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:25 : foo.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial2-prove2...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:25 : foo.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:25 : foo.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 0)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:25 : foo.A1 (d:1, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:25 : foo.A1 (d:1, s:0, sp: 2): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:26 : product-TFG foo.A1: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1: Found 1 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : product-TFG foo.A1 created 1 possibilities in group foo.A1.B...</MSG>
<MSG>0:26 : Chose (for CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:26 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:26 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A1.B1...</MSG>
<MSG>0:26 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:26 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : Adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Adding edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:26 : foo.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:26 : foo.A1.B1: Propagated 2 out of 6 counter-examples across edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry</MSG>
<MSG>0:26 : foo.A1.B1: Added the 2 propagated CEs at PC L0%0%d_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:26 : foo.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:26 : foo.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:26 : foo.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : Done adding new edge to the product-TFG foo.A1.B1 for fromPC L0%0%d_Lwhile.cond%1%bbentry and toPC L0%0%d_Lwhile.cond%1%bbentry, src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:26 : Added correlation to the product-TFG foo.A1.B1 (d:1, s:0, sp: 2) and created a correlation entry...</MSG>
<MSG>0:26 : Chose (after CE propagation) product-TFG foo.A1.B1 (d:1, s:0, sp: 2) from a frontier of size 2...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lwhile.cond%1%bbentry (C L0%0%d, A line 8)
                L0%0%d_Lwhile.cond%1%bbentry [inductive-invariants] contains 6 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:26 : foo.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:26 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:26 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:26 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:26 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 2 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial0-prove4...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:cvc4.ce9      1.:z3v487.ce437      2.:cvc4.ce205      3.:z3v487.ce372      4.:cvc4.ce373      5.:z3v487.ce501
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:29 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:29 : foo.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 6 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 3 exprs and 1 CEs across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:cvc4.ce9      1.:z3v487.ce437      2.:cvc4.ce205      3.:z3v487.ce372      4.:cvc4.ce373      5.:z3v487.ce501
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:29 : foo.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:29 : foo.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 2)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
     is_assumed_eqclass : 0
    6 visited ces:
      0.:cvc4.ce9      1.:z3v487.ce437      2.:cvc4.ce205      3.:z3v487.ce372      4.:cvc4.ce373      5.:z3v487.ce501
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 3-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce205      2.:z3v487.ce206      3.:z3v487.ce238
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [3]: 4-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    1 preds:
      0.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:29 : foo.A1.B1 (d:2, s:0, sp: 2): checked newly added edge and inferred invariants...</MSG>
<MSG>0:29 : foo.A1.B1 (d:2, s:0, sp: 3): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:29 : Chosen product-TFG foo.A1.B1 will be explored later...</MSG>
<MSG>0:29 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:29 : Chose (after CE propagation) product-TFG foo.A2 (d:1, s:0, sp: 3) from a frontier of size 2...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 4 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:29 : foo.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:29 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:29 : foo.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:29 : foo.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:29 : foo.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:29 : foo.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:29 : foo.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>0:29 : foo.A2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:29 : foo.A2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:29 : foo.A2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:30 : foo.A2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:30 : foo.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:30 : foo.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:30 : foo.A2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:30 : foo.A2 (d:1, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:30 : product-TFG foo.A2: Enumerating correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Considering 2 paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Attempting correlation of src pathset L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Found 2 feasible correlations for paths to src pc L3%5%bbentry as correlation candidates for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : product-TFG foo.A2: Found 2 correlations for Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : product-TFG foo.A2 created 2 possibilities in group foo.A2.B...</MSG>
<MSG>0:30 : Chose (for CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:30 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:30 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2...</MSG>
<MSG>0:30 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:30 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:30 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:30 : Adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B2: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B2: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B2: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:30 : foo.A2.B2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:30 : foo.A2.B2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:30 : foo.A2.B2: Propagated 3 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:31 : foo.A2.B2: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:31 : foo.A2.B2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:31 : foo.A2.B2: Finished executing CG's add edge function...</MSG>
<MSG>0:31 : foo.A2.B2: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:31 : foo.A2.B2: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:31 : Done adding new edge to the product-TFG foo.A2.B2 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:31 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:31 : Added correlation to the product-TFG foo.A2.B2 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:31 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:31 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:31 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:31 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:31 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:31 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:32 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:32 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:32 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:32 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial1-prove3...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:34 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:34 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:34 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:34 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:34 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:34 : foo.A2.B2 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:34 : foo.A2.B2 (d:1, s:0, sp: 5): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:34 : Chosen product-TFG foo.A2.B2 will be explored later...</MSG>
<MSG>0:34 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:34 : Chose (for CE propagation) product-TFG foo.A2.B1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:34 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B1...</MSG>
<MSG>0:34 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B1...</MSG>
<MSG>0:34 : Creating ssa-path for the src-tfg path L3%5%bbentry --> L3%5%bbentry ending at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:34 : Adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:34 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry
</MSG>
<MSG>0:34 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
<MSG>0:34 : Adding new edge to the product-TFG foo.A2.B1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : foo.A2.B1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : foo.A2.B1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : foo.A2.B1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : foo.A2.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:34 : foo.A2.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:34 : foo.A2.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:34 : foo.A2.B1: Propagated 3 out of 7 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry</MSG>
<MSG>0:34 : foo.A2.B1: Added the 3 propagated CEs at PC L3%5%bbentry_Lwhile.cond%1%bbentry and propagated further.
</MSG>
<MSG>0:34 : foo.A2.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:34 : foo.A2.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:34 : foo.A2.B1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : foo.A2.B1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : Done adding new edge to the product-TFG foo.A2.B1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC L3%5%bbentry_Lwhile.cond%1%bbentry, src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : Done adding a CG edge composition using the src path L3%5%bbentry --> L3%5%bbentry and dst path Lwhile.cond%1%bbentry --> Lwhile.cond%1%bbentry</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:34 : Added correlation to the product-TFG foo.A2.B1 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:34 : Chose (after CE propagation) product-TFG foo.A2.B1 (d:1, s:0, sp: 3) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 0 delta {0,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 7 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    3 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
      2.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    2 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    4 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      3.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:34 : foo.A2.B1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:34 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:34 : foo.A2.B1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:34 : foo.A2.B1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:34 : foo.A2.B1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:34 : foo.A2.B1: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:34 : foo.A2.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:34 : foo.A2.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:34 : foo.A2.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:35 : foo.A2.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht3-prove_trivial1-prove2...</MSG>
<MSG>0:35 : foo.A2.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:35 : foo.A2.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:35 : foo.A2.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 1 proof-stats=dht4-prove_trivial2-prove2...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce817      3.:cvc4.ce818
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:37 : foo.A2.B1: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed ...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: changed( 0, 1 ) ...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:37 : foo.A2.B1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:37 : foo.A2.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce817      3.:cvc4.ce818
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:37 : foo.A2.B1: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:37 : foo.A2.B1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:2, s:0, sp: 3)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: 0                     ==  input.spec-%var-sum-0.L3%5%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce817      3.:cvc4.ce818
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:37 : foo.A2.B1 (d:2, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:37 : foo.A2.B1 (d:2, s:0, sp: 5): Chosen CG is no longer the most promising correlation entry; returning delayed-exploration...</MSG>
<MSG>0:37 : Chosen product-TFG foo.A2.B1 will be explored later...</MSG>
<MSG>0:37 : Decided to explore product-TFG later after re-evaluating its best-first-search rank...</MSG>
<MSG>0:37 : Chose (after CE propagation) product-TFG foo.A2.B2 (d:1, s:0, sp: 5) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 9 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>L3%5%bbentry[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:37 : foo.A2.B2: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry and other downstream edges that change due to it...</MSG>
<MSG>0:37 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry...</MSG>
<MSG>0:37 : foo.A2.B2: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:37 : foo.A2.B2: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged</MSG>
<MSG>0:37 : foo.A2.B2: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:37 : foo.A2.B2: Relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry) ...</MSG>
<MSG>0:37 : foo.A2.B2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:37 : foo.A2.B2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>0:37 : foo.A2.B2: Relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) with 1 exprs and 4 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B2: Done relaxing invariant eqclass dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry (type BV_CONST_INEQ) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>0:37 : foo.A2.B2: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 6 exprs and 1 CEs across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry)...</MSG>
<MSG>0:37 : foo.A2.B2: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:37 : foo.A2.B2: Done relaxing invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged ...</MSG>
<MSG>0:37 : foo.A2.B2: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2.B2:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9


<MSG>0:37 : foo.A2.B2 (d:1, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:37 : foo.A2.B2 (d:1, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:38 : product-TFG foo.A2.B2: Enumerating correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:38 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:38 : Attempting correlation of src pathset L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:38 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:38 : product-TFG foo.A2.B2: Found 1 correlations for Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}] starting at L3%5%bbentry_Lwhile.cond%1%bbentry
</MSG>
<MSG>0:38 : product-TFG foo.A2.B2 created 1 possibilities in group foo.A2.B2.C...</MSG>
<MSG>0:38 : Chose (for CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 5) from a frontier of size 3...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 12 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:38 : Finished adding lsprel-assumes for allocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:38 : Finished adding lsprel-assumes for deallocation to the product-TFG foo.A2.B2.C1...</MSG>
<MSG>0:38 : Creating ssa-path for the src-tfg path L3%5%bbentry --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:38 : Adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:38 : Identifying common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d
</MSG>
<MSG>0:38 : Identified no common alloc-deallocs in the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
<MSG>0:38 : Adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Getting alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Found no alloca-ptrs on edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Adding edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:38 : foo.A2.B2.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Propagated 6 out of 12 counter-examples across edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d</MSG>
<MSG>0:38 : foo.A2.B2.C1: Added the 6 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:38 : foo.A2.B2.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Done computing CG regions after the addition of the edge L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : Done adding new edge to the product-TFG foo.A2.B2.C1 for fromPC L3%5%bbentry_Lwhile.cond%1%bbentry and toPC E0%0%d_E0%0%d, src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d...</MSG>
<MSG>0:38 : Done adding a CG edge composition using the src path L3%5%bbentry --> E0%0%d and dst path Lwhile.cond%1%bbentry --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:38 : Added correlation to the product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 5) and created a correlation entry...</MSG>
<MSG>0:38 : Chose (after CE propagation) product-TFG foo.A2.B2.C1 (d:1, s:0, sp: 5) from a frontier of size 3...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 12 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lwhile.cond%1%bbentry=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L3%5%bbentry=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:38 : foo.A2.B2.C1: Updating invariants over the newly added edges in edge composition L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:38 : Constructed infer_invariants_dfa with initial worklist L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Done relaxing dst graph's memlabels for edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:38 : foo.A2.B2.C1: Checking well-formedness assertions on outgoing edges from L3%5%bbentry_Lwhile.cond%1%bbentry ...</MSG>
<MSG>0:38 : foo.A2.B2.C1: Done relaxing memlabels and invariants across the edge composition (L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
foo.A2.B2.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:38 : foo.A2.B2.C1 (d:1, s:0, sp: 5): checked newly added edge and inferred invariants...</MSG>
<MSG>0:38 : foo.A2.B2.C1 (d:1, s:0, sp: 5): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:38 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:38 : Checking equivalence proof...</MSG>
<MSG>0:38 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L3%5%bbentry_Lwhile.cond%1%bbentry: (d:1, s:0, sp: 5)
  Invariant state (4 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___foo__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-sum-0.L3%5%bbentry ; 3-->input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry ; 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    2 preds:
      0.: 0                     ==  bvextract(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 2, 0)
      1.: bvneg(bvmul(input.spec-%var-sum-0.L3%5%bbentry, 4294967295))  ==  input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:cvc4.ce650      3.:z3v487.ce649
    eqclass 2:
    smallest point cover name dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, type BV_CONST_INEQ, exprs [1]: 4-->input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry ; 
    1 preds:
      0.: bvule(input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, 4294967294)  ==  true
     is_assumed_eqclass : 0
    4 visited ces:
      0.:cvc4.ce9      1.:cvc4.ce45      2.:z3v487.ce46      3.:z3v487.ce81
    eqclass 3:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [6]: 5-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 6-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 7-->eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 9-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 10-->eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%sum.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    2 preds:
      0.: eq(input.spec-%var-l-0.L3%5%bbentry, ind(1, 1, input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%var-l-1, ind(1, 1, input.dst.llvm-%l, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:cvc4.ce9

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L0%0%d => C L3%5%bbentry at mu 1 delta {1,0}, A L0%0%d => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry => C L3%5%bbentry at mu 1 delta {1,0}, A line 8 => A line 8 at mu 1 delta {1,0})
            L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d (C L3%5%bbentry => C E0%0%d at mu 1 delta {1,0}, A line 8 => A E0%0%d at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            L3%5%bbentry_Lwhile.cond%1%bbentry (C L3%5%bbentry, A line 8)
                L3%5%bbentry_Lwhile.cond%1%bbentry [inductive-invariants] contains 12 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function foo. 15.10s, query:smt.: 5.59093s (num_starts 130; 0.0430s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 13.9435s (num_starts 131; 0.1064s/start)ftmap_run_pointsto_analysis.: 0.184897s (num_starts 2; 0.0924s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 4e-06s (num_starts 4; 0.0000s/start)
compute_tfg_pred_eqclass.: 8e-06s (num_starts 3; 0.0000s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 9e-06s (num_starts 9; 0.0000s/start)
prune_dst_memslots.: 9e-06s (num_starts 3; 0.0000s/start)
graph_edge_contains_unknown_function_call.: 1.1e-05s (num_starts 11; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 1.3e-05s (num_starts 7; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.6e-05s (num_starts 6; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 1.7e-05s (num_starts 7; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2.8e-05s (num_starts 39; 0.0000s/start)
get_intersected_lr_status.: 3.4e-05s (num_starts 2; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.4e-05s (num_starts 3; 0.0000s/start)
remove_complex_bv_exprs.: 3.5e-05s (num_starts 3; 0.0000s/start)
prove_trivial.: 4e-05s (num_starts 51; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 4.7e-05s (num_starts 3; 0.0000s/start)
determinize_value_expr_map.: 5.8e-05s (num_starts 18; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 8.8e-05s (num_starts 3; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 9.7e-05s (num_starts 29; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000109s (num_starts 5; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000109s (num_starts 1; 0.0001s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.00011s (num_starts 47; 0.0000s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.000115s (num_starts 11; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000121s (num_starts 5; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000138s (num_starts 3; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000141s (num_starts 260; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.000148s (num_starts 7; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.000155s (num_starts 131; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 0.000168s (num_starts 3; 0.0001s/start)
populate_locid2expr_map.: 0.00018s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000189s (num_starts 3; 0.0001s/start)
collect_dst_to_src_submap_preds.: 0.000206s (num_starts 131; 0.0000s/start)
get_lr_status_for_loc_ids.: 0.000209s (num_starts 69; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000212s (num_starts 13; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.000225s (num_starts 18; 0.0000s/start)
graph_locs_add_all_indvars.: 0.000231s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000242s (num_starts 12; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000256s (num_starts 2; 0.0001s/start)
compute_sprel_relations.: 0.000258s (num_starts 2; 0.0001s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000262s (num_starts 3; 0.0001s/start)
lr_status_meet.: 0.000277s (num_starts 328; 0.0000s/start)
propagate_sprels.: 0.00029s (num_starts 2; 0.0001s/start)
ce_perform_memory_fuzzing.: 0.000293s (num_starts 291; 0.0000s/start)
expr_is_hidden_reg.: 0.0003s (num_starts 395; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.000306s (num_starts 80; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.000308s (num_starts 2; 0.0002s/start)
proof_query_is_trivial_helper.: 0.000313s (num_starts 133; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000341s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000342s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.000344s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000346s (num_starts 1; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000348s (num_starts 1; 0.0003s/start)
graph_locs_add_local_vars_for_edge.: 0.000349s (num_starts 12; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000361s (num_starts 1; 0.0004s/start)
graph_locs_add_all_local_vars.: 0.000361s (num_starts 2; 0.0002s/start)
expr_is_callee_save_const.: 0.000375s (num_starts 407; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.00041s (num_starts 9; 0.0000s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.000443s (num_starts 1; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.00051s (num_starts 30; 0.0000s/start)
create_closure_matrix.: 0.000561s (num_starts 70; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.00057s (num_starts 12; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000576s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000579s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00058s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.000582s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;abstract-memlabel-asserts-houdini-guess.: 0.000585s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.000589s (num_starts 1; 0.0006s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000631s (num_starts 4; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000631s (num_starts 1; 0.0006s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000634s (num_starts 68; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.000721s (num_starts 58; 0.0000s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000752s (num_starts 4; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000755s (num_starts 1; 0.0008s/start)
graph_locs_add_all_specvars.: 0.000767s (num_starts 2; 0.0004s/start)
graph_locs_add_all_llvmvars.: 0.000772s (num_starts 2; 0.0004s/start)
interesting_wp_exprs_apply_trans_funs.: 0.000774s (num_starts 4; 0.0002s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000775s (num_starts 24; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000777s (num_starts 186; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000792s (num_starts 186; 0.0000s/start)
populate_simplified_to_state.: 0.000797s (num_starts 3; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000805s (num_starts 1; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.000807s (num_starts 1; 0.0008s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000834s (num_starts 1; 0.0008s/start)
tfg::populate_loc_definedness.before_solve.: 0.000871s (num_starts 3; 0.0003s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000872s (num_starts 1; 0.0009s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.000918s (num_starts 3; 0.0003s/start)
bv_const_ref_map2expr_map.: 0.000965s (num_starts 41; 0.0000s/start)
ldr_decomposition.: 0.001025s (num_starts 47; 0.0000s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.001059s (num_starts 15; 0.0001s/start)
removeMostPromising.: 0.001073s (num_starts 24; 0.0000s/start)
proof_query_is_trivial.: 0.001078s (num_starts 131; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001113s (num_starts 1; 0.0011s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001121s (num_starts 18; 0.0001s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.00117s (num_starts 15; 0.0001s/start)
get_sprel_map_pair.: 0.001195s (num_starts 120; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.001196s (num_starts 131; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.001211s (num_starts 4; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.00124s (num_starts 3; 0.0004s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.001247s (num_starts 336; 0.0000s/start)
tfg::populate_loc_definedness.: 0.001318s (num_starts 3; 0.0004s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.001363s (num_starts 60; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.001385s (num_starts 6; 0.0002s/start)
construct_linear_combination_exprs.: 0.001472s (num_starts 41; 0.0000s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001575s (num_starts 8; 0.0002s/start)
identify_address_taken_local_variables.: 0.001599s (num_starts 1; 0.0016s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.001618s (num_starts 61; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.001645s (num_starts 18; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001704s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001706s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.00171s (num_starts 2; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;abstract-memlabel-asserts-houdini-guess.: 0.001717s (num_starts 2; 0.0009s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.00175s (num_starts 191; 0.0000s/start)
expr_represents_llvm_undef.: 0.001838s (num_starts 411; 0.0000s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.001879s (num_starts 58; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001934s (num_starts 2; 0.0010s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001944s (num_starts 13; 0.0001s/start)
compute_ssa_vars_renaming_map.: 0.001976s (num_starts 2; 0.0010s/start)
find_dominators.: 0.002002s (num_starts 35; 0.0001s/start)
collect_assumes_around_edge.: 0.002161s (num_starts 7; 0.0003s/start)
graph_identify_back_edges.: 0.002191s (num_starts 31; 0.0001s/start)
compute_vars_reaching_definitions.: 0.002292s (num_starts 2; 0.0011s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.002359s (num_starts 4; 0.0006s/start)
graph_identify_natural_loops.: 0.002426s (num_starts 31; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.0025s (num_starts 3; 0.0008s/start)
get_unrolled_loop_paths_from.: 0.002518s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.002547s (num_starts 3; 0.0008s/start)
populate_simplified_assets.: 0.002595s (num_starts 6; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.002745s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-trivial.: 0.002767s (num_starts 2; 0.0014s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.002771s (num_starts 2; 0.0014s/start)
set_result_and_counter_example.: 0.002782s (num_starts 130; 0.0000s/start)
populate_branch_affecting_locs.: 0.002866s (num_starts 3; 0.0010s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.002885s (num_starts 3; 0.0010s/start)
pth_collect_preds_using_atom_func.: 0.003048s (num_starts 52; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003321s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.003324s (num_starts 1; 0.0033s/start)
populate_transitive_closure.: 0.003348s (num_starts 38; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.00341s (num_starts 58; 0.0001s/start)
graph_visit_exprs.: 0.003444s (num_starts 3; 0.0011s/start)
graph_visit_exprs_and_keys.: 0.003559s (num_starts 2; 0.0018s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.00358s (num_starts 81; 0.0000s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.003647s (num_starts 4; 0.0009s/start)
tfg_edge_composition_get_assumes.: 0.003957s (num_starts 52; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.004013s (num_starts 80; 0.0001s/start)
predicate_canonicalized.: 0.004057s (num_starts 41; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004125s (num_starts 2; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;abstract-memlabel-asserts-houdini-guess.: 0.004143s (num_starts 2; 0.0021s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004147s (num_starts 130; 0.0000s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.004429s (num_starts 55; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.00468s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.004685s (num_starts 2; 0.0023s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.00473s (num_starts 88; 0.0001s/start)
populate_locs_potentially_modified_on_edge.: 0.004802s (num_starts 3; 0.0016s/start)
create_sp_version_relations_lattice_at_pc.: 0.004906s (num_starts 70; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.004926s (num_starts 88; 0.0001s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.004992s (num_starts 250; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.005074s (num_starts 47; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005142s (num_starts 1; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.005144s (num_starts 1; 0.0051s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.005155s (num_starts 96; 0.0001s/start)
get_next_potential_correlations.: 0.005276s (num_starts 4; 0.0013s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.005311s (num_starts 191; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005324s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned;-trivial.: 0.005328s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005331s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.005333s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-unsigned.: 0.005336s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.005342s (num_starts 1; 0.0053s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.005398s (num_starts 141; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-trivial.: 0.005591s (num_starts 1; 0.0056s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.005591s (num_starts 88; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.005593s (num_starts 1; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;-dst-edgecond-implies-src-edgecond;-trivial.: 0.005595s (num_starts 1; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.005597s (num_starts 1; 0.0056s/start)
bv_linear_solve.: 0.005615s (num_starts 47; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.005661s (num_starts 1; 0.0057s/start)
gen_pred_from_coeff_row.simplify.: 0.005881s (num_starts 41; 0.0001s/start)
query:bv_solve.: 0.005895s (num_starts 47; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.005951s (num_starts 944; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.006075s (num_starts 1; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.006077s (num_starts 1; 0.0061s/start)
compute_regions.: 0.006104s (num_starts 31; 0.0002s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.006544s (num_starts 182; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.00674s (num_starts 2; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.006745s (num_starts 2; 0.0034s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.007412s (num_starts 3; 0.0025s/start)
bv_solve_returning_intermediate_structures.: 0.007424s (num_starts 47; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007731s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.00774s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007745s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007752s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.007752s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.007754s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate;-trivial.: 0.007756s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate;-trivial.: 0.007758s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.007763s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.007763s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;false-predicate.: 0.007766s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);false-predicate.: 0.007772s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.007782s (num_starts 3; 0.0026s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007806s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.007806s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.007808s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;-dst-edgecond-implies-src-edgecond.: 0.007813s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-trivial.: 0.00792s (num_starts 5; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.00793s (num_starts 5; 0.0016s/start)
expr_linear_relation_holds::visit.var.: 0.008139s (num_starts 411; 0.0000s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry.: 0.00828s (num_starts 1; 0.0083s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.008415s (num_starts 3; 0.0028s/start)
collect_assumes_around_path_helper.: 0.008438s (num_starts 186; 0.0000s/start)
bvsolve_cache_query.miss1.: 0.008689s (num_starts 47; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.008986s (num_starts 186; 0.0000s/start)
bvsolve_cache_query.: 0.009043s (num_starts 47; 0.0002s/start)
aliasing_constraints.convert_to_expr.: 0.009745s (num_starts 191; 0.0001s/start)
do_ssa_transformation.: 0.010049s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.010569s (num_starts 1; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-trivial.: 0.010577s (num_starts 1; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.01058s (num_starts 1; 0.0106s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.010661s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-trivial.: 0.010666s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.010671s (num_starts 1; 0.0107s/start)
solve_for_bv_points.: 0.011169s (num_starts 47; 0.0002s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-trivial.: 0.011366s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.011369s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.011377s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.011657s (num_starts 2; 0.0058s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.011664s (num_starts 6; 0.0019s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.011776s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-trivial.: 0.011788s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.011792s (num_starts 3; 0.0039s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-signed;-trivial.: 0.012425s (num_starts 1; 0.0124s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-trivial.: 0.012428s (num_starts 1; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed;-trivial.: 0.01243s (num_starts 1; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-signed;-trivial.: 0.012431s (num_starts 1; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-signed.: 0.012437s (num_starts 1; 0.0124s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;ub-signed.: 0.012441s (num_starts 1; 0.0124s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);ub-signed.: 0.012447s (num_starts 1; 0.0124s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.013206s (num_starts 47; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.013405s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.01341s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.013418s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;abstract-memlabel-asserts-houdini-guess.: 0.01343s (num_starts 3; 0.0045s/start)
gen_pred_from_coeff_row.: 0.013663s (num_starts 41; 0.0003s/start)
compute_preds_for_bv_points.: 0.013891s (num_starts 19; 0.0007s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.014s (num_starts 32; 0.0004s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.014156s (num_starts 61; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;ub-unsigned;-trivial.: 0.01439s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.014395s (num_starts 1; 0.0144s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.014637s (num_starts 7; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-trivial.: 0.015045s (num_starts 1; 0.0150s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.015049s (num_starts 1; 0.0150s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015169s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015173s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015174s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015721s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015726s (num_starts 1; 0.0157s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.015729s (num_starts 1; 0.0157s/start)
expr_substitute_using_available_exprs_submap.: 0.015795s (num_starts 299; 0.0001s/start)
tfg::get_aliasing_constraints_for_edge.: 0.016136s (num_starts 186; 0.0001s/start)
propagate_nodece_across_edge.: 0.016171s (num_starts 11; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.016279s (num_starts 1; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.016284s (num_starts 1; 0.0163s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.016476s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.016483s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.016495s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;abstract-memlabel-asserts-houdini-guess.: 0.016511s (num_starts 4; 0.0041s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.018281s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear;-trivial.: 0.018286s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear;-trivial.: 0.01829s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.018299s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;linear.: 0.018307s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 0.018321s (num_starts 3; 0.0061s/start)
query:convert_to_z3.: 0.018468s (num_starts 369; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.018529s (num_starts 3; 0.0062s/start)
get_unrolled_paths_from.: 0.018787s (num_starts 20; 0.0009s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.018863s (num_starts 4; 0.0047s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.019611s (num_starts 188; 0.0001s/start)
graph_to_stream.: 0.020189s (num_starts 4; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.020776s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;-dst-edgecond-implies-src-edgecond.: 0.020782s (num_starts 2; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.021325s (num_starts 2; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-unsigned.: 0.021331s (num_starts 2; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-trivial.: 0.021708s (num_starts 4; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned;-trivial.: 0.022346s (num_starts 2; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;ub-unsigned.: 0.022369s (num_starts 2; 0.0112s/start)
query:convert_from_z3.: 0.023776s (num_starts 369; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025282s (num_starts 1; 0.0253s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025287s (num_starts 1; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025292s (num_starts 1; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities.;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.025295s (num_starts 1; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.0253s (num_starts 1; 0.0253s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);outgoing_edges_cover_all_possibilities..: 0.02531s (num_starts 1; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;linear;-trivial.: 0.025314s (num_starts 4; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.025322s (num_starts 4; 0.0063s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.025358s (num_starts 61; 0.0004s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.025368s (num_starts 1; 0.0254s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.025371s (num_starts 1; 0.0254s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown;-all-proof-path-optimizations.: 0.025375s (num_starts 1; 0.0254s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.025377s (num_starts 1; 0.0254s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-trivial.: 0.025588s (num_starts 8; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.025598s (num_starts 8; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;outgoing_edges_cover_all_possibilities..: 0.025657s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.025664s (num_starts 2; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026024s (num_starts 1; 0.0260s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026026s (num_starts 1; 0.0260s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.026358s (num_starts 22; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.026395s (num_starts 2; 0.0132s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-trivial.: 0.026529s (num_starts 4; 0.0066s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.026543s (num_starts 4; 0.0066s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026582s (num_starts 1; 0.0266s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026586s (num_starts 1; 0.0266s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.026596s (num_starts 1; 0.0266s/start)
counter_example_satisfies_preds.: 0.027181s (num_starts 369; 0.0001s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.027356s (num_starts 3; 0.0091s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.027428s (num_starts 3; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.028155s (num_starts 3; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;pred-type-unknown.: 0.028163s (num_starts 3; 0.0094s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.028179s (num_starts 3; 0.0094s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.02831s (num_starts 328; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;pred-type-unknown;-trivial.: 0.02883s (num_starts 6; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.028841s (num_starts 6; 0.0048s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.028844s (num_starts 328; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.030234s (num_starts 10; 0.0030s/start)
compute_lr_status_for_expr.: 0.030293s (num_starts 437; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-trivial.: 0.030727s (num_starts 2; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.030732s (num_starts 2; 0.0154s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.031522s (num_starts 7; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.031525s (num_starts 3; 0.0105s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.03173s (num_starts 191; 0.0002s/start)
populate_loc_liveness.: 0.032108s (num_starts 3; 0.0107s/start)
lhs_set_sort.: 0.032415s (num_starts 80; 0.0004s/start)
check_node_stability_after_CE_addition.: 0.032815s (num_starts 64; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.033175s (num_starts 8; 0.0041s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);abstract-memlabel-asserts-houdini-guess.: 0.033319s (num_starts 8; 0.0042s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.033508s (num_starts 61; 0.0005s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.033624s (num_starts 61; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.033765s (num_starts 4; 0.0084s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.033896s (num_starts 21; 0.0016s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.037755s (num_starts 191; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.037981s (num_starts 2; 0.0190s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d);pred-type-unknown.: 0.038002s (num_starts 2; 0.0190s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d).: 0.03801s (num_starts 2; 0.0190s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.040198s (num_starts 36; 0.0011s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.040301s (num_starts 36; 0.0011s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.040714s (num_starts 8; 0.0051s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.040806s (num_starts 1774; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.041007s (num_starts 2; 0.0205s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.041013s (num_starts 2; 0.0205s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-trivial.: 0.041406s (num_starts 3; 0.0138s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.041415s (num_starts 3; 0.0138s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.042485s (num_starts 159; 0.0003s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.04277s (num_starts 35; 0.0012s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.044005s (num_starts 15; 0.0029s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.044196s (num_starts 15; 0.0029s/start)
compute_expr_eqclasses_at_pc.: 0.044725s (num_starts 3; 0.0149s/start)
collect_aliasing_constraints_around_path_helper.: 0.044891s (num_starts 195; 0.0002s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.045451s (num_starts 5; 0.0091s/start)
cg_add_node.: 0.045629s (num_starts 5; 0.0091s/start)
collect_aliasing_constraints_around_path.: 0.045748s (num_starts 123; 0.0004s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.046276s (num_starts 1; 0.0463s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry);-trivial.: 0.047088s (num_starts 9; 0.0052s/start)
tfg_postprocess_after_pointsto_analysis.: 0.047708s (num_starts 2; 0.0239s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear;-trivial.: 0.047736s (num_starts 4; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;linear.: 0.047772s (num_starts 4; 0.0119s/start)
avail_exprs_create_submap.: 0.048325s (num_starts 183; 0.0003s/start)
create_new_corr_graph_edge.new_node.: 0.049269s (num_starts 4; 0.0123s/start)
create_new_corr_graph_edge.: 0.049626s (num_starts 7; 0.0071s/start)
compute_new_lr_status_on_locs.: 0.050318s (num_starts 61; 0.0008s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.050589s (num_starts 1798; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.051817s (num_starts 1; 0.0518s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.052431s (num_starts 3; 0.0175s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lwhile.cond%1%bbentry.inductive-invariants.: 0.053485s (num_starts 11; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2.C1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.057486s (num_starts 2; 0.0287s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;-dst-edgecond-implies-src-edgecond.: 0.057588s (num_starts 4; 0.0144s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.058982s (num_starts 22; 0.0027s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.059957s (num_starts 6; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-trivial.: 0.060966s (num_starts 11; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-trivial.: 0.061365s (num_starts 4; 0.0153s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064981s (num_starts 2; 0.0325s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064994s (num_starts 2; 0.0325s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064999s (num_starts 2; 0.0325s/start)
query:simplify-z3.: 0.066245s (num_starts 768; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069899s (num_starts 2; 0.0349s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06991s (num_starts 2; 0.0350s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069911s (num_starts 2; 0.0350s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.06992s (num_starts 2; 0.0350s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;-dst-edgecond-implies-src-edgecond.: 0.069928s (num_starts 2; 0.0350s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.069939s (num_starts 2; 0.0350s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lwhile.cond%1%bbentry).: 0.072679s (num_starts 10; 0.0073s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073622s (num_starts 2; 0.0368s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073627s (num_starts 2; 0.0368s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.073636s (num_starts 2; 0.0368s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;-dst-edgecond-implies-src-edgecond.: 0.073644s (num_starts 2; 0.0368s/start)
check_wfconds_on_edge.L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry.: 0.07501s (num_starts 2; 0.0375s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.075592s (num_starts 3; 0.0252s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;ub-unsigned.: 0.075603s (num_starts 3; 0.0252s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);ub-unsigned.: 0.075625s (num_starts 3; 0.0252s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.076308s (num_starts 3; 0.0254s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078404s (num_starts 2; 0.0392s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079678s (num_starts 2; 0.0398s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079683s (num_starts 2; 0.0398s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080204s (num_starts 2; 0.0401s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080214s (num_starts 2; 0.0401s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-trivial.: 0.081245s (num_starts 4; 0.0203s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.081262s (num_starts 4; 0.0203s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>E0%0%d_E0%0%d.: 0.08139s (num_starts 2; 0.0407s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.082152s (num_starts 24; 0.0034s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.08599s (num_starts 94; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086142s (num_starts 2; 0.0431s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086152s (num_starts 2; 0.0431s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-trivial.: 0.088936s (num_starts 8; 0.0111s/start)
counter_example_falsifies_preds.: 0.089622s (num_starts 115; 0.0008s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.090189s (num_starts 61; 0.0015s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.09087s (num_starts 1856; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.091977s (num_starts 1798; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.094621s (num_starts 3; 0.0315s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;ub-unsigned.: 0.09463s (num_starts 3; 0.0315s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.094744s (num_starts 3; 0.0316s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;-dst-edgecond-implies-src-edgecond.: 0.094757s (num_starts 3; 0.0316s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.097588s (num_starts 11; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2.C1;pred-type-unknown.: 0.100177s (num_starts 6; 0.0167s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.109691s (num_starts 159; 0.0007s/start)
counter_example_evaluate_preds.: 0.115636s (num_starts 484; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.116902s (num_starts 4; 0.0292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;ub-unsigned.: 0.116916s (num_starts 4; 0.0292s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.117133s (num_starts 27; 0.0043s/start)
add_fresh_counterexample_at_pc_and_propagate.L3%5%bbentry_Lwhile.cond%1%bbentry.inductive-invariants.: 0.125417s (num_starts 12; 0.0105s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.126296s (num_starts 24; 0.0053s/start)
tfg_relax_pointsto_vals_on_edge.: 0.128495s (num_starts 37; 0.0035s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.131647s (num_starts 30; 0.0044s/start)
compute_z3_expr.: 0.131722s (num_starts 499; 0.0003s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.132119s (num_starts 59; 0.0022s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.13637s (num_starts 1798; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-trivial.: 0.147515s (num_starts 10; 0.0148s/start)
put_smtlib_string_in_file.: 0.155934s (num_starts 260; 0.0006s/start)
graph_ec_apply_trans_funs_helper.0.: 0.160831s (num_starts 595; 0.0003s/start)
graph_ec_apply_trans_funs_helper.: 0.162965s (num_starts 599; 0.0003s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.163781s (num_starts 586; 0.0003s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.164148s (num_starts 599; 0.0003s/start)
computeWP_for_pred_across_ec.: 0.165131s (num_starts 586; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.166321s (num_starts 4; 0.0416s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.17866s (num_starts 159; 0.0011s/start)
edge_composition_apply_trans_funs_on_pred.: 0.178887s (num_starts 131; 0.0014s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.179303s (num_starts 5; 0.0359s/start)
ftmap_run_pointsto_analysis.: 0.184897s (num_starts 2; 0.0924s/start)
tfg_run_pointsto_analysis.: 0.185276s (num_starts 2; 0.0926s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.191124s (num_starts 21; 0.0091s/start)
tfg_populate_structs_after_ssa_construction.: 0.192283s (num_starts 2; 0.0961s/start)
check_wfconds_on_edge.L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.198412s (num_starts 6; 0.0331s/start)
collect_inductive_preds_around_path.: 0.199426s (num_starts 131; 0.0015s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 0.204158s (num_starts 2; 0.1021s/start)
corr_graph::add_edge().: 0.211659s (num_starts 7; 0.0302s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.213064s (num_starts 44; 0.0048s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 0.213145s (num_starts 7; 0.0304s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.213499s (num_starts 101; 0.0021s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.220896s (num_starts 8; 0.0276s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-unsigned.: 0.227885s (num_starts 8; 0.0285s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229173s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229176s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229179s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229183s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.229189s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;false-predicate.: 0.229192s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);false-predicate.: 0.229197s (num_starts 1; 0.2292s/start)
check_equivalence_proof.: 0.230121s (num_starts 1; 0.2301s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 0.236963s (num_starts 2; 0.1185s/start)
counter_example_translate_on_edge_composition_helper.: 0.238424s (num_starts 537; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.247044s (num_starts 7; 0.0353s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.257298s (num_starts 4; 0.0643s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.257311s (num_starts 4; 0.0643s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.257772s (num_starts 1; 0.2578s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.257774s (num_starts 1; 0.2578s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.257777s (num_starts 1; 0.2578s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.257783s (num_starts 1; 0.2578s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo;dst_edge_composition_proves_false.: 0.257785s (num_starts 1; 0.2578s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.25779s (num_starts 1; 0.2578s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.263413s (num_starts 7; 0.0376s/start)
corr_graph_add_correlation.: 0.263662s (num_starts 7; 0.0377s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.263866s (num_starts 1; 0.2639s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.263868s (num_starts 1; 0.2639s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.263876s (num_starts 1; 0.2639s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;dst_edge_composition_proves_false.: 0.263881s (num_starts 1; 0.2639s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.264386s (num_starts 8; 0.0330s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.272937s (num_starts 2; 0.1365s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.27544s (num_starts 7; 0.0393s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.291938s (num_starts 6; 0.0487s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-trivial.: 0.302921s (num_starts 33; 0.0092s/start)
parse_cvc4_model.: 0.305698s (num_starts 69; 0.0044s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.309074s (num_starts 5; 0.0618s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.324563s (num_starts 14; 0.0232s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.335678s (num_starts 6; 0.0559s/start)
decide_hoare_triple_helper;per-query-type;ub-unsigned.: 0.336233s (num_starts 15; 0.0224s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.369347s (num_starts 80; 0.0046s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.381878s (num_starts 1; 0.3819s/start)
decide_hoare_triple_helper;per-query-type;ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.381882s (num_starts 1; 0.3819s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.381885s (num_starts 1; 0.3819s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-signed;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.381889s (num_starts 1; 0.3819s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-signed.: 0.381896s (num_starts 1; 0.3819s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;ub-signed.: 0.381899s (num_starts 1; 0.3819s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);ub-signed.: 0.381905s (num_starts 1; 0.3819s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.38767s (num_starts 292; 0.0013s/start)
check_wfconds_on_edge.: 0.39058s (num_starts 14; 0.0279s/start)
decide_hoare_triple_helper;per-query-type;ub-signed.: 0.394347s (num_starts 2; 0.1972s/start)
guarded_predicate_set_and.: 0.408086s (num_starts 191; 0.0021s/start)
apply_mask_and_overlay_array_constant.: 0.409586s (num_starts 292; 0.0014s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.414866s (num_starts 80; 0.0052s/start)
invariant_inference_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.: 0.432725s (num_starts 3; 0.1442s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.463931s (num_starts 2; 0.2320s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.463939s (num_starts 2; 0.2320s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.463943s (num_starts 2; 0.2320s/start)
parse_yices_model.: 0.470963s (num_starts 74; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.471892s (num_starts 7; 0.0674s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;linear.: 0.471909s (num_starts 7; 0.0674s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.478704s (num_starts 9; 0.0532s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 0.504756s (num_starts 3; 0.1683s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 0.506518s (num_starts 28; 0.0181s/start)
parse_z3_model.: 0.510153s (num_starts 76; 0.0067s/start)
decide_hoare_triple_helper;-trivial.: 0.524636s (num_starts 80; 0.0066s/start)
check_preds_on_edge_compositions.: 0.535448s (num_starts 17; 0.0315s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.535618s (num_starts 2; 0.2678s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.535631s (num_starts 2; 0.2678s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown;-all-proof-path-optimizations.: 0.535655s (num_starts 2; 0.2678s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.535667s (num_starts 2; 0.2678s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.561293s (num_starts 10; 0.0561s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;pred-type-unknown.: 0.561329s (num_starts 10; 0.0561s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.566095s (num_starts 12; 0.0472s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.74274s (num_starts 1; 0.7427s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.742747s (num_starts 1; 0.7427s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.742748s (num_starts 1; 0.7427s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.742754s (num_starts 1; 0.7428s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1;dst_edge_composition_proves_false.: 0.742759s (num_starts 1; 0.7428s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.742764s (num_starts 1; 0.7428s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 0.742912s (num_starts 1; 0.7429s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.742913s (num_starts 1; 0.7429s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 0.742918s (num_starts 1; 0.7429s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 0.742919s (num_starts 1; 0.7429s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.754726s (num_starts 4; 0.1887s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;pred-type-unknown.: 0.754744s (num_starts 4; 0.1887s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);pred-type-unknown.: 0.754769s (num_starts 4; 0.1887s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.: 0.759511s (num_starts 3; 0.2532s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.78506s (num_starts 341; 0.0023s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.812628s (num_starts 3; 0.2709s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(epsilon).: 0.812715s (num_starts 3; 0.2709s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 0.852993s (num_starts 3; 0.2843s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.869785s (num_starts 1; 0.8698s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.869786s (num_starts 1; 0.8698s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 0.869814s (num_starts 1; 0.8698s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2;dst_edge_composition_proves_false.: 0.869819s (num_starts 1; 0.8698s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.937623s (num_starts 3; 0.3125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.937638s (num_starts 3; 0.3125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 0.962997s (num_starts 7; 0.1376s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;linear.: 0.963018s (num_starts 7; 0.1376s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.09068s (num_starts 5; 0.2181s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.13364s (num_starts 2; 0.5668s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);dst_edge_composition_proves_false.: 1.13371s (num_starts 2; 0.5669s/start)
read_counter_examples_from_channel.: 1.30053s (num_starts 74; 0.0176s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.3382s (num_starts 8; 0.1673s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(epsilon).: 1.37997s (num_starts 11; 0.1255s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;pred-type-unknown;-all-proof-path-optimizations.: 1.5108s (num_starts 2; 0.7554s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 1.51081s (num_starts 2; 0.7554s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B1;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 1.53968s (num_starts 8; 0.1925s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B1;pred-type-unknown.: 1.53971s (num_starts 8; 0.1925s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.56511s (num_starts 5; 0.3130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.56514s (num_starts 5; 0.3130s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 1.64646s (num_starts 9; 0.1829s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;linear.: 1.64648s (num_starts 9; 0.1829s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown;-all-proof-path-optimizations.: 1.64757s (num_starts 2; 0.8238s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 1.64758s (num_starts 2; 0.8238s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 1.68596s (num_starts 29; 0.0581s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A2.B2;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 1.93148s (num_starts 10; 0.1931s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A2.B2;pred-type-unknown.: 1.93152s (num_starts 10; 0.1932s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.13416s (num_starts 4; 0.5335s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 2.13426s (num_starts 4; 0.5336s/start)
decide_hoare_triple.: 2.18645s (num_starts 6; 0.3644s/start)
dst_edge_composition_proves_false.: 2.1948s (num_starts 4; 0.5487s/start)
get_next_dst_edge_composition_to_correlate.: 2.20576s (num_starts 5; 0.4412s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.36621s (num_starts 5; 0.4732s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.36624s (num_starts 5; 0.4732s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.36626s (num_starts 5; 0.4733s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;foo.A1.B1;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 2.37696s (num_starts 6; 0.3962s/start)
decide_hoare_triple_helper;per-graph-per-query-type;foo.A1.B1;linear.: 2.37698s (num_starts 6; 0.3962s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);linear.: 2.37702s (num_starts 6; 0.3962s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.43115s (num_starts 7; 0.3473s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.: 2.4321s (num_starts 3; 0.8107s/start)
ce_reconcile_sorts_and_values.: 2.4768s (num_starts 219; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.50268s (num_starts 8; 0.3128s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);linear.: 2.65062s (num_starts 18; 0.1473s/start)
invariant_inference_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 2.71685s (num_starts 7; 0.3881s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.97802s (num_starts 17; 0.1752s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);-all-proof-path-optimizations.: 3.15833s (num_starts 4; 0.7896s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown;-all-proof-path-optimizations.: 3.15834s (num_starts 4; 0.7896s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lwhile.cond%1%bbentry;(L0%0%d_Lwhile.cond%1%bbentry=>L0%0%d_Lwhile.cond%1%bbentry).: 3.21526s (num_starts 16; 0.2010s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.: 3.49071s (num_starts 7; 0.4987s/start)
decide_hoare_triple_helper;per-path-and-query-type;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry);pred-type-unknown.: 3.52885s (num_starts 20; 0.1764s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 4.46229s (num_starts 8; 0.5578s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 4.4626s (num_starts 8; 0.5578s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 4.91577s (num_starts 41; 0.1199s/start)
decide_hoare_triple_helper;per-query-type;linear;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.33286s (num_starts 15; 0.3555s/start)
decide_hoare_triple_helper;per-query-type;linear.: 5.52456s (num_starts 36; 0.1535s/start)
query:smt.: 5.59093s (num_starts 130; 0.0430s/start)
decide_hoare_triple_helper;per-path;L3%5%bbentry_Lwhile.cond%1%bbentry;(L3%5%bbentry_Lwhile.cond%1%bbentry=>L3%5%bbentry_Lwhile.cond%1%bbentry).: 6.44086s (num_starts 54; 0.1193s/start)
spawn_smt_query.: 6.89323s (num_starts 130; 0.0530s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 8.95175s (num_starts 43; 0.2082s/start)
solver_provable.: 11.5673s (num_starts 191; 0.0606s/start)
solver_satisfiable-cache-miss.: 11.596s (num_starts 130; 0.0892s/start)
solver_satisfiable.: 11.5984s (num_starts 192; 0.0604s/start)
expr_is_provable.: 11.6457s (num_starts 191; 0.0610s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 11.6503s (num_starts 191; 0.0610s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 11.6609s (num_starts 191; 0.0611s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 11.6755s (num_starts 191; 0.0611s/start)
update_invariant_state_for_edges.: 12.0023s (num_starts 8; 1.5003s/start)
cg_check_new_cg_ec.: 12.016s (num_starts 8; 1.5020s/start)
correl_entry_apply.: 12.0163s (num_starts 8; 1.5020s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 12.0925s (num_starts 191; 0.0633s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 12.1122s (num_starts 191; 0.0634s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 12.1158s (num_starts 191; 0.0634s/start)
is_expr_equal_using_lhs_set_and_precond.: 12.7779s (num_starts 80; 0.1597s/start)
prove.: 12.7785s (num_starts 80; 0.1597s/start)
prove_spawn_and_join_helper.: 12.7789s (num_starts 80; 0.1597s/start)
prove_spawn_and_join.: 13.4506s (num_starts 80; 0.1681s/start)
prove_wrapper.proof_query_not_trivial.: 13.4597s (num_starts 80; 0.1682s/start)
prove_wrapper.: 13.531s (num_starts 131; 0.1033s/start)
decide_hoare_triple_check_ub.: 13.7177s (num_starts 131; 0.1047s/start)
decide_hoare_triple_helper.: 13.9435s (num_starts 131; 0.1064s/start)
decide_hoare_triple_with_alias_cons.: 14.1579s (num_starts 131; 0.1081s/start)
expandProductCFG.: 14.228s (num_starts 9; 1.5809s/start)
bestFirstSearch.: 14.5797s (num_starts 1; 14.5797s/start)
Time taken for equivalence check.: 14.8141s (num_starts 1; 14.8141s/start)

counters:
# of Paths Prunned through CE propagation.: 1
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 1
# of paths enumerated.: 16
# of paths expanded.: 8
# of queries to linear solver.: 47
# of smt-solver-queries.: 130
L0%0%d=>Lwhile.cond%1%bbentry-src_ecs.: 3
L0%0%d=>Lwhile.cond%1%bbentry-src_to_pcs.: 3
Lwhile.cond%1%bbentry=>E0%0%d-src_ecs.: 1
Lwhile.cond%1%bbentry=>E0%0%d-src_to_pcs.: 1
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_ecs.: 2
Lwhile.cond%1%bbentry=>Lwhile.cond%1%bbentry-src_to_pcs.: 1
num-backtrackings.: 4
removed-siblings.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 0
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.iters.: 5
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 3
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 7
smallest_point_cover_xfer.dst-branches-const-ineq.input.dst.llvm-%l.addr.0.Lwhile.cond%1%bbentry.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 7
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 6
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 9
smallest_point_cover_xfer.expr-group-bvs.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 13
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 8
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 5
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.iters.: 4
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lwhile.cond%1%bbentry.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.iters.: 11
smallest_point_cover_xfer.spec-coupling-invariants.from.L3%5%bbentry_Lwhile.cond%1%bbentry.prove_queries.: 8
smt-queries-cache-hits.: 62
smt-queries-cvc4-sat.: 69
smt-queries-yices-sat.: 74
smt-queries-z3-sat.: 76
total-correlation-possibilities.: 8
total-correlation-possibilities-mod-lsprels.: 8
total-correlations-explored.: 9

flags:
dst-aloc.: 0
dst-edges.: 6
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 5
final-CG-counterexamples-total-at-L3%5%bbentry_Lwhile.cond%1%bbentry.: 12
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 3
final-CG-num-invariants.: 6
final-CG-super-edges.: 0
src-edges.: 6
src-nodes.: 6
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 5.95
final-CG-time-to-total-time-ratio.: 0.41
query-time-to-total-time-ratio.: 0.38

Context stats:
exprs: count: 154057
sorts: count: 10899
num_proof_queries: 80
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	11745
	        hit ratio:	0.984589
m_simplify_solver:
	----------- total:	2194
	        hit ratio:	0.81814
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	188
	        hit ratio:	0.765957
m_z3_solver_substitution:
	----------- total:	399
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	399
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	60
	        hit ratio:	0.983333
m_expr_size:
	----------- total:	6795
	        hit ratio:	0.924356
m_contains_only_constants_or_sp_versions:
	----------- total:	12
	        hit ratio:	0.833333
m_expr_evaluates_to_constant_visitor:
	----------- total:	18467
	        hit ratio:	0.657768
m_sort_dfa_canonicalize:
	----------- total:	324494
	        hit ratio:	0.983377
m_expr_convert_to_iexpr:
	----------- total:	5011
	        hit ratio:	0.679505

z3_solver expr_query_cache entry size: 130
	----------- total:	192
	             hits:	62
	        hit ratio:	0.322917
histogram (time taken by solver in ms):
[  2.8290,   4.3675) (avg.   3.9521)     : 17
[  4.3675,   6.7428) (avg.   5.6237)     : 33
[  6.7428,  10.4099) (avg.   7.4045)     : 6
[ 10.4099,  16.0713) (avg.   0.0000)     : 0
[ 16.0713,  24.8117) (avg.  21.5144)     : 9
[ 24.8117,  38.3055) (avg.  31.4611)     : 18
[ 38.3055,  59.1380) (avg.  43.0708)     : 24
[ 59.1380,  91.3001) (avg.  70.6882)     : 4
[ 91.3001, 140.9536) (avg. 135.6170)     : 2
[140.9536, 217.6110) (avg. 173.2206)     : 17
min number of quantifiers in query: 0
max number of quantifiers in query: 0
histogram (number of nodes in z3 ast)
[ 40, 104) (avg.  77)                    : 23
[104, 168) (avg. 145)                    : 36
[168, 231) (avg. 188)                    : 34
[231, 295) (avg. 259)                    : 13
[295, 358) (avg. 322)                    : 9
[358, 422) (avg. 384)                    : 6
[422, 486) (avg. 438)                    : 4
[486, 549) (avg. 537)                    : 1
[549, 613) (avg.   0)                    : 0
[613, 676) (avg. 644)                    : 4
Top 10 highest time taking queries:
1. [0.217s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
2. [0.203s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.10
3. [0.196s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L3%5%bbentry_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL3%5%b.0
4. [0.193s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
5. [0.192s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.dst_edge_composition_proves_false.CGfromPC.L0%0%d_Lwhile.cond%1%bbentry.dstToPC.Lwhile.cond%1%bbentry.from_pcL0%0%d_Lwhil.0
6. [0.185s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.2
7. [0.183s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-8-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
8. [0.180s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-2-free_var_idx.2.from_pcL0%0%d_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.0
9. [0.176s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.1
10. [0.174s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL3%5%bbentry_Lwhile.cond%1%bbentry.cond_apply_set_elem0_of_1.8

<MSG>0:38 : Successfully computed equivalence for function: foo.</MSG>

tfg_edge_expr_wp_fn: num_starts 111 time spent: 0:0:0 [0.002791s total; 0.000025 per start]
tfg_computeWP: num_starts 670 time spent: 0:0:0 [0.149442s total; 0.000223 per start]
tfg_get_simplified_to_state_for_edge: num_starts 1623 time spent: 0:0:0 [0.002734s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 1359 time spent: 0:0:0 [0.002343s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 661 time spent: 0:0:0 [0.001161s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 50 time spent: 0:0:0 [0.115552s total; 0.002311 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 14 time spent: 0:0:0 [0.195625s total; 0.013973 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 274 time spent: 0:0:0 [0.209983s total; 0.000766 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 109 time spent: 0:0:0 [0.114393s total; 0.001049 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 248 time spent: 0:0:0 [0.171170s total; 0.000690 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 1843 time spent: 0:0:0 [0.267882s total; 0.000145 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 248 time spent: 0:0:0 [0.023628s total; 0.000095 per start]
tfg_graph_get_vars_written_on_edge: num_starts 248 time spent: 0:0:0 [0.010166s total; 0.000041 per start]
cg_with_rank_add_CE_at_pc: num_starts 64 time spent: 0:0:0 [0.098987s total; 0.001547 per start]
graph_with_ce_add_CE_at_pc: num_starts 30 time spent: 0:0:0 [0.000585s total; 0.000019 per start]
graph_with_guessing_add_CE_at_pc: num_starts 64 time spent: 0:0:0 [0.098372s total; 0.001537 per start]
point_set_add_point_using_CE: num_starts 141 time spent: 0:0:0 [0.026066s total; 0.000185 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 141 time spent: 0:0:0 [0.026498s total; 0.000188 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 50 time spent: 0:0:0 [0.064594s total; 0.001292 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 50 time spent: 0:0:0 [0.037257s total; 0.000745 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3602 time spent: 0:0:0 [0.290846s total; 0.000081 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 165 time spent: 0:0:0 [0.015219s total; 0.000092 per start]
expr_simplify_solver: num_starts 2254 time spent: 0:0:0 [0.169064s total; 0.000075 per start]
expr_simplify_syntactic: num_starts 2300 time spent: 0:0:0 [0.544727s total; 0.000237 per start]
expr_simplify_select_on_store: num_starts 194 time spent: 0:0:0 [0.505601s total; 0.002606 per start]
expr_simplify_using_lhs_set_helper: num_starts 405 time spent: 0:0:0 [0.809605s total; 0.001999 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 3841 time spent: 0:0:0 [0.805053s total; 0.000210 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 2871 time spent: 0:0:0 [0.012907s total; 0.000004 per start]
expr_simplify_eq: num_starts 798 time spent: 0:0:0 [0.007953s total; 0.000010 per start]
expr_simplify_or: num_starts 4 time spent: 0:0:0 [0.000004s total; 0.000001 per start]
expr_simplify_and: num_starts 191 time spent: 0:0:0 [0.001415s total; 0.000007 per start]
expr_simplify_not: num_starts 50 time spent: 0:0:0 [0.000184s total; 0.000004 per start]
expr_simplify_implies: num_starts 191 time spent: 0:0:0 [0.001712s total; 0.000009 per start]
expr_simplify_ite: num_starts 83 time spent: 0:0:0 [0.004271s total; 0.000051 per start]
canonicalize_expr_tree: num_starts 434 time spent: 0:0:0 [0.043516s total; 0.000100 per start]
expr_simplify_memalloc_using_memlabel: num_starts 187 time spent: 0:0:0 [0.000568s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 194 time spent: 0:0:0 [0.500251s total; 0.002579 per start]
get_arithmetic_addsub_atoms: num_starts 4414 time spent: 0:0:0 [0.002074s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 1061 time spent: 0:0:0 [0.010692s total; 0.000010 per start]
expr_is_consts_struct_constant: num_starts 405 time spent: 0:0:0 [0.000300s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 12071 time spent: 0:0:0 [0.601574s total; 0.000050 per start]
expr_do_simplify_helper_cache: num_starts 12071 time spent: 0:0:0 [0.011016s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 22 time spent: 0:0:0 [0.000003s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 22 time spent: 0:0:0 [0.000074s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 1080 time spent: 0:0:0 [0.282815s total; 0.000262 per start]
array_constant_equals: num_starts 51084 time spent: 0:0:0 [0.059395s total; 0.000001 per start]
sort_dfa_canonical: num_starts 467281 time spent: 0:0:1 [1.930999s total; 0.000004 per start]
expr_convert_to_iexpr: num_starts 5020 time spent: 0:0:2 [2.096491s total; 0.000418 per start]
combo_dfa_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.126257s total; 0.005261 per start]
alias_val_xfer_and_meet: num_starts 24 time spent: 0:0:0 [0.082089s total; 0.003420 per start]
get_sprel_map_from_avail_exprs: num_starts 35 time spent: 0:0:0 [0.003335s total; 0.000095 per start]
update_memlabels_for_memslot_locs: num_starts 9 time spent: 0:0:0 [0.000045s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 122 time spent: 0:0:0 [0.043211s total; 0.000354 per start]
compute_simplified_loc_exprs_for_edge: num_starts 287 time spent: 0:0:0 [0.115201s total; 0.000401 per start]
compute_locs_definitely_written_on_edge: num_starts 122 time spent: 0:0:0 [0.000362s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.007008s total; 0.000226 per start]
edge_update_memlabel_map_for_mlvars: num_starts 61 time spent: 0:0:0 [0.014258s total; 0.000234 per start]
add_new_locs_based_on_edge: num_starts 24 time spent: 0:0:0 [0.061545s total; 0.002564 per start]
expand_locset_to_include_slots_for_memmask: num_starts 55 time spent: 0:0:0 [0.000229s total; 0.000004 per start]
total: num_starts 1 time spent: 0:0:44 [44.674956s total; 44.674956 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 15.11s.
ftmap_run_pointsto_analysis.: 0.184897s (num_starts 2; 0.0924s/start)s.
EQ Time after pointsto analysis: 14.9256s.
EQ Time after pointsto analysis and smt_query: 1.39451s.
EQ Time after pointsto analysis and smt_query and bv-solve: 1.38547s.
Equivalence proof found. The programs are equivalent.
