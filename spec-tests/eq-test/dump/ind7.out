argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/eq32
argv[1] = --enable-src-epsilon-paths
argv[2] = --disable-dst-to-src-submap
argv[3] = --disable-assumed-eqclasses
argv[4] = --disable-houdini-axiom-based-timeout-dumps
argv[5] = --houdini-axiom-based-smt-query-timeout=20
argv[6] = --dyn-debug=invariants_dump
argv[7] = --tmpdir-path=par_tmpdir
argv[8] = --proof=ind7.proof
argv[9] = --spec-iospecs=ind7.iospecs
argv[10] = ind7.spec
argv[11] = ind7.c
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
Query dir: /tmp/smt-solver-tmp-files/indrajit.1507087
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/indrajit/scratch/tests/eq-test/ind7.c
argv[10] = -o
argv[11] = par_tmpdir/ind7.c.bc.tmp
argv[12] = -m32

/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: warning: implicitly declaring library function 'malloc' with type 'void *(unsigned int)' [-Wimplicit-function-declaration]
  list* node = malloc(sizeof(list));
               ^
/home/indrajit/scratch/tests/eq-test/ind7.c:7:16: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
1 warning generated.
argv[0] = /home/indrajit/scratch/repos/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --dyn-debug=invariants_dump
argv[2] = --xml-output-format
argv[3] = text-color
argv[4] = -f
argv[5] = ALL
argv[6] = --call-context-depth
argv[7] = 0
argv[8] = --always-use-call-context-any
argv[9] = --src-etfg
argv[10] = par_tmpdir/ind7.spec.etfg
argv[11] = par_tmpdir/ind7.c.bc
argv[12] = -o
argv[13] = par_tmpdir/ind7.c.dst.etfg
print_debug_class_levels 76: printing debug_class_levels:
invariants_dump -> 1
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function make_node</MSG>

tfg_get_simplified_edge_cond_for_edge: num_starts 38 time spent: 0:0:0 [0.000078s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 43 time spent: 0:0:0 [0.000067s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 458 time spent: 0:0:0 [0.006430s total; 0.000014 per start]
expr_simplify_solver: num_starts 484 time spent: 0:0:0 [0.031675s total; 0.000065 per start]
expr_simplify_syntactic: num_starts 484 time spent: 0:0:0 [0.235832s total; 0.000487 per start]
expr_simplify_select_on_store: num_starts 3 time spent: 0:0:0 [0.011305s total; 0.003768 per start]
expr_simplify_store_on_store: num_starts 52 time spent: 0:0:0 [0.005919s total; 0.000114 per start]
expr_simplify_using_lhs_set_helper: num_starts 175 time spent: 0:0:0 [0.285966s total; 0.001634 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 1389 time spent: 0:0:0 [0.284659s total; 0.000205 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 170 time spent: 0:0:0 [0.000835s total; 0.000005 per start]
expr_simplify_eq: num_starts 48 time spent: 0:0:0 [0.000688s total; 0.000014 per start]
expr_simplify_or: num_starts 8 time spent: 0:0:0 [0.000012s total; 0.000002 per start]
expr_simplify_ite: num_starts 55 time spent: 0:0:0 [0.002774s total; 0.000050 per start]
canonicalize_expr_tree: num_starts 145 time spent: 0:0:0 [0.004091s total; 0.000028 per start]
expr_simplify_memalloc_using_memlabel: num_starts 111 time spent: 0:0:0 [0.000362s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 8 time spent: 0:0:0 [0.011248s total; 0.001406 per start]
memlabels_are_independent: num_starts 52 time spent: 0:0:0 [0.000122s total; 0.000002 per start]
get_arithmetic_addsub_atoms: num_starts 269 time spent: 0:0:0 [0.000136s total; 0.000001 per start]
expr_linear_relation_holds_visit: num_starts 116 time spent: 0:0:0 [0.001834s total; 0.000016 per start]
expr_is_consts_struct_constant: num_starts 103 time spent: 0:0:0 [0.000118s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 1218 time spent: 0:0:0 [0.288210s total; 0.000237 per start]
expr_do_simplify_helper_cache: num_starts 1218 time spent: 0:0:0 [0.001048s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 109 time spent: 0:0:0 [0.000087s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 109 time spent: 0:0:0 [0.000385s total; 0.000004 per start]
array_constant_equals: num_starts 176 time spent: 0:0:0 [0.000416s total; 0.000002 per start]
sort_dfa_canonical: num_starts 145562 time spent: 0:0:1 [1.265189s total; 0.000009 per start]
expr_convert_to_iexpr: num_starts 49 time spent: 0:0:0 [0.006631s total; 0.000135 per start]
combo_dfa_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.148292s total; 0.007805 per start]
alias_val_xfer_and_meet: num_starts 19 time spent: 0:0:0 [0.130675s total; 0.006878 per start]
get_sprel_map_from_avail_exprs: num_starts 34 time spent: 0:0:0 [0.002678s total; 0.000079 per start]
update_memlabels_for_memslot_locs: num_starts 14 time spent: 0:0:0 [0.000072s total; 0.000005 per start]
populate_gen_and_kill_sets_for_edge: num_starts 38 time spent: 0:0:0 [0.005110s total; 0.000134 per start]
compute_simplified_loc_exprs_for_edge: num_starts 138 time spent: 0:0:0 [0.215127s total; 0.001559 per start]
compute_locs_definitely_written_on_edge: num_starts 38 time spent: 0:0:0 [0.000042s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 31 time spent: 0:0:0 [0.039618s total; 0.001278 per start]
edge_update_memlabel_map_for_mlvars: num_starts 19 time spent: 0:0:0 [0.000979s total; 0.000052 per start]
add_new_locs_based_on_edge: num_starts 19 time spent: 0:0:0 [0.022151s total; 0.001166 per start]
expand_locset_to_include_slots_for_memmask: num_starts 31 time spent: 0:0:0 [0.000268s total; 0.000009 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
alias_val_t::constructor_with_map_arg.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_paths_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.spec.make_node.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_populate_assumes_around_edge.: 1e-06s (num_starts 1; 0.0000s/start)
remove_function_name_from_symbols.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 2e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.spec.make_node.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.spec.make_node.: 8e-06s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 1.6e-05s (num_starts 1; 0.0000s/start)
get_intersected_lr_status.: 2.1e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 2.8e-05s (num_starts 1; 0.0000s/start)
populate_memlabel_map.visit2.calling.compute_lr_status_for_expr.: 3.6e-05s (num_starts 2; 0.0000s/start)
get_lr_status_for_loc_ids.: 3.9e-05s (num_starts 5; 0.0000s/start)
context_constructor.solver.: 4e-05s (num_starts 1; 0.0000s/start)
expr_is_callee_save_const.: 4.1e-05s (num_starts 39; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 4.1e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 4.9e-05s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 5.8e-05s (num_starts 35; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 6.9e-05s (num_starts 7; 0.0000s/start)
populate_transitive_closure.: 7.8e-05s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 8.9e-05s (num_starts 57; 0.0000s/start)
main.3.: 0.0001s (num_starts 1; 0.0001s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.000117s (num_starts 2; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000125s (num_starts 2; 0.0001s/start)
lr_status_meet.: 0.000138s (num_starts 34; 0.0000s/start)
compute_sprel_relations.: 0.000143s (num_starts 1; 0.0001s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000145s (num_starts 10; 0.0000s/start)
propagate_sprels.: 0.000153s (num_starts 1; 0.0002s/start)
expr_represents_llvm_undef.: 0.000182s (num_starts 41; 0.0000s/start)
compute_reachable_memlabels_map.: 0.000183s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::meet.: 0.000191s (num_starts 326; 0.0000s/start)
graph_locs_add_all_specvars.: 0.000194s (num_starts 1; 0.0002s/start)
graph_locs_add_all_indvars.: 0.000202s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.00021s (num_starts 19; 0.0000s/start)
populate_locid2expr_map.: 0.000212s (num_starts 2; 0.0001s/start)
graph_locs_add_exvregs_for_edge.: 0.000217s (num_starts 19; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000233s (num_starts 1; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000252s (num_starts 19; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000263s (num_starts 1; 0.0003s/start)
graph_locs_add_all_local_vars.: 0.000269s (num_starts 1; 0.0003s/start)
populate_memlabel_map.visit2.update_callee_memlabels.: 0.000293s (num_starts 2; 0.0001s/start)
def_analysis::xfer_and_meet.: 0.000311s (num_starts 38; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000353s (num_starts 1; 0.0004s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000363s (num_starts 19; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.000393s (num_starts 32; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000428s (num_starts 19; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.000491s (num_starts 232; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.00054s (num_starts 1; 0.0005s/start)
graph_locs_add_all_llvmvars.: 0.000649s (num_starts 1; 0.0006s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.000674s (num_starts 1; 0.0007s/start)
graph_with_locs_constructor.src.spec.make_node.: 0.00073s (num_starts 1; 0.0007s/start)
create_closure_matrix.: 0.000733s (num_starts 33; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.000839s (num_starts 1; 0.0008s/start)
populate_dominator_and_postdominator_relations.: 0.000853s (num_starts 2; 0.0004s/start)
tfg::collect_assumes_around_edge.: 0.000918s (num_starts 43; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.000951s (num_starts 19; 0.0001s/start)
canonicalize_llvm_nextpcs.: 0.000953s (num_starts 1; 0.0010s/start)
expr_linear_relation_holds::visit.var.: 0.00105s (num_starts 42; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001481s (num_starts 1; 0.0015s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001637s (num_starts 1; 0.0016s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.001639s (num_starts 19; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001732s (num_starts 1; 0.0017s/start)
compute_z3_expr.: 0.001775s (num_starts 141; 0.0000s/start)
tfg::populate_loc_definedness.before_solve.: 0.001982s (num_starts 2; 0.0010s/start)
tfg::populate_loc_definedness.before_initialize.: 0.002313s (num_starts 2; 0.0012s/start)
graph_with_predicates_constructor.src.spec.make_node.: 0.002363s (num_starts 1; 0.0024s/start)
tfg::populate_loc_definedness.: 0.002452s (num_starts 2; 0.0012s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.002616s (num_starts 19; 0.0001s/start)
graph_identify_back_edges.: 0.002694s (num_starts 6; 0.0004s/start)
graph_identify_natural_loops.: 0.002722s (num_starts 6; 0.0005s/start)
populate_branch_affecting_locs.: 0.002981s (num_starts 2; 0.0015s/start)
find_dominators.: 0.003234s (num_starts 10; 0.0003s/start)
avail_exprs_create_submap.: 0.003327s (num_starts 57; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.003566s (num_starts 33; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.003617s (num_starts 19; 0.0002s/start)
graph_visit_exprs.: 0.004496s (num_starts 4; 0.0011s/start)
graph_with_aliasing_constructor.src.spec.make_node.: 0.004863s (num_starts 1; 0.0049s/start)
compute_regions.: 0.004877s (num_starts 6; 0.0008s/start)
graph_with_simplified_assets_constructor.src.spec.make_node.: 0.005306s (num_starts 1; 0.0053s/start)
query:convert_from_z3.: 0.00548s (num_starts 141; 0.0000s/start)
tfg_constructor.src.spec.make_node.after_transitive_closure.: 0.006429s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.make_node.post_parsing.: 0.006434s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.make_node.after_string_contents.: 0.006439s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.make_node.after_compute_max_memlabel_varnum.: 0.006445s (num_starts 1; 0.0064s/start)
tfg_constructor.src.spec.make_node.: 0.006449s (num_starts 1; 0.0064s/start)
graph_with_edge_structures_constructor.src.spec.make_node.: 0.006508s (num_starts 1; 0.0065s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.007172s (num_starts 19; 0.0004s/start)
query:convert_to_z3.: 0.007665s (num_starts 141; 0.0001s/start)
graph_to_stream.: 0.009131s (num_starts 1; 0.0091s/start)
tfg_preprocess.dst.llvm.make_node.: 0.011351s (num_starts 1; 0.0114s/start)
tfg::tfg_preprocess.: 0.011354s (num_starts 1; 0.0114s/start)
main.2.: 0.016112s (num_starts 1; 0.0161s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.016163s (num_starts 458; 0.0000s/start)
query:simplify-z3.: 0.017277s (num_starts 285; 0.0001s/start)
get_tfg.: 0.01826s (num_starts 1; 0.0183s/start)
get_function_tfg_map.make_node.: 0.018335s (num_starts 1; 0.0183s/start)
get_function_tfg_map.: 0.018338s (num_starts 1; 0.0183s/start)
populate_simplified_to_state.: 0.025607s (num_starts 3; 0.0085s/start)
populate_simplified_assets.: 0.031745s (num_starts 6; 0.0053s/start)
compute_lr_status_for_expr.: 0.057399s (num_starts 45; 0.0013s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.057474s (num_starts 31; 0.0019s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.057535s (num_starts 31; 0.0019s/start)
populate_locs_potentially_modified_on_edge.: 0.060279s (num_starts 3; 0.0201s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.060461s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.061186s (num_starts 458; 0.0001s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.068374s (num_starts 458; 0.0001s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.092043s (num_starts 3; 0.0307s/start)
compute_new_lr_status_on_locs.: 0.107296s (num_starts 19; 0.0056s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.130729s (num_starts 19; 0.0069s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.138099s (num_starts 38; 0.0036s/start)
populate_loc_liveness.: 0.144988s (num_starts 2; 0.0725s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.148324s (num_starts 19; 0.0078s/start)
tfg_postprocess_after_pointsto_analysis.: 0.243077s (num_starts 1; 0.2431s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.247412s (num_starts 1; 0.2474s/start)
expr_do_simplify_using_lhs_set_and_precond.: 0.28622s (num_starts 175; 0.0016s/start)
ftmap_run_pointsto_analysis.: 0.403177s (num_starts 1; 0.4032s/start)
parse_consts_db.: 7.21804s (num_starts 1; 7.2180s/start)
main.: 7.68685s (num_starts 1; 7.6868s/start)

counters:

flags:

info:


<MSG>0:00 : Converting Spec to Transfer Function Graph (TFG)...</MSG>
<MSG>0:07 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:14 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:22 : Searching for equivalence at unroll factor 1</MSG>
<MSG>0:22 : Reading in SPEC-LLVM I/O specification from file ind7.iospecs...</MSG>
<MSG>0:22 : Computing equivalence for function: make_node...</MSG>
<MSG>0:22 : Constructing SSA for SPEC TFG...</MSG>
<MSG>0:22 : Constructing SSA for LLVM TFG...</MSG>
<MSG>0:23 : Finished SSA construction for both TFGs...</MSG>
<MSG>0:23 : Computing equivalence of the two TFGs ( SPEC and LLVM )...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:23 : product-TFG make_node: Enumerating correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Considering 1 paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG make_node: Found 1 correlations for L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}] starting at L0%0%d_L0%0%d
</MSG>
<MSG>0:23 : product-TFG make_node created 1 possibilities in group make_node.A...</MSG>
<MSG>0:23 : Chose (for CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:23 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1...</MSG>
<MSG>0:23 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1...</MSG>
<MSG>0:23 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart
</MSG>
<MSG>0:23 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
<MSG>0:23 : Adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Updating dst fcall edge using src fcall edge for toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Adding node L0%0%d_Lentry%1%fcallStart to the product-TFG...</MSG>
<MSG>0:23 : make_node.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Found no alloca-ptrs on edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Adding edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:23 : make_node.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:23 : make_node.A1: Propagated 2 out of 2 counter-examples across edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart</MSG>
<MSG>0:23 : make_node.A1: Added the 2 propagated CEs at PC L0%0%d_Lentry%1%fcallStart and propagated further.
</MSG>
<MSG>0:23 : make_node.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:23 : make_node.A1: Finished executing CG's add edge function...</MSG>
<MSG>0:23 : make_node.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding new edge to the product-TFG make_node.A1 for fromPC L0%0%d_L0%0%d and toPC L0%0%d_Lentry%1%fcallStart, src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart...</MSG>
<MSG>0:23 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path L0%0%d --> Lentry%1%fcallStart</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7


<MSG>0:23 : Added correlation to the product-TFG make_node.A1 (d:0, s:0, sp: 0) and created a correlation entry...</MSG>
<MSG>0:23 : Chose (after CE propagation) product-TFG make_node.A1 (d:0, s:0, sp: 0) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 1 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>Lentry%1%fcallStart[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7


<MSG>0:23 : make_node.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart and other downstream edges that change due to it...</MSG>
<MSG>0:23 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart...</MSG>
<MSG>0:23 : make_node.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : make_node.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: unchanged</MSG>
<MSG>0:23 : make_node.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>0:23 : make_node.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart) ...</MSG>
<MSG>0:23 : make_node.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:23 : make_node.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:23 : make_node.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:25 : make_node.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>0:25 : make_node.A1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart)...</MSG>
<MSG>0:27 : make_node.A1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7


<MSG>0:27 : make_node.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed ...</MSG>
<MSG>0:27 : make_node.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
make_node.A1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7


<MSG>0:27 : make_node.A1 (d:0, s:0, sp: 0): checked newly added edge and inferred invariants...</MSG>
<MSG>0:27 : make_node.A1 (d:0, s:0, sp: 3): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:28 : product-TFG make_node.A1: Enumerating correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:28 : Considering 1 paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:28 : Attempting correlation of src pathset L0%0%d=>L0%0%d[mu 0, delta {0,0}] as correlation candidate for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:28 : Found 1 feasible correlations for paths to src pc L0%0%d as correlation candidates for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:28 : product-TFG make_node.A1: Found 1 correlations for Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallStart
</MSG>
<MSG>0:28 : product-TFG make_node.A1 created 1 possibilities in group make_node.A1.B...</MSG>
<MSG>0:28 : Chose (for CE propagation) product-TFG make_node.A1.B1 (d:0, s:0, sp: 3) from a frontier of size 1...</MSG>
<cg>
  Edges[1]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
  Nodes[2]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:28 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:28 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1...</MSG>
<MSG>0:28 : Creating ssa-path for the src-tfg path L0%0%d --> L0%0%d ending at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:28 : Adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:28 : Identifying common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd
</MSG>
<MSG>0:28 : Identified no common alloc-deallocs in the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
<MSG>0:28 : Adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Computing loop hoisting select expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Computing loop hoisting non-linear expressions at toPC L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Adding node L0%0%d_Lentry%1%fcallEnd to the product-TFG...</MSG>
<MSG>0:28 : make_node.A1.B1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Adding edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:28 : make_node.A1.B1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:28 : make_node.A1.B1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:28 : make_node.A1.B1: Propagated 5 out of 5 counter-examples across edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd</MSG>
<MSG>0:28 : make_node.A1.B1: Added the 5 propagated CEs at PC L0%0%d_Lentry%1%fcallEnd and propagated further.
</MSG>
<MSG>0:28 : make_node.A1.B1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:28 : make_node.A1.B1: Finished executing CG's add edge function...</MSG>
<MSG>0:28 : make_node.A1.B1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : Done adding new edge to the product-TFG make_node.A1.B1 for fromPC L0%0%d_Lentry%1%fcallStart and toPC L0%0%d_Lentry%1%fcallEnd, src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : Done adding a CG edge composition using the src path L0%0%d --> L0%0%d and dst path Lentry%1%fcallStart --> Lentry%1%fcallEnd</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce101      1.:z3v487.ce106
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106


<MSG>0:28 : Added correlation to the product-TFG make_node.A1.B1 (d:1, s:0, sp: 3) and created a correlation entry...</MSG>
<MSG>0:28 : Chose (after CE propagation) product-TFG make_node.A1.B1 (d:1, s:0, sp: 3) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 5 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallStart=>Lentry%1%fcallEnd[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>L0%0%d[mu 0, delta {0,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    2 preds:
      0.: 0                     ==  input.dst.llvm-%val
      1.: 0                     ==  input.spec-%var-val-0
     is_assumed_eqclass : 0
    2 visited ces:
      0.:z3.ce101      1.:z3v487.ce106
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    3 preds:
      0.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      1.: eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0)))))  ==  true
      2.: false                 ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106


<MSG>0:28 : make_node.A1.B1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd and other downstream edges that change due to it...</MSG>
<MSG>0:28 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd...</MSG>
<MSG>0:28 : make_node.A1.B1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:28 : make_node.A1.B1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: unchanged</MSG>
<MSG>0:28 : make_node.A1.B1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallStart ...</MSG>
<MSG>0:28 : make_node.A1.B1: Relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd) ...</MSG>
<MSG>0:28 : make_node.A1.B1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:28 : make_node.A1.B1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>0:28 : make_node.A1.B1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 3 exprs and 2 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:29 : make_node.A1.B1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>0:29 : make_node.A1.B1: Relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) with 2 exprs and 1 CEs across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd)...</MSG>
<MSG>0:31 : make_node.A1.B1: Done relaxing invariant eqclass spec-coupling-invariants (type HOUDINI_AXIOM_BASED) across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd). changed = 1 proof-stats=dht3-prove_trivial0-prove3...</MSG>
invariants_dump[1] ../../lib/graph/invariant_state.cpp inductive_invariant_xfer_on_incoming_edge_composition 346:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce101      1.:z3v487.ce106      2.:z3.ce130
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106


<MSG>0:31 : make_node.A1.B1: Done relaxing invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed ...</MSG>
<MSG>0:31 : make_node.A1.B1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd), result: changed( 0, 1 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
make_node.A1.B1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 0)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce101      1.:z3v487.ce106      2.:z3.ce130
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106


<MSG>0:31 : make_node.A1.B1 (d:1, s:0, sp: 3): checked newly added edge and inferred invariants...</MSG>
<MSG>0:31 : make_node.A1.B1 (d:1, s:0, sp: 6): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:32 : product-TFG make_node.A1.B1: Enumerating correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:32 : Considering 1 paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:32 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta {1,0}] as correlation candidate for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:32 : Found 1 feasible correlations for paths to src pc E0%0%d as correlation candidates for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:32 : product-TFG make_node.A1.B1: Found 1 correlations for Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}] starting at L0%0%d_Lentry%1%fcallEnd
</MSG>
<MSG>0:32 : product-TFG make_node.A1.B1 created 1 possibilities in group make_node.A1.B1.C...</MSG>
<MSG>0:32 : Chose (for CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 6) from a frontier of size 1...</MSG>
<cg>
  Edges[2]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
  Nodes[3]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloc:

<MSG>0:32 : Finished adding lsprel-assumes for allocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:32 : Finished adding lsprel-assumes for deallocation to the product-TFG make_node.A1.B1.C1...</MSG>
<MSG>0:32 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>0:32 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:32 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d
</MSG>
<MSG>0:32 : Identified no common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
<MSG>0:32 : Adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Getting alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Found no alloca-ptrs on edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Adding edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Propagated 2 out of 8 counter-examples across edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Added the 2 propagated CEs at PC E0%0%d_E0%0%d and propagated further.
</MSG>
<MSG>0:32 : make_node.A1.B1.C1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Finished executing CG's add edge function...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Done computing CG regions after the addition of the edge L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : Done adding new edge to the product-TFG make_node.A1.B1.C1 for fromPC L0%0%d_Lentry%1%fcallEnd and toPC E0%0%d_E0%0%d, src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d...</MSG>
<MSG>0:32 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path Lentry%1%fcallEnd --> E0%0%d</MSG>
invariants_dump[1] ../../lib/eq/correl_entry.cpp corr_graph_add_correlation_and_create_new_correl_entry 84:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce101      1.:z3v487.ce106      2.:z3.ce130
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:32 : Added correlation to the product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 6) and created a correlation entry...</MSG>
<MSG>0:32 : Chose (after CE propagation) product-TFG make_node.A1.B1.C1 (d:1, s:0, sp: 6) from a frontier of size 1...</MSG>
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: Lentry%1%fcallEnd=>E0%0%d[mu 1, delta {1,0}]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta {1,0}]
invariants_dump[1] ../../lib/eq/correlate.cpp find_correlation 290:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce101      1.:z3v487.ce106      2.:z3.ce130
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:32 : make_node.A1.B1.C1: Updating invariants over the newly added edges in edge composition L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>0:32 : Constructed infer_invariants_dfa with initial worklist L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d) ...</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged</MSG>
<MSG>0:32 : make_node.A1.B1.C1: Checking well-formedness assertions on outgoing edges from L0%0%d_Lentry%1%fcallEnd ...</MSG>
<MSG>0:33 : make_node.A1.B1.C1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d), result: unchanged( 0, 0 ) ...</MSG>
invariants_dump[1] ../../lib/eq/corr_graph.cpp cg_check_new_cg_ec 4863:
make_node.A1.B1.C1:
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce101      1.:z3v487.ce106      2.:z3.ce130
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


<MSG>0:33 : make_node.A1.B1.C1 (d:1, s:0, sp: 6): checked newly added edge and inferred invariants...</MSG>
<MSG>0:33 : make_node.A1.B1.C1 (d:1, s:0, sp: 6): Chosen CG is still the most promising correlation entry; proceeding with it...</MSG>
<MSG>0:33 : Chosen product-TFG represents our required correlation graph...</MSG>
<MSG>0:33 : Checking equivalence proof...</MSG>
<MSG>0:34 : Equivalence check passed: product CFG has strong enough inductive invariants...</MSG>
CG invariants =
L0%0%d_L0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):

L0%0%d_Lentry%1%fcallStart: (d:0, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [2]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3v487.ce7      1.:z3.ce25      2.:z3.ce43
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 4-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%2%d, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 5-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce7

L0%0%d_Lentry%1%fcallEnd: (d:1, s:0, sp: 3)
  Invariant state (3 classes):
    eqclass 0:
    smallest point cover name abstract-memlabel-asserts, type HOUDINI_EXPECTS_STABILITY, exprs [1]: 1-->and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap)) ; 
    1 preds:
      0.: and(and(and(and(bvule(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end), eq(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_end, bvadd(input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin, bvadd(4, 4294967295)))), eq(bvand(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, 3), 0)), eq(input.dst.local./*___y___make_node__x__=L0%0%argnum0=/, input.dst.memlabel-mem--local./*___y___make_node__x__=L0%0%argnum0=/_begin)), region_agrees_with_memlabel(input.dst.llvm-mem.alloc, 0, 1, memlabel-mem-may-straddle-symbol.1-heap))  ==  true
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106
    eqclass 1:
    smallest point cover name expr-group-bvs, type BV_EQ, exprs [3]: 2-->input.spec-%var-val-0 ; 3-->input.dst.llvm-%val ; 6-->input.dst.llvm-%call.Lentry%1%fcallEnd ; 
    1 preds:
      0.: bvneg(bvmul(input.spec-%var-val-0, 4294967295))  ==  input.dst.llvm-%val
     is_assumed_eqclass : 0
    3 visited ces:
      0.:z3.ce101      1.:z3v487.ce106      2.:z3.ce130
    eqclass 2:
    smallest point cover name spec-coupling-invariants, type HOUDINI_AXIOM_BASED, exprs [2]: 7-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%call.Lentry%1%fcallEnd, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 8-->eq(input.spec-%tmpvar-3.E0%0%d, ind(1, 1, input.dst.llvm-%val, Indxform0, lambda(Lambda1, select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, bvadd(Lambda1, 4), 4, false)), lambda(Lambda0, sum(ite(eq(0, Lambda0), 0, 1), unit, prod(select(input.dst.llvm-mem.Lentry%1%fcallEnd, input.dst.llvm-mem.alloc, memlabel-top, Lambda0, 4, false), Indxform0))))) ; 
    0 preds:
     is_assumed_eqclass : 0
    1 visited ces:
      0.:z3v487.ce106

E0%0%d_E0%0%d: (d:0, s:0, sp: 0)
  Invariant state (0 classes):


Found equivalence proof. Final CG:
<cg>
  Edges[3]: L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A L0%0%d => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd (C L0%0%d => C L0%0%d at mu 0 delta {0,0}, A line 7 => A line 7 at mu 1 delta {1,0})
            L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d (C L0%0%d => C E0%0%d at mu 1 delta {1,0}, A line 7 => A E0%0%d at mu 1 delta {1,0})
  Nodes[4]: L0%0%d_L0%0%d (C L0%0%d, A L0%0%d)
                L0%0%d_L0%0%d [inductive-invariants] contains 2 counterexamples (for correlating 0 bv exprs)
            L0%0%d_Lentry%1%fcallStart (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallStart [inductive-invariants] contains 5 counterexamples (for correlating 2 bv exprs)
            L0%0%d_Lentry%1%fcallEnd (C L0%0%d, A line 7)
                L0%0%d_Lentry%1%fcallEnd [inductive-invariants] contains 8 counterexamples (for correlating 3 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
EQUIV equivalence check for function make_node. 11.56s, query:smt.: 5.42557s (num_starts 55; 0.0986s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 10.3786s (num_starts 31; 0.3348s/start)ftmap_run_pointsto_analysis.: 1.65898s (num_starts 12; 0.1382s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 2e-06s (num_starts 2; 0.0000s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 3e-06s (num_starts 3; 0.0000s/start)
prune_dst_memslots.: 3e-06s (num_starts 2; 0.0000s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 4e-06s (num_starts 3; 0.0000s/start)
compute_tfg_pred_eqclass.: 5e-06s (num_starts 2; 0.0000s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 8e-06s (num_starts 3; 0.0000s/start)
prove_trivial.: 8e-06s (num_starts 9; 0.0000s/start)
get_paths_with_matching_to_pc.: 1.1e-05s (num_starts 3; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 2e-05s (num_starts 22; 0.0000s/start)
remove_complex_bv_exprs.: 2.3e-05s (num_starts 2; 0.0000s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 2.8e-05s (num_starts 14; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 3.7e-05s (num_starts 2; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 5.1e-05s (num_starts 31; 0.0000s/start)
collect_dst_to_src_submap_preds.: 5.8e-05s (num_starts 31; 0.0000s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{0,0}.: 6.1e-05s (num_starts 17; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 6.2e-05s (num_starts 1; 0.0001s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 7.8e-05s (num_starts 7; 0.0000s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 9.4e-05s (num_starts 22; 0.0000s/start)
proof_query_is_trivial_helper.: 9.4e-05s (num_starts 31; 0.0000s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 9.6e-05s (num_starts 3; 0.0000s/start)
sort_exprs_and_compute_bv_eqclass.: 9.7e-05s (num_starts 2; 0.0000s/start)
ce_perform_memory_fuzzing.: 0.000103s (num_starts 80; 0.0000s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.000103s (num_starts 2; 0.0001s/start)
compute_bv_bool_eqclass.: 0.000109s (num_starts 2; 0.0001s/start)
get_intersected_lr_status.: 0.000156s (num_starts 13; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.000159s (num_starts 5; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000201s (num_starts 13; 0.0000s/start)
removeMostPromising.: 0.000203s (num_starts 10; 0.0000s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.000205s (num_starts 2; 0.0001s/start)
tfg_expr_contains_fcall_mem_on_incoming_edge.tfg.computeWP_for_pred_across_ec.: 0.000268s (num_starts 2; 0.0001s/start)
get_lr_status_for_loc_ids.: 0.000286s (num_starts 60; 0.0000s/start)
expr_is_hidden_reg.: 0.000291s (num_starts 345; 0.0000s/start)
ldr_decomposition.: 0.00031s (num_starts 14; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.000335s (num_starts 1; 0.0003s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000343s (num_starts 35; 0.0000s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.000348s (num_starts 62; 0.0000s/start)
bv_const_ref_map2expr_map.: 0.000354s (num_starts 15; 0.0000s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallEnd.inductive-invariants.: 0.000365s (num_starts 2; 0.0002s/start)
lr_status_meet.: 0.000377s (num_starts 244; 0.0000s/start)
proof_query_is_trivial.: 0.000377s (num_starts 31; 0.0000s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.000382s (num_starts 16; 0.0000s/start)
expr_is_callee_save_const.: 0.000396s (num_starts 357; 0.0000s/start)
construct_linear_combination_exprs.: 0.00041s (num_starts 15; 0.0000s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.000423s (num_starts 62; 0.0000s/start)
graph_with_guessing_sync_preds.: 0.00043s (num_starts 31; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.000447s (num_starts 1; 0.0004s/start)
graph_ec_apply_trans_funs_helper.1.: 0.000462s (num_starts 5; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.000475s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000494s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000497s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000499s (num_starts 1; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000516s (num_starts 1; 0.0005s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 0.000543s (num_starts 58; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000563s (num_starts 14; 0.0000s/start)
get_sprel_map_pair.: 0.000564s (num_starts 36; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.00058s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000585s (num_starts 1; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000587s (num_starts 1; 0.0006s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.000591s (num_starts 28; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.000596s (num_starts 13; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000598s (num_starts 1; 0.0006s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.000617s (num_starts 5; 0.0001s/start)
interesting_wp_exprs_apply_trans_funs.: 0.00064s (num_starts 5; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000646s (num_starts 1; 0.0006s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.000649s (num_starts 3; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities.;-trivial.: 0.000651s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000655s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-trivial.: 0.00066s (num_starts 1; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000662s (num_starts 1; 0.0007s/start)
get_unrolled_loop_paths_from.: 0.000662s (num_starts 2; 0.0003s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);outgoing_edges_cover_all_possibilities..: 0.000667s (num_starts 1; 0.0007s/start)
aliasing_constraints.convert_to_expr.: 0.000675s (num_starts 58; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.000684s (num_starts 1; 0.0007s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 0.000704s (num_starts 45; 0.0000s/start)
determinize_value_expr_map.: 0.00074s (num_starts 544; 0.0000s/start)
check_node_stability_after_CE_addition.: 0.00075s (num_starts 25; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.000799s (num_starts 1445; 0.0000s/start)
corr_graph::get_simplified_non_mem_assumes.: 0.000836s (num_starts 45; 0.0000s/start)
corr_graph_enumerate_correlations.: 0.000844s (num_starts 3; 0.0003s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000872s (num_starts 49; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.000889s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.000894s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-trivial.: 0.000942s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.000945s (num_starts 1; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.00095s (num_starts 1; 0.0009s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.000987s (num_starts 48; 0.0000s/start)
compute_sprel_relations.: 0.000989s (num_starts 12; 0.0001s/start)
collect_aliasing_constaints_starting_at_pc_till_maximal_bbs.: 0.001014s (num_starts 7; 0.0001s/start)
set_result_and_counter_example.: 0.001018s (num_starts 55; 0.0000s/start)
propagate_sprels.: 0.001055s (num_starts 12; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001073s (num_starts 1; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001079s (num_starts 1; 0.0011s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.001084s (num_starts 166; 0.0000s/start)
def_analysis::xfer_and_meet.: 0.001088s (num_starts 127; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001132s (num_starts 1; 0.0011s/start)
graph_locs_add_exvregs_for_edge.: 0.001201s (num_starts 122; 0.0000s/start)
ldr_decompose_and_linear_solve.: 0.001256s (num_starts 14; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.001308s (num_starts 12; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001309s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001312s (num_starts 1; 0.0013s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.001335s (num_starts 2; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.001336s (num_starts 1; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;abstract-memlabel-asserts-houdini-guess.: 0.001343s (num_starts 1; 0.0013s/start)
bv_linear_solve.: 0.001398s (num_starts 14; 0.0001s/start)
graph_locs_add_all_specvars.: 0.001427s (num_starts 12; 0.0001s/start)
query:bv_solve.: 0.001475s (num_starts 14; 0.0001s/start)
graph_locs_add_local_vars_for_edge.: 0.001489s (num_starts 122; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 0.001562s (num_starts 10; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-trivial.: 0.001593s (num_starts 2; 0.0008s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.001597s (num_starts 2; 0.0008s/start)
expr_represents_llvm_undef.: 0.001597s (num_starts 364; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.001597s (num_starts 12; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001613s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001615s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.001623s (num_starts 1; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;abstract-memlabel-asserts-houdini-guess.: 0.001631s (num_starts 1; 0.0016s/start)
predicate_canonicalized.: 0.001631s (num_starts 15; 0.0001s/start)
populate_locid2expr_map.: 0.001654s (num_starts 12; 0.0001s/start)
get_sprel_map_pair_at_pc.: 0.001659s (num_starts 22; 0.0001s/start)
collect_assumes_around_edge.: 0.001704s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities.;-trivial.: 0.001727s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities.;-trivial.: 0.00173s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;outgoing_edges_cover_all_possibilities..: 0.001757s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-query-type;outgoing_edges_cover_all_possibilities..: 0.001773s (num_starts 3; 0.0006s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.001779s (num_starts 1; 0.0018s/start)
get_next_potential_correlations.: 0.00182s (num_starts 3; 0.0006s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.001864s (num_starts 58; 0.0000s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.001865s (num_starts 33; 0.0001s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.001872s (num_starts 122; 0.0000s/start)
bv_solve_returning_intermediate_structures.: 0.001922s (num_starts 14; 0.0001s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.001941s (num_starts 3; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.001955s (num_starts 2; 0.0010s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.00196s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;abstract-memlabel-asserts-houdini-guess.: 0.001985s (num_starts 2; 0.0010s/start)
graph_locs_add_all_llvmvars.: 0.002063s (num_starts 12; 0.0002s/start)
create_closure_matrix.: 0.002077s (num_starts 240; 0.0000s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.: 0.002085s (num_starts 1; 0.0021s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.002099s (num_starts 3; 0.0007s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-trivial.: 0.002182s (num_starts 2; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002188s (num_starts 2; 0.0011s/start)
pth_collect_preds_using_atom_func.: 0.00222s (num_starts 18; 0.0001s/start)
bvsolve_cache_query.miss1.: 0.002242s (num_starts 14; 0.0002s/start)
generate_aliasing_constraints_from_expr.: 0.00225s (num_starts 331; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);abstract-memlabel-asserts-houdini-guess.: 0.002266s (num_starts 2; 0.0011s/start)
bvsolve_cache_query.: 0.002342s (num_starts 14; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002354s (num_starts 175; 0.0000s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.002468s (num_starts 10; 0.0002s/start)
gen_pred_from_coeff_row.simplify.: 0.002476s (num_starts 15; 0.0002s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.002497s (num_starts 3; 0.0008s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.002673s (num_starts 2; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);abstract-memlabel-asserts-houdini-guess.: 0.002737s (num_starts 2; 0.0014s/start)
tfg::collect_assumes_around_edge.: 0.002785s (num_starts 252; 0.0000s/start)
solve_for_bv_points.: 0.002875s (num_starts 14; 0.0002s/start)
tfg_edge_composition_get_assumes.: 0.002877s (num_starts 18; 0.0002s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.002991s (num_starts 126; 0.0000s/start)
parse_yices_model.: 0.003096s (num_starts 1; 0.0031s/start)
graph_locs_add_all_indvars.: 0.003118s (num_starts 12; 0.0003s/start)
identify_address_taken_local_variables.: 0.003324s (num_starts 2; 0.0017s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.003399s (num_starts 14; 0.0002s/start)
cg_src_dst_tfg_copy.: 0.003559s (num_starts 1; 0.0036s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.003641s (num_starts 576; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.003693s (num_starts 28; 0.0001s/start)
update_dst_fcall_edge_using_src_fcall_edge.: 0.003706s (num_starts 1; 0.0037s/start)
parse_cvc4_model.: 0.003711s (num_starts 1; 0.0037s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.003759s (num_starts 28; 0.0001s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.004024s (num_starts 144; 0.0000s/start)
pth_collect_simplified_preds_using_atom_func.: 0.004139s (num_starts 69; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.004169s (num_starts 28; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-trivial.: 0.004254s (num_starts 4; 0.0011s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.004258s (num_starts 42; 0.0001s/start)
collect_inductive_preds_around_path.: 0.004296s (num_starts 31; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 0.0043s (num_starts 12; 0.0004s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 0.004301s (num_starts 3; 0.0014s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.004525s (num_starts 175; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.004691s (num_starts 43; 0.0001s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004865s (num_starts 4; 0.0012s/start)
get_unrolled_paths_from.: 0.004941s (num_starts 19; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.004982s (num_starts 4; 0.0012s/start)
gen_pred_from_coeff_row.: 0.005373s (num_starts 15; 0.0004s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 0.005397s (num_starts 73; 0.0001s/start)
compute_preds_for_bv_points.: 0.005468s (num_starts 9; 0.0006s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.005517s (num_starts 11; 0.0005s/start)
tfg::get_aliasing_constraints_for_edge.: 0.005686s (num_starts 53; 0.0001s/start)
create_sp_version_relations_lattice_at_pc.: 0.005791s (num_starts 240; 0.0000s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 0.005993s (num_starts 87; 0.0001s/start)
tfg::populate_loc_definedness.before_solve.: 0.006135s (num_starts 13; 0.0005s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.006622s (num_starts 58; 0.0001s/start)
lhs_set_sort.: 0.007285s (num_starts 22; 0.0003s/start)
tfg::populate_loc_definedness.before_initialize.: 0.007522s (num_starts 13; 0.0006s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.007537s (num_starts 521; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.007603s (num_starts 12; 0.0006s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007848s (num_starts 1; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.007855s (num_starts 1; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.007859s (num_starts 1; 0.0079s/start)
tfg::populate_loc_definedness.: 0.008019s (num_starts 13; 0.0006s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.008178s (num_starts 58; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-trivial.: 0.008424s (num_starts 2; 0.0042s/start)
expr_linear_relation_holds::visit.var.: 0.008646s (num_starts 373; 0.0000s/start)
populate_transitive_closure.: 0.008858s (num_starts 44; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.009923s (num_starts 1; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.009931s (num_starts 1; 0.0099s/start)
compute_vars_reaching_definitions.: 0.010491s (num_starts 12; 0.0009s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-trivial.: 0.010561s (num_starts 2; 0.0053s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.010662s (num_starts 156; 0.0001s/start)
collect_assumes_around_path_helper.: 0.011507s (num_starts 62; 0.0002s/start)
graph_with_paths::collect_assumes_around_path.: 0.011699s (num_starts 62; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.011752s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.011755s (num_starts 1; 0.0118s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.01176s (num_starts 1; 0.0118s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.011921s (num_starts 96; 0.0001s/start)
counter_example_satisfies_preds.: 0.012061s (num_starts 102; 0.0001s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.012242s (num_starts 2; 0.0061s/start)
simplify_bv_add_atomic.: 0.012388s (num_starts 568; 0.0000s/start)
graph_visit_exprs_and_keys.: 0.012495s (num_starts 12; 0.0010s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.012677s (num_starts 175; 0.0001s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 0.013912s (num_starts 8; 0.0017s/start)
graph_visit_exprs.: 0.016183s (num_starts 23; 0.0007s/start)
populate_locs_potentially_modified_on_edge.: 0.019247s (num_starts 16; 0.0012s/start)
graph_identify_back_edges.: 0.020187s (num_starts 110; 0.0002s/start)
graph_identify_natural_loops.: 0.021096s (num_starts 110; 0.0002s/start)
query:convert_to_z3.: 0.02125s (num_starts 455; 0.0000s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.021378s (num_starts 43; 0.0005s/start)
populate_branch_affecting_locs.: 0.021695s (num_starts 13; 0.0017s/start)
counter_example_falsifies_preds.: 0.02192s (num_starts 27; 0.0008s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.022162s (num_starts 16; 0.0014s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.022224s (num_starts 16; 0.0014s/start)
query:convert_from_z3.: 0.022299s (num_starts 455; 0.0000s/start)
find_dominators.: 0.022348s (num_starts 134; 0.0002s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.024046s (num_starts 19; 0.0013s/start)
collect_aliasing_constraints_around_path_helper.: 0.02521s (num_starts 90; 0.0003s/start)
populate_simplified_to_state.: 0.025401s (num_starts 16; 0.0016s/start)
collect_aliasing_constraints_around_path.: 0.026038s (num_starts 58; 0.0004s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.026173s (num_starts 166; 0.0002s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.027983s (num_starts 166; 0.0002s/start)
graph_to_stream.: 0.028666s (num_starts 4; 0.0072s/start)
edge_composition_apply_trans_funs_on_pred.: 0.029212s (num_starts 31; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.029532s (num_starts 3; 0.0098s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;-dst-edgecond-implies-src-edgecond;-trivial.: 0.029537s (num_starts 3; 0.0098s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.030026s (num_starts 43; 0.0007s/start)
populate_simplified_assets.: 0.033196s (num_starts 32; 0.0010s/start)
counter_example_evaluate_preds.: 0.03363s (num_starts 129; 0.0003s/start)
tfg_preprocess.dst.ind.make_node.: 0.035117s (num_starts 10; 0.0035s/start)
tfg::tfg_preprocess.: 0.035167s (num_starts 10; 0.0035s/start)
graph_ec_apply_trans_funs_helper.0.: 0.03602s (num_starts 182; 0.0002s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 0.036632s (num_starts 177; 0.0002s/start)
graph_ec_apply_trans_funs_helper.: 0.037092s (num_starts 187; 0.0002s/start)
computeWP_for_pred_across_ec.: 0.037164s (num_starts 177; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 0.037536s (num_starts 187; 0.0002s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 0.040064s (num_starts 22; 0.0018s/start)
expr_substitute_using_available_exprs_submap.: 0.040543s (num_starts 199; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_Lentry%1%fcallStart.inductive-invariants.: 0.040897s (num_starts 6; 0.0068s/start)
src_tfg_counter_example_translate_on_edge_composition.delta{1,0}.: 0.042008s (num_starts 4; 0.0105s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.042214s (num_starts 21; 0.0020s/start)
compute_expr_eqclasses_at_pc.: 0.042221s (num_starts 2; 0.0211s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.042668s (num_starts 4; 0.0107s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.042884s (num_starts 1; 0.0429s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.042893s (num_starts 1; 0.0429s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.04291s (num_starts 1; 0.0429s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.042917s (num_starts 1; 0.0429s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;-dst-edgecond-implies-src-edgecond.: 0.042921s (num_starts 1; 0.0429s/start)
do_ssa_transformation.: 0.044849s (num_starts 12; 0.0037s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045054s (num_starts 1; 0.0451s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045066s (num_starts 1; 0.0451s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.045073s (num_starts 1; 0.0451s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.045079s (num_starts 1; 0.0451s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;-dst-edgecond-implies-src-edgecond.: 0.045083s (num_starts 1; 0.0451s/start)
compute_z3_expr.: 0.046911s (num_starts 510; 0.0001s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.048999s (num_starts 166; 0.0003s/start)
compute_regions.: 0.049933s (num_starts 110; 0.0005s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.052509s (num_starts 16; 0.0033s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.052962s (num_starts 2; 0.0265s/start)
evaluate_function_call.: 0.053618s (num_starts 9; 0.0060s/start)
put_smtlib_string_in_file.: 0.054437s (num_starts 110; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.054709s (num_starts 2; 0.0274s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0552s (num_starts 1; 0.0552s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055213s (num_starts 1; 0.0552s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.055221s (num_starts 1; 0.0552s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd.: 0.055254s (num_starts 2; 0.0276s/start)
add_fresh_counterexample_at_pc_and_propagate.: 0.05528s (num_starts 16; 0.0035s/start)
decide_hoare_triple_with_alias_cons.ce.: 0.05545s (num_starts 16; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057558s (num_starts 1; 0.0576s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057568s (num_starts 1; 0.0576s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 0.057578s (num_starts 1; 0.0576s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart.: 0.058028s (num_starts 2; 0.0290s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;linear.: 0.058538s (num_starts 2; 0.0293s/start)
cg_add_node.: 0.06041s (num_starts 4; 0.0151s/start)
query:simplify-z3.: 0.063846s (num_starts 938; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.065163s (num_starts 2; 0.0326s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.065189s (num_starts 2; 0.0326s/start)
create_new_corr_graph_edge.new_node.: 0.066239s (num_starts 3; 0.0221s/start)
create_new_corr_graph_edge.: 0.066424s (num_starts 3; 0.0221s/start)
guarded_predicate_set_and.: 0.066777s (num_starts 58; 0.0012s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.066903s (num_starts 166; 0.0004s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.070155s (num_starts 3; 0.0234s/start)
avail_exprs_create_submap.: 0.071376s (num_starts 498; 0.0001s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 0.084549s (num_starts 22; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;-dst-edgecond-implies-src-edgecond.: 0.084807s (num_starts 4; 0.0212s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 0.109678s (num_starts 1; 0.1097s/start)
tfg_relax_pointsto_vals_on_edge.: 0.139589s (num_starts 10; 0.0140s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.143154s (num_starts 3; 0.0477s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.14359s (num_starts 166; 0.0009s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 0.17284s (num_starts 6; 0.0288s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 0.240813s (num_starts 166; 0.0015s/start)
apply_mask_and_overlay_array_constant.: 0.255689s (num_starts 166; 0.0015s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.302938s (num_starts 1; 0.3029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.302942s (num_starts 1; 0.3029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.302945s (num_starts 1; 0.3029s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.302949s (num_starts 1; 0.3029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;dst_edge_composition_proves_false.: 0.302952s (num_starts 1; 0.3030s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(epsilon);dst_edge_composition_proves_false.: 0.30296s (num_starts 1; 0.3030s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.309127s (num_starts 203; 0.0015s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.309524s (num_starts 203; 0.0015s/start)
compute_lr_status_for_expr.: 0.319673s (num_starts 396; 0.0008s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.331969s (num_starts 33; 0.0101s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.34798s (num_starts 2; 0.1740s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(epsilon).: 0.356541s (num_starts 4; 0.0891s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.360639s (num_starts 1870; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.366935s (num_starts 1; 0.3669s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.366937s (num_starts 1; 0.3669s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.366939s (num_starts 1; 0.3669s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.366943s (num_starts 1; 0.3669s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node;dst_edge_composition_proves_false.: 0.366946s (num_starts 1; 0.3669s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.366952s (num_starts 1; 0.3670s/start)
compute_new_lr_status_on_locs.: 0.369002s (num_starts 166; 0.0022s/start)
counter_example_translate_on_edge_composition_helper.: 0.381779s (num_starts 151; 0.0025s/start)
corr_graph::add_edge().: 0.390834s (num_starts 3; 0.1303s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.409813s (num_starts 2; 0.2049s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.422198s (num_starts 4; 0.1055s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 0.458226s (num_starts 3; 0.1527s/start)
corr_graph_add_correlation.: 0.458342s (num_starts 3; 0.1528s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 0.462673s (num_starts 3; 0.1542s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.537121s (num_starts 1; 0.5371s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.537128s (num_starts 1; 0.5371s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.537132s (num_starts 1; 0.5371s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.53714s (num_starts 1; 0.5371s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;dst_edge_composition_proves_false.: 0.537145s (num_starts 1; 0.5371s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(epsilon);dst_edge_composition_proves_false.: 0.537153s (num_starts 1; 0.5372s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.592309s (num_starts 2; 0.2962s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.594349s (num_starts 109; 0.0055s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(epsilon).: 0.603033s (num_starts 4; 0.1508s/start)
populate_loc_liveness.: 0.606311s (num_starts 13; 0.0466s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.617534s (num_starts 1; 0.6175s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.617535s (num_starts 1; 0.6175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.617537s (num_starts 1; 0.6175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.618209s (num_starts 2; 0.3091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;linear.: 0.618218s (num_starts 2; 0.3091s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);linear.: 0.619198s (num_starts 3; 0.2064s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.63838s (num_starts 1; 0.6384s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.638388s (num_starts 1; 0.6384s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.638392s (num_starts 1; 0.6384s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.638401s (num_starts 1; 0.6384s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;false-predicate.: 0.638405s (num_starts 1; 0.6384s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);false-predicate.: 0.638411s (num_starts 1; 0.6384s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.: 0.639562s (num_starts 1; 0.6396s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.673055s (num_starts 1; 0.6731s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.673061s (num_starts 1; 0.6731s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.673062s (num_starts 1; 0.6731s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.673071s (num_starts 1; 0.6731s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;false-predicate.: 0.673076s (num_starts 1; 0.6731s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);false-predicate.: 0.673083s (num_starts 1; 0.6731s/start)
tfg_postprocess_after_pointsto_analysis.: 0.690668s (num_starts 12; 0.0576s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-trivial.: 0.696133s (num_starts 1; 0.6961s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.696135s (num_starts 1; 0.6961s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-trivial.: 0.696138s (num_starts 1; 0.6961s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-trivial.: 0.696141s (num_starts 1; 0.6961s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-trivial.: 0.696143s (num_starts 1; 0.6961s/start)
decide_hoare_triple_helper;-trivial.: 0.734563s (num_starts 13; 0.0565s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.803328s (num_starts 2045; 0.0004s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.804545s (num_starts 1870; 0.0004s/start)
check_equivalence_proof.: 0.815082s (num_starts 1; 0.8151s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.821604s (num_starts 156; 0.0053s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.859848s (num_starts 1870; 0.0005s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.883397s (num_starts 1; 0.8834s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.883399s (num_starts 1; 0.8834s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.883405s (num_starts 1; 0.8834s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.883406s (num_starts 1; 0.8834s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.883406s (num_starts 1; 0.8834s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.934143s (num_starts 156; 0.0060s/start)
ce_reconcile_sorts_and_values.: 1.11718s (num_starts 83; 0.0135s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.207s (num_starts 3; 0.4023s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 1.20706s (num_starts 3; 0.4024s/start)
decide_hoare_triple.: 1.21411s (num_starts 6; 0.2024s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.25591s (num_starts 2; 0.6280s/start)
dst_edge_composition_proves_false.: 1.28724s (num_starts 3; 0.4291s/start)
get_next_dst_edge_composition_to_correlate.: 1.29067s (num_starts 4; 0.3227s/start)
parse_z3_model.: 1.29385s (num_starts 81; 0.0160s/start)
read_counter_examples_from_channel.: 1.30905s (num_starts 41; 0.0319s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.31144s (num_starts 2; 0.6557s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 1.31149s (num_starts 2; 0.6557s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1.C1;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.57956s (num_starts 2; 0.7898s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1.C1;pred-type-unknown.: 1.57957s (num_starts 2; 0.7898s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d);pred-type-unknown.: 1.57959s (num_starts 2; 0.7898s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallEnd;(L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d).: 1.5796s (num_starts 2; 0.7898s/start)
expr_do_simplify_using_lhs_set_and_precond.: 1.57995s (num_starts 488; 0.0032s/start)
ftmap_run_pointsto_analysis.: 1.65898s (num_starts 12; 0.1382s/start)
tfg_run_pointsto_analysis.: 1.6609s (num_starts 12; 0.1384s/start)
check_wfconds_on_edge.L0%0%d_Lentry%1%fcallEnd=>E0%0%d_E0%0%d.: 1.66663s (num_starts 2; 0.8333s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.66803s (num_starts 3; 0.5560s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.66804s (num_starts 3; 0.5560s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 1.66806s (num_starts 3; 0.5560s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;linear.: 1.66808s (num_starts 3; 0.5560s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 1.67901s (num_starts 1; 1.6790s/start)
tfg_populate_structs_after_ssa_construction.: 1.69646s (num_starts 12; 0.1414s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.72556s (num_starts 4; 0.4314s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);linear.: 1.72569s (num_starts 4; 0.4314s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);-all-proof-path-optimizations.: 1.72696s (num_starts 2; 0.8635s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 1.72696s (num_starts 2; 0.8635s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown;-all-proof-path-optimizations.: 1.72697s (num_starts 2; 0.8635s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown;-all-proof-path-optimizations.: 1.72698s (num_starts 2; 0.8635s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1.B1;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 1.72699s (num_starts 2; 0.8635s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1.B1;pred-type-unknown.: 1.727s (num_starts 2; 0.8635s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd);pred-type-unknown.: 1.72701s (num_starts 2; 0.8635s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 1.75614s (num_starts 12; 0.1463s/start)
check_wfconds_on_edge.: 1.78001s (num_starts 6; 0.2967s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 1.81907s (num_starts 12; 0.1516s/start)
check_preds_on_edge_compositions.: 1.84706s (num_starts 9; 0.2052s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-all-proof-path-optimizations.: 2.02681s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 2.02681s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown;-all-proof-path-optimizations.: 2.02682s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown;-all-proof-path-optimizations.: 2.02683s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;make_node.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 2.02684s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-graph-per-query-type;make_node.A1;pred-type-unknown.: 2.02685s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);pred-type-unknown.: 2.02687s (num_starts 2; 1.0134s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.3431s (num_starts 5; 0.4686s/start)
decide_hoare_triple_helper;per-query-type;linear.: 2.34486s (num_starts 7; 0.3350s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.: 2.3876s (num_starts 1; 2.3876s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.39859s (num_starts 5; 0.4797s/start)
invariant_inference_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.: 2.70626s (num_starts 1; 2.7063s/start)
decide_hoare_triple_helper;per-path;L0%0%d_Lentry%1%fcallStart;(L0%0%d_Lentry%1%fcallStart=>L0%0%d_Lentry%1%fcallEnd).: 2.98739s (num_starts 8; 0.3734s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown;-all-proof-path-optimizations.: 3.75379s (num_starts 4; 0.9384s/start)
decide_hoare_triple_helper;-all-proof-path-optimizations.: 3.75398s (num_starts 4; 0.9385s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>L0%0%d_Lentry%1%fcallStart).: 4.42795s (num_starts 9; 0.4920s/start)
decide_hoare_triple_helper;per-query-type;pred-type-unknown.: 5.33345s (num_starts 6; 0.8889s/start)
query:smt.: 5.42557s (num_starts 55; 0.0986s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.88867s (num_starts 14; 0.4206s/start)
spawn_smt_query.: 6.7355s (num_starts 55; 0.1225s/start)
solver_provable.: 8.28498s (num_starts 58; 0.1428s/start)
expr_is_provable.: 8.30122s (num_starts 58; 0.1431s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 8.30263s (num_starts 58; 0.1431s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 8.30649s (num_starts 58; 0.1432s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 8.30877s (num_starts 58; 0.1433s/start)
solver_satisfiable-cache-miss.: 8.35173s (num_starts 55; 0.1518s/start)
solver_satisfiable.: 8.35219s (num_starts 59; 0.1416s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 8.37833s (num_starts 58; 0.1445s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 8.3821s (num_starts 58; 0.1445s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 8.38338s (num_starts 58; 0.1445s/start)
update_invariant_state_for_edges.: 8.5327s (num_starts 3; 2.8442s/start)
cg_check_new_cg_ec.: 8.53697s (num_starts 3; 2.8457s/start)
correl_entry_apply.: 8.53707s (num_starts 3; 2.8457s/start)
expandProductCFG.: 9.82986s (num_starts 4; 2.4575s/start)
is_expr_equal_using_lhs_set_and_precond.: 10.0708s (num_starts 22; 0.4578s/start)
prove.: 10.071s (num_starts 22; 0.4578s/start)
prove_spawn_and_join_helper.: 10.0712s (num_starts 22; 0.4578s/start)
prove_spawn_and_join.: 10.2521s (num_starts 22; 0.4660s/start)
prove_wrapper.proof_query_not_trivial.: 10.2556s (num_starts 22; 0.4662s/start)
prove_wrapper.: 10.3314s (num_starts 31; 0.3333s/start)
decide_hoare_triple_check_ub.: 10.3628s (num_starts 31; 0.3343s/start)
bestFirstSearch.: 10.3686s (num_starts 1; 10.3686s/start)
decide_hoare_triple_helper.: 10.3786s (num_starts 31; 0.3348s/start)
decide_hoare_triple_with_alias_cons.: 10.4344s (num_starts 31; 0.3366s/start)
Time taken for equivalence check.: 11.1862s (num_starts 1; 11.1862s/start)

counters:
# of assume sat failures for undef-behavioursome.edge.Lentry%2%d=>E0%0%d.: 12
# of paths enumerated.: 4
# of paths expanded.: 3
# of queries to linear solver.: 14
# of smt-solver-queries.: 55
L0%0%d=>Lentry%1%fcallStart-src_ecs.: 1
L0%0%d=>Lentry%1%fcallStart-src_to_pcs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_ecs.: 1
Lentry%1%fcallEnd=>E0%0%d-src_to_pcs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_ecs.: 1
Lentry%1%fcallStart=>Lentry%1%fcallEnd-src_to_pcs.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.iters.: 1
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.iters.: 2
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 1
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.iters.: 3
smallest_point_cover_xfer.spec-coupling-invariants.from.L0%0%d_Lentry%1%fcallStart.prove_queries.: 3
smt-queries-cache-hits.: 4
smt-queries-cvc4-sat.: 1
smt-queries-yices-sat.: 1
smt-queries-z3-sat.: 81
total-correlation-possibilities.: 4
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 4

flags:
dst-aloc.: 0
dst-edges.: 5
dst-nodes.: 6
dst-sp-updates.: 0
final-CG-alloc-correlations.: 0
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallEnd.: 1
final-CG-counterexamples-generated-at-L0%0%d_Lentry%1%fcallStart.: 2
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallEnd.: 8
final-CG-counterexamples-total-at-L0%0%d_Lentry%1%fcallStart.: 5
final-CG-dealloc-correlations.: 0
final-CG-dht-queries.: 3
final-CG-edges.: 3
final-CG-nodes.: 4
final-CG-num-invariants.: 4
final-CG-super-edges.: 0
src-edges.: 1
src-nodes.: 2
timeout-occured.: 0

info:
eq-state.: find_correlation
final-CG-time-secs.: 9.00
final-CG-time-to-total-time-ratio.: 0.87
query-time-to-total-time-ratio.: 0.52

Context stats:
exprs: count: 146502
sorts: count: 2851
num_proof_queries: 22
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	6726
	        hit ratio:	0.933987
m_simplify_solver:
	----------- total:	2860
	        hit ratio:	0.83042
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	4459
	        hit ratio:	0.878897
m_z3_solver_substitution:
	----------- total:	483
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	485
	        hit ratio:	0
m_is_expr_not_equal_syntactic:
	----------- total:	18
	        hit ratio:	0.944444
m_expr_size:
	----------- total:	6611
	        hit ratio:	0.912116
m_contains_only_constants_or_sp_versions:
	----------- total:	216
	        hit ratio:	0.842593
m_expr_evaluates_to_constant_visitor:
	----------- total:	17917
	        hit ratio:	0.804041
m_sort_dfa_canonicalize:
	----------- total:	109396
	        hit ratio:	0.987486
m_expr_convert_to_iexpr:
	----------- total:	1123
	        hit ratio:	0.457703

z3_solver expr_query_cache entry size: 55
	----------- total:	59
	             hits:	4
	        hit ratio:	0.0677966
histogram (time taken by solver in ms):
[ 22.6410,  28.6385) (avg.  26.1483)     : 7
[ 28.6385,  36.2247) (avg.  30.8667)     : 7
[ 36.2247,  45.8204) (avg.  41.2170)     : 3
[ 45.8204,  57.9580) (avg.  50.3993)     : 3
[ 57.9580,  73.3108) (avg.  67.3560)     : 1
[ 73.3108,  92.7305) (avg.   0.0000)     : 0
[ 92.7305, 117.2943) (avg. 105.8428)     : 9
[117.2943, 148.3650) (avg. 131.4751)     : 15
[148.3650, 187.6662) (avg. 162.0888)     : 8
[187.6662, 237.3780) (avg. 231.0545)     : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 54
[2, 3) (avg. 2)                          : 1
[3, 4) (avg. 0)                          : 0
[4, 5) (avg. 0)                          : 0
[5, 6) (avg. 0)                          : 0
[6, 8) (avg. 0)                          : 0
[8, 9) (avg. 0)                          : 0
[9, 10) (avg. 0)                         : 0
[10, 11) (avg. 0)                        : 0
[11, 12) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[ 33,  62) (avg.  33)                    : 1
[ 62,  91) (avg.  76)                    : 8
[ 91, 120) (avg.   0)                    : 0
[120, 149) (avg. 148)                    : 4
[149, 177) (avg. 161)                    : 31
[177, 206) (avg. 189)                    : 5
[206, 235) (avg. 227)                    : 4
[235, 264) (avg. 246)                    : 1
[264, 293) (avg.   0)                    : 0
[293, 321) (avg. 311)                    : 1
Top 10 highest time taking queries:
1. [0.236s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-2-free_var_idx.2.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
2. [0.226s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-2-free_var_idx.2.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
3. [0.177s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-2-free_var_idx.2.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
4. [0.169s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
5. [0.168s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
6. [0.165s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.158s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.156s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.3.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.153s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_Lentry%1%fcallStart.cond_apply_set_elem0_of_1.1
10. [0.152s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.houdini-axiom-based-guess.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

<MSG>0:34 : Successfully computed equivalence for function: make_node.</MSG>

tfg_edge_expr_wp_fn: num_starts 43 time spent: 0:0:0 [0.001531s total; 0.000036 per start]
tfg_computeWP: num_starts 126 time spent: 0:0:0 [0.032389s total; 0.000257 per start]
tfg_get_simplified_to_state_for_edge: num_starts 317 time spent: 0:0:0 [0.000559s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 453 time spent: 0:0:0 [0.000858s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 460 time spent: 0:0:0 [0.000748s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 19 time spent: 0:0:0 [0.019808s total; 0.001043 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 6 time spent: 0:0:0 [0.373457s total; 0.062243 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 69 time spent: 0:0:0 [0.371550s total; 0.005385 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 25 time spent: 0:0:0 [0.178813s total; 0.007153 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 57 time spent: 0:0:0 [0.356626s total; 0.006257 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 563 time spent: 0:0:0 [0.383222s total; 0.000681 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 69 time spent: 0:0:0 [0.011245s total; 0.000163 per start]
tfg_graph_get_vars_written_on_edge: num_starts 57 time spent: 0:0:0 [0.002596s total; 0.000046 per start]
cg_with_rank_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.019693s total; 0.000788 per start]
graph_with_ce_add_CE_at_pc: num_starts 15 time spent: 0:0:0 [0.000289s total; 0.000019 per start]
graph_with_guessing_add_CE_at_pc: num_starts 25 time spent: 0:0:0 [0.019415s total; 0.000777 per start]
point_set_add_point_using_CE: num_starts 28 time spent: 0:0:0 [0.007434s total; 0.000266 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 28 time spent: 0:0:0 [0.007531s total; 0.000269 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.018215s total; 0.001138 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 16 time spent: 0:0:0 [0.010460s total; 0.000654 per start]
expr_label_memlabels_using_memlabel_map: num_starts 2380 time spent: 0:0:0 [0.074076s total; 0.000031 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 48 time spent: 0:0:0 [0.004626s total; 0.000096 per start]
expr_simplify_solver: num_starts 3075 time spent: 0:0:0 [0.173572s total; 0.000056 per start]
expr_simplify_syntactic: num_starts 3105 time spent: 0:0:1 [1.385376s total; 0.000446 per start]
expr_simplify_select_on_store: num_starts 196 time spent: 0:0:1 [1.121828s total; 0.005724 per start]
expr_simplify_store_on_store: num_starts 194 time spent: 0:0:0 [0.011538s total; 0.000059 per start]
expr_simplify_using_lhs_set_helper: num_starts 573 time spent: 0:0:1 [1.695093s total; 0.002958 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 6375 time spent: 0:0:1 [1.688125s total; 0.000265 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 2337 time spent: 0:0:0 [0.010522s total; 0.000005 per start]
expr_simplify_eq: num_starts 508 time spent: 0:0:0 [0.006363s total; 0.000013 per start]
expr_simplify_or: num_starts 65 time spent: 0:0:0 [0.000081s total; 0.000001 per start]
expr_simplify_and: num_starts 142 time spent: 0:0:0 [0.000827s total; 0.000006 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000009s total; 0.000003 per start]
expr_simplify_implies: num_starts 37 time spent: 0:0:0 [0.000374s total; 0.000010 per start]
expr_simplify_ite: num_starts 628 time spent: 0:0:0 [0.032720s total; 0.000052 per start]
canonicalize_expr_tree: num_starts 545 time spent: 0:0:0 [0.042244s total; 0.000078 per start]
expr_simplify_memalloc_using_memlabel: num_starts 221 time spent: 0:0:0 [0.001842s total; 0.000008 per start]
expr_simplify_select_on_store_visit_function: num_starts 593 time spent: 0:0:1 [1.112955s total; 0.001877 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 156 time spent: 0:0:0 [0.266843s total; 0.001711 per start]
memlabels_are_independent: num_starts 463 time spent: 0:0:0 [0.002666s total; 0.000006 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 140 time spent: 0:0:0 [0.075596s total; 0.000540 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 140 time spent: 0:0:0 [0.074283s total; 0.000531 per start]
is_overlapping_atoms_pair_syntactic: num_starts 140 time spent: 0:0:0 [0.068923s total; 0.000492 per start]
is_overlapping_considering_type_constraints: num_starts 140 time spent: 0:0:0 [0.001287s total; 0.000009 per start]
find_offset_wrt_typed_variable_pointer: num_starts 140 time spent: 0:0:0 [0.001274s total; 0.000009 per start]
is_gep_inbounds_offset: num_starts 140 time spent: 0:0:0 [0.000492s total; 0.000004 per start]
get_arithmetic_addsub_atoms: num_starts 11264 time spent: 0:0:0 [0.008915s total; 0.000001 per start]
expr_is_variable_start: num_starts 212 time spent: 0:0:0 [0.000030s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 1329 time spent: 0:0:0 [0.016946s total; 0.000013 per start]
expr_is_consts_struct_constant: num_starts 791 time spent: 0:0:0 [0.000825s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 6947 time spent: 0:0:1 [1.617850s total; 0.000233 per start]
expr_do_simplify_helper_cache: num_starts 6947 time spent: 0:0:0 [0.006874s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 2365 time spent: 0:0:0 [0.002767s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 2365 time spent: 0:0:0 [0.007045s total; 0.000003 per start]
evaluate_expr_and_check_bounds: num_starts 309 time spent: 0:0:0 [0.387754s total; 0.001255 per start]
array_constant_equals: num_starts 4513 time spent: 0:0:0 [0.007930s total; 0.000002 per start]
sort_dfa_canonical: num_starts 252529 time spent: 0:0:1 [1.443231s total; 0.000006 per start]
expr_convert_to_iexpr: num_starts 1175 time spent: 0:0:0 [0.500307s total; 0.000426 per start]
combo_dfa_xfer_and_meet: num_starts 156 time spent: 0:0:0 [0.933874s total; 0.005986 per start]
alias_val_xfer_and_meet: num_starts 156 time spent: 0:0:0 [0.821110s total; 0.005264 per start]
get_sprel_map_from_avail_exprs: num_starts 241 time spent: 0:0:0 [0.010247s total; 0.000043 per start]
update_memlabels_for_memslot_locs: num_starts 74 time spent: 0:0:0 [0.000330s total; 0.000004 per start]
populate_gen_and_kill_sets_for_edge: num_starts 332 time spent: 0:0:0 [0.047282s total; 0.000142 per start]
compute_simplified_loc_exprs_for_edge: num_starts 761 time spent: 0:0:0 [0.557173s total; 0.000732 per start]
compute_locs_definitely_written_on_edge: num_starts 332 time spent: 0:0:0 [0.000302s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 116 time spent: 0:0:0 [0.247182s total; 0.002131 per start]
edge_update_memlabel_map_for_mlvars: num_starts 166 time spent: 0:0:0 [0.026488s total; 0.000160 per start]
add_new_locs_based_on_edge: num_starts 156 time spent: 0:0:0 [0.483093s total; 0.003097 per start]
expand_locset_to_include_slots_for_memmask: num_starts 222 time spent: 0:0:0 [0.001405s total; 0.000006 per start]
total: num_starts 1 time spent: 0:0:41 [41.347919s total; 41.347919 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 11.57s.
ftmap_run_pointsto_analysis.: 1.65898s (num_starts 12; 0.1382s/start)s.
EQ Time after pointsto analysis: 9.91162s.
EQ Time after pointsto analysis and smt_query: -0.41977s.
EQ Time after pointsto analysis and smt_query and bv-solve: -0.422112s.
Equivalence proof found. The programs are equivalent.
