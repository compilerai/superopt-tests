==query_number: 0
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x7 $x10)))
 (let (($x19 (and $x8 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_end () (_ BitVec 32))
(declare-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(assert
 (let (($x39 (bvugt (_ bv0 32) input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let ((?x31 (bvadd (_ bv0 32) (_ bv0 32))))
 (let (($x38 (bvugt input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x31)))
 (let (($x34 (or (bvugt input.memlabel-mem--arg.0_begin ?x31) (bvugt (_ bv0 32) input.memlabel-mem--arg.0_end))))
 (let (($x45 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and (and true $x34) (or $x38 $x39)))))))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x18 (= ?x16 (_ bv0 32))))
 (let ((?x13 (bvadd (_ bv4 32) (_ bv4294967295 32))))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x10 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x7 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (and $x7 $x10)))
 (let (($x19 (and $x8 $x18)))
 (let (($x21 (and $x19 $x20)))
 (and $x21 $x45)))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.memlabel-mem--arg.0_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000011)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32)
    #xffffffff)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000003)
  (define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32)
    #x00000000)
  (define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.src.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.memlabel-mem--arg.0_end () (_ BitVec 32) (_ bv0 32))
(define-fun input.memlabel-mem--arg.0_begin () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32768 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv32771 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 1
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x14 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x55 (bvadd ?x8 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x55) (concat ?x53 ?x50))))
 (let (($x58 (= (_ bv0 32) ?x57)))
 (let (($x145 (not $x58)))
 (let (($x146 (or $x58 $x145)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x59 (not $x45)))
 (let (($x147 (and $x59 $x146)))
 (let (($x148 (or $x45 $x147)))
 (let (($x149 (= $x148 false)))
 (let (($x150 (= $x149 true)))
 (let (($x137 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x134 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x135 (= $x132 $x134)))
 (let (($x139 (and $x135 $x138)))
 (let (($x140 (= $x139 true)))
 (let (($x126 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x125 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x127 (= $x125 $x126)))
 (let (($x123 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x121 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x121 $x123)))
 (let (($x128 (and $x124 $x127)))
 (let (($x129 (= $x128 true)))
 (let ((?x111 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x111 (_ bv1 32))))
 (let (($x114 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x116 (= $x114 $x115)))
 (let (($x112 (= ?x111 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x113 (= $x110 $x112)))
 (let (($x117 (and $x113 $x116)))
 (let (($x118 (= $x117 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x100 (concat ?x97 ?x95)))))
 (let (($x105 (= ?x104 input.dst.llvm-%t)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let (($x84 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x90 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x59 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x91 (= $x80 true)))
 (let (($x92 (= $x91 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x69 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x60 (and $x59 $x58)))
 (let (($x63 (=> (and $x60 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x64 (= $x63 true)))
 (let (($x76 (= $x64 true)))
 (let (($x77 (= $x76 true)))
 (let ((?x44 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x44)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x16 $x37)))
 (let (($x9 (and $x18 $x6)))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x20 $x9)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x40)))))))
 (let (($x39 (and $x15 $x12)))
 (let (($x34 (= $x39 true)))
 (let (($x5 (= $x34 true)))
 (let (($x30 (= $x5 true)))
 (let (($x78 (and $x30 $x77)))
 (let (($x93 (and $x78 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let (($x119 (and $x108 $x118)))
 (let (($x130 (and $x119 $x129)))
 (let (($x141 (and $x130 $x140)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x142 (and $x46 $x141)))
 (let (($x27 (= false false)))
 (let (($x143 (and $x27 $x142)))
 (let (($x144 (and $x27 $x143)))
 (let (($x151 (=> $x144 $x150)))
 (not $x151))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x14 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x14 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x8 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x55 (bvadd ?x8 (_ bv3 32))))
 (let ((?x57 (concat (select input.dst.llvm-mem ?x55) (concat ?x53 ?x50))))
 (let (($x58 (= (_ bv0 32) ?x57)))
 (let (($x145 (not $x58)))
 (let (($x146 (or $x58 $x145)))
 (let (($x45 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x59 (not $x45)))
 (let (($x147 (and $x59 $x146)))
 (let (($x148 (or $x45 $x147)))
 (let (($x149 (= $x148 false)))
 (let (($x150 (= $x149 true)))
 (let (($x137 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x136 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x138 (= $x136 $x137)))
 (let (($x134 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x135 (= $x132 $x134)))
 (let (($x139 (and $x135 $x138)))
 (let (($x140 (= $x139 true)))
 (let (($x126 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x125 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x127 (= $x125 $x126)))
 (let (($x123 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x121 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x124 (= $x121 $x123)))
 (let (($x128 (and $x124 $x127)))
 (let (($x129 (= $x128 true)))
 (let ((?x111 (ite $x45 (_ bv0 32) (_ bv1 32))))
 (let (($x115 (bvuge ?x111 (_ bv1 32))))
 (let (($x114 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x116 (= $x114 $x115)))
 (let (($x112 (= ?x111 (_ bv0 32))))
 (let (($x110 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x113 (= $x110 $x112)))
 (let (($x117 (and $x113 $x116)))
 (let (($x118 (= $x117 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x100 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x104 (concat ?x103 (concat ?x100 (concat ?x97 ?x95)))))
 (let (($x105 (= ?x104 input.dst.llvm-%t)))
 (let (($x106 (= $x105 true)))
 (let (($x107 (= $x106 true)))
 (let (($x84 (bvugt ?x8 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x55)))
 (let (($x90 (=> (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x59 (bvule ?x8 (bvsub (bvadd ?x8 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x91 (= $x80 true)))
 (let (($x92 (= $x91 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x69 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x68 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x75 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x60 (and $x59 $x58)))
 (let (($x63 (=> (and $x60 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x68 $x69)))))))
 (let (($x64 (= $x63 true)))
 (let (($x76 (= $x64 true)))
 (let (($x77 (= $x76 true)))
 (let ((?x44 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x6 (= (_ bv0 32) ?x44)))
 (let ((?x11 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x37 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x11)))
 (let (($x16 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x18 (and $x16 $x37)))
 (let (($x9 (and $x18 $x6)))
 (let (($x20 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x20 $x9)))
 (let (($x40 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x29 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x15 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x29 $x40)))))))
 (let (($x39 (and $x15 $x12)))
 (let (($x34 (= $x39 true)))
 (let (($x5 (= $x34 true)))
 (let (($x30 (= $x5 true)))
 (let (($x78 (and $x30 $x77)))
 (let (($x93 (and $x78 $x92)))
 (let (($x108 (and $x93 $x107)))
 (let (($x119 (and $x108 $x118)))
 (let (($x130 (and $x119 $x129)))
 (let (($x141 (and $x130 $x140)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x142 (and $x46 $x141)))
 (let (($x27 (= false false)))
 (let (($x143 (and $x27 $x142)))
 (let (($x144 (and $x27 $x143)))
 (let (($x151 (=> $x144 $x150)))
 (not $x151))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_10)
(function @fun_10
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv32 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv35 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv32 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x40000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x7f)
                                #x7ff77ffd
                                #x16)
                         #x80000000
                         #xf9)
                  #x80000002
                  #xf7)))
  (store (store (store a!1 #x7ff77ffe #x02) #x7ff77fff #xf7) #x7ff78000 #x00)))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x7ff77ff9)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x80000000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x80000003)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 2
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x31 (concat ?x53 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x56 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x56 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x57) (concat ?x50 ?x31))))
 (let (($x61 (= (_ bv0 32) ?x60)))
 (let (($x161 (not $x61)))
 (let (($x162 (or $x61 $x161)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x62 (not $x17)))
 (let (($x163 (and $x62 $x162)))
 (let (($x164 (or $x17 $x163)))
 (let (($x165 (= $x164 false)))
 (let (($x166 (= $x165 true)))
 (let (($x143 (not true)))
 (let (($x144 (= $x143 true)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x94 (not $x151)))
 (let (($x147 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x21 (not $x147)))
 (let (($x152 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x35 (= $x151 $x152)))
 (let (($x149 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x150 (= $x147 $x149)))
 (let (($x154 (and (and (and $x150 $x35) $x21) $x94)))
 (let (($x155 (= $x154 true)))
 (let (($x133 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x137 (not $x133)))
 (let (($x129 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x136 (not $x129)))
 (let (($x134 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x135 (= $x133 $x134)))
 (let (($x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= $x129 $x131)))
 (let (($x140 (and (and (and $x132 $x135) $x136) $x137)))
 (let (($x141 (= $x140 true)))
 (let (($x118 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x122 (not $x118)))
 (let (($x114 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x121 (not $x114)))
 (let ((?x115 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x119 (bvuge ?x115 (_ bv1 32))))
 (let (($x120 (= $x118 $x119)))
 (let (($x116 (= ?x115 (_ bv0 32))))
 (let (($x117 (= $x114 $x116)))
 (let (($x125 (and (and (and $x117 $x120) $x121) $x122)))
 (let (($x126 (= $x125 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x104 (concat ?x95 ?x96)))))
 (let (($x109 (= ?x108 input.dst.llvm-%t)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x88 (bvugt ?x56 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x93 (=> (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x83 (=> (and $x62 (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x84 (= $x83 true)))
 (let (($x102 (= $x84 true)))
 (let (($x103 (= $x102 true)))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x73 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x74 (_ bv3 32)))))
 (let (($x78 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x65 (and $x62 $x61)))
 (let (($x67 (=> (and $x65 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x68 (= $x67 true)))
 (let (($x81 (= $x68 true)))
 (let (($x82 (= $x81 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x9)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x11 $x44)))
 (let (($x39 (and $x6 $x12)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (and $x23 $x39)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x27)))))))
 (let (($x5 (and $x38 $x34)))
 (let (($x30 (= $x5 true)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x89 (and $x45 $x82)))
 (let (($x99 (and $x89 $x103)))
 (let (($x112 (and $x99 $x111)))
 (let (($x127 (and $x112 $x126)))
 (let (($x142 (and $x127 $x141)))
 (let (($x145 (and $x142 $x144)))
 (let (($x156 (and $x145 $x155)))
 (let (($x157 (and $x156 $x144)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x158 (and $x46 $x157)))
 (let (($x24 (= false false)))
 (let (($x159 (and $x24 $x158)))
 (let (($x160 (and $x24 $x159)))
 (let (($x167 (=> $x160 $x166)))
 (not $x167))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x53 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x31 (concat ?x53 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x56 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x57 (bvadd ?x56 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x57) (concat ?x50 ?x31))))
 (let (($x61 (= (_ bv0 32) ?x60)))
 (let (($x161 (not $x61)))
 (let (($x162 (or $x61 $x161)))
 (let (($x17 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x62 (not $x17)))
 (let (($x163 (and $x62 $x162)))
 (let (($x164 (or $x17 $x163)))
 (let (($x165 (= $x164 false)))
 (let (($x166 (= $x165 true)))
 (let (($x143 (not true)))
 (let (($x144 (= $x143 true)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x94 (not $x151)))
 (let (($x147 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x21 (not $x147)))
 (let (($x152 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x35 (= $x151 $x152)))
 (let (($x149 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x150 (= $x147 $x149)))
 (let (($x154 (and (and (and $x150 $x35) $x21) $x94)))
 (let (($x155 (= $x154 true)))
 (let (($x133 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x137 (not $x133)))
 (let (($x129 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x136 (not $x129)))
 (let (($x134 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x135 (= $x133 $x134)))
 (let (($x131 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x132 (= $x129 $x131)))
 (let (($x140 (and (and (and $x132 $x135) $x136) $x137)))
 (let (($x141 (= $x140 true)))
 (let (($x118 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x122 (not $x118)))
 (let (($x114 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x121 (not $x114)))
 (let ((?x115 (ite $x17 (_ bv0 32) (_ bv1 32))))
 (let (($x119 (bvuge ?x115 (_ bv1 32))))
 (let (($x120 (= $x118 $x119)))
 (let (($x116 (= ?x115 (_ bv0 32))))
 (let (($x117 (= $x114 $x116)))
 (let (($x125 (and (and (and $x117 $x120) $x121) $x122)))
 (let (($x126 (= $x125 true)))
 (let ((?x96 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x107 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x108 (concat ?x107 (concat ?x104 (concat ?x95 ?x96)))))
 (let (($x109 (= ?x108 input.dst.llvm-%t)))
 (let (($x110 (= $x109 true)))
 (let (($x111 (= $x110 true)))
 (let (($x88 (bvugt ?x56 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x57)))
 (let (($x93 (=> (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x83 (=> (and $x62 (bvule ?x56 (bvsub (bvadd ?x56 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x88)))))))
 (let (($x84 (= $x83 true)))
 (let (($x102 (= $x84 true)))
 (let (($x103 (= $x102 true)))
 (let ((?x74 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x73 (bvugt ?x74 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x72 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x74 (_ bv3 32)))))
 (let (($x78 (=> (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x65 (and $x62 $x61)))
 (let (($x67 (=> (and $x65 (bvule ?x74 (bvsub (bvadd ?x74 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x72 $x73)))))))
 (let (($x68 (= $x67 true)))
 (let (($x81 (= $x68 true)))
 (let (($x82 (= $x81 true)))
 (let ((?x9 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x9)))
 (let ((?x18 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x44 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x18)))
 (let (($x11 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x6 (and $x11 $x44)))
 (let (($x39 (and $x6 $x12)))
 (let (($x23 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x34 (and $x23 $x39)))
 (let (($x27 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x38 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x27)))))))
 (let (($x5 (and $x38 $x34)))
 (let (($x30 (= $x5 true)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x89 (and $x45 $x82)))
 (let (($x99 (and $x89 $x103)))
 (let (($x112 (and $x99 $x111)))
 (let (($x127 (and $x112 $x126)))
 (let (($x142 (and $x127 $x141)))
 (let (($x145 (and $x142 $x144)))
 (let (($x156 (and $x145 $x155)))
 (let (($x157 (and $x156 $x144)))
 (let (($x46 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x158 (and $x46 $x157)))
 (let (($x24 (= false false)))
 (let (($x159 (and $x24 $x158)))
 (let (($x160 (and $x24 $x159)))
 (let (($x167 (=> $x160 $x166)))
 (not $x167))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 3
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x33 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x57 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x57 (_ bv3 32))))
 (let ((?x61 (concat (select input.dst.llvm-mem ?x54) (concat ?x51 ?x50))))
 (let (($x65 (= (_ bv0 32) ?x61)))
 (let (($x194 (not $x65)))
 (let (($x195 (or $x65 $x194)))
 (let (($x62 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x66 (not $x62)))
 (let (($x196 (and $x66 $x195)))
 (let (($x197 (or $x62 $x196)))
 (let (($x198 (= $x197 false)))
 (let (($x199 (= $x198 true)))
 (let (($x183 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x182 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x184 (= $x182 $x183)))
 (let (($x180 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x178 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x181 (= $x178 $x180)))
 (let (($x175 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x176 (= $x174 $x175)))
 (let (($x172 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x173 (= $x170 $x172)))
 (let (($x8 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x188 (and (and (and (and $x8 $x173) $x176) $x181) $x184)))
 (let (($x189 (= $x188 true)))
 (let (($x39 (= false false)))
 (let (($x150 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x164 (=> $x150 $x39)))
 (let (($x162 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x163 (= $x28 $x162)))
 (let (($x160 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x161 (= $x150 $x160)))
 (let (($x166 (and (and $x161 $x163) $x164)))
 (let (($x167 (= $x166 true)))
 (let (($x21 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x153 (= $x28 $x21)))
 (let (($x152 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x35 (= $x150 $x152)))
 (let (($x147 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x134 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x148 (= $x134 $x147)))
 (let (($x145 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x130 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x146 (= $x130 $x145)))
 (let (($x143 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x156 (and (and (and (and $x143 $x146) $x148) $x35) $x153)))
 (let (($x157 (= $x156 true)))
 (let (($x136 (=> $x130 $x39)))
 (let (($x135 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x138 (= $x134 $x135)))
 (let (($x132 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x133 (= $x130 $x132)))
 (let (($x137 (and (and $x133 $x138) $x136)))
 (let (($x140 (= $x137 true)))
 (let (($x117 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x122 (=> $x117 $x39)))
 (let ((?x118 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x118 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x124 (= $x123 $x121)))
 (let (($x119 (= ?x118 (_ bv0 32))))
 (let (($x120 (= $x117 $x119)))
 (let (($x126 (and (and $x120 $x124) $x122)))
 (let (($x127 (= $x126 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x111 (concat ?x110 (concat ?x105 (concat ?x95 ?x104)))))
 (let (($x112 (= ?x111 input.dst.llvm-%t)))
 (let (($x113 (= $x112 true)))
 (let (($x114 (= $x113 true)))
 (let (($x80 (bvugt ?x57 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x103 (=> (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x92 (=> (and $x66 (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x87 (= $x92 true)))
 (let (($x99 (= $x87 true)))
 (let (($x106 (= $x99 true)))
 (let ((?x70 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x64 (bvugt ?x70 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x70 (_ bv3 32)))))
 (let (($x82 (=> (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x74 (and $x66 $x65)))
 (let (($x77 (=> (and $x74 (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x71 (= $x77 true)))
 (let (($x89 (= $x71 true)))
 (let (($x85 (= $x89 true)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x7)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x6 $x23)))
 (let (($x47 (and $x26 $x12)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x46 $x47)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x34 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x10)))))))
 (let (($x30 (and $x34 $x5)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x59 (= $x45 true)))
 (let (($x86 (and $x59 $x85)))
 (let (($x107 (and $x86 $x106)))
 (let (($x115 (and $x107 $x114)))
 (let (($x128 (and $x115 $x127)))
 (let (($x141 (and $x128 $x140)))
 (let (($x158 (and $x141 $x157)))
 (let (($x168 (and $x158 $x167)))
 (let (($x190 (and $x168 $x189)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x191 (and $x22 $x190)))
 (let (($x192 (and $x39 $x191)))
 (let (($x193 (and $x39 $x192)))
 (let (($x200 (=> $x193 $x199)))
 (not $x200)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x50 (concat ?x33 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x57 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x57 (_ bv3 32))))
 (let ((?x61 (concat (select input.dst.llvm-mem ?x54) (concat ?x51 ?x50))))
 (let (($x65 (= (_ bv0 32) ?x61)))
 (let (($x194 (not $x65)))
 (let (($x195 (or $x65 $x194)))
 (let (($x62 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x66 (not $x62)))
 (let (($x196 (and $x66 $x195)))
 (let (($x197 (or $x62 $x196)))
 (let (($x198 (= $x197 false)))
 (let (($x199 (= $x198 true)))
 (let (($x183 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x182 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x184 (= $x182 $x183)))
 (let (($x180 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x178 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x181 (= $x178 $x180)))
 (let (($x175 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x174 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x176 (= $x174 $x175)))
 (let (($x172 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x173 (= $x170 $x172)))
 (let (($x8 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x188 (and (and (and (and $x8 $x173) $x176) $x181) $x184)))
 (let (($x189 (= $x188 true)))
 (let (($x39 (= false false)))
 (let (($x150 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x164 (=> $x150 $x39)))
 (let (($x162 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x28 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x163 (= $x28 $x162)))
 (let (($x160 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x161 (= $x150 $x160)))
 (let (($x166 (and (and $x161 $x163) $x164)))
 (let (($x167 (= $x166 true)))
 (let (($x21 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x153 (= $x28 $x21)))
 (let (($x152 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x35 (= $x150 $x152)))
 (let (($x147 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x134 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x148 (= $x134 $x147)))
 (let (($x145 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x130 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x146 (= $x130 $x145)))
 (let (($x143 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x156 (and (and (and (and $x143 $x146) $x148) $x35) $x153)))
 (let (($x157 (= $x156 true)))
 (let (($x136 (=> $x130 $x39)))
 (let (($x135 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x138 (= $x134 $x135)))
 (let (($x132 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x133 (= $x130 $x132)))
 (let (($x137 (and (and $x133 $x138) $x136)))
 (let (($x140 (= $x137 true)))
 (let (($x117 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x122 (=> $x117 $x39)))
 (let ((?x118 (ite $x62 (_ bv0 32) (_ bv1 32))))
 (let (($x121 (bvuge ?x118 (_ bv1 32))))
 (let (($x123 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x124 (= $x123 $x121)))
 (let (($x119 (= ?x118 (_ bv0 32))))
 (let (($x120 (= $x117 $x119)))
 (let (($x126 (and (and $x120 $x124) $x122)))
 (let (($x127 (= $x126 true)))
 (let ((?x104 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x95 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x110 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x111 (concat ?x110 (concat ?x105 (concat ?x95 ?x104)))))
 (let (($x112 (= ?x111 input.dst.llvm-%t)))
 (let (($x113 (= $x112 true)))
 (let (($x114 (= $x113 true)))
 (let (($x80 (bvugt ?x57 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x79 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x103 (=> (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x92 (=> (and $x66 (bvule ?x57 (bvsub (bvadd ?x57 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x79 $x80)))))))
 (let (($x87 (= $x92 true)))
 (let (($x99 (= $x87 true)))
 (let (($x106 (= $x99 true)))
 (let ((?x70 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x64 (bvugt ?x70 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x63 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x70 (_ bv3 32)))))
 (let (($x82 (=> (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x74 (and $x66 $x65)))
 (let (($x77 (=> (and $x74 (bvule ?x70 (bvsub (bvadd ?x70 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x63 $x64)))))))
 (let (($x71 (= $x77 true)))
 (let (($x89 (= $x71 true)))
 (let (($x85 (= $x89 true)))
 (let ((?x7 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x12 (= (_ bv0 32) ?x7)))
 (let ((?x27 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x23 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x27)))
 (let (($x6 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x26 (and $x6 $x23)))
 (let (($x47 (and $x26 $x12)))
 (let (($x46 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x5 (and $x46 $x47)))
 (let (($x10 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x34 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x10)))))))
 (let (($x30 (and $x34 $x5)))
 (let (($x41 (= $x30 true)))
 (let (($x45 (= $x41 true)))
 (let (($x59 (= $x45 true)))
 (let (($x86 (and $x59 $x85)))
 (let (($x107 (and $x86 $x106)))
 (let (($x115 (and $x107 $x114)))
 (let (($x128 (and $x115 $x127)))
 (let (($x141 (and $x128 $x140)))
 (let (($x158 (and $x141 $x157)))
 (let (($x168 (and $x158 $x167)))
 (let (($x190 (and $x168 $x189)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x191 (and $x22 $x190)))
 (let (($x192 (and $x39 $x191)))
 (let (($x193 (and $x39 $x192)))
 (let (($x200 (=> $x193 $x199)))
 (not $x200)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_10)
(function @fun_10
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x20468d74)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x8e)
                                #x20468d75
                                #x95)
                         #x8e5c9599
                         #x95)
                  #x20468d74
                  #x95)))
  (store (store (store (store a!1 #x20468d76 #x5c) #x8e5c959a #x95)
                #x8e5c959b
                #x95)
         #x8e5c959c
         #x5c)))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x8e5c9595)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x20468d74)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x20468d77)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv7 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 4
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x14 (concat ?x51 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x61 (bvadd ?x60 (_ bv3 32))))
 (let ((?x74 (concat (select input.dst.llvm-mem ?x61) (concat ?x50 ?x14))))
 (let (($x69 (= (_ bv0 32) ?x74)))
 (let (($x214 (not $x69)))
 (let (($x215 (or $x69 $x214)))
 (let (($x6 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x70 (not $x6)))
 (let (($x216 (and $x70 $x215)))
 (let (($x217 (or $x6 $x216)))
 (let (($x218 (= $x217 false)))
 (let (($x219 (= $x218 true)))
 (let (($x197 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x101 (not $x197)))
 (let (($x193 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x36 (not $x193)))
 (let (($x189 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x201 (not $x189)))
 (let (($x182 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x200 (not $x182)))
 (let (($x198 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x199 (= $x197 $x198)))
 (let (($x195 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x196 (= $x193 $x195)))
 (let (($x190 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x191 (= $x189 $x190)))
 (let (($x184 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x188 (= $x182 $x184)))
 (let (($x181 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x206 (and (and (and (and (and (and $x181 $x188) $x191) $x196) $x199) $x200) $x201)))
 (let (($x208 (and (and $x206 $x36) $x101)))
 (let (($x209 (= $x208 true)))
 (let (($x57 (= false false)))
 (let (($x149 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x174 (=> $x149 $x57)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x152 (not $x151)))
 (let (($x173 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x185 (= $x151 $x173)))
 (let (($x171 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x172 (= $x149 $x171)))
 (let (($x186 (and (and (and $x172 $x185) $x152) $x174)))
 (let (($x177 (= $x186 true)))
 (let (($x161 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x162 (= $x151 $x161)))
 (let (($x159 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x160 (= $x149 $x159)))
 (let (($x156 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x137 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x157 (= $x137 $x156)))
 (let (($x21 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x153 (= $x135 $x21)))
 (let (($x155 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x167 (and (and (and (and (and (not $x135) (not $x137)) (not $x149)) $x152) $x155) $x153)))
 (let (($x100 (and (and (and $x167 $x157) $x160) $x162)))
 (let (($x8 (= $x100 true)))
 (let (($x143 (=> $x135 $x57)))
 (let (($x142 (not $x137)))
 (let (($x140 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x141 (= $x137 $x140)))
 (let (($x139 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x136 (= $x135 $x139)))
 (let (($x146 (and (and (and $x136 $x141) $x142) $x143)))
 (let (($x94 (= $x146 true)))
 (let (($x123 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x123 $x57)))
 (let (($x39 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x127 (not $x39)))
 (let ((?x121 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x121 (_ bv1 32))))
 (let (($x126 (= $x39 $x122)))
 (let (($x124 (= ?x121 (_ bv0 32))))
 (let (($x125 (= $x123 $x124)))
 (let (($x131 (and (and (and $x125 $x126) $x127) $x128)))
 (let (($x132 (= $x131 true)))
 (let ((?x97 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x114 (concat ?x111 (concat ?x104 ?x97)))))
 (let (($x116 (= ?x115 input.dst.llvm-%t)))
 (let (($x117 (= $x116 true)))
 (let (($x118 (= $x117 true)))
 (let (($x84 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x61)))
 (let (($x107 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x70 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x109 (= $x80 true)))
 (let (($x110 (= $x109 true)))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x68 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x81 (_ bv3 32)))))
 (let (($x86 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x72 (and $x70 $x69)))
 (let (($x75 (=> (and $x72 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x63 (= $x75 true)))
 (let (($x88 (= $x63 true)))
 (let (($x90 (= $x88 true)))
 (let ((?x45 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x59 (= (_ bv0 32) ?x45)))
 (let ((?x41 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x41)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x24 $x54)))
 (let (($x37 (and $x38 $x59)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x16 $x37)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x62)))))))
 (let (($x44 (and $x43 $x29)))
 (let (($x34 (= $x44 true)))
 (let (($x48 (= $x34 true)))
 (let (($x26 (= $x48 true)))
 (let (($x102 (and $x26 $x90)))
 (let (($x98 (and $x102 $x110)))
 (let (($x119 (and $x98 $x118)))
 (let (($x133 (and $x119 $x132)))
 (let (($x147 (and $x133 $x94)))
 (let (($x169 (and $x147 $x8)))
 (let (($x178 (and $x169 $x177)))
 (let (($x210 (and $x178 $x209)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x211 (and $x22 $x210)))
 (let (($x212 (and $x57 $x211)))
 (let (($x213 (and $x57 $x212)))
 (let (($x220 (=> $x213 $x219)))
 (not $x220))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x14 (concat ?x51 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x61 (bvadd ?x60 (_ bv3 32))))
 (let ((?x74 (concat (select input.dst.llvm-mem ?x61) (concat ?x50 ?x14))))
 (let (($x69 (= (_ bv0 32) ?x74)))
 (let (($x214 (not $x69)))
 (let (($x215 (or $x69 $x214)))
 (let (($x6 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x70 (not $x6)))
 (let (($x216 (and $x70 $x215)))
 (let (($x217 (or $x6 $x216)))
 (let (($x218 (= $x217 false)))
 (let (($x219 (= $x218 true)))
 (let (($x197 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x101 (not $x197)))
 (let (($x193 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x36 (not $x193)))
 (let (($x189 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x201 (not $x189)))
 (let (($x182 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x200 (not $x182)))
 (let (($x198 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x199 (= $x197 $x198)))
 (let (($x195 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x196 (= $x193 $x195)))
 (let (($x190 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x191 (= $x189 $x190)))
 (let (($x184 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x188 (= $x182 $x184)))
 (let (($x181 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x206 (and (and (and (and (and (and $x181 $x188) $x191) $x196) $x199) $x200) $x201)))
 (let (($x208 (and (and $x206 $x36) $x101)))
 (let (($x209 (= $x208 true)))
 (let (($x57 (= false false)))
 (let (($x149 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x174 (=> $x149 $x57)))
 (let (($x151 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x152 (not $x151)))
 (let (($x173 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x185 (= $x151 $x173)))
 (let (($x171 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x172 (= $x149 $x171)))
 (let (($x186 (and (and (and $x172 $x185) $x152) $x174)))
 (let (($x177 (= $x186 true)))
 (let (($x161 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x162 (= $x151 $x161)))
 (let (($x159 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x160 (= $x149 $x159)))
 (let (($x156 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x137 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x157 (= $x137 $x156)))
 (let (($x21 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x153 (= $x135 $x21)))
 (let (($x155 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x167 (and (and (and (and (and (not $x135) (not $x137)) (not $x149)) $x152) $x155) $x153)))
 (let (($x100 (and (and (and $x167 $x157) $x160) $x162)))
 (let (($x8 (= $x100 true)))
 (let (($x143 (=> $x135 $x57)))
 (let (($x142 (not $x137)))
 (let (($x140 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x141 (= $x137 $x140)))
 (let (($x139 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x136 (= $x135 $x139)))
 (let (($x146 (and (and (and $x136 $x141) $x142) $x143)))
 (let (($x94 (= $x146 true)))
 (let (($x123 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x123 $x57)))
 (let (($x39 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x127 (not $x39)))
 (let ((?x121 (ite $x6 (_ bv0 32) (_ bv1 32))))
 (let (($x122 (bvuge ?x121 (_ bv1 32))))
 (let (($x126 (= $x39 $x122)))
 (let (($x124 (= ?x121 (_ bv0 32))))
 (let (($x125 (= $x123 $x124)))
 (let (($x131 (and (and (and $x125 $x126) $x127) $x128)))
 (let (($x132 (= $x131 true)))
 (let ((?x97 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x111 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x115 (concat ?x114 (concat ?x111 (concat ?x104 ?x97)))))
 (let (($x116 (= ?x115 input.dst.llvm-%t)))
 (let (($x117 (= $x116 true)))
 (let (($x118 (= $x117 true)))
 (let (($x84 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x61)))
 (let (($x107 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x79 (=> (and $x70 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x83 $x84)))))))
 (let (($x80 (= $x79 true)))
 (let (($x109 (= $x80 true)))
 (let (($x110 (= $x109 true)))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x68 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x67 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x81 (_ bv3 32)))))
 (let (($x86 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x72 (and $x70 $x69)))
 (let (($x75 (=> (and $x72 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x67 $x68)))))))
 (let (($x63 (= $x75 true)))
 (let (($x88 (= $x63 true)))
 (let (($x90 (= $x88 true)))
 (let ((?x45 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x59 (= (_ bv0 32) ?x45)))
 (let ((?x41 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x54 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x41)))
 (let (($x24 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (and $x24 $x54)))
 (let (($x37 (and $x38 $x59)))
 (let (($x16 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x16 $x37)))
 (let (($x62 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x43 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x5 $x62)))))))
 (let (($x44 (and $x43 $x29)))
 (let (($x34 (= $x44 true)))
 (let (($x48 (= $x34 true)))
 (let (($x26 (= $x48 true)))
 (let (($x102 (and $x26 $x90)))
 (let (($x98 (and $x102 $x110)))
 (let (($x119 (and $x98 $x118)))
 (let (($x133 (and $x119 $x132)))
 (let (($x147 (and $x133 $x94)))
 (let (($x169 (and $x147 $x8)))
 (let (($x178 (and $x169 $x177)))
 (let (($x210 (and $x178 $x209)))
 (let (($x22 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x211 (and $x22 $x210)))
 (let (($x212 (and $x57 $x211)))
 (let (($x213 (and $x57 $x212)))
 (let (($x220 (=> $x213 $x219)))
 (not $x220))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 5
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x10 (concat ?x67 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x12 (bvadd ?x47 (_ bv3 32))))
 (let ((?x42 (concat (select input.dst.llvm-mem ?x12) (concat ?x77 ?x10))))
 (let (($x44 (= (_ bv0 32) ?x42)))
 (let (($x660 (not $x44)))
 (let (($x661 (or $x44 $x660)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x15 (not $x64)))
 (let (($x662 (and $x15 $x661)))
 (let (($x663 (or $x64 $x662)))
 (let (($x664 (= $x663 false)))
 (let (($x665 (= $x664 true)))
 (let (($x632 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x633 (= $x388 $x632)))
 (let (($x211 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x634 (=> $x211 $x633)))
 (let (($x45 (= false false)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x630 (and $x211 $x383)))
 (let (($x631 (=> $x630 $x45)))
 (let (($x627 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x628 (= $x383 $x627)))
 (let (($x629 (=> $x211 $x628)))
 (let (($x623 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x378 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x624 (= $x378 $x623)))
 (let (($x625 (=> $x211 $x624)))
 (let (($x373 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x621 (and $x211 $x373)))
 (let (($x622 (=> $x621 $x45)))
 (let (($x618 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x619 (= $x373 $x618)))
 (let (($x620 (=> $x211 $x619)))
 (let (($x615 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x616 (=> $x211 $x615)))
 (let (($x195 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x613 (=> $x195 $x45)))
 (let (($x610 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x354 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x611 (= $x354 $x610)))
 (let (($x191 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x612 (=> $x191 $x611)))
 (let (($x349 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x608 (and $x191 $x349)))
 (let (($x609 (=> $x608 $x45)))
 (let (($x605 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x606 (= $x349 $x605)))
 (let (($x607 (=> $x191 $x606)))
 (let (($x601 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x602 (= $x344 $x601)))
 (let (($x603 (=> $x191 $x602)))
 (let (($x339 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x599 (and $x191 $x339)))
 (let (($x600 (=> $x599 $x45)))
 (let (($x596 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x597 (= $x339 $x596)))
 (let (($x598 (=> $x191 $x597)))
 (let (($x593 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x594 (=> $x191 $x593)))
 (let (($x175 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x591 (=> $x175 $x45)))
 (let (($x589 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x590 (= $x211 $x589)))
 (let (($x587 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x588 (= $x195 $x587)))
 (let (($x584 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x585 (= $x191 $x584)))
 (let (($x582 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x583 (= $x175 $x582)))
 (let (($x580 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x640 (and (and (and (and (and (and $x580 $x583) $x585) $x588) $x590) $x591) $x594)))
 (let (($x646 (and (and (and (and (and (and $x640 $x598) $x600) $x603) $x607) $x609) $x612)))
 (let (($x652 (and (and (and (and (and (and $x646 $x613) $x616) $x620) $x622) $x625) $x629)))
 (let (($x654 (and (and $x652 $x631) $x634)))
 (let (($x655 (= $x654 true)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x290 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x533 (and $x232 $x290)))
 (let (($x557 (=> $x533 $x556)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x549 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x552 (= $x549 $x551)))
 (let (($x553 (=> $x533 $x552)))
 (let (($x545 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x544 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x546 (= $x544 $x545)))
 (let (($x547 (=> $x533 $x546)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x539 $x541)))
 (let (($x543 (=> $x533 $x542)))
 (let (($x536 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x537 (=> $x533 $x536)))
 (let (($x530 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x531 (= $x290 $x530)))
 (let (($x532 (=> $x232 $x531)))
 (let (($x273 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x459 (and $x232 $x273)))
 (let (($x460 (=> $x459 $x45)))
 (let (($x527 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x528 (= $x273 $x527)))
 (let (($x529 (=> $x232 $x528)))
 (let (($x523 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x522 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x524 (= $x522 $x523)))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x501 (and $x232 $x268)))
 (let (($x525 (=> $x501 $x524)))
 (let (($x519 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x517 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x520 (= $x517 $x519)))
 (let (($x521 (=> $x501 $x520)))
 (let (($x513 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x512 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (= $x512 $x513)))
 (let (($x515 (=> $x501 $x514)))
 (let (($x509 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x507 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x510 (= $x507 $x509)))
 (let (($x511 (=> $x501 $x510)))
 (let (($x504 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x505 (=> $x501 $x504)))
 (let (($x498 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x268 $x498)))
 (let (($x500 (=> $x232 $x499)))
 (let (($x251 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x450 (and $x232 $x251)))
 (let (($x451 (=> $x450 $x45)))
 (let (($x495 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x251 $x495)))
 (let (($x497 (=> $x232 $x496)))
 (let (($x492 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x493 (=> $x232 $x492)))
 (let (($x216 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x442 (=> $x216 $x45)))
 (let (($x489 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x490 (= $x232 $x489)))
 (let (($x487 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x488 (= $x216 $x487)))
 (let (($x563 (and (and (and (and (and (and $x488 $x490) $x442) $x493) $x497) $x451) $x500)))
 (let (($x569 (and (and (and (and (and (and $x563 $x505) $x511) $x515) $x521) $x525) $x529)))
 (let (($x575 (and (and (and (and (and (and $x569 $x460) $x532) $x537) $x543) $x547) $x553)))
 (let (($x576 (and $x575 $x557)))
 (let (($x577 (= $x576 true)))
 (let (($x461 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x462 (= $x290 $x461)))
 (let (($x463 (=> $x232 $x462)))
 (let (($x456 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x457 (= $x273 $x456)))
 (let (($x458 (=> $x232 $x457)))
 (let (($x452 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x453 (= $x268 $x452)))
 (let (($x454 (=> $x232 $x453)))
 (let (($x447 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x448 (= $x251 $x447)))
 (let (($x449 (=> $x232 $x448)))
 (let (($x444 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x445 (=> $x232 $x444)))
 (let (($x439 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x440 (= $x211 $x439)))
 (let (($x153 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x441 (=> $x153 $x440)))
 (let (($x362 (and $x153 $x195)))
 (let (($x363 (=> $x362 $x45)))
 (let (($x436 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x437 (= $x195 $x436)))
 (let (($x438 (=> $x153 $x437)))
 (let (($x432 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x433 (= $x191 $x432)))
 (let (($x434 (=> $x153 $x433)))
 (let (($x328 (and $x153 $x175)))
 (let (($x329 (=> $x328 $x45)))
 (let (($x429 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x430 (= $x175 $x429)))
 (let (($x431 (=> $x153 $x430)))
 (let (($x426 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x427 (=> $x153 $x426)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x320 (=> $x145 $x45)))
 (let (($x423 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x424 (= $x232 $x423)))
 (let (($x421 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x422 (= $x216 $x421)))
 (let (($x418 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x419 (= $x153 $x418)))
 (let (($x416 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x417 (= $x145 $x416)))
 (let (($x414 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x469 (and (and (and (and (and (and $x414 $x417) $x419) $x422) $x424) $x320) $x427)))
 (let (($x475 (and (and (and (and (and (and $x469 $x431) $x329) $x434) $x438) $x363) $x441)))
 (let (($x481 (and (and (and (and (and (and $x475 $x442) $x445) $x449) $x451) $x454) $x458)))
 (let (($x483 (and (and $x481 $x460) $x463)))
 (let (($x484 (= $x483 true)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x367 (and $x153 $x211)))
 (let (($x391 (=> $x367 $x390)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x367 $x386)))
 (let (($x379 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x380 (= $x378 $x379)))
 (let (($x381 (=> $x367 $x380)))
 (let (($x375 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x373 $x375)))
 (let (($x377 (=> $x367 $x376)))
 (let (($x370 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x371 (=> $x367 $x370)))
 (let (($x364 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x365 (= $x211 $x364)))
 (let (($x366 (=> $x153 $x365)))
 (let (($x359 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x360 (= $x195 $x359)))
 (let (($x361 (=> $x153 $x360)))
 (let (($x355 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x356 (= $x354 $x355)))
 (let (($x333 (and $x153 $x191)))
 (let (($x357 (=> $x333 $x356)))
 (let (($x351 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x352 (= $x349 $x351)))
 (let (($x353 (=> $x333 $x352)))
 (let (($x345 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x346 (= $x344 $x345)))
 (let (($x347 (=> $x333 $x346)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x342 (= $x339 $x341)))
 (let (($x343 (=> $x333 $x342)))
 (let (($x336 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x337 (=> $x333 $x336)))
 (let (($x330 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x331 (= $x191 $x330)))
 (let (($x332 (=> $x153 $x331)))
 (let (($x325 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x326 (= $x175 $x325)))
 (let (($x327 (=> $x153 $x326)))
 (let (($x322 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x323 (=> $x153 $x322)))
 (let (($x318 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x319 (= $x153 $x318)))
 (let (($x316 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x317 (= $x145 $x316)))
 (let (($x397 (and (and (and (and (and (and $x317 $x319) $x320) $x323) $x327) $x329) $x332)))
 (let (($x403 (and (and (and (and (and (and $x397 $x337) $x343) $x347) $x353) $x357) $x361)))
 (let (($x409 (and (and (and (and (and (and $x403 $x363) $x366) $x371) $x377) $x381) $x387)))
 (let (($x410 (and $x409 $x391)))
 (let (($x411 (= $x410 true)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x224 (concat ?x223 (concat ?x105 ?x221))))
 (let ((?x274 (bvadd ?x224 (_ bv8 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x278))))
 (let (($x285 (= (_ bv0 32) ?x284)))
 (let ((?x286 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x286 (_ bv1 32))))
 (let (($x292 (= $x290 $x291)))
 (let (($x127 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x236 (and $x127 $x232)))
 (let (($x293 (=> $x236 $x292)))
 (let (($x287 (= ?x286 (_ bv0 32))))
 (let (($x288 (= $x273 $x287)))
 (let (($x289 (=> $x236 $x288)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x224 (_ bv4 32))))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv2 32))) ?x256)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv3 32))) ?x259)))
 (let (($x263 (= (_ bv0 32) ?x262)))
 (let ((?x264 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x264 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x271 (=> $x236 $x270)))
 (let (($x265 (= ?x264 (_ bv0 32))))
 (let (($x266 (= $x251 $x265)))
 (let (($x267 (=> $x236 $x266)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x241))))
 (let (($x248 (= input.spec-%var-t-0.2.2.2.0 ?x247)))
 (let (($x249 (=> $x236 $x248)))
 (let (($x225 (= (_ bv0 32) ?x224)))
 (let ((?x226 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x233 (bvuge ?x226 (_ bv1 32))))
 (let (($x234 (= $x232 $x233)))
 (let (($x235 (=> $x127 $x234)))
 (let (($x230 (and $x127 $x216)))
 (let (($x231 (=> $x230 $x45)))
 (let (($x227 (= ?x226 (_ bv0 32))))
 (let (($x228 (= $x216 $x227)))
 (let (($x229 (=> $x127 $x228)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x148 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x165 (concat ?x154 ?x148))))
 (let ((?x196 (bvadd ?x151 (_ bv8 32))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x199))))
 (let (($x207 (= (_ bv0 32) ?x36)))
 (let ((?x101 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x101 (_ bv1 32))))
 (let (($x213 (= $x211 $x212)))
 (let (($x168 (and $x127 $x153)))
 (let (($x214 (=> $x168 $x213)))
 (let (($x208 (= ?x101 (_ bv0 32))))
 (let (($x209 (= $x195 $x208)))
 (let (($x210 (=> $x168 $x209)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x178)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x181)))
 (let (($x184 (= (_ bv0 32) ?x183)))
 (let ((?x188 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x188 (_ bv1 32))))
 (let (($x192 (= $x191 $x202)))
 (let (($x193 (=> $x168 $x192)))
 (let (($x55 (= ?x188 (_ bv0 32))))
 (let (($x189 (= $x175 $x55)))
 (let (($x190 (=> $x168 $x189)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x161))))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.0 ?x171)))
 (let (($x173 (=> $x168 $x172)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x164 (_ bv1 32))))
 (let (($x156 (= $x153 $x167)))
 (let (($x157 (=> $x127 $x156)))
 (let (($x28 (and $x127 $x145)))
 (let (($x21 (=> $x28 $x45)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x127 $x155)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x134)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x139)))
 (let (($x141 (= input.spec-%var-t-0.2.0 ?x140)))
 (let (($x144 (=> $x127 $x141)))
 (let (($x39 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x39 $x45)))
 (let ((?x122 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x122 (_ bv1 32))))
 (let (($x57 (= $x127 $x130)))
 (let (($x126 (= ?x122 (_ bv0 32))))
 (let (($x129 (= $x39 $x126)))
 (let (($x299 (and (and (and (and (and (and $x129 $x57) $x128) $x144) $x166) $x21) $x157)))
 (let (($x305 (and (and (and (and (and (and $x299 $x173) $x190) $x193) $x210) $x214) $x229)))
 (let (($x311 (and (and (and (and (and (and $x305 $x231) $x235) $x249) $x267) $x271) $x289)))
 (let (($x312 (and $x311 $x293)))
 (let (($x313 (= $x312 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x119 (concat ?x118 (concat ?x115 (concat ?x97 ?x95)))))
 (let (($x120 (= ?x119 input.dst.llvm-%t)))
 (let (($x123 (= $x120 true)))
 (let (($x121 (= $x123 true)))
 (let (($x99 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x98 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x83 (=> (and $x15 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x84 (= $x83 true)))
 (let (($x113 (= $x84 true)))
 (let (($x114 (= $x113 true)))
 (let ((?x6 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x89 (bvugt ?x6 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x6 (_ bv3 32)))))
 (let (($x102 (=> (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x46 (and $x15 $x44)))
 (let (($x70 (=> (and $x46 (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x20 (= $x70 true)))
 (let (($x91 (= $x20 true)))
 (let (($x93 (= $x91 true)))
 (let ((?x41 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x25 (= (_ bv0 32) ?x41)))
 (let ((?x16 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x16)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (and $x43 $x24)))
 (let (($x52 (and $x27 $x25)))
 (let (($x48 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x48 $x52)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x85)))))))
 (let (($x54 (and $x82 $x37)))
 (let (($x38 (= $x54 true)))
 (let (($x53 (= $x38 true)))
 (let (($x17 (= $x53 true)))
 (let (($x106 (and $x17 $x93)))
 (let (($x108 (and $x106 $x114)))
 (let (($x124 (and $x108 $x121)))
 (let (($x314 (and $x124 $x313)))
 (let (($x412 (and $x314 $x411)))
 (let (($x485 (and $x412 $x484)))
 (let (($x578 (and $x485 $x577)))
 (let (($x656 (and $x578 $x655)))
 (let (($x33 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x657 (and $x33 $x656)))
 (let (($x658 (and $x45 $x657)))
 (let (($x659 (and $x45 $x658)))
 (let (($x666 (=> $x659 $x665)))
 (not $x666)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x67 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x10 (concat ?x67 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x12 (bvadd ?x47 (_ bv3 32))))
 (let ((?x42 (concat (select input.dst.llvm-mem ?x12) (concat ?x77 ?x10))))
 (let (($x44 (= (_ bv0 32) ?x42)))
 (let (($x660 (not $x44)))
 (let (($x661 (or $x44 $x660)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x15 (not $x64)))
 (let (($x662 (and $x15 $x661)))
 (let (($x663 (or $x64 $x662)))
 (let (($x664 (= $x663 false)))
 (let (($x665 (= $x664 true)))
 (let (($x632 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x633 (= $x388 $x632)))
 (let (($x211 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x634 (=> $x211 $x633)))
 (let (($x45 (= false false)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x630 (and $x211 $x383)))
 (let (($x631 (=> $x630 $x45)))
 (let (($x627 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x628 (= $x383 $x627)))
 (let (($x629 (=> $x211 $x628)))
 (let (($x623 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x378 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x624 (= $x378 $x623)))
 (let (($x625 (=> $x211 $x624)))
 (let (($x373 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x621 (and $x211 $x373)))
 (let (($x622 (=> $x621 $x45)))
 (let (($x618 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x619 (= $x373 $x618)))
 (let (($x620 (=> $x211 $x619)))
 (let (($x615 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x616 (=> $x211 $x615)))
 (let (($x195 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x613 (=> $x195 $x45)))
 (let (($x610 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x354 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x611 (= $x354 $x610)))
 (let (($x191 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x612 (=> $x191 $x611)))
 (let (($x349 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x608 (and $x191 $x349)))
 (let (($x609 (=> $x608 $x45)))
 (let (($x605 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x606 (= $x349 $x605)))
 (let (($x607 (=> $x191 $x606)))
 (let (($x601 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x344 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x602 (= $x344 $x601)))
 (let (($x603 (=> $x191 $x602)))
 (let (($x339 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x599 (and $x191 $x339)))
 (let (($x600 (=> $x599 $x45)))
 (let (($x596 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x597 (= $x339 $x596)))
 (let (($x598 (=> $x191 $x597)))
 (let (($x593 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x594 (=> $x191 $x593)))
 (let (($x175 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x591 (=> $x175 $x45)))
 (let (($x589 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x590 (= $x211 $x589)))
 (let (($x587 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x588 (= $x195 $x587)))
 (let (($x584 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x585 (= $x191 $x584)))
 (let (($x582 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x583 (= $x175 $x582)))
 (let (($x580 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x640 (and (and (and (and (and (and $x580 $x583) $x585) $x588) $x590) $x591) $x594)))
 (let (($x646 (and (and (and (and (and (and $x640 $x598) $x600) $x603) $x607) $x609) $x612)))
 (let (($x652 (and (and (and (and (and (and $x646 $x613) $x616) $x620) $x622) $x625) $x629)))
 (let (($x654 (and (and $x652 $x631) $x634)))
 (let (($x655 (= $x654 true)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x290 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x533 (and $x232 $x290)))
 (let (($x557 (=> $x533 $x556)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x549 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x552 (= $x549 $x551)))
 (let (($x553 (=> $x533 $x552)))
 (let (($x545 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x544 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x546 (= $x544 $x545)))
 (let (($x547 (=> $x533 $x546)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x539 $x541)))
 (let (($x543 (=> $x533 $x542)))
 (let (($x536 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x537 (=> $x533 $x536)))
 (let (($x530 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x531 (= $x290 $x530)))
 (let (($x532 (=> $x232 $x531)))
 (let (($x273 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x459 (and $x232 $x273)))
 (let (($x460 (=> $x459 $x45)))
 (let (($x527 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x528 (= $x273 $x527)))
 (let (($x529 (=> $x232 $x528)))
 (let (($x523 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x522 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x524 (= $x522 $x523)))
 (let (($x268 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x501 (and $x232 $x268)))
 (let (($x525 (=> $x501 $x524)))
 (let (($x519 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x517 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x520 (= $x517 $x519)))
 (let (($x521 (=> $x501 $x520)))
 (let (($x513 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x512 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x514 (= $x512 $x513)))
 (let (($x515 (=> $x501 $x514)))
 (let (($x509 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x507 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x510 (= $x507 $x509)))
 (let (($x511 (=> $x501 $x510)))
 (let (($x504 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x505 (=> $x501 $x504)))
 (let (($x498 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x268 $x498)))
 (let (($x500 (=> $x232 $x499)))
 (let (($x251 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x450 (and $x232 $x251)))
 (let (($x451 (=> $x450 $x45)))
 (let (($x495 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x251 $x495)))
 (let (($x497 (=> $x232 $x496)))
 (let (($x492 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x493 (=> $x232 $x492)))
 (let (($x216 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x442 (=> $x216 $x45)))
 (let (($x489 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x490 (= $x232 $x489)))
 (let (($x487 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x488 (= $x216 $x487)))
 (let (($x563 (and (and (and (and (and (and $x488 $x490) $x442) $x493) $x497) $x451) $x500)))
 (let (($x569 (and (and (and (and (and (and $x563 $x505) $x511) $x515) $x521) $x525) $x529)))
 (let (($x575 (and (and (and (and (and (and $x569 $x460) $x532) $x537) $x543) $x547) $x553)))
 (let (($x576 (and $x575 $x557)))
 (let (($x577 (= $x576 true)))
 (let (($x461 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x462 (= $x290 $x461)))
 (let (($x463 (=> $x232 $x462)))
 (let (($x456 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x457 (= $x273 $x456)))
 (let (($x458 (=> $x232 $x457)))
 (let (($x452 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x453 (= $x268 $x452)))
 (let (($x454 (=> $x232 $x453)))
 (let (($x447 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x448 (= $x251 $x447)))
 (let (($x449 (=> $x232 $x448)))
 (let (($x444 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x445 (=> $x232 $x444)))
 (let (($x439 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x440 (= $x211 $x439)))
 (let (($x153 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x441 (=> $x153 $x440)))
 (let (($x362 (and $x153 $x195)))
 (let (($x363 (=> $x362 $x45)))
 (let (($x436 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x437 (= $x195 $x436)))
 (let (($x438 (=> $x153 $x437)))
 (let (($x432 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x433 (= $x191 $x432)))
 (let (($x434 (=> $x153 $x433)))
 (let (($x328 (and $x153 $x175)))
 (let (($x329 (=> $x328 $x45)))
 (let (($x429 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x430 (= $x175 $x429)))
 (let (($x431 (=> $x153 $x430)))
 (let (($x426 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x427 (=> $x153 $x426)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x320 (=> $x145 $x45)))
 (let (($x423 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x424 (= $x232 $x423)))
 (let (($x421 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x422 (= $x216 $x421)))
 (let (($x418 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x419 (= $x153 $x418)))
 (let (($x416 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x417 (= $x145 $x416)))
 (let (($x414 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x469 (and (and (and (and (and (and $x414 $x417) $x419) $x422) $x424) $x320) $x427)))
 (let (($x475 (and (and (and (and (and (and $x469 $x431) $x329) $x434) $x438) $x363) $x441)))
 (let (($x481 (and (and (and (and (and (and $x475 $x442) $x445) $x449) $x451) $x454) $x458)))
 (let (($x483 (and (and $x481 $x460) $x463)))
 (let (($x484 (= $x483 true)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x367 (and $x153 $x211)))
 (let (($x391 (=> $x367 $x390)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x367 $x386)))
 (let (($x379 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x380 (= $x378 $x379)))
 (let (($x381 (=> $x367 $x380)))
 (let (($x375 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x373 $x375)))
 (let (($x377 (=> $x367 $x376)))
 (let (($x370 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x371 (=> $x367 $x370)))
 (let (($x364 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x365 (= $x211 $x364)))
 (let (($x366 (=> $x153 $x365)))
 (let (($x359 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x360 (= $x195 $x359)))
 (let (($x361 (=> $x153 $x360)))
 (let (($x355 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x356 (= $x354 $x355)))
 (let (($x333 (and $x153 $x191)))
 (let (($x357 (=> $x333 $x356)))
 (let (($x351 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x352 (= $x349 $x351)))
 (let (($x353 (=> $x333 $x352)))
 (let (($x345 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x346 (= $x344 $x345)))
 (let (($x347 (=> $x333 $x346)))
 (let (($x341 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x342 (= $x339 $x341)))
 (let (($x343 (=> $x333 $x342)))
 (let (($x336 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x337 (=> $x333 $x336)))
 (let (($x330 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x331 (= $x191 $x330)))
 (let (($x332 (=> $x153 $x331)))
 (let (($x325 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x326 (= $x175 $x325)))
 (let (($x327 (=> $x153 $x326)))
 (let (($x322 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x323 (=> $x153 $x322)))
 (let (($x318 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x319 (= $x153 $x318)))
 (let (($x316 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x317 (= $x145 $x316)))
 (let (($x397 (and (and (and (and (and (and $x317 $x319) $x320) $x323) $x327) $x329) $x332)))
 (let (($x403 (and (and (and (and (and (and $x397 $x337) $x343) $x347) $x353) $x357) $x361)))
 (let (($x409 (and (and (and (and (and (and $x403 $x363) $x366) $x371) $x377) $x381) $x387)))
 (let (($x410 (and $x409 $x391)))
 (let (($x411 (= $x410 true)))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x224 (concat ?x223 (concat ?x105 ?x221))))
 (let ((?x274 (bvadd ?x224 (_ bv8 32))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv1 32))) (select input.dst.llvm-mem ?x274))))
 (let ((?x284 (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x274 (_ bv2 32))) ?x278))))
 (let (($x285 (= (_ bv0 32) ?x284)))
 (let ((?x286 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x286 (_ bv1 32))))
 (let (($x292 (= $x290 $x291)))
 (let (($x127 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x236 (and $x127 $x232)))
 (let (($x293 (=> $x236 $x292)))
 (let (($x287 (= ?x286 (_ bv0 32))))
 (let (($x288 (= $x273 $x287)))
 (let (($x289 (=> $x236 $x288)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x224 (_ bv4 32))))))
 (let ((?x259 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv2 32))) ?x256)))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x224 (_ bv4 32)) (_ bv3 32))) ?x259)))
 (let (($x263 (= (_ bv0 32) ?x262)))
 (let ((?x264 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x264 (_ bv1 32))))
 (let (($x270 (= $x268 $x269)))
 (let (($x271 (=> $x236 $x270)))
 (let (($x265 (= ?x264 (_ bv0 32))))
 (let (($x266 (= $x251 $x265)))
 (let (($x267 (=> $x236 $x266)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv1 32))) (select input.dst.llvm-mem ?x224))))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x224 (_ bv2 32))) ?x241))))
 (let (($x248 (= input.spec-%var-t-0.2.2.2.0 ?x247)))
 (let (($x249 (=> $x236 $x248)))
 (let (($x225 (= (_ bv0 32) ?x224)))
 (let ((?x226 (ite $x225 (_ bv0 32) (_ bv1 32))))
 (let (($x233 (bvuge ?x226 (_ bv1 32))))
 (let (($x234 (= $x232 $x233)))
 (let (($x235 (=> $x127 $x234)))
 (let (($x230 (and $x127 $x216)))
 (let (($x231 (=> $x230 $x45)))
 (let (($x227 (= ?x226 (_ bv0 32))))
 (let (($x228 (= $x216 $x227)))
 (let (($x229 (=> $x127 $x228)))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x148 (concat ?x147 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x165 (concat ?x154 ?x148))))
 (let ((?x196 (bvadd ?x151 (_ bv8 32))))
 (let ((?x199 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv1 32))) (select input.dst.llvm-mem ?x196))))
 (let ((?x36 (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x196 (_ bv2 32))) ?x199))))
 (let (($x207 (= (_ bv0 32) ?x36)))
 (let ((?x101 (ite $x207 (_ bv0 32) (_ bv1 32))))
 (let (($x212 (bvuge ?x101 (_ bv1 32))))
 (let (($x213 (= $x211 $x212)))
 (let (($x168 (and $x127 $x153)))
 (let (($x214 (=> $x168 $x213)))
 (let (($x208 (= ?x101 (_ bv0 32))))
 (let (($x209 (= $x195 $x208)))
 (let (($x210 (=> $x168 $x209)))
 (let ((?x178 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x181 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x178)))
 (let ((?x183 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x181)))
 (let (($x184 (= (_ bv0 32) ?x183)))
 (let ((?x188 (ite $x184 (_ bv0 32) (_ bv1 32))))
 (let (($x202 (bvuge ?x188 (_ bv1 32))))
 (let (($x192 (= $x191 $x202)))
 (let (($x193 (=> $x168 $x192)))
 (let (($x55 (= ?x188 (_ bv0 32))))
 (let (($x189 (= $x175 $x55)))
 (let (($x190 (=> $x168 $x189)))
 (let ((?x161 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x171 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x161))))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.0 ?x171)))
 (let (($x173 (=> $x168 $x172)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x167 (bvuge ?x164 (_ bv1 32))))
 (let (($x156 (= $x153 $x167)))
 (let (($x157 (=> $x127 $x156)))
 (let (($x28 (and $x127 $x145)))
 (let (($x21 (=> $x28 $x45)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x127 $x155)))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x139 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x134)))
 (let ((?x140 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x139)))
 (let (($x141 (= input.spec-%var-t-0.2.0 ?x140)))
 (let (($x144 (=> $x127 $x141)))
 (let (($x39 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x128 (=> $x39 $x45)))
 (let ((?x122 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x130 (bvuge ?x122 (_ bv1 32))))
 (let (($x57 (= $x127 $x130)))
 (let (($x126 (= ?x122 (_ bv0 32))))
 (let (($x129 (= $x39 $x126)))
 (let (($x299 (and (and (and (and (and (and $x129 $x57) $x128) $x144) $x166) $x21) $x157)))
 (let (($x305 (and (and (and (and (and (and $x299 $x173) $x190) $x193) $x210) $x214) $x229)))
 (let (($x311 (and (and (and (and (and (and $x305 $x231) $x235) $x249) $x267) $x271) $x289)))
 (let (($x312 (and $x311 $x293)))
 (let (($x313 (= $x312 true)))
 (let ((?x95 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x97 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x115 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x118 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x119 (concat ?x118 (concat ?x115 (concat ?x97 ?x95)))))
 (let (($x120 (= ?x119 input.dst.llvm-%t)))
 (let (($x123 (= $x120 true)))
 (let (($x121 (= $x123 true)))
 (let (($x99 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x87 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x12)))
 (let (($x98 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x83 (=> (and $x15 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x87 $x99)))))))
 (let (($x84 (= $x83 true)))
 (let (($x113 (= $x84 true)))
 (let (($x114 (= $x113 true)))
 (let ((?x6 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x89 (bvugt ?x6 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x71 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x6 (_ bv3 32)))))
 (let (($x102 (=> (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x46 (and $x15 $x44)))
 (let (($x70 (=> (and $x46 (bvule ?x6 (bvsub (bvadd ?x6 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x71 $x89)))))))
 (let (($x20 (= $x70 true)))
 (let (($x91 (= $x20 true)))
 (let (($x93 (= $x91 true)))
 (let ((?x41 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x25 (= (_ bv0 32) ?x41)))
 (let ((?x16 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x24 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x16)))
 (let (($x43 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (and $x43 $x24)))
 (let (($x52 (and $x27 $x25)))
 (let (($x48 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x37 (and $x48 $x52)))
 (let (($x85 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x69 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x82 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x69 $x85)))))))
 (let (($x54 (and $x82 $x37)))
 (let (($x38 (= $x54 true)))
 (let (($x53 (= $x38 true)))
 (let (($x17 (= $x53 true)))
 (let (($x106 (and $x17 $x93)))
 (let (($x108 (and $x106 $x114)))
 (let (($x124 (and $x108 $x121)))
 (let (($x314 (and $x124 $x313)))
 (let (($x412 (and $x314 $x411)))
 (let (($x485 (and $x412 $x484)))
 (let (($x578 (and $x485 $x577)))
 (let (($x656 (and $x578 $x655)))
 (let (($x33 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x657 (and $x33 $x656)))
 (let (($x658 (and $x45 $x657)))
 (let (($x659 (and $x45 $x658)))
 (let (($x666 (=> $x659 $x665)))
 (not $x666)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2064380 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2064383 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2064380 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffff8)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x000cf6b2)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #xfffffffb
                                #x7f)
                         #xfffffff9
                         #xff)
                  #xfffffff8
                  #x0c)))
  (store a!1 #xfffffffa #x9f)))
  (define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x7f9fff0c)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffff8)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xfffffffb)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 6
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x38 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x39 (concat ?x38 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x124 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x124 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x129) (concat ?x44 ?x39))))
 (let (($x13 (= (_ bv0 32) ?x91)))
 (let (($x752 (not $x13)))
 (let (($x753 (or $x13 $x752)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x11 (not $x64)))
 (let (($x754 (and $x11 $x753)))
 (let (($x755 (or $x64 $x754)))
 (let (($x756 (= $x755 false)))
 (let (($x757 (= $x756 true)))
 (let (($x415 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x721 (and $x36 $x415)))
 (let (($x722 (not $x721)))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x719 (and $x36 $x409)))
 (let (($x720 (not $x719)))
 (let (($x367 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x188 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x717 (and $x188 $x367)))
 (let (($x718 (not $x717)))
 (let (($x360 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x715 (and $x188 $x360)))
 (let (($x716 (not $x715)))
 (let (($x712 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x713 (= $x415 $x712)))
 (let (($x714 (=> $x36 $x713)))
 (let (($x80 (= false false)))
 (let (($x410 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x710 (and $x36 $x410)))
 (let (($x711 (=> $x710 $x80)))
 (let (($x707 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x708 (= $x410 $x707)))
 (let (($x709 (=> $x36 $x708)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x704 (= $x409 $x703)))
 (let (($x705 (=> $x36 $x704)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x701 (and $x36 $x383)))
 (let (($x702 (=> $x701 $x80)))
 (let (($x698 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x699 (= $x383 $x698)))
 (let (($x700 (=> $x36 $x699)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x696 (=> $x36 $x695)))
 (let (($x191 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x693 (=> $x191 $x80)))
 (let (($x690 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x691 (= $x367 $x690)))
 (let (($x692 (=> $x188 $x691)))
 (let (($x404 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x688 (and $x188 $x404)))
 (let (($x689 (=> $x688 $x80)))
 (let (($x685 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x686 (= $x404 $x685)))
 (let (($x687 (=> $x188 $x686)))
 (let (($x681 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x682 (= $x360 $x681)))
 (let (($x683 (=> $x188 $x682)))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x679 (and $x188 $x356)))
 (let (($x680 (=> $x679 $x80)))
 (let (($x676 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x677 (= $x356 $x676)))
 (let (($x678 (=> $x188 $x677)))
 (let (($x673 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x674 (=> $x188 $x673)))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x671 (=> $x172 $x80)))
 (let (($x669 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x670 (= $x36 $x669)))
 (let (($x111 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x668 (= $x191 $x111)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x19 (= $x188 $x667)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x666 (= $x172 $x665)))
 (let (($x663 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x728 (and (and (and (and (and (and $x663 $x666) $x19) $x668) $x670) $x671) $x674)))
 (let (($x734 (and (and (and (and (and (and $x728 $x678) $x680) $x683) $x687) $x689) $x692)))
 (let (($x740 (and (and (and (and (and (and $x734 $x693) $x696) $x700) $x702) $x705) $x709)))
 (let (($x746 (and (and (and (and (and (and $x740 $x711) $x714) $x716) $x718) $x720) $x722)))
 (let (($x747 (= $x746 true)))
 (let (($x604 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x283 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x565 (and $x224 $x283)))
 (let (($x617 (and $x565 $x604)))
 (let (($x618 (not $x617)))
 (let (($x642 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x616 (and $x565 $x642)))
 (let (($x648 (not $x616)))
 (let (($x597 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x614 (and $x565 $x597)))
 (let (($x615 (not $x614)))
 (let (($x593 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x613 (and $x565 $x593)))
 (let (($x647 (not $x613)))
 (let (($x582 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x510 (and $x224 $x258)))
 (let (($x612 (and $x510 $x582)))
 (let (($x646 (not $x612)))
 (let (($x577 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x610 (and $x510 $x577)))
 (let (($x611 (not $x610)))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x609 (and $x510 $x554)))
 (let (($x645 (not $x609)))
 (let (($x550 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x644 (and $x510 $x550)))
 (let (($x608 (not $x644)))
 (let (($x605 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x606 (= $x604 $x605)))
 (let (($x607 (=> $x565 $x606)))
 (let (($x602 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x603 (= $x642 $x602)))
 (let (($x643 (=> $x565 $x603)))
 (let (($x598 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x641 (= $x597 $x598)))
 (let (($x599 (=> $x565 $x641)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x595 (= $x593 $x640)))
 (let (($x596 (=> $x565 $x595)))
 (let (($x591 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x639 (=> $x565 $x591)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x283 $x588)))
 (let (($x589 (=> $x224 $x637)))
 (let (($x259 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x504 (and $x224 $x259)))
 (let (($x505 (=> $x504 $x80)))
 (let (($x636 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x586 (= $x259 $x636)))
 (let (($x587 (=> $x224 $x586)))
 (let (($x583 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x635 (= $x582 $x583)))
 (let (($x584 (=> $x510 $x635)))
 (let (($x579 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x580 (= $x577 $x579)))
 (let (($x581 (=> $x510 $x580)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x557 (=> $x510 $x556)))
 (let (($x552 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x553 (= $x550 $x552)))
 (let (($x575 (=> $x510 $x553)))
 (let (($x574 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x548 (=> $x510 $x574)))
 (let (($x573 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x544 (= $x258 $x573)))
 (let (($x545 (=> $x224 $x544)))
 (let (($x242 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x561 (and $x224 $x242)))
 (let (($x562 (=> $x561 $x80)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x242 $x541)))
 (let (($x543 (=> $x224 $x542)))
 (let (($x538 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x539 (=> $x224 $x538)))
 (let (($x210 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x491 (=> $x210 $x80)))
 (let (($x536 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x537 (= $x224 $x536)))
 (let (($x534 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x535 (= $x210 $x534)))
 (let (($x650 (and (and (and (and (and (and $x535 $x537) $x491) $x539) $x543) $x562) $x545)))
 (let (($x627 (and (and (and (and (and (and $x650 $x548) $x575) $x557) $x581) $x584) $x587)))
 (let (($x653 (and (and (and (and (and (and $x627 $x505) $x589) $x639) $x596) $x599) $x643)))
 (let (($x656 (and (and (and (and (and (and $x653 $x607) $x608) $x645) $x611) $x646) $x647)))
 (let (($x659 (and (and (and $x656 $x615) $x648) $x618)))
 (let (($x660 (= $x659 true)))
 (let (($x512 (not $x565)))
 (let (($x511 (not $x510)))
 (let (($x21 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x378 (and $x21 $x36)))
 (let (($x509 (not $x378)))
 (let (($x351 (and $x21 $x188)))
 (let (($x508 (not $x351)))
 (let (($x564 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x506 (= $x283 $x564)))
 (let (($x507 (=> $x224 $x506)))
 (let (($x501 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x502 (= $x259 $x501)))
 (let (($x503 (=> $x224 $x502)))
 (let (($x498 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x258 $x498)))
 (let (($x500 (=> $x224 $x499)))
 (let (($x495 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x242 $x495)))
 (let (($x497 (=> $x224 $x496)))
 (let (($x493 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x560 (=> $x224 $x493)))
 (let (($x490 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x558 (= $x36 $x490)))
 (let (($x559 (=> $x21 $x558)))
 (let (($x374 (and $x21 $x191)))
 (let (($x375 (=> $x374 $x80)))
 (let (($x487 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x488 (= $x191 $x487)))
 (let (($x489 (=> $x21 $x488)))
 (let (($x483 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x484 (= $x188 $x483)))
 (let (($x485 (=> $x21 $x484)))
 (let (($x347 (and $x21 $x172)))
 (let (($x400 (=> $x347 $x80)))
 (let (($x461 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x462 (= $x172 $x461)))
 (let (($x463 (=> $x21 $x462)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x460 (=> $x21 $x459)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x340 (=> $x145 $x80)))
 (let (($x457 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x458 (= $x224 $x457)))
 (let (($x455 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x456 (= $x210 $x455)))
 (let (($x453 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x454 (= $x21 $x453)))
 (let (($x479 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x452 (= $x145 $x479)))
 (let (($x450 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x517 (and (and (and (and (and (and $x450 $x452) $x454) $x456) $x458) $x340) $x460)))
 (let (($x522 (and (and (and (and (and (and $x517 $x463) $x400) $x485) $x489) $x375) $x559)))
 (let (($x527 (and (and (and (and (and (and $x522 $x491) $x560) $x497) $x562) $x500) $x503)))
 (let (($x531 (and (and (and (and (and (and $x527 $x505) $x507) $x508) $x509) $x511) $x512)))
 (let (($x532 (= $x531 true)))
 (let (($x469 (and $x378 $x415)))
 (let (($x428 (not $x469)))
 (let (($x426 (and $x378 $x410)))
 (let (($x427 (not $x426)))
 (let (($x468 (and $x378 $x409)))
 (let (($x425 (not $x468)))
 (let (($x424 (and $x378 $x383)))
 (let (($x467 (not $x424)))
 (let (($x466 (and $x351 $x367)))
 (let (($x423 (not $x466)))
 (let (($x421 (and $x351 $x404)))
 (let (($x422 (not $x421)))
 (let (($x465 (and $x351 $x360)))
 (let (($x420 (not $x465)))
 (let (($x418 (and $x351 $x356)))
 (let (($x419 (not $x418)))
 (let (($x416 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x417 (= $x415 $x416)))
 (let (($x464 (=> $x378 $x417)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x410 $x412)))
 (let (($x414 (=> $x378 $x413)))
 (let (($x388 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x389 (= $x409 $x388)))
 (let (($x390 (=> $x378 $x389)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x378 $x386)))
 (let (($x381 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x408 (=> $x378 $x381)))
 (let (($x376 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x377 (= $x36 $x376)))
 (let (($x407 (=> $x21 $x377)))
 (let (($x406 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x372 (= $x191 $x406)))
 (let (($x373 (=> $x21 $x372)))
 (let (($x368 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x369 (= $x367 $x368)))
 (let (($x370 (=> $x351 $x369)))
 (let (($x365 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x366 (= $x404 $x365)))
 (let (($x405 (=> $x351 $x366)))
 (let (($x361 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x403 (= $x360 $x361)))
 (let (($x362 (=> $x351 $x403)))
 (let (($x402 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x358 (= $x356 $x402)))
 (let (($x359 (=> $x351 $x358)))
 (let (($x401 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x354 (=> $x351 $x401)))
 (let (($x348 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x349 (= $x188 $x348)))
 (let (($x350 (=> $x21 $x349)))
 (let (($x344 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x172 $x344)))
 (let (($x346 (=> $x21 $x345)))
 (let (($x342 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x343 (=> $x21 $x342)))
 (let (($x338 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x339 (= $x21 $x338)))
 (let (($x337 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x398 (= $x145 $x337)))
 (let (($x432 (and (and (and (and (and (and $x398 $x339) $x340) $x343) $x346) $x400) $x350)))
 (let (($x437 (and (and (and (and (and (and $x432 $x354) $x359) $x362) $x405) $x370) $x373)))
 (let (($x441 (and (and (and (and (and (and $x437 $x375) $x407) $x408) $x387) $x390) $x414)))
 (let (($x445 (and (and (and (and (and (and $x441 $x464) $x419) $x420) $x422) $x423) $x467)))
 (let (($x447 (and (and (and $x445 $x425) $x427) $x428)))
 (let (($x448 (= $x447 true)))
 (let (($x95 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x228 (and $x95 $x224)))
 (let (($x293 (and $x228 $x283)))
 (let (($x312 (not $x293)))
 (let (($x291 (and $x228 $x259)))
 (let (($x292 (not $x291)))
 (let (($x311 (and $x228 $x258)))
 (let (($x290 (not $x311)))
 (let (($x288 (and $x228 $x242)))
 (let (($x289 (not $x288)))
 (let (($x156 (and $x95 $x21)))
 (let (($x286 (and $x156 $x36)))
 (let (($x287 (not $x286)))
 (let (($x284 (and $x156 $x191)))
 (let (($x285 (not $x284)))
 (let (($x278 (and $x156 $x188)))
 (let (($x281 (not $x278)))
 (let (($x277 (and $x156 $x172)))
 (let (($x275 (not $x277)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x214 (concat ?x213 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x222 (concat ?x215 ?x214))))
 (let ((?x262 (bvadd ?x223 (_ bv8 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x266))))
 (let (($x310 (= (_ bv0 32) ?x271)))
 (let ((?x272 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x272 (_ bv1 32))))
 (let (($x280 (= $x283 $x279)))
 (let (($x276 (=> $x228 $x280)))
 (let (($x273 (= ?x272 (_ bv0 32))))
 (let (($x274 (= $x259 $x273)))
 (let (($x282 (=> $x228 $x274)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x241)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x248)))
 (let (($x251 (= (_ bv0 32) ?x250)))
 (let ((?x252 (ite $x251 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x252 (_ bv1 32))))
 (let (($x255 (= $x258 $x254)))
 (let (($x253 (=> $x228 $x255)))
 (let (($x260 (= ?x252 (_ bv0 32))))
 (let (($x261 (= $x242 $x260)))
 (let (($x257 (=> $x228 $x261)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x306))))
 (let (($x237 (= input.spec-%var-t-0.2.2.2.0 ?x236)))
 (let (($x245 (=> $x228 $x237)))
 (let (($x32 (= (_ bv0 32) ?x223)))
 (let ((?x105 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x105 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x227 (=> $x95 $x226)))
 (let (($x221 (and $x95 $x210)))
 (let (($x56 (=> $x221 $x80)))
 (let (($x219 (= ?x105 (_ bv0 32))))
 (let (($x220 (= $x210 $x219)))
 (let (($x218 (=> $x95 $x220)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x154 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x149 (concat ?x147 ?x154))))
 (let ((?x202 (bvadd ?x151 (_ bv8 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem ?x202))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv2 32))) ?x194))))
 (let (($x197 (= (_ bv0 32) ?x200)))
 (let ((?x198 (ite $x197 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x198 (_ bv1 32))))
 (let (($x101 (= $x36 $x207)))
 (let (($x208 (=> $x156 $x101)))
 (let (($x203 (= ?x198 (_ bv0 32))))
 (let (($x199 (= $x191 $x203)))
 (let (($x205 (=> $x156 $x199)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let (($x174 (= (_ bv0 32) ?x177)))
 (let ((?x178 (ite $x174 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x178 (_ bv1 32))))
 (let (($x189 (= $x188 $x55)))
 (let (($x190 (=> $x156 $x189)))
 (let (($x181 (= ?x178 (_ bv0 32))))
 (let (($x183 (= $x172 $x181)))
 (let (($x184 (=> $x156 $x183)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x169))))
 (let (($x161 (= input.spec-%var-t-0.2.1.2.0 ?x159)))
 (let (($x8 (=> $x156 $x161)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x164 (_ bv1 32))))
 (let (($x153 (= $x21 $x298)))
 (let (($x167 (=> $x95 $x153)))
 (let (($x297 (and $x95 $x145)))
 (let (($x28 (=> $x297 $x80)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x95 $x155)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x132)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x134)))
 (let (($x144 (= input.spec-%var-t-0.2.0 ?x141)))
 (let (($x296 (=> $x95 $x144)))
 (let (($x97 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x136 (=> $x97 $x80)))
 (let ((?x73 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x73 (_ bv1 32))))
 (let (($x295 (= $x95 $x128)))
 (let (($x81 (= ?x73 (_ bv0 32))))
 (let (($x30 (= $x97 $x81)))
 (let (($x318 (and (and (and (and (and (and $x30 $x295) $x136) $x296) $x166) $x28) $x167)))
 (let (($x322 (and (and (and (and (and (and $x318 $x8) $x184) $x190) $x205) $x208) $x218)))
 (let (($x327 (and (and (and (and (and (and $x322 $x56) $x227) $x245) $x257) $x253) $x282)))
 (let (($x331 (and (and (and (and (and (and $x327 $x276) $x275) $x281) $x285) $x287) $x289)))
 (let (($x333 (and (and (and $x331 $x290) $x292) $x312)))
 (let (($x334 (= $x333 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x87 (concat ?x42 (concat ?x10 (concat ?x67 ?x52)))))
 (let (($x46 (= ?x87 input.dst.llvm-%t)))
 (let (($x107 (= $x46 true)))
 (let (($x69 (= $x107 true)))
 (let (($x70 (bvugt ?x124 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x5 (=> (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x70)))))))
 (let (($x108 (=> (and $x11 (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x33 $x70)))))))
 (let (($x51 (= $x108 true)))
 (let (($x99 (= $x51 true)))
 (let (($x15 (= $x99 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x45 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x294 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x130 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x106 (and $x11 $x13)))
 (let (($x127 (=> (and $x106 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x7 (= $x127 true)))
 (let (($x60 (= $x7 true)))
 (let (($x90 (= $x60 true)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x24 (= (_ bv0 32) ?x16)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x82 $x43)))
 (let (($x27 (and $x9 $x24)))
 (let (($x96 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x96 $x27)))
 (let (($x93 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x93)))))))
 (let (($x37 (and $x110 $x12)))
 (let (($x98 (= $x37 true)))
 (let (($x120 (= $x98 true)))
 (let (($x59 (= $x120 true)))
 (let (($x61 (and $x59 $x90)))
 (let (($x83 (and $x61 $x15)))
 (let (($x50 (and $x83 $x69)))
 (let (($x335 (and $x50 $x334)))
 (let (($x449 (and $x335 $x448)))
 (let (($x571 (and $x449 $x532)))
 (let (($x661 (and $x571 $x660)))
 (let (($x748 (and $x661 $x747)))
 (let (($x117 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x749 (and $x117 $x748)))
 (let (($x750 (and $x80 $x749)))
 (let (($x751 (and $x80 $x750)))
 (let (($x758 (=> $x751 $x757)))
 (not $x758))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x38 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x39 (concat ?x38 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x124 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x124 (_ bv3 32))))
 (let ((?x91 (concat (select input.dst.llvm-mem ?x129) (concat ?x44 ?x39))))
 (let (($x13 (= (_ bv0 32) ?x91)))
 (let (($x752 (not $x13)))
 (let (($x753 (or $x13 $x752)))
 (let (($x64 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x11 (not $x64)))
 (let (($x754 (and $x11 $x753)))
 (let (($x755 (or $x64 $x754)))
 (let (($x756 (= $x755 false)))
 (let (($x757 (= $x756 true)))
 (let (($x415 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x721 (and $x36 $x415)))
 (let (($x722 (not $x721)))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x719 (and $x36 $x409)))
 (let (($x720 (not $x719)))
 (let (($x367 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x188 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x717 (and $x188 $x367)))
 (let (($x718 (not $x717)))
 (let (($x360 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x715 (and $x188 $x360)))
 (let (($x716 (not $x715)))
 (let (($x712 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x713 (= $x415 $x712)))
 (let (($x714 (=> $x36 $x713)))
 (let (($x80 (= false false)))
 (let (($x410 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x710 (and $x36 $x410)))
 (let (($x711 (=> $x710 $x80)))
 (let (($x707 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x708 (= $x410 $x707)))
 (let (($x709 (=> $x36 $x708)))
 (let (($x703 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x704 (= $x409 $x703)))
 (let (($x705 (=> $x36 $x704)))
 (let (($x383 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x701 (and $x36 $x383)))
 (let (($x702 (=> $x701 $x80)))
 (let (($x698 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x699 (= $x383 $x698)))
 (let (($x700 (=> $x36 $x699)))
 (let (($x695 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x696 (=> $x36 $x695)))
 (let (($x191 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x693 (=> $x191 $x80)))
 (let (($x690 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x691 (= $x367 $x690)))
 (let (($x692 (=> $x188 $x691)))
 (let (($x404 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x688 (and $x188 $x404)))
 (let (($x689 (=> $x688 $x80)))
 (let (($x685 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x686 (= $x404 $x685)))
 (let (($x687 (=> $x188 $x686)))
 (let (($x681 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x682 (= $x360 $x681)))
 (let (($x683 (=> $x188 $x682)))
 (let (($x356 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x679 (and $x188 $x356)))
 (let (($x680 (=> $x679 $x80)))
 (let (($x676 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x677 (= $x356 $x676)))
 (let (($x678 (=> $x188 $x677)))
 (let (($x673 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x674 (=> $x188 $x673)))
 (let (($x172 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x671 (=> $x172 $x80)))
 (let (($x669 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x670 (= $x36 $x669)))
 (let (($x111 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x668 (= $x191 $x111)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x19 (= $x188 $x667)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x666 (= $x172 $x665)))
 (let (($x663 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x728 (and (and (and (and (and (and $x663 $x666) $x19) $x668) $x670) $x671) $x674)))
 (let (($x734 (and (and (and (and (and (and $x728 $x678) $x680) $x683) $x687) $x689) $x692)))
 (let (($x740 (and (and (and (and (and (and $x734 $x693) $x696) $x700) $x702) $x705) $x709)))
 (let (($x746 (and (and (and (and (and (and $x740 $x711) $x714) $x716) $x718) $x720) $x722)))
 (let (($x747 (= $x746 true)))
 (let (($x604 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x283 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x565 (and $x224 $x283)))
 (let (($x617 (and $x565 $x604)))
 (let (($x618 (not $x617)))
 (let (($x642 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x616 (and $x565 $x642)))
 (let (($x648 (not $x616)))
 (let (($x597 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x614 (and $x565 $x597)))
 (let (($x615 (not $x614)))
 (let (($x593 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x613 (and $x565 $x593)))
 (let (($x647 (not $x613)))
 (let (($x582 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x258 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x510 (and $x224 $x258)))
 (let (($x612 (and $x510 $x582)))
 (let (($x646 (not $x612)))
 (let (($x577 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x610 (and $x510 $x577)))
 (let (($x611 (not $x610)))
 (let (($x554 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x609 (and $x510 $x554)))
 (let (($x645 (not $x609)))
 (let (($x550 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x644 (and $x510 $x550)))
 (let (($x608 (not $x644)))
 (let (($x605 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x606 (= $x604 $x605)))
 (let (($x607 (=> $x565 $x606)))
 (let (($x602 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x603 (= $x642 $x602)))
 (let (($x643 (=> $x565 $x603)))
 (let (($x598 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x641 (= $x597 $x598)))
 (let (($x599 (=> $x565 $x641)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x595 (= $x593 $x640)))
 (let (($x596 (=> $x565 $x595)))
 (let (($x591 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x639 (=> $x565 $x591)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x637 (= $x283 $x588)))
 (let (($x589 (=> $x224 $x637)))
 (let (($x259 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x504 (and $x224 $x259)))
 (let (($x505 (=> $x504 $x80)))
 (let (($x636 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x586 (= $x259 $x636)))
 (let (($x587 (=> $x224 $x586)))
 (let (($x583 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x635 (= $x582 $x583)))
 (let (($x584 (=> $x510 $x635)))
 (let (($x579 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x580 (= $x577 $x579)))
 (let (($x581 (=> $x510 $x580)))
 (let (($x555 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x556 (= $x554 $x555)))
 (let (($x557 (=> $x510 $x556)))
 (let (($x552 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x553 (= $x550 $x552)))
 (let (($x575 (=> $x510 $x553)))
 (let (($x574 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x548 (=> $x510 $x574)))
 (let (($x573 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x544 (= $x258 $x573)))
 (let (($x545 (=> $x224 $x544)))
 (let (($x242 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x561 (and $x224 $x242)))
 (let (($x562 (=> $x561 $x80)))
 (let (($x541 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x542 (= $x242 $x541)))
 (let (($x543 (=> $x224 $x542)))
 (let (($x538 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x539 (=> $x224 $x538)))
 (let (($x210 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x491 (=> $x210 $x80)))
 (let (($x536 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x537 (= $x224 $x536)))
 (let (($x534 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x535 (= $x210 $x534)))
 (let (($x650 (and (and (and (and (and (and $x535 $x537) $x491) $x539) $x543) $x562) $x545)))
 (let (($x627 (and (and (and (and (and (and $x650 $x548) $x575) $x557) $x581) $x584) $x587)))
 (let (($x653 (and (and (and (and (and (and $x627 $x505) $x589) $x639) $x596) $x599) $x643)))
 (let (($x656 (and (and (and (and (and (and $x653 $x607) $x608) $x645) $x611) $x646) $x647)))
 (let (($x659 (and (and (and $x656 $x615) $x648) $x618)))
 (let (($x660 (= $x659 true)))
 (let (($x512 (not $x565)))
 (let (($x511 (not $x510)))
 (let (($x21 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x378 (and $x21 $x36)))
 (let (($x509 (not $x378)))
 (let (($x351 (and $x21 $x188)))
 (let (($x508 (not $x351)))
 (let (($x564 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x506 (= $x283 $x564)))
 (let (($x507 (=> $x224 $x506)))
 (let (($x501 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x502 (= $x259 $x501)))
 (let (($x503 (=> $x224 $x502)))
 (let (($x498 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x499 (= $x258 $x498)))
 (let (($x500 (=> $x224 $x499)))
 (let (($x495 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x496 (= $x242 $x495)))
 (let (($x497 (=> $x224 $x496)))
 (let (($x493 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x560 (=> $x224 $x493)))
 (let (($x490 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x558 (= $x36 $x490)))
 (let (($x559 (=> $x21 $x558)))
 (let (($x374 (and $x21 $x191)))
 (let (($x375 (=> $x374 $x80)))
 (let (($x487 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x488 (= $x191 $x487)))
 (let (($x489 (=> $x21 $x488)))
 (let (($x483 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x484 (= $x188 $x483)))
 (let (($x485 (=> $x21 $x484)))
 (let (($x347 (and $x21 $x172)))
 (let (($x400 (=> $x347 $x80)))
 (let (($x461 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x462 (= $x172 $x461)))
 (let (($x463 (=> $x21 $x462)))
 (let (($x459 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x460 (=> $x21 $x459)))
 (let (($x145 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x340 (=> $x145 $x80)))
 (let (($x457 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x458 (= $x224 $x457)))
 (let (($x455 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x456 (= $x210 $x455)))
 (let (($x453 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x454 (= $x21 $x453)))
 (let (($x479 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x452 (= $x145 $x479)))
 (let (($x450 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x517 (and (and (and (and (and (and $x450 $x452) $x454) $x456) $x458) $x340) $x460)))
 (let (($x522 (and (and (and (and (and (and $x517 $x463) $x400) $x485) $x489) $x375) $x559)))
 (let (($x527 (and (and (and (and (and (and $x522 $x491) $x560) $x497) $x562) $x500) $x503)))
 (let (($x531 (and (and (and (and (and (and $x527 $x505) $x507) $x508) $x509) $x511) $x512)))
 (let (($x532 (= $x531 true)))
 (let (($x469 (and $x378 $x415)))
 (let (($x428 (not $x469)))
 (let (($x426 (and $x378 $x410)))
 (let (($x427 (not $x426)))
 (let (($x468 (and $x378 $x409)))
 (let (($x425 (not $x468)))
 (let (($x424 (and $x378 $x383)))
 (let (($x467 (not $x424)))
 (let (($x466 (and $x351 $x367)))
 (let (($x423 (not $x466)))
 (let (($x421 (and $x351 $x404)))
 (let (($x422 (not $x421)))
 (let (($x465 (and $x351 $x360)))
 (let (($x420 (not $x465)))
 (let (($x418 (and $x351 $x356)))
 (let (($x419 (not $x418)))
 (let (($x416 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x417 (= $x415 $x416)))
 (let (($x464 (=> $x378 $x417)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x410 $x412)))
 (let (($x414 (=> $x378 $x413)))
 (let (($x388 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x389 (= $x409 $x388)))
 (let (($x390 (=> $x378 $x389)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x386 (= $x383 $x385)))
 (let (($x387 (=> $x378 $x386)))
 (let (($x381 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x408 (=> $x378 $x381)))
 (let (($x376 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x377 (= $x36 $x376)))
 (let (($x407 (=> $x21 $x377)))
 (let (($x406 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x372 (= $x191 $x406)))
 (let (($x373 (=> $x21 $x372)))
 (let (($x368 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x369 (= $x367 $x368)))
 (let (($x370 (=> $x351 $x369)))
 (let (($x365 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x366 (= $x404 $x365)))
 (let (($x405 (=> $x351 $x366)))
 (let (($x361 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x403 (= $x360 $x361)))
 (let (($x362 (=> $x351 $x403)))
 (let (($x402 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x358 (= $x356 $x402)))
 (let (($x359 (=> $x351 $x358)))
 (let (($x401 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x354 (=> $x351 $x401)))
 (let (($x348 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x349 (= $x188 $x348)))
 (let (($x350 (=> $x21 $x349)))
 (let (($x344 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x345 (= $x172 $x344)))
 (let (($x346 (=> $x21 $x345)))
 (let (($x342 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x343 (=> $x21 $x342)))
 (let (($x338 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x339 (= $x21 $x338)))
 (let (($x337 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x398 (= $x145 $x337)))
 (let (($x432 (and (and (and (and (and (and $x398 $x339) $x340) $x343) $x346) $x400) $x350)))
 (let (($x437 (and (and (and (and (and (and $x432 $x354) $x359) $x362) $x405) $x370) $x373)))
 (let (($x441 (and (and (and (and (and (and $x437 $x375) $x407) $x408) $x387) $x390) $x414)))
 (let (($x445 (and (and (and (and (and (and $x441 $x464) $x419) $x420) $x422) $x423) $x467)))
 (let (($x447 (and (and (and $x445 $x425) $x427) $x428)))
 (let (($x448 (= $x447 true)))
 (let (($x95 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x228 (and $x95 $x224)))
 (let (($x293 (and $x228 $x283)))
 (let (($x312 (not $x293)))
 (let (($x291 (and $x228 $x259)))
 (let (($x292 (not $x291)))
 (let (($x311 (and $x228 $x258)))
 (let (($x290 (not $x311)))
 (let (($x288 (and $x228 $x242)))
 (let (($x289 (not $x288)))
 (let (($x156 (and $x95 $x21)))
 (let (($x286 (and $x156 $x36)))
 (let (($x287 (not $x286)))
 (let (($x284 (and $x156 $x191)))
 (let (($x285 (not $x284)))
 (let (($x278 (and $x156 $x188)))
 (let (($x281 (not $x278)))
 (let (($x277 (and $x156 $x172)))
 (let (($x275 (not $x277)))
 (let ((?x213 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x214 (concat ?x213 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x222 (concat ?x215 ?x214))))
 (let ((?x262 (bvadd ?x223 (_ bv8 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv1 32))) (select input.dst.llvm-mem ?x262))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x262 (_ bv2 32))) ?x266))))
 (let (($x310 (= (_ bv0 32) ?x271)))
 (let ((?x272 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x272 (_ bv1 32))))
 (let (($x280 (= $x283 $x279)))
 (let (($x276 (=> $x228 $x280)))
 (let (($x273 (= ?x272 (_ bv0 32))))
 (let (($x274 (= $x259 $x273)))
 (let (($x282 (=> $x228 $x274)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x248 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x241)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x248)))
 (let (($x251 (= (_ bv0 32) ?x250)))
 (let ((?x252 (ite $x251 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x252 (_ bv1 32))))
 (let (($x255 (= $x258 $x254)))
 (let (($x253 (=> $x228 $x255)))
 (let (($x260 (= ?x252 (_ bv0 32))))
 (let (($x261 (= $x242 $x260)))
 (let (($x257 (=> $x228 $x261)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x306))))
 (let (($x237 (= input.spec-%var-t-0.2.2.2.0 ?x236)))
 (let (($x245 (=> $x228 $x237)))
 (let (($x32 (= (_ bv0 32) ?x223)))
 (let ((?x105 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x105 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x227 (=> $x95 $x226)))
 (let (($x221 (and $x95 $x210)))
 (let (($x56 (=> $x221 $x80)))
 (let (($x219 (= ?x105 (_ bv0 32))))
 (let (($x220 (= $x210 $x219)))
 (let (($x218 (=> $x95 $x220)))
 (let ((?x163 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x154 (concat ?x163 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x147 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x149 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x151 (concat ?x149 (concat ?x147 ?x154))))
 (let ((?x202 (bvadd ?x151 (_ bv8 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv1 32))) (select input.dst.llvm-mem ?x202))))
 (let ((?x200 (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x202 (_ bv2 32))) ?x194))))
 (let (($x197 (= (_ bv0 32) ?x200)))
 (let ((?x198 (ite $x197 (_ bv0 32) (_ bv1 32))))
 (let (($x207 (bvuge ?x198 (_ bv1 32))))
 (let (($x101 (= $x36 $x207)))
 (let (($x208 (=> $x156 $x101)))
 (let (($x203 (= ?x198 (_ bv0 32))))
 (let (($x199 (= $x191 $x203)))
 (let (($x205 (=> $x156 $x199)))
 (let ((?x176 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x151 (_ bv4 32))))))
 (let ((?x179 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv2 32))) ?x176)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x151 (_ bv4 32)) (_ bv3 32))) ?x179)))
 (let (($x174 (= (_ bv0 32) ?x177)))
 (let ((?x178 (ite $x174 (_ bv0 32) (_ bv1 32))))
 (let (($x55 (bvuge ?x178 (_ bv1 32))))
 (let (($x189 (= $x188 $x55)))
 (let (($x190 (=> $x156 $x189)))
 (let (($x181 (= ?x178 (_ bv0 32))))
 (let (($x183 (= $x172 $x181)))
 (let (($x184 (=> $x156 $x183)))
 (let ((?x169 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv1 32))) (select input.dst.llvm-mem ?x151))))
 (let ((?x159 (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x151 (_ bv2 32))) ?x169))))
 (let (($x161 (= input.spec-%var-t-0.2.1.2.0 ?x159)))
 (let (($x8 (=> $x156 $x161)))
 (let (($x152 (= (_ bv0 32) ?x151)))
 (let ((?x164 (ite $x152 (_ bv0 32) (_ bv1 32))))
 (let (($x298 (bvuge ?x164 (_ bv1 32))))
 (let (($x153 (= $x21 $x298)))
 (let (($x167 (=> $x95 $x153)))
 (let (($x297 (and $x95 $x145)))
 (let (($x28 (=> $x297 $x80)))
 (let (($x35 (= ?x164 (_ bv0 32))))
 (let (($x155 (= $x145 $x35)))
 (let (($x166 (=> $x95 $x155)))
 (let ((?x132 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x134 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x132)))
 (let ((?x141 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x134)))
 (let (($x144 (= input.spec-%var-t-0.2.0 ?x141)))
 (let (($x296 (=> $x95 $x144)))
 (let (($x97 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x136 (=> $x97 $x80)))
 (let ((?x73 (ite $x64 (_ bv0 32) (_ bv1 32))))
 (let (($x128 (bvuge ?x73 (_ bv1 32))))
 (let (($x295 (= $x95 $x128)))
 (let (($x81 (= ?x73 (_ bv0 32))))
 (let (($x30 (= $x97 $x81)))
 (let (($x318 (and (and (and (and (and (and $x30 $x295) $x136) $x296) $x166) $x28) $x167)))
 (let (($x322 (and (and (and (and (and (and $x318 $x8) $x184) $x190) $x205) $x208) $x218)))
 (let (($x327 (and (and (and (and (and (and $x322 $x56) $x227) $x245) $x257) $x253) $x282)))
 (let (($x331 (and (and (and (and (and (and $x327 $x276) $x275) $x281) $x285) $x287) $x289)))
 (let (($x333 (and (and (and $x331 $x290) $x292) $x312)))
 (let (($x334 (= $x333 true)))
 (let ((?x52 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x67 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x10 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x87 (concat ?x42 (concat ?x10 (concat ?x67 ?x52)))))
 (let (($x46 (= ?x87 input.dst.llvm-%t)))
 (let (($x107 (= $x46 true)))
 (let (($x69 (= $x107 true)))
 (let (($x70 (bvugt ?x124 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x33 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x5 (=> (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x33 $x70)))))))
 (let (($x108 (=> (and $x11 (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x33 $x70)))))))
 (let (($x51 (= $x108 true)))
 (let (($x99 (= $x51 true)))
 (let (($x15 (= $x99 true)))
 (let ((?x62 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x45 (bvugt ?x62 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x294 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x62 (_ bv3 32)))))
 (let (($x130 (=> (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x106 (and $x11 $x13)))
 (let (($x127 (=> (and $x106 (bvule ?x62 (bvsub (bvadd ?x62 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x294 $x45)))))))
 (let (($x7 (= $x127 true)))
 (let (($x60 (= $x7 true)))
 (let (($x90 (= $x60 true)))
 (let ((?x16 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x24 (= (_ bv0 32) ?x16)))
 (let ((?x48 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x43 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x48)))
 (let (($x82 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (and $x82 $x43)))
 (let (($x27 (and $x9 $x24)))
 (let (($x96 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x12 (and $x96 $x27)))
 (let (($x93 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x86 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x110 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x86 $x93)))))))
 (let (($x37 (and $x110 $x12)))
 (let (($x98 (= $x37 true)))
 (let (($x120 (= $x98 true)))
 (let (($x59 (= $x120 true)))
 (let (($x61 (and $x59 $x90)))
 (let (($x83 (and $x61 $x15)))
 (let (($x50 (and $x83 $x69)))
 (let (($x335 (and $x50 $x334)))
 (let (($x449 (and $x335 $x448)))
 (let (($x571 (and $x449 $x532)))
 (let (($x661 (and $x571 $x660)))
 (let (($x748 (and $x661 $x747)))
 (let (($x117 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x749 (and $x117 $x748)))
 (let (($x750 (and $x80 $x749)))
 (let (($x751 (and $x80 $x750)))
 (let (($x758 (=> $x751 $x757)))
 (not $x758))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b10000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b00000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b00000000000000000000000000000100)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b00000000000000000000000000000111)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b00000000000000000000000000000100)
(= input.spec-%var-val-0.L2%8%d #b10000000000000000000000000000000)
(= input.dst.llvm-mem @fun_26)
(function @fun_26
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)))
(define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv7 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x000cf6b2)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x00)
                                #xffffffff
                                #x7e)
                         #xfffffffd
                         #x2e)
                  #xfffffffc
                  #x55)))
  (store a!1 #xfffffffe #xdb)))
  (define-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x7edb2e55)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #xffffffff)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xfffffffc)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xffffffff)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 7
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let (($x181 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x179 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x203 (or $x179 $x181)))
 (let (($x186 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x199 (and $x186 $x203)))
 (let (($x171 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x205 (or $x171 $x199)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x27 (concat ?x24 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x23 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x63 (bvadd ?x23 (_ bv3 32))))
 (let ((?x40 (concat (select input.dst.llvm-mem ?x63) (concat ?x98 ?x27))))
 (let (($x64 (= (_ bv0 32) ?x40)))
 (let (($x78 (not $x64)))
 (let (($x67 (or $x64 $x78)))
 (let (($x121 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x92 (not $x121)))
 (let (($x52 (and $x92 $x67)))
 (let (($x198 (or $x121 $x52)))
 (let (($x393 (=> $x198 $x205)))
 (let (($x165 (= (bvand ?x40 (_ bv4294967280 32)) ?x40)))
 (let (($x94 (= (bvand ?x23 (_ bv4294967292 32)) ?x23)))
 (let (($x163 (and $x94 $x165)))
 (let (($x73 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x81 (and true $x73)))
 (let (($x148 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x23 (bvsub ?x23 (_ bv4 32))) (bvult ?x23 (bvsub ?x23 (_ bv4 32))))))
 (let (($x146 (and (and (and $x148 $x81) $x94) $x163)))
 (let (($x151 (= true $x146)))
 (let (($x152 (=> $x78 $x151)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x136 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x119 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x125 (bvadd ?x119 (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x125) (concat ?x139 ?x136))))
 (let (($x138 (= (bvand ?x131 (_ bv4294967280 32)) ?x131)))
 (let (($x128 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x137 (and $x128 $x138)))
 (let (($x107 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv8 32))) (bvult ?x119 (bvsub ?x119 (_ bv8 32))))))
 (let (($x141 (and (and (and $x107 $x81) $x128) $x137)))
 (let (($x144 (= true $x141)))
 (let (($x296 (=> $x64 $x144)))
 (let (($x164 (and $x296 $x152)))
 (let (($x35 (= true $x164)))
 (let (($x155 (=> $x52 $x35)))
 (let (($x317 (=> $x92 $x151)))
 (let (($x15 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x197 (and (and $x15 $x317) $x155)))
 (let (($x36 (=> (and $x197 $x198) $x205)))
 (let (($x207 (= $x36 true)))
 (let (($x101 (= $x207 true)))
 (let (($x206 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x204 (= $x202 $x206)))
 (let (($x301 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x190 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x191 (= $x190 $x301)))
 (let (($x195 (and $x191 $x204)))
 (let (($x196 (= $x195 true)))
 (let (($x183 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x184 (= $x181 $x183)))
 (let (($x174 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x178 (= $x179 $x174)))
 (let (($x392 (and $x178 $x184)))
 (let (($x188 (= $x392 true)))
 (let ((?x172 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x172 (_ bv1 32))))
 (let (($x182 (= $x186 $x187)))
 (let (($x173 (= ?x172 (_ bv0 32))))
 (let (($x180 (= $x171 $x173)))
 (let (($x185 (and $x180 $x182)))
 (let (($x175 (= $x185 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x299 (concat ?x162 (concat ?x160 ?x156)))))
 (let (($x100 (= ?x169 input.dst.llvm-%t)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x21 (= $x317 true)))
 (let (($x298 (= $x21 true)))
 (let (($x153 (= $x298 true)))
 (let (($x166 (= $x155 true)))
 (let (($x316 (= $x166 true)))
 (let (($x297 (= $x316 true)))
 (let (($x83 (= $x15 true)))
 (let (($x104 (= $x83 true)))
 (let (($x42 (= $x104 true)))
 (let ((?x33 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x33)))
 (let ((?x58 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x74 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x58)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x61 $x74)))
 (let (($x41 (and $x53 $x70)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x25 (and $x57 $x41)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x65)))))))
 (let (($x47 (and $x90 $x25)))
 (let (($x20 (= $x47 true)))
 (let (($x5 (= $x20 true)))
 (let (($x108 (= $x5 true)))
 (let (($x84 (and $x108 $x42)))
 (let (($x10 (and $x84 $x42)))
 (let (($x28 (and $x10 $x297)))
 (let (($x167 (and $x28 $x153)))
 (let (($x8 (and $x167 $x161)))
 (let (($x300 (and $x8 $x175)))
 (let (($x55 (and $x300 $x188)))
 (let (($x193 (and $x55 $x196)))
 (let (($x17 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x302 (and $x17 $x193)))
 (let (($x106 (= false false)))
 (let (($x192 (and $x106 $x302)))
 (let (($x194 (and $x106 $x192)))
 (let (($x123 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x125)))
 (let (($x13 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x11 (and $x92 $x64)))
 (let (($x124 (=> (and $x11 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x110 (bvugt ?x23 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x43 (=> (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x110)))))))
 (let (($x109 (=> (and $x92 (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x88 $x110)))))))
 (let (($x129 (and $x109 $x124)))
 (let (($x201 (and $x129 $x194)))
 (let (($x208 (=> $x201 $x101)))
 (not $x208)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let (($x181 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x179 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x203 (or $x179 $x181)))
 (let (($x186 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x199 (and $x186 $x203)))
 (let (($x171 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x205 (or $x171 $x199)))
 (let ((?x24 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x27 (concat ?x24 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x23 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x63 (bvadd ?x23 (_ bv3 32))))
 (let ((?x40 (concat (select input.dst.llvm-mem ?x63) (concat ?x98 ?x27))))
 (let (($x64 (= (_ bv0 32) ?x40)))
 (let (($x78 (not $x64)))
 (let (($x67 (or $x64 $x78)))
 (let (($x121 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x92 (not $x121)))
 (let (($x52 (and $x92 $x67)))
 (let (($x198 (or $x121 $x52)))
 (let (($x393 (=> $x198 $x205)))
 (let (($x165 (= (bvand ?x40 (_ bv4294967280 32)) ?x40)))
 (let (($x94 (= (bvand ?x23 (_ bv4294967292 32)) ?x23)))
 (let (($x163 (and $x94 $x165)))
 (let (($x73 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x81 (and true $x73)))
 (let (($x148 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x23 (bvsub ?x23 (_ bv4 32))) (bvult ?x23 (bvsub ?x23 (_ bv4 32))))))
 (let (($x146 (and (and (and $x148 $x81) $x94) $x163)))
 (let (($x151 (= true $x146)))
 (let (($x152 (=> $x78 $x151)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x136 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x119 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x125 (bvadd ?x119 (_ bv3 32))))
 (let ((?x131 (concat (select input.dst.llvm-mem ?x125) (concat ?x139 ?x136))))
 (let (($x138 (= (bvand ?x131 (_ bv4294967280 32)) ?x131)))
 (let (($x128 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x137 (and $x128 $x138)))
 (let (($x107 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv8 32))) (bvult ?x119 (bvsub ?x119 (_ bv8 32))))))
 (let (($x141 (and (and (and $x107 $x81) $x128) $x137)))
 (let (($x144 (= true $x141)))
 (let (($x296 (=> $x64 $x144)))
 (let (($x164 (and $x296 $x152)))
 (let (($x35 (= true $x164)))
 (let (($x155 (=> $x52 $x35)))
 (let (($x317 (=> $x92 $x151)))
 (let (($x15 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x197 (and (and $x15 $x317) $x155)))
 (let (($x36 (=> (and $x197 $x198) $x205)))
 (let (($x207 (= $x36 true)))
 (let (($x101 (= $x207 true)))
 (let (($x206 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x202 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x204 (= $x202 $x206)))
 (let (($x301 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x190 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x191 (= $x190 $x301)))
 (let (($x195 (and $x191 $x204)))
 (let (($x196 (= $x195 true)))
 (let (($x183 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x184 (= $x181 $x183)))
 (let (($x174 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x178 (= $x179 $x174)))
 (let (($x392 (and $x178 $x184)))
 (let (($x188 (= $x392 true)))
 (let ((?x172 (ite $x121 (_ bv0 32) (_ bv1 32))))
 (let (($x187 (bvuge ?x172 (_ bv1 32))))
 (let (($x182 (= $x186 $x187)))
 (let (($x173 (= ?x172 (_ bv0 32))))
 (let (($x180 (= $x171 $x173)))
 (let (($x185 (and $x180 $x182)))
 (let (($x175 (= $x185 true)))
 (let ((?x156 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x160 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x162 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x169 (concat ?x299 (concat ?x162 (concat ?x160 ?x156)))))
 (let (($x100 (= ?x169 input.dst.llvm-%t)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x21 (= $x317 true)))
 (let (($x298 (= $x21 true)))
 (let (($x153 (= $x298 true)))
 (let (($x166 (= $x155 true)))
 (let (($x316 (= $x166 true)))
 (let (($x297 (= $x316 true)))
 (let (($x83 (= $x15 true)))
 (let (($x104 (= $x83 true)))
 (let (($x42 (= $x104 true)))
 (let ((?x33 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x70 (= (_ bv0 32) ?x33)))
 (let ((?x58 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x74 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x58)))
 (let (($x61 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x53 (and $x61 $x74)))
 (let (($x41 (and $x53 $x70)))
 (let (($x57 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x25 (and $x57 $x41)))
 (let (($x65 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x14 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x90 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x14 $x65)))))))
 (let (($x47 (and $x90 $x25)))
 (let (($x20 (= $x47 true)))
 (let (($x5 (= $x20 true)))
 (let (($x108 (= $x5 true)))
 (let (($x84 (and $x108 $x42)))
 (let (($x10 (and $x84 $x42)))
 (let (($x28 (and $x10 $x297)))
 (let (($x167 (and $x28 $x153)))
 (let (($x8 (and $x167 $x161)))
 (let (($x300 (and $x8 $x175)))
 (let (($x55 (and $x300 $x188)))
 (let (($x193 (and $x55 $x196)))
 (let (($x17 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x302 (and $x17 $x193)))
 (let (($x106 (= false false)))
 (let (($x192 (and $x106 $x302)))
 (let (($x194 (and $x106 $x192)))
 (let (($x123 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x125)))
 (let (($x13 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x11 (and $x92 $x64)))
 (let (($x124 (=> (and $x11 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x123)))))))
 (let (($x110 (bvugt ?x23 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x88 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x63)))
 (let (($x43 (=> (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x88 $x110)))))))
 (let (($x109 (=> (and $x92 (bvule ?x23 (bvsub (bvadd ?x23 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x88 $x110)))))))
 (let (($x129 (and $x109 $x124)))
 (let (($x201 (and $x129 $x194)))
 (let (($x208 (=> $x201 $x101)))
 (not $x208)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 8
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3873X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x16 (concat ?x98 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x121 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x110 (bvadd ?x121 (_ bv3 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem ?x110) (concat ?x27 ?x16))))
 (let ((?x271 (bvadd ?x64 (_ bv8 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x274))))
 (let (($x395 (= (_ bv0 32) ?x276)))
 (let ((?x277 (ite $x395 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x277 (_ bv1 32))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x212 (concat ?x215 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x32 (concat ?x223 (concat ?x211 ?x212))))
 (let ((?x253 (bvadd ?x32 (_ bv8 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x253 (_ bv1 32))) (select input.dst.llvm-mem ?x253))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x253 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x253 (_ bv2 32))) ?x262))))
 (let (($x263 (= (_ bv0 32) ?x265)))
 (let ((?x266 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x266 (_ bv1 32))))
 (let (($x396 (= $x284 $x285)))
 (let (($x219 (= (_ bv0 32) ?x32)))
 (let ((?x220 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x220 (_ bv1 32))))
 (let (($x286 (=> $x224 $x396)))
 (let (($x103 (= false false)))
 (let (($x268 (= ?x266 (_ bv0 32))))
 (let (($x281 (and $x224 $x268)))
 (let (($x329 (=> $x281 $x103)))
 (let (($x275 (= ?x277 (_ bv0 32))))
 (let (($x328 (= $x268 $x275)))
 (let (($x278 (=> $x224 $x328)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x250 (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv8 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x258 (concat ?x325 (concat ?x260 ?x251))))
 (let (($x254 (= ?x258 ?x258)))
 (let (($x255 (=> $x224 $x254)))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x246 (concat ?x324 (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv4 32))))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x247 (concat ?x244 (concat ?x243 ?x246))))
 (let (($x240 (= ?x247 ?x247)))
 (let (($x238 (=> $x224 $x240)))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3873X))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv2 32))) ?x235)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv3 32))) ?x233)))
 (let (($x306 (= ?x305 ?x305)))
 (let (($x234 (=> $x224 $x306)))
 (let (($x11 (= (_ bv0 32) ?x64)))
 (let ((?x322 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x322 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x218 (= ?x220 (_ bv0 32))))
 (let (($x323 (=> $x218 $x103)))
 (let (($x289 (and (and (and (and (= ?x32 ?x64) (= $x218 (= ?x322 (_ bv0 32)))) $x323) $x226) $x234)))
 (let (($x291 (and (and (and (and (and $x289 $x238) $x255) $x278) $x329) $x286)))
 (let (($x303 (not true)))
 (let (($x292 (or $x303 $x291)))
 (let (($x210 (= true true)))
 (let (($x397 (and $x210 $x292)))
 (let (($x293 (= $x397 true)))
 (let (($x393 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x205 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x36 (= $x205 $x393)))
 (let (($x203 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x197 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x199 (= $x197 $x203)))
 (let (($x207 (and $x199 $x36)))
 (let (($x101 (= $x207 true)))
 (let (($x193 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x14 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x302 (= $x14 $x193)))
 (let (($x195 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x206 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x196 (= $x206 $x195)))
 (let (($x192 (and $x196 $x302)))
 (let (($x194 (= $x192 true)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x188 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (bvuge ?x188 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x320 (= $x60 $x190)))
 (let (($x55 (= ?x188 (_ bv0 32))))
 (let (($x392 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x189 (= $x392 $x55)))
 (let (($x301 (and $x189 $x320)))
 (let (($x191 (= $x301 true)))
 (let ((?x186 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x174 (concat ?x177 (concat ?x300 (concat ?x182 ?x186)))))
 (let (($x178 (= ?x174 input.dst.llvm-%t)))
 (let (($x181 (= $x178 true)))
 (let (($x183 (= $x181 true)))
 (let (($x297 (= (bvand ?x64 (_ bv4294967280 32)) ?x64)))
 (let (($x166 (= (bvand ?x121 (_ bv4294967292 32)) ?x121)))
 (let (($x28 (and $x166 $x297)))
 (let (($x295 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x136 (and true $x295)))
 (let (($x35 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x121 (bvsub ?x121 (_ bv4 32))) (bvult ?x121 (bvsub ?x121 (_ bv4 32))))))
 (let (($x298 (and (and (and $x35 $x136) $x166) $x28)))
 (let (($x153 (= true $x298)))
 (let (($x89 (not $x71)))
 (let (($x49 (=> $x89 $x153)))
 (let (($x319 (= $x49 true)))
 (let (($x171 (= $x319 true)))
 (let (($x172 (= $x171 true)))
 (let (($x67 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x168 (and $x67 $x49)))
 (let (($x107 (not $x11)))
 (let (($x167 (=> $x107 $x153)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x144 (concat ?x141 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x26 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x123 (bvadd ?x26 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x123) (concat ?x142 ?x144))))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x135 (= (bvand ?x26 (_ bv4294967292 32)) ?x26)))
 (let (($x149 (and $x135 $x150)))
 (let (($x133 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x26 (bvsub ?x26 (_ bv8 32))) (bvult ?x26 (bvsub ?x26 (_ bv8 32))))))
 (let (($x147 (and (and (and $x133 $x136) $x135) $x149)))
 (let (($x165 (= true $x147)))
 (let (($x163 (=> $x11 $x165)))
 (let (($x158 (and $x163 $x167)))
 (let (($x299 (= true $x158)))
 (let (($x81 (or $x11 $x107)))
 (let (($x132 (and $x89 $x81)))
 (let (($x170 (=> $x132 $x299)))
 (let (($x169 (and $x170 $x168)))
 (let (($x100 (= $x169 true)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x162 (= $x170 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x50 (and $x89 $x107)))
 (let (($x69 (= $x50 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x115 (= $x29 true)))
 (let ((?x108 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x108)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x20 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x47)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (and $x25 $x20)))
 (let (($x99 (and $x5 $x51)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x127 $x99)))
 (let (($x61 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x41 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x57 $x61)))))))
 (let (($x83 (and $x41 $x15)))
 (let (($x104 (= $x83 true)))
 (let (($x42 (= $x104 true)))
 (let (($x84 (= $x42 true)))
 (let (($x87 (and $x84 $x115)))
 (let (($x46 (and $x87 $x115)))
 (let (($x73 (and $x46 $x97)))
 (let (($x156 (and $x73 $x160)))
 (let (($x8 (and $x156 $x161)))
 (let (($x173 (and $x8 $x172)))
 (let (($x184 (and $x173 $x183)))
 (let (($x202 (and $x184 $x191)))
 (let (($x201 (and $x202 $x194)))
 (let (($x208 (and $x201 $x101)))
 (let (($x65 (and $x60 $x14)))
 (let (($x321 (and $x65 $x208)))
 (let (($x294 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x72 (and $x294 $x321)))
 (let (($x318 (and $x103 $x72)))
 (let (($x68 (and $x103 $x318)))
 (let (($x66 (bvugt ?x26 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x106 (=> (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x66)))))))
 (let (($x54 (and $x89 $x11)))
 (let (($x122 (=> (and $x54 (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x66)))))))
 (let (($x96 (bvugt ?x121 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x59 (=> (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x112 $x96)))))))
 (let (($x86 (=> (and $x89 (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x112 $x96)))))))
 (let (($x91 (and $x86 $x122)))
 (let (($x209 (and $x91 $x68)))
 (let (($x312 (=> $x209 $x293)))
 (not $x312))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3873X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x98 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x16 (concat ?x98 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x121 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x110 (bvadd ?x121 (_ bv3 32))))
 (let ((?x64 (concat (select input.dst.llvm-mem ?x110) (concat ?x27 ?x16))))
 (let ((?x271 (bvadd ?x64 (_ bv8 32))))
 (let ((?x274 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv1 32))) (select input.dst.llvm-mem ?x271))))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x271 (_ bv2 32))) ?x274))))
 (let (($x395 (= (_ bv0 32) ?x276)))
 (let ((?x277 (ite $x395 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x277 (_ bv1 32))))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x212 (concat ?x215 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x223 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x32 (concat ?x223 (concat ?x211 ?x212))))
 (let ((?x253 (bvadd ?x32 (_ bv8 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd ?x253 (_ bv1 32))) (select input.dst.llvm-mem ?x253))))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd ?x253 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x253 (_ bv2 32))) ?x262))))
 (let (($x263 (= (_ bv0 32) ?x265)))
 (let ((?x266 (ite $x263 (_ bv0 32) (_ bv1 32))))
 (let (($x284 (bvuge ?x266 (_ bv1 32))))
 (let (($x396 (= $x284 $x285)))
 (let (($x219 (= (_ bv0 32) ?x32)))
 (let ((?x220 (ite $x219 (_ bv0 32) (_ bv1 32))))
 (let (($x224 (bvuge ?x220 (_ bv1 32))))
 (let (($x286 (=> $x224 $x396)))
 (let (($x103 (= false false)))
 (let (($x268 (= ?x266 (_ bv0 32))))
 (let (($x281 (and $x224 $x268)))
 (let (($x329 (=> $x281 $x103)))
 (let (($x275 (= ?x277 (_ bv0 32))))
 (let (($x328 (= $x268 $x275)))
 (let (($x278 (=> $x224 $x328)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x251 (concat ?x250 (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv8 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x325 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x258 (concat ?x325 (concat ?x260 ?x251))))
 (let (($x254 (= ?x258 ?x258)))
 (let (($x255 (=> $x224 $x254)))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x246 (concat ?x324 (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv4 32))))))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3873X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x247 (concat ?x244 (concat ?x243 ?x246))))
 (let (($x240 (= ?x247 ?x247)))
 (let (($x238 (=> $x224 $x240)))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3873X))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv2 32))) ?x235)))
 (let ((?x305 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3873X (_ bv3 32))) ?x233)))
 (let (($x306 (= ?x305 ?x305)))
 (let (($x234 (=> $x224 $x306)))
 (let (($x11 (= (_ bv0 32) ?x64)))
 (let ((?x322 (ite $x11 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x322 (_ bv1 32))))
 (let (($x226 (= $x224 $x225)))
 (let (($x218 (= ?x220 (_ bv0 32))))
 (let (($x323 (=> $x218 $x103)))
 (let (($x289 (and (and (and (and (= ?x32 ?x64) (= $x218 (= ?x322 (_ bv0 32)))) $x323) $x226) $x234)))
 (let (($x291 (and (and (and (and (and $x289 $x238) $x255) $x278) $x329) $x286)))
 (let (($x303 (not true)))
 (let (($x292 (or $x303 $x291)))
 (let (($x210 (= true true)))
 (let (($x397 (and $x210 $x292)))
 (let (($x293 (= $x397 true)))
 (let (($x393 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x205 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x36 (= $x205 $x393)))
 (let (($x203 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x197 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x199 (= $x197 $x203)))
 (let (($x207 (and $x199 $x36)))
 (let (($x101 (= $x207 true)))
 (let (($x193 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x14 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x302 (= $x14 $x193)))
 (let (($x195 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x206 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x196 (= $x206 $x195)))
 (let (($x192 (and $x196 $x302)))
 (let (($x194 (= $x192 true)))
 (let (($x71 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x188 (ite $x71 (_ bv0 32) (_ bv1 32))))
 (let (($x190 (bvuge ?x188 (_ bv1 32))))
 (let (($x60 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x320 (= $x60 $x190)))
 (let (($x55 (= ?x188 (_ bv0 32))))
 (let (($x392 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x189 (= $x392 $x55)))
 (let (($x301 (and $x189 $x320)))
 (let (($x191 (= $x301 true)))
 (let ((?x186 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x300 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x177 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x174 (concat ?x177 (concat ?x300 (concat ?x182 ?x186)))))
 (let (($x178 (= ?x174 input.dst.llvm-%t)))
 (let (($x181 (= $x178 true)))
 (let (($x183 (= $x181 true)))
 (let (($x297 (= (bvand ?x64 (_ bv4294967280 32)) ?x64)))
 (let (($x166 (= (bvand ?x121 (_ bv4294967292 32)) ?x121)))
 (let (($x28 (and $x166 $x297)))
 (let (($x295 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x136 (and true $x295)))
 (let (($x35 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x121 (bvsub ?x121 (_ bv4 32))) (bvult ?x121 (bvsub ?x121 (_ bv4 32))))))
 (let (($x298 (and (and (and $x35 $x136) $x166) $x28)))
 (let (($x153 (= true $x298)))
 (let (($x89 (not $x71)))
 (let (($x49 (=> $x89 $x153)))
 (let (($x319 (= $x49 true)))
 (let (($x171 (= $x319 true)))
 (let (($x172 (= $x171 true)))
 (let (($x67 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x168 (and $x67 $x49)))
 (let (($x107 (not $x11)))
 (let (($x167 (=> $x107 $x153)))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x144 (concat ?x141 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x26 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x123 (bvadd ?x26 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x123) (concat ?x142 ?x144))))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x135 (= (bvand ?x26 (_ bv4294967292 32)) ?x26)))
 (let (($x149 (and $x135 $x150)))
 (let (($x133 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x26 (bvsub ?x26 (_ bv8 32))) (bvult ?x26 (bvsub ?x26 (_ bv8 32))))))
 (let (($x147 (and (and (and $x133 $x136) $x135) $x149)))
 (let (($x165 (= true $x147)))
 (let (($x163 (=> $x11 $x165)))
 (let (($x158 (and $x163 $x167)))
 (let (($x299 (= true $x158)))
 (let (($x81 (or $x11 $x107)))
 (let (($x132 (and $x89 $x81)))
 (let (($x170 (=> $x132 $x299)))
 (let (($x169 (and $x170 $x168)))
 (let (($x100 (= $x169 true)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x162 (= $x170 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x50 (and $x89 $x107)))
 (let (($x69 (= $x50 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x115 (= $x29 true)))
 (let ((?x108 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x51 (= (_ bv0 32) ?x108)))
 (let ((?x47 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x20 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x47)))
 (let (($x25 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x5 (and $x25 $x20)))
 (let (($x99 (and $x5 $x51)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x15 (and $x127 $x99)))
 (let (($x61 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x57 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x41 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x57 $x61)))))))
 (let (($x83 (and $x41 $x15)))
 (let (($x104 (= $x83 true)))
 (let (($x42 (= $x104 true)))
 (let (($x84 (= $x42 true)))
 (let (($x87 (and $x84 $x115)))
 (let (($x46 (and $x87 $x115)))
 (let (($x73 (and $x46 $x97)))
 (let (($x156 (and $x73 $x160)))
 (let (($x8 (and $x156 $x161)))
 (let (($x173 (and $x8 $x172)))
 (let (($x184 (and $x173 $x183)))
 (let (($x202 (and $x184 $x191)))
 (let (($x201 (and $x202 $x194)))
 (let (($x208 (and $x201 $x101)))
 (let (($x65 (and $x60 $x14)))
 (let (($x321 (and $x65 $x208)))
 (let (($x294 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x72 (and $x294 $x321)))
 (let (($x318 (and $x103 $x72)))
 (let (($x68 (and $x103 $x318)))
 (let (($x66 (bvugt ?x26 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x38 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x123)))
 (let (($x106 (=> (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x38 $x66)))))))
 (let (($x54 (and $x89 $x11)))
 (let (($x122 (=> (and $x54 (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x38 $x66)))))))
 (let (($x96 (bvugt ?x121 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x112 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x110)))
 (let (($x59 (=> (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x112 $x96)))))))
 (let (($x86 (=> (and $x89 (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x112 $x96)))))))
 (let (($x91 (and $x86 $x122)))
 (let (($x209 (and $x91 $x68)))
 (let (($x312 (=> $x209 $x293)))
 (not $x312))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 9
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3915X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x142 (concat ?x296 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x125 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x66 (bvadd ?x125 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x66) (concat ?x141 ?x142))))
 (let ((?x268 (bvadd ?x315 (_ bv8 32))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem ?x268))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv2 32))) ?x282))))
 (let (($x276 (= (_ bv0 32) ?x283)))
 (let ((?x395 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x290 (bvuge ?x395 (_ bv1 32))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x215 (concat ?x304 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x219 (concat ?x105 (concat ?x212 ?x215))))
 (let ((?x287 (bvadd ?x219 (_ bv8 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv1 32))) (select input.dst.llvm-mem ?x287))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv2 32))) ?x225))))
 (let (($x232 (= (_ bv0 32) ?x307)))
 (let ((?x228 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x228 (_ bv1 32))))
 (let (($x281 (= $x278 $x290)))
 (let (($x220 (= (_ bv0 32) ?x219)))
 (let ((?x218 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x218 (_ bv1 32))))
 (let (($x329 (=> $x56 $x281)))
 (let (($x277 (= ?x395 (_ bv0 32))))
 (let (($x229 (= ?x228 (_ bv0 32))))
 (let (($x275 (= $x229 $x277)))
 (let (($x328 (=> $x56 $x275)))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x270 (concat ?x269 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv8 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x265 (concat ?x267 (concat ?x259 ?x270))))
 (let (($x263 (= ?x265 ?x265)))
 (let (($x266 (=> $x56 $x263)))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x248 (concat ?x260 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv4 32))))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x254 (concat ?x258 (concat ?x241 ?x248))))
 (let (($x255 (= ?x254 ?x254)))
 (let (($x311 (=> $x56 $x255)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3915X))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv2 32))) ?x324)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv3 32))) ?x249)))
 (let (($x331 (= ?x238 ?x238)))
 (let (($x239 (=> $x56 $x331)))
 (let (($x305 (= (_ bv0 32) ?x315)))
 (let ((?x306 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x306 (_ bv1 32))))
 (let (($x308 (= $x56 $x236)))
 (let (($x234 (= ?x306 (_ bv0 32))))
 (let (($x322 (= ?x218 (_ bv0 32))))
 (let (($x289 (= $x322 $x234)))
 (let (($x233 (= ?x219 ?x315)))
 (let (($x62 (= false false)))
 (let (($x394 (and $x56 $x229)))
 (let (($x235 (=> $x394 $x62)))
 (let (($x221 (=> $x322 $x62)))
 (let (($x291 (and (and (and (and (and (and $x221 $x235) $x233) $x289) $x308) $x239) $x311)))
 (let (($x293 (and (and (and $x291 $x266) $x328) $x329)))
 (let (($x216 (not true)))
 (let (($x312 (or $x216 $x293)))
 (let (($x217 (= true true)))
 (let (($x333 (and $x217 $x312)))
 (let (($x117 (= $x333 true)))
 (let (($x207 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x101 (= $x36 $x207)))
 (let (($x205 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x393 (= $x203 $x205)))
 (let (($x208 (and $x393 $x101)))
 (let (($x321 (= $x208 true)))
 (let (($x192 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x65 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x194 (= $x65 $x192)))
 (let (($x193 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x195 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x302 (= $x195 $x193)))
 (let (($x201 (and $x302 $x194)))
 (let (($x200 (= $x201 true)))
 (let (($x116 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x189 (ite $x116 (_ bv0 32) (_ bv1 32))))
 (let (($x301 (bvuge ?x189 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x191 (= $x18 $x301)))
 (let (($x190 (= ?x189 (_ bv0 32))))
 (let (($x55 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x320 (= $x55 $x190)))
 (let (($x202 (and $x320 $x191)))
 (let (($x206 (= $x202 true)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x178 (concat ?x185 (concat ?x187 ?x175)))))
 (let (($x183 (= ?x181 input.dst.llvm-%t)))
 (let (($x184 (= $x183 true)))
 (let (($x392 (= $x184 true)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x37 (concat ?x27 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x121 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x121 (_ bv3 32))))
 (let ((?x11 (concat (select input.dst.llvm-mem ?x96) (concat ?x16 ?x37))))
 (let (($x316 (= (bvand ?x11 (_ bv4294967280 32)) ?x11)))
 (let (($x166 (= (bvand ?x121 (_ bv4294967292 32)) ?x121)))
 (let (($x297 (and $x166 $x316)))
 (let (($x136 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x94 (and true $x136)))
 (let (($x317 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x121 (bvsub ?x121 (_ bv4 32))) (bvult ?x121 (bvsub ?x121 (_ bv4 32))))))
 (let (($x153 (and (and (and $x317 $x94) $x166) $x297)))
 (let (($x167 (= true $x153)))
 (let (($x71 (not $x116)))
 (let (($x168 (=> $x71 $x167)))
 (let (($x171 (= $x168 true)))
 (let (($x172 (= $x171 true)))
 (let (($x173 (= $x172 true)))
 (let (($x29 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x169 (and $x29 $x168)))
 (let (($x54 (= (_ bv0 32) ?x11)))
 (let (($x81 (not $x54)))
 (let (($x158 (=> $x81 $x167)))
 (let (($x148 (= (bvand ?x315 (_ bv4294967280 32)) ?x315)))
 (let (($x135 (= (bvand ?x125 (_ bv4294967292 32)) ?x125)))
 (let (($x150 (and $x135 $x148)))
 (let (($x139 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x125 (bvsub ?x125 (_ bv8 32))) (bvult ?x125 (bvsub ?x125 (_ bv8 32))))))
 (let (($x165 (and (and (and $x139 $x94) $x135) $x150)))
 (let (($x163 (= true $x165)))
 (let (($x151 (=> $x54 $x163)))
 (let (($x299 (and $x151 $x158)))
 (let (($x170 (= true $x299)))
 (let (($x132 (or $x54 $x81)))
 (let (($x95 (and $x71 $x132)))
 (let (($x162 (=> $x95 $x170)))
 (let (($x100 (and $x162 $x169)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x8 (= $x161 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x156 (= $x160 true)))
 (let (($x119 (and $x71 $x54)))
 (let (($x69 (= $x119 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x115 (= $x29 true)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let ((?x99 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x99)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x20 $x108)))
 (let (($x83 (and $x51 $x15)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x114 $x83)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x47 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x53)))))))
 (let (($x42 (and $x47 $x104)))
 (let (($x84 (= $x42 true)))
 (let (($x10 (= $x84 true)))
 (let (($x78 (= $x10 true)))
 (let (($x107 (and $x78 $x46)))
 (let (($x50 (and $x107 $x46)))
 (let (($x73 (and $x50 $x97)))
 (let (($x49 (and $x73 $x156)))
 (let (($x319 (and $x49 $x8)))
 (let (($x179 (and $x319 $x173)))
 (let (($x188 (and $x179 $x392)))
 (let (($x204 (and $x188 $x206)))
 (let (($x197 (and $x204 $x200)))
 (let (($x72 (and $x197 $x321)))
 (let (($x7 (and $x18 $x65)))
 (let (($x318 (and $x7 $x72)))
 (let (($x45 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x68 (and $x45 $x318)))
 (let (($x209 (and $x62 $x68)))
 (let (($x210 (and $x62 $x209)))
 (let (($x102 (bvugt ?x125 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x103 (=> (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x102)))))))
 (let (($x44 (=> (and $x119 (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x39 $x102)))))))
 (let (($x22 (bvugt ?x121 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x40 (=> (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x22)))))))
 (let (($x93 (=> (and $x71 (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x22)))))))
 (let (($x129 (and $x93 $x44)))
 (let (($x303 (and $x129 $x210)))
 (let (($x6 (=> $x303 $x117)))
 (not $x6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3915X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x296 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x142 (concat ?x296 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x141 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x125 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x66 (bvadd ?x125 (_ bv3 32))))
 (let ((?x315 (concat (select input.dst.llvm-mem ?x66) (concat ?x141 ?x142))))
 (let ((?x268 (bvadd ?x315 (_ bv8 32))))
 (let ((?x282 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv1 32))) (select input.dst.llvm-mem ?x268))))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x268 (_ bv2 32))) ?x282))))
 (let (($x276 (= (_ bv0 32) ?x283)))
 (let ((?x395 (ite $x276 (_ bv0 32) (_ bv1 32))))
 (let (($x290 (bvuge ?x395 (_ bv1 32))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x215 (concat ?x304 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x212 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x219 (concat ?x105 (concat ?x212 ?x215))))
 (let ((?x287 (bvadd ?x219 (_ bv8 32))))
 (let ((?x225 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv1 32))) (select input.dst.llvm-mem ?x287))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x287 (_ bv2 32))) ?x225))))
 (let (($x232 (= (_ bv0 32) ?x307)))
 (let ((?x228 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x278 (bvuge ?x228 (_ bv1 32))))
 (let (($x281 (= $x278 $x290)))
 (let (($x220 (= (_ bv0 32) ?x219)))
 (let ((?x218 (ite $x220 (_ bv0 32) (_ bv1 32))))
 (let (($x56 (bvuge ?x218 (_ bv1 32))))
 (let (($x329 (=> $x56 $x281)))
 (let (($x277 (= ?x395 (_ bv0 32))))
 (let (($x229 (= ?x228 (_ bv0 32))))
 (let (($x275 (= $x229 $x277)))
 (let (($x328 (=> $x56 $x275)))
 (let ((?x269 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x270 (concat ?x269 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv8 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x267 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x265 (concat ?x267 (concat ?x259 ?x270))))
 (let (($x263 (= ?x265 ?x265)))
 (let (($x266 (=> $x56 $x263)))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x248 (concat ?x260 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv4 32))))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x254 (concat ?x258 (concat ?x241 ?x248))))
 (let (($x255 (= ?x254 ?x254)))
 (let (($x311 (=> $x56 $x255)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3915X))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv2 32))) ?x324)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv3 32))) ?x249)))
 (let (($x331 (= ?x238 ?x238)))
 (let (($x239 (=> $x56 $x331)))
 (let (($x305 (= (_ bv0 32) ?x315)))
 (let ((?x306 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x236 (bvuge ?x306 (_ bv1 32))))
 (let (($x308 (= $x56 $x236)))
 (let (($x234 (= ?x306 (_ bv0 32))))
 (let (($x322 (= ?x218 (_ bv0 32))))
 (let (($x289 (= $x322 $x234)))
 (let (($x233 (= ?x219 ?x315)))
 (let (($x62 (= false false)))
 (let (($x394 (and $x56 $x229)))
 (let (($x235 (=> $x394 $x62)))
 (let (($x221 (=> $x322 $x62)))
 (let (($x291 (and (and (and (and (and (and $x221 $x235) $x233) $x289) $x308) $x239) $x311)))
 (let (($x293 (and (and (and $x291 $x266) $x328) $x329)))
 (let (($x216 (not true)))
 (let (($x312 (or $x216 $x293)))
 (let (($x217 (= true true)))
 (let (($x333 (and $x217 $x312)))
 (let (($x117 (= $x333 true)))
 (let (($x207 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x36 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x101 (= $x36 $x207)))
 (let (($x205 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x393 (= $x203 $x205)))
 (let (($x208 (and $x393 $x101)))
 (let (($x321 (= $x208 true)))
 (let (($x192 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x65 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x194 (= $x65 $x192)))
 (let (($x193 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x195 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x302 (= $x195 $x193)))
 (let (($x201 (and $x302 $x194)))
 (let (($x200 (= $x201 true)))
 (let (($x116 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x189 (ite $x116 (_ bv0 32) (_ bv1 32))))
 (let (($x301 (bvuge ?x189 (_ bv1 32))))
 (let (($x18 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x191 (= $x18 $x301)))
 (let (($x190 (= ?x189 (_ bv0 32))))
 (let (($x55 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x320 (= $x55 $x190)))
 (let (($x202 (and $x320 $x191)))
 (let (($x206 (= $x202 true)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x187 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x185 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x181 (concat ?x178 (concat ?x185 (concat ?x187 ?x175)))))
 (let (($x183 (= ?x181 input.dst.llvm-%t)))
 (let (($x184 (= $x183 true)))
 (let (($x392 (= $x184 true)))
 (let ((?x27 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x37 (concat ?x27 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x121 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x121 (_ bv3 32))))
 (let ((?x11 (concat (select input.dst.llvm-mem ?x96) (concat ?x16 ?x37))))
 (let (($x316 (= (bvand ?x11 (_ bv4294967280 32)) ?x11)))
 (let (($x166 (= (bvand ?x121 (_ bv4294967292 32)) ?x121)))
 (let (($x297 (and $x166 $x316)))
 (let (($x136 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x94 (and true $x136)))
 (let (($x317 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x121 (bvsub ?x121 (_ bv4 32))) (bvult ?x121 (bvsub ?x121 (_ bv4 32))))))
 (let (($x153 (and (and (and $x317 $x94) $x166) $x297)))
 (let (($x167 (= true $x153)))
 (let (($x71 (not $x116)))
 (let (($x168 (=> $x71 $x167)))
 (let (($x171 (= $x168 true)))
 (let (($x172 (= $x171 true)))
 (let (($x173 (= $x172 true)))
 (let (($x29 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x169 (and $x29 $x168)))
 (let (($x54 (= (_ bv0 32) ?x11)))
 (let (($x81 (not $x54)))
 (let (($x158 (=> $x81 $x167)))
 (let (($x148 (= (bvand ?x315 (_ bv4294967280 32)) ?x315)))
 (let (($x135 (= (bvand ?x125 (_ bv4294967292 32)) ?x125)))
 (let (($x150 (and $x135 $x148)))
 (let (($x139 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x125 (bvsub ?x125 (_ bv8 32))) (bvult ?x125 (bvsub ?x125 (_ bv8 32))))))
 (let (($x165 (and (and (and $x139 $x94) $x135) $x150)))
 (let (($x163 (= true $x165)))
 (let (($x151 (=> $x54 $x163)))
 (let (($x299 (and $x151 $x158)))
 (let (($x170 (= true $x299)))
 (let (($x132 (or $x54 $x81)))
 (let (($x95 (and $x71 $x132)))
 (let (($x162 (=> $x95 $x170)))
 (let (($x100 (and $x162 $x169)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x8 (= $x161 true)))
 (let (($x157 (= $x162 true)))
 (let (($x160 (= $x157 true)))
 (let (($x156 (= $x160 true)))
 (let (($x119 (and $x71 $x54)))
 (let (($x69 (= $x119 true)))
 (let (($x126 (= $x69 true)))
 (let (($x97 (= $x126 true)))
 (let (($x115 (= $x29 true)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let ((?x99 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x15 (= (_ bv0 32) ?x99)))
 (let ((?x5 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x108 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x5)))
 (let (($x20 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x51 (and $x20 $x108)))
 (let (($x83 (and $x51 $x15)))
 (let (($x114 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x104 (and $x114 $x83)))
 (let (($x53 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x47 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x53)))))))
 (let (($x42 (and $x47 $x104)))
 (let (($x84 (= $x42 true)))
 (let (($x10 (= $x84 true)))
 (let (($x78 (= $x10 true)))
 (let (($x107 (and $x78 $x46)))
 (let (($x50 (and $x107 $x46)))
 (let (($x73 (and $x50 $x97)))
 (let (($x49 (and $x73 $x156)))
 (let (($x319 (and $x49 $x8)))
 (let (($x179 (and $x319 $x173)))
 (let (($x188 (and $x179 $x392)))
 (let (($x204 (and $x188 $x206)))
 (let (($x197 (and $x204 $x200)))
 (let (($x72 (and $x197 $x321)))
 (let (($x7 (and $x18 $x65)))
 (let (($x318 (and $x7 $x72)))
 (let (($x45 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x68 (and $x45 $x318)))
 (let (($x209 (and $x62 $x68)))
 (let (($x210 (and $x62 $x209)))
 (let (($x102 (bvugt ?x125 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x103 (=> (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x102)))))))
 (let (($x44 (=> (and $x119 (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x39 $x102)))))))
 (let (($x22 (bvugt ?x121 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x82 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x40 (=> (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x82 $x22)))))))
 (let (($x93 (=> (and $x71 (bvule ?x121 (bvsub (bvadd ?x121 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x82 $x22)))))))
 (let (($x129 (and $x93 $x44)))
 (let (($x303 (and $x129 $x210)))
 (let (($x6 (=> $x303 $x117)))
 (not $x6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0024bd34)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x10000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00100000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x24)
                                #x0024bc28
                                #x20)
                         #x0024bd37
                         #x00)
                  #x0024bc29
                  #xbc)))
(let ((a!2 (store (store (store (store a!1 #x0024bc2a #x00) #x0024bc2b #x00)
                         #x0024bd34
                         #x20)
                  #x0024bd35
                  #xbc)))
  (store (store (store (store a!2 #x0024bc27 #x00) #x0024bc24 #x00)
                #x0024bc26
                #x00)
         #x0024bc25
         #x00))))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x0024bc20)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0024bd34)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0024bd37)
  (define-fun input.ind-%var3915X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483655 32) (_ bv32 8)) (_ bv536870920 32) (_ bv16 8)))
(define-fun input.ind-%var3915X () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483652 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483652 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483655 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 10
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3915X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x296 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x38 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x13 (bvadd ?x38 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x13) (concat ?x142 ?x296))))
 (let ((?x344 (bvadd ?x143 (_ bv8 32))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x344 (_ bv1 32))) (select input.dst.llvm-mem ?x344))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ?x344 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x344 (_ bv2 32))) ?x347))))
 (let (($x351 (= (_ bv0 32) ?x432)))
 (let ((?x352 (ite $x351 (_ bv0 32) (_ bv1 32))))
 (let (($x355 (bvuge ?x352 (_ bv1 32))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x257 (concat ?x286 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x260 (concat ?x252 (concat ?x258 ?x257))))
 (let ((?x311 (bvadd ?x260 (_ bv8 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x311 (_ bv1 32))) (select input.dst.llvm-mem ?x311))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x311 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x311 (_ bv2 32))) ?x267))))
 (let (($x326 (= (_ bv0 32) ?x270)))
 (let ((?x265 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (bvuge ?x265 (_ bv1 32))))
 (let (($x356 (= $x433 $x355)))
 (let (($x325 (= (_ bv0 32) ?x260)))
 (let ((?x248 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x248 (_ bv1 32))))
 (let (($x357 (=> $x255 $x356)))
 (let (($x353 (= ?x352 (_ bv0 32))))
 (let (($x263 (= ?x265 (_ bv0 32))))
 (let (($x401 (= $x263 $x353)))
 (let (($x354 (=> $x255 $x401)))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x339 (concat ?x338 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv8 32))))))
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x343 (concat ?x342 (concat ?x340 ?x339))))
 (let (($x431 (= ?x343 ?x343)))
 (let (($x399 (=> $x255 $x431)))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x117 (concat ?x333 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv4 32))))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x177 (concat ?x90 (concat ?x180 ?x117))))
 (let (($x334 (= ?x177 ?x177)))
 (let (($x335 (=> $x255 $x334)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3915X))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv2 32))) ?x276)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv3 32))) ?x275)))
 (let (($x290 (= ?x278 ?x278)))
 (let (($x281 (=> $x255 $x290)))
 (let (($x310 (= (_ bv0 32) ?x143)))
 (let ((?x274 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x274 (_ bv1 32))))
 (let (($x280 (= $x255 $x279)))
 (let (($x327 (= ?x274 (_ bv0 32))))
 (let (($x251 (= ?x248 (_ bv0 32))))
 (let (($x272 (= $x251 $x327)))
 (let (($x268 (= ?x260 ?x143)))
 (let (($x294 (= false false)))
 (let (($x266 (and $x255 $x263)))
 (let (($x292 (=> $x266 $x294)))
 (let (($x254 (=> $x251 $x294)))
 (let (($x361 (and (and (and (and (and (and $x254 $x292) $x268) $x272) $x280) $x281) $x335)))
 (let (($x472 (and (and (and $x361 $x399) $x354) $x357)))
 (let (($x249 (not true)))
 (let (($x363 (or $x249 $x472)))
 (let (($x324 (= true true)))
 (let (($x404 (and $x324 $x363)))
 (let (($x364 (= $x404 true)))
 (let (($x289 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x234 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x285 (= $x234 $x289)))
 (let (($x305 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x233 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x306 (= $x233 $x305)))
 (let (($x394 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x229 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x235 (= $x229 $x394)))
 (let (($x232 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x227 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x227 $x232)))
 (let (($x323 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x244 (and (and (and (and $x323 $x228) $x235) $x306) $x285)))
 (let (($x247 (= $x244 true)))
 (let (($x217 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x287 (=> $x217 $x294)))
 (let (($x221 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x105 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x56 (= $x105 $x221)))
 (let (($x218 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x322 (= $x217 $x218)))
 (let (($x231 (and (and $x322 $x56) $x287)))
 (let (($x226 (= $x231 true)))
 (let (($x222 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x212 (= $x105 $x222)))
 (let (($x223 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x32 (= $x217 $x223)))
 (let (($x209 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x57 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x210 (= $x57 $x209)))
 (let (($x318 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x201 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x68 (= $x201 $x318)))
 (let (($x321 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x215 (and (and (and (and $x321 $x68) $x210) $x32) $x212)))
 (let (($x214 (= $x215 true)))
 (let (($x205 (=> $x201 $x294)))
 (let (($x203 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x199 (= $x57 $x203)))
 (let (($x197 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x198 (= $x201 $x197)))
 (let (($x36 (and (and $x198 $x199) $x205)))
 (let (($x207 (= $x36 true)))
 (let (($x301 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x196 (=> $x301 $x294)))
 (let (($x116 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x191 (ite $x116 (_ bv0 32) (_ bv1 32))))
 (let (($x204 (bvuge ?x191 (_ bv1 32))))
 (let (($x65 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x195 (= $x65 $x204)))
 (let (($x202 (= ?x191 (_ bv0 32))))
 (let (($x206 (= $x301 $x202)))
 (let (($x302 (and (and $x206 $x195) $x196)))
 (let (($x192 (= $x302 true)))
 (let ((?x300 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x392 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x188 (concat ?x392 (concat ?x181 (concat ?x175 ?x300)))))
 (let (($x55 (= ?x188 input.dst.llvm-%t)))
 (let (($x189 (= $x55 true)))
 (let (($x190 (= $x189 true)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x27 (concat ?x9 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x113 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x43 (bvadd ?x113 (_ bv3 32))))
 (let ((?x119 (concat (select input.dst.llvm-mem ?x43) (concat ?x120 ?x27))))
 (let (($x297 (= (bvand ?x119 (_ bv4294967280 32)) ?x119)))
 (let (($x21 (= (bvand ?x113 (_ bv4294967292 32)) ?x113)))
 (let (($x153 (and $x21 $x297)))
 (let (($x140 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x131 (and true $x140)))
 (let (($x166 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x113 (bvsub ?x113 (_ bv4 32))) (bvult ?x113 (bvsub ?x113 (_ bv4 32))))))
 (let (($x299 (and (and (and $x166 $x131) $x21) $x153)))
 (let (($x170 (= true $x299)))
 (let (($x71 (not $x116)))
 (let (($x159 (=> $x71 $x170)))
 (let (($x179 (= $x159 true)))
 (let (($x174 (= $x179 true)))
 (let (($x178 (= $x174 true)))
 (let (($x46 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x161 (and $x46 $x159)))
 (let (($x26 (= (_ bv0 32) ?x119)))
 (let (($x128 (not $x26)))
 (let (($x162 (=> $x128 $x170)))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x144 (= (bvand ?x38 (_ bv4294967292 32)) ?x38)))
 (let (($x165 (and $x144 $x150)))
 (let (($x80 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x38 (bvsub ?x38 (_ bv8 32))) (bvult ?x38 (bvsub ?x38 (_ bv8 32))))))
 (let (($x152 (and (and (and $x80 $x131) $x144) $x165)))
 (let (($x146 (= true $x152)))
 (let (($x164 (=> $x26 $x146)))
 (let (($x157 (and $x164 $x162)))
 (let (($x160 (= true $x157)))
 (let (($x30 (or $x26 $x128)))
 (let (($x134 (and $x71 $x30)))
 (let (($x156 (=> $x134 $x160)))
 (let (($x8 (and $x156 $x161)))
 (let (($x319 (= $x8 true)))
 (let (($x171 (= $x319 true)))
 (let (($x172 (= $x171 true)))
 (let (($x49 (= $x156 true)))
 (let (($x168 (= $x49 true)))
 (let (($x169 (= $x168 true)))
 (let (($x125 (and $x71 $x26)))
 (let (($x73 (= $x125 true)))
 (let (($x81 (= $x73 true)))
 (let (($x132 (= $x81 true)))
 (let (($x107 (= $x46 true)))
 (let (($x50 (= $x107 true)))
 (let (($x69 (= $x50 true)))
 (let ((?x104 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x104)))
 (let ((?x99 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x99)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x51 $x15)))
 (let (($x84 (and $x83 $x42)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x74 $x84)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x127)))))))
 (let (($x78 (and $x108 $x10)))
 (let (($x67 (= $x78 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x126 (and $x29 $x69)))
 (let (($x97 (and $x126 $x69)))
 (let (($x95 (and $x97 $x132)))
 (let (($x100 (and $x95 $x169)))
 (let (($x173 (and $x100 $x172)))
 (let (($x186 (and $x173 $x178)))
 (let (($x320 (and $x186 $x190)))
 (let (($x194 (and $x320 $x192)))
 (let (($x101 (and $x194 $x207)))
 (let (($x219 (and $x101 $x214)))
 (let (($x288 (and $x219 $x226)))
 (let (($x240 (and $x288 $x247)))
 (let (($x61 (and $x65 $x57)))
 (let (($x237 (and $x61 $x240)))
 (let (($x18 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x246 (and $x18 $x237)))
 (let (($x243 (and $x294 $x246)))
 (let (($x245 (and $x294 $x243)))
 (let (($x106 (bvugt ?x38 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x17 (=> (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x124 $x106)))))))
 (let (($x91 (=> (and $x125 (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x124 $x106)))))))
 (let (($x59 (bvugt ?x113 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x43)))
 (let (($x98 (=> (bvule ?x113 (bvsub (bvadd ?x113 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x59)))))))
 (let (($x75 (=> (and $x71 (bvule ?x113 (bvsub (bvadd ?x113 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x59)))))))
 (let (($x66 (and $x75 $x91)))
 (let (($x242 (and $x66 $x245)))
 (let (($x365 (=> $x242 $x364)))
 (not $x365))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3915X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x296 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x142 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x38 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x13 (bvadd ?x38 (_ bv3 32))))
 (let ((?x143 (concat (select input.dst.llvm-mem ?x13) (concat ?x142 ?x296))))
 (let ((?x344 (bvadd ?x143 (_ bv8 32))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x344 (_ bv1 32))) (select input.dst.llvm-mem ?x344))))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd ?x344 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x344 (_ bv2 32))) ?x347))))
 (let (($x351 (= (_ bv0 32) ?x432)))
 (let ((?x352 (ite $x351 (_ bv0 32) (_ bv1 32))))
 (let (($x355 (bvuge ?x352 (_ bv1 32))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x257 (concat ?x286 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x258 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x260 (concat ?x252 (concat ?x258 ?x257))))
 (let ((?x311 (bvadd ?x260 (_ bv8 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd ?x311 (_ bv1 32))) (select input.dst.llvm-mem ?x311))))
 (let ((?x270 (concat (select input.dst.llvm-mem (bvadd ?x311 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x311 (_ bv2 32))) ?x267))))
 (let (($x326 (= (_ bv0 32) ?x270)))
 (let ((?x265 (ite $x326 (_ bv0 32) (_ bv1 32))))
 (let (($x433 (bvuge ?x265 (_ bv1 32))))
 (let (($x356 (= $x433 $x355)))
 (let (($x325 (= (_ bv0 32) ?x260)))
 (let ((?x248 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x248 (_ bv1 32))))
 (let (($x357 (=> $x255 $x356)))
 (let (($x353 (= ?x352 (_ bv0 32))))
 (let (($x263 (= ?x265 (_ bv0 32))))
 (let (($x401 (= $x263 $x353)))
 (let (($x354 (=> $x255 $x401)))
 (let ((?x338 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x339 (concat ?x338 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv8 32))))))
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x342 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x343 (concat ?x342 (concat ?x340 ?x339))))
 (let (($x431 (= ?x343 ?x343)))
 (let (($x399 (=> $x255 $x431)))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x117 (concat ?x333 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv4 32))))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x90 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x177 (concat ?x90 (concat ?x180 ?x117))))
 (let (($x334 (= ?x177 ?x177)))
 (let (($x335 (=> $x255 $x334)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3915X))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv2 32))) ?x276)))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv3 32))) ?x275)))
 (let (($x290 (= ?x278 ?x278)))
 (let (($x281 (=> $x255 $x290)))
 (let (($x310 (= (_ bv0 32) ?x143)))
 (let ((?x274 (ite $x310 (_ bv0 32) (_ bv1 32))))
 (let (($x279 (bvuge ?x274 (_ bv1 32))))
 (let (($x280 (= $x255 $x279)))
 (let (($x327 (= ?x274 (_ bv0 32))))
 (let (($x251 (= ?x248 (_ bv0 32))))
 (let (($x272 (= $x251 $x327)))
 (let (($x268 (= ?x260 ?x143)))
 (let (($x294 (= false false)))
 (let (($x266 (and $x255 $x263)))
 (let (($x292 (=> $x266 $x294)))
 (let (($x254 (=> $x251 $x294)))
 (let (($x361 (and (and (and (and (and (and $x254 $x292) $x268) $x272) $x280) $x281) $x335)))
 (let (($x472 (and (and (and $x361 $x399) $x354) $x357)))
 (let (($x249 (not true)))
 (let (($x363 (or $x249 $x472)))
 (let (($x324 (= true true)))
 (let (($x404 (and $x324 $x363)))
 (let (($x364 (= $x404 true)))
 (let (($x289 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x234 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x285 (= $x234 $x289)))
 (let (($x305 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x233 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x306 (= $x233 $x305)))
 (let (($x394 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x229 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x235 (= $x229 $x394)))
 (let (($x232 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x227 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x228 (= $x227 $x232)))
 (let (($x323 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x244 (and (and (and (and $x323 $x228) $x235) $x306) $x285)))
 (let (($x247 (= $x244 true)))
 (let (($x217 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x287 (=> $x217 $x294)))
 (let (($x221 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x105 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x56 (= $x105 $x221)))
 (let (($x218 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x322 (= $x217 $x218)))
 (let (($x231 (and (and $x322 $x56) $x287)))
 (let (($x226 (= $x231 true)))
 (let (($x222 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x212 (= $x105 $x222)))
 (let (($x223 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x32 (= $x217 $x223)))
 (let (($x209 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x57 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x210 (= $x57 $x209)))
 (let (($x318 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x201 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x68 (= $x201 $x318)))
 (let (($x321 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x215 (and (and (and (and $x321 $x68) $x210) $x32) $x212)))
 (let (($x214 (= $x215 true)))
 (let (($x205 (=> $x201 $x294)))
 (let (($x203 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x199 (= $x57 $x203)))
 (let (($x197 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x198 (= $x201 $x197)))
 (let (($x36 (and (and $x198 $x199) $x205)))
 (let (($x207 (= $x36 true)))
 (let (($x301 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x196 (=> $x301 $x294)))
 (let (($x116 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x191 (ite $x116 (_ bv0 32) (_ bv1 32))))
 (let (($x204 (bvuge ?x191 (_ bv1 32))))
 (let (($x65 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x195 (= $x65 $x204)))
 (let (($x202 (= ?x191 (_ bv0 32))))
 (let (($x206 (= $x301 $x202)))
 (let (($x302 (and (and $x206 $x195) $x196)))
 (let (($x192 (= $x302 true)))
 (let ((?x300 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x181 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x392 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x188 (concat ?x392 (concat ?x181 (concat ?x175 ?x300)))))
 (let (($x55 (= ?x188 input.dst.llvm-%t)))
 (let (($x189 (= $x55 true)))
 (let (($x190 (= $x189 true)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x27 (concat ?x9 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x113 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x43 (bvadd ?x113 (_ bv3 32))))
 (let ((?x119 (concat (select input.dst.llvm-mem ?x43) (concat ?x120 ?x27))))
 (let (($x297 (= (bvand ?x119 (_ bv4294967280 32)) ?x119)))
 (let (($x21 (= (bvand ?x113 (_ bv4294967292 32)) ?x113)))
 (let (($x153 (and $x21 $x297)))
 (let (($x140 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x131 (and true $x140)))
 (let (($x166 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x113 (bvsub ?x113 (_ bv4 32))) (bvult ?x113 (bvsub ?x113 (_ bv4 32))))))
 (let (($x299 (and (and (and $x166 $x131) $x21) $x153)))
 (let (($x170 (= true $x299)))
 (let (($x71 (not $x116)))
 (let (($x159 (=> $x71 $x170)))
 (let (($x179 (= $x159 true)))
 (let (($x174 (= $x179 true)))
 (let (($x178 (= $x174 true)))
 (let (($x46 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x161 (and $x46 $x159)))
 (let (($x26 (= (_ bv0 32) ?x119)))
 (let (($x128 (not $x26)))
 (let (($x162 (=> $x128 $x170)))
 (let (($x150 (= (bvand ?x143 (_ bv4294967280 32)) ?x143)))
 (let (($x144 (= (bvand ?x38 (_ bv4294967292 32)) ?x38)))
 (let (($x165 (and $x144 $x150)))
 (let (($x80 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x38 (bvsub ?x38 (_ bv8 32))) (bvult ?x38 (bvsub ?x38 (_ bv8 32))))))
 (let (($x152 (and (and (and $x80 $x131) $x144) $x165)))
 (let (($x146 (= true $x152)))
 (let (($x164 (=> $x26 $x146)))
 (let (($x157 (and $x164 $x162)))
 (let (($x160 (= true $x157)))
 (let (($x30 (or $x26 $x128)))
 (let (($x134 (and $x71 $x30)))
 (let (($x156 (=> $x134 $x160)))
 (let (($x8 (and $x156 $x161)))
 (let (($x319 (= $x8 true)))
 (let (($x171 (= $x319 true)))
 (let (($x172 (= $x171 true)))
 (let (($x49 (= $x156 true)))
 (let (($x168 (= $x49 true)))
 (let (($x169 (= $x168 true)))
 (let (($x125 (and $x71 $x26)))
 (let (($x73 (= $x125 true)))
 (let (($x81 (= $x73 true)))
 (let (($x132 (= $x81 true)))
 (let (($x107 (= $x46 true)))
 (let (($x50 (= $x107 true)))
 (let (($x69 (= $x50 true)))
 (let ((?x104 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x42 (= (_ bv0 32) ?x104)))
 (let ((?x99 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x15 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x99)))
 (let (($x51 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x83 (and $x51 $x15)))
 (let (($x84 (and $x83 $x42)))
 (let (($x74 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x10 (and $x74 $x84)))
 (let (($x127 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x130 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x108 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x130 $x127)))))))
 (let (($x78 (and $x108 $x10)))
 (let (($x67 (= $x78 true)))
 (let (($x52 (= $x67 true)))
 (let (($x29 (= $x52 true)))
 (let (($x126 (and $x29 $x69)))
 (let (($x97 (and $x126 $x69)))
 (let (($x95 (and $x97 $x132)))
 (let (($x100 (and $x95 $x169)))
 (let (($x173 (and $x100 $x172)))
 (let (($x186 (and $x173 $x178)))
 (let (($x320 (and $x186 $x190)))
 (let (($x194 (and $x320 $x192)))
 (let (($x101 (and $x194 $x207)))
 (let (($x219 (and $x101 $x214)))
 (let (($x288 (and $x219 $x226)))
 (let (($x240 (and $x288 $x247)))
 (let (($x61 (and $x65 $x57)))
 (let (($x237 (and $x61 $x240)))
 (let (($x18 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x246 (and $x18 $x237)))
 (let (($x243 (and $x294 $x246)))
 (let (($x245 (and $x294 $x243)))
 (let (($x106 (bvugt ?x38 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x17 (=> (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x124 $x106)))))))
 (let (($x91 (=> (and $x125 (bvule ?x38 (bvsub (bvadd ?x38 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x124 $x106)))))))
 (let (($x59 (bvugt ?x113 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x109 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x43)))
 (let (($x98 (=> (bvule ?x113 (bvsub (bvadd ?x113 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x109 $x59)))))))
 (let (($x75 (=> (and $x71 (bvule ?x113 (bvsub (bvadd ?x113 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x109 $x59)))))))
 (let (($x66 (and $x75 $x91)))
 (let (($x242 (and $x66 $x245)))
 (let (($x365 (=> $x242 $x364)))
 (not $x365))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv1048576 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483710 32) (_ bv16 8)) (_ bv1048584 32) (_ bv16 8)))
(define-fun input.ind-%var3915X () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483711 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00d0f000)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xf9)
                                #x00f9f7f8
                                #xf0)
                         #x00d0f003
                         #x00)
                  #x00d0f001
                  #xf7)))
(let ((a!2 (store (store (store (store a!1 #x00f9f7fb #x00) #x00d0f000 #xf0)
                         #x00f9f7f9
                         #xf7)
                  #x00f9f7f7
                  #x00)))
  (store (store (store a!2 #x00f9f7f4 #x00) #x00f9f7f6 #x00) #x00f9f7f5 #x00))))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00f9f7f0)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00d0f000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00d0f003)
  (define-fun input.ind-%var3915X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 11
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3915X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x137 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x102 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x122 (bvadd ?x102 (_ bv3 32))))
 (let ((?x150 (concat (select input.dst.llvm-mem ?x122) (concat ?x138 ?x137))))
 (let ((?x785 (bvadd ?x150 (_ bv8 32))))
 (let ((?x789 (concat (select input.dst.llvm-mem (bvadd ?x785 (_ bv1 32))) (select input.dst.llvm-mem ?x785))))
 (let ((?x795 (concat (select input.dst.llvm-mem (bvadd ?x785 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x785 (_ bv2 32))) ?x789))))
 (let (($x796 (= (_ bv0 32) ?x795)))
 (let ((?x797 (ite $x796 (_ bv0 32) (_ bv1 32))))
 (let (($x801 (bvuge ?x797 (_ bv1 32))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x209 (concat ?x211 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x216 (concat ?x304 ?x209))))
 (let ((?x242 (bvadd ?x223 (_ bv8 32))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv1 32))) (select input.dst.llvm-mem ?x242))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv2 32))) ?x241))))
 (let (($x257 (= (_ bv0 32) ?x331)))
 (let ((?x250 (ite $x257 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x250 (_ bv1 32))))
 (let (($x802 (= $x254 $x801)))
 (let (($x32 (= (_ bv0 32) ?x223)))
 (let ((?x213 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x213 (_ bv1 32))))
 (let (($x803 (=> $x219 $x802)))
 (let (($x798 (= ?x797 (_ bv0 32))))
 (let (($x260 (= ?x250 (_ bv0 32))))
 (let (($x799 (= $x260 $x798)))
 (let (($x800 (=> $x219 $x799)))
 (let ((?x775 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x776 (concat ?x775 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv8 32))))))
 (let ((?x778 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x782 (concat ?x781 (concat ?x778 ?x776))))
 (let (($x783 (= ?x782 ?x782)))
 (let (($x784 (=> $x219 $x783)))
 (let ((?x762 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x763 (concat ?x762 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv4 32))))))
 (let ((?x765 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x768 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x769 (concat ?x768 (concat ?x765 ?x763))))
 (let (($x770 (= ?x769 ?x769)))
 (let (($x771 (=> $x219 $x770)))
 (let ((?x753 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3915X))))
 (let ((?x756 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv2 32))) ?x753)))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv3 32))) ?x756)))
 (let (($x118 (= ?x759 ?x759)))
 (let (($x79 (=> $x219 $x118)))
 (let (($x745 (= (_ bv0 32) ?x150)))
 (let ((?x721 (ite $x745 (_ bv0 32) (_ bv1 32))))
 (let (($x747 (bvuge ?x721 (_ bv1 32))))
 (let (($x748 (= $x219 $x747)))
 (let (($x722 (= ?x721 (_ bv0 32))))
 (let (($x105 (= ?x213 (_ bv0 32))))
 (let (($x746 (= $x105 $x722)))
 (let (($x720 (= ?x223 ?x150)))
 (let (($x18 (= false false)))
 (let (($x744 (and $x219 $x260)))
 (let (($x719 (=> $x744 $x18)))
 (let (($x718 (=> $x105 $x18)))
 (let (($x809 (and (and (and (and (and (and $x718 $x719) $x720) $x746) $x748) $x79) $x771)))
 (let (($x812 (and (and (and $x809 $x784) $x800) $x803)))
 (let (($x717 (not true)))
 (let (($x813 (or $x717 $x812)))
 (let (($x743 (= true true)))
 (let (($x814 (and $x743 $x813)))
 (let (($x815 (= $x814 true)))
 (let (($x694 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x451 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x695 (= $x451 $x694)))
 (let (($x251 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x696 (=> $x251 $x695)))
 (let (($x447 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x693 (and $x251 $x447)))
 (let (($x735 (=> $x693 $x18)))
 (let (($x691 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x692 (= $x447 $x691)))
 (let (($x734 (=> $x251 $x692)))
 (let (($x688 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x426 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x689 (= $x426 $x688)))
 (let (($x733 (=> $x251 $x689)))
 (let (($x467 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x687 (and $x251 $x467)))
 (let (($x732 (=> $x687 $x18)))
 (let (($x684 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x685 (= $x467 $x684)))
 (let (($x686 (=> $x251 $x685)))
 (let (($x682 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x683 (=> $x251 $x682)))
 (let (($x245 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x730 (=> $x245 $x18)))
 (let (($x729 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x441 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x679 (= $x441 $x729)))
 (let (($x247 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x680 (=> $x247 $x679)))
 (let (($x410 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x677 (and $x247 $x410)))
 (let (($x678 (=> $x677 $x18)))
 (let (($x728 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x675 (= $x410 $x728)))
 (let (($x676 (=> $x247 $x675)))
 (let (($x727 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x672 (= $x388 $x727)))
 (let (($x673 (=> $x247 $x672)))
 (let (($x385 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x726 (and $x247 $x385)))
 (let (($x671 (=> $x726 $x18)))
 (let (($x725 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x669 (= $x385 $x725)))
 (let (($x670 (=> $x247 $x669)))
 (let (($x34 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x111 (=> $x247 $x34)))
 (let (($x232 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x19 (=> $x232 $x18)))
 (let (($x723 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x667 (= $x251 $x723)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x666 (= $x245 $x665)))
 (let (($x662 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x663 (= $x247 $x662)))
 (let (($x660 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x661 (= $x232 $x660)))
 (let (($x618 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x737 (and (and (and (and (and (and $x618 $x661) $x663) $x666) $x667) $x19) $x111)))
 (let (($x705 (and (and (and (and (and (and $x737 $x670) $x671) $x673) $x676) $x678) $x680)))
 (let (($x740 (and (and (and (and (and (and $x705 $x730) $x683) $x686) $x732) $x733) $x734)))
 (let (($x711 (and (and $x740 $x735) $x696)))
 (let (($x741 (= $x711 true)))
 (let (($x606 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x605 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x607 (= $x605 $x606)))
 (let (($x432 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x327 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x652 (and $x327 $x432)))
 (let (($x632 (=> $x652 $x607)))
 (let (($x643 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x602 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x653 (= $x602 $x643)))
 (let (($x604 (=> $x652 $x653)))
 (let (($x631 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x599 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x600 (= $x599 $x631)))
 (let (($x642 (=> $x652 $x600)))
 (let (($x597 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x596 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x598 (= $x596 $x597)))
 (let (($x641 (=> $x652 $x598)))
 (let (($x594 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x640 (=> $x652 $x594)))
 (let (($x638 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x591 (= $x432 $x638)))
 (let (($x639 (=> $x327 $x591)))
 (let (($x337 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x509 (and $x327 $x337)))
 (let (($x570 (=> $x509 $x18)))
 (let (($x589 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x629 (= $x337 $x589)))
 (let (($x590 (=> $x327 $x629)))
 (let (($x627 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x587 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x628 (= $x587 $x627)))
 (let (($x342 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x624 (and $x327 $x342)))
 (let (($x588 (=> $x624 $x628)))
 (let (($x585 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x584 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x636 (= $x584 $x585)))
 (let (($x586 (=> $x624 $x636)))
 (let (($x651 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x581 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x582 (= $x581 $x651)))
 (let (($x583 (=> $x624 $x582)))
 (let (($x578 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x576 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x579 (= $x576 $x578)))
 (let (($x580 (=> $x624 $x579)))
 (let (($x556 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x557 (=> $x624 $x556)))
 (let (($x552 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x553 (= $x342 $x552)))
 (let (($x575 (=> $x327 $x553)))
 (let (($x360 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x504 (and $x327 $x360)))
 (let (($x505 (=> $x504 $x18)))
 (let (($x549 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x550 (= $x360 $x549)))
 (let (($x551 (=> $x327 $x550)))
 (let (($x574 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x548 (=> $x327 $x574)))
 (let (($x309 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x499 (=> $x309 $x18)))
 (let (($x650 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x546 (= $x327 $x650)))
 (let (($x544 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x545 (= $x309 $x544)))
 (let (($x634 (and (and (and (and (and (and $x545 $x546) $x499) $x548) $x551) $x505) $x575)))
 (let (($x655 (and (and (and (and (and (and $x634 $x557) $x580) $x583) $x586) $x588) $x590)))
 (let (($x657 (and (and (and (and (and (and $x655 $x570) $x639) $x640) $x641) $x642) $x604)))
 (let (($x616 (and $x657 $x632)))
 (let (($x648 (= $x616 true)))
 (let (($x510 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x511 (= $x432 $x510)))
 (let (($x530 (=> $x327 $x511)))
 (let (($x529 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x508 (= $x337 $x529)))
 (let (($x569 (=> $x327 $x508)))
 (let (($x528 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x564 (= $x342 $x528)))
 (let (($x506 (=> $x327 $x564)))
 (let (($x502 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x503 (= $x360 $x502)))
 (let (($x527 (=> $x327 $x503)))
 (let (($x526 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x563 (=> $x327 $x526)))
 (let (($x562 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x568 (= $x251 $x562)))
 (let (($x33 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x498 (=> $x33 $x568)))
 (let (($x442 (and $x33 $x245)))
 (let (($x465 (=> $x442 $x18)))
 (let (($x497 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x525 (= $x245 $x497)))
 (let (($x561 (=> $x33 $x525)))
 (let (($x524 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x494 (= $x247 $x524)))
 (let (($x495 (=> $x33 $x494)))
 (let (($x407 (and $x33 $x232)))
 (let (($x473 (=> $x407 $x18)))
 (let (($x492 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x493 (= $x232 $x492)))
 (let (($x560 (=> $x33 $x493)))
 (let (($x522 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x491 (=> $x33 $x522)))
 (let (($x321 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x372 (=> $x321 $x18)))
 (let (($x490 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x558 (= $x327 $x490)))
 (let (($x521 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x567 (= $x309 $x521)))
 (let (($x487 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x488 (= $x33 $x487)))
 (let (($x520 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x486 (= $x321 $x520)))
 (let (($x484 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x533 (and (and (and (and (and (and $x484 $x486) $x488) $x567) $x558) $x372) $x491)))
 (let (($x620 (and (and (and (and (and (and $x533 $x560) $x473) $x495) $x561) $x465) $x498)))
 (let (($x541 (and (and (and (and (and (and $x620 $x499) $x563) $x527) $x505) $x506) $x569)))
 (let (($x543 (and (and $x541 $x570) $x530)))
 (let (($x621 (= $x543 true)))
 (let (($x479 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x452 (= $x451 $x479)))
 (let (($x422 (and $x33 $x251)))
 (let (($x513 (=> $x422 $x452)))
 (let (($x449 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x478 (= $x447 $x449)))
 (let (($x450 (=> $x422 $x478)))
 (let (($x427 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x446 (= $x426 $x427)))
 (let (($x469 (=> $x422 $x446)))
 (let (($x468 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x425 (= $x467 $x468)))
 (let (($x477 (=> $x422 $x425)))
 (let (($x423 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x444 (=> $x422 $x423)))
 (let (($x420 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x476 (= $x251 $x420)))
 (let (($x421 (=> $x33 $x476)))
 (let (($x475 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x418 (= $x245 $x475)))
 (let (($x419 (=> $x33 $x418)))
 (let (($x415 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x416 (= $x441 $x415)))
 (let (($x381 (and $x33 $x247)))
 (let (($x417 (=> $x381 $x416)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x410 $x412)))
 (let (($x414 (=> $x381 $x413)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x440 (=> $x381 $x390)))
 (let (($x387 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x439 (= $x385 $x387)))
 (let (($x409 (=> $x381 $x439)))
 (let (($x382 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x383 (=> $x381 $x382)))
 (let (($x378 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x247 $x378)))
 (let (($x380 (=> $x33 $x379)))
 (let (($x438 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x232 $x438)))
 (let (($x377 (=> $x33 $x376)))
 (let (($x437 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x374 (=> $x33 $x437)))
 (let (($x371 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x406 (= $x33 $x371)))
 (let (($x370 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x436 (= $x321 $x370)))
 (let (($x456 (and (and (and (and (and (and $x436 $x406) $x372) $x374) $x377) $x473) $x380)))
 (let (($x481 (and (and (and (and (and (and $x456 $x383) $x409) $x440) $x414) $x417) $x419)))
 (let (($x462 (and (and (and (and (and (and $x481 $x465) $x421) $x444) $x477) $x469) $x450)))
 (let (($x463 (and $x462 $x513)))
 (let (($x518 (= $x463 true)))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x291 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x263 (concat ?x265 (concat ?x264 ?x291))))
 (let ((?x339 (bvadd ?x263 (_ bv8 32))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv1 32))) (select input.dst.llvm-mem ?x339))))
 (let ((?x471 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv2 32))) ?x399))))
 (let (($x346 (= (_ bv0 32) ?x471)))
 (let ((?x470 (ite $x346 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (bvuge ?x470 (_ bv1 32))))
 (let (($x352 (= $x432 $x351)))
 (let (($x61 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x280 (and $x61 $x327)))
 (let (($x353 (=> $x280 $x352)))
 (let (($x345 (= ?x470 (_ bv0 32))))
 (let (($x347 (= $x337 $x345)))
 (let (($x348 (=> $x280 $x347)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x263 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x263 (_ bv4 32))))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x263 (_ bv4 32)) (_ bv2 32))) ?x180)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x263 (_ bv4 32)) (_ bv3 32))) ?x293)))
 (let (($x334 (= (_ bv0 32) ?x177)))
 (let ((?x335 (ite $x334 (_ bv0 32) (_ bv1 32))))
 (let (($x429 (bvuge ?x335 (_ bv1 32))))
 (let (($x340 (= $x342 $x429)))
 (let (($x398 (=> $x280 $x340)))
 (let (($x361 (= ?x335 (_ bv0 32))))
 (let (($x336 (= $x360 $x361)))
 (let (($x341 (=> $x280 $x336)))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x395))))
 (let (($x278 (= input.spec-%var-t-0.2.2.2.0 ?x275)))
 (let (($x290 (=> $x280 $x278)))
 (let (($x266 (= (_ bv0 32) ?x263)))
 (let ((?x292 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x292 (_ bv1 32))))
 (let (($x359 (= $x327 $x272)))
 (let (($x279 (=> $x61 $x359)))
 (let (($x310 (and $x61 $x309)))
 (let (($x274 (=> $x310 $x18)))
 (let (($x402 (= ?x292 (_ bv0 32))))
 (let (($x268 (= $x309 $x402)))
 (let (($x358 (=> $x61 $x268)))
 (let (($x255 (= $x251 $x254)))
 (let (($x5 (and $x61 $x33)))
 (let (($x311 (=> $x5 $x255)))
 (let (($x325 (= $x245 $x260)))
 (let (($x248 (=> $x5 $x325)))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x235)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x233)))
 (let (($x396 (= (_ bv0 32) ?x306)))
 (let ((?x234 (ite $x396 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x234 (_ bv1 32))))
 (let (($x237 (= $x247 $x240)))
 (let (($x246 (=> $x5 $x237)))
 (let (($x289 (= ?x234 (_ bv0 32))))
 (let (($x285 (= $x232 $x289)))
 (let (($x244 (=> $x5 $x285)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x287))))
 (let (($x225 (= input.spec-%var-t-0.2.1.2.0 ?x323)))
 (let (($x227 (=> $x5 $x225)))
 (let (($x220 (= $x33 $x219)))
 (let (($x218 (=> $x61 $x220)))
 (let (($x215 (and $x61 $x321)))
 (let (($x214 (=> $x215 $x18)))
 (let (($x222 (= $x321 $x105)))
 (let (($x212 (=> $x61 $x222)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x198)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x393)))
 (let (($x101 (= input.spec-%var-t-0.2.0 ?x207)))
 (let (($x208 (=> $x61 $x101)))
 (let (($x195 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x194 (=> $x195 $x18)))
 (let (($x116 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x193 (ite $x116 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x193 (_ bv1 32))))
 (let (($x192 (= $x61 $x302)))
 (let (($x294 (= ?x193 (_ bv0 32))))
 (let (($x196 (= $x195 $x294)))
 (let (($x356 (and (and (and (and (and (and $x196 $x192) $x194) $x208) $x212) $x214) $x218)))
 (let (($x365 (and (and (and (and (and (and $x356 $x227) $x244) $x246) $x248) $x311) $x358)))
 (let (($x405 (and (and (and (and (and (and $x365 $x274) $x279) $x290) $x341) $x398) $x348)))
 (let (($x435 (and $x405 $x353)))
 (let (($x367 (= $x435 true)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x301 (concat ?x320 (concat ?x55 (concat ?x182 ?x175)))))
 (let (($x191 (= ?x301 input.dst.llvm-%t)))
 (let (($x202 (= $x191 true)))
 (let (($x206 (= $x202 true)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x9 (concat ?x16 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x110 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x86 (bvadd ?x110 (_ bv3 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem ?x86) (concat ?x11 ?x9))))
 (let (($x299 (= (bvand ?x125 (_ bv4294967280 32)) ?x125)))
 (let (($x297 (= (bvand ?x110 (_ bv4294967292 32)) ?x110)))
 (let (($x170 (and $x297 $x299)))
 (let (($x147 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x144 (and true $x147)))
 (let (($x158 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x110 (bvsub ?x110 (_ bv4 32))) (bvult ?x110 (bvsub ?x110 (_ bv4 32))))))
 (let (($x160 (and (and (and $x158 $x144) $x297) $x170)))
 (let (($x156 (= true $x160)))
 (let (($x71 (not $x116)))
 (let (($x171 (=> $x71 $x156)))
 (let (($x184 (= $x171 true)))
 (let (($x392 (= $x184 true)))
 (let (($x176 (= $x392 true)))
 (let (($x126 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x172 (and $x126 $x171)))
 (let (($x123 (= (_ bv0 32) ?x125)))
 (let (($x133 (not $x123)))
 (let (($x49 (=> $x133 $x156)))
 (let (($x152 (= (bvand ?x150 (_ bv4294967280 32)) ?x150)))
 (let (($x154 (= (bvand ?x102 (_ bv4294967292 32)) ?x102)))
 (let (($x146 (and $x154 $x152)))
 (let (($x149 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x102 (bvsub ?x102 (_ bv8 32))) (bvult ?x102 (bvsub ?x102 (_ bv8 32))))))
 (let (($x35 (and (and (and $x149 $x144) $x154) $x146)))
 (let (($x28 (= true $x35)))
 (let (($x155 (=> $x123 $x28)))
 (let (($x168 (and $x155 $x49)))
 (let (($x169 (= true $x168)))
 (let (($x313 (or $x123 $x133)))
 (let (($x314 (and $x71 $x313)))
 (let (($x100 (=> $x314 $x169)))
 (let (($x173 (and $x100 $x172)))
 (let (($x179 (= $x173 true)))
 (let (($x174 (= $x179 true)))
 (let (($x178 (= $x174 true)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x8 (= $x161 true)))
 (let (($x38 (and $x71 $x123)))
 (let (($x128 (= $x38 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x97 (= $x126 true)))
 (let (($x73 (= $x97 true)))
 (let (($x81 (= $x73 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x78)))
 (let ((?x42 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x42)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x104 $x84)))
 (let (($x52 (and $x10 $x67)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x127 $x52)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x108)))))))
 (let (($x115 (and $x83 $x29)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let (($x107 (= $x46 true)))
 (let (($x132 (and $x107 $x81)))
 (let (($x95 (and $x132 $x81)))
 (let (($x139 (and $x95 $x134)))
 (let (($x319 (and $x139 $x8)))
 (let (($x186 (and $x319 $x178)))
 (let (($x181 (and $x186 $x176)))
 (let (($x204 (and $x181 $x206)))
 (let (($x368 (and $x204 $x367)))
 (let (($x519 (and $x368 $x518)))
 (let (($x622 (and $x519 $x621)))
 (let (($x658 (and $x622 $x648)))
 (let (($x712 (and $x658 $x741)))
 (let (($x713 (and $x5 $x712)))
 (let (($x7 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x714 (and $x7 $x713)))
 (let (($x742 (and $x18 $x714)))
 (let (($x715 (and $x18 $x742)))
 (let (($x44 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x60 (=> (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x44)))))))
 (let (($x62 (=> (and $x38 (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x44)))))))
 (let (($x93 (bvugt ?x110 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x24 (=> (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x93)))))))
 (let (($x96 (=> (and $x71 (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x40 $x93)))))))
 (let (($x13 (and $x96 $x62)))
 (let (($x716 (and $x13 $x715)))
 (let (($x816 (=> $x716 $x815)))
 (not $x
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var3915X () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x145 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x137 (concat ?x145 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x138 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x102 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x122 (bvadd ?x102 (_ bv3 32))))
 (let ((?x150 (concat (select input.dst.llvm-mem ?x122) (concat ?x138 ?x137))))
 (let ((?x785 (bvadd ?x150 (_ bv8 32))))
 (let ((?x789 (concat (select input.dst.llvm-mem (bvadd ?x785 (_ bv1 32))) (select input.dst.llvm-mem ?x785))))
 (let ((?x795 (concat (select input.dst.llvm-mem (bvadd ?x785 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x785 (_ bv2 32))) ?x789))))
 (let (($x796 (= (_ bv0 32) ?x795)))
 (let ((?x797 (ite $x796 (_ bv0 32) (_ bv1 32))))
 (let (($x801 (bvuge ?x797 (_ bv1 32))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x209 (concat ?x211 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x304 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x223 (concat ?x216 (concat ?x304 ?x209))))
 (let ((?x242 (bvadd ?x223 (_ bv8 32))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv1 32))) (select input.dst.llvm-mem ?x242))))
 (let ((?x331 (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x242 (_ bv2 32))) ?x241))))
 (let (($x257 (= (_ bv0 32) ?x331)))
 (let ((?x250 (ite $x257 (_ bv0 32) (_ bv1 32))))
 (let (($x254 (bvuge ?x250 (_ bv1 32))))
 (let (($x802 (= $x254 $x801)))
 (let (($x32 (= (_ bv0 32) ?x223)))
 (let ((?x213 (ite $x32 (_ bv0 32) (_ bv1 32))))
 (let (($x219 (bvuge ?x213 (_ bv1 32))))
 (let (($x803 (=> $x219 $x802)))
 (let (($x798 (= ?x797 (_ bv0 32))))
 (let (($x260 (= ?x250 (_ bv0 32))))
 (let (($x799 (= $x260 $x798)))
 (let (($x800 (=> $x219 $x799)))
 (let ((?x775 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x776 (concat ?x775 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv8 32))))))
 (let ((?x778 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x781 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x782 (concat ?x781 (concat ?x778 ?x776))))
 (let (($x783 (= ?x782 ?x782)))
 (let (($x784 (=> $x219 $x783)))
 (let ((?x762 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x763 (concat ?x762 (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv4 32))))))
 (let ((?x765 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x768 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var3915X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x769 (concat ?x768 (concat ?x765 ?x763))))
 (let (($x770 (= ?x769 ?x769)))
 (let (($x771 (=> $x219 $x770)))
 (let ((?x753 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var3915X))))
 (let ((?x756 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv2 32))) ?x753)))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd input.ind-%var3915X (_ bv3 32))) ?x756)))
 (let (($x118 (= ?x759 ?x759)))
 (let (($x79 (=> $x219 $x118)))
 (let (($x745 (= (_ bv0 32) ?x150)))
 (let ((?x721 (ite $x745 (_ bv0 32) (_ bv1 32))))
 (let (($x747 (bvuge ?x721 (_ bv1 32))))
 (let (($x748 (= $x219 $x747)))
 (let (($x722 (= ?x721 (_ bv0 32))))
 (let (($x105 (= ?x213 (_ bv0 32))))
 (let (($x746 (= $x105 $x722)))
 (let (($x720 (= ?x223 ?x150)))
 (let (($x18 (= false false)))
 (let (($x744 (and $x219 $x260)))
 (let (($x719 (=> $x744 $x18)))
 (let (($x718 (=> $x105 $x18)))
 (let (($x809 (and (and (and (and (and (and $x718 $x719) $x720) $x746) $x748) $x79) $x771)))
 (let (($x812 (and (and (and $x809 $x784) $x800) $x803)))
 (let (($x717 (not true)))
 (let (($x813 (or $x717 $x812)))
 (let (($x743 (= true true)))
 (let (($x814 (and $x743 $x813)))
 (let (($x815 (= $x814 true)))
 (let (($x694 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x451 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x695 (= $x451 $x694)))
 (let (($x251 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x696 (=> $x251 $x695)))
 (let (($x447 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x693 (and $x251 $x447)))
 (let (($x735 (=> $x693 $x18)))
 (let (($x691 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x692 (= $x447 $x691)))
 (let (($x734 (=> $x251 $x692)))
 (let (($x688 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x426 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x689 (= $x426 $x688)))
 (let (($x733 (=> $x251 $x689)))
 (let (($x467 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x687 (and $x251 $x467)))
 (let (($x732 (=> $x687 $x18)))
 (let (($x684 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x685 (= $x467 $x684)))
 (let (($x686 (=> $x251 $x685)))
 (let (($x682 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x683 (=> $x251 $x682)))
 (let (($x245 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x730 (=> $x245 $x18)))
 (let (($x729 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x441 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x679 (= $x441 $x729)))
 (let (($x247 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x680 (=> $x247 $x679)))
 (let (($x410 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x677 (and $x247 $x410)))
 (let (($x678 (=> $x677 $x18)))
 (let (($x728 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x675 (= $x410 $x728)))
 (let (($x676 (=> $x247 $x675)))
 (let (($x727 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x388 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x672 (= $x388 $x727)))
 (let (($x673 (=> $x247 $x672)))
 (let (($x385 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x726 (and $x247 $x385)))
 (let (($x671 (=> $x726 $x18)))
 (let (($x725 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x669 (= $x385 $x725)))
 (let (($x670 (=> $x247 $x669)))
 (let (($x34 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x111 (=> $x247 $x34)))
 (let (($x232 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x19 (=> $x232 $x18)))
 (let (($x723 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x667 (= $x251 $x723)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x666 (= $x245 $x665)))
 (let (($x662 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x663 (= $x247 $x662)))
 (let (($x660 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x661 (= $x232 $x660)))
 (let (($x618 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x737 (and (and (and (and (and (and $x618 $x661) $x663) $x666) $x667) $x19) $x111)))
 (let (($x705 (and (and (and (and (and (and $x737 $x670) $x671) $x673) $x676) $x678) $x680)))
 (let (($x740 (and (and (and (and (and (and $x705 $x730) $x683) $x686) $x732) $x733) $x734)))
 (let (($x711 (and (and $x740 $x735) $x696)))
 (let (($x741 (= $x711 true)))
 (let (($x606 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x605 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x607 (= $x605 $x606)))
 (let (($x432 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x327 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x652 (and $x327 $x432)))
 (let (($x632 (=> $x652 $x607)))
 (let (($x643 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x602 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x653 (= $x602 $x643)))
 (let (($x604 (=> $x652 $x653)))
 (let (($x631 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x599 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x600 (= $x599 $x631)))
 (let (($x642 (=> $x652 $x600)))
 (let (($x597 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x596 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x598 (= $x596 $x597)))
 (let (($x641 (=> $x652 $x598)))
 (let (($x594 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x640 (=> $x652 $x594)))
 (let (($x638 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x591 (= $x432 $x638)))
 (let (($x639 (=> $x327 $x591)))
 (let (($x337 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x509 (and $x327 $x337)))
 (let (($x570 (=> $x509 $x18)))
 (let (($x589 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x629 (= $x337 $x589)))
 (let (($x590 (=> $x327 $x629)))
 (let (($x627 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x587 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x628 (= $x587 $x627)))
 (let (($x342 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x624 (and $x327 $x342)))
 (let (($x588 (=> $x624 $x628)))
 (let (($x585 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x584 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x636 (= $x584 $x585)))
 (let (($x586 (=> $x624 $x636)))
 (let (($x651 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x581 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x582 (= $x581 $x651)))
 (let (($x583 (=> $x624 $x582)))
 (let (($x578 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x576 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x579 (= $x576 $x578)))
 (let (($x580 (=> $x624 $x579)))
 (let (($x556 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x557 (=> $x624 $x556)))
 (let (($x552 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x553 (= $x342 $x552)))
 (let (($x575 (=> $x327 $x553)))
 (let (($x360 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x504 (and $x327 $x360)))
 (let (($x505 (=> $x504 $x18)))
 (let (($x549 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x550 (= $x360 $x549)))
 (let (($x551 (=> $x327 $x550)))
 (let (($x574 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x548 (=> $x327 $x574)))
 (let (($x309 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x499 (=> $x309 $x18)))
 (let (($x650 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x546 (= $x327 $x650)))
 (let (($x544 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x545 (= $x309 $x544)))
 (let (($x634 (and (and (and (and (and (and $x545 $x546) $x499) $x548) $x551) $x505) $x575)))
 (let (($x655 (and (and (and (and (and (and $x634 $x557) $x580) $x583) $x586) $x588) $x590)))
 (let (($x657 (and (and (and (and (and (and $x655 $x570) $x639) $x640) $x641) $x642) $x604)))
 (let (($x616 (and $x657 $x632)))
 (let (($x648 (= $x616 true)))
 (let (($x510 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x511 (= $x432 $x510)))
 (let (($x530 (=> $x327 $x511)))
 (let (($x529 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x508 (= $x337 $x529)))
 (let (($x569 (=> $x327 $x508)))
 (let (($x528 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x564 (= $x342 $x528)))
 (let (($x506 (=> $x327 $x564)))
 (let (($x502 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x503 (= $x360 $x502)))
 (let (($x527 (=> $x327 $x503)))
 (let (($x526 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x563 (=> $x327 $x526)))
 (let (($x562 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x568 (= $x251 $x562)))
 (let (($x33 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x498 (=> $x33 $x568)))
 (let (($x442 (and $x33 $x245)))
 (let (($x465 (=> $x442 $x18)))
 (let (($x497 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x525 (= $x245 $x497)))
 (let (($x561 (=> $x33 $x525)))
 (let (($x524 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x494 (= $x247 $x524)))
 (let (($x495 (=> $x33 $x494)))
 (let (($x407 (and $x33 $x232)))
 (let (($x473 (=> $x407 $x18)))
 (let (($x492 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x493 (= $x232 $x492)))
 (let (($x560 (=> $x33 $x493)))
 (let (($x522 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x491 (=> $x33 $x522)))
 (let (($x321 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x372 (=> $x321 $x18)))
 (let (($x490 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x558 (= $x327 $x490)))
 (let (($x521 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x567 (= $x309 $x521)))
 (let (($x487 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x488 (= $x33 $x487)))
 (let (($x520 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x486 (= $x321 $x520)))
 (let (($x484 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x533 (and (and (and (and (and (and $x484 $x486) $x488) $x567) $x558) $x372) $x491)))
 (let (($x620 (and (and (and (and (and (and $x533 $x560) $x473) $x495) $x561) $x465) $x498)))
 (let (($x541 (and (and (and (and (and (and $x620 $x499) $x563) $x527) $x505) $x506) $x569)))
 (let (($x543 (and (and $x541 $x570) $x530)))
 (let (($x621 (= $x543 true)))
 (let (($x479 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x452 (= $x451 $x479)))
 (let (($x422 (and $x33 $x251)))
 (let (($x513 (=> $x422 $x452)))
 (let (($x449 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x478 (= $x447 $x449)))
 (let (($x450 (=> $x422 $x478)))
 (let (($x427 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x446 (= $x426 $x427)))
 (let (($x469 (=> $x422 $x446)))
 (let (($x468 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x425 (= $x467 $x468)))
 (let (($x477 (=> $x422 $x425)))
 (let (($x423 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x444 (=> $x422 $x423)))
 (let (($x420 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x476 (= $x251 $x420)))
 (let (($x421 (=> $x33 $x476)))
 (let (($x475 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x418 (= $x245 $x475)))
 (let (($x419 (=> $x33 $x418)))
 (let (($x415 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x416 (= $x441 $x415)))
 (let (($x381 (and $x33 $x247)))
 (let (($x417 (=> $x381 $x416)))
 (let (($x412 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x413 (= $x410 $x412)))
 (let (($x414 (=> $x381 $x413)))
 (let (($x389 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x390 (= $x388 $x389)))
 (let (($x440 (=> $x381 $x390)))
 (let (($x387 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x439 (= $x385 $x387)))
 (let (($x409 (=> $x381 $x439)))
 (let (($x382 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x383 (=> $x381 $x382)))
 (let (($x378 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x247 $x378)))
 (let (($x380 (=> $x33 $x379)))
 (let (($x438 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x376 (= $x232 $x438)))
 (let (($x377 (=> $x33 $x376)))
 (let (($x437 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x374 (=> $x33 $x437)))
 (let (($x371 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x406 (= $x33 $x371)))
 (let (($x370 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x436 (= $x321 $x370)))
 (let (($x456 (and (and (and (and (and (and $x436 $x406) $x372) $x374) $x377) $x473) $x380)))
 (let (($x481 (and (and (and (and (and (and $x456 $x383) $x409) $x440) $x414) $x417) $x419)))
 (let (($x462 (and (and (and (and (and (and $x481 $x465) $x421) $x444) $x477) $x469) $x450)))
 (let (($x463 (and $x462 $x513)))
 (let (($x518 (= $x463 true)))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x291 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x263 (concat ?x265 (concat ?x264 ?x291))))
 (let ((?x339 (bvadd ?x263 (_ bv8 32))))
 (let ((?x399 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv1 32))) (select input.dst.llvm-mem ?x339))))
 (let ((?x471 (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x339 (_ bv2 32))) ?x399))))
 (let (($x346 (= (_ bv0 32) ?x471)))
 (let ((?x470 (ite $x346 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (bvuge ?x470 (_ bv1 32))))
 (let (($x352 (= $x432 $x351)))
 (let (($x61 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x280 (and $x61 $x327)))
 (let (($x353 (=> $x280 $x352)))
 (let (($x345 (= ?x470 (_ bv0 32))))
 (let (($x347 (= $x337 $x345)))
 (let (($x348 (=> $x280 $x347)))
 (let ((?x180 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x263 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x263 (_ bv4 32))))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x263 (_ bv4 32)) (_ bv2 32))) ?x180)))
 (let ((?x177 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x263 (_ bv4 32)) (_ bv3 32))) ?x293)))
 (let (($x334 (= (_ bv0 32) ?x177)))
 (let ((?x335 (ite $x334 (_ bv0 32) (_ bv1 32))))
 (let (($x429 (bvuge ?x335 (_ bv1 32))))
 (let (($x340 (= $x342 $x429)))
 (let (($x398 (=> $x280 $x340)))
 (let (($x361 (= ?x335 (_ bv0 32))))
 (let (($x336 (= $x360 $x361)))
 (let (($x341 (=> $x280 $x336)))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv1 32))) (select input.dst.llvm-mem ?x263))))
 (let ((?x275 (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x263 (_ bv2 32))) ?x395))))
 (let (($x278 (= input.spec-%var-t-0.2.2.2.0 ?x275)))
 (let (($x290 (=> $x280 $x278)))
 (let (($x266 (= (_ bv0 32) ?x263)))
 (let ((?x292 (ite $x266 (_ bv0 32) (_ bv1 32))))
 (let (($x272 (bvuge ?x292 (_ bv1 32))))
 (let (($x359 (= $x327 $x272)))
 (let (($x279 (=> $x61 $x359)))
 (let (($x310 (and $x61 $x309)))
 (let (($x274 (=> $x310 $x18)))
 (let (($x402 (= ?x292 (_ bv0 32))))
 (let (($x268 (= $x309 $x402)))
 (let (($x358 (=> $x61 $x268)))
 (let (($x255 (= $x251 $x254)))
 (let (($x5 (and $x61 $x33)))
 (let (($x311 (=> $x5 $x255)))
 (let (($x325 (= $x245 $x260)))
 (let (($x248 (=> $x5 $x325)))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x223 (_ bv4 32))))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv2 32))) ?x235)))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x223 (_ bv4 32)) (_ bv3 32))) ?x233)))
 (let (($x396 (= (_ bv0 32) ?x306)))
 (let ((?x234 (ite $x396 (_ bv0 32) (_ bv1 32))))
 (let (($x240 (bvuge ?x234 (_ bv1 32))))
 (let (($x237 (= $x247 $x240)))
 (let (($x246 (=> $x5 $x237)))
 (let (($x289 (= ?x234 (_ bv0 32))))
 (let (($x285 (= $x232 $x289)))
 (let (($x244 (=> $x5 $x285)))
 (let ((?x287 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv1 32))) (select input.dst.llvm-mem ?x223))))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x223 (_ bv2 32))) ?x287))))
 (let (($x225 (= input.spec-%var-t-0.2.1.2.0 ?x323)))
 (let (($x227 (=> $x5 $x225)))
 (let (($x220 (= $x33 $x219)))
 (let (($x218 (=> $x61 $x220)))
 (let (($x215 (and $x61 $x321)))
 (let (($x214 (=> $x215 $x18)))
 (let (($x222 (= $x321 $x105)))
 (let (($x212 (=> $x61 $x222)))
 (let ((?x198 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x393 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x198)))
 (let ((?x207 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x393)))
 (let (($x101 (= input.spec-%var-t-0.2.0 ?x207)))
 (let (($x208 (=> $x61 $x101)))
 (let (($x195 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x194 (=> $x195 $x18)))
 (let (($x116 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x193 (ite $x116 (_ bv0 32) (_ bv1 32))))
 (let (($x302 (bvuge ?x193 (_ bv1 32))))
 (let (($x192 (= $x61 $x302)))
 (let (($x294 (= ?x193 (_ bv0 32))))
 (let (($x196 (= $x195 $x294)))
 (let (($x356 (and (and (and (and (and (and $x196 $x192) $x194) $x208) $x212) $x214) $x218)))
 (let (($x365 (and (and (and (and (and (and $x356 $x227) $x244) $x246) $x248) $x311) $x358)))
 (let (($x405 (and (and (and (and (and (and $x365 $x274) $x279) $x290) $x341) $x398) $x348)))
 (let (($x435 (and $x405 $x353)))
 (let (($x367 (= $x435 true)))
 (let ((?x175 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x182 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x55 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x320 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x301 (concat ?x320 (concat ?x55 (concat ?x182 ?x175)))))
 (let (($x191 (= ?x301 input.dst.llvm-%t)))
 (let (($x202 (= $x191 true)))
 (let (($x206 (= $x202 true)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x9 (concat ?x16 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x11 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x110 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x86 (bvadd ?x110 (_ bv3 32))))
 (let ((?x125 (concat (select input.dst.llvm-mem ?x86) (concat ?x11 ?x9))))
 (let (($x299 (= (bvand ?x125 (_ bv4294967280 32)) ?x125)))
 (let (($x297 (= (bvand ?x110 (_ bv4294967292 32)) ?x110)))
 (let (($x170 (and $x297 $x299)))
 (let (($x147 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x144 (and true $x147)))
 (let (($x158 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x110 (bvsub ?x110 (_ bv4 32))) (bvult ?x110 (bvsub ?x110 (_ bv4 32))))))
 (let (($x160 (and (and (and $x158 $x144) $x297) $x170)))
 (let (($x156 (= true $x160)))
 (let (($x71 (not $x116)))
 (let (($x171 (=> $x71 $x156)))
 (let (($x184 (= $x171 true)))
 (let (($x392 (= $x184 true)))
 (let (($x176 (= $x392 true)))
 (let (($x126 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x172 (and $x126 $x171)))
 (let (($x123 (= (_ bv0 32) ?x125)))
 (let (($x133 (not $x123)))
 (let (($x49 (=> $x133 $x156)))
 (let (($x152 (= (bvand ?x150 (_ bv4294967280 32)) ?x150)))
 (let (($x154 (= (bvand ?x102 (_ bv4294967292 32)) ?x102)))
 (let (($x146 (and $x154 $x152)))
 (let (($x149 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x102 (bvsub ?x102 (_ bv8 32))) (bvult ?x102 (bvsub ?x102 (_ bv8 32))))))
 (let (($x35 (and (and (and $x149 $x144) $x154) $x146)))
 (let (($x28 (= true $x35)))
 (let (($x155 (=> $x123 $x28)))
 (let (($x168 (and $x155 $x49)))
 (let (($x169 (= true $x168)))
 (let (($x313 (or $x123 $x133)))
 (let (($x314 (and $x71 $x313)))
 (let (($x100 (=> $x314 $x169)))
 (let (($x173 (and $x100 $x172)))
 (let (($x179 (= $x173 true)))
 (let (($x174 (= $x179 true)))
 (let (($x178 (= $x174 true)))
 (let (($x159 (= $x100 true)))
 (let (($x161 (= $x159 true)))
 (let (($x8 (= $x161 true)))
 (let (($x38 (and $x71 $x123)))
 (let (($x128 (= $x38 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x97 (= $x126 true)))
 (let (($x73 (= $x97 true)))
 (let (($x81 (= $x73 true)))
 (let ((?x78 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x67 (= (_ bv0 32) ?x78)))
 (let ((?x42 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x84 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x42)))
 (let (($x104 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (and $x104 $x84)))
 (let (($x52 (and $x10 $x67)))
 (let (($x127 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x29 (and $x127 $x52)))
 (let (($x108 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x83 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x108)))))))
 (let (($x115 (and $x83 $x29)))
 (let (($x87 (= $x115 true)))
 (let (($x46 (= $x87 true)))
 (let (($x107 (= $x46 true)))
 (let (($x132 (and $x107 $x81)))
 (let (($x95 (and $x132 $x81)))
 (let (($x139 (and $x95 $x134)))
 (let (($x319 (and $x139 $x8)))
 (let (($x186 (and $x319 $x178)))
 (let (($x181 (and $x186 $x176)))
 (let (($x204 (and $x181 $x206)))
 (let (($x368 (and $x204 $x367)))
 (let (($x519 (and $x368 $x518)))
 (let (($x622 (and $x519 $x621)))
 (let (($x658 (and $x622 $x648)))
 (let (($x712 (and $x658 $x741)))
 (let (($x713 (and $x5 $x712)))
 (let (($x7 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x714 (and $x7 $x713)))
 (let (($x742 (and $x18 $x714)))
 (let (($x715 (and $x18 $x742)))
 (let (($x44 (bvugt ?x102 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x122)))
 (let (($x60 (=> (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x44)))))))
 (let (($x62 (=> (and $x38 (bvule ?x102 (bvsub (bvadd ?x102 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x44)))))))
 (let (($x93 (bvugt ?x110 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x40 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x24 (=> (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x40 $x93)))))))
 (let (($x96 (=> (and $x71 (bvule ?x110 (bvsub (bvadd ?x110 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x40 $x93)))))))
 (let (($x13 (and $x96 $x62)))
 (let (($x716 (and $x13 $x715)))
 (let (($x816 (=> $x716 $x815)))
 (not $x
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 12
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var4371X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x259 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x292 (concat ?x270 ?x259))))
 (let (($x268 (= (_ bv0 32) ?x402)))
 (let ((?x358 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x358 (_ bv1 32))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x231 (concat ?x224 (concat ?x5 ?x218))))
 (let ((?x288 (bvadd ?x231 (_ bv8 32))))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x357))))
 (let (($x332 (= (_ bv0 32) ?x308)))
 (let ((?x229 (ite $x332 (_ bv0 32) (_ bv1 32))))
 (let (($x366 (bvuge ?x229 (_ bv1 32))))
 (let (($x272 (= $x366 $x327)))
 (let (($x226 (= (_ bv0 32) ?x231)))
 (let ((?x56 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x56 (_ bv1 32))))
 (let (($x359 (=> $x287 $x272)))
 (let (($x365 (= ?x358 (_ bv0 32))))
 (let (($x394 (= ?x229 (_ bv0 32))))
 (let (($x310 (= $x394 $x365)))
 (let (($x274 (=> $x287 $x310)))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x254 (concat ?x251 (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv8 32))))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x256 (concat ?x309 (concat ?x311 ?x254))))
 (let (($x326 (= ?x256 ?x256)))
 (let (($x265 (=> $x287 $x326)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x249 (concat ?x261 (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv4 32))))))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x331 (concat ?x324 ?x249))))
 (let (($x250 (= ?x257 ?x257)))
 (let (($x260 (=> $x287 $x250)))
 (let ((?x472 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4371X))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv2 32))) ?x472)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv3 32))) ?x237)))
 (let (($x245 (= ?x243 ?x243)))
 (let (($x242 (=> $x287 $x245)))
 (let (($x110 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x354 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x354 (_ bv1 32))))
 (let (($x396 (= $x287 $x203)))
 (let (($x205 (= ?x354 (_ bv0 32))))
 (let (($x230 (= ?x56 (_ bv0 32))))
 (let (($x306 (= $x230 $x205)))
 (let (($x233 (= ?x231 input.dst.llvm-%t)))
 (let (($x7 (= false false)))
 (let (($x236 (and $x287 $x394)))
 (let (($x235 (=> $x236 $x7)))
 (let (($x221 (=> $x230 $x7)))
 (let (($x276 (and (and (and (and (and (and $x221 $x235) $x233) $x306) $x396) $x242) $x260)))
 (let (($x328 (and (and (and $x276 $x265) $x274) $x359)))
 (let (($x214 (not true)))
 (let (($x397 (or $x214 $x328)))
 (let (($x215 (= true true)))
 (let (($x271 (and $x215 $x397)))
 (let (($x395 (= $x271 true)))
 (let (($x318 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x211 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x209 (= $x211 $x318)))
 (let (($x304 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x216 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x68 (= $x216 $x304)))
 (let (($x303 (and $x68 $x209)))
 (let (($x223 (= $x303 true)))
 (let (($x208 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x58 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x362 (= $x58 $x208)))
 (let (($x207 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x198 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x101 (= $x198 $x207)))
 (let (($x53 (and $x101 $x362)))
 (let (($x321 (= $x53 true)))
 (let (($x20 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x199 (= $x20 $x203)))
 (let (($x194 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x36 (= $x194 $x205)))
 (let (($x200 (and $x36 $x199)))
 (let (($x197 (= $x200 true)))
 (let ((?x191 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x206 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x196 (concat ?x195 (concat ?x206 ?x191)))))
 (let (($x302 (= ?x61 input.dst.llvm-%t)))
 (let (($x192 (= $x302 true)))
 (let (($x401 (= $x192 true)))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x16 (concat ?x120 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x82 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x85 (bvadd ?x82 (_ bv3 32))))
 (let ((?x38 (concat (select input.dst.llvm-mem ?x85) (concat ?x119 ?x16))))
 (let (($x100 (= (bvand ?x38 (_ bv4294967280 32)) ?x38)))
 (let (($x168 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x159 (and $x168 $x100)))
 (let (($x138 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x141 (and true $x138)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv4 32))) (bvult ?x82 (bvsub ?x82 (_ bv4 32))))))
 (let (($x319 (and (and (and $x156 $x141) $x168) $x159)))
 (let (($x171 (= true $x319)))
 (let (($x113 (not $x110)))
 (let (($x176 (=> $x113 $x171)))
 (let (($x182 (= $x176 true)))
 (let (($x175 (= $x182 true)))
 (let (($x183 (= $x175 true)))
 (let (($x139 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x181 (and $x139 $x176)))
 (let (($x39 (= (_ bv0 32) ?x38)))
 (let (($x140 (not $x39)))
 (let (($x172 (=> $x140 $x171)))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x152 (concat ?x165 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x106 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x106 (_ bv3 32))))
 (let ((?x167 (concat (select input.dst.llvm-mem ?x129) (concat ?x35 ?x152))))
 (let (($x298 (= (bvand ?x167 (_ bv4294967280 32)) ?x167)))
 (let (($x137 (= (bvand ?x106 (_ bv4294967292 32)) ?x106)))
 (let (($x21 (and $x137 $x298)))
 (let (($x315 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x106 (bvsub ?x106 (_ bv8 32))) (bvult ?x106 (bvsub ?x106 (_ bv8 32))))))
 (let (($x316 (and (and (and $x315 $x141) $x137) $x21)))
 (let (($x297 (= true $x316)))
 (let (($x157 (=> $x39 $x297)))
 (let (($x173 (and $x157 $x172)))
 (let (($x179 (= true $x173)))
 (let (($x163 (or $x39 $x140)))
 (let (($x135 (and $x113 $x163)))
 (let (($x174 (=> $x135 $x179)))
 (let (($x190 (and $x174 $x181)))
 (let (($x320 (= $x190 true)))
 (let (($x188 (= $x320 true)))
 (let (($x55 (= $x188 true)))
 (let (($x178 (= $x174 true)))
 (let (($x186 (= $x178 true)))
 (let (($x184 (= $x186 true)))
 (let (($x295 (= $x110 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x314 (= $x313 true)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x69)))
 (let ((?x46 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x87 $x107)))
 (let (($x97 (and $x50 $x126)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x83 $x97)))
 (let (($x84 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x84)))))))
 (let (($x81 (and $x115 $x73)))
 (let (($x132 (= $x81 true)))
 (let (($x95 (= $x132 true)))
 (let (($x128 (= $x95 true)))
 (let (($x136 (and $x128 $x314)))
 (let (($x80 (and $x136 $x314)))
 (let (($x131 (and $x80 $x149)))
 (let (($x392 (and $x131 $x184)))
 (let (($x300 (and $x392 $x55)))
 (let (($x189 (and $x300 $x183)))
 (let (($x18 (and $x189 $x401)))
 (let (($x201 (and $x18 $x197)))
 (let (($x72 (and $x201 $x321)))
 (let (($x32 (and $x72 $x223)))
 (let (($x74 (and $x20 $x58)))
 (let (($x213 (and $x74 $x32)))
 (let (($x15 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x105 (and $x15 $x213)))
 (let (($x222 (and $x7 $x105)))
 (let (($x212 (and $x7 $x222)))
 (let (($x91 (bvugt ?x106 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x65 (=> (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x91)))))))
 (let (($x102 (and $x113 $x39)))
 (let (($x45 (=> (and $x102 (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x17 $x91)))))))
 (let (($x75 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x12 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x75)))))))
 (let (($x43 (=> (and $x113 (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x98 $x75)))))))
 (let (($x122 (and $x43 $x45)))
 (let (($x433 (and $x122 $x212)))
 (let (($x283 (=> $x433 $x395)))
 (not $x283)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.ind-%var4371X () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x259 (concat ?x262 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x292 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x292 (concat ?x270 ?x259))))
 (let (($x268 (= (_ bv0 32) ?x402)))
 (let ((?x358 (ite $x268 (_ bv0 32) (_ bv1 32))))
 (let (($x327 (bvuge ?x358 (_ bv1 32))))
 (let ((?x220 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x220 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x231 (concat ?x224 (concat ?x5 ?x218))))
 (let ((?x288 (bvadd ?x231 (_ bv8 32))))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv1 32))) (select input.dst.llvm-mem ?x288))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x288 (_ bv2 32))) ?x357))))
 (let (($x332 (= (_ bv0 32) ?x308)))
 (let ((?x229 (ite $x332 (_ bv0 32) (_ bv1 32))))
 (let (($x366 (bvuge ?x229 (_ bv1 32))))
 (let (($x272 (= $x366 $x327)))
 (let (($x226 (= (_ bv0 32) ?x231)))
 (let ((?x56 (ite $x226 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x56 (_ bv1 32))))
 (let (($x359 (=> $x287 $x272)))
 (let (($x365 (= ?x358 (_ bv0 32))))
 (let (($x394 (= ?x229 (_ bv0 32))))
 (let (($x310 (= $x394 $x365)))
 (let (($x274 (=> $x287 $x310)))
 (let ((?x251 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x254 (concat ?x251 (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv8 32))))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x256 (concat ?x309 (concat ?x311 ?x254))))
 (let (($x326 (= ?x256 ?x256)))
 (let (($x265 (=> $x287 $x326)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x249 (concat ?x261 (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv4 32))))))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4371X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x331 (concat ?x324 ?x249))))
 (let (($x250 (= ?x257 ?x257)))
 (let (($x260 (=> $x287 $x250)))
 (let ((?x472 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4371X))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv2 32))) ?x472)))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4371X (_ bv3 32))) ?x237)))
 (let (($x245 (= ?x243 ?x243)))
 (let (($x242 (=> $x287 $x245)))
 (let (($x110 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x354 (ite $x110 (_ bv0 32) (_ bv1 32))))
 (let (($x203 (bvuge ?x354 (_ bv1 32))))
 (let (($x396 (= $x287 $x203)))
 (let (($x205 (= ?x354 (_ bv0 32))))
 (let (($x230 (= ?x56 (_ bv0 32))))
 (let (($x306 (= $x230 $x205)))
 (let (($x233 (= ?x231 input.dst.llvm-%t)))
 (let (($x7 (= false false)))
 (let (($x236 (and $x287 $x394)))
 (let (($x235 (=> $x236 $x7)))
 (let (($x221 (=> $x230 $x7)))
 (let (($x276 (and (and (and (and (and (and $x221 $x235) $x233) $x306) $x396) $x242) $x260)))
 (let (($x328 (and (and (and $x276 $x265) $x274) $x359)))
 (let (($x214 (not true)))
 (let (($x397 (or $x214 $x328)))
 (let (($x215 (= true true)))
 (let (($x271 (and $x215 $x397)))
 (let (($x395 (= $x271 true)))
 (let (($x318 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x211 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x209 (= $x211 $x318)))
 (let (($x304 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x216 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x68 (= $x216 $x304)))
 (let (($x303 (and $x68 $x209)))
 (let (($x223 (= $x303 true)))
 (let (($x208 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x58 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x362 (= $x58 $x208)))
 (let (($x207 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x198 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x101 (= $x198 $x207)))
 (let (($x53 (and $x101 $x362)))
 (let (($x321 (= $x53 true)))
 (let (($x20 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x199 (= $x20 $x203)))
 (let (($x194 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x36 (= $x194 $x205)))
 (let (($x200 (and $x36 $x199)))
 (let (($x197 (= $x200 true)))
 (let ((?x191 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x206 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x195 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x196 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x61 (concat ?x196 (concat ?x195 (concat ?x206 ?x191)))))
 (let (($x302 (= ?x61 input.dst.llvm-%t)))
 (let (($x192 (= $x302 true)))
 (let (($x401 (= $x192 true)))
 (let ((?x120 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x16 (concat ?x120 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x119 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x82 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x85 (bvadd ?x82 (_ bv3 32))))
 (let ((?x38 (concat (select input.dst.llvm-mem ?x85) (concat ?x119 ?x16))))
 (let (($x100 (= (bvand ?x38 (_ bv4294967280 32)) ?x38)))
 (let (($x168 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x159 (and $x168 $x100)))
 (let (($x138 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x141 (and true $x138)))
 (let (($x156 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv4 32))) (bvult ?x82 (bvsub ?x82 (_ bv4 32))))))
 (let (($x319 (and (and (and $x156 $x141) $x168) $x159)))
 (let (($x171 (= true $x319)))
 (let (($x113 (not $x110)))
 (let (($x176 (=> $x113 $x171)))
 (let (($x182 (= $x176 true)))
 (let (($x175 (= $x182 true)))
 (let (($x183 (= $x175 true)))
 (let (($x139 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x181 (and $x139 $x176)))
 (let (($x39 (= (_ bv0 32) ?x38)))
 (let (($x140 (not $x39)))
 (let (($x172 (=> $x140 $x171)))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x152 (concat ?x165 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x106 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x106 (_ bv3 32))))
 (let ((?x167 (concat (select input.dst.llvm-mem ?x129) (concat ?x35 ?x152))))
 (let (($x298 (= (bvand ?x167 (_ bv4294967280 32)) ?x167)))
 (let (($x137 (= (bvand ?x106 (_ bv4294967292 32)) ?x106)))
 (let (($x21 (and $x137 $x298)))
 (let (($x315 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x106 (bvsub ?x106 (_ bv8 32))) (bvult ?x106 (bvsub ?x106 (_ bv8 32))))))
 (let (($x316 (and (and (and $x315 $x141) $x137) $x21)))
 (let (($x297 (= true $x316)))
 (let (($x157 (=> $x39 $x297)))
 (let (($x173 (and $x157 $x172)))
 (let (($x179 (= true $x173)))
 (let (($x163 (or $x39 $x140)))
 (let (($x135 (and $x113 $x163)))
 (let (($x174 (=> $x135 $x179)))
 (let (($x190 (and $x174 $x181)))
 (let (($x320 (= $x190 true)))
 (let (($x188 (= $x320 true)))
 (let (($x55 (= $x188 true)))
 (let (($x178 (= $x174 true)))
 (let (($x186 (= $x178 true)))
 (let (($x184 (= $x186 true)))
 (let (($x295 (= $x110 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x314 (= $x313 true)))
 (let ((?x69 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x126 (= (_ bv0 32) ?x69)))
 (let ((?x46 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x107 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x46)))
 (let (($x87 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x50 (and $x87 $x107)))
 (let (($x97 (and $x50 $x126)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x73 (and $x83 $x97)))
 (let (($x84 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x42 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x115 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x42 $x84)))))))
 (let (($x81 (and $x115 $x73)))
 (let (($x132 (= $x81 true)))
 (let (($x95 (= $x132 true)))
 (let (($x128 (= $x95 true)))
 (let (($x136 (and $x128 $x314)))
 (let (($x80 (and $x136 $x314)))
 (let (($x131 (and $x80 $x149)))
 (let (($x392 (and $x131 $x184)))
 (let (($x300 (and $x392 $x55)))
 (let (($x189 (and $x300 $x183)))
 (let (($x18 (and $x189 $x401)))
 (let (($x201 (and $x18 $x197)))
 (let (($x72 (and $x201 $x321)))
 (let (($x32 (and $x72 $x223)))
 (let (($x74 (and $x20 $x58)))
 (let (($x213 (and $x74 $x32)))
 (let (($x15 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x105 (and $x15 $x213)))
 (let (($x222 (and $x7 $x105)))
 (let (($x212 (and $x7 $x222)))
 (let (($x91 (bvugt ?x106 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x65 (=> (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x91)))))))
 (let (($x102 (and $x113 $x39)))
 (let (($x45 (=> (and $x102 (bvule ?x106 (bvsub (bvadd ?x106 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x17 $x91)))))))
 (let (($x75 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x98 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x85)))
 (let (($x12 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x98 $x75)))))))
 (let (($x43 (=> (and $x113 (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x98 $x75)))))))
 (let (($x122 (and $x43 $x45)))
 (let (($x433 (and $x122 $x212)))
 (let (($x283 (=> $x433 $x395)))
 (not $x283)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 13
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4409X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x402 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x268 (concat ?x402 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv8 32))))))
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x366 (concat ?x273 (concat ?x365 ?x268))))
 (let (($x327 (= ?x366 ?x366)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x221 (concat ?x230 (concat ?x231 ?x218))))
 (let (($x288 (= (_ bv0 32) ?x221)))
 (let ((?x284 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x284 (_ bv1 32))))
 (let (($x272 (=> $x323 $x327)))
 (let ((?x119 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x11 (concat ?x119 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x82 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x82 (_ bv3 32))))
 (let ((?x39 (concat (select input.dst.llvm-mem ?x75) (concat ?x16 ?x11))))
 (let ((?x276 (bvadd ?x39 (_ bv4 32))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x255))))
 (let (($x256 (= (_ bv0 32) ?x364)))
 (let ((?x326 (ite $x256 (_ bv0 32) (_ bv1 32))))
 (let (($x270 (bvuge ?x326 (_ bv1 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x221 (_ bv4 32))))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv2 32))) ?x238)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv3 32))) ?x261)))
 (let (($x257 (= (_ bv0 32) ?x241)))
 (let ((?x250 (ite $x257 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x250 (_ bv1 32))))
 (let (($x253 (= $x291 $x270)))
 (let (($x262 (=> $x323 $x253)))
 (let (($x47 (= false false)))
 (let (($x260 (= ?x250 (_ bv0 32))))
 (let (($x266 (and $x323 $x260)))
 (let (($x292 (=> $x266 $x47)))
 (let (($x265 (= ?x326 (_ bv0 32))))
 (let (($x277 (= $x260 $x265)))
 (let (($x267 (=> $x323 $x277)))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x247 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv4 32))))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x243 (concat ?x237 (concat ?x244 ?x240))))
 (let (($x245 (= ?x243 ?x243)))
 (let (($x242 (=> $x323 $x245)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4409X))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv2 32))) ?x236)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv3 32))) ?x233)))
 (let (($x396 (= ?x280 ?x280)))
 (let (($x434 (=> $x323 $x396)))
 (let (($x102 (= (_ bv0 32) ?x39)))
 (let ((?x307 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x357 (bvuge ?x307 (_ bv1 32))))
 (let (($x228 (= $x323 $x357)))
 (let (($x305 (= ?x284 (_ bv0 32))))
 (let (($x227 (=> $x305 $x47)))
 (let (($x271 (and (and (and (and (= ?x221 ?x39) (= $x305 (= ?x307 (_ bv0 32)))) $x227) $x228) $x434)))
 (let (($x51 (and (and (and (and (and $x271 $x242) $x267) $x292) $x262) $x272)))
 (let (($x356 (not true)))
 (let (($x301 (or $x356 $x51)))
 (let (($x224 (= true true)))
 (let (($x278 (and $x224 $x301)))
 (let (($x290 (= $x278 true)))
 (let (($x32 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x223 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x213 (= $x223 $x32)))
 (let (($x209 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x211 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x303 (= $x211 $x209)))
 (let (($x105 (and $x303 $x213)))
 (let (($x222 (= $x105 true)))
 (let (($x72 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x321 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x217 (= $x321 $x72)))
 (let (($x362 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x74 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x53 (= $x74 $x362)))
 (let (($x216 (and $x53 $x217)))
 (let (($x210 (= $x216 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x199 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x201 (bvuge ?x199 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x198 (= $x108 $x201)))
 (let (($x200 (= ?x199 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x197 (= $x203 $x200)))
 (let (($x393 (and $x197 $x198)))
 (let (($x207 (= $x393 true)))
 (let ((?x202 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x18 (concat ?x401 (concat ?x61 (concat ?x191 ?x202)))))
 (let (($x194 (= ?x18 input.dst.llvm-%t)))
 (let (($x354 (= $x194 true)))
 (let (($x205 (= $x354 true)))
 (let (($x159 (= (bvand ?x39 (_ bv4294967280 32)) ?x39)))
 (let (($x169 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x319 (and $x169 $x159)))
 (let (($x145 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x142 (and true $x145)))
 (let (($x168 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv4 32))) (bvult ?x82 (bvsub ?x82 (_ bv4 32))))))
 (let (($x173 (and (and (and $x168 $x142) $x169) $x319)))
 (let (($x179 (= true $x173)))
 (let (($x31 (not $x23)))
 (let (($x320 (=> $x31 $x179)))
 (let (($x189 (= $x320 true)))
 (let (($x294 (= $x189 true)))
 (let (($x196 (= $x294 true)))
 (let (($x313 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x188 (and $x313 $x320)))
 (let (($x149 (not $x102)))
 (let (($x174 (=> $x149 $x179)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x165 (concat ?x150 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x103 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x103 (_ bv3 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem ?x91) (concat ?x152 ?x165))))
 (let (($x21 (= (bvand ?x166 (_ bv4294967280 32)) ?x166)))
 (let (($x155 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x316 (and $x155 $x21)))
 (let (($x148 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv8 32))) (bvult ?x103 (bvsub ?x103 (_ bv8 32))))))
 (let (($x299 (and (and (and $x148 $x142) $x155) $x316)))
 (let (($x153 (= true $x299)))
 (let (($x170 (=> $x102 $x153)))
 (let (($x178 (and $x170 $x174)))
 (let (($x186 (= true $x178)))
 (let (($x147 (or $x102 $x149)))
 (let (($x164 (and $x31 $x147)))
 (let (($x184 (=> $x164 $x186)))
 (let (($x55 (and $x184 $x188)))
 (let (($x300 (= $x55 true)))
 (let (($x182 (= $x300 true)))
 (let (($x175 (= $x182 true)))
 (let (($x392 (= $x184 true)))
 (let (($x176 (= $x392 true)))
 (let (($x181 (= $x176 true)))
 (let (($x131 (and $x31 $x149)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let (($x314 (= $x313 true)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x97)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x107 $x69)))
 (let (($x81 (and $x126 $x73)))
 (let (($x104 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x104 $x81)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x46 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x67)))))))
 (let (($x95 (and $x46 $x132)))
 (let (($x128 (= $x95 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x295 (and $x134 $x80)))
 (let (($x94 (and $x295 $x80)))
 (let (($x144 (and $x94 $x135)))
 (let (($x190 (and $x144 $x181)))
 (let (($x183 (and $x190 $x175)))
 (let (($x57 (and $x183 $x196)))
 (let (($x36 (and $x57 $x205)))
 (let (($x101 (and $x36 $x207)))
 (let (($x304 (and $x101 $x210)))
 (let (($x212 (and $x304 $x222)))
 (let (($x130 (and $x108 $x74)))
 (let (($x433 (and $x130 $x212)))
 (let (($x114 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x215 (and $x114 $x433)))
 (let (($x214 (and $x47 $x215)))
 (let (($x355 (and $x47 $x214)))
 (let (($x60 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x7 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x60)))))))
 (let (($x124 (and $x31 $x102)))
 (let (($x44 (=> (and $x124 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x66 $x60)))))))
 (let (($x24 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x123 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x24)))))))
 (let (($x59 (=> (and $x31 (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x24)))))))
 (let (($x14 (and $x59 $x44)))
 (let (($x330 (and $x14 $x355)))
 (let (($x92 (=> $x330 $x290)))
 (not $x92))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4409X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x402 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x268 (concat ?x402 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv8 32))))))
 (let ((?x365 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x366 (concat ?x273 (concat ?x365 ?x268))))
 (let (($x327 (= ?x366 ?x366)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x218 (concat ?x33 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x231 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x221 (concat ?x230 (concat ?x231 ?x218))))
 (let (($x288 (= (_ bv0 32) ?x221)))
 (let ((?x284 (ite $x288 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x284 (_ bv1 32))))
 (let (($x272 (=> $x323 $x327)))
 (let ((?x119 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x11 (concat ?x119 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x82 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x75 (bvadd ?x82 (_ bv3 32))))
 (let ((?x39 (concat (select input.dst.llvm-mem ?x75) (concat ?x16 ?x11))))
 (let ((?x276 (bvadd ?x39 (_ bv4 32))))
 (let ((?x255 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv1 32))) (select input.dst.llvm-mem ?x276))))
 (let ((?x364 (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x276 (_ bv2 32))) ?x255))))
 (let (($x256 (= (_ bv0 32) ?x364)))
 (let ((?x326 (ite $x256 (_ bv0 32) (_ bv1 32))))
 (let (($x270 (bvuge ?x326 (_ bv1 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x221 (_ bv4 32))))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv2 32))) ?x238)))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x221 (_ bv4 32)) (_ bv3 32))) ?x261)))
 (let (($x257 (= (_ bv0 32) ?x241)))
 (let ((?x250 (ite $x257 (_ bv0 32) (_ bv1 32))))
 (let (($x291 (bvuge ?x250 (_ bv1 32))))
 (let (($x253 (= $x291 $x270)))
 (let (($x262 (=> $x323 $x253)))
 (let (($x47 (= false false)))
 (let (($x260 (= ?x250 (_ bv0 32))))
 (let (($x266 (and $x323 $x260)))
 (let (($x292 (=> $x266 $x47)))
 (let (($x265 (= ?x326 (_ bv0 32))))
 (let (($x277 (= $x260 $x265)))
 (let (($x267 (=> $x323 $x277)))
 (let ((?x247 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x240 (concat ?x247 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv4 32))))))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x237 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x243 (concat ?x237 (concat ?x244 ?x240))))
 (let (($x245 (= ?x243 ?x243)))
 (let (($x242 (=> $x323 $x245)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4409X))))
 (let ((?x233 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv2 32))) ?x236)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv3 32))) ?x233)))
 (let (($x396 (= ?x280 ?x280)))
 (let (($x434 (=> $x323 $x396)))
 (let (($x102 (= (_ bv0 32) ?x39)))
 (let ((?x307 (ite $x102 (_ bv0 32) (_ bv1 32))))
 (let (($x357 (bvuge ?x307 (_ bv1 32))))
 (let (($x228 (= $x323 $x357)))
 (let (($x305 (= ?x284 (_ bv0 32))))
 (let (($x227 (=> $x305 $x47)))
 (let (($x271 (and (and (and (and (= ?x221 ?x39) (= $x305 (= ?x307 (_ bv0 32)))) $x227) $x228) $x434)))
 (let (($x51 (and (and (and (and (and $x271 $x242) $x267) $x292) $x262) $x272)))
 (let (($x356 (not true)))
 (let (($x301 (or $x356 $x51)))
 (let (($x224 (= true true)))
 (let (($x278 (and $x224 $x301)))
 (let (($x290 (= $x278 true)))
 (let (($x32 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x223 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x213 (= $x223 $x32)))
 (let (($x209 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x211 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x303 (= $x211 $x209)))
 (let (($x105 (and $x303 $x213)))
 (let (($x222 (= $x105 true)))
 (let (($x72 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x321 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x217 (= $x321 $x72)))
 (let (($x362 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x74 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x53 (= $x74 $x362)))
 (let (($x216 (and $x53 $x217)))
 (let (($x210 (= $x216 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x199 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x201 (bvuge ?x199 (_ bv1 32))))
 (let (($x108 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x198 (= $x108 $x201)))
 (let (($x200 (= ?x199 (_ bv0 32))))
 (let (($x203 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x197 (= $x203 $x200)))
 (let (($x393 (and $x197 $x198)))
 (let (($x207 (= $x393 true)))
 (let ((?x202 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x191 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x401 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x18 (concat ?x401 (concat ?x61 (concat ?x191 ?x202)))))
 (let (($x194 (= ?x18 input.dst.llvm-%t)))
 (let (($x354 (= $x194 true)))
 (let (($x205 (= $x354 true)))
 (let (($x159 (= (bvand ?x39 (_ bv4294967280 32)) ?x39)))
 (let (($x169 (= (bvand ?x82 (_ bv4294967292 32)) ?x82)))
 (let (($x319 (and $x169 $x159)))
 (let (($x145 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x142 (and true $x145)))
 (let (($x168 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x82 (bvsub ?x82 (_ bv4 32))) (bvult ?x82 (bvsub ?x82 (_ bv4 32))))))
 (let (($x173 (and (and (and $x168 $x142) $x169) $x319)))
 (let (($x179 (= true $x173)))
 (let (($x31 (not $x23)))
 (let (($x320 (=> $x31 $x179)))
 (let (($x189 (= $x320 true)))
 (let (($x294 (= $x189 true)))
 (let (($x196 (= $x294 true)))
 (let (($x313 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x188 (and $x313 $x320)))
 (let (($x149 (not $x102)))
 (let (($x174 (=> $x149 $x179)))
 (let ((?x150 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x165 (concat ?x150 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x152 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x103 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x103 (_ bv3 32))))
 (let ((?x166 (concat (select input.dst.llvm-mem ?x91) (concat ?x152 ?x165))))
 (let (($x21 (= (bvand ?x166 (_ bv4294967280 32)) ?x166)))
 (let (($x155 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x316 (and $x155 $x21)))
 (let (($x148 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv8 32))) (bvult ?x103 (bvsub ?x103 (_ bv8 32))))))
 (let (($x299 (and (and (and $x148 $x142) $x155) $x316)))
 (let (($x153 (= true $x299)))
 (let (($x170 (=> $x102 $x153)))
 (let (($x178 (and $x170 $x174)))
 (let (($x186 (= true $x178)))
 (let (($x147 (or $x102 $x149)))
 (let (($x164 (and $x31 $x147)))
 (let (($x184 (=> $x164 $x186)))
 (let (($x55 (and $x184 $x188)))
 (let (($x300 (= $x55 true)))
 (let (($x182 (= $x300 true)))
 (let (($x175 (= $x182 true)))
 (let (($x392 (= $x184 true)))
 (let (($x176 (= $x392 true)))
 (let (($x181 (= $x176 true)))
 (let (($x131 (and $x31 $x149)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let (($x314 (= $x313 true)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let ((?x97 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x73 (= (_ bv0 32) ?x97)))
 (let ((?x50 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x69 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x50)))
 (let (($x107 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x126 (and $x107 $x69)))
 (let (($x81 (and $x126 $x73)))
 (let (($x104 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x132 (and $x104 $x81)))
 (let (($x67 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x78 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x46 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x78 $x67)))))))
 (let (($x95 (and $x46 $x132)))
 (let (($x128 (= $x95 true)))
 (let (($x30 (= $x128 true)))
 (let (($x134 (= $x30 true)))
 (let (($x295 (and $x134 $x80)))
 (let (($x94 (and $x295 $x80)))
 (let (($x144 (and $x94 $x135)))
 (let (($x190 (and $x144 $x181)))
 (let (($x183 (and $x190 $x175)))
 (let (($x57 (and $x183 $x196)))
 (let (($x36 (and $x57 $x205)))
 (let (($x101 (and $x36 $x207)))
 (let (($x304 (and $x101 $x210)))
 (let (($x212 (and $x304 $x222)))
 (let (($x130 (and $x108 $x74)))
 (let (($x433 (and $x130 $x212)))
 (let (($x114 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x215 (and $x114 $x433)))
 (let (($x214 (and $x47 $x215)))
 (let (($x355 (and $x47 $x214)))
 (let (($x60 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x66 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x7 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x66 $x60)))))))
 (let (($x124 (and $x31 $x102)))
 (let (($x44 (=> (and $x124 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x66 $x60)))))))
 (let (($x24 (bvugt ?x82 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x76 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x75)))
 (let (($x123 (=> (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x76 $x24)))))))
 (let (($x59 (=> (and $x31 (bvule ?x82 (bvsub (bvadd ?x82 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x76 $x24)))))))
 (let (($x14 (and $x59 $x44)))
 (let (($x330 (and $x14 $x355)))
 (let (($x92 (=> $x330 $x290)))
 (not $x92))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var4409X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1074003962 32) (_ bv64 8)) (_ bv4194308 32) (_ bv16 8)) (_ bv4194312 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1074003963 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd01dd03c)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xd0)
                                #x4cd0d0d4
                                #xdc)
                         #xd01dd03e
                         #x1d)
                  #xd01dd03c
                  #x30)))
  (store (store a!1 #xd01dd038 #xd6) #xd01dd037 #x4c)))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #xd01dd030)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd01dd03c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd01dd03f)
  (define-fun input.ind-%var4409X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 14
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4409X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x350 (concat ?x339 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv8 32))))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x431 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x430 (concat ?x431 (concat ?x403 ?x350))))
 (let (($x399 (= ?x430 ?x430)))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x252 (concat ?x324 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x261 (concat ?x331 ?x252))))
 (let (($x250 (= (_ bv0 32) ?x241)))
 (let ((?x260 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x260 (_ bv1 32))))
 (let (($x349 (=> $x269 $x399)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x119 (concat ?x9 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x26 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x26 (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x96) (concat ?x125 ?x119))))
 (let ((?x360 (bvadd ?x124 (_ bv4 32))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv1 32))) (select input.dst.llvm-mem ?x360))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv2 32))) ?x312))))
 (let (($x177 (= (_ bv0 32) ?x293)))
 (let ((?x334 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x429 (bvuge ?x334 (_ bv1 32))))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x241 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x241 (_ bv4 32))))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x241 (_ bv4 32)) (_ bv2 32))) ?x51)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x241 (_ bv4 32)) (_ bv3 32))) ?x290)))
 (let (($x113 (= (_ bv0 32) ?x109)))
 (let ((?x127 (ite $x113 (_ bv0 32) (_ bv1 32))))
 (let (($x342 (bvuge ?x127 (_ bv1 32))))
 (let (($x340 (= $x342 $x429)))
 (let (($x398 (=> $x269 $x340)))
 (let (($x15 (= false false)))
 (let (($x195 (= ?x127 (_ bv0 32))))
 (let (($x341 (and $x269 $x195)))
 (let (($x25 (=> $x341 $x15)))
 (let (($x335 (= ?x334 (_ bv0 32))))
 (let (($x361 (= $x195 $x335)))
 (let (($x336 (=> $x269 $x361)))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x264 (concat ?x116 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv4 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x263 (concat ?x273 ?x264))))
 (let (($x259 (= ?x402 ?x402)))
 (let (($x268 (=> $x269 $x259)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4409X))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv2 32))) ?x326)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv3 32))) ?x267)))
 (let (($x275 (= ?x292 ?x292)))
 (let (($x291 (=> $x269 $x275)))
 (let (($x106 (= (_ bv0 32) ?x124)))
 (let ((?x248 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x309 (bvuge ?x248 (_ bv1 32))))
 (let (($x325 (= $x269 $x309)))
 (let (($x276 (= ?x260 (_ bv0 32))))
 (let (($x404 (=> $x276 $x15)))
 (let (($x345 (and (and (and (and (= ?x241 ?x124) (= $x276 (= ?x248 (_ bv0 32)))) $x404) $x325) $x291)))
 (let (($x351 (and (and (and (and (and $x345 $x268) $x336) $x25) $x398) $x349)))
 (let (($x395 (not true)))
 (let (($x352 (or $x395 $x351)))
 (let (($x242 (= true true)))
 (let (($x353 (and $x242 $x352)))
 (let (($x435 (= $x353 true)))
 (let (($x271 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x434 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x234 (= $x434 $x271)))
 (let (($x280 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x396 (= $x236 $x280)))
 (let (($x229 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x279 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x394 (= $x279 $x229)))
 (let (($x306 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x308 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x308 $x306)))
 (let (($x228 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x244 (and (and (and (and $x228 $x235) $x394) $x396) $x234)))
 (let (($x363 (= $x244 true)))
 (let (($x224 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x232 (=> $x224 $x15)))
 (let (($x305 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x307 (= $x230 $x305)))
 (let (($x288 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x284 (= $x224 $x288)))
 (let (($x359 (and (and $x284 $x307) $x232)))
 (let (($x227 (= $x359 true)))
 (let (($x322 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x231 (= $x230 $x322)))
 (let (($x5 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x56 (= $x224 $x5)))
 (let (($x214 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x68 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x355 (= $x68 $x214)))
 (let (($x433 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x42 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x215 (= $x42 $x433)))
 (let (($x222 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x218 (and (and (and (and $x222 $x215) $x355) $x56) $x231)))
 (let (($x226 (= $x218 true)))
 (let (($x209 (=> $x42 $x15)))
 (let (($x211 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x318 (= $x68 $x211)))
 (let (($x210 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x304 (= $x42 $x210)))
 (let (($x223 (and (and $x304 $x318) $x209)))
 (let (($x32 (= $x223 true)))
 (let (($x201 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x362 (=> $x201 $x15)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x198 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x198 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x208 (= $x74 $x101)))
 (let (($x393 (= ?x198 (_ bv0 32))))
 (let (($x207 (= $x201 $x393)))
 (let (($x321 (and (and $x207 $x208) $x362)))
 (let (($x72 (= $x321 true)))
 (let ((?x206 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x36 (concat ?x205 (concat ?x18 (concat ?x202 ?x206)))))
 (let (($x203 (= ?x36 input.dst.llvm-%t)))
 (let (($x199 (= $x203 true)))
 (let (($x200 (= $x199 true)))
 (let (($x319 (= (bvand ?x124 (_ bv4294967280 32)) ?x124)))
 (let (($x100 (= (bvand ?x26 (_ bv4294967292 32)) ?x26)))
 (let (($x173 (and $x100 $x319)))
 (let (($x137 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x162 (and true $x137)))
 (let (($x169 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x26 (bvsub ?x26 (_ bv4 32))) (bvult ?x26 (bvsub ?x26 (_ bv4 32))))))
 (let (($x178 (and (and (and $x169 $x162) $x100) $x173)))
 (let (($x186 (= true $x178)))
 (let (($x31 (not $x23)))
 (let (($x300 (=> $x31 $x186)))
 (let (($x57 (= $x300 true)))
 (let (($x192 (= $x57 true)))
 (let (($x401 (= $x192 true)))
 (let (($x80 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x182 (and $x80 $x300)))
 (let (($x163 (not $x106)))
 (let (($x184 (=> $x163 $x186)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x150 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x17 (_ bv3 32))))
 (let ((?x298 (concat (select input.dst.llvm-mem ?x62) (concat ?x165 ?x150))))
 (let (($x316 (= (bvand ?x298 (_ bv4294967280 32)) ?x298)))
 (let (($x167 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x299 (and $x167 $x316)))
 (let (($x141 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv8 32))) (bvult ?x17 (bvsub ?x17 (_ bv8 32))))))
 (let (($x156 (and (and (and $x141 $x162) $x167) $x299)))
 (let (($x160 (= true $x156)))
 (let (($x161 (=> $x106 $x160)))
 (let (($x392 (and $x161 $x184)))
 (let (($x176 (= true $x392)))
 (let (($x151 (or $x106 $x163)))
 (let (($x317 (and $x31 $x151)))
 (let (($x181 (=> $x317 $x176)))
 (let (($x175 (and $x181 $x182)))
 (let (($x183 (= $x175 true)))
 (let (($x189 (= $x183 true)))
 (let (($x294 (= $x189 true)))
 (let (($x190 (= $x181 true)))
 (let (($x320 (= $x190 true)))
 (let (($x188 (= $x320 true)))
 (let (($x135 (and $x31 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x295 (= $x80 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let ((?x132 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x95 (= (_ bv0 32) ?x132)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x97)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x126 $x73)))
 (let (($x128 (and $x81 $x95)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (and $x78 $x128)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x83)))))))
 (let (($x134 (and $x69 $x30)))
 (let (($x139 (= $x134 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x131 (and $x313 $x149)))
 (let (($x140 (and $x131 $x149)))
 (let (($x315 (and $x140 $x164)))
 (let (($x55 (and $x315 $x188)))
 (let (($x196 (and $x55 $x294)))
 (let (($x193 (and $x196 $x401)))
 (let (($x197 (and $x193 $x200)))
 (let (($x217 (and $x197 $x72)))
 (let (($x213 (and $x217 $x32)))
 (let (($x221 (and $x213 $x226)))
 (let (($x328 (and $x221 $x227)))
 (let (($x247 (and $x328 $x363)))
 (let (($x84 (and $x74 $x42)))
 (let (($x246 (and $x84 $x247)))
 (let (($x108 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x240 (and $x108 $x246)))
 (let (($x289 (and $x15 $x240)))
 (let (($x243 (and $x15 $x289)))
 (let (($x65 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x70 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x65)))))))
 (let (($x103 (and $x31 $x106)))
 (let (($x122 (=> (and $x103 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x13 $x65)))))))
 (let (($x12 (bvugt ?x26 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x120 (=> (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x12)))))))
 (let (($x93 (=> (and $x31 (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x64 $x12)))))))
 (let (($x91 (and $x93 $x122)))
 (let (($x245 (and $x91 $x243)))
 (let (($x367 (=> $x245 $x435)))
 (not $x367)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4409X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x339 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x350 (concat ?x339 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv8 32))))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x431 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x430 (concat ?x431 (concat ?x403 ?x350))))
 (let (($x399 (= ?x430 ?x430)))
 (let ((?x324 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x252 (concat ?x324 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x331 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x241 (concat ?x261 (concat ?x331 ?x252))))
 (let (($x250 (= (_ bv0 32) ?x241)))
 (let ((?x260 (ite $x250 (_ bv0 32) (_ bv1 32))))
 (let (($x269 (bvuge ?x260 (_ bv1 32))))
 (let (($x349 (=> $x269 $x399)))
 (let ((?x9 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x119 (concat ?x9 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x26 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x96 (bvadd ?x26 (_ bv3 32))))
 (let ((?x124 (concat (select input.dst.llvm-mem ?x96) (concat ?x125 ?x119))))
 (let ((?x360 (bvadd ?x124 (_ bv4 32))))
 (let ((?x312 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv1 32))) (select input.dst.llvm-mem ?x360))))
 (let ((?x293 (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x360 (_ bv2 32))) ?x312))))
 (let (($x177 (= (_ bv0 32) ?x293)))
 (let ((?x334 (ite $x177 (_ bv0 32) (_ bv1 32))))
 (let (($x429 (bvuge ?x334 (_ bv1 32))))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x241 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x241 (_ bv4 32))))))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x241 (_ bv4 32)) (_ bv2 32))) ?x51)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x241 (_ bv4 32)) (_ bv3 32))) ?x290)))
 (let (($x113 (= (_ bv0 32) ?x109)))
 (let ((?x127 (ite $x113 (_ bv0 32) (_ bv1 32))))
 (let (($x342 (bvuge ?x127 (_ bv1 32))))
 (let (($x340 (= $x342 $x429)))
 (let (($x398 (=> $x269 $x340)))
 (let (($x15 (= false false)))
 (let (($x195 (= ?x127 (_ bv0 32))))
 (let (($x341 (and $x269 $x195)))
 (let (($x25 (=> $x341 $x15)))
 (let (($x335 (= ?x334 (_ bv0 32))))
 (let (($x361 (= $x195 $x335)))
 (let (($x336 (=> $x269 $x361)))
 (let ((?x116 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x264 (concat ?x116 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv4 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x402 (concat ?x263 (concat ?x273 ?x264))))
 (let (($x259 (= ?x402 ?x402)))
 (let (($x268 (=> $x269 $x259)))
 (let ((?x326 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4409X))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv2 32))) ?x326)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv3 32))) ?x267)))
 (let (($x275 (= ?x292 ?x292)))
 (let (($x291 (=> $x269 $x275)))
 (let (($x106 (= (_ bv0 32) ?x124)))
 (let ((?x248 (ite $x106 (_ bv0 32) (_ bv1 32))))
 (let (($x309 (bvuge ?x248 (_ bv1 32))))
 (let (($x325 (= $x269 $x309)))
 (let (($x276 (= ?x260 (_ bv0 32))))
 (let (($x404 (=> $x276 $x15)))
 (let (($x345 (and (and (and (and (= ?x241 ?x124) (= $x276 (= ?x248 (_ bv0 32)))) $x404) $x325) $x291)))
 (let (($x351 (and (and (and (and (and $x345 $x268) $x336) $x25) $x398) $x349)))
 (let (($x395 (not true)))
 (let (($x352 (or $x395 $x351)))
 (let (($x242 (= true true)))
 (let (($x353 (and $x242 $x352)))
 (let (($x435 (= $x353 true)))
 (let (($x271 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x434 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x234 (= $x434 $x271)))
 (let (($x280 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x396 (= $x236 $x280)))
 (let (($x229 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x279 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x394 (= $x279 $x229)))
 (let (($x306 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x308 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x235 (= $x308 $x306)))
 (let (($x228 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x244 (and (and (and (and $x228 $x235) $x394) $x396) $x234)))
 (let (($x363 (= $x244 true)))
 (let (($x224 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x232 (=> $x224 $x15)))
 (let (($x305 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x230 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x307 (= $x230 $x305)))
 (let (($x288 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x284 (= $x224 $x288)))
 (let (($x359 (and (and $x284 $x307) $x232)))
 (let (($x227 (= $x359 true)))
 (let (($x322 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x231 (= $x230 $x322)))
 (let (($x5 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x56 (= $x224 $x5)))
 (let (($x214 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x68 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x355 (= $x68 $x214)))
 (let (($x433 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x42 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x215 (= $x42 $x433)))
 (let (($x222 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x218 (and (and (and (and $x222 $x215) $x355) $x56) $x231)))
 (let (($x226 (= $x218 true)))
 (let (($x209 (=> $x42 $x15)))
 (let (($x211 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x318 (= $x68 $x211)))
 (let (($x210 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x304 (= $x42 $x210)))
 (let (($x223 (and (and $x304 $x318) $x209)))
 (let (($x32 (= $x223 true)))
 (let (($x201 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x362 (=> $x201 $x15)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x198 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x101 (bvuge ?x198 (_ bv1 32))))
 (let (($x74 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x208 (= $x74 $x101)))
 (let (($x393 (= ?x198 (_ bv0 32))))
 (let (($x207 (= $x201 $x393)))
 (let (($x321 (and (and $x207 $x208) $x362)))
 (let (($x72 (= $x321 true)))
 (let ((?x206 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x202 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x18 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x205 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x36 (concat ?x205 (concat ?x18 (concat ?x202 ?x206)))))
 (let (($x203 (= ?x36 input.dst.llvm-%t)))
 (let (($x199 (= $x203 true)))
 (let (($x200 (= $x199 true)))
 (let (($x319 (= (bvand ?x124 (_ bv4294967280 32)) ?x124)))
 (let (($x100 (= (bvand ?x26 (_ bv4294967292 32)) ?x26)))
 (let (($x173 (and $x100 $x319)))
 (let (($x137 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x162 (and true $x137)))
 (let (($x169 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x26 (bvsub ?x26 (_ bv4 32))) (bvult ?x26 (bvsub ?x26 (_ bv4 32))))))
 (let (($x178 (and (and (and $x169 $x162) $x100) $x173)))
 (let (($x186 (= true $x178)))
 (let (($x31 (not $x23)))
 (let (($x300 (=> $x31 $x186)))
 (let (($x57 (= $x300 true)))
 (let (($x192 (= $x57 true)))
 (let (($x401 (= $x192 true)))
 (let (($x80 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x182 (and $x80 $x300)))
 (let (($x163 (not $x106)))
 (let (($x184 (=> $x163 $x186)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x150 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x165 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x17 (_ bv3 32))))
 (let ((?x298 (concat (select input.dst.llvm-mem ?x62) (concat ?x165 ?x150))))
 (let (($x316 (= (bvand ?x298 (_ bv4294967280 32)) ?x298)))
 (let (($x167 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x299 (and $x167 $x316)))
 (let (($x141 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv8 32))) (bvult ?x17 (bvsub ?x17 (_ bv8 32))))))
 (let (($x156 (and (and (and $x141 $x162) $x167) $x299)))
 (let (($x160 (= true $x156)))
 (let (($x161 (=> $x106 $x160)))
 (let (($x392 (and $x161 $x184)))
 (let (($x176 (= true $x392)))
 (let (($x151 (or $x106 $x163)))
 (let (($x317 (and $x31 $x151)))
 (let (($x181 (=> $x317 $x176)))
 (let (($x175 (and $x181 $x182)))
 (let (($x183 (= $x175 true)))
 (let (($x189 (= $x183 true)))
 (let (($x294 (= $x189 true)))
 (let (($x190 (= $x181 true)))
 (let (($x320 (= $x190 true)))
 (let (($x188 (= $x320 true)))
 (let (($x135 (and $x31 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x295 (= $x80 true)))
 (let (($x94 (= $x295 true)))
 (let (($x149 (= $x94 true)))
 (let ((?x132 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x95 (= (_ bv0 32) ?x132)))
 (let ((?x97 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x73 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x97)))
 (let (($x126 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x81 (and $x126 $x73)))
 (let (($x128 (and $x81 $x95)))
 (let (($x78 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x30 (and $x78 $x128)))
 (let (($x83 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x99 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x69 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x99 $x83)))))))
 (let (($x134 (and $x69 $x30)))
 (let (($x139 (= $x134 true)))
 (let (($x133 (= $x139 true)))
 (let (($x313 (= $x133 true)))
 (let (($x131 (and $x313 $x149)))
 (let (($x140 (and $x131 $x149)))
 (let (($x315 (and $x140 $x164)))
 (let (($x55 (and $x315 $x188)))
 (let (($x196 (and $x55 $x294)))
 (let (($x193 (and $x196 $x401)))
 (let (($x197 (and $x193 $x200)))
 (let (($x217 (and $x197 $x72)))
 (let (($x213 (and $x217 $x32)))
 (let (($x221 (and $x213 $x226)))
 (let (($x328 (and $x221 $x227)))
 (let (($x247 (and $x328 $x363)))
 (let (($x84 (and $x74 $x42)))
 (let (($x246 (and $x84 $x247)))
 (let (($x108 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x240 (and $x108 $x246)))
 (let (($x289 (and $x15 $x240)))
 (let (($x243 (and $x15 $x289)))
 (let (($x65 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x13 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x70 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x13 $x65)))))))
 (let (($x103 (and $x31 $x106)))
 (let (($x122 (=> (and $x103 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x13 $x65)))))))
 (let (($x12 (bvugt ?x26 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x64 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x96)))
 (let (($x120 (=> (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x64 $x12)))))))
 (let (($x93 (=> (and $x31 (bvule ?x26 (bvsub (bvadd ?x26 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x64 $x12)))))))
 (let (($x91 (and $x93 $x122)))
 (let (($x245 (and $x91 $x243)))
 (let (($x367 (=> $x245 $x435)))
 (not $x367)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var4409X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4288560114 32) (_ bv1 8)) (_ bv65540 32) (_ bv128 8)) (_ bv65541 32) (_ bv35 8)) (_ bv65542 32) (_ bv224 8)) (_ bv65543 32) (_ bv162 8)) (_ bv65544 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv65536 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4288560115 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2020202c)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x20)
              #x20202028
              #x25)
       #x20202027
       #x1b))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x20202020)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2020202c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2020202f)
  (define-fun input.ind-%var4409X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 15
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4409X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x788 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x786 (concat ?x788 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv8 32))))))
 (let ((?x792 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x797 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x798 (concat ?x797 (concat ?x792 ?x786))))
 (let (($x799 (= ?x798 ?x798)))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x325 (concat ?x309 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x277 (concat ?x265 (concat ?x255 ?x325))))
 (let (($x364 (= (_ bv0 32) ?x277)))
 (let ((?x256 (ite $x364 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x256 (_ bv1 32))))
 (let (($x800 (=> $x345 $x799)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x9 (concat ?x16 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x43 (bvadd ?x85 (_ bv3 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem ?x43) (concat ?x39 ?x9))))
 (let ((?x769 (bvadd ?x103 (_ bv4 32))))
 (let ((?x772 (concat (select input.dst.llvm-mem (bvadd ?x769 (_ bv1 32))) (select input.dst.llvm-mem ?x769))))
 (let ((?x775 (concat (select input.dst.llvm-mem (bvadd ?x769 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x769 (_ bv2 32))) ?x772))))
 (let (($x773 (= (_ bv0 32) ?x775)))
 (let ((?x776 (ite $x773 (_ bv0 32) (_ bv1 32))))
 (let (($x785 (bvuge ?x776 (_ bv1 32))))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x277 (_ bv4 32))))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv2 32))) ?x51)))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv3 32))) ?x113)))
 (let (($x89 (= (_ bv0 32) ?x360)))
 (let ((?x180 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x180 (_ bv1 32))))
 (let (($x793 (= $x329 $x785)))
 (let (($x794 (=> $x345 $x793)))
 (let (($x108 (= false false)))
 (let (($x333 (= ?x180 (_ bv0 32))))
 (let (($x784 (and $x345 $x333)))
 (let (($x810 (=> $x784 $x108)))
 (let (($x779 (= ?x776 (_ bv0 32))))
 (let (($x782 (= $x333 $x779)))
 (let (($x783 (=> $x345 $x782)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x767 (concat ?x77 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv4 32))))))
 (let ((?x764 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x762 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x760 (concat ?x762 (concat ?x764 ?x767))))
 (let (($x763 (= ?x760 ?x760)))
 (let (($x766 (=> $x345 $x763)))
 (let ((?x758 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4409X))))
 (let ((?x751 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv2 32))) ?x758)))
 (let ((?x753 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv3 32))) ?x751)))
 (let (($x756 (= ?x753 ?x753)))
 (let (($x759 (=> $x345 $x756)))
 (let (($x129 (= (_ bv0 32) ?x103)))
 (let ((?x745 (ite $x129 (_ bv0 32) (_ bv1 32))))
 (let (($x806 (bvuge ?x745 (_ bv1 32))))
 (let (($x747 (= $x345 $x806)))
 (let (($x251 (= ?x256 (_ bv0 32))))
 (let (($x746 (=> $x251 $x108)))
 (let (($x803 (and (and (and (and (= ?x277 ?x103) (= $x251 (= ?x745 (_ bv0 32)))) $x746) $x747) $x759)))
 (let (($x816 (and (and (and (and (and $x803 $x766) $x783) $x810) $x794) $x800)))
 (let (($x720 (not true)))
 (let (($x817 (or $x720 $x816)))
 (let (($x804 (= true true)))
 (let (($x88 (and $x804 $x817)))
 (let (($x121 (= $x88 true)))
 (let (($x732 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x482 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x708 (= $x482 $x732)))
 (let (($x260 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x688 (=> $x260 $x708)))
 (let (($x467 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x707 (and $x260 $x467)))
 (let (($x687 (=> $x707 $x108)))
 (let (($x684 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x685 (= $x467 $x684)))
 (let (($x686 (=> $x260 $x685)))
 (let (($x682 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x466 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x683 (= $x466 $x682)))
 (let (($x706 (=> $x260 $x683)))
 (let (($x476 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x739 (and $x260 $x476)))
 (let (($x681 (=> $x739 $x108)))
 (let (($x680 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x705 (= $x476 $x680)))
 (let (($x730 (=> $x260 $x705)))
 (let (($x704 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x729 (=> $x260 $x704)))
 (let (($x243 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x677 (=> $x243 $x108)))
 (let (($x675 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x411 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x676 (= $x411 $x675)))
 (let (($x363 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x703 (=> $x363 $x676)))
 (let (($x390 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x674 (and $x363 $x390)))
 (let (($x728 (=> $x674 $x108)))
 (let (($x672 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x673 (= $x390 $x672)))
 (let (($x738 (=> $x363 $x673)))
 (let (($x726 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x439 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x671 (= $x439 $x726)))
 (let (($x702 (=> $x363 $x671)))
 (let (($x515 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x670 (and $x363 $x515)))
 (let (($x701 (=> $x670 $x108)))
 (let (($x668 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x725 (= $x515 $x668)))
 (let (($x669 (=> $x363 $x725)))
 (let (($x34 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x111 (=> $x363 $x34)))
 (let (($x306 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x700 (=> $x306 $x108)))
 (let (($x699 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x19 (= $x260 $x699)))
 (let (($x723 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x667 (= $x243 $x723)))
 (let (($x665 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x666 (= $x363 $x665)))
 (let (($x697 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x664 (= $x306 $x697)))
 (let (($x662 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x692 (and (and (and (and (and (and $x662 $x664) $x666) $x667) $x19) $x700) $x111)))
 (let (($x694 (and (and (and (and (and (and $x692 $x669) $x701) $x702) $x738) $x728) $x703)))
 (let (($x713 (and (and (and (and (and (and $x694 $x677) $x729) $x730) $x681) $x706) $x686)))
 (let (($x742 (and (and $x713 $x687) $x688)))
 (let (($x715 (= $x742 true)))
 (let (($x599 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x614 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x631 (= $x614 $x599)))
 (let (($x400 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x589 (and $x291 $x400)))
 (let (($x600 (=> $x589 $x631)))
 (let (($x597 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x596 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x598 (= $x596 $x597)))
 (let (($x641 (=> $x589 $x598)))
 (let (($x594 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x593 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x640 (= $x593 $x594)))
 (let (($x656 (=> $x589 $x640)))
 (let (($x647 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x591 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x652 (= $x591 $x647)))
 (let (($x592 (=> $x589 $x652)))
 (let (($x655 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x613 (=> $x589 $x655)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x646 (= $x400 $x588)))
 (let (($x637 (=> $x291 $x646)))
 (let (($x177 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x539 (and $x291 $x177)))
 (let (($x504 (=> $x539 $x108)))
 (let (($x587 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x627 (= $x177 $x587)))
 (let (($x628 (=> $x291 $x627)))
 (let (($x585 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x626 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x636 (= $x626 $x585)))
 (let (($x48 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x634 (and $x291 $x48)))
 (let (($x586 (=> $x634 $x636)))
 (let (($x654 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x582 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x635 (= $x582 $x654)))
 (let (($x584 (=> $x634 $x635)))
 (let (($x580 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x579 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x611 (= $x579 $x580)))
 (let (($x581 (=> $x634 $x611)))
 (let (($x576 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x610 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x577 (= $x610 $x576)))
 (let (($x578 (=> $x634 $x577)))
 (let (($x555 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x556 (=> $x634 $x555)))
 (let (($x552 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x553 (= $x48 $x552)))
 (let (($x575 (=> $x291 $x553)))
 (let (($x301 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x572 (and $x291 $x301)))
 (let (($x500 (=> $x572 $x108)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x609 (= $x301 $x551)))
 (let (($x645 (=> $x291 $x609)))
 (let (($x623 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x549 (=> $x291 $x623)))
 (let (($x471 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x561 (=> $x471 $x108)))
 (let (($x574 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x548 (= $x291 $x574)))
 (let (($x608 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x547 (= $x471 $x608)))
 (let (($x643 (and (and (and (and (and (and $x547 $x548) $x561) $x549) $x645) $x500) $x575)))
 (let (($x607 (and (and (and (and (and (and $x643 $x556) $x578) $x581) $x584) $x586) $x628)))
 (let (($x618 (and (and (and (and (and (and $x607 $x504) $x637) $x613) $x592) $x656) $x641)))
 (let (($x659 (and $x618 $x600)))
 (let (($x660 (= $x659 true)))
 (let (($x505 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x649 (= $x400 $x505)))
 (let (($x528 (=> $x291 $x649)))
 (let (($x502 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x503 (= $x177 $x502)))
 (let (($x527 (=> $x291 $x503)))
 (let (($x526 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x563 (= $x48 $x526)))
 (let (($x538 (=> $x291 $x563)))
 (let (($x498 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x620 (= $x301 $x498)))
 (let (($x499 (=> $x291 $x620)))
 (let (($x619 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x562 (=> $x291 $x619)))
 (let (($x496 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x497 (= $x260 $x496)))
 (let (($x218 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x525 (=> $x218 $x497)))
 (let (($x417 (and $x218 $x243)))
 (let (($x516 (=> $x417 $x108)))
 (let (($x494 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x495 (= $x243 $x494)))
 (let (($x536 (=> $x218 $x495)))
 (let (($x560 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x534 (= $x363 $x560)))
 (let (($x535 (=> $x218 $x534)))
 (let (($x473 (and $x218 $x306)))
 (let (($x455 (=> $x473 $x108)))
 (let (($x523 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x492 (= $x306 $x523)))
 (let (($x493 (=> $x218 $x492)))
 (let (($x522 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x491 (=> $x218 $x522)))
 (let (($x52 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x374 (=> $x52 $x108)))
 (let (($x532 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x571 (= $x291 $x532)))
 (let (($x490 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x558 (= $x471 $x490)))
 (let (($x521 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x567 (= $x218 $x521)))
 (let (($x512 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x489 (= $x52 $x512)))
 (let (($x487 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x508 (and (and (and (and (and (and $x487 $x489) $x567) $x558) $x571) $x374) $x491)))
 (let (($x510 (and (and (and (and (and (and $x508 $x493) $x455) $x535) $x536) $x516) $x525)))
 (let (($x573 (and (and (and (and (and (and $x510 $x561) $x562) $x499) $x500) $x538) $x527)))
 (let (($x545 (and (and $x573 $x504) $x528)))
 (let (($x650 (= $x545 true)))
 (let (($x426 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x427 (= $x482 $x426)))
 (let (($x419 (and $x218 $x260)))
 (let (($x446 (=> $x419 $x427)))
 (let (($x468 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x425 (= $x467 $x468)))
 (let (($x477 (=> $x419 $x425)))
 (let (($x423 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x444 (= $x466 $x423)))
 (let (($x517 (=> $x419 $x444)))
 (let (($x460 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x422 (= $x476 $x460)))
 (let (($x443 (=> $x419 $x422)))
 (let (($x465 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x459 (=> $x419 $x465)))
 (let (($x464 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x475 (= $x260 $x464)))
 (let (($x418 (=> $x218 $x475)))
 (let (($x441 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x415 (= $x243 $x441)))
 (let (($x416 (=> $x218 $x415)))
 (let (($x412 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x413 (= $x411 $x412)))
 (let (($x456 (and $x218 $x363)))
 (let (($x414 (=> $x456 $x413)))
 (let (($x458 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x391 (= $x390 $x458)))
 (let (($x410 (=> $x456 $x391)))
 (let (($x409 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x457 (= $x439 $x409)))
 (let (($x388 (=> $x456 $x457)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x386 (= $x515 $x385)))
 (let (($x387 (=> $x456 $x386)))
 (let (($x474 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x382 (=> $x456 $x474)))
 (let (($x378 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x363 $x378)))
 (let (($x380 (=> $x218 $x379)))
 (let (($x377 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x480 (= $x306 $x377)))
 (let (($x407 (=> $x218 $x480)))
 (let (($x375 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x438 (=> $x218 $x375)))
 (let (($x373 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x437 (= $x218 $x373)))
 (let (($x372 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x454 (= $x52 $x372)))
 (let (($x449 (and (and (and (and (and (and $x454 $x437) $x374) $x438) $x407) $x455) $x380)))
 (let (($x452 (and (and (and (and (and (and $x449 $x382) $x387) $x388) $x410) $x414) $x416)))
 (let (($x484 (and (and (and (and (and (and $x452 $x516) $x418) $x459) $x443) $x517) $x477)))
 (let (($x485 (and $x484 $x446)))
 (let (($x520 (= $x485 true)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x277 (_ bv8 32))))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv8 32)) (_ bv2 32))) ?x348)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv8 32)) (_ bv3 32))) ?x405)))
 (let (($x398 (= (_ bv0 32) ?x340)))
 (let ((?x432 (ite $x398 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x432 (_ bv1 32))))
 (let (($x337 (= $x400 $x403)))
 (let (($x84 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x263 (and $x84 $x291)))
 (let (($x339 (=> $x263 $x337)))
 (let (($x185 (= ?x432 (_ bv0 32))))
 (let (($x343 (= $x177 $x185)))
 (let (($x431 (=> $x263 $x343)))
 (let (($x312 (= $x48 $x329)))
 (let (($x6 (=> $x263 $x312)))
 (let (($x90 (= $x301 $x333)))
 (let (($x117 (=> $x263 $x90)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x253))))
 (let (($x310 (= input.spec-%var-t-0.2.2.2.0 ?x347)))
 (let (($x92 (=> $x263 $x310)))
 (let (($x270 (= $x291 $x345)))
 (let (($x365 (=> $x84 $x270)))
 (let (($x292 (and $x84 $x471)))
 (let (($x275 (=> $x292 $x108)))
 (let (($x326 (= $x471 $x251)))
 (let (($x267 (=> $x84 $x326)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x215 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x355 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x356 (concat ?x224 (concat ?x355 ?x220))))
 (let ((?x245 (bvadd ?x356 (_ bv8 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x238))))
 (let (($x252 (= (_ bv0 32) ?x286)))
 (let ((?x239 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (bvuge ?x239 (_ bv1 32))))
 (let (($x248 (= $x260 $x276)))
 (let (($x288 (and $x84 $x218)))
 (let (($x254 (=> $x288 $x248)))
 (let (($x241 (= ?x239 (_ bv0 32))))
 (let (($x257 (= $x243 $x241)))
 (let (($x250 (=> $x288 $x257)))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x356 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x356 (_ bv4 32))))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x356 (_ bv4 32)) (_ bv2 32))) ?x394)))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x356 (_ bv4 32)) (_ bv3 32))) ?x236)))
 (let (($x285 (= (_ bv0 32) ?x396)))
 (let ((?x434 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x434 (_ bv1 32))))
 (let (($x246 (= $x363 $x247)))
 (let (($x240 (=> $x288 $x246)))
 (let (($x271 (= ?x434 (_ bv0 32))))
 (let (($x234 (= $x306 $x271)))
 (let (($x244 (=> $x288 $x234)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv1 32))) (select input.dst.llvm-mem ?x356))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv2 32))) ?x232))))
 (let (($x397 (= input.spec-%var-t-0.2.1.2.0 ?x228)))
 (let (($x308 (=> $x288 $x397)))
 (let (($x5 (= (_ bv0 32) ?x356)))
 (let ((?x56 (ite $x5 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (bvuge ?x56 (_ bv1 32))))
 (let (($x221 (= $x218 $x226)))
 (let (($x287 (=> $x84 $x221)))
 (let (($x50 (and $x84 $x52)))
 (let (($x231 (=> $x50 $x108)))
 (let (($x219 (= ?x56 (_ bv0 32))))
 (let (($x230 (= $x52 $x219)))
 (let (($x322 (=> $x84 $x230)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x68)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x303)))
 (let (($x213 (= input.spec-%var-t-0.2.0 ?x32)))
 (let (($x105 (=> $x84 $x213)))
 (let (($x208 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x217 (=> $x208 $x108)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x53 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (bvuge ?x53 (_ bv1 32))))
 (let (($x72 (= $x84 $x321)))
 (let (($x15 (= ?x53 (_ bv0 32))))
 (let (($x362 (= $x208 $x15)))
 (let (($x349 (and (and (and (and (and (and $x362 $x72) $x217) $x105) $x322) $x231) $x287)))
 (let (($x368 (and (and (and (and (and (and $x349 $x308) $x244) $x240) $x250) $x254) $x267)))
 (let (($x370 (and (and (and (and (and (and $x368 $x275) $x365) $x92) $x117) $x6) $x431)))
 (let (($x436 (and $x370 $x339)))
 (let (($x371 (= $x436 true)))
 (let ((?x202 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x204 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x197 (concat ?x203 (concat ?x204 ?x202)))))
 (let (($x198 (= ?x201 input.dst.llvm-%t)))
 (let (($x393 (= $x198 true)))
 (let (($x207 (= $x393 true)))
 (let (($x178 (= (bvand ?x103 (_ bv4294967280 32)) ?x103)))
 (let (($x319 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x186 (and $x319 $x178)))
 (let (($x157 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x167 (and true $x157)))
 (let (($x174 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x176 (and (and (and $x174 $x167) $x319) $x186)))
 (let (($x181 (= true $x176)))
 (let (($x31 (not $x23)))
 (let (($x189 (=> $x31 $x181)))
 (let (($x354 (= $x189 true)))
 (let (($x205 (= $x354 true)))
 (let (($x302 (= $x205 true)))
 (let (($x131 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x294 (and $x131 $x189)))
 (let (($x164 (not $x129)))
 (let (($x190 (=> $x164 $x181)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x143 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x28 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x60 (_ bv3 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem ?x45) (concat ?x28 ?x143))))
 (let (($x156 (= (bvand ?x316 (_ bv4294967280 32)) ?x316)))
 (let (($x146 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x160 (and $x146 $x156)))
 (let (($x297 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv8 32))) (bvult ?x60 (bvsub ?x60 (_ bv8 32))))))
 (let (($x49 (and (and (and $x297 $x167) $x146) $x160)))
 (let (($x171 (= true $x49)))
 (let (($x8 (=> $x129 $x171)))
 (let (($x320 (and $x8 $x190)))
 (let (($x188 (= true $x320)))
 (let (($x138 (or $x129 $x164)))
 (let (($x296 (and $x31 $x138)))
 (let (($x55 (=> $x296 $x188)))
 (let (($x196 (and $x55 $x294)))
 (let (($x57 (= $x196 true)))
 (let (($x192 (= $x57 true)))
 (let (($x401 (= $x192 true)))
 (let (($x300 (= $x55 true)))
 (let (($x182 (= $x300 true)))
 (let (($x175 (= $x182 true)))
 (let (($x315 (and $x31 $x164)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x148 (= $x317 true)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x134)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x95)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x132 $x128)))
 (let (($x133 (and $x30 $x139)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x313 (and $x83 $x133)))
 (let (($x69 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x69)))))))
 (let (($x314 (and $x81 $x313)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let (($x295 (= $x80 true)))
 (let (($x144 (and $x295 $x135)))
 (let (($x147 (and $x144 $x135)))
 (let (($x154 (and $x147 $x148)))
 (let (($x183 (and $x154 $x175)))
 (let (($x193 (and $x183 $x401)))
 (let (($x18 (and $x193 $x302)))
 (let (($x101 (and $x18 $x207)))
 (let (($x406 (and $x101 $x371)))
 (let (($x486 (and $x406 $x520)))
 (let (($x546 (and $x486 $x650)))
 (let (($x661 (and $x546 $x660)))
 (let (($x716 (and $x661 $x715)))
 (let (($x743 (and $x50 $x716)))
 (let (($x130 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x717 (and $x130 $x743)))
 (let (($x718 (and $x108 $x717)))
 (let (($x744 (and $x108 $x718)))
 (let (($x44 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x20 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x7 $x44)))))))
 (let (($x17 (and $x31 $x129)))
 (let (($x47 (=> (and $x17 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x7 $x44)))))))
 (let (($x59 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x43)))
 (let (($x37 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x123 $x59)))))))
 (let (($x75 (=> (and $x31 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x123 $x59)))))))
 (let (($x62 (and $x75 $x47)))
 (let (($x719 (and $x62 $x744)))
 (let (($x41 (=> $x719 $x121)))
 (not $x41))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4409X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x788 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x786 (concat ?x788 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv8 32))))))
 (let ((?x792 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x797 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x798 (concat ?x797 (concat ?x792 ?x786))))
 (let (($x799 (= ?x798 ?x798)))
 (let ((?x309 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x325 (concat ?x309 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x265 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x277 (concat ?x265 (concat ?x255 ?x325))))
 (let (($x364 (= (_ bv0 32) ?x277)))
 (let ((?x256 (ite $x364 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x256 (_ bv1 32))))
 (let (($x800 (=> $x345 $x799)))
 (let ((?x16 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x9 (concat ?x16 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x85 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x43 (bvadd ?x85 (_ bv3 32))))
 (let ((?x103 (concat (select input.dst.llvm-mem ?x43) (concat ?x39 ?x9))))
 (let ((?x769 (bvadd ?x103 (_ bv4 32))))
 (let ((?x772 (concat (select input.dst.llvm-mem (bvadd ?x769 (_ bv1 32))) (select input.dst.llvm-mem ?x769))))
 (let ((?x775 (concat (select input.dst.llvm-mem (bvadd ?x769 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x769 (_ bv2 32))) ?x772))))
 (let (($x773 (= (_ bv0 32) ?x775)))
 (let ((?x776 (ite $x773 (_ bv0 32) (_ bv1 32))))
 (let (($x785 (bvuge ?x776 (_ bv1 32))))
 (let ((?x51 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x277 (_ bv4 32))))))
 (let ((?x113 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv2 32))) ?x51)))
 (let ((?x360 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv4 32)) (_ bv3 32))) ?x113)))
 (let (($x89 (= (_ bv0 32) ?x360)))
 (let ((?x180 (ite $x89 (_ bv0 32) (_ bv1 32))))
 (let (($x329 (bvuge ?x180 (_ bv1 32))))
 (let (($x793 (= $x329 $x785)))
 (let (($x794 (=> $x345 $x793)))
 (let (($x108 (= false false)))
 (let (($x333 (= ?x180 (_ bv0 32))))
 (let (($x784 (and $x345 $x333)))
 (let (($x810 (=> $x784 $x108)))
 (let (($x779 (= ?x776 (_ bv0 32))))
 (let (($x782 (= $x333 $x779)))
 (let (($x783 (=> $x345 $x782)))
 (let ((?x77 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x767 (concat ?x77 (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv4 32))))))
 (let ((?x764 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x762 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4409X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x760 (concat ?x762 (concat ?x764 ?x767))))
 (let (($x763 (= ?x760 ?x760)))
 (let (($x766 (=> $x345 $x763)))
 (let ((?x758 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4409X))))
 (let ((?x751 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv2 32))) ?x758)))
 (let ((?x753 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4409X (_ bv3 32))) ?x751)))
 (let (($x756 (= ?x753 ?x753)))
 (let (($x759 (=> $x345 $x756)))
 (let (($x129 (= (_ bv0 32) ?x103)))
 (let ((?x745 (ite $x129 (_ bv0 32) (_ bv1 32))))
 (let (($x806 (bvuge ?x745 (_ bv1 32))))
 (let (($x747 (= $x345 $x806)))
 (let (($x251 (= ?x256 (_ bv0 32))))
 (let (($x746 (=> $x251 $x108)))
 (let (($x803 (and (and (and (and (= ?x277 ?x103) (= $x251 (= ?x745 (_ bv0 32)))) $x746) $x747) $x759)))
 (let (($x816 (and (and (and (and (and $x803 $x766) $x783) $x810) $x794) $x800)))
 (let (($x720 (not true)))
 (let (($x817 (or $x720 $x816)))
 (let (($x804 (= true true)))
 (let (($x88 (and $x804 $x817)))
 (let (($x121 (= $x88 true)))
 (let (($x732 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x482 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x708 (= $x482 $x732)))
 (let (($x260 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x688 (=> $x260 $x708)))
 (let (($x467 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x707 (and $x260 $x467)))
 (let (($x687 (=> $x707 $x108)))
 (let (($x684 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x685 (= $x467 $x684)))
 (let (($x686 (=> $x260 $x685)))
 (let (($x682 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x466 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x683 (= $x466 $x682)))
 (let (($x706 (=> $x260 $x683)))
 (let (($x476 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x739 (and $x260 $x476)))
 (let (($x681 (=> $x739 $x108)))
 (let (($x680 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x705 (= $x476 $x680)))
 (let (($x730 (=> $x260 $x705)))
 (let (($x704 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x729 (=> $x260 $x704)))
 (let (($x243 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x677 (=> $x243 $x108)))
 (let (($x675 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x411 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x676 (= $x411 $x675)))
 (let (($x363 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x703 (=> $x363 $x676)))
 (let (($x390 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x674 (and $x363 $x390)))
 (let (($x728 (=> $x674 $x108)))
 (let (($x672 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x673 (= $x390 $x672)))
 (let (($x738 (=> $x363 $x673)))
 (let (($x726 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x439 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x671 (= $x439 $x726)))
 (let (($x702 (=> $x363 $x671)))
 (let (($x515 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x670 (and $x363 $x515)))
 (let (($x701 (=> $x670 $x108)))
 (let (($x668 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x725 (= $x515 $x668)))
 (let (($x669 (=> $x363 $x725)))
 (let (($x34 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x111 (=> $x363 $x34)))
 (let (($x306 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x700 (=> $x306 $x108)))
 (let (($x699 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x19 (= $x260 $x699)))
 (let (($x723 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x667 (= $x243 $x723)))
 (let (($x665 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x666 (= $x363 $x665)))
 (let (($x697 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x664 (= $x306 $x697)))
 (let (($x662 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x692 (and (and (and (and (and (and $x662 $x664) $x666) $x667) $x19) $x700) $x111)))
 (let (($x694 (and (and (and (and (and (and $x692 $x669) $x701) $x702) $x738) $x728) $x703)))
 (let (($x713 (and (and (and (and (and (and $x694 $x677) $x729) $x730) $x681) $x706) $x686)))
 (let (($x742 (and (and $x713 $x687) $x688)))
 (let (($x715 (= $x742 true)))
 (let (($x599 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x614 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x631 (= $x614 $x599)))
 (let (($x400 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x589 (and $x291 $x400)))
 (let (($x600 (=> $x589 $x631)))
 (let (($x597 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x596 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x598 (= $x596 $x597)))
 (let (($x641 (=> $x589 $x598)))
 (let (($x594 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x593 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x640 (= $x593 $x594)))
 (let (($x656 (=> $x589 $x640)))
 (let (($x647 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x591 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x652 (= $x591 $x647)))
 (let (($x592 (=> $x589 $x652)))
 (let (($x655 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x613 (=> $x589 $x655)))
 (let (($x588 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x646 (= $x400 $x588)))
 (let (($x637 (=> $x291 $x646)))
 (let (($x177 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x539 (and $x291 $x177)))
 (let (($x504 (=> $x539 $x108)))
 (let (($x587 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x627 (= $x177 $x587)))
 (let (($x628 (=> $x291 $x627)))
 (let (($x585 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x626 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x636 (= $x626 $x585)))
 (let (($x48 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x634 (and $x291 $x48)))
 (let (($x586 (=> $x634 $x636)))
 (let (($x654 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x582 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x635 (= $x582 $x654)))
 (let (($x584 (=> $x634 $x635)))
 (let (($x580 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x579 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x611 (= $x579 $x580)))
 (let (($x581 (=> $x634 $x611)))
 (let (($x576 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x610 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x577 (= $x610 $x576)))
 (let (($x578 (=> $x634 $x577)))
 (let (($x555 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x556 (=> $x634 $x555)))
 (let (($x552 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x553 (= $x48 $x552)))
 (let (($x575 (=> $x291 $x553)))
 (let (($x301 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x572 (and $x291 $x301)))
 (let (($x500 (=> $x572 $x108)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x609 (= $x301 $x551)))
 (let (($x645 (=> $x291 $x609)))
 (let (($x623 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x549 (=> $x291 $x623)))
 (let (($x471 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x561 (=> $x471 $x108)))
 (let (($x574 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x548 (= $x291 $x574)))
 (let (($x608 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x547 (= $x471 $x608)))
 (let (($x643 (and (and (and (and (and (and $x547 $x548) $x561) $x549) $x645) $x500) $x575)))
 (let (($x607 (and (and (and (and (and (and $x643 $x556) $x578) $x581) $x584) $x586) $x628)))
 (let (($x618 (and (and (and (and (and (and $x607 $x504) $x637) $x613) $x592) $x656) $x641)))
 (let (($x659 (and $x618 $x600)))
 (let (($x660 (= $x659 true)))
 (let (($x505 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x649 (= $x400 $x505)))
 (let (($x528 (=> $x291 $x649)))
 (let (($x502 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x503 (= $x177 $x502)))
 (let (($x527 (=> $x291 $x503)))
 (let (($x526 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x563 (= $x48 $x526)))
 (let (($x538 (=> $x291 $x563)))
 (let (($x498 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x620 (= $x301 $x498)))
 (let (($x499 (=> $x291 $x620)))
 (let (($x619 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x562 (=> $x291 $x619)))
 (let (($x496 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x497 (= $x260 $x496)))
 (let (($x218 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x525 (=> $x218 $x497)))
 (let (($x417 (and $x218 $x243)))
 (let (($x516 (=> $x417 $x108)))
 (let (($x494 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x495 (= $x243 $x494)))
 (let (($x536 (=> $x218 $x495)))
 (let (($x560 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x534 (= $x363 $x560)))
 (let (($x535 (=> $x218 $x534)))
 (let (($x473 (and $x218 $x306)))
 (let (($x455 (=> $x473 $x108)))
 (let (($x523 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x492 (= $x306 $x523)))
 (let (($x493 (=> $x218 $x492)))
 (let (($x522 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x491 (=> $x218 $x522)))
 (let (($x52 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x374 (=> $x52 $x108)))
 (let (($x532 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x571 (= $x291 $x532)))
 (let (($x490 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x558 (= $x471 $x490)))
 (let (($x521 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x567 (= $x218 $x521)))
 (let (($x512 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x489 (= $x52 $x512)))
 (let (($x487 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x508 (and (and (and (and (and (and $x487 $x489) $x567) $x558) $x571) $x374) $x491)))
 (let (($x510 (and (and (and (and (and (and $x508 $x493) $x455) $x535) $x536) $x516) $x525)))
 (let (($x573 (and (and (and (and (and (and $x510 $x561) $x562) $x499) $x500) $x538) $x527)))
 (let (($x545 (and (and $x573 $x504) $x528)))
 (let (($x650 (= $x545 true)))
 (let (($x426 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x427 (= $x482 $x426)))
 (let (($x419 (and $x218 $x260)))
 (let (($x446 (=> $x419 $x427)))
 (let (($x468 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x425 (= $x467 $x468)))
 (let (($x477 (=> $x419 $x425)))
 (let (($x423 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x444 (= $x466 $x423)))
 (let (($x517 (=> $x419 $x444)))
 (let (($x460 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x422 (= $x476 $x460)))
 (let (($x443 (=> $x419 $x422)))
 (let (($x465 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x459 (=> $x419 $x465)))
 (let (($x464 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x475 (= $x260 $x464)))
 (let (($x418 (=> $x218 $x475)))
 (let (($x441 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x415 (= $x243 $x441)))
 (let (($x416 (=> $x218 $x415)))
 (let (($x412 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x413 (= $x411 $x412)))
 (let (($x456 (and $x218 $x363)))
 (let (($x414 (=> $x456 $x413)))
 (let (($x458 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x391 (= $x390 $x458)))
 (let (($x410 (=> $x456 $x391)))
 (let (($x409 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x457 (= $x439 $x409)))
 (let (($x388 (=> $x456 $x457)))
 (let (($x385 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x386 (= $x515 $x385)))
 (let (($x387 (=> $x456 $x386)))
 (let (($x474 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x382 (=> $x456 $x474)))
 (let (($x378 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x379 (= $x363 $x378)))
 (let (($x380 (=> $x218 $x379)))
 (let (($x377 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x480 (= $x306 $x377)))
 (let (($x407 (=> $x218 $x480)))
 (let (($x375 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x438 (=> $x218 $x375)))
 (let (($x373 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x437 (= $x218 $x373)))
 (let (($x372 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x454 (= $x52 $x372)))
 (let (($x449 (and (and (and (and (and (and $x454 $x437) $x374) $x438) $x407) $x455) $x380)))
 (let (($x452 (and (and (and (and (and (and $x449 $x382) $x387) $x388) $x410) $x414) $x416)))
 (let (($x484 (and (and (and (and (and (and $x452 $x516) $x418) $x459) $x443) $x517) $x477)))
 (let (($x485 (and $x484 $x446)))
 (let (($x520 (= $x485 true)))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x277 (_ bv8 32))))))
 (let ((?x405 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv8 32)) (_ bv2 32))) ?x348)))
 (let ((?x340 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x277 (_ bv8 32)) (_ bv3 32))) ?x405)))
 (let (($x398 (= (_ bv0 32) ?x340)))
 (let ((?x432 (ite $x398 (_ bv0 32) (_ bv1 32))))
 (let (($x403 (bvuge ?x432 (_ bv1 32))))
 (let (($x337 (= $x400 $x403)))
 (let (($x84 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x263 (and $x84 $x291)))
 (let (($x339 (=> $x263 $x337)))
 (let (($x185 (= ?x432 (_ bv0 32))))
 (let (($x343 (= $x177 $x185)))
 (let (($x431 (=> $x263 $x343)))
 (let (($x312 (= $x48 $x329)))
 (let (($x6 (=> $x263 $x312)))
 (let (($x90 (= $x301 $x333)))
 (let (($x117 (=> $x263 $x90)))
 (let ((?x253 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv1 32))) (select input.dst.llvm-mem ?x277))))
 (let ((?x347 (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x277 (_ bv2 32))) ?x253))))
 (let (($x310 (= input.spec-%var-t-0.2.2.2.0 ?x347)))
 (let (($x92 (=> $x263 $x310)))
 (let (($x270 (= $x291 $x345)))
 (let (($x365 (=> $x84 $x270)))
 (let (($x292 (and $x84 $x471)))
 (let (($x275 (=> $x292 $x108)))
 (let (($x326 (= $x471 $x251)))
 (let (($x267 (=> $x84 $x326)))
 (let ((?x215 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x220 (concat ?x215 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x355 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x356 (concat ?x224 (concat ?x355 ?x220))))
 (let ((?x245 (bvadd ?x356 (_ bv8 32))))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x238))))
 (let (($x252 (= (_ bv0 32) ?x286)))
 (let ((?x239 (ite $x252 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (bvuge ?x239 (_ bv1 32))))
 (let (($x248 (= $x260 $x276)))
 (let (($x288 (and $x84 $x218)))
 (let (($x254 (=> $x288 $x248)))
 (let (($x241 (= ?x239 (_ bv0 32))))
 (let (($x257 (= $x243 $x241)))
 (let (($x250 (=> $x288 $x257)))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x356 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x356 (_ bv4 32))))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x356 (_ bv4 32)) (_ bv2 32))) ?x394)))
 (let ((?x396 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x356 (_ bv4 32)) (_ bv3 32))) ?x236)))
 (let (($x285 (= (_ bv0 32) ?x396)))
 (let ((?x434 (ite $x285 (_ bv0 32) (_ bv1 32))))
 (let (($x247 (bvuge ?x434 (_ bv1 32))))
 (let (($x246 (= $x363 $x247)))
 (let (($x240 (=> $x288 $x246)))
 (let (($x271 (= ?x434 (_ bv0 32))))
 (let (($x234 (= $x306 $x271)))
 (let (($x244 (=> $x288 $x234)))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv1 32))) (select input.dst.llvm-mem ?x356))))
 (let ((?x228 (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x356 (_ bv2 32))) ?x232))))
 (let (($x397 (= input.spec-%var-t-0.2.1.2.0 ?x228)))
 (let (($x308 (=> $x288 $x397)))
 (let (($x5 (= (_ bv0 32) ?x356)))
 (let ((?x56 (ite $x5 (_ bv0 32) (_ bv1 32))))
 (let (($x226 (bvuge ?x56 (_ bv1 32))))
 (let (($x221 (= $x218 $x226)))
 (let (($x287 (=> $x84 $x221)))
 (let (($x50 (and $x84 $x52)))
 (let (($x231 (=> $x50 $x108)))
 (let (($x219 (= ?x56 (_ bv0 32))))
 (let (($x230 (= $x52 $x219)))
 (let (($x322 (=> $x84 $x230)))
 (let ((?x68 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x303 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x68)))
 (let ((?x32 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x303)))
 (let (($x213 (= input.spec-%var-t-0.2.0 ?x32)))
 (let (($x105 (=> $x84 $x213)))
 (let (($x208 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x217 (=> $x208 $x108)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x53 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x321 (bvuge ?x53 (_ bv1 32))))
 (let (($x72 (= $x84 $x321)))
 (let (($x15 (= ?x53 (_ bv0 32))))
 (let (($x362 (= $x208 $x15)))
 (let (($x349 (and (and (and (and (and (and $x362 $x72) $x217) $x105) $x322) $x231) $x287)))
 (let (($x368 (and (and (and (and (and (and $x349 $x308) $x244) $x240) $x250) $x254) $x267)))
 (let (($x370 (and (and (and (and (and (and $x368 $x275) $x365) $x92) $x117) $x6) $x431)))
 (let (($x436 (and $x370 $x339)))
 (let (($x371 (= $x436 true)))
 (let ((?x202 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x204 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x203 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x197 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x201 (concat ?x197 (concat ?x203 (concat ?x204 ?x202)))))
 (let (($x198 (= ?x201 input.dst.llvm-%t)))
 (let (($x393 (= $x198 true)))
 (let (($x207 (= $x393 true)))
 (let (($x178 (= (bvand ?x103 (_ bv4294967280 32)) ?x103)))
 (let (($x319 (= (bvand ?x85 (_ bv4294967292 32)) ?x85)))
 (let (($x186 (and $x319 $x178)))
 (let (($x157 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x167 (and true $x157)))
 (let (($x174 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x85 (bvsub ?x85 (_ bv4 32))) (bvult ?x85 (bvsub ?x85 (_ bv4 32))))))
 (let (($x176 (and (and (and $x174 $x167) $x319) $x186)))
 (let (($x181 (= true $x176)))
 (let (($x31 (not $x23)))
 (let (($x189 (=> $x31 $x181)))
 (let (($x354 (= $x189 true)))
 (let (($x205 (= $x354 true)))
 (let (($x302 (= $x205 true)))
 (let (($x131 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x294 (and $x131 $x189)))
 (let (($x164 (not $x129)))
 (let (($x190 (=> $x164 $x181)))
 (let ((?x35 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x143 (concat ?x35 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x28 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x60 (_ bv3 32))))
 (let ((?x316 (concat (select input.dst.llvm-mem ?x45) (concat ?x28 ?x143))))
 (let (($x156 (= (bvand ?x316 (_ bv4294967280 32)) ?x316)))
 (let (($x146 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x160 (and $x146 $x156)))
 (let (($x297 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv8 32))) (bvult ?x60 (bvsub ?x60 (_ bv8 32))))))
 (let (($x49 (and (and (and $x297 $x167) $x146) $x160)))
 (let (($x171 (= true $x49)))
 (let (($x8 (=> $x129 $x171)))
 (let (($x320 (and $x8 $x190)))
 (let (($x188 (= true $x320)))
 (let (($x138 (or $x129 $x164)))
 (let (($x296 (and $x31 $x138)))
 (let (($x55 (=> $x296 $x188)))
 (let (($x196 (and $x55 $x294)))
 (let (($x57 (= $x196 true)))
 (let (($x192 (= $x57 true)))
 (let (($x401 (= $x192 true)))
 (let (($x300 (= $x55 true)))
 (let (($x182 (= $x300 true)))
 (let (($x175 (= $x182 true)))
 (let (($x315 (and $x31 $x164)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x148 (= $x317 true)))
 (let (($x140 (= $x131 true)))
 (let (($x163 (= $x140 true)))
 (let (($x135 (= $x163 true)))
 (let ((?x134 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x139 (= (_ bv0 32) ?x134)))
 (let ((?x95 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x128 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x95)))
 (let (($x132 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (and $x132 $x128)))
 (let (($x133 (and $x30 $x139)))
 (let (($x83 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x313 (and $x83 $x133)))
 (let (($x69 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x81 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x69)))))))
 (let (($x314 (and $x81 $x313)))
 (let (($x136 (= $x314 true)))
 (let (($x80 (= $x136 true)))
 (let (($x295 (= $x80 true)))
 (let (($x144 (and $x295 $x135)))
 (let (($x147 (and $x144 $x135)))
 (let (($x154 (and $x147 $x148)))
 (let (($x183 (and $x154 $x175)))
 (let (($x193 (and $x183 $x401)))
 (let (($x18 (and $x193 $x302)))
 (let (($x101 (and $x18 $x207)))
 (let (($x406 (and $x101 $x371)))
 (let (($x486 (and $x406 $x520)))
 (let (($x546 (and $x486 $x650)))
 (let (($x661 (and $x546 $x660)))
 (let (($x716 (and $x661 $x715)))
 (let (($x743 (and $x50 $x716)))
 (let (($x130 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x717 (and $x130 $x743)))
 (let (($x718 (and $x108 $x717)))
 (let (($x744 (and $x108 $x718)))
 (let (($x44 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x7 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x20 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x7 $x44)))))))
 (let (($x17 (and $x31 $x129)))
 (let (($x47 (=> (and $x17 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x7 $x44)))))))
 (let (($x59 (bvugt ?x85 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x123 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x43)))
 (let (($x37 (=> (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x123 $x59)))))))
 (let (($x75 (=> (and $x31 (bvule ?x85 (bvsub (bvadd ?x85 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x123 $x59)))))))
 (let (($x62 (and $x75 $x47)))
 (let (($x719 (and $x62 $x744)))
 (let (($x41 (=> $x719 $x121)))
 (not $x41))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 16
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4865X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x292 (concat ?x368 (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv8 32))))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x365 (concat ?x270 (concat ?x40 ?x292))))
 (let (($x71 (= ?x365 ?x365)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x323 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x357 (concat ?x323 (concat ?x349 ?x221))))
 (let (($x359 (= (_ bv0 32) ?x357)))
 (let ((?x227 (ite $x359 (_ bv0 32) (_ bv1 32))))
 (let (($x305 (bvuge ?x227 (_ bv1 32))))
 (let (($x263 (=> $x305 $x71)))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x316 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x65 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x65 (_ bv3 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem ?x14) (concat ?x160 ?x299))))
 (let ((?x260 (bvadd ?x8 (_ bv4 32))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x260 (_ bv1 32))) (select input.dst.llvm-mem ?x260))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x260 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x260 (_ bv2 32))) ?x367))))
 (let (($x255 (= (_ bv0 32) ?x470)))
 (let ((?x269 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x269 (_ bv1 32))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x357 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x357 (_ bv4 32))))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x357 (_ bv4 32)) (_ bv2 32))) ?x308)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x357 (_ bv4 32)) (_ bv3 32))) ?x306)))
 (let (($x237 (= (_ bv0 32) ?x280)))
 (let ((?x332 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x332 (_ bv1 32))))
 (let (($x364 (= $x283 $x277)))
 (let (($x256 (=> $x305 $x364)))
 (let (($x309 (= ?x269 (_ bv0 32))))
 (let (($x279 (= ?x332 (_ bv0 32))))
 (let (($x346 (= $x279 $x309)))
 (let (($x325 (=> $x305 $x346)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x238 (concat ?x242 (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv4 32))))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x241 (concat ?x286 ?x238))))
 (let (($x250 (= ?x257 ?x257)))
 (let (($x435 (=> $x305 $x250)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4865X))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv2 32))) ?x246)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv3 32))) ?x289)))
 (let (($x324 (= ?x249 ?x249)))
 (let (($x261 (=> $x305 $x324)))
 (let (($x236 (= (_ bv0 32) ?x8)))
 (let ((?x396 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x396 (_ bv1 32))))
 (let (($x234 (= $x305 $x271)))
 (let (($x285 (= ?x396 (_ bv0 32))))
 (let (($x307 (= ?x227 (_ bv0 32))))
 (let (($x434 (= $x307 $x285)))
 (let (($x394 (= ?x357 ?x8)))
 (let (($x130 (= false false)))
 (let (($x229 (and $x305 $x279)))
 (let (($x472 (=> $x229 $x130)))
 (let (($x225 (=> $x307 $x130)))
 (let (($x262 (and (and (and (and (and (and $x225 $x472) $x394) $x434) $x234) $x261) $x435)))
 (let (($x253 (and (and (and $x262 $x325) $x256) $x263)))
 (let (($x50 (not true)))
 (let (($x402 (or $x50 $x253)))
 (let (($x430 (= true true)))
 (let (($x347 (and $x430 $x402)))
 (let (($x310 (= $x347 true)))
 (let (($x215 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x433 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x212 (= $x433 $x215)))
 (let (($x214 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x330 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x355 (= $x330 $x214)))
 (let (($x220 (and $x355 $x212)))
 (let (($x33 (= $x220 true)))
 (let (($x213 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x32 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x105 (= $x32 $x213)))
 (let (($x68 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x10 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x303 (= $x10 $x68)))
 (let (($x344 (and $x303 $x105)))
 (let (($x67 (= $x344 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x217 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x223 (bvuge ?x217 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x211 (= $x107 $x223)))
 (let (($x350 (= ?x217 (_ bv0 32))))
 (let (($x108 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x209 (= $x108 $x350)))
 (let (($x318 (and $x209 $x211)))
 (let (($x210 (= $x318 true)))
 (let ((?x201 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x393 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x362 (concat ?x15 (concat ?x42 (concat ?x393 ?x201)))))
 (let (($x84 (= ?x362 input.dst.llvm-%t)))
 (let (($x321 (= $x84 true)))
 (let (($x72 (= $x321 true)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x16 (concat ?x125 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x76 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x86 (bvadd ?x76 (_ bv3 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem ?x86) (concat ?x124 ?x16))))
 (let (($x188 (= (bvand ?x17 (_ bv4294967280 32)) ?x17)))
 (let (($x190 (= (bvand ?x76 (_ bv4294967292 32)) ?x76)))
 (let (($x55 (and $x190 $x188)))
 (let (($x150 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x28 (and true $x150)))
 (let (($x176 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x76 (bvsub ?x76 (_ bv4 32))) (bvult ?x76 (bvsub ?x76 (_ bv4 32))))))
 (let (($x175 (and (and (and $x176 $x28) $x190) $x55)))
 (let (($x183 (= true $x175)))
 (let (($x31 (not $x23)))
 (let (($x205 (=> $x31 $x183)))
 (let (($x206 (= $x205 true)))
 (let (($x204 (= $x206 true)))
 (let (($x202 (= $x204 true)))
 (let (($x317 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x302 (and $x317 $x205)))
 (let (($x66 (= (_ bv0 32) ?x17)))
 (let (($x162 (not $x66)))
 (let (($x189 (=> $x162 $x183)))
 (let (($x169 (= (bvand ?x8 (_ bv4294967280 32)) ?x8)))
 (let (($x165 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x172 (and $x165 $x169)))
 (let (($x170 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv8 32))) (bvult ?x65 (bvsub ?x65 (_ bv8 32))))))
 (let (($x184 (and (and (and $x170 $x28) $x165) $x172)))
 (let (($x159 (= true $x184)))
 (let (($x319 (=> $x66 $x159)))
 (let (($x294 (and $x319 $x189)))
 (let (($x196 (= true $x294)))
 (let (($x137 (or $x66 $x162)))
 (let (($x153 (and $x31 $x137)))
 (let (($x57 (=> $x153 $x196)))
 (let (($x18 (and $x57 $x302)))
 (let (($x200 (= $x18 true)))
 (let (($x197 (= $x200 true)))
 (let (($x36 (= $x197 true)))
 (let (($x192 (= $x57 true)))
 (let (($x401 (= $x192 true)))
 (let (($x193 (= $x401 true)))
 (let (($x60 (and $x31 $x66)))
 (let (($x141 (= $x60 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x148 (= $x317 true)))
 (let (($x154 (= $x148 true)))
 (let (($x138 (= $x154 true)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x131 (= (_ bv0 32) ?x149)))
 (let ((?x80 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x80)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x94 (and $x136 $x295)))
 (let (($x140 (and $x94 $x131)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (and $x81 $x140)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x314 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x135 (and $x314 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x296 (and $x164 $x138)))
 (let (($x145 (and $x296 $x138)))
 (let (($x297 (and $x145 $x142)))
 (let (($x354 (and $x297 $x193)))
 (let (($x203 (and $x354 $x36)))
 (let (($x194 (and $x203 $x202)))
 (let (($x338 (and $x194 $x72)))
 (let (($x304 (and $x338 $x210)))
 (let (($x52 (and $x304 $x67)))
 (let (($x356 (and $x52 $x33)))
 (let (($x78 (and $x107 $x10)))
 (let (($x5 (and $x78 $x356)))
 (let (($x73 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x56 (and $x73 $x5)))
 (let (($x219 (and $x130 $x56)))
 (let (($x230 (and $x130 $x219)))
 (let (($x122 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x74 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x70 $x122)))))))
 (let (($x114 (=> (and $x60 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x70 $x122)))))))
 (let (($x93 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x27 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x120 $x93)))))))
 (let (($x96 (=> (and $x31 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x120 $x93)))))))
 (let (($x45 (and $x96 $x114)))
 (let (($x322 (and $x45 $x230)))
 (let (($x92 (=> $x322 $x310)))
 (not $x92)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4865X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x292 (concat ?x368 (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv8 32))))))
 (let ((?x40 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x270 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x365 (concat ?x270 (concat ?x40 ?x292))))
 (let (($x71 (= ?x365 ?x365)))
 (let ((?x226 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x226 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x323 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x357 (concat ?x323 (concat ?x349 ?x221))))
 (let (($x359 (= (_ bv0 32) ?x357)))
 (let ((?x227 (ite $x359 (_ bv0 32) (_ bv1 32))))
 (let (($x305 (bvuge ?x227 (_ bv1 32))))
 (let (($x263 (=> $x305 $x71)))
 (let ((?x316 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x316 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x160 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x65 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x65 (_ bv3 32))))
 (let ((?x8 (concat (select input.dst.llvm-mem ?x14) (concat ?x160 ?x299))))
 (let ((?x260 (bvadd ?x8 (_ bv4 32))))
 (let ((?x367 (concat (select input.dst.llvm-mem (bvadd ?x260 (_ bv1 32))) (select input.dst.llvm-mem ?x260))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x260 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x260 (_ bv2 32))) ?x367))))
 (let (($x255 (= (_ bv0 32) ?x470)))
 (let ((?x269 (ite $x255 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x269 (_ bv1 32))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x357 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x357 (_ bv4 32))))))
 (let ((?x306 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x357 (_ bv4 32)) (_ bv2 32))) ?x308)))
 (let ((?x280 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x357 (_ bv4 32)) (_ bv3 32))) ?x306)))
 (let (($x237 (= (_ bv0 32) ?x280)))
 (let ((?x332 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x283 (bvuge ?x332 (_ bv1 32))))
 (let (($x364 (= $x283 $x277)))
 (let (($x256 (=> $x305 $x364)))
 (let (($x309 (= ?x269 (_ bv0 32))))
 (let (($x279 (= ?x332 (_ bv0 32))))
 (let (($x346 (= $x279 $x309)))
 (let (($x325 (=> $x305 $x346)))
 (let ((?x242 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x238 (concat ?x242 (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv4 32))))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4865X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x257 (concat ?x241 (concat ?x286 ?x238))))
 (let (($x250 (= ?x257 ?x257)))
 (let (($x435 (=> $x305 $x250)))
 (let ((?x246 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4865X))))
 (let ((?x289 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv2 32))) ?x246)))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4865X (_ bv3 32))) ?x289)))
 (let (($x324 (= ?x249 ?x249)))
 (let (($x261 (=> $x305 $x324)))
 (let (($x236 (= (_ bv0 32) ?x8)))
 (let ((?x396 (ite $x236 (_ bv0 32) (_ bv1 32))))
 (let (($x271 (bvuge ?x396 (_ bv1 32))))
 (let (($x234 (= $x305 $x271)))
 (let (($x285 (= ?x396 (_ bv0 32))))
 (let (($x307 (= ?x227 (_ bv0 32))))
 (let (($x434 (= $x307 $x285)))
 (let (($x394 (= ?x357 ?x8)))
 (let (($x130 (= false false)))
 (let (($x229 (and $x305 $x279)))
 (let (($x472 (=> $x229 $x130)))
 (let (($x225 (=> $x307 $x130)))
 (let (($x262 (and (and (and (and (and (and $x225 $x472) $x394) $x434) $x234) $x261) $x435)))
 (let (($x253 (and (and (and $x262 $x325) $x256) $x263)))
 (let (($x50 (not true)))
 (let (($x402 (or $x50 $x253)))
 (let (($x430 (= true true)))
 (let (($x347 (and $x430 $x402)))
 (let (($x310 (= $x347 true)))
 (let (($x215 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x433 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x212 (= $x433 $x215)))
 (let (($x214 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x330 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x355 (= $x330 $x214)))
 (let (($x220 (and $x355 $x212)))
 (let (($x33 (= $x220 true)))
 (let (($x213 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x32 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x105 (= $x32 $x213)))
 (let (($x68 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x10 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x303 (= $x10 $x68)))
 (let (($x344 (and $x303 $x105)))
 (let (($x67 (= $x344 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x217 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x223 (bvuge ?x217 (_ bv1 32))))
 (let (($x107 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x211 (= $x107 $x223)))
 (let (($x350 (= ?x217 (_ bv0 32))))
 (let (($x108 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x209 (= $x108 $x350)))
 (let (($x318 (and $x209 $x211)))
 (let (($x210 (= $x318 true)))
 (let ((?x201 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x393 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x42 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x15 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x362 (concat ?x15 (concat ?x42 (concat ?x393 ?x201)))))
 (let (($x84 (= ?x362 input.dst.llvm-%t)))
 (let (($x321 (= $x84 true)))
 (let (($x72 (= $x321 true)))
 (let ((?x125 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x16 (concat ?x125 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x76 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x86 (bvadd ?x76 (_ bv3 32))))
 (let ((?x17 (concat (select input.dst.llvm-mem ?x86) (concat ?x124 ?x16))))
 (let (($x188 (= (bvand ?x17 (_ bv4294967280 32)) ?x17)))
 (let (($x190 (= (bvand ?x76 (_ bv4294967292 32)) ?x76)))
 (let (($x55 (and $x190 $x188)))
 (let (($x150 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x28 (and true $x150)))
 (let (($x176 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x76 (bvsub ?x76 (_ bv4 32))) (bvult ?x76 (bvsub ?x76 (_ bv4 32))))))
 (let (($x175 (and (and (and $x176 $x28) $x190) $x55)))
 (let (($x183 (= true $x175)))
 (let (($x31 (not $x23)))
 (let (($x205 (=> $x31 $x183)))
 (let (($x206 (= $x205 true)))
 (let (($x204 (= $x206 true)))
 (let (($x202 (= $x204 true)))
 (let (($x317 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x302 (and $x317 $x205)))
 (let (($x66 (= (_ bv0 32) ?x17)))
 (let (($x162 (not $x66)))
 (let (($x189 (=> $x162 $x183)))
 (let (($x169 (= (bvand ?x8 (_ bv4294967280 32)) ?x8)))
 (let (($x165 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x172 (and $x165 $x169)))
 (let (($x170 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv8 32))) (bvult ?x65 (bvsub ?x65 (_ bv8 32))))))
 (let (($x184 (and (and (and $x170 $x28) $x165) $x172)))
 (let (($x159 (= true $x184)))
 (let (($x319 (=> $x66 $x159)))
 (let (($x294 (and $x319 $x189)))
 (let (($x196 (= true $x294)))
 (let (($x137 (or $x66 $x162)))
 (let (($x153 (and $x31 $x137)))
 (let (($x57 (=> $x153 $x196)))
 (let (($x18 (and $x57 $x302)))
 (let (($x200 (= $x18 true)))
 (let (($x197 (= $x200 true)))
 (let (($x36 (= $x197 true)))
 (let (($x192 (= $x57 true)))
 (let (($x401 (= $x192 true)))
 (let (($x193 (= $x401 true)))
 (let (($x60 (and $x31 $x66)))
 (let (($x141 (= $x60 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x148 (= $x317 true)))
 (let (($x154 (= $x148 true)))
 (let (($x138 (= $x154 true)))
 (let ((?x149 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x131 (= (_ bv0 32) ?x149)))
 (let ((?x80 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x295 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x80)))
 (let (($x136 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x94 (and $x136 $x295)))
 (let (($x140 (and $x94 $x131)))
 (let (($x81 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x163 (and $x81 $x140)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x314 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x135 (and $x314 $x163)))
 (let (($x144 (= $x135 true)))
 (let (($x147 (= $x144 true)))
 (let (($x164 (= $x147 true)))
 (let (($x296 (and $x164 $x138)))
 (let (($x145 (and $x296 $x138)))
 (let (($x297 (and $x145 $x142)))
 (let (($x354 (and $x297 $x193)))
 (let (($x203 (and $x354 $x36)))
 (let (($x194 (and $x203 $x202)))
 (let (($x338 (and $x194 $x72)))
 (let (($x304 (and $x338 $x210)))
 (let (($x52 (and $x304 $x67)))
 (let (($x356 (and $x52 $x33)))
 (let (($x78 (and $x107 $x10)))
 (let (($x5 (and $x78 $x356)))
 (let (($x73 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x56 (and $x73 $x5)))
 (let (($x219 (and $x130 $x56)))
 (let (($x230 (and $x130 $x219)))
 (let (($x122 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x70 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x74 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x70 $x122)))))))
 (let (($x114 (=> (and $x60 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x70 $x122)))))))
 (let (($x93 (bvugt ?x76 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x120 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x86)))
 (let (($x27 (=> (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x120 $x93)))))))
 (let (($x96 (=> (and $x31 (bvule ?x76 (bvsub (bvadd ?x76 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x120 $x93)))))))
 (let (($x45 (and $x96 $x114)))
 (let (($x322 (and $x45 $x230)))
 (let (($x92 (=> $x322 $x310)))
 (not $x92)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 17
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4897X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x283 (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv8 32))))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x345 (concat ?x256 ?x277))))
 (let (($x275 (= ?x270 ?x270)))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x399 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x357 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x225 (concat ?x307 (concat ?x357 ?x221))))
 (let (($x305 (= (_ bv0 32) ?x225)))
 (let ((?x232 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (bvuge ?x232 (_ bv1 32))))
 (let (($x40 (=> $x351 $x275)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x435 (concat ?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x471 (concat ?x311 (concat ?x260 ?x435))))
 (let (($x248 (= (_ bv0 32) ?x471)))
 (let ((?x254 (ite $x248 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x254 (_ bv1 32))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x225 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x225 (_ bv4 32))))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x225 (_ bv4 32)) (_ bv2 32))) ?x308)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x225 (_ bv4 32)) (_ bv3 32))) ?x237)))
 (let (($x472 (= (_ bv0 32) ?x229)))
 (let ((?x274 (ite $x472 (_ bv0 32) (_ bv1 32))))
 (let (($x470 (bvuge ?x274 (_ bv1 32))))
 (let (($x269 (= $x470 $x255)))
 (let (($x309 (=> $x351 $x269)))
 (let (($x276 (= ?x254 (_ bv0 32))))
 (let (($x394 (= ?x274 (_ bv0 32))))
 (let (($x367 (= $x394 $x276)))
 (let (($x404 (=> $x351 $x367)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x358 (concat ?x261 (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x282 (concat ?x286 (concat ?x239 ?x358))))
 (let (($x242 (= ?x282 ?x282)))
 (let (($x395 (=> $x351 $x242)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4897X))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv2 32))) ?x244)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv3 32))) ?x240)))
 (let (($x352 (= ?x247 ?x247)))
 (let (($x246 (=> $x351 $x352)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x211 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x304 (bvuge ?x211 (_ bv1 32))))
 (let (($x434 (= $x351 $x304)))
 (let (($x318 (= ?x211 (_ bv0 32))))
 (let (($x235 (= ?x232 (_ bv0 32))))
 (let (($x285 (= $x235 $x318)))
 (let (($x396 (= ?x225 input.dst.llvm-%t)))
 (let (($x29 (= false false)))
 (let (($x259 (and $x351 $x394)))
 (let (($x236 (=> $x259 $x29)))
 (let (($x233 (=> $x235 $x29)))
 (let (($x365 (and (and (and (and (and (and $x233 $x236) $x396) $x285) $x434) $x246) $x395)))
 (let (($x253 (and (and (and $x365 $x404) $x309) $x40)))
 (let (($x287 (not true)))
 (let (($x402 (or $x287 $x253)))
 (let (($x323 (= true true)))
 (let (($x347 (and $x323 $x402)))
 (let (($x310 (= $x347 true)))
 (let (($x356 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x33 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x5 (= $x33 $x356)))
 (let (($x212 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x433 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x220 (= $x433 $x212)))
 (let (($x56 (and $x220 $x5)))
 (let (($x219 (= $x56 true)))
 (let (($x52 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x67 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x222 (= $x67 $x52)))
 (let (($x105 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x99 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x344 (= $x99 $x105)))
 (let (($x330 (and $x344 $x222)))
 (let (($x224 (= $x330 true)))
 (let (($x10 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x216 (= $x10 $x304)))
 (let (($x223 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x210 (= $x223 $x318)))
 (let (($x68 (and $x210 $x216)))
 (let (($x303 (= $x68 true)))
 (let ((?x198 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x338 (concat ?x72 (concat ?x362 (concat ?x201 ?x198)))))
 (let (($x108 (= ?x338 input.dst.llvm-%t)))
 (let (($x217 (= $x108 true)))
 (let (($x350 (= $x217 true)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x125 (concat ?x39 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x64 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x54) (concat ?x103 ?x125))))
 (let (($x55 (= (bvand ?x60 (_ bv4294967280 32)) ?x60)))
 (let (($x320 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x175 (and $x320 $x55)))
 (let (($x152 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x35 (and true $x152)))
 (let (($x190 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x294 (and (and (and $x190 $x35) $x320) $x175)))
 (let (($x196 (= true $x294)))
 (let (($x31 (not $x23)))
 (let (($x200 (=> $x31 $x196)))
 (let (($x194 (= $x200 true)))
 (let (($x53 (= $x194 true)))
 (let (($x15 (= $x53 true)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x197 (and $x138 $x200)))
 (let (($x13 (= (_ bv0 32) ?x60)))
 (let (($x157 (not $x13)))
 (let (($x57 (=> $x157 $x196)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x316 (concat ?x298 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x44 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x44 (_ bv3 32))))
 (let ((?x179 (concat (select input.dst.llvm-mem ?x91) (concat ?x299 ?x316))))
 (let (($x172 (= (bvand ?x179 (_ bv4294967280 32)) ?x179)))
 (let (($x171 (= (bvand ?x44 (_ bv4294967292 32)) ?x44)))
 (let (($x184 (and $x171 $x172)))
 (let (($x168 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x44 (bvsub ?x44 (_ bv8 32))) (bvult ?x44 (bvsub ?x44 (_ bv8 32))))))
 (let (($x173 (and (and (and $x168 $x35) $x171) $x184)))
 (let (($x392 (= true $x173)))
 (let (($x178 (=> $x13 $x392)))
 (let (($x192 (and $x178 $x57)))
 (let (($x401 (= true $x192)))
 (let (($x155 (or $x13 $x157)))
 (let (($x167 (and $x31 $x155)))
 (let (($x193 (=> $x167 $x401)))
 (let (($x36 (and $x193 $x197)))
 (let (($x203 (= $x36 true)))
 (let (($x206 (= $x203 true)))
 (let (($x204 (= $x206 true)))
 (let (($x354 (= $x193 true)))
 (let (($x205 (= $x354 true)))
 (let (($x302 (= $x205 true)))
 (let (($x297 (= $x23 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x95 $x144)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x295 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x133)))))))
 (let (($x164 (and $x295 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x153 (and $x142 $x137)))
 (let (($x18 (and $x153 $x302)))
 (let (($x202 (and $x18 $x204)))
 (let (($x101 (and $x202 $x15)))
 (let (($x209 (and $x101 $x350)))
 (let (($x32 (and $x209 $x303)))
 (let (($x214 (and $x32 $x224)))
 (let (($x230 (and $x214 $x219)))
 (let (($x83 (and $x10 $x99)))
 (let (($x322 (and $x83 $x230)))
 (let (($x107 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x430 (and $x107 $x322)))
 (let (($x50 (and $x29 $x430)))
 (let (($x231 (and $x29 $x50)))
 (let (($x47 (bvugt ?x44 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x46 (=> (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x65 (and $x31 $x13)))
 (let (($x58 (=> (and $x65 (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x75 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x11 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x75)))))))
 (let (($x43 (=> (and $x31 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x37 $x75)))))))
 (let (($x14 (and $x43 $x58)))
 (let (($x284 (and $x14 $x231)))
 (let (($x92 (=> $x284 $x310)))
 (not $x92)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4897X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x277 (concat ?x283 (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv8 32))))))
 (let ((?x256 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x345 (concat ?x256 ?x277))))
 (let (($x275 (= ?x270 ?x270)))
 (let ((?x399 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x221 (concat ?x399 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x357 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x307 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x225 (concat ?x307 (concat ?x357 ?x221))))
 (let (($x305 (= (_ bv0 32) ?x225)))
 (let ((?x232 (ite $x305 (_ bv0 32) (_ bv1 32))))
 (let (($x351 (bvuge ?x232 (_ bv1 32))))
 (let (($x40 (=> $x351 $x275)))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x435 (concat ?x250 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x311 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x471 (concat ?x311 (concat ?x260 ?x435))))
 (let (($x248 (= (_ bv0 32) ?x471)))
 (let ((?x254 (ite $x248 (_ bv0 32) (_ bv1 32))))
 (let (($x255 (bvuge ?x254 (_ bv1 32))))
 (let ((?x308 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x225 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x225 (_ bv4 32))))))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x225 (_ bv4 32)) (_ bv2 32))) ?x308)))
 (let ((?x229 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x225 (_ bv4 32)) (_ bv3 32))) ?x237)))
 (let (($x472 (= (_ bv0 32) ?x229)))
 (let ((?x274 (ite $x472 (_ bv0 32) (_ bv1 32))))
 (let (($x470 (bvuge ?x274 (_ bv1 32))))
 (let (($x269 (= $x470 $x255)))
 (let (($x309 (=> $x351 $x269)))
 (let (($x276 (= ?x254 (_ bv0 32))))
 (let (($x394 (= ?x274 (_ bv0 32))))
 (let (($x367 (= $x394 $x276)))
 (let (($x404 (=> $x351 $x367)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x358 (concat ?x261 (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv4 32))))))
 (let ((?x239 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4897X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x282 (concat ?x286 (concat ?x239 ?x358))))
 (let (($x242 (= ?x282 ?x282)))
 (let (($x395 (=> $x351 $x242)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4897X))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv2 32))) ?x244)))
 (let ((?x247 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4897X (_ bv3 32))) ?x240)))
 (let (($x352 (= ?x247 ?x247)))
 (let (($x246 (=> $x351 $x352)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x211 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x304 (bvuge ?x211 (_ bv1 32))))
 (let (($x434 (= $x351 $x304)))
 (let (($x318 (= ?x211 (_ bv0 32))))
 (let (($x235 (= ?x232 (_ bv0 32))))
 (let (($x285 (= $x235 $x318)))
 (let (($x396 (= ?x225 input.dst.llvm-%t)))
 (let (($x29 (= false false)))
 (let (($x259 (and $x351 $x394)))
 (let (($x236 (=> $x259 $x29)))
 (let (($x233 (=> $x235 $x29)))
 (let (($x365 (and (and (and (and (and (and $x233 $x236) $x396) $x285) $x434) $x246) $x395)))
 (let (($x253 (and (and (and $x365 $x404) $x309) $x40)))
 (let (($x287 (not true)))
 (let (($x402 (or $x287 $x253)))
 (let (($x323 (= true true)))
 (let (($x347 (and $x323 $x402)))
 (let (($x310 (= $x347 true)))
 (let (($x356 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x33 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x5 (= $x33 $x356)))
 (let (($x212 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x433 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x220 (= $x433 $x212)))
 (let (($x56 (and $x220 $x5)))
 (let (($x219 (= $x56 true)))
 (let (($x52 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x67 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x222 (= $x67 $x52)))
 (let (($x105 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x99 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x344 (= $x99 $x105)))
 (let (($x330 (and $x344 $x222)))
 (let (($x224 (= $x330 true)))
 (let (($x10 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x216 (= $x10 $x304)))
 (let (($x223 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x210 (= $x223 $x318)))
 (let (($x68 (and $x210 $x216)))
 (let (($x303 (= $x68 true)))
 (let ((?x198 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x338 (concat ?x72 (concat ?x362 (concat ?x201 ?x198)))))
 (let (($x108 (= ?x338 input.dst.llvm-%t)))
 (let (($x217 (= $x108 true)))
 (let (($x350 (= $x217 true)))
 (let ((?x39 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x125 (concat ?x39 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x64 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x54 (bvadd ?x64 (_ bv3 32))))
 (let ((?x60 (concat (select input.dst.llvm-mem ?x54) (concat ?x103 ?x125))))
 (let (($x55 (= (bvand ?x60 (_ bv4294967280 32)) ?x60)))
 (let (($x320 (= (bvand ?x64 (_ bv4294967292 32)) ?x64)))
 (let (($x175 (and $x320 $x55)))
 (let (($x152 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x35 (and true $x152)))
 (let (($x190 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x64 (bvsub ?x64 (_ bv4 32))) (bvult ?x64 (bvsub ?x64 (_ bv4 32))))))
 (let (($x294 (and (and (and $x190 $x35) $x320) $x175)))
 (let (($x196 (= true $x294)))
 (let (($x31 (not $x23)))
 (let (($x200 (=> $x31 $x196)))
 (let (($x194 (= $x200 true)))
 (let (($x53 (= $x194 true)))
 (let (($x15 (= $x53 true)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x197 (and $x138 $x200)))
 (let (($x13 (= (_ bv0 32) ?x60)))
 (let (($x157 (not $x13)))
 (let (($x57 (=> $x157 $x196)))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x316 (concat ?x298 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x299 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x44 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x44 (_ bv3 32))))
 (let ((?x179 (concat (select input.dst.llvm-mem ?x91) (concat ?x299 ?x316))))
 (let (($x172 (= (bvand ?x179 (_ bv4294967280 32)) ?x179)))
 (let (($x171 (= (bvand ?x44 (_ bv4294967292 32)) ?x44)))
 (let (($x184 (and $x171 $x172)))
 (let (($x168 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x44 (bvsub ?x44 (_ bv8 32))) (bvult ?x44 (bvsub ?x44 (_ bv8 32))))))
 (let (($x173 (and (and (and $x168 $x35) $x171) $x184)))
 (let (($x392 (= true $x173)))
 (let (($x178 (=> $x13 $x392)))
 (let (($x192 (and $x178 $x57)))
 (let (($x401 (= true $x192)))
 (let (($x155 (or $x13 $x157)))
 (let (($x167 (and $x31 $x155)))
 (let (($x193 (=> $x167 $x401)))
 (let (($x36 (and $x193 $x197)))
 (let (($x203 (= $x36 true)))
 (let (($x206 (= $x203 true)))
 (let (($x204 (= $x206 true)))
 (let (($x354 (= $x193 true)))
 (let (($x205 (= $x354 true)))
 (let (($x302 (= $x205 true)))
 (let (($x297 (= $x23 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x95 $x144)))
 (let (($x133 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x139 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x295 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x139 $x133)))))))
 (let (($x164 (and $x295 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x153 (and $x142 $x137)))
 (let (($x18 (and $x153 $x302)))
 (let (($x202 (and $x18 $x204)))
 (let (($x101 (and $x202 $x15)))
 (let (($x209 (and $x101 $x350)))
 (let (($x32 (and $x209 $x303)))
 (let (($x214 (and $x32 $x224)))
 (let (($x230 (and $x214 $x219)))
 (let (($x83 (and $x10 $x99)))
 (let (($x322 (and $x83 $x230)))
 (let (($x107 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x430 (and $x107 $x322)))
 (let (($x50 (and $x29 $x430)))
 (let (($x231 (and $x29 $x50)))
 (let (($x47 (bvugt ?x44 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x20 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x46 (=> (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x65 (and $x31 $x13)))
 (let (($x58 (=> (and $x65 (bvule ?x44 (bvsub (bvadd ?x44 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x20 $x47)))))))
 (let (($x75 (bvugt ?x64 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x37 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x54)))
 (let (($x11 (=> (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x37 $x75)))))))
 (let (($x43 (=> (and $x31 (bvule ?x64 (bvsub (bvadd ?x64 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x37 $x75)))))))
 (let (($x14 (and $x43 $x58)))
 (let (($x284 (and $x14 $x231)))
 (let (($x92 (=> $x284 $x310)))
 (not $x92)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 18
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4929X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x353 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x363 (concat ?x353 (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv8 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x244 (concat ?x271 (concat ?x245 ?x363))))
 (let (($x240 (= ?x244 ?x244)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x318 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x318 (_ bv1 32))))
 (let (($x247 (=> $x68 $x240)))
 (let ((?x472 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x472 (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv4 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x368 (concat ?x396 (concat ?x259 ?x274))))
 (let (($x285 (= ?x368 ?x368)))
 (let (($x326 (=> $x68 $x285)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4929X))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv2 32))) ?x351)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv3 32))) ?x279)))
 (let (($x328 (= ?x397 ?x397)))
 (let (($x228 (=> $x68 $x328)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x39 (concat ?x124 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x17 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x123 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x38 (bvadd ?x123 (_ bv3 32))))
 (let ((?x65 (concat (select input.dst.llvm-mem ?x38) (concat ?x17 ?x39))))
 (let (($x7 (= (_ bv0 32) ?x65)))
 (let ((?x226 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x359 (bvuge ?x226 (_ bv1 32))))
 (let (($x225 (= $x68 $x359)))
 (let (($x104 (= false false)))
 (let (($x210 (= ?x318 (_ bv0 32))))
 (let (($x221 (=> $x210 $x104)))
 (let (($x291 (and (and (and (= input.dst.llvm-%t ?x65) (= $x210 (= ?x226 (_ bv0 32)))) $x221) $x225)))
 (let (($x286 (and (and (and $x291 $x228) $x326) $x247)))
 (let (($x288 (not true)))
 (let (($x258 (or $x288 $x286)))
 (let (($x307 (= true true)))
 (let (($x239 (and $x307 $x258)))
 (let (($x324 (= $x239 true)))
 (let (($x230 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x219 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x322 (= $x219 $x230)))
 (let (($x5 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x33 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x56 (= $x33 $x5)))
 (let (($x430 (and $x56 $x322)))
 (let (($x50 (= $x430 true)))
 (let (($x214 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x355 (= $x224 $x214)))
 (let (($x222 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x67 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x330 (= $x67 $x222)))
 (let (($x433 (and $x330 $x355)))
 (let (($x215 (= $x433 true)))
 (let (($x216 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x303 (= $x216 $x68)))
 (let (($x99 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x304 (= $x99 $x210)))
 (let (($x32 (and $x304 $x303)))
 (let (($x213 (= $x32 true)))
 (let ((?x208 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x393 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x217 (concat ?x108 (concat ?x207 (concat ?x393 ?x208)))))
 (let (($x350 (= ?x217 input.dst.llvm-%t)))
 (let (($x209 (= $x350 true)))
 (let (($x223 (= $x209 true)))
 (let (($x188 (= (bvand ?x65 (_ bv4294967280 32)) ?x65)))
 (let (($x320 (= (bvand ?x123 (_ bv4294967292 32)) ?x123)))
 (let (($x55 (and $x320 $x188)))
 (let (($x35 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x159 (and true $x35)))
 (let (($x183 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x123 (bvsub ?x123 (_ bv4 32))) (bvult ?x123 (bvsub ?x123 (_ bv4 32))))))
 (let (($x196 (and (and (and $x183 $x159) $x320) $x55)))
 (let (($x57 (= true $x196)))
 (let (($x31 (not $x23)))
 (let (($x197 (=> $x31 $x57)))
 (let (($x53 (= $x197 true)))
 (let (($x15 (= $x53 true)))
 (let (($x101 (= $x15 true)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x36 (and $x138 $x197)))
 (let (($x297 (not $x7)))
 (let (($x192 (=> $x297 $x57)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x122 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x122 (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x62) (concat ?x298 ?x299))))
 (let (($x169 (= (bvand ?x49 (_ bv4294967280 32)) ?x49)))
 (let (($x171 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x172 (and $x171 $x169)))
 (let (($x150 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv8 32))) (bvult ?x122 (bvsub ?x122 (_ bv8 32))))))
 (let (($x392 (and (and (and $x150 $x159) $x171) $x172)))
 (let (($x178 (= true $x392)))
 (let (($x176 (=> $x7 $x178)))
 (let (($x401 (and $x176 $x192)))
 (let (($x193 (= true $x401)))
 (let (($x167 (or $x7 $x297)))
 (let (($x170 (and $x31 $x167)))
 (let (($x354 (=> $x170 $x193)))
 (let (($x203 (and $x354 $x36)))
 (let (($x206 (= $x203 true)))
 (let (($x204 (= $x206 true)))
 (let (($x202 (= $x204 true)))
 (let (($x205 (= $x354 true)))
 (let (($x302 (= $x205 true)))
 (let (($x18 (= $x302 true)))
 (let (($x162 (and $x31 $x297)))
 (let (($x137 (= $x162 true)))
 (let (($x153 (= $x137 true)))
 (let (($x157 (= $x153 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x30 $x144)))
 (let (($x314 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x95 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x314)))))))
 (let (($x164 (and $x95 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x155 (and $x142 $x157)))
 (let (($x200 (and $x155 $x18)))
 (let (($x194 (and $x200 $x202)))
 (let (($x321 (and $x194 $x101)))
 (let (($x211 (and $x321 $x223)))
 (let (($x105 (and $x211 $x213)))
 (let (($x212 (and $x105 $x215)))
 (let (($x231 (and $x212 $x50)))
 (let (($x284 (and $x99 $x231)))
 (let (($x10 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x323 (and $x10 $x284)))
 (let (($x287 (and $x104 $x323)))
 (let (($x349 (and $x104 $x287)))
 (let (($x114 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x73 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x114)))))))
 (let (($x44 (and $x31 $x7)))
 (let (($x130 (=> (and $x44 (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x74 $x114)))))))
 (let (($x96 (bvugt ?x123 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x119 (=> (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x96)))))))
 (let (($x86 (=> (and $x31 (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x96)))))))
 (let (($x91 (and $x86 $x130)))
 (let (($x227 (and $x91 $x349)))
 (let (($x261 (=> $x227 $x324)))
 (not $x261))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4929X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x353 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x363 (concat ?x353 (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv8 32))))))
 (let ((?x245 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x244 (concat ?x271 (concat ?x245 ?x363))))
 (let (($x240 (= ?x244 ?x244)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x318 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x68 (bvuge ?x318 (_ bv1 32))))
 (let (($x247 (=> $x68 $x240)))
 (let ((?x472 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x274 (concat ?x472 (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv4 32))))))
 (let ((?x259 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4929X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x368 (concat ?x396 (concat ?x259 ?x274))))
 (let (($x285 (= ?x368 ?x368)))
 (let (($x326 (=> $x68 $x285)))
 (let ((?x351 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4929X))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv2 32))) ?x351)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4929X (_ bv3 32))) ?x279)))
 (let (($x328 (= ?x397 ?x397)))
 (let (($x228 (=> $x68 $x328)))
 (let ((?x124 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x39 (concat ?x124 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x17 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x123 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x38 (bvadd ?x123 (_ bv3 32))))
 (let ((?x65 (concat (select input.dst.llvm-mem ?x38) (concat ?x17 ?x39))))
 (let (($x7 (= (_ bv0 32) ?x65)))
 (let ((?x226 (ite $x7 (_ bv0 32) (_ bv1 32))))
 (let (($x359 (bvuge ?x226 (_ bv1 32))))
 (let (($x225 (= $x68 $x359)))
 (let (($x104 (= false false)))
 (let (($x210 (= ?x318 (_ bv0 32))))
 (let (($x221 (=> $x210 $x104)))
 (let (($x291 (and (and (and (= input.dst.llvm-%t ?x65) (= $x210 (= ?x226 (_ bv0 32)))) $x221) $x225)))
 (let (($x286 (and (and (and $x291 $x228) $x326) $x247)))
 (let (($x288 (not true)))
 (let (($x258 (or $x288 $x286)))
 (let (($x307 (= true true)))
 (let (($x239 (and $x307 $x258)))
 (let (($x324 (= $x239 true)))
 (let (($x230 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x219 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x322 (= $x219 $x230)))
 (let (($x5 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x33 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x56 (= $x33 $x5)))
 (let (($x430 (and $x56 $x322)))
 (let (($x50 (= $x430 true)))
 (let (($x214 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x224 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x355 (= $x224 $x214)))
 (let (($x222 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x67 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x330 (= $x67 $x222)))
 (let (($x433 (and $x330 $x355)))
 (let (($x215 (= $x433 true)))
 (let (($x216 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x303 (= $x216 $x68)))
 (let (($x99 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x304 (= $x99 $x210)))
 (let (($x32 (and $x304 $x303)))
 (let (($x213 (= $x32 true)))
 (let ((?x208 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x393 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x207 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x108 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x217 (concat ?x108 (concat ?x207 (concat ?x393 ?x208)))))
 (let (($x350 (= ?x217 input.dst.llvm-%t)))
 (let (($x209 (= $x350 true)))
 (let (($x223 (= $x209 true)))
 (let (($x188 (= (bvand ?x65 (_ bv4294967280 32)) ?x65)))
 (let (($x320 (= (bvand ?x123 (_ bv4294967292 32)) ?x123)))
 (let (($x55 (and $x320 $x188)))
 (let (($x35 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x159 (and true $x35)))
 (let (($x183 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x123 (bvsub ?x123 (_ bv4 32))) (bvult ?x123 (bvsub ?x123 (_ bv4 32))))))
 (let (($x196 (and (and (and $x183 $x159) $x320) $x55)))
 (let (($x57 (= true $x196)))
 (let (($x31 (not $x23)))
 (let (($x197 (=> $x31 $x57)))
 (let (($x53 (= $x197 true)))
 (let (($x15 (= $x53 true)))
 (let (($x101 (= $x15 true)))
 (let (($x138 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x36 (and $x138 $x197)))
 (let (($x297 (not $x7)))
 (let (($x192 (=> $x297 $x57)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x299 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x298 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x122 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x122 (_ bv3 32))))
 (let ((?x49 (concat (select input.dst.llvm-mem ?x62) (concat ?x298 ?x299))))
 (let (($x169 (= (bvand ?x49 (_ bv4294967280 32)) ?x49)))
 (let (($x171 (= (bvand ?x122 (_ bv4294967292 32)) ?x122)))
 (let (($x172 (and $x171 $x169)))
 (let (($x150 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x122 (bvsub ?x122 (_ bv8 32))) (bvult ?x122 (bvsub ?x122 (_ bv8 32))))))
 (let (($x392 (and (and (and $x150 $x159) $x171) $x172)))
 (let (($x178 (= true $x392)))
 (let (($x176 (=> $x7 $x178)))
 (let (($x401 (and $x176 $x192)))
 (let (($x193 (= true $x401)))
 (let (($x167 (or $x7 $x297)))
 (let (($x170 (and $x31 $x167)))
 (let (($x354 (=> $x170 $x193)))
 (let (($x203 (and $x354 $x36)))
 (let (($x206 (= $x203 true)))
 (let (($x204 (= $x206 true)))
 (let (($x202 (= $x204 true)))
 (let (($x205 (= $x354 true)))
 (let (($x302 (= $x205 true)))
 (let (($x18 (= $x302 true)))
 (let (($x162 (and $x31 $x297)))
 (let (($x137 (= $x162 true)))
 (let (($x153 (= $x137 true)))
 (let (($x157 (= $x153 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x141 (= $x145 true)))
 (let ((?x163 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x135 (= (_ bv0 32) ?x163)))
 (let ((?x149 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x131 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x149)))
 (let (($x94 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x140 (and $x94 $x131)))
 (let (($x144 (and $x140 $x135)))
 (let (($x30 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x147 (and $x30 $x144)))
 (let (($x314 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x133 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x95 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x133 $x314)))))))
 (let (($x164 (and $x95 $x147)))
 (let (($x315 (= $x164 true)))
 (let (($x151 (= $x315 true)))
 (let (($x317 (= $x151 true)))
 (let (($x158 (and $x317 $x141)))
 (let (($x142 (and $x158 $x141)))
 (let (($x155 (and $x142 $x157)))
 (let (($x200 (and $x155 $x18)))
 (let (($x194 (and $x200 $x202)))
 (let (($x321 (and $x194 $x101)))
 (let (($x211 (and $x321 $x223)))
 (let (($x105 (and $x211 $x213)))
 (let (($x212 (and $x105 $x215)))
 (let (($x231 (and $x212 $x50)))
 (let (($x284 (and $x99 $x231)))
 (let (($x10 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x323 (and $x10 $x284)))
 (let (($x287 (and $x104 $x323)))
 (let (($x349 (and $x104 $x287)))
 (let (($x114 (bvugt ?x122 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x74 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x73 (=> (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x74 $x114)))))))
 (let (($x44 (and $x31 $x7)))
 (let (($x130 (=> (and $x44 (bvule ?x122 (bvsub (bvadd ?x122 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x74 $x114)))))))
 (let (($x96 (bvugt ?x123 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x27 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x38)))
 (let (($x119 (=> (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x27 $x96)))))))
 (let (($x86 (=> (and $x31 (bvule ?x123 (bvsub (bvadd ?x123 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x27 $x96)))))))
 (let (($x91 (and $x86 $x130)))
 (let (($x227 (and $x91 $x349)))
 (let (($x261 (=> $x227 $x324)))
 (not $x261))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 19
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4960X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x271 (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv8 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x363 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x363 (concat ?x268 ?x243))))
 (let (($x244 (= ?x234 ?x234)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x216 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x213 (bvuge ?x216 (_ bv1 32))))
 (let (($x240 (=> $x213 $x244)))
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x259 (concat ?x394 (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv4 32))))))
 (let ((?x472 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x368 (concat ?x236 (concat ?x472 ?x259))))
 (let (($x285 (= ?x368 ?x368)))
 (let (($x326 (=> $x213 $x285)))
 (let (($x69 (= false false)))
 (let (($x68 (= ?x216 (_ bv0 32))))
 (let (($x289 (=> $x68 $x69)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4960X))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv2 32))) ?x332)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv3 32))) ?x232)))
 (let (($x328 (= ?x397 ?x397)))
 (let (($x228 (=> $x213 $x328)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x319 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x47 (_ bv3 32))))
 (let ((?x169 (concat (select input.dst.llvm-mem ?x45) (concat ?x156 ?x319))))
 (let (($x352 (= (_ bv0 32) ?x169)))
 (let ((?x221 (ite $x352 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x221 (_ bv1 32))))
 (let (($x291 (= $x213 $x225)))
 (let (($x258 (and (and (and (= input.dst.llvm-%t ?x169) (= $x68 (= ?x221 (_ bv0 32)))) $x291) $x228)))
 (let (($x261 (and (and (and $x258 $x289) $x326) $x240)))
 (let (($x399 (not true)))
 (let (($x249 (or $x399 $x261)))
 (let (($x226 (= true true)))
 (let (($x59 (and $x226 $x249)))
 (let (($x76 (= $x59 true)))
 (let (($x50 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x430 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x231 (= $x430 $x50)))
 (let (($x230 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x56 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x322 (= $x56 $x230)))
 (let (($x284 (and $x322 $x231)))
 (let (($x323 (= $x284 true)))
 (let (($x215 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x433 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x212 (= $x433 $x215)))
 (let (($x214 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x330 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x355 (= $x330 $x214)))
 (let (($x220 (and $x355 $x212)))
 (let (($x33 (= $x220 true)))
 (let (($x32 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x105 (= $x32 $x213)))
 (let (($x139 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x303 (= $x139 $x68)))
 (let (($x344 (and $x303 $x105)))
 (let (($x67 (= $x344 true)))
 (let ((?x393 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x78 (concat ?x211 (concat ?x350 (concat ?x201 ?x393)))))
 (let (($x99 (= ?x78 input.dst.llvm-%t)))
 (let (($x318 (= $x99 true)))
 (let (($x210 (= $x318 true)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x124 (concat ?x103 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x120 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x102 (bvadd ?x120 (_ bv3 32))))
 (let ((?x44 (concat (select input.dst.llvm-mem ?x102) (concat ?x60 ?x124))))
 (let (($x196 (= (bvand ?x44 (_ bv4294967280 32)) ?x44)))
 (let (($x188 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x57 (and $x188 $x196)))
 (let (($x174 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x171 (and true $x174)))
 (let (($x294 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv4 32))) (bvult ?x120 (bvsub ?x120 (_ bv4 32))))))
 (let (($x193 (and (and (and $x294 $x171) $x188) $x57)))
 (let (($x354 (= true $x193)))
 (let (($x31 (not $x23)))
 (let (($x204 (=> $x31 $x354)))
 (let (($x338 (= $x204 true)))
 (let (($x108 (= $x338 true)))
 (let (($x198 (= $x108 true)))
 (let (($x142 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x202 (and $x142 $x204)))
 (let (($x70 (= (_ bv0 32) ?x44)))
 (let (($x161 (not $x70)))
 (let (($x205 (=> $x161 $x354)))
 (let (($x392 (= (bvand ?x169 (_ bv4294967280 32)) ?x169)))
 (let (($x160 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x178 (and $x160 $x392)))
 (let (($x152 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv8 32))) (bvult ?x47 (bvsub ?x47 (_ bv8 32))))))
 (let (($x186 (and (and (and $x152 $x171) $x160) $x178)))
 (let (($x181 (= true $x186)))
 (let (($x190 (=> $x70 $x181)))
 (let (($x302 (and $x190 $x205)))
 (let (($x18 (= true $x302)))
 (let (($x166 (or $x70 $x161)))
 (let (($x168 (and $x31 $x166)))
 (let (($x200 (=> $x168 $x18)))
 (let (($x194 (and $x200 $x202)))
 (let (($x53 (= $x194 true)))
 (let (($x15 (= $x53 true)))
 (let (($x101 (= $x15 true)))
 (let (($x197 (= $x200 true)))
 (let (($x36 (= $x197 true)))
 (let (($x203 (= $x36 true)))
 (let (($x122 (and $x31 $x70)))
 (let (($x155 (= $x122 true)))
 (let (($x167 (= $x155 true)))
 (let (($x170 (= $x167 true)))
 (let (($x297 (= $x142 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let ((?x315 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x315)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (and $x135 $x147)))
 (let (($x317 (and $x164 $x151)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x97 $x317)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x163 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x154 (and $x163 $x148)))
 (let (($x138 (= $x154 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x153 (and $x145 $x137)))
 (let (($x157 (and $x153 $x137)))
 (let (($x146 (and $x157 $x170)))
 (let (($x206 (and $x146 $x203)))
 (let (($x321 (and $x206 $x101)))
 (let (($x207 (and $x321 $x198)))
 (let (($x304 (and $x207 $x210)))
 (let (($x52 (and $x304 $x67)))
 (let (($x356 (and $x52 $x33)))
 (let (($x287 (and $x356 $x323)))
 (let (($x349 (and $x139 $x287)))
 (let (($x134 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x227 (and $x134 $x349)))
 (let (($x307 (and $x69 $x227)))
 (let (($x288 (and $x69 $x307)))
 (let (($x58 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x107 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x46 $x58)))))))
 (let (($x29 (=> (and $x122 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x46 $x58)))))))
 (let (($x43 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x9 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x43)))))))
 (let (($x54 (=> (and $x31 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x11 $x43)))))))
 (let (($x62 (and $x54 $x29)))
 (let (($x357 (and $x62 $x288)))
 (let (($x83 (=> $x357 $x76)))
 (not $x83))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var4960X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x271 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x243 (concat ?x271 (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv8 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x363 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x234 (concat ?x363 (concat ?x268 ?x243))))
 (let (($x244 (= ?x234 ?x234)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x216 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x213 (bvuge ?x216 (_ bv1 32))))
 (let (($x240 (=> $x213 $x244)))
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x259 (concat ?x394 (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv4 32))))))
 (let ((?x472 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x236 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var4960X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x368 (concat ?x236 (concat ?x472 ?x259))))
 (let (($x285 (= ?x368 ?x368)))
 (let (($x326 (=> $x213 $x285)))
 (let (($x69 (= false false)))
 (let (($x68 (= ?x216 (_ bv0 32))))
 (let (($x289 (=> $x68 $x69)))
 (let ((?x332 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var4960X))))
 (let ((?x232 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv2 32))) ?x332)))
 (let ((?x397 (concat (select input.dst.llvm-mem (bvadd input.ind-%var4960X (_ bv3 32))) ?x232)))
 (let (($x328 (= ?x397 ?x397)))
 (let (($x228 (=> $x213 $x328)))
 (let ((?x143 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x319 (concat ?x143 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x156 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x47 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x47 (_ bv3 32))))
 (let ((?x169 (concat (select input.dst.llvm-mem ?x45) (concat ?x156 ?x319))))
 (let (($x352 (= (_ bv0 32) ?x169)))
 (let ((?x221 (ite $x352 (_ bv0 32) (_ bv1 32))))
 (let (($x225 (bvuge ?x221 (_ bv1 32))))
 (let (($x291 (= $x213 $x225)))
 (let (($x258 (and (and (and (= input.dst.llvm-%t ?x169) (= $x68 (= ?x221 (_ bv0 32)))) $x291) $x228)))
 (let (($x261 (and (and (and $x258 $x289) $x326) $x240)))
 (let (($x399 (not true)))
 (let (($x249 (or $x399 $x261)))
 (let (($x226 (= true true)))
 (let (($x59 (and $x226 $x249)))
 (let (($x76 (= $x59 true)))
 (let (($x50 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x430 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x231 (= $x430 $x50)))
 (let (($x230 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x56 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x322 (= $x56 $x230)))
 (let (($x284 (and $x322 $x231)))
 (let (($x323 (= $x284 true)))
 (let (($x215 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x433 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x212 (= $x433 $x215)))
 (let (($x214 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x330 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x355 (= $x330 $x214)))
 (let (($x220 (and $x355 $x212)))
 (let (($x33 (= $x220 true)))
 (let (($x32 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x105 (= $x32 $x213)))
 (let (($x139 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x303 (= $x139 $x68)))
 (let (($x344 (and $x303 $x105)))
 (let (($x67 (= $x344 true)))
 (let ((?x393 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x201 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x350 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x211 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x78 (concat ?x211 (concat ?x350 (concat ?x201 ?x393)))))
 (let (($x99 (= ?x78 input.dst.llvm-%t)))
 (let (($x318 (= $x99 true)))
 (let (($x210 (= $x318 true)))
 (let ((?x103 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x124 (concat ?x103 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x120 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x102 (bvadd ?x120 (_ bv3 32))))
 (let ((?x44 (concat (select input.dst.llvm-mem ?x102) (concat ?x60 ?x124))))
 (let (($x196 (= (bvand ?x44 (_ bv4294967280 32)) ?x44)))
 (let (($x188 (= (bvand ?x120 (_ bv4294967292 32)) ?x120)))
 (let (($x57 (and $x188 $x196)))
 (let (($x174 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x171 (and true $x174)))
 (let (($x294 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x120 (bvsub ?x120 (_ bv4 32))) (bvult ?x120 (bvsub ?x120 (_ bv4 32))))))
 (let (($x193 (and (and (and $x294 $x171) $x188) $x57)))
 (let (($x354 (= true $x193)))
 (let (($x31 (not $x23)))
 (let (($x204 (=> $x31 $x354)))
 (let (($x338 (= $x204 true)))
 (let (($x108 (= $x338 true)))
 (let (($x198 (= $x108 true)))
 (let (($x142 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x202 (and $x142 $x204)))
 (let (($x70 (= (_ bv0 32) ?x44)))
 (let (($x161 (not $x70)))
 (let (($x205 (=> $x161 $x354)))
 (let (($x392 (= (bvand ?x169 (_ bv4294967280 32)) ?x169)))
 (let (($x160 (= (bvand ?x47 (_ bv4294967292 32)) ?x47)))
 (let (($x178 (and $x160 $x392)))
 (let (($x152 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x47 (bvsub ?x47 (_ bv8 32))) (bvult ?x47 (bvsub ?x47 (_ bv8 32))))))
 (let (($x186 (and (and (and $x152 $x171) $x160) $x178)))
 (let (($x181 (= true $x186)))
 (let (($x190 (=> $x70 $x181)))
 (let (($x302 (and $x190 $x205)))
 (let (($x18 (= true $x302)))
 (let (($x166 (or $x70 $x161)))
 (let (($x168 (and $x31 $x166)))
 (let (($x200 (=> $x168 $x18)))
 (let (($x194 (and $x200 $x202)))
 (let (($x53 (= $x194 true)))
 (let (($x15 (= $x53 true)))
 (let (($x101 (= $x15 true)))
 (let (($x197 (= $x200 true)))
 (let (($x36 (= $x197 true)))
 (let (($x203 (= $x36 true)))
 (let (($x122 (and $x31 $x70)))
 (let (($x155 (= $x122 true)))
 (let (($x167 (= $x155 true)))
 (let (($x170 (= $x167 true)))
 (let (($x297 (= $x142 true)))
 (let (($x162 (= $x297 true)))
 (let (($x137 (= $x162 true)))
 (let ((?x315 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x151 (= (_ bv0 32) ?x315)))
 (let ((?x144 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x147 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x144)))
 (let (($x135 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (and $x135 $x147)))
 (let (($x317 (and $x164 $x151)))
 (let (($x97 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x148 (and $x97 $x317)))
 (let (($x128 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x95 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x163 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x95 $x128)))))))
 (let (($x154 (and $x163 $x148)))
 (let (($x138 (= $x154 true)))
 (let (($x296 (= $x138 true)))
 (let (($x145 (= $x296 true)))
 (let (($x153 (and $x145 $x137)))
 (let (($x157 (and $x153 $x137)))
 (let (($x146 (and $x157 $x170)))
 (let (($x206 (and $x146 $x203)))
 (let (($x321 (and $x206 $x101)))
 (let (($x207 (and $x321 $x198)))
 (let (($x304 (and $x207 $x210)))
 (let (($x52 (and $x304 $x67)))
 (let (($x356 (and $x52 $x33)))
 (let (($x287 (and $x356 $x323)))
 (let (($x349 (and $x139 $x287)))
 (let (($x134 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x227 (and $x134 $x349)))
 (let (($x307 (and $x69 $x227)))
 (let (($x288 (and $x69 $x307)))
 (let (($x58 (bvugt ?x47 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x46 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x107 (=> (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x46 $x58)))))))
 (let (($x29 (=> (and $x122 (bvule ?x47 (bvsub (bvadd ?x47 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x46 $x58)))))))
 (let (($x43 (bvugt ?x120 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x11 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x102)))
 (let (($x9 (=> (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x11 $x43)))))))
 (let (($x54 (=> (and $x31 (bvule ?x120 (bvsub (bvadd ?x120 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x11 $x43)))))))
 (let (($x62 (and $x54 $x29)))
 (let (($x357 (and $x62 $x288)))
 (let (($x83 (=> $x357 $x76)))
 (not $x83))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 20
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x17 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x103 (concat ?x17 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x37 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x106 (bvadd ?x37 (_ bv3 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem ?x106) (concat ?x65 ?x103))))
 (let (($x20 (= (_ bv0 32) ?x122)))
 (let (($x55 (not $x20)))
 (let (($x196 (or $x20 $x55)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x31 (not $x23)))
 (let (($x57 (and $x31 $x196)))
 (let (($x193 (or $x23 $x57)))
 (let (($x354 (= $x193 true)))
 (let (($x205 (= $x354 true)))
 (let (($x175 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x190 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x183 (= $x190 $x175)))
 (let (($x186 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x392 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x181 (= $x392 $x186)))
 (let (($x182 (and $x181 $x183)))
 (let (($x320 (= $x182 true)))
 (let (($x143 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x8 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x298 (= $x8 $x143)))
 (let (($x299 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x156 (= $x300 $x299)))
 (let (($x319 (and $x156 $x298)))
 (let (($x49 (= $x319 true)))
 (let ((?x159 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x174 (bvuge ?x159 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x171 (= $x165 $x174)))
 (let (($x35 (= ?x159 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x184 (= $x152 $x35)))
 (let (($x176 (and $x184 $x171)))
 (let (($x173 (= $x176 true)))
 (let ((?x162 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x161 (concat ?x167 (concat ?x153 ?x162)))))
 (let (($x168 (= ?x166 input.dst.llvm-%t)))
 (let (($x28 (= $x168 true)))
 (let (($x150 (= $x28 true)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x148)))
 (let ((?x315 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x151 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x315)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x317 (and $x164 $x151)))
 (let (($x138 (and $x317 $x154)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x296 (and $x95 $x138)))
 (let (($x131 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x147 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x131)))))))
 (let (($x145 (and $x147 $x296)))
 (let (($x141 (= $x145 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x21 (and $x142 $x150)))
 (let (($x316 (and $x21 $x173)))
 (let (($x169 (and $x316 $x49)))
 (let (($x294 (and $x169 $x320)))
 (let (($x136 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x192 (and $x136 $x294)))
 (let (($x80 (= false false)))
 (let (($x189 (and $x80 $x192)))
 (let (($x188 (and $x80 $x189)))
 (let ((?x114 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x130 (bvugt ?x114 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x114 (_ bv3 32)))))
 (let (($x10 (=> (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x47 (and $x31 $x20)))
 (let (($x104 (=> (and $x47 (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x86 (bvugt ?x37 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x106)))
 (let (($x16 (=> (bvule ?x37 (bvsub (bvadd ?x37 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x86)))))))
 (let (($x38 (=> (and $x31 (bvule ?x37 (bvsub (bvadd ?x37 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x86)))))))
 (let (($x45 (and $x38 $x104)))
 (let (($x401 (and $x45 $x188)))
 (let (($x302 (=> $x401 $x205)))
 (not $x302))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x17 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x103 (concat ?x17 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x37 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x106 (bvadd ?x37 (_ bv3 32))))
 (let ((?x122 (concat (select input.dst.llvm-mem ?x106) (concat ?x65 ?x103))))
 (let (($x20 (= (_ bv0 32) ?x122)))
 (let (($x55 (not $x20)))
 (let (($x196 (or $x20 $x55)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let (($x31 (not $x23)))
 (let (($x57 (and $x31 $x196)))
 (let (($x193 (or $x23 $x57)))
 (let (($x354 (= $x193 true)))
 (let (($x205 (= $x354 true)))
 (let (($x175 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x190 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x183 (= $x190 $x175)))
 (let (($x186 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x392 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x181 (= $x392 $x186)))
 (let (($x182 (and $x181 $x183)))
 (let (($x320 (= $x182 true)))
 (let (($x143 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x8 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x298 (= $x8 $x143)))
 (let (($x299 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x300 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x156 (= $x300 $x299)))
 (let (($x319 (and $x156 $x298)))
 (let (($x49 (= $x319 true)))
 (let ((?x159 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x174 (bvuge ?x159 (_ bv1 32))))
 (let (($x165 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x171 (= $x165 $x174)))
 (let (($x35 (= ?x159 (_ bv0 32))))
 (let (($x152 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x184 (= $x152 $x35)))
 (let (($x176 (and $x184 $x171)))
 (let (($x173 (= $x176 true)))
 (let ((?x162 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x153 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x167 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x161 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x166 (concat ?x161 (concat ?x167 (concat ?x153 ?x162)))))
 (let (($x168 (= ?x166 input.dst.llvm-%t)))
 (let (($x28 (= $x168 true)))
 (let (($x150 (= $x28 true)))
 (let ((?x148 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x154 (= (_ bv0 32) ?x148)))
 (let ((?x315 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x151 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x315)))
 (let (($x164 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x317 (and $x164 $x151)))
 (let (($x138 (and $x317 $x154)))
 (let (($x95 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x296 (and $x95 $x138)))
 (let (($x131 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x147 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x131)))))))
 (let (($x145 (and $x147 $x296)))
 (let (($x141 (= $x145 true)))
 (let (($x158 (= $x141 true)))
 (let (($x142 (= $x158 true)))
 (let (($x21 (and $x142 $x150)))
 (let (($x316 (and $x21 $x173)))
 (let (($x169 (and $x316 $x49)))
 (let (($x294 (and $x169 $x320)))
 (let (($x136 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x192 (and $x136 $x294)))
 (let (($x80 (= false false)))
 (let (($x189 (and $x80 $x192)))
 (let (($x188 (and $x80 $x189)))
 (let ((?x114 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let (($x130 (bvugt ?x114 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x73 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd ?x114 (_ bv3 32)))))
 (let (($x10 (=> (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x47 (and $x31 $x20)))
 (let (($x104 (=> (and $x47 (bvule ?x114 (bvsub (bvadd ?x114 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x73 $x130)))))))
 (let (($x86 (bvugt ?x37 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x119 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x106)))
 (let (($x16 (=> (bvule ?x37 (bvsub (bvadd ?x37 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x119 $x86)))))))
 (let (($x38 (=> (and $x31 (bvule ?x37 (bvsub (bvadd ?x37 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x119 $x86)))))))
 (let (($x45 (and $x38 $x104)))
 (let (($x401 (and $x45 $x188)))
 (let (($x302 (=> $x401 $x205)))
 (not $x302))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 21
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5057X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x364 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x256 (concat ?x364 (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv8 32))))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x273 (concat ?x283 ?x256))))
 (let (($x275 (= ?x270 ?x270)))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x351 (concat ?x305 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x306 (concat ?x63 (concat ?x235 ?x351))))
 (let (($x232 (= (_ bv0 32) ?x306)))
 (let ((?x397 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x308 (bvuge ?x397 (_ bv1 32))))
 (let (($x40 (=> $x308 $x275)))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x254 (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv4 32))))))
 (let ((?x404 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x269 (concat ?x255 (concat ?x404 ?x276))))
 (let (($x309 (= ?x269 ?x269)))
 (let (($x263 (=> $x308 $x309)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5057X))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv2 32))) ?x238)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv3 32))) ?x262)))
 (let (($x252 (= ?x250 ?x250)))
 (let (($x435 (=> $x308 $x252)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x17 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x27 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x27 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x129) (concat ?x44 ?x17))))
 (let ((?x245 (bvadd ?x47 (_ bv8 32))))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x434))))
 (let (($x249 (= (_ bv0 32) ?x261)))
 (let ((?x59 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x362 (bvuge ?x59 (_ bv1 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x306 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x306 (_ bv8 32))))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x306 (_ bv8 32)) (_ bv2 32))) ?x267)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x306 (_ bv8 32)) (_ bv3 32))) ?x368)))
 (let (($x331 (= (_ bv0 32) ?x324)))
 (let ((?x292 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x292 (_ bv1 32))))
 (let (($x358 (= $x133 $x362)))
 (let (($x241 (=> $x308 $x358)))
 (let (($x81 (= false false)))
 (let (($x363 (= ?x292 (_ bv0 32))))
 (let (($x93 (and $x308 $x363)))
 (let (($x64 (=> $x93 $x81)))
 (let (($x76 (= ?x59 (_ bv0 32))))
 (let (($x83 (= $x363 $x76)))
 (let (($x72 (=> $x308 $x83)))
 (let (($x74 (= (_ bv0 32) ?x47)))
 (let ((?x228 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x228 (_ bv1 32))))
 (let (($x236 (= $x308 $x274)))
 (let (($x328 (= ?x397 (_ bv0 32))))
 (let (($x239 (=> $x328 $x81)))
 (let (($x310 (and (and (and (and (= ?x306 ?x47) (= $x328 (= ?x228 (_ bv0 32)))) $x239) $x236) $x72)))
 (let (($x313 (and (and (and (and (and $x310 $x64) $x241) $x435) $x263) $x40)))
 (let (($x247 (not true)))
 (let (($x42 (or $x247 $x313)))
 (let (($x359 (= true true)))
 (let (($x24 (and $x359 $x42)))
 (let (($x26 (= $x24 true)))
 (let (($x227 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x349 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x307 (= $x349 $x227)))
 (let (($x323 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x231 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x287 (= $x231 $x323)))
 (let (($x288 (and $x287 $x307)))
 (let (($x357 (= $x288 true)))
 (let (($x56 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x219 (= $x131 $x56)))
 (let (($x356 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x220 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x5 (= $x220 $x356)))
 (let (($x230 (and $x5 $x219)))
 (let (($x322 (= $x230 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x222 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x222 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x355 (= $x94 $x214)))
 (let (($x330 (= ?x222 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x224 (= $x52 $x330)))
 (let (($x433 (and $x224 $x355)))
 (let (($x215 (= $x433 true)))
 (let ((?x99 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x32 (concat ?x303 (concat ?x139 (concat ?x210 ?x99)))))
 (let (($x213 (= ?x32 input.dst.llvm-%t)))
 (let (($x105 (= $x213 true)))
 (let (($x344 (= $x105 true)))
 (let (($x200 (= (bvand ?x47 (_ bv4294967280 32)) ?x47)))
 (let (($x297 (= (bvand ?x27 (_ bv4294967292 32)) ?x27)))
 (let (($x197 (and $x297 $x200)))
 (let (($x319 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x49 (and true $x319)))
 (let (($x123 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x27 (bvsub ?x27 (_ bv4 32))) (bvult ?x27 (bvsub ?x27 (_ bv4 32))))))
 (let (($x206 (and (and (and $x123 $x49) $x297) $x197)))
 (let (($x204 (= true $x206)))
 (let (($x31 (not $x23)))
 (let (($x198 (=> $x31 $x204)))
 (let (($x201 (= $x198 true)))
 (let (($x393 (= $x201 true)))
 (let (($x84 (= $x393 true)))
 (let (($x168 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x207 (and $x168 $x198)))
 (let (($x159 (not $x74)))
 (let (($x202 (=> $x159 $x204)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x190 (concat ?x181 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x58 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x58 (_ bv3 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem ?x91) (concat ?x183 ?x190))))
 (let (($x189 (= (bvand ?x294 (_ bv4294967280 32)) ?x294)))
 (let (($x392 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let (($x188 (and $x392 $x189)))
 (let (($x299 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv8 32))) (bvult ?x58 (bvsub ?x58 (_ bv8 32))))))
 (let (($x196 (and (and (and $x299 $x49) $x392) $x188)))
 (let (($x57 (= true $x196)))
 (let (($x193 (=> $x74 $x57)))
 (let (($x194 (and $x193 $x202)))
 (let (($x53 (= true $x194)))
 (let (($x176 (or $x74 $x159)))
 (let (($x173 (and $x31 $x176)))
 (let (($x15 (=> $x173 $x53)))
 (let (($x223 (and $x15 $x207)))
 (let (($x211 (= $x223 true)))
 (let (($x217 (= $x211 true)))
 (let (($x350 (= $x217 true)))
 (let (($x101 (= $x15 true)))
 (let (($x321 (= $x101 true)))
 (let (($x338 (= $x321 true)))
 (let (($x35 (and $x31 $x159)))
 (let (($x184 (= $x35 true)))
 (let (($x165 (= $x184 true)))
 (let (($x174 (= $x165 true)))
 (let (($x28 (= $x168 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x146)))
 (let ((?x141 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x158 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x141)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x145 $x158)))
 (let (($x155 (and $x142 $x161)))
 (let (($x135 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x167 (and $x135 $x155)))
 (let (($x315 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x315)))))))
 (let (($x137 (and $x296 $x167)))
 (let (($x153 (= $x137 true)))
 (let (($x162 (= $x153 true)))
 (let (($x157 (= $x162 true)))
 (let (($x100 (and $x157 $x21)))
 (let (($x152 (and $x100 $x21)))
 (let (($x171 (and $x152 $x174)))
 (let (($x108 (and $x171 $x338)))
 (let (($x208 (and $x108 $x350)))
 (let (($x209 (and $x208 $x84)))
 (let (($x67 (and $x209 $x344)))
 (let (($x212 (and $x67 $x215)))
 (let (($x430 (and $x212 $x322)))
 (let (($x226 (and $x430 $x357)))
 (let (($x163 (and $x94 $x131)))
 (let (($x399 (and $x163 $x226)))
 (let (($x30 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x218 (and $x30 $x399)))
 (let (($x352 (and $x81 $x218)))
 (let (($x221 (and $x81 $x352)))
 (let (($x29 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x134 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x114 (and $x31 $x74)))
 (let (($x69 (=> (and $x114 (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x54 (bvugt ?x27 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x125 (=> (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x54)))))))
 (let (($x102 (=> (and $x31 (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x54)))))))
 (let (($x14 (and $x102 $x69)))
 (let (($x246 (and $x14 $x221)))
 (let (($x126 (=> $x246 $x26)))
 (not $x126))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5057X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x364 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x256 (concat ?x364 (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv8 32))))))
 (let ((?x283 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x270 (concat ?x273 (concat ?x283 ?x256))))
 (let (($x275 (= ?x270 ?x270)))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x351 (concat ?x305 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x235 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x306 (concat ?x63 (concat ?x235 ?x351))))
 (let (($x232 (= (_ bv0 32) ?x306)))
 (let ((?x397 (ite $x232 (_ bv0 32) (_ bv1 32))))
 (let (($x308 (bvuge ?x397 (_ bv1 32))))
 (let (($x40 (=> $x308 $x275)))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x276 (concat ?x254 (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv4 32))))))
 (let ((?x404 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5057X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x269 (concat ?x255 (concat ?x404 ?x276))))
 (let (($x309 (= ?x269 ?x269)))
 (let (($x263 (=> $x308 $x309)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5057X))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv2 32))) ?x238)))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5057X (_ bv3 32))) ?x262)))
 (let (($x252 (= ?x250 ?x250)))
 (let (($x435 (=> $x308 $x252)))
 (let ((?x60 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x17 (concat ?x60 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x27 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x129 (bvadd ?x27 (_ bv3 32))))
 (let ((?x47 (concat (select input.dst.llvm-mem ?x129) (concat ?x44 ?x17))))
 (let ((?x245 (bvadd ?x47 (_ bv8 32))))
 (let ((?x434 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv1 32))) (select input.dst.llvm-mem ?x245))))
 (let ((?x261 (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x245 (_ bv2 32))) ?x434))))
 (let (($x249 (= (_ bv0 32) ?x261)))
 (let ((?x59 (ite $x249 (_ bv0 32) (_ bv1 32))))
 (let (($x362 (bvuge ?x59 (_ bv1 32))))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x306 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x306 (_ bv8 32))))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x306 (_ bv8 32)) (_ bv2 32))) ?x267)))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x306 (_ bv8 32)) (_ bv3 32))) ?x368)))
 (let (($x331 (= (_ bv0 32) ?x324)))
 (let ((?x292 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x292 (_ bv1 32))))
 (let (($x358 (= $x133 $x362)))
 (let (($x241 (=> $x308 $x358)))
 (let (($x81 (= false false)))
 (let (($x363 (= ?x292 (_ bv0 32))))
 (let (($x93 (and $x308 $x363)))
 (let (($x64 (=> $x93 $x81)))
 (let (($x76 (= ?x59 (_ bv0 32))))
 (let (($x83 (= $x363 $x76)))
 (let (($x72 (=> $x308 $x83)))
 (let (($x74 (= (_ bv0 32) ?x47)))
 (let ((?x228 (ite $x74 (_ bv0 32) (_ bv1 32))))
 (let (($x274 (bvuge ?x228 (_ bv1 32))))
 (let (($x236 (= $x308 $x274)))
 (let (($x328 (= ?x397 (_ bv0 32))))
 (let (($x239 (=> $x328 $x81)))
 (let (($x310 (and (and (and (and (= ?x306 ?x47) (= $x328 (= ?x228 (_ bv0 32)))) $x239) $x236) $x72)))
 (let (($x313 (and (and (and (and (and $x310 $x64) $x241) $x435) $x263) $x40)))
 (let (($x247 (not true)))
 (let (($x42 (or $x247 $x313)))
 (let (($x359 (= true true)))
 (let (($x24 (and $x359 $x42)))
 (let (($x26 (= $x24 true)))
 (let (($x227 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x349 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x307 (= $x349 $x227)))
 (let (($x323 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x231 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x287 (= $x231 $x323)))
 (let (($x288 (and $x287 $x307)))
 (let (($x357 (= $x288 true)))
 (let (($x56 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x219 (= $x131 $x56)))
 (let (($x356 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x220 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x5 (= $x220 $x356)))
 (let (($x230 (and $x5 $x219)))
 (let (($x322 (= $x230 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x222 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x214 (bvuge ?x222 (_ bv1 32))))
 (let (($x94 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x355 (= $x94 $x214)))
 (let (($x330 (= ?x222 (_ bv0 32))))
 (let (($x52 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x224 (= $x52 $x330)))
 (let (($x433 (and $x224 $x355)))
 (let (($x215 (= $x433 true)))
 (let ((?x99 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x303 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x32 (concat ?x303 (concat ?x139 (concat ?x210 ?x99)))))
 (let (($x213 (= ?x32 input.dst.llvm-%t)))
 (let (($x105 (= $x213 true)))
 (let (($x344 (= $x105 true)))
 (let (($x200 (= (bvand ?x47 (_ bv4294967280 32)) ?x47)))
 (let (($x297 (= (bvand ?x27 (_ bv4294967292 32)) ?x27)))
 (let (($x197 (and $x297 $x200)))
 (let (($x319 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x49 (and true $x319)))
 (let (($x123 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x27 (bvsub ?x27 (_ bv4 32))) (bvult ?x27 (bvsub ?x27 (_ bv4 32))))))
 (let (($x206 (and (and (and $x123 $x49) $x297) $x197)))
 (let (($x204 (= true $x206)))
 (let (($x31 (not $x23)))
 (let (($x198 (=> $x31 $x204)))
 (let (($x201 (= $x198 true)))
 (let (($x393 (= $x201 true)))
 (let (($x84 (= $x393 true)))
 (let (($x168 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x207 (and $x168 $x198)))
 (let (($x159 (not $x74)))
 (let (($x202 (=> $x159 $x204)))
 (let ((?x181 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x190 (concat ?x181 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x58 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x58 (_ bv3 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem ?x91) (concat ?x183 ?x190))))
 (let (($x189 (= (bvand ?x294 (_ bv4294967280 32)) ?x294)))
 (let (($x392 (= (bvand ?x58 (_ bv4294967292 32)) ?x58)))
 (let (($x188 (and $x392 $x189)))
 (let (($x299 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x58 (bvsub ?x58 (_ bv8 32))) (bvult ?x58 (bvsub ?x58 (_ bv8 32))))))
 (let (($x196 (and (and (and $x299 $x49) $x392) $x188)))
 (let (($x57 (= true $x196)))
 (let (($x193 (=> $x74 $x57)))
 (let (($x194 (and $x193 $x202)))
 (let (($x53 (= true $x194)))
 (let (($x176 (or $x74 $x159)))
 (let (($x173 (and $x31 $x176)))
 (let (($x15 (=> $x173 $x53)))
 (let (($x223 (and $x15 $x207)))
 (let (($x211 (= $x223 true)))
 (let (($x217 (= $x211 true)))
 (let (($x350 (= $x217 true)))
 (let (($x101 (= $x15 true)))
 (let (($x321 (= $x101 true)))
 (let (($x338 (= $x321 true)))
 (let (($x35 (and $x31 $x159)))
 (let (($x184 (= $x35 true)))
 (let (($x165 (= $x184 true)))
 (let (($x174 (= $x165 true)))
 (let (($x28 (= $x168 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let ((?x146 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x161 (= (_ bv0 32) ?x146)))
 (let ((?x141 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x158 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x141)))
 (let (($x145 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (and $x145 $x158)))
 (let (($x155 (and $x142 $x161)))
 (let (($x135 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x167 (and $x135 $x155)))
 (let (($x315 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x164 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x296 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x164 $x315)))))))
 (let (($x137 (and $x296 $x167)))
 (let (($x153 (= $x137 true)))
 (let (($x162 (= $x153 true)))
 (let (($x157 (= $x162 true)))
 (let (($x100 (and $x157 $x21)))
 (let (($x152 (and $x100 $x21)))
 (let (($x171 (and $x152 $x174)))
 (let (($x108 (and $x171 $x338)))
 (let (($x208 (and $x108 $x350)))
 (let (($x209 (and $x208 $x84)))
 (let (($x67 (and $x209 $x344)))
 (let (($x212 (and $x67 $x215)))
 (let (($x430 (and $x212 $x322)))
 (let (($x226 (and $x430 $x357)))
 (let (($x163 (and $x94 $x131)))
 (let (($x399 (and $x163 $x226)))
 (let (($x30 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x218 (and $x30 $x399)))
 (let (($x352 (and $x81 $x218)))
 (let (($x221 (and $x81 $x352)))
 (let (($x29 (bvugt ?x58 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x107 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x134 (=> (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x114 (and $x31 $x74)))
 (let (($x69 (=> (and $x114 (bvule ?x58 (bvsub (bvadd ?x58 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x107 $x29)))))))
 (let (($x54 (bvugt ?x27 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x9 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x129)))
 (let (($x125 (=> (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x9 $x54)))))))
 (let (($x102 (=> (and $x31 (bvule ?x27 (bvsub (bvadd ?x27 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x9 $x54)))))))
 (let (($x14 (and $x102 $x69)))
 (let (($x246 (and $x14 $x221)))
 (let (($x126 (=> $x246 $x26)))
 (not $x126))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 22
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5087X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x346 (concat ?x85 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv8 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x364 (concat ?x345 (concat ?x273 ?x346))))
 (let (($x251 (= ?x364 ?x364)))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x291 (concat ?x305 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x397 (concat ?x232 (concat ?x233 ?x291))))
 (let (($x328 (= (_ bv0 32) ?x397)))
 (let ((?x228 (ite $x328 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x228 (_ bv1 32))))
 (let (($x256 (=> $x253 $x251)))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x470 (concat ?x266 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv4 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x471 (concat ?x254 (concat ?x367 ?x470))))
 (let (($x276 (= ?x471 ?x471)))
 (let (($x71 (=> $x253 $x276)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5087X))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv2 32))) ?x257)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv3 32))) ?x395)))
 (let (($x262 (= ?x238 ?x238)))
 (let (($x250 (=> $x253 $x262)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x186 (concat ?x183 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x130 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x130 (_ bv3 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem ?x62) (concat ?x178 ?x186))))
 (let ((?x243 (bvadd ?x294 (_ bv8 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x268))))
 (let (($x83 (= (_ bv0 32) ?x76)))
 (let ((?x72 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x72 (_ bv1 32))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x397 (_ bv8 32))))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv8 32)) (_ bv2 32))) ?x236)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv8 32)) (_ bv3 32))) ?x285)))
 (let (($x396 (= (_ bv0 32) ?x237)))
 (let ((?x394 (ite $x396 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x394 (_ bv1 32))))
 (let (($x362 (= $x92 $x133)))
 (let (($x358 (=> $x253 $x362)))
 (let (($x310 (= ?x72 (_ bv0 32))))
 (let (($x472 (= ?x394 (_ bv0 32))))
 (let (($x93 (= $x472 $x310)))
 (let (($x64 (=> $x253 $x93)))
 (let (($x331 (= (_ bv0 32) ?x294)))
 (let ((?x292 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (bvuge ?x292 (_ bv1 32))))
 (let (($x240 (= $x253 $x244)))
 (let (($x363 (= ?x292 (_ bv0 32))))
 (let (($x258 (= ?x228 (_ bv0 32))))
 (let (($x245 (= $x258 $x363)))
 (let (($x324 (= ?x397 ?x294)))
 (let (($x128 (= false false)))
 (let (($x267 (and $x253 $x472)))
 (let (($x368 (=> $x267 $x128)))
 (let (($x289 (=> $x258 $x128)))
 (let (($x42 (and (and (and (and (and (and $x289 $x368) $x324) $x245) $x240) $x64) $x358)))
 (let (($x126 (and (and (and $x42 $x250) $x71) $x256)))
 (let (($x63 (not true)))
 (let (($x199 (or $x63 $x126)))
 (let (($x280 (= true true)))
 (let (($x96 (and $x280 $x199)))
 (let (($x120 (= $x96 true)))
 (let (($x357 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x288 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x226 (= $x288 $x357)))
 (let (($x227 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x287 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x307 (= $x287 $x227)))
 (let (($x399 (and $x307 $x226)))
 (let (($x218 (= $x399 true)))
 (let (($x322 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x430 (= $x147 $x322)))
 (let (($x219 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x5 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x230 (= $x5 $x219)))
 (let (($x50 (and $x230 $x430)))
 (let (($x231 (= $x50 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x214 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x214 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x212 (= $x131 $x215)))
 (let (($x355 (= ?x214 (_ bv0 32))))
 (let (($x224 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x433 (= $x224 $x355)))
 (let (($x220 (and $x433 $x212)))
 (let (($x33 (= $x220 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x344 (concat ?x105 (concat ?x216 (concat ?x210 ?x139)))))
 (let (($x67 (= ?x344 input.dst.llvm-%t)))
 (let (($x52 (= $x67 true)))
 (let (($x222 (= $x52 true)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x60 (concat ?x65 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x66 (bvadd ?x11 (_ bv3 32))))
 (let ((?x114 (concat (select input.dst.llvm-mem ?x66) (concat ?x122 ?x60))))
 (let (($x200 (= (bvand ?x114 (_ bv4294967280 32)) ?x114)))
 (let (($x203 (= (bvand ?x11 (_ bv4294967292 32)) ?x11)))
 (let (($x197 (and $x203 $x200)))
 (let (($x401 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x169 (and true $x401)))
 (let (($x140 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x11 (bvsub ?x11 (_ bv4 32))) (bvult ?x11 (bvsub ?x11 (_ bv4 32))))))
 (let (($x202 (and (and (and $x140 $x169) $x203) $x197)))
 (let (($x194 (= true $x202)))
 (let (($x31 (not $x23)))
 (let (($x223 (=> $x31 $x194)))
 (let (($x84 (= $x223 true)))
 (let (($x209 (= $x84 true)))
 (let (($x68 (= $x209 true)))
 (let (($x21 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x211 (and $x21 $x223)))
 (let (($x46 (= (_ bv0 32) ?x114)))
 (let (($x173 (not $x46)))
 (let (($x53 (=> $x173 $x194)))
 (let (($x189 (= (bvand ?x294 (_ bv4294967280 32)) ?x294)))
 (let (($x55 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x188 (and $x55 $x189)))
 (let (($x156 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv8 32))) (bvult ?x130 (bvsub ?x130 (_ bv8 32))))))
 (let (($x193 (and (and (and $x156 $x169) $x55) $x188)))
 (let (($x205 (= true $x193)))
 (let (($x354 (=> $x46 $x205)))
 (let (($x15 (and $x354 $x53)))
 (let (($x101 (= true $x15)))
 (let (($x160 (or $x46 $x173)))
 (let (($x316 (and $x31 $x160)))
 (let (($x321 (=> $x316 $x101)))
 (let (($x217 (and $x321 $x211)))
 (let (($x350 (= $x217 true)))
 (let (($x208 (= $x350 true)))
 (let (($x201 (= $x208 true)))
 (let (($x338 (= $x321 true)))
 (let (($x108 (= $x338 true)))
 (let (($x198 (= $x108 true)))
 (let (($x58 (and $x31 $x46)))
 (let (($x165 (= $x58 true)))
 (let (($x174 (= $x165 true)))
 (let (($x171 (= $x174 true)))
 (let (($x100 (= $x21 true)))
 (let (($x152 (= $x100 true)))
 (let (($x159 (= $x152 true)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x167)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x161 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x142 $x161)))
 (let (($x153 (and $x155 $x137)))
 (let (($x164 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x164 $x153)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x158 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x148 $x154)))))))
 (let (($x157 (and $x158 $x162)))
 (let (($x170 (= $x157 true)))
 (let (($x166 (= $x170 true)))
 (let (($x168 (= $x166 true)))
 (let (($x35 (and $x168 $x159)))
 (let (($x184 (and $x35 $x159)))
 (let (($x176 (and $x184 $x171)))
 (let (($x207 (and $x176 $x198)))
 (let (($x393 (and $x207 $x201)))
 (let (($x303 (and $x393 $x68)))
 (let (($x330 (and $x303 $x222)))
 (let (($x356 (and $x330 $x33)))
 (let (($x284 (and $x356 $x231)))
 (let (($x352 (and $x284 $x218)))
 (let (($x295 (and $x131 $x147)))
 (let (($x221 (and $x295 $x352)))
 (let (($x94 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x246 (and $x94 $x221)))
 (let (($x359 (and $x128 $x246)))
 (let (($x247 (and $x128 $x359)))
 (let (($x104 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x136 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x80 (=> (and $x58 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x38 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x39 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x16 $x38)))))))
 (let (($x106 (=> (and $x31 (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x16 $x38)))))))
 (let (($x91 (and $x106 $x80)))
 (let (($x225 (and $x91 $x247)))
 (let (($x314 (=> $x225 $x120)))
 (not $x314)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5087X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x85 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x346 (concat ?x85 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv8 32))))))
 (let ((?x273 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x345 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x364 (concat ?x345 (concat ?x273 ?x346))))
 (let (($x251 (= ?x364 ?x364)))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x291 (concat ?x305 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x233 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x232 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x397 (concat ?x232 (concat ?x233 ?x291))))
 (let (($x328 (= (_ bv0 32) ?x397)))
 (let ((?x228 (ite $x328 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x228 (_ bv1 32))))
 (let (($x256 (=> $x253 $x251)))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x470 (concat ?x266 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv4 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x471 (concat ?x254 (concat ?x367 ?x470))))
 (let (($x276 (= ?x471 ?x471)))
 (let (($x71 (=> $x253 $x276)))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5087X))))
 (let ((?x395 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv2 32))) ?x257)))
 (let ((?x238 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv3 32))) ?x395)))
 (let (($x262 (= ?x238 ?x238)))
 (let (($x250 (=> $x253 $x262)))
 (let ((?x183 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x186 (concat ?x183 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x178 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x130 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x130 (_ bv3 32))))
 (let ((?x294 (concat (select input.dst.llvm-mem ?x62) (concat ?x178 ?x186))))
 (let ((?x243 (bvadd ?x294 (_ bv8 32))))
 (let ((?x268 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv1 32))) (select input.dst.llvm-mem ?x243))))
 (let ((?x76 (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x243 (_ bv2 32))) ?x268))))
 (let (($x83 (= (_ bv0 32) ?x76)))
 (let ((?x72 (ite $x83 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x72 (_ bv1 32))))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x397 (_ bv8 32))))))
 (let ((?x285 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv8 32)) (_ bv2 32))) ?x236)))
 (let ((?x237 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x397 (_ bv8 32)) (_ bv3 32))) ?x285)))
 (let (($x396 (= (_ bv0 32) ?x237)))
 (let ((?x394 (ite $x396 (_ bv0 32) (_ bv1 32))))
 (let (($x92 (bvuge ?x394 (_ bv1 32))))
 (let (($x362 (= $x92 $x133)))
 (let (($x358 (=> $x253 $x362)))
 (let (($x310 (= ?x72 (_ bv0 32))))
 (let (($x472 (= ?x394 (_ bv0 32))))
 (let (($x93 (= $x472 $x310)))
 (let (($x64 (=> $x253 $x93)))
 (let (($x331 (= (_ bv0 32) ?x294)))
 (let ((?x292 (ite $x331 (_ bv0 32) (_ bv1 32))))
 (let (($x244 (bvuge ?x292 (_ bv1 32))))
 (let (($x240 (= $x253 $x244)))
 (let (($x363 (= ?x292 (_ bv0 32))))
 (let (($x258 (= ?x228 (_ bv0 32))))
 (let (($x245 (= $x258 $x363)))
 (let (($x324 (= ?x397 ?x294)))
 (let (($x128 (= false false)))
 (let (($x267 (and $x253 $x472)))
 (let (($x368 (=> $x267 $x128)))
 (let (($x289 (=> $x258 $x128)))
 (let (($x42 (and (and (and (and (and (and $x289 $x368) $x324) $x245) $x240) $x64) $x358)))
 (let (($x126 (and (and (and $x42 $x250) $x71) $x256)))
 (let (($x63 (not true)))
 (let (($x199 (or $x63 $x126)))
 (let (($x280 (= true true)))
 (let (($x96 (and $x280 $x199)))
 (let (($x120 (= $x96 true)))
 (let (($x357 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x288 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x226 (= $x288 $x357)))
 (let (($x227 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x287 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x307 (= $x287 $x227)))
 (let (($x399 (and $x307 $x226)))
 (let (($x218 (= $x399 true)))
 (let (($x322 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x430 (= $x147 $x322)))
 (let (($x219 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x5 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x230 (= $x5 $x219)))
 (let (($x50 (and $x230 $x430)))
 (let (($x231 (= $x50 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x214 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x215 (bvuge ?x214 (_ bv1 32))))
 (let (($x131 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x212 (= $x131 $x215)))
 (let (($x355 (= ?x214 (_ bv0 32))))
 (let (($x224 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x433 (= $x224 $x355)))
 (let (($x220 (and $x433 $x212)))
 (let (($x33 (= $x220 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x210 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x216 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x105 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x344 (concat ?x105 (concat ?x216 (concat ?x210 ?x139)))))
 (let (($x67 (= ?x344 input.dst.llvm-%t)))
 (let (($x52 (= $x67 true)))
 (let (($x222 (= $x52 true)))
 (let ((?x65 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x60 (concat ?x65 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x11 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x66 (bvadd ?x11 (_ bv3 32))))
 (let ((?x114 (concat (select input.dst.llvm-mem ?x66) (concat ?x122 ?x60))))
 (let (($x200 (= (bvand ?x114 (_ bv4294967280 32)) ?x114)))
 (let (($x203 (= (bvand ?x11 (_ bv4294967292 32)) ?x11)))
 (let (($x197 (and $x203 $x200)))
 (let (($x401 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x169 (and true $x401)))
 (let (($x140 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x11 (bvsub ?x11 (_ bv4 32))) (bvult ?x11 (bvsub ?x11 (_ bv4 32))))))
 (let (($x202 (and (and (and $x140 $x169) $x203) $x197)))
 (let (($x194 (= true $x202)))
 (let (($x31 (not $x23)))
 (let (($x223 (=> $x31 $x194)))
 (let (($x84 (= $x223 true)))
 (let (($x209 (= $x84 true)))
 (let (($x68 (= $x209 true)))
 (let (($x21 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x211 (and $x21 $x223)))
 (let (($x46 (= (_ bv0 32) ?x114)))
 (let (($x173 (not $x46)))
 (let (($x53 (=> $x173 $x194)))
 (let (($x189 (= (bvand ?x294 (_ bv4294967280 32)) ?x294)))
 (let (($x55 (= (bvand ?x130 (_ bv4294967292 32)) ?x130)))
 (let (($x188 (and $x55 $x189)))
 (let (($x156 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x130 (bvsub ?x130 (_ bv8 32))) (bvult ?x130 (bvsub ?x130 (_ bv8 32))))))
 (let (($x193 (and (and (and $x156 $x169) $x55) $x188)))
 (let (($x205 (= true $x193)))
 (let (($x354 (=> $x46 $x205)))
 (let (($x15 (and $x354 $x53)))
 (let (($x101 (= true $x15)))
 (let (($x160 (or $x46 $x173)))
 (let (($x316 (and $x31 $x160)))
 (let (($x321 (=> $x316 $x101)))
 (let (($x217 (and $x321 $x211)))
 (let (($x350 (= $x217 true)))
 (let (($x208 (= $x350 true)))
 (let (($x201 (= $x208 true)))
 (let (($x338 (= $x321 true)))
 (let (($x108 (= $x338 true)))
 (let (($x198 (= $x108 true)))
 (let (($x58 (and $x31 $x46)))
 (let (($x165 (= $x58 true)))
 (let (($x174 (= $x165 true)))
 (let (($x171 (= $x174 true)))
 (let (($x100 (= $x21 true)))
 (let (($x152 (= $x100 true)))
 (let (($x159 (= $x152 true)))
 (let ((?x167 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x137 (= (_ bv0 32) ?x167)))
 (let ((?x146 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x161 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x146)))
 (let (($x142 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x155 (and $x142 $x161)))
 (let (($x153 (and $x155 $x137)))
 (let (($x164 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x162 (and $x164 $x153)))
 (let (($x154 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x148 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x158 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x148 $x154)))))))
 (let (($x157 (and $x158 $x162)))
 (let (($x170 (= $x157 true)))
 (let (($x166 (= $x170 true)))
 (let (($x168 (= $x166 true)))
 (let (($x35 (and $x168 $x159)))
 (let (($x184 (and $x35 $x159)))
 (let (($x176 (and $x184 $x171)))
 (let (($x207 (and $x176 $x198)))
 (let (($x393 (and $x207 $x201)))
 (let (($x303 (and $x393 $x68)))
 (let (($x330 (and $x303 $x222)))
 (let (($x356 (and $x330 $x33)))
 (let (($x284 (and $x356 $x231)))
 (let (($x352 (and $x284 $x218)))
 (let (($x295 (and $x131 $x147)))
 (let (($x221 (and $x295 $x352)))
 (let (($x94 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x246 (and $x94 $x221)))
 (let (($x359 (and $x128 $x246)))
 (let (($x247 (and $x128 $x359)))
 (let (($x104 (bvugt ?x130 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x10 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x136 (=> (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x80 (=> (and $x58 (bvule ?x130 (bvsub (bvadd ?x130 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x10 $x104)))))))
 (let (($x38 (bvugt ?x11 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x16 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x66)))
 (let (($x39 (=> (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x16 $x38)))))))
 (let (($x106 (=> (and $x31 (bvule ?x11 (bvsub (bvadd ?x11 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x16 $x38)))))))
 (let (($x91 (and $x106 $x80)))
 (let (($x225 (and $x91 $x247)))
 (let (($x314 (=> $x225 $x120)))
 (not $x314)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x0024bd34)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x10000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00100000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00010000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #x24)
                                #x0024bc28
                                #x20)
                         #x0024bd37
                         #x00)
                  #x0024bc29
                  #xbc)))
(let ((a!2 (store (store (store (store a!1 #x0024bc2a #x00) #x0024bc2b #x00)
                         #x0024bd34
                         #x20)
                  #x0024bd35
                  #xbc)))
  (store (store (store (store a!2 #x0024bc27 #x00) #x0024bc24 #x00)
                #x0024bc26
                #x00)
         #x0024bc25
         #x00))))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x0024bc20)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x0024bd34)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x0024bd37)
  (define-fun input.ind-%var5087X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5087X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483655 32) (_ bv32 8)) (_ bv536870920 32) (_ bv16 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv536870912 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483652 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483652 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483655 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 23
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5087X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x334 (concat ?x177 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv8 32))))))
 (let ((?x429 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x336 (concat ?x361 (concat ?x429 ?x334))))
 (let (($x335 (= ?x336 ?x336)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x310 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x358 (concat ?x362 (concat ?x313 ?x93))))
 (let (($x42 (= (_ bv0 32) ?x358)))
 (let ((?x241 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (bvuge ?x241 (_ bv1 32))))
 (let (($x348 (=> $x265 $x335)))
 (let ((?x360 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x89 (concat ?x360 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv4 32))))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x48 (concat ?x61 (concat ?x333 ?x89))))
 (let (($x329 (= ?x48 ?x48)))
 (let (($x312 (=> $x265 $x329)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5087X))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv2 32))) ?x281)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv3 32))) ?x127)))
 (let (($x272 (= ?x109 ?x109)))
 (let (($x366 (=> $x265 $x272)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x183 (concat ?x175 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x29 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x29 (_ bv3 32))))
 (let ((?x192 (concat (select input.dst.llvm-mem ?x45) (concat ?x186 ?x183))))
 (let ((?x26 (bvadd ?x192 (_ bv8 32))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x26 (_ bv1 32))) (select input.dst.llvm-mem ?x26))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x26 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x26 (_ bv2 32))) ?x277))))
 (let (($x364 (= (_ bv0 32) ?x116)))
 (let ((?x251 (ite $x364 (_ bv0 32) (_ bv1 32))))
 (let (($x120 (bvuge ?x251 (_ bv1 32))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x358 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x358 (_ bv8 32))))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x358 (_ bv8 32)) (_ bv2 32))) ?x257)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x358 (_ bv8 32)) (_ bv3 32))) ?x262)))
 (let (($x248 (= (_ bv0 32) ?x252)))
 (let ((?x254 (ite $x248 (_ bv0 32) (_ bv1 32))))
 (let (($x96 (bvuge ?x254 (_ bv1 32))))
 (let (($x314 (= $x96 $x120)))
 (let (($x78 (=> $x265 $x314)))
 (let (($x256 (= ?x251 (_ bv0 32))))
 (let (($x255 (= ?x254 (_ bv0 32))))
 (let (($x126 (= $x255 $x256)))
 (let (($x199 (=> $x265 $x126)))
 (let (($x435 (= (_ bv0 32) ?x192)))
 (let ((?x470 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (bvuge ?x470 (_ bv1 32))))
 (let (($x71 (= $x265 $x276)))
 (let (($x404 (= ?x470 (_ bv0 32))))
 (let (($x365 (= ?x241 (_ bv0 32))))
 (let (($x471 (= $x365 $x404)))
 (let (($x266 (= ?x358 ?x192)))
 (let (($x144 (= false false)))
 (let (($x367 (and $x265 $x255)))
 (let (($x12 (=> $x367 $x144)))
 (let (($x242 (=> $x365 $x144)))
 (let (($x343 (and (and (and (and (and (and $x242 $x12) $x266) $x471) $x71) $x199) $x78)))
 (let (($x400 (and (and (and $x343 $x366) $x312) $x348)))
 (let (($x261 (not true)))
 (let (($x403 (or $x261 $x400)))
 (let (($x268 (= true true)))
 (let (($x337 (and $x268 $x403)))
 (let (($x339 (= $x337 true)))
 (let (($x245 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x275 (= $x363 $x245)))
 (let (($x331 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x292 (= $x324 $x331)))
 (let (($x267 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x472 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x368 (= $x472 $x267)))
 (let (($x396 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x285 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x394 (= $x285 $x396)))
 (let (($x402 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x243 (and (and (and (and $x402 $x394) $x368) $x292) $x275)))
 (let (($x249 (= $x243 true)))
 (let (($x280 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x239 (=> $x280 $x144)))
 (let (($x289 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x253 (= $x232 $x289)))
 (let (($x228 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x258 (= $x280 $x228)))
 (let (($x259 (and (and $x258 $x253) $x239)))
 (let (($x347 (= $x259 true)))
 (let (($x351 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x233 (= $x232 $x351)))
 (let (($x279 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x332 (= $x280 $x279)))
 (let (($x359 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x247 (= $x315 $x359)))
 (let (($x221 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x50 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x50 $x221)))
 (let (($x218 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x291 (and (and (and (and $x218 $x246) $x247) $x332) $x233)))
 (let (($x306 (= $x291 true)))
 (let (($x227 (=> $x50 $x144)))
 (let (($x287 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x349 (= $x315 $x287)))
 (let (($x284 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x323 (= $x50 $x284)))
 (let (($x288 (and (and $x323 $x349) $x227)))
 (let (($x357 (= $x288 true)))
 (let (($x215 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x56 (=> $x215 $x144)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x212 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x356 (bvuge ?x212 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x5 (= $x147 $x356)))
 (let (($x220 (= ?x212 (_ bv0 32))))
 (let (($x33 (= $x215 $x220)))
 (let (($x230 (and (and $x33 $x5) $x56)))
 (let (($x322 (= $x230 true)))
 (let ((?x318 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x330 (concat ?x222 (concat ?x344 (concat ?x139 ?x318)))))
 (let (($x224 (= ?x330 input.dst.llvm-%t)))
 (let (($x214 (= $x224 true)))
 (let (($x355 (= $x214 true)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x65 (concat ?x44 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x119 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x13 (bvadd ?x119 (_ bv3 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem ?x13) (concat ?x47 ?x65))))
 (let (($x197 (= (bvand ?x58 (_ bv4294967280 32)) ?x58)))
 (let (($x75 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x202 (and $x75 $x197)))
 (let (($x172 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x392 (and true $x172)))
 (let (($x203 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv4 32))) (bvult ?x119 (bvsub ?x119 (_ bv4 32))))))
 (let (($x15 (and (and (and $x203 $x392) $x75) $x202)))
 (let (($x101 (= true $x15)))
 (let (($x31 (not $x23)))
 (let (($x350 (=> $x31 $x101)))
 (let (($x303 (= $x350 true)))
 (let (($x213 (= $x303 true)))
 (let (($x105 (= $x213 true)))
 (let (($x159 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x208 (and $x159 $x350)))
 (let (($x73 (= (_ bv0 32) ?x58)))
 (let (($x179 (not $x73)))
 (let (($x321 (=> $x179 $x101)))
 (let (($x188 (= (bvand ?x192 (_ bv4294967280 32)) ?x192)))
 (let (($x182 (= (bvand ?x29 (_ bv4294967292 32)) ?x29)))
 (let (($x193 (and $x182 $x188)))
 (let (($x319 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x29 (bvsub ?x29 (_ bv8 32))) (bvult ?x29 (bvsub ?x29 (_ bv8 32))))))
 (let (($x18 (and (and (and $x319 $x392) $x182) $x193)))
 (let (($x302 (= true $x18)))
 (let (($x123 (=> $x73 $x302)))
 (let (($x338 (and $x123 $x321)))
 (let (($x108 (= true $x338)))
 (let (($x300 (or $x73 $x179)))
 (let (($x299 (and $x31 $x300)))
 (let (($x198 (=> $x299 $x108)))
 (let (($x201 (and $x198 $x208)))
 (let (($x393 (= $x201 true)))
 (let (($x84 (= $x393 true)))
 (let (($x209 (= $x84 true)))
 (let (($x207 (= $x198 true)))
 (let (($x223 (= $x207 true)))
 (let (($x211 (= $x223 true)))
 (let (($x130 (and $x31 $x73)))
 (let (($x176 (= $x130 true)))
 (let (($x173 (= $x176 true)))
 (let (($x160 (= $x173 true)))
 (let (($x35 (= $x159 true)))
 (let (($x184 (= $x35 true)))
 (let (($x165 (= $x184 true)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x157 (= (_ bv0 32) ?x162)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x167)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (and $x155 $x137)))
 (let (($x170 (and $x153 $x157)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x148 $x170)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x145)))))))
 (let (($x168 (and $x161 $x166)))
 (let (($x28 (= $x168 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let (($x174 (and $x21 $x165)))
 (let (($x171 (and $x174 $x165)))
 (let (($x316 (and $x171 $x160)))
 (let (($x217 (and $x316 $x211)))
 (let (($x68 (and $x217 $x209)))
 (let (($x304 (and $x68 $x105)))
 (let (($x433 (and $x304 $x355)))
 (let (($x430 (and $x433 $x322)))
 (let (($x226 (and $x430 $x357)))
 (let (($x397 (and $x226 $x306)))
 (let (($x229 (and $x397 $x347)))
 (let (($x59 (and $x229 $x249)))
 (let (($x151 (and $x147 $x315)))
 (let (($x434 (and $x151 $x59)))
 (let (($x131 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x234 (and $x131 $x434)))
 (let (($x264 (and $x144 $x234)))
 (let (($x271 (and $x144 $x264)))
 (let (($x69 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x30 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x81 (=> (and $x130 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x102 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x124 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x125 $x102)))))))
 (let (($x129 (=> (and $x31 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x125 $x102)))))))
 (let (($x62 (and $x129 $x81)))
 (let (($x353 (and $x62 $x271)))
 (let (($x436 (=> $x353 $x339)))
 (not $x436))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5087X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x177 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x334 (concat ?x177 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv8 32))))))
 (let ((?x429 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x361 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x336 (concat ?x361 (concat ?x429 ?x334))))
 (let (($x335 (= ?x336 ?x336)))
 (let ((?x310 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x93 (concat ?x310 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x313 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x362 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x358 (concat ?x362 (concat ?x313 ?x93))))
 (let (($x42 (= (_ bv0 32) ?x358)))
 (let ((?x241 (ite $x42 (_ bv0 32) (_ bv1 32))))
 (let (($x265 (bvuge ?x241 (_ bv1 32))))
 (let (($x348 (=> $x265 $x335)))
 (let ((?x360 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x89 (concat ?x360 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv4 32))))))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x61 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x48 (concat ?x61 (concat ?x333 ?x89))))
 (let (($x329 (= ?x48 ?x48)))
 (let (($x312 (=> $x265 $x329)))
 (let ((?x281 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5087X))))
 (let ((?x127 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv2 32))) ?x281)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv3 32))) ?x127)))
 (let (($x272 (= ?x109 ?x109)))
 (let (($x366 (=> $x265 $x272)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x183 (concat ?x175 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x186 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x29 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x29 (_ bv3 32))))
 (let ((?x192 (concat (select input.dst.llvm-mem ?x45) (concat ?x186 ?x183))))
 (let ((?x26 (bvadd ?x192 (_ bv8 32))))
 (let ((?x277 (concat (select input.dst.llvm-mem (bvadd ?x26 (_ bv1 32))) (select input.dst.llvm-mem ?x26))))
 (let ((?x116 (concat (select input.dst.llvm-mem (bvadd ?x26 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x26 (_ bv2 32))) ?x277))))
 (let (($x364 (= (_ bv0 32) ?x116)))
 (let ((?x251 (ite $x364 (_ bv0 32) (_ bv1 32))))
 (let (($x120 (bvuge ?x251 (_ bv1 32))))
 (let ((?x257 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x358 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x358 (_ bv8 32))))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x358 (_ bv8 32)) (_ bv2 32))) ?x257)))
 (let ((?x252 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x358 (_ bv8 32)) (_ bv3 32))) ?x262)))
 (let (($x248 (= (_ bv0 32) ?x252)))
 (let ((?x254 (ite $x248 (_ bv0 32) (_ bv1 32))))
 (let (($x96 (bvuge ?x254 (_ bv1 32))))
 (let (($x314 (= $x96 $x120)))
 (let (($x78 (=> $x265 $x314)))
 (let (($x256 (= ?x251 (_ bv0 32))))
 (let (($x255 (= ?x254 (_ bv0 32))))
 (let (($x126 (= $x255 $x256)))
 (let (($x199 (=> $x265 $x126)))
 (let (($x435 (= (_ bv0 32) ?x192)))
 (let ((?x470 (ite $x435 (_ bv0 32) (_ bv1 32))))
 (let (($x276 (bvuge ?x470 (_ bv1 32))))
 (let (($x71 (= $x265 $x276)))
 (let (($x404 (= ?x470 (_ bv0 32))))
 (let (($x365 (= ?x241 (_ bv0 32))))
 (let (($x471 (= $x365 $x404)))
 (let (($x266 (= ?x358 ?x192)))
 (let (($x144 (= false false)))
 (let (($x367 (and $x265 $x255)))
 (let (($x12 (=> $x367 $x144)))
 (let (($x242 (=> $x365 $x144)))
 (let (($x343 (and (and (and (and (and (and $x242 $x12) $x266) $x471) $x71) $x199) $x78)))
 (let (($x400 (and (and (and $x343 $x366) $x312) $x348)))
 (let (($x261 (not true)))
 (let (($x403 (or $x261 $x400)))
 (let (($x268 (= true true)))
 (let (($x337 (and $x268 $x403)))
 (let (($x339 (= $x337 true)))
 (let (($x245 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x275 (= $x363 $x245)))
 (let (($x331 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x324 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x292 (= $x324 $x331)))
 (let (($x267 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x472 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x368 (= $x472 $x267)))
 (let (($x396 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x285 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x394 (= $x285 $x396)))
 (let (($x402 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x243 (and (and (and (and $x402 $x394) $x368) $x292) $x275)))
 (let (($x249 (= $x243 true)))
 (let (($x280 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x239 (=> $x280 $x144)))
 (let (($x289 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x232 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x253 (= $x232 $x289)))
 (let (($x228 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x258 (= $x280 $x228)))
 (let (($x259 (and (and $x258 $x253) $x239)))
 (let (($x347 (= $x259 true)))
 (let (($x351 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x233 (= $x232 $x351)))
 (let (($x279 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x332 (= $x280 $x279)))
 (let (($x359 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x315 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x247 (= $x315 $x359)))
 (let (($x221 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x50 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x246 (= $x50 $x221)))
 (let (($x218 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x291 (and (and (and (and $x218 $x246) $x247) $x332) $x233)))
 (let (($x306 (= $x291 true)))
 (let (($x227 (=> $x50 $x144)))
 (let (($x287 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x349 (= $x315 $x287)))
 (let (($x284 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x323 (= $x50 $x284)))
 (let (($x288 (and (and $x323 $x349) $x227)))
 (let (($x357 (= $x288 true)))
 (let (($x215 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x56 (=> $x215 $x144)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x212 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x356 (bvuge ?x212 (_ bv1 32))))
 (let (($x147 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x5 (= $x147 $x356)))
 (let (($x220 (= ?x212 (_ bv0 32))))
 (let (($x33 (= $x215 $x220)))
 (let (($x230 (and (and $x33 $x5) $x56)))
 (let (($x322 (= $x230 true)))
 (let ((?x318 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x139 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x344 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x222 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x330 (concat ?x222 (concat ?x344 (concat ?x139 ?x318)))))
 (let (($x224 (= ?x330 input.dst.llvm-%t)))
 (let (($x214 (= $x224 true)))
 (let (($x355 (= $x214 true)))
 (let ((?x44 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x65 (concat ?x44 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x119 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x13 (bvadd ?x119 (_ bv3 32))))
 (let ((?x58 (concat (select input.dst.llvm-mem ?x13) (concat ?x47 ?x65))))
 (let (($x197 (= (bvand ?x58 (_ bv4294967280 32)) ?x58)))
 (let (($x75 (= (bvand ?x119 (_ bv4294967292 32)) ?x119)))
 (let (($x202 (and $x75 $x197)))
 (let (($x172 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x392 (and true $x172)))
 (let (($x203 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x119 (bvsub ?x119 (_ bv4 32))) (bvult ?x119 (bvsub ?x119 (_ bv4 32))))))
 (let (($x15 (and (and (and $x203 $x392) $x75) $x202)))
 (let (($x101 (= true $x15)))
 (let (($x31 (not $x23)))
 (let (($x350 (=> $x31 $x101)))
 (let (($x303 (= $x350 true)))
 (let (($x213 (= $x303 true)))
 (let (($x105 (= $x213 true)))
 (let (($x159 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x208 (and $x159 $x350)))
 (let (($x73 (= (_ bv0 32) ?x58)))
 (let (($x179 (not $x73)))
 (let (($x321 (=> $x179 $x101)))
 (let (($x188 (= (bvand ?x192 (_ bv4294967280 32)) ?x192)))
 (let (($x182 (= (bvand ?x29 (_ bv4294967292 32)) ?x29)))
 (let (($x193 (and $x182 $x188)))
 (let (($x319 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x29 (bvsub ?x29 (_ bv8 32))) (bvult ?x29 (bvsub ?x29 (_ bv8 32))))))
 (let (($x18 (and (and (and $x319 $x392) $x182) $x193)))
 (let (($x302 (= true $x18)))
 (let (($x123 (=> $x73 $x302)))
 (let (($x338 (and $x123 $x321)))
 (let (($x108 (= true $x338)))
 (let (($x300 (or $x73 $x179)))
 (let (($x299 (and $x31 $x300)))
 (let (($x198 (=> $x299 $x108)))
 (let (($x201 (and $x198 $x208)))
 (let (($x393 (= $x201 true)))
 (let (($x84 (= $x393 true)))
 (let (($x209 (= $x84 true)))
 (let (($x207 (= $x198 true)))
 (let (($x223 (= $x207 true)))
 (let (($x211 (= $x223 true)))
 (let (($x130 (and $x31 $x73)))
 (let (($x176 (= $x130 true)))
 (let (($x173 (= $x176 true)))
 (let (($x160 (= $x173 true)))
 (let (($x35 (= $x159 true)))
 (let (($x184 (= $x35 true)))
 (let (($x165 (= $x184 true)))
 (let ((?x162 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x157 (= (_ bv0 32) ?x162)))
 (let ((?x167 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x137 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x167)))
 (let (($x155 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (and $x155 $x137)))
 (let (($x170 (and $x153 $x157)))
 (let (($x148 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x166 (and $x148 $x170)))
 (let (($x145 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x161 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x145)))))))
 (let (($x168 (and $x161 $x166)))
 (let (($x28 (= $x168 true)))
 (let (($x150 (= $x28 true)))
 (let (($x21 (= $x150 true)))
 (let (($x174 (and $x21 $x165)))
 (let (($x171 (and $x174 $x165)))
 (let (($x316 (and $x171 $x160)))
 (let (($x217 (and $x316 $x211)))
 (let (($x68 (and $x217 $x209)))
 (let (($x304 (and $x68 $x105)))
 (let (($x433 (and $x304 $x355)))
 (let (($x430 (and $x433 $x322)))
 (let (($x226 (and $x430 $x357)))
 (let (($x397 (and $x226 $x306)))
 (let (($x229 (and $x397 $x347)))
 (let (($x59 (and $x229 $x249)))
 (let (($x151 (and $x147 $x315)))
 (let (($x434 (and $x151 $x59)))
 (let (($x131 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x234 (and $x131 $x434)))
 (let (($x264 (and $x144 $x234)))
 (let (($x271 (and $x144 $x264)))
 (let (($x69 (bvugt ?x29 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x134 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x30 (=> (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x81 (=> (and $x130 (bvule ?x29 (bvsub (bvadd ?x29 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x134 $x69)))))))
 (let (($x102 (bvugt ?x119 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x125 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x13)))
 (let (($x124 (=> (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x125 $x102)))))))
 (let (($x129 (=> (and $x31 (bvule ?x119 (bvsub (bvadd ?x119 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x125 $x102)))))))
 (let (($x62 (and $x129 $x81)))
 (let (($x353 (and $x62 $x271)))
 (let (($x436 (=> $x353 $x339)))
 (not $x436))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b10000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b10000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_27)
(function @fun_27
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_27 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_27 #b10000000000000000000000000001011) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x00d0f000)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00002000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xf9)
                                #x00f9f7f8
                                #xf0)
                         #x00d0f003
                         #x00)
                  #x00d0f001
                  #xf7)))
(let ((a!2 (store (store (store (store a!1 #x00f9f7fb #x00) #x00d0f000 #xf0)
                         #x00f9f7f9
                         #xf7)
                  #x00f9f7f7
                  #x00)))
  (store (store (store a!2 #x00f9f7f4 #x00) #x00f9f7f6 #x00) #x00f9f7f5 #x00))))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x00f9f7f0)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x00d0f000)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x00d0f003)
  (define-fun input.ind-%var5087X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5087X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv2147483710 32) (_ bv16 8)) (_ bv1048584 32) (_ bv16 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv1048576 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv2147483708 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv2147483711 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 24
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5087X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x815 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x790 (concat ?x815 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv8 32))))))
 (let ((?x797 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x787 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x788 (concat ?x787 (concat ?x797 ?x790))))
 (let (($x791 (= ?x788 ?x788)))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x359 (concat ?x286 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x279 (concat ?x63 (concat ?x305 ?x359))))
 (let (($x332 (= (_ bv0 32) ?x279)))
 (let ((?x235 (ite $x332 (_ bv0 32) (_ bv1 32))))
 (let (($x397 (bvuge ?x235 (_ bv1 32))))
 (let (($x786 (=> $x397 $x791)))
 (let ((?x775 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x773 (concat ?x775 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv4 32))))))
 (let ((?x779 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x813 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x784 (concat ?x813 (concat ?x779 ?x773))))
 (let (($x810 (= ?x784 ?x784)))
 (let (($x814 (=> $x397 $x810)))
 (let ((?x766 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5087X))))
 (let ((?x778 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv2 32))) ?x766)))
 (let ((?x781 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv3 32))) ?x778)))
 (let (($x771 (= ?x781 ?x781)))
 (let (($x809 (=> $x397 $x771)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x181 (concat ?x175 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x104 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x104 (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x14) (concat ?x190 ?x181))))
 (let ((?x754 (bvadd ?x188 (_ bv8 32))))
 (let ((?x807 (concat (select input.dst.llvm-mem (bvadd ?x754 (_ bv1 32))) (select input.dst.llvm-mem ?x754))))
 (let ((?x803 (concat (select input.dst.llvm-mem (bvadd ?x754 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x754 (_ bv2 32))) ?x807))))
 (let (($x118 (= (_ bv0 32) ?x803)))
 (let ((?x761 (ite $x118 (_ bv0 32) (_ bv1 32))))
 (let (($x808 (bvuge ?x761 (_ bv1 32))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x279 (_ bv8 32))))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv8 32)) (_ bv2 32))) ?x133)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv8 32)) (_ bv3 32))) ?x313)))
 (let (($x93 (= (_ bv0 32) ?x83)))
 (let ((?x92 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x92 (_ bv1 32))))
 (let (($x77 (= $x242 $x808)))
 (let (($x79 (=> $x397 $x77)))
 (let (($x762 (= ?x761 (_ bv0 32))))
 (let (($x358 (= ?x92 (_ bv0 32))))
 (let (($x768 (= $x358 $x762)))
 (let (($x764 (=> $x397 $x768)))
 (let (($x806 (= (_ bv0 32) ?x188)))
 (let ((?x747 (ite $x806 (_ bv0 32) (_ bv1 32))))
 (let (($x752 (bvuge ?x747 (_ bv1 32))))
 (let (($x750 (= $x397 $x752)))
 (let (($x802 (= ?x747 (_ bv0 32))))
 (let (($x232 (= ?x235 (_ bv0 32))))
 (let (($x748 (= $x232 $x802)))
 (let (($x801 (= ?x279 ?x188)))
 (let (($x131 (= false false)))
 (let (($x811 (and $x397 $x358)))
 (let (($x746 (=> $x811 $x131)))
 (let (($x722 (=> $x232 $x131)))
 (let (($x817 (and (and (and (and (and (and $x722 $x746) $x801) $x748) $x750) $x764) $x79)))
 (let (($x41 (and (and (and $x817 $x809) $x814) $x786)))
 (let (($x721 (not true)))
 (let (($x187 (or $x721 $x41)))
 (let (($x745 (= true true)))
 (let (($x112 (and $x745 $x187)))
 (let (($x82 (= $x112 true)))
 (let (($x711 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x422 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x739 (= $x422 $x711)))
 (let (($x365 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x681 (=> $x365 $x739)))
 (let (($x518 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x705 (and $x365 $x518)))
 (let (($x730 (=> $x705 $x131)))
 (let (($x696 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x679 (= $x518 $x696)))
 (let (($x680 (=> $x365 $x679)))
 (let (($x695 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x419 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x678 (= $x419 $x695)))
 (let (($x704 (=> $x365 $x678)))
 (let (($x513 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x694 (and $x365 $x513)))
 (let (($x677 (=> $x694 $x131)))
 (let (($x675 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x676 (= $x513 $x675)))
 (let (($x703 (=> $x365 $x676)))
 (let (($x674 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x728 (=> $x365 $x674)))
 (let (($x271 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x738 (=> $x271 $x131)))
 (let (($x727 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x389 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x672 (= $x389 $x727)))
 (let (($x249 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x673 (=> $x249 $x672)))
 (let (($x439 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x702 (and $x249 $x439)))
 (let (($x693 (=> $x702 $x131)))
 (let (($x740 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x726 (= $x439 $x740)))
 (let (($x671 (=> $x249 $x726)))
 (let (($x669 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x384 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x734 (= $x384 $x669)))
 (let (($x670 (=> $x249 $x734)))
 (let (($x474 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x668 (and $x249 $x474)))
 (let (($x725 (=> $x668 $x131)))
 (let (($x111 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x692 (= $x474 $x111)))
 (let (($x737 (=> $x249 $x692)))
 (let (($x691 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x724 (=> $x249 $x691)))
 (let (($x396 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x690 (=> $x396 $x131)))
 (let (($x699 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x19 (= $x365 $x699)))
 (let (($x667 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x709 (= $x271 $x667)))
 (let (($x733 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x698 (= $x249 $x733)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x666 (= $x396 $x665)))
 (let (($x664 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x731 (and (and (and (and (and (and $x664 $x666) $x698) $x709) $x19) $x690) $x724)))
 (let (($x687 (and (and (and (and (and (and $x731 $x737) $x725) $x670) $x671) $x693) $x673)))
 (let (($x715 (and (and (and (and (and (and $x687 $x738) $x728) $x703) $x677) $x704) $x680)))
 (let (($x743 (and (and $x715 $x730) $x681)))
 (let (($x717 (= $x743 true)))
 (let (($x592 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x652 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x658 (= $x652 $x592)))
 (let (($x361 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x404 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x606 (and $x404 $x361)))
 (let (($x593 (=> $x606 $x658)))
 (let (($x591 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x648 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x639 (= $x648 $x591)))
 (let (($x647 (=> $x606 $x639)))
 (let (($x629 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x589 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x590 (= $x589 $x629)))
 (let (($x655 (=> $x606 $x590)))
 (let (($x646 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x632 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x637 (= $x632 $x646)))
 (let (($x616 (=> $x606 $x637)))
 (let (($x627 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x628 (=> $x606 $x627)))
 (let (($x585 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x636 (= $x361 $x585)))
 (let (($x586 (=> $x404 $x636)))
 (let (($x431 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x620 (and $x404 $x431)))
 (let (($x499 (=> $x620 $x131)))
 (let (($x584 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x605 (= $x431 $x584)))
 (let (($x626 (=> $x404 $x605)))
 (let (($x582 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x651 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x583 (= $x651 $x582)))
 (let (($x281 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x553 (and $x404 $x281)))
 (let (($x654 (=> $x553 $x583)))
 (let (($x611 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x579 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x581 (= $x579 $x611)))
 (let (($x657 (=> $x553 $x581)))
 (let (($x576 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x625 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x577 (= $x625 $x576)))
 (let (($x578 (=> $x553 $x577)))
 (let (($x653 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x555 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x557 (= $x555 $x653)))
 (let (($x610 (=> $x553 $x557)))
 (let (($x634 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x624 (=> $x553 $x634)))
 (let (($x602 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x603 (= $x281 $x602)))
 (let (($x552 (=> $x404 $x603)))
 (let (($x256 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x510 (and $x404 $x256)))
 (let (($x561 (=> $x510 $x131)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x609 (= $x256 $x551)))
 (let (($x645 (=> $x404 $x609)))
 (let (($x549 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x601 (=> $x404 $x549)))
 (let (($x24 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x494 (=> $x24 $x131)))
 (let (($x615 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x633 (= $x404 $x615)))
 (let (($x548 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x642 (= $x24 $x548)))
 (let (($x596 (and (and (and (and (and (and $x642 $x633) $x494) $x601) $x645) $x561) $x552)))
 (let (($x614 (and (and (and (and (and (and $x596 $x624) $x610) $x578) $x657) $x654) $x626)))
 (let (($x661 (and (and (and (and (and (and $x614 $x499) $x586) $x628) $x616) $x655) $x647)))
 (let (($x736 (and $x661 $x593)))
 (let (($x662 (= $x736 true)))
 (let (($x543 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x572 (= $x361 $x543)))
 (let (($x500 (=> $x404 $x572)))
 (let (($x530 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x568 (= $x431 $x530)))
 (let (($x498 (=> $x404 $x568)))
 (let (($x511 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x537 (= $x281 $x511)))
 (let (($x619 (=> $x404 $x537)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x497 (= $x256 $x496)))
 (let (($x525 (=> $x404 $x497)))
 (let (($x536 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x570 (=> $x404 $x536)))
 (let (($x535 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x509 (= $x365 $x535)))
 (let (($x296 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x524 (=> $x296 $x509)))
 (let (($x412 (and $x296 $x271)))
 (let (($x413 (=> $x412 $x131)))
 (let (($x541 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x560 (= $x271 $x541)))
 (let (($x534 (=> $x296 $x560)))
 (let (($x523 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x492 (= $x249 $x523)))
 (let (($x493 (=> $x296 $x492)))
 (let (($x447 (and $x296 $x396)))
 (let (($x473 (=> $x447 $x131)))
 (let (($x491 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x508 (= $x396 $x491)))
 (let (($x533 (=> $x296 $x508)))
 (let (($x529 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x559 (=> $x296 $x529)))
 (let (($x218 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x514 (=> $x218 $x131)))
 (let (($x532 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x571 (= $x404 $x532)))
 (let (($x558 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x540 (= $x24 $x558)))
 (let (($x506 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x531 (= $x296 $x506)))
 (let (($x521 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x567 (= $x218 $x521)))
 (let (($x489 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x501 (and (and (and (and (and (and $x489 $x567) $x531) $x540) $x571) $x514) $x559)))
 (let (($x504 (and (and (and (and (and (and $x501 $x533) $x473) $x493) $x534) $x413) $x524)))
 (let (($x650 (and (and (and (and (and (and $x504 $x494) $x570) $x525) $x561) $x619) $x498)))
 (let (($x644 (and (and $x650 $x499) $x500)))
 (let (($x608 (= $x644 true)))
 (let (($x443 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x519 (= $x422 $x443)))
 (let (($x441 (and $x296 $x365)))
 (let (($x466 (=> $x441 $x519)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x421 (= $x518 $x476)))
 (let (($x460 (=> $x441 $x421)))
 (let (($x481 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x442 (= $x419 $x481)))
 (let (($x465 (=> $x441 $x442)))
 (let (($x475 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x418 (= $x513 $x475)))
 (let (($x463 (=> $x441 $x418)))
 (let (($x452 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x417 (=> $x441 $x452)))
 (let (($x414 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x479 (= $x365 $x414)))
 (let (($x566 (=> $x296 $x479)))
 (let (($x410 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x451 (= $x271 $x410)))
 (let (($x411 (=> $x296 $x451)))
 (let (($x390 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x440 (= $x389 $x390)))
 (let (($x379 (and $x296 $x249)))
 (let (($x458 (=> $x379 $x440)))
 (let (($x457 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x388 (= $x439 $x457)))
 (let (($x462 (=> $x379 $x388)))
 (let (($x385 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x386 (= $x384 $x385)))
 (let (($x387 (=> $x379 $x386)))
 (let (($x478 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x474 $x478)))
 (let (($x515 (=> $x379 $x383)))
 (let (($x456 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x381 (=> $x379 $x456)))
 (let (($x455 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x448 (= $x249 $x455)))
 (let (($x378 (=> $x296 $x448)))
 (let (($x377 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x480 (= $x396 $x377)))
 (let (($x407 (=> $x296 $x480)))
 (let (($x438 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x428 (=> $x296 $x438)))
 (let (($x374 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x461 (= $x296 $x374)))
 (let (($x437 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x469 (= $x218 $x437)))
 (let (($x467 (and (and (and (and (and (and $x469 $x461) $x514) $x428) $x407) $x473) $x378)))
 (let (($x482 (and (and (and (and (and (and $x467 $x381) $x515) $x387) $x462) $x458) $x411)))
 (let (($x486 (and (and (and (and (and (and $x482 $x413) $x566) $x417) $x463) $x465) $x460)))
 (let (($x565 (and $x486 $x466)))
 (let (($x487 (= $x565 true)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x282 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x254 (concat ?x262 ?x282))))
 (let ((?x327 (bvadd ?x255 (_ bv8 32))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x333))))
 (let (($x329 (= (_ bv0 32) ?x48)))
 (let ((?x312 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x342 (bvuge ?x312 (_ bv1 32))))
 (let (($x429 (= $x361 $x342)))
 (let (($x151 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x71 (and $x151 $x404)))
 (let (($x293 (=> $x71 $x429)))
 (let (($x370 (= ?x312 (_ bv0 32))))
 (let (($x6 (= $x431 $x370)))
 (let (($x25 (=> $x71 $x6)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x255 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x255 (_ bv4 32))))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x255 (_ bv4 32)) (_ bv2 32))) ?x120)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x255 (_ bv4 32)) (_ bv3 32))) ?x343)))
 (let (($x301 (= (_ bv0 32) ?x290)))
 (let ((?x278 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x278 (_ bv1 32))))
 (let (($x109 (= $x281 $x127)))
 (let (($x272 (=> $x71 $x109)))
 (let (($x138 (= ?x278 (_ bv0 32))))
 (let (($x132 (= $x256 $x138)))
 (let (($x37 (=> $x71 $x132)))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x273))))
 (let (($x116 (= input.spec-%var-t-0.2.2.2.0 ?x85)))
 (let (($x364 (=> $x71 $x116)))
 (let (($x367 (= (_ bv0 32) ?x255)))
 (let ((?x12 (ite $x367 (_ bv0 32) (_ bv1 32))))
 (let (($x471 (bvuge ?x12 (_ bv1 32))))
 (let (($x398 (= $x404 $x471)))
 (let (($x276 (=> $x151 $x398)))
 (let (($x435 (and $x151 $x24)))
 (let (($x470 (=> $x435 $x131)))
 (let (($x405 (= ?x12 (_ bv0 32))))
 (let (($x266 (= $x24 $x405)))
 (let (($x340 (=> $x151 $x266)))
 (let (($x265 (= $x365 $x242)))
 (let (($x146 (and $x151 $x296)))
 (let (($x311 (=> $x146 $x265)))
 (let (($x42 (= $x271 $x358)))
 (let (($x241 (=> $x146 $x42)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x279 (_ bv4 32))))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv4 32)) (_ bv2 32))) ?x368)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv4 32)) (_ bv3 32))) ?x324)))
 (let (($x40 (= (_ bv0 32) ?x292)))
 (let ((?x363 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x59 (bvuge ?x363 (_ bv1 32))))
 (let (($x434 (= $x249 $x59)))
 (let (($x234 (=> $x146 $x434)))
 (let (($x245 (= ?x363 (_ bv0 32))))
 (let (($x275 (= $x396 $x245)))
 (let (($x243 (=> $x146 $x275)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv1 32))) (select input.dst.llvm-mem ?x279))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv2 32))) ?x239))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.0 ?x402)))
 (let (($x285 (=> $x146 $x236)))
 (let (($x328 (= $x296 $x397)))
 (let (($x228 (=> $x151 $x328)))
 (let (($x291 (and $x151 $x218)))
 (let (($x306 (=> $x291 $x131)))
 (let (($x351 (= $x218 $x232)))
 (let (($x233 (=> $x151 $x351)))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x323)))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x307)))
 (let (($x226 (= input.spec-%var-t-0.2.0 ?x357)))
 (let (($x399 (=> $x151 $x226)))
 (let (($x5 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x430 (=> $x5 $x131)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x219 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (bvuge ?x219 (_ bv1 32))))
 (let (($x322 (= $x151 $x230)))
 (let (($x144 (= ?x219 (_ bv0 32))))
 (let (($x56 (= $x5 $x144)))
 (let (($x335 (and (and (and (and (and (and $x56 $x322) $x430) $x399) $x233) $x306) $x228)))
 (let (($x436 (and (and (and (and (and (and $x335 $x285) $x243) $x234) $x241) $x311) $x340)))
 (let (($x406 (and (and (and (and (and (and $x436 $x470) $x276) $x364) $x37) $x272) $x25)))
 (let (($x453 (and $x406 $x293)))
 (let (($x372 (= $x453 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x433 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x215 (concat ?x433 (concat ?x224 (concat ?x99 ?x139)))))
 (let (($x212 (= ?x215 input.dst.llvm-%t)))
 (let (($x220 (= $x212 true)))
 (let (($x33 (= $x220 true)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x44 (concat ?x122 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x9 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x7 (bvadd ?x9 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x7) (concat ?x114 ?x44))))
 (let (($x15 (= (bvand ?x130 (_ bv4294967280 32)) ?x130)))
 (let (($x197 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x101 (and $x197 $x15)))
 (let (($x57 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x182 (and true $x57)))
 (let (($x53 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv4 32))) (bvult ?x9 (bvsub ?x9 (_ bv4 32))))))
 (let (($x108 (and (and (and $x53 $x182) $x197) $x101)))
 (let (($x198 (= true $x108)))
 (let (($x31 (not $x23)))
 (let (($x84 (=> $x31 $x198)))
 (let (($x52 (= $x84 true)))
 (let (($x222 (= $x52 true)))
 (let (($x32 (= $x222 true)))
 (let (($x174 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x209 (and $x174 $x84)))
 (let (($x107 (= (_ bv0 32) ?x130)))
 (let (($x8 (not $x107)))
 (let (($x207 (=> $x8 $x198)))
 (let (($x18 (= (bvand ?x188 (_ bv4294967280 32)) ?x188)))
 (let (($x320 (= (bvand ?x104 (_ bv4294967292 32)) ?x104)))
 (let (($x302 (and $x320 $x18)))
 (let (($x196 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x104 (bvsub ?x104 (_ bv8 32))) (bvult ?x104 (bvsub ?x104 (_ bv8 32))))))
 (let (($x36 (and (and (and $x196 $x182) $x320) $x302)))
 (let (($x206 (= true $x36)))
 (let (($x297 (=> $x107 $x206)))
 (let (($x223 (and $x297 $x207)))
 (let (($x211 (= true $x223)))
 (let (($x298 (or $x107 $x8)))
 (let (($x143 (and $x31 $x298)))
 (let (($x217 (=> $x143 $x211)))
 (let (($x68 (and $x217 $x209)))
 (let (($x303 (= $x68 true)))
 (let (($x213 (= $x303 true)))
 (let (($x105 (= $x213 true)))
 (let (($x350 (= $x217 true)))
 (let (($x208 (= $x350 true)))
 (let (($x201 (= $x208 true)))
 (let (($x29 (and $x31 $x107)))
 (let (($x179 (= $x29 true)))
 (let (($x300 (= $x179 true)))
 (let (($x299 (= $x300 true)))
 (let (($x171 (= $x174 true)))
 (let (($x176 (= $x171 true)))
 (let (($x173 (= $x176 true)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x168)))
 (let ((?x157 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x170 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x157)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (and $x162 $x170)))
 (let (($x150 (and $x166 $x28)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x145 $x150)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x161)))))))
 (let (($x100 (and $x153 $x21)))
 (let (($x152 (= $x100 true)))
 (let (($x159 (= $x152 true)))
 (let (($x35 (= $x159 true)))
 (let (($x160 (and $x35 $x173)))
 (let (($x316 (and $x160 $x173)))
 (let (($x156 (and $x316 $x299)))
 (let (($x393 (and $x156 $x201)))
 (let (($x304 (and $x393 $x105)))
 (let (($x344 (and $x304 $x32)))
 (let (($x356 (and $x344 $x33)))
 (let (($x454 (and $x356 $x372)))
 (let (($x488 (and $x454 $x487)))
 (let (($x547 (and $x488 $x608)))
 (let (($x663 (and $x547 $x662)))
 (let (($x718 (and $x663 $x717)))
 (let (($x744 (and $x146 $x718)))
 (let (($x295 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x719 (and $x295 $x744)))
 (let (($x804 (and $x131 $x719)))
 (let (($x720 (and $x131 $x804)))
 (let (($x80 (bvugt ?x104 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x149 (=> (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x128 (=> (and $x29 (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x106 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x103 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x106)))))))
 (let (($x66 (=> (and $x31 (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x39 $x106)))))))
 (let (($x45 (and $x66 $x128)))
 (let (($x805 (and $x45 $x720)))
 (let (($x115 (=> $x805 $x82)))
 (not $x
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5087X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x815 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x790 (concat ?x815 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv8 32))))))
 (let ((?x797 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x787 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x788 (concat ?x787 (concat ?x797 ?x790))))
 (let (($x791 (= ?x788 ?x788)))
 (let ((?x286 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x359 (concat ?x286 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x305 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x63 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x279 (concat ?x63 (concat ?x305 ?x359))))
 (let (($x332 (= (_ bv0 32) ?x279)))
 (let ((?x235 (ite $x332 (_ bv0 32) (_ bv1 32))))
 (let (($x397 (bvuge ?x235 (_ bv1 32))))
 (let (($x786 (=> $x397 $x791)))
 (let ((?x775 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x773 (concat ?x775 (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv4 32))))))
 (let ((?x779 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x813 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5087X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x784 (concat ?x813 (concat ?x779 ?x773))))
 (let (($x810 (= ?x784 ?x784)))
 (let (($x814 (=> $x397 $x810)))
 (let ((?x766 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5087X))))
 (let ((?x778 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv2 32))) ?x766)))
 (let ((?x781 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5087X (_ bv3 32))) ?x778)))
 (let (($x771 (= ?x781 ?x781)))
 (let (($x809 (=> $x397 $x771)))
 (let ((?x175 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x181 (concat ?x175 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x190 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x104 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x104 (_ bv3 32))))
 (let ((?x188 (concat (select input.dst.llvm-mem ?x14) (concat ?x190 ?x181))))
 (let ((?x754 (bvadd ?x188 (_ bv8 32))))
 (let ((?x807 (concat (select input.dst.llvm-mem (bvadd ?x754 (_ bv1 32))) (select input.dst.llvm-mem ?x754))))
 (let ((?x803 (concat (select input.dst.llvm-mem (bvadd ?x754 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x754 (_ bv2 32))) ?x807))))
 (let (($x118 (= (_ bv0 32) ?x803)))
 (let ((?x761 (ite $x118 (_ bv0 32) (_ bv1 32))))
 (let (($x808 (bvuge ?x761 (_ bv1 32))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x279 (_ bv8 32))))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv8 32)) (_ bv2 32))) ?x133)))
 (let ((?x83 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv8 32)) (_ bv3 32))) ?x313)))
 (let (($x93 (= (_ bv0 32) ?x83)))
 (let ((?x92 (ite $x93 (_ bv0 32) (_ bv1 32))))
 (let (($x242 (bvuge ?x92 (_ bv1 32))))
 (let (($x77 (= $x242 $x808)))
 (let (($x79 (=> $x397 $x77)))
 (let (($x762 (= ?x761 (_ bv0 32))))
 (let (($x358 (= ?x92 (_ bv0 32))))
 (let (($x768 (= $x358 $x762)))
 (let (($x764 (=> $x397 $x768)))
 (let (($x806 (= (_ bv0 32) ?x188)))
 (let ((?x747 (ite $x806 (_ bv0 32) (_ bv1 32))))
 (let (($x752 (bvuge ?x747 (_ bv1 32))))
 (let (($x750 (= $x397 $x752)))
 (let (($x802 (= ?x747 (_ bv0 32))))
 (let (($x232 (= ?x235 (_ bv0 32))))
 (let (($x748 (= $x232 $x802)))
 (let (($x801 (= ?x279 ?x188)))
 (let (($x131 (= false false)))
 (let (($x811 (and $x397 $x358)))
 (let (($x746 (=> $x811 $x131)))
 (let (($x722 (=> $x232 $x131)))
 (let (($x817 (and (and (and (and (and (and $x722 $x746) $x801) $x748) $x750) $x764) $x79)))
 (let (($x41 (and (and (and $x817 $x809) $x814) $x786)))
 (let (($x721 (not true)))
 (let (($x187 (or $x721 $x41)))
 (let (($x745 (= true true)))
 (let (($x112 (and $x745 $x187)))
 (let (($x82 (= $x112 true)))
 (let (($x711 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x422 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x739 (= $x422 $x711)))
 (let (($x365 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x681 (=> $x365 $x739)))
 (let (($x518 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x705 (and $x365 $x518)))
 (let (($x730 (=> $x705 $x131)))
 (let (($x696 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x679 (= $x518 $x696)))
 (let (($x680 (=> $x365 $x679)))
 (let (($x695 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x419 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x678 (= $x419 $x695)))
 (let (($x704 (=> $x365 $x678)))
 (let (($x513 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x694 (and $x365 $x513)))
 (let (($x677 (=> $x694 $x131)))
 (let (($x675 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x676 (= $x513 $x675)))
 (let (($x703 (=> $x365 $x676)))
 (let (($x674 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x728 (=> $x365 $x674)))
 (let (($x271 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x738 (=> $x271 $x131)))
 (let (($x727 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x389 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x672 (= $x389 $x727)))
 (let (($x249 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x673 (=> $x249 $x672)))
 (let (($x439 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x702 (and $x249 $x439)))
 (let (($x693 (=> $x702 $x131)))
 (let (($x740 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x726 (= $x439 $x740)))
 (let (($x671 (=> $x249 $x726)))
 (let (($x669 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x384 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x734 (= $x384 $x669)))
 (let (($x670 (=> $x249 $x734)))
 (let (($x474 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x668 (and $x249 $x474)))
 (let (($x725 (=> $x668 $x131)))
 (let (($x111 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x692 (= $x474 $x111)))
 (let (($x737 (=> $x249 $x692)))
 (let (($x691 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x724 (=> $x249 $x691)))
 (let (($x396 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x690 (=> $x396 $x131)))
 (let (($x699 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x19 (= $x365 $x699)))
 (let (($x667 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x709 (= $x271 $x667)))
 (let (($x733 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x698 (= $x249 $x733)))
 (let (($x665 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x666 (= $x396 $x665)))
 (let (($x664 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x731 (and (and (and (and (and (and $x664 $x666) $x698) $x709) $x19) $x690) $x724)))
 (let (($x687 (and (and (and (and (and (and $x731 $x737) $x725) $x670) $x671) $x693) $x673)))
 (let (($x715 (and (and (and (and (and (and $x687 $x738) $x728) $x703) $x677) $x704) $x680)))
 (let (($x743 (and (and $x715 $x730) $x681)))
 (let (($x717 (= $x743 true)))
 (let (($x592 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x652 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x658 (= $x652 $x592)))
 (let (($x361 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x404 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x606 (and $x404 $x361)))
 (let (($x593 (=> $x606 $x658)))
 (let (($x591 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x648 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x639 (= $x648 $x591)))
 (let (($x647 (=> $x606 $x639)))
 (let (($x629 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x589 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x590 (= $x589 $x629)))
 (let (($x655 (=> $x606 $x590)))
 (let (($x646 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x632 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x637 (= $x632 $x646)))
 (let (($x616 (=> $x606 $x637)))
 (let (($x627 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x628 (=> $x606 $x627)))
 (let (($x585 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x636 (= $x361 $x585)))
 (let (($x586 (=> $x404 $x636)))
 (let (($x431 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x620 (and $x404 $x431)))
 (let (($x499 (=> $x620 $x131)))
 (let (($x584 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x605 (= $x431 $x584)))
 (let (($x626 (=> $x404 $x605)))
 (let (($x582 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x651 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x583 (= $x651 $x582)))
 (let (($x281 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x553 (and $x404 $x281)))
 (let (($x654 (=> $x553 $x583)))
 (let (($x611 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x579 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x581 (= $x579 $x611)))
 (let (($x657 (=> $x553 $x581)))
 (let (($x576 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x625 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x577 (= $x625 $x576)))
 (let (($x578 (=> $x553 $x577)))
 (let (($x653 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x555 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x557 (= $x555 $x653)))
 (let (($x610 (=> $x553 $x557)))
 (let (($x634 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x624 (=> $x553 $x634)))
 (let (($x602 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x603 (= $x281 $x602)))
 (let (($x552 (=> $x404 $x603)))
 (let (($x256 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x510 (and $x404 $x256)))
 (let (($x561 (=> $x510 $x131)))
 (let (($x551 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x609 (= $x256 $x551)))
 (let (($x645 (=> $x404 $x609)))
 (let (($x549 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x601 (=> $x404 $x549)))
 (let (($x24 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x494 (=> $x24 $x131)))
 (let (($x615 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x633 (= $x404 $x615)))
 (let (($x548 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x642 (= $x24 $x548)))
 (let (($x596 (and (and (and (and (and (and $x642 $x633) $x494) $x601) $x645) $x561) $x552)))
 (let (($x614 (and (and (and (and (and (and $x596 $x624) $x610) $x578) $x657) $x654) $x626)))
 (let (($x661 (and (and (and (and (and (and $x614 $x499) $x586) $x628) $x616) $x655) $x647)))
 (let (($x736 (and $x661 $x593)))
 (let (($x662 (= $x736 true)))
 (let (($x543 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x572 (= $x361 $x543)))
 (let (($x500 (=> $x404 $x572)))
 (let (($x530 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x568 (= $x431 $x530)))
 (let (($x498 (=> $x404 $x568)))
 (let (($x511 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x537 (= $x281 $x511)))
 (let (($x619 (=> $x404 $x537)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x497 (= $x256 $x496)))
 (let (($x525 (=> $x404 $x497)))
 (let (($x536 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x570 (=> $x404 $x536)))
 (let (($x535 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x509 (= $x365 $x535)))
 (let (($x296 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x524 (=> $x296 $x509)))
 (let (($x412 (and $x296 $x271)))
 (let (($x413 (=> $x412 $x131)))
 (let (($x541 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x560 (= $x271 $x541)))
 (let (($x534 (=> $x296 $x560)))
 (let (($x523 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x492 (= $x249 $x523)))
 (let (($x493 (=> $x296 $x492)))
 (let (($x447 (and $x296 $x396)))
 (let (($x473 (=> $x447 $x131)))
 (let (($x491 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x508 (= $x396 $x491)))
 (let (($x533 (=> $x296 $x508)))
 (let (($x529 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x559 (=> $x296 $x529)))
 (let (($x218 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x514 (=> $x218 $x131)))
 (let (($x532 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x571 (= $x404 $x532)))
 (let (($x558 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x540 (= $x24 $x558)))
 (let (($x506 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x531 (= $x296 $x506)))
 (let (($x521 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x567 (= $x218 $x521)))
 (let (($x489 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x501 (and (and (and (and (and (and $x489 $x567) $x531) $x540) $x571) $x514) $x559)))
 (let (($x504 (and (and (and (and (and (and $x501 $x533) $x473) $x493) $x534) $x413) $x524)))
 (let (($x650 (and (and (and (and (and (and $x504 $x494) $x570) $x525) $x561) $x619) $x498)))
 (let (($x644 (and (and $x650 $x499) $x500)))
 (let (($x608 (= $x644 true)))
 (let (($x443 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x519 (= $x422 $x443)))
 (let (($x441 (and $x296 $x365)))
 (let (($x466 (=> $x441 $x519)))
 (let (($x476 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x421 (= $x518 $x476)))
 (let (($x460 (=> $x441 $x421)))
 (let (($x481 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x442 (= $x419 $x481)))
 (let (($x465 (=> $x441 $x442)))
 (let (($x475 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x418 (= $x513 $x475)))
 (let (($x463 (=> $x441 $x418)))
 (let (($x452 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x417 (=> $x441 $x452)))
 (let (($x414 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x479 (= $x365 $x414)))
 (let (($x566 (=> $x296 $x479)))
 (let (($x410 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x451 (= $x271 $x410)))
 (let (($x411 (=> $x296 $x451)))
 (let (($x390 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x440 (= $x389 $x390)))
 (let (($x379 (and $x296 $x249)))
 (let (($x458 (=> $x379 $x440)))
 (let (($x457 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x388 (= $x439 $x457)))
 (let (($x462 (=> $x379 $x388)))
 (let (($x385 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x386 (= $x384 $x385)))
 (let (($x387 (=> $x379 $x386)))
 (let (($x478 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x383 (= $x474 $x478)))
 (let (($x515 (=> $x379 $x383)))
 (let (($x456 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x381 (=> $x379 $x456)))
 (let (($x455 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x448 (= $x249 $x455)))
 (let (($x378 (=> $x296 $x448)))
 (let (($x377 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x480 (= $x396 $x377)))
 (let (($x407 (=> $x296 $x480)))
 (let (($x438 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x428 (=> $x296 $x438)))
 (let (($x374 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x461 (= $x296 $x374)))
 (let (($x437 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x469 (= $x218 $x437)))
 (let (($x467 (and (and (and (and (and (and $x469 $x461) $x514) $x428) $x407) $x473) $x378)))
 (let (($x482 (and (and (and (and (and (and $x467 $x381) $x515) $x387) $x462) $x458) $x411)))
 (let (($x486 (and (and (and (and (and (and $x482 $x413) $x566) $x417) $x463) $x465) $x460)))
 (let (($x565 (and $x486 $x466)))
 (let (($x487 (= $x565 true)))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x282 (concat ?x87 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x262 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x255 (concat ?x254 (concat ?x262 ?x282))))
 (let ((?x327 (bvadd ?x255 (_ bv8 32))))
 (let ((?x333 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv1 32))) (select input.dst.llvm-mem ?x327))))
 (let ((?x48 (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x327 (_ bv2 32))) ?x333))))
 (let (($x329 (= (_ bv0 32) ?x48)))
 (let ((?x312 (ite $x329 (_ bv0 32) (_ bv1 32))))
 (let (($x342 (bvuge ?x312 (_ bv1 32))))
 (let (($x429 (= $x361 $x342)))
 (let (($x151 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x71 (and $x151 $x404)))
 (let (($x293 (=> $x71 $x429)))
 (let (($x370 (= ?x312 (_ bv0 32))))
 (let (($x6 (= $x431 $x370)))
 (let (($x25 (=> $x71 $x6)))
 (let ((?x120 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x255 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x255 (_ bv4 32))))))
 (let ((?x343 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x255 (_ bv4 32)) (_ bv2 32))) ?x120)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x255 (_ bv4 32)) (_ bv3 32))) ?x343)))
 (let (($x301 (= (_ bv0 32) ?x290)))
 (let ((?x278 (ite $x301 (_ bv0 32) (_ bv1 32))))
 (let (($x127 (bvuge ?x278 (_ bv1 32))))
 (let (($x109 (= $x281 $x127)))
 (let (($x272 (=> $x71 $x109)))
 (let (($x138 (= ?x278 (_ bv0 32))))
 (let (($x132 (= $x256 $x138)))
 (let (($x37 (=> $x71 $x132)))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv1 32))) (select input.dst.llvm-mem ?x255))))
 (let ((?x85 (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x255 (_ bv2 32))) ?x273))))
 (let (($x116 (= input.spec-%var-t-0.2.2.2.0 ?x85)))
 (let (($x364 (=> $x71 $x116)))
 (let (($x367 (= (_ bv0 32) ?x255)))
 (let ((?x12 (ite $x367 (_ bv0 32) (_ bv1 32))))
 (let (($x471 (bvuge ?x12 (_ bv1 32))))
 (let (($x398 (= $x404 $x471)))
 (let (($x276 (=> $x151 $x398)))
 (let (($x435 (and $x151 $x24)))
 (let (($x470 (=> $x435 $x131)))
 (let (($x405 (= ?x12 (_ bv0 32))))
 (let (($x266 (= $x24 $x405)))
 (let (($x340 (=> $x151 $x266)))
 (let (($x265 (= $x365 $x242)))
 (let (($x146 (and $x151 $x296)))
 (let (($x311 (=> $x146 $x265)))
 (let (($x42 (= $x271 $x358)))
 (let (($x241 (=> $x146 $x42)))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x279 (_ bv4 32))))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv4 32)) (_ bv2 32))) ?x368)))
 (let ((?x292 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x279 (_ bv4 32)) (_ bv3 32))) ?x324)))
 (let (($x40 (= (_ bv0 32) ?x292)))
 (let ((?x363 (ite $x40 (_ bv0 32) (_ bv1 32))))
 (let (($x59 (bvuge ?x363 (_ bv1 32))))
 (let (($x434 (= $x249 $x59)))
 (let (($x234 (=> $x146 $x434)))
 (let (($x245 (= ?x363 (_ bv0 32))))
 (let (($x275 (= $x396 $x245)))
 (let (($x243 (=> $x146 $x275)))
 (let ((?x239 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv1 32))) (select input.dst.llvm-mem ?x279))))
 (let ((?x402 (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x279 (_ bv2 32))) ?x239))))
 (let (($x236 (= input.spec-%var-t-0.2.1.2.0 ?x402)))
 (let (($x285 (=> $x146 $x236)))
 (let (($x328 (= $x296 $x397)))
 (let (($x228 (=> $x151 $x328)))
 (let (($x291 (and $x151 $x218)))
 (let (($x306 (=> $x291 $x131)))
 (let (($x351 (= $x218 $x232)))
 (let (($x233 (=> $x151 $x351)))
 (let ((?x323 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x307 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x323)))
 (let ((?x357 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x307)))
 (let (($x226 (= input.spec-%var-t-0.2.0 ?x357)))
 (let (($x399 (=> $x151 $x226)))
 (let (($x5 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x430 (=> $x5 $x131)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x219 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x230 (bvuge ?x219 (_ bv1 32))))
 (let (($x322 (= $x151 $x230)))
 (let (($x144 (= ?x219 (_ bv0 32))))
 (let (($x56 (= $x5 $x144)))
 (let (($x335 (and (and (and (and (and (and $x56 $x322) $x430) $x399) $x233) $x306) $x228)))
 (let (($x436 (and (and (and (and (and (and $x335 $x285) $x243) $x234) $x241) $x311) $x340)))
 (let (($x406 (and (and (and (and (and (and $x436 $x470) $x276) $x364) $x37) $x272) $x25)))
 (let (($x453 (and $x406 $x293)))
 (let (($x372 (= $x453 true)))
 (let ((?x139 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x99 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x224 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x433 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x215 (concat ?x433 (concat ?x224 (concat ?x99 ?x139)))))
 (let (($x212 (= ?x215 input.dst.llvm-%t)))
 (let (($x220 (= $x212 true)))
 (let (($x33 (= $x220 true)))
 (let ((?x122 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x44 (concat ?x122 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x9 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x7 (bvadd ?x9 (_ bv3 32))))
 (let ((?x130 (concat (select input.dst.llvm-mem ?x7) (concat ?x114 ?x44))))
 (let (($x15 (= (bvand ?x130 (_ bv4294967280 32)) ?x130)))
 (let (($x197 (= (bvand ?x9 (_ bv4294967292 32)) ?x9)))
 (let (($x101 (and $x197 $x15)))
 (let (($x57 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x182 (and true $x57)))
 (let (($x53 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x9 (bvsub ?x9 (_ bv4 32))) (bvult ?x9 (bvsub ?x9 (_ bv4 32))))))
 (let (($x108 (and (and (and $x53 $x182) $x197) $x101)))
 (let (($x198 (= true $x108)))
 (let (($x31 (not $x23)))
 (let (($x84 (=> $x31 $x198)))
 (let (($x52 (= $x84 true)))
 (let (($x222 (= $x52 true)))
 (let (($x32 (= $x222 true)))
 (let (($x174 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x209 (and $x174 $x84)))
 (let (($x107 (= (_ bv0 32) ?x130)))
 (let (($x8 (not $x107)))
 (let (($x207 (=> $x8 $x198)))
 (let (($x18 (= (bvand ?x188 (_ bv4294967280 32)) ?x188)))
 (let (($x320 (= (bvand ?x104 (_ bv4294967292 32)) ?x104)))
 (let (($x302 (and $x320 $x18)))
 (let (($x196 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x104 (bvsub ?x104 (_ bv8 32))) (bvult ?x104 (bvsub ?x104 (_ bv8 32))))))
 (let (($x36 (and (and (and $x196 $x182) $x320) $x302)))
 (let (($x206 (= true $x36)))
 (let (($x297 (=> $x107 $x206)))
 (let (($x223 (and $x297 $x207)))
 (let (($x211 (= true $x223)))
 (let (($x298 (or $x107 $x8)))
 (let (($x143 (and $x31 $x298)))
 (let (($x217 (=> $x143 $x211)))
 (let (($x68 (and $x217 $x209)))
 (let (($x303 (= $x68 true)))
 (let (($x213 (= $x303 true)))
 (let (($x105 (= $x213 true)))
 (let (($x350 (= $x217 true)))
 (let (($x208 (= $x350 true)))
 (let (($x201 (= $x208 true)))
 (let (($x29 (and $x31 $x107)))
 (let (($x179 (= $x29 true)))
 (let (($x300 (= $x179 true)))
 (let (($x299 (= $x300 true)))
 (let (($x171 (= $x174 true)))
 (let (($x176 (= $x171 true)))
 (let (($x173 (= $x176 true)))
 (let ((?x168 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x28 (= (_ bv0 32) ?x168)))
 (let ((?x157 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x170 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x157)))
 (let (($x162 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x166 (and $x162 $x170)))
 (let (($x150 (and $x166 $x28)))
 (let (($x145 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x21 (and $x145 $x150)))
 (let (($x161 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x142 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x153 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x142 $x161)))))))
 (let (($x100 (and $x153 $x21)))
 (let (($x152 (= $x100 true)))
 (let (($x159 (= $x152 true)))
 (let (($x35 (= $x159 true)))
 (let (($x160 (and $x35 $x173)))
 (let (($x316 (and $x160 $x173)))
 (let (($x156 (and $x316 $x299)))
 (let (($x393 (and $x156 $x201)))
 (let (($x304 (and $x393 $x105)))
 (let (($x344 (and $x304 $x32)))
 (let (($x356 (and $x344 $x33)))
 (let (($x454 (and $x356 $x372)))
 (let (($x488 (and $x454 $x487)))
 (let (($x547 (and $x488 $x608)))
 (let (($x663 (and $x547 $x662)))
 (let (($x718 (and $x663 $x717)))
 (let (($x744 (and $x146 $x718)))
 (let (($x295 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x719 (and $x295 $x744)))
 (let (($x804 (and $x131 $x719)))
 (let (($x720 (and $x131 $x804)))
 (let (($x80 (bvugt ?x104 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x136 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x149 (=> (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x128 (=> (and $x29 (bvule ?x104 (bvsub (bvadd ?x104 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x136 $x80)))))))
 (let (($x106 (bvugt ?x9 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x39 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x7)))
 (let (($x103 (=> (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x39 $x106)))))))
 (let (($x66 (=> (and $x31 (bvule ?x9 (bvsub (bvadd ?x9 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x39 $x106)))))))
 (let (($x45 (and $x66 $x128)))
 (let (($x805 (and $x45 $x720)))
 (let (($x115 (=> $x805 $x82)))
 (not $x
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 25
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5541X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x405 (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv8 32))))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x371 (concat ?x436 ?x266))))
 (let (($x471 (= ?x404 ?x404)))
 (let ((?x328 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x228 (concat ?x328 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x146 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x259 (concat ?x274 (concat ?x146 ?x228))))
 (let (($x347 (= (_ bv0 32) ?x259)))
 (let ((?x253 (ite $x347 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x253 (_ bv1 32))))
 (let (($x398 (=> $x239 $x471)))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x248 (concat ?x395 (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv4 32))))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x87 (concat ?x257 ?x248))))
 (let (($x282 (= ?x238 ?x238)))
 (let (($x252 (=> $x239 $x282)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5541X))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv2 32))) ?x92)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv3 32))) ?x241)))
 (let (($x265 (= ?x242 ?x242)))
 (let (($x311 (=> $x239 $x265)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x400 (concat ?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x264 (concat ?x403 (concat ?x59 ?x400))))
 (let (($x271 (= (_ bv0 32) ?x264)))
 (let ((?x353 (ite $x271 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x353 (_ bv1 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x259 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x259 (_ bv8 32))))))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x259 (_ bv8 32)) (_ bv2 32))) ?x348)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x259 (_ bv8 32)) (_ bv3 32))) ?x394)))
 (let (($x325 (= (_ bv0 32) ?x240)))
 (let ((?x472 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x472 (_ bv1 32))))
 (let (($x76 (= $x64 $x261)))
 (let (($x268 (=> $x239 $x76)))
 (let (($x72 (= ?x353 (_ bv0 32))))
 (let (($x267 (= ?x472 (_ bv0 32))))
 (let (($x310 (= $x267 $x72)))
 (let (($x362 (=> $x239 $x310)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x369 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x369 (_ bv1 32))))
 (let (($x40 (= $x239 $x287)))
 (let (($x227 (= ?x369 (_ bv0 32))))
 (let (($x326 (= ?x253 (_ bv0 32))))
 (let (($x292 (= $x326 $x227)))
 (let (($x324 (= ?x259 input.dst.llvm-%t)))
 (let (($x295 (= false false)))
 (let (($x244 (and $x239 $x267)))
 (let (($x368 (=> $x244 $x295)))
 (let (($x289 (=> $x326 $x295)))
 (let (($x277 (and (and (and (and (and (and $x289 $x368) $x324) $x292) $x40) $x362) $x268)))
 (let (($x309 (and (and (and $x277 $x311) $x252) $x398)))
 (let (($x306 (not true)))
 (let (($x346 (or $x306 $x309)))
 (let (($x291 (= true true)))
 (let (($x26 (and $x291 $x346)))
 (let (($x273 (= $x26 true)))
 (let (($x221 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x286 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x359 (= $x286 $x221)))
 (let (($x305 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x63 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x246 (= $x63 $x305)))
 (let (($x225 (and $x246 $x359)))
 (let (($x279 (= $x225 true)))
 (let (($x399 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x334 (= $x317 $x399)))
 (let (($x357 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x323 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x226 (= $x323 $x357)))
 (let (($x154 (and $x226 $x334)))
 (let (($x218 (= $x154 true)))
 (let (($x142 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x349 (= $x142 $x287)))
 (let (($x430 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x288 (= $x430 $x227)))
 (let (($x231 (and $x288 $x349)))
 (let (($x284 (= $x231 true)))
 (let ((?x212 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x151 (concat ?x56 (concat ?x5 (concat ?x33 ?x212)))))
 (let (($x230 (= ?x151 input.dst.llvm-%t)))
 (let (($x322 (= $x230 true)))
 (let (($x177 (= $x322 true)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x16 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x70 (bvadd ?x16 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x70) (concat ?x58 ?x122))))
 (let (($x217 (= (bvand ?x29 (_ bv4294967280 32)) ?x29)))
 (let (($x223 (= (bvand ?x16 (_ bv4294967292 32)) ?x16)))
 (let (($x350 (and $x223 $x217)))
 (let (($x190 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x178 (and true $x190)))
 (let (($x198 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x16 (bvsub ?x16 (_ bv4 32))) (bvult ?x16 (bvsub ?x16 (_ bv4 32))))))
 (let (($x393 (and (and (and $x198 $x178) $x223) $x350)))
 (let (($x84 (= true $x393)))
 (let (($x31 (not $x23)))
 (let (($x32 (=> $x31 $x84)))
 (let (($x99 (= $x32 true)))
 (let (($x139 (= $x99 true)))
 (let (($x67 (= $x139 true)))
 (let (($x156 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x344 (and $x156 $x32)))
 (let (($x10 (= (_ bv0 32) ?x29)))
 (let (($x172 (not $x10)))
 (let (($x209 (=> $x172 $x84)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x18 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x69 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x69 (_ bv3 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem ?x91) (concat ?x36 ?x18))))
 (let (($x204 (= (bvand ?x194 (_ bv4294967280 32)) ?x194)))
 (let (($x181 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x75 (and $x181 $x204)))
 (let (($x294 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv8 32))) (bvult ?x69 (bvsub ?x69 (_ bv8 32))))))
 (let (($x200 (and (and (and $x294 $x178) $x181) $x75)))
 (let (($x197 (= true $x200)))
 (let (($x338 (=> $x10 $x197)))
 (let (($x68 (and $x338 $x209)))
 (let (($x303 (= true $x68)))
 (let (($x205 (or $x10 $x172)))
 (let (($x55 (and $x31 $x205)))
 (let (($x213 (=> $x55 $x303)))
 (let (($x355 (and $x213 $x344)))
 (let (($x433 (= $x355 true)))
 (let (($x330 (= $x433 true)))
 (let (($x224 (= $x330 true)))
 (let (($x105 (= $x213 true)))
 (let (($x304 (= $x105 true)))
 (let (($x52 (= $x304 true)))
 (let (($x49 (= $x23 true)))
 (let (($x169 (= $x49 true)))
 (let (($x196 (= $x169 true)))
 (let (($x8 (= $x156 true)))
 (let (($x298 (= $x8 true)))
 (let (($x143 (= $x298 true)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x165)))
 (let ((?x159 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x159)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (and $x152 $x35)))
 (let (($x171 (and $x184 $x174)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x176 (and $x153 $x171)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x100 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x170)))))))
 (let (($x173 (and $x100 $x176)))
 (let (($x160 (= $x173 true)))
 (let (($x316 (= $x160 true)))
 (let (($x179 (= $x316 true)))
 (let (($x401 (and $x179 $x143)))
 (let (($x319 (and $x401 $x143)))
 (let (($x392 (and $x319 $x196)))
 (let (($x222 (and $x392 $x52)))
 (let (($x318 (and $x222 $x224)))
 (let (($x214 (and $x318 $x67)))
 (let (($x131 (and $x214 $x177)))
 (let (($x50 (and $x131 $x284)))
 (let (($x352 (and $x50 $x218)))
 (let (($x332 (and $x352 $x279)))
 (let (($x148 (and $x142 $x317)))
 (let (($x235 (and $x148 $x332)))
 (let (($x137 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x232 (and $x137 $x235)))
 (let (($x351 (and $x295 $x232)))
 (let (($x233 (and $x295 $x351)))
 (let (($x81 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x147 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x104 (and $x31 $x10)))
 (let (($x94 (=> (and $x104 (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x129 (bvugt ?x16 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x17 (=> (bvule ?x16 (bvsub (bvadd ?x16 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x124 $x129)))))))
 (let (($x13 (=> (and $x31 (bvule ?x16 (bvsub (bvadd ?x16 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x124 $x129)))))))
 (let (($x14 (and $x13 $x94)))
 (let (($x341 (and $x14 $x233)))
 (let (($x345 (=> $x341 $x273)))
 (not $x345)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5541X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x266 (concat ?x405 (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv8 32))))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x371 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x371 (concat ?x436 ?x266))))
 (let (($x471 (= ?x404 ?x404)))
 (let ((?x328 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x228 (concat ?x328 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x146 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x274 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x259 (concat ?x274 (concat ?x146 ?x228))))
 (let (($x347 (= (_ bv0 32) ?x259)))
 (let ((?x253 (ite $x347 (_ bv0 32) (_ bv1 32))))
 (let (($x239 (bvuge ?x253 (_ bv1 32))))
 (let (($x398 (=> $x239 $x471)))
 (let ((?x395 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x248 (concat ?x395 (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv4 32))))))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x87 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5541X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x238 (concat ?x87 (concat ?x257 ?x248))))
 (let (($x282 (= ?x238 ?x238)))
 (let (($x252 (=> $x239 $x282)))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5541X))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv2 32))) ?x92)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5541X (_ bv3 32))) ?x241)))
 (let (($x265 (= ?x242 ?x242)))
 (let (($x311 (=> $x239 $x265)))
 (let ((?x243 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x400 (concat ?x243 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x403 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x264 (concat ?x403 (concat ?x59 ?x400))))
 (let (($x271 (= (_ bv0 32) ?x264)))
 (let ((?x353 (ite $x271 (_ bv0 32) (_ bv1 32))))
 (let (($x261 (bvuge ?x353 (_ bv1 32))))
 (let ((?x348 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x259 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x259 (_ bv8 32))))))
 (let ((?x394 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x259 (_ bv8 32)) (_ bv2 32))) ?x348)))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x259 (_ bv8 32)) (_ bv3 32))) ?x394)))
 (let (($x325 (= (_ bv0 32) ?x240)))
 (let ((?x472 (ite $x325 (_ bv0 32) (_ bv1 32))))
 (let (($x64 (bvuge ?x472 (_ bv1 32))))
 (let (($x76 (= $x64 $x261)))
 (let (($x268 (=> $x239 $x76)))
 (let (($x72 (= ?x353 (_ bv0 32))))
 (let (($x267 (= ?x472 (_ bv0 32))))
 (let (($x310 (= $x267 $x72)))
 (let (($x362 (=> $x239 $x310)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x369 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x287 (bvuge ?x369 (_ bv1 32))))
 (let (($x40 (= $x239 $x287)))
 (let (($x227 (= ?x369 (_ bv0 32))))
 (let (($x326 (= ?x253 (_ bv0 32))))
 (let (($x292 (= $x326 $x227)))
 (let (($x324 (= ?x259 input.dst.llvm-%t)))
 (let (($x295 (= false false)))
 (let (($x244 (and $x239 $x267)))
 (let (($x368 (=> $x244 $x295)))
 (let (($x289 (=> $x326 $x295)))
 (let (($x277 (and (and (and (and (and (and $x289 $x368) $x324) $x292) $x40) $x362) $x268)))
 (let (($x309 (and (and (and $x277 $x311) $x252) $x398)))
 (let (($x306 (not true)))
 (let (($x346 (or $x306 $x309)))
 (let (($x291 (= true true)))
 (let (($x26 (and $x291 $x346)))
 (let (($x273 (= $x26 true)))
 (let (($x221 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x286 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x359 (= $x286 $x221)))
 (let (($x305 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x63 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x246 (= $x63 $x305)))
 (let (($x225 (and $x246 $x359)))
 (let (($x279 (= $x225 true)))
 (let (($x399 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x334 (= $x317 $x399)))
 (let (($x357 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x323 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x226 (= $x323 $x357)))
 (let (($x154 (and $x226 $x334)))
 (let (($x218 (= $x154 true)))
 (let (($x142 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x349 (= $x142 $x287)))
 (let (($x430 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x288 (= $x430 $x227)))
 (let (($x231 (and $x288 $x349)))
 (let (($x284 (= $x231 true)))
 (let ((?x212 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x5 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x56 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x151 (concat ?x56 (concat ?x5 (concat ?x33 ?x212)))))
 (let (($x230 (= ?x151 input.dst.llvm-%t)))
 (let (($x322 (= $x230 true)))
 (let (($x177 (= $x322 true)))
 (let ((?x47 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x122 (concat ?x47 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x16 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x70 (bvadd ?x16 (_ bv3 32))))
 (let ((?x29 (concat (select input.dst.llvm-mem ?x70) (concat ?x58 ?x122))))
 (let (($x217 (= (bvand ?x29 (_ bv4294967280 32)) ?x29)))
 (let (($x223 (= (bvand ?x16 (_ bv4294967292 32)) ?x16)))
 (let (($x350 (and $x223 $x217)))
 (let (($x190 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x178 (and true $x190)))
 (let (($x198 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x16 (bvsub ?x16 (_ bv4 32))) (bvult ?x16 (bvsub ?x16 (_ bv4 32))))))
 (let (($x393 (and (and (and $x198 $x178) $x223) $x350)))
 (let (($x84 (= true $x393)))
 (let (($x31 (not $x23)))
 (let (($x32 (=> $x31 $x84)))
 (let (($x99 (= $x32 true)))
 (let (($x139 (= $x99 true)))
 (let (($x67 (= $x139 true)))
 (let (($x156 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x344 (and $x156 $x32)))
 (let (($x10 (= (_ bv0 32) ?x29)))
 (let (($x172 (not $x10)))
 (let (($x209 (=> $x172 $x84)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x18 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x36 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x69 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x69 (_ bv3 32))))
 (let ((?x194 (concat (select input.dst.llvm-mem ?x91) (concat ?x36 ?x18))))
 (let (($x204 (= (bvand ?x194 (_ bv4294967280 32)) ?x194)))
 (let (($x181 (= (bvand ?x69 (_ bv4294967292 32)) ?x69)))
 (let (($x75 (and $x181 $x204)))
 (let (($x294 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x69 (bvsub ?x69 (_ bv8 32))) (bvult ?x69 (bvsub ?x69 (_ bv8 32))))))
 (let (($x200 (and (and (and $x294 $x178) $x181) $x75)))
 (let (($x197 (= true $x200)))
 (let (($x338 (=> $x10 $x197)))
 (let (($x68 (and $x338 $x209)))
 (let (($x303 (= true $x68)))
 (let (($x205 (or $x10 $x172)))
 (let (($x55 (and $x31 $x205)))
 (let (($x213 (=> $x55 $x303)))
 (let (($x355 (and $x213 $x344)))
 (let (($x433 (= $x355 true)))
 (let (($x330 (= $x433 true)))
 (let (($x224 (= $x330 true)))
 (let (($x105 (= $x213 true)))
 (let (($x304 (= $x105 true)))
 (let (($x52 (= $x304 true)))
 (let (($x49 (= $x23 true)))
 (let (($x169 (= $x49 true)))
 (let (($x196 (= $x169 true)))
 (let (($x8 (= $x156 true)))
 (let (($x298 (= $x8 true)))
 (let (($x143 (= $x298 true)))
 (let ((?x165 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x174 (= (_ bv0 32) ?x165)))
 (let ((?x159 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x35 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x159)))
 (let (($x152 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (and $x152 $x35)))
 (let (($x171 (and $x184 $x174)))
 (let (($x153 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x176 (and $x153 $x171)))
 (let (($x170 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x157 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x100 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x157 $x170)))))))
 (let (($x173 (and $x100 $x176)))
 (let (($x160 (= $x173 true)))
 (let (($x316 (= $x160 true)))
 (let (($x179 (= $x316 true)))
 (let (($x401 (and $x179 $x143)))
 (let (($x319 (and $x401 $x143)))
 (let (($x392 (and $x319 $x196)))
 (let (($x222 (and $x392 $x52)))
 (let (($x318 (and $x222 $x224)))
 (let (($x214 (and $x318 $x67)))
 (let (($x131 (and $x214 $x177)))
 (let (($x50 (and $x131 $x284)))
 (let (($x352 (and $x50 $x218)))
 (let (($x332 (and $x352 $x279)))
 (let (($x148 (and $x142 $x317)))
 (let (($x235 (and $x148 $x332)))
 (let (($x137 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x232 (and $x137 $x235)))
 (let (($x351 (and $x295 $x232)))
 (let (($x233 (and $x295 $x351)))
 (let (($x81 (bvugt ?x69 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x30 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x147 (=> (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x104 (and $x31 $x10)))
 (let (($x94 (=> (and $x104 (bvule ?x69 (bvsub (bvadd ?x69 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x30 $x81)))))))
 (let (($x129 (bvugt ?x16 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x124 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x70)))
 (let (($x17 (=> (bvule ?x16 (bvsub (bvadd ?x16 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x124 $x129)))))))
 (let (($x13 (=> (and $x31 (bvule ?x16 (bvsub (bvadd ?x16 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x124 $x129)))))))
 (let (($x14 (and $x13 $x94)))
 (let (($x341 (and $x14 $x233)))
 (let (($x345 (=> $x341 $x273)))
 (not $x345)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 26
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5571X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x436 (concat ?x340 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv8 32))))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x435 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x435 (concat ?x405 ?x436))))
 (let (($x471 (= ?x404 ?x404)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x258 (concat ?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x347 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x239 (concat ?x289 (concat ?x347 ?x258))))
 (let (($x270 (= (_ bv0 32) ?x239)))
 (let ((?x331 (ite $x270 (_ bv0 32) (_ bv1 32))))
 (let (($x348 (bvuge ?x331 (_ bv1 32))))
 (let (($x398 (=> $x348 $x471)))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x24 (concat ?x257 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv4 32))))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x282 (concat ?x238 (concat ?x250 ?x24))))
 (let (($x252 (= ?x282 ?x282)))
 (let (($x283 (=> $x348 $x252)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5571X))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv2 32))) ?x93)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv3 32))) ?x241)))
 (let (($x263 (= ?x311 ?x311)))
 (let (($x339 (=> $x348 $x263)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x47 (concat ?x114 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x125 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x20 (bvadd ?x125 (_ bv3 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem ?x20) (concat ?x130 ?x47))))
 (let ((?x403 (bvadd ?x104 (_ bv4 32))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem ?x403))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv2 32))) ?x243))))
 (let (($x72 (= (_ bv0 32) ?x353)))
 (let ((?x310 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x310 (_ bv1 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x239 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x239 (_ bv4 32))))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x239 (_ bv4 32)) (_ bv2 32))) ?x368)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x239 (_ bv4 32)) (_ bv3 32))) ?x86)))
 (let (($x432 (= (_ bv0 32) ?x40)))
 (let ((?x363 (ite $x432 (_ bv0 32) (_ bv1 32))))
 (let (($x268 (bvuge ?x363 (_ bv1 32))))
 (let (($x133 (= $x268 $x277)))
 (let (($x337 (=> $x348 $x133)))
 (let (($x95 (= false false)))
 (let (($x234 (= ?x363 (_ bv0 32))))
 (let (($x261 (and $x348 $x234)))
 (let (($x76 (=> $x261 $x95)))
 (let (($x362 (= ?x310 (_ bv0 32))))
 (let (($x269 (= $x234 $x362)))
 (let (($x64 (=> $x348 $x269)))
 (let (($x134 (= (_ bv0 32) ?x104)))
 (let ((?x396 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x396 (_ bv1 32))))
 (let (($x240 (= $x348 $x394)))
 (let (($x237 (= ?x331 (_ bv0 32))))
 (let (($x402 (=> $x237 $x95)))
 (let (($x273 (and (and (and (and (= ?x239 ?x104) (= $x237 (= ?x396 (_ bv0 32)))) $x402) $x240) $x64)))
 (let (($x155 (and (and (and (and (and $x273 $x76) $x337) $x339) $x283) $x398)))
 (let (($x146 (not true)))
 (let (($x215 (or $x146 $x155)))
 (let (($x335 (= true true)))
 (let (($x116 (and $x335 $x215)))
 (let (($x364 (= $x116 true)))
 (let (($x235 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x332 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x232 (= $x332 $x235)))
 (let (($x225 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x221 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x279 (= $x221 $x225)))
 (let (($x351 (and $x279 $x232)))
 (let (($x233 (= $x351 true)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x352 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x63 (= $x352 $x280)))
 (let (($x154 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x218 (= $x135 $x154)))
 (let (($x247 (and $x218 $x63)))
 (let (($x305 (= $x247 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x231 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x231 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x307 (= $x317 $x323)))
 (let (($x284 (= ?x231 (_ bv0 32))))
 (let (($x349 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x50 (= $x349 $x284)))
 (let (($x357 (and $x50 $x307)))
 (let (($x226 (= $x357 true)))
 (let ((?x33 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x356 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x430 (concat ?x131 (concat ?x230 (concat ?x356 ?x33)))))
 (let (($x369 (= ?x430 input.dst.llvm-%t)))
 (let (($x227 (= $x369 true)))
 (let (($x288 (= $x227 true)))
 (let (($x393 (= (bvand ?x104 (_ bv4294967280 32)) ?x104)))
 (let (($x217 (= (bvand ?x125 (_ bv4294967292 32)) ?x125)))
 (let (($x84 (and $x217 $x393)))
 (let (($x186 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x181 (and true $x186)))
 (let (($x201 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x125 (bvsub ?x125 (_ bv4 32))) (bvult ?x125 (bvsub ?x125 (_ bv4 32))))))
 (let (($x303 (and (and (and $x201 $x181) $x217) $x84)))
 (let (($x213 (= true $x303)))
 (let (($x31 (not $x23)))
 (let (($x330 (=> $x31 $x213)))
 (let (($x144 (= $x330 true)))
 (let (($x56 (= $x144 true)))
 (let (($x315 (= $x56 true)))
 (let (($x143 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x224 (and $x143 $x330)))
 (let (($x392 (not $x134)))
 (let (($x105 (=> $x392 $x213)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x192 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x80 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x80 (_ bv3 32))))
 (let ((?x204 (concat (select input.dst.llvm-mem ?x62) (concat ?x206 ?x192))))
 (let (($x200 (= (bvand ?x204 (_ bv4294967280 32)) ?x204)))
 (let (($x302 (= (bvand ?x80 (_ bv4294967292 32)) ?x80)))
 (let (($x197 (and $x302 $x200)))
 (let (($x183 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x80 (bvsub ?x80 (_ bv8 32))) (bvult ?x80 (bvsub ?x80 (_ bv8 32))))))
 (let (($x202 (and (and (and $x183 $x181) $x302) $x197)))
 (let (($x101 (= true $x202)))
 (let (($x108 (=> $x134 $x101)))
 (let (($x304 (and $x108 $x105)))
 (let (($x52 (= true $x304)))
 (let (($x123 (or $x134 $x392)))
 (let (($x354 (and $x31 $x123)))
 (let (($x222 (=> $x354 $x52)))
 (let (($x318 (and $x222 $x224)))
 (let (($x99 (= $x318 true)))
 (let (($x139 (= $x99 true)))
 (let (($x67 (= $x139 true)))
 (let (($x32 (= $x222 true)))
 (let (($x344 (= $x32 true)))
 (let (($x355 (= $x344 true)))
 (let (($x172 (and $x31 $x392)))
 (let (($x205 (= $x172 true)))
 (let (($x55 (= $x205 true)))
 (let (($x182 (= $x55 true)))
 (let (($x401 (= $x143 true)))
 (let (($x319 (= $x401 true)))
 (let (($x49 (= $x319 true)))
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x173 (= (_ bv0 32) ?x176)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x184 $x174)))
 (let (($x160 (and $x171 $x173)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (and $x157 $x160)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x150)))))))
 (let (($x179 (and $x35 $x316)))
 (let (($x300 (= $x179 true)))
 (let (($x299 (= $x300 true)))
 (let (($x156 (= $x299 true)))
 (let (($x169 (and $x156 $x49)))
 (let (($x196 (and $x169 $x49)))
 (let (($x57 (and $x196 $x182)))
 (let (($x433 (and $x57 $x355)))
 (let (($x214 (and $x433 $x67)))
 (let (($x5 (and $x214 $x315)))
 (let (($x287 (and $x5 $x288)))
 (let (($x399 (and $x287 $x226)))
 (let (($x246 (and $x399 $x305)))
 (let (($x341 (and $x246 $x233)))
 (let (($x145 (and $x317 $x135)))
 (let (($x291 (and $x145 $x341)))
 (let (($x142 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x306 (and $x142 $x291)))
 (let (($x336 (and $x95 $x306)))
 (let (($x308 (and $x95 $x336)))
 (let (($x128 (bvugt ?x80 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x158 (=> (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x69 (and $x31 $x134)))
 (let (($x163 (=> (and $x69 (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x66 (bvugt ?x125 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x60 (=> (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x66)))))))
 (let (($x7 (=> (and $x31 (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x66)))))))
 (let (($x91 (and $x7 $x163)))
 (let (($x274 (and $x91 $x308)))
 (let (($x27 (=> $x274 $x364)))
 (not $x27))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5571X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x340 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x436 (concat ?x340 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv8 32))))))
 (let ((?x405 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x435 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x404 (concat ?x435 (concat ?x405 ?x436))))
 (let (($x471 (= ?x404 ?x404)))
 (let ((?x228 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x258 (concat ?x228 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x347 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x289 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x239 (concat ?x289 (concat ?x347 ?x258))))
 (let (($x270 (= (_ bv0 32) ?x239)))
 (let ((?x331 (ite $x270 (_ bv0 32) (_ bv1 32))))
 (let (($x348 (bvuge ?x331 (_ bv1 32))))
 (let (($x398 (=> $x348 $x471)))
 (let ((?x257 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x24 (concat ?x257 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv4 32))))))
 (let ((?x250 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x282 (concat ?x238 (concat ?x250 ?x24))))
 (let (($x252 (= ?x282 ?x282)))
 (let (($x283 (=> $x348 $x252)))
 (let ((?x93 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5571X))))
 (let ((?x241 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv2 32))) ?x93)))
 (let ((?x311 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv3 32))) ?x241)))
 (let (($x263 (= ?x311 ?x311)))
 (let (($x339 (=> $x348 $x263)))
 (let ((?x114 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x47 (concat ?x114 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x125 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x20 (bvadd ?x125 (_ bv3 32))))
 (let ((?x104 (concat (select input.dst.llvm-mem ?x20) (concat ?x130 ?x47))))
 (let ((?x403 (bvadd ?x104 (_ bv4 32))))
 (let ((?x243 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv1 32))) (select input.dst.llvm-mem ?x403))))
 (let ((?x353 (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x403 (_ bv2 32))) ?x243))))
 (let (($x72 (= (_ bv0 32) ?x353)))
 (let ((?x310 (ite $x72 (_ bv0 32) (_ bv1 32))))
 (let (($x277 (bvuge ?x310 (_ bv1 32))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x239 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x239 (_ bv4 32))))))
 (let ((?x86 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x239 (_ bv4 32)) (_ bv2 32))) ?x368)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x239 (_ bv4 32)) (_ bv3 32))) ?x86)))
 (let (($x432 (= (_ bv0 32) ?x40)))
 (let ((?x363 (ite $x432 (_ bv0 32) (_ bv1 32))))
 (let (($x268 (bvuge ?x363 (_ bv1 32))))
 (let (($x133 (= $x268 $x277)))
 (let (($x337 (=> $x348 $x133)))
 (let (($x95 (= false false)))
 (let (($x234 (= ?x363 (_ bv0 32))))
 (let (($x261 (and $x348 $x234)))
 (let (($x76 (=> $x261 $x95)))
 (let (($x362 (= ?x310 (_ bv0 32))))
 (let (($x269 (= $x234 $x362)))
 (let (($x64 (=> $x348 $x269)))
 (let (($x134 (= (_ bv0 32) ?x104)))
 (let ((?x396 (ite $x134 (_ bv0 32) (_ bv1 32))))
 (let (($x394 (bvuge ?x396 (_ bv1 32))))
 (let (($x240 (= $x348 $x394)))
 (let (($x237 (= ?x331 (_ bv0 32))))
 (let (($x402 (=> $x237 $x95)))
 (let (($x273 (and (and (and (and (= ?x239 ?x104) (= $x237 (= ?x396 (_ bv0 32)))) $x402) $x240) $x64)))
 (let (($x155 (and (and (and (and (and $x273 $x76) $x337) $x339) $x283) $x398)))
 (let (($x146 (not true)))
 (let (($x215 (or $x146 $x155)))
 (let (($x335 (= true true)))
 (let (($x116 (and $x335 $x215)))
 (let (($x364 (= $x116 true)))
 (let (($x235 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x332 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x232 (= $x332 $x235)))
 (let (($x225 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x221 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x279 (= $x221 $x225)))
 (let (($x351 (and $x279 $x232)))
 (let (($x233 (= $x351 true)))
 (let (($x280 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x352 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x63 (= $x352 $x280)))
 (let (($x154 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x135 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x218 (= $x135 $x154)))
 (let (($x247 (and $x218 $x63)))
 (let (($x305 (= $x247 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x231 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x323 (bvuge ?x231 (_ bv1 32))))
 (let (($x317 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x307 (= $x317 $x323)))
 (let (($x284 (= ?x231 (_ bv0 32))))
 (let (($x349 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x50 (= $x349 $x284)))
 (let (($x357 (and $x50 $x307)))
 (let (($x226 (= $x357 true)))
 (let ((?x33 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x356 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x230 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x131 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x430 (concat ?x131 (concat ?x230 (concat ?x356 ?x33)))))
 (let (($x369 (= ?x430 input.dst.llvm-%t)))
 (let (($x227 (= $x369 true)))
 (let (($x288 (= $x227 true)))
 (let (($x393 (= (bvand ?x104 (_ bv4294967280 32)) ?x104)))
 (let (($x217 (= (bvand ?x125 (_ bv4294967292 32)) ?x125)))
 (let (($x84 (and $x217 $x393)))
 (let (($x186 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x181 (and true $x186)))
 (let (($x201 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x125 (bvsub ?x125 (_ bv4 32))) (bvult ?x125 (bvsub ?x125 (_ bv4 32))))))
 (let (($x303 (and (and (and $x201 $x181) $x217) $x84)))
 (let (($x213 (= true $x303)))
 (let (($x31 (not $x23)))
 (let (($x330 (=> $x31 $x213)))
 (let (($x144 (= $x330 true)))
 (let (($x56 (= $x144 true)))
 (let (($x315 (= $x56 true)))
 (let (($x143 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x224 (and $x143 $x330)))
 (let (($x392 (not $x134)))
 (let (($x105 (=> $x392 $x213)))
 (let ((?x193 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x192 (concat ?x193 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x206 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x80 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x80 (_ bv3 32))))
 (let ((?x204 (concat (select input.dst.llvm-mem ?x62) (concat ?x206 ?x192))))
 (let (($x200 (= (bvand ?x204 (_ bv4294967280 32)) ?x204)))
 (let (($x302 (= (bvand ?x80 (_ bv4294967292 32)) ?x80)))
 (let (($x197 (and $x302 $x200)))
 (let (($x183 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x80 (bvsub ?x80 (_ bv8 32))) (bvult ?x80 (bvsub ?x80 (_ bv8 32))))))
 (let (($x202 (and (and (and $x183 $x181) $x302) $x197)))
 (let (($x101 (= true $x202)))
 (let (($x108 (=> $x134 $x101)))
 (let (($x304 (and $x108 $x105)))
 (let (($x52 (= true $x304)))
 (let (($x123 (or $x134 $x392)))
 (let (($x354 (and $x31 $x123)))
 (let (($x222 (=> $x354 $x52)))
 (let (($x318 (and $x222 $x224)))
 (let (($x99 (= $x318 true)))
 (let (($x139 (= $x99 true)))
 (let (($x67 (= $x139 true)))
 (let (($x32 (= $x222 true)))
 (let (($x344 (= $x32 true)))
 (let (($x355 (= $x344 true)))
 (let (($x172 (and $x31 $x392)))
 (let (($x205 (= $x172 true)))
 (let (($x55 (= $x205 true)))
 (let (($x182 (= $x55 true)))
 (let (($x401 (= $x143 true)))
 (let (($x319 (= $x401 true)))
 (let (($x49 (= $x319 true)))
 (let ((?x176 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x173 (= (_ bv0 32) ?x176)))
 (let ((?x165 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x174 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x165)))
 (let (($x184 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x171 (and $x184 $x174)))
 (let (($x160 (and $x171 $x173)))
 (let (($x157 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x316 (and $x157 $x160)))
 (let (($x150 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x28 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x35 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x28 $x150)))))))
 (let (($x179 (and $x35 $x316)))
 (let (($x300 (= $x179 true)))
 (let (($x299 (= $x300 true)))
 (let (($x156 (= $x299 true)))
 (let (($x169 (and $x156 $x49)))
 (let (($x196 (and $x169 $x49)))
 (let (($x57 (and $x196 $x182)))
 (let (($x433 (and $x57 $x355)))
 (let (($x214 (and $x433 $x67)))
 (let (($x5 (and $x214 $x315)))
 (let (($x287 (and $x5 $x288)))
 (let (($x399 (and $x287 $x226)))
 (let (($x246 (and $x399 $x305)))
 (let (($x341 (and $x246 $x233)))
 (let (($x145 (and $x317 $x135)))
 (let (($x291 (and $x145 $x341)))
 (let (($x142 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x306 (and $x142 $x291)))
 (let (($x336 (and $x95 $x306)))
 (let (($x308 (and $x95 $x336)))
 (let (($x128 (bvugt ?x80 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x149 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x158 (=> (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x69 (and $x31 $x134)))
 (let (($x163 (=> (and $x69 (bvule ?x80 (bvsub (bvadd ?x80 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x149 $x128)))))))
 (let (($x66 (bvugt ?x125 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x103 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x20)))
 (let (($x60 (=> (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x103 $x66)))))))
 (let (($x7 (=> (and $x31 (bvule ?x125 (bvsub (bvadd ?x125 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x103 $x66)))))))
 (let (($x91 (and $x7 $x163)))
 (let (($x274 (and $x91 $x308)))
 (let (($x27 (=> $x274 $x364)))
 (not $x27))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5571X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv1074003962 32) (_ bv64 8)) (_ bv4194308 32) (_ bv16 8)) (_ bv4194312 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv4194304 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv1074003960 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv1074003963 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #xd01dd03c)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (let ((a!1 (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8)))
                                  #xd0)
                                #x4cd0d0d4
                                #xdc)
                         #xd01dd03e
                         #x1d)
                  #xd01dd03c
                  #x30)))
  (store (store a!1 #xd01dd038 #xd6) #xd01dd037 #x4c)))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #xd01dd030)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #xd01dd03c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #xd01dd03f)
  (define-fun input.ind-%var5571X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 27
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5571X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x327 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x89 (concat ?x327 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv8 32))))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x117 (concat ?x180 (concat ?x113 ?x89))))
 (let (($x333 (= ?x117 ?x117)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x337 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x85 (concat ?x337 (concat ?x268 ?x76))))
 (let (($x242 (= (_ bv0 32) ?x85)))
 (let ((?x265 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x265 (_ bv1 32))))
 (let (($x51 (=> $x93 $x333)))
 (let ((?x301 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x278 (concat ?x301 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv4 32))))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x281 (concat ?x132 ?x278))))
 (let (($x109 (= ?x127 ?x127)))
 (let (($x272 (=> $x93 $x109)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5571X))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv2 32))) ?x256)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv3 32))) ?x195)))
 (let (($x96 (= ?x185 ?x185)))
 (let (($x199 (=> $x93 $x96)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x114 (concat ?x58 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x74 (bvadd ?x39 (_ bv3 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem ?x74) (concat ?x29 ?x114))))
 (let ((?x252 (bvadd ?x69 (_ bv4 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x266))))
 (let (($x436 (= (_ bv0 32) ?x470)))
 (let ((?x367 (ite $x436 (_ bv0 32) (_ bv1 32))))
 (let (($x364 (bvuge ?x367 (_ bv1 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x85 (_ bv4 32))))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x85 (_ bv4 32)) (_ bv2 32))) ?x262)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x85 (_ bv4 32)) (_ bv3 32))) ?x250)))
 (let (($x24 (= (_ bv0 32) ?x87)))
 (let ((?x248 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x248 (_ bv1 32))))
 (let (($x27 (= $x116 $x364)))
 (let (($x251 (=> $x93 $x27)))
 (let (($x164 (= false false)))
 (let (($x282 (= ?x248 (_ bv0 32))))
 (let (($x155 (and $x93 $x282)))
 (let (($x215 (=> $x155 $x164)))
 (let (($x404 (= ?x367 (_ bv0 32))))
 (let (($x471 (= $x282 $x404)))
 (let (($x398 (=> $x93 $x471)))
 (let (($x136 (= (_ bv0 32) ?x69)))
 (let ((?x92 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (bvuge ?x92 (_ bv1 32))))
 (let (($x311 (= $x93 $x241)))
 (let (($x313 (= ?x265 (_ bv0 32))))
 (let (($x358 (=> $x313 $x164)))
 (let (($x370 (and (and (and (and (= ?x85 ?x69) (= $x313 (= ?x92 (_ bv0 32)))) $x358) $x311) $x398)))
 (let (($x342 (and (and (and (and (and $x370 $x215) $x251) $x199) $x272) $x51)))
 (let (($x362 (not true)))
 (let (($x429 (or $x362 $x342)))
 (let (($x310 (= true true)))
 (let (($x293 (and $x310 $x429)))
 (let (($x453 (= $x293 true)))
 (let (($x234 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x403 (= $x363 $x234)))
 (let (($x40 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x368 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x432 (= $x368 $x40)))
 (let (($x267 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x324 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x244 (= $x324 $x267)))
 (let (($x71 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x325 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x276 (= $x325 $x71)))
 (let (($x240 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x400 (and (and (and (and $x240 $x276) $x244) $x432) $x403)))
 (let (($x59 (= $x400 true)))
 (let (($x335 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x236 (=> $x335 $x164)))
 (let (($x237 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x289 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x396 (= $x289 $x237)))
 (let (($x270 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x331 (= $x335 $x270)))
 (let (($x309 (and (and $x331 $x396) $x236)))
 (let (($x402 (= $x309 true)))
 (let (($x259 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x347 (= $x289 $x259)))
 (let (($x397 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x326 (= $x335 $x397)))
 (let (($x336 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x286 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x308 (= $x286 $x336)))
 (let (($x291 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x306 (= $x170 $x291)))
 (let (($x233 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x258 (and (and (and (and $x233 $x306) $x308) $x326) $x347)))
 (let (($x253 (= $x258 true)))
 (let (($x225 (=> $x170 $x164)))
 (let (($x221 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x359 (= $x286 $x221)))
 (let (($x305 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x246 (= $x170 $x305)))
 (let (($x332 (and (and $x246 $x359) $x225)))
 (let (($x235 (= $x332 true)))
 (let (($x323 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x154 (=> $x323 $x164)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x307 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (bvuge ?x307 (_ bv1 32))))
 (let (($x135 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x334 (= $x135 $x399)))
 (let (($x357 (= ?x307 (_ bv0 32))))
 (let (($x226 (= $x323 $x357)))
 (let (($x352 (and (and $x226 $x334) $x154)))
 (let (($x280 (= $x352 true)))
 (let ((?x212 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x430 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x288 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x287 (concat ?x288 (concat ?x430 (concat ?x33 ?x212)))))
 (let (($x349 (= ?x287 input.dst.llvm-%t)))
 (let (($x231 (= $x349 true)))
 (let (($x284 (= $x231 true)))
 (let (($x84 (= (bvand ?x69 (_ bv4294967280 32)) ?x69)))
 (let (($x350 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x303 (and $x350 $x84)))
 (let (($x321 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x297 (and true $x321)))
 (let (($x217 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x304 (and (and (and $x217 $x297) $x350) $x303)))
 (let (($x52 (= true $x304)))
 (let (($x31 (not $x23)))
 (let (($x99 (=> $x31 $x52)))
 (let (($x5 (= $x99 true)))
 (let (($x177 (= $x5 true)))
 (let (($x131 (= $x177 true)))
 (let (($x49 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x139 (and $x49 $x99)))
 (let (($x55 (not $x136)))
 (let (($x222 (=> $x55 $x52)))
 (let ((?x188 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x193 (concat ?x188 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x81 (_ bv3 32))))
 (let ((?x75 (concat (select input.dst.llvm-mem ?x45) (concat ?x192 ?x193))))
 (let (($x197 (= (bvand ?x75 (_ bv4294967280 32)) ?x75)))
 (let (($x203 (= (bvand ?x81 (_ bv4294967292 32)) ?x81)))
 (let (($x202 (and $x203 $x197)))
 (let (($x53 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x81 (bvsub ?x81 (_ bv8 32))) (bvult ?x81 (bvsub ?x81 (_ bv8 32))))))
 (let (($x208 (and (and (and $x53 $x297) $x203) $x202)))
 (let (($x198 (= true $x208)))
 (let (($x207 (=> $x136 $x198)))
 (let (($x32 (and $x207 $x222)))
 (let (($x344 (= true $x32)))
 (let (($x294 (or $x136 $x55)))
 (let (($x320 (and $x31 $x294)))
 (let (($x355 (=> $x320 $x344)))
 (let (($x67 (and $x355 $x139)))
 (let (($x214 (= $x67 true)))
 (let (($x144 (= $x214 true)))
 (let (($x56 (= $x144 true)))
 (let (($x433 (= $x355 true)))
 (let (($x330 (= $x433 true)))
 (let (($x224 (= $x330 true)))
 (let (($x182 (and $x31 $x55)))
 (let (($x57 (= $x182 true)))
 (let (($x123 (= $x57 true)))
 (let (($x354 (= $x123 true)))
 (let (($x169 (= $x49 true)))
 (let (($x196 (= $x169 true)))
 (let (($x392 (= $x196 true)))
 (let ((?x316 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x179 (= (_ bv0 32) ?x316)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x173 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x176)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x171 $x173)))
 (let (($x300 (and $x160 $x179)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x299 (and $x28 $x300)))
 (let (($x152 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x174 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x152)))))))
 (let (($x156 (and $x174 $x299)))
 (let (($x8 (= $x156 true)))
 (let (($x298 (= $x8 true)))
 (let (($x143 (= $x298 true)))
 (let (($x172 (and $x143 $x392)))
 (let (($x205 (and $x172 $x392)))
 (let (($x140 (and $x205 $x354)))
 (let (($x318 (and $x140 $x224)))
 (let (($x315 (and $x318 $x56)))
 (let (($x151 (and $x315 $x131)))
 (let (($x50 (and $x151 $x284)))
 (let (($x63 (and $x50 $x280)))
 (let (($x232 (and $x63 $x235)))
 (let (($x239 (and $x232 $x253)))
 (let (($x346 (and $x239 $x402)))
 (let (($x275 (and $x346 $x59)))
 (let (($x166 (and $x135 $x170)))
 (let (($x249 (and $x166 $x275)))
 (let (($x317 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x243 (and $x317 $x249)))
 (let (($x434 (and $x164 $x243)))
 (let (($x353 (and $x164 $x434)))
 (let (($x94 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x137 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x80 (and $x31 $x136)))
 (let (($x295 (=> (and $x80 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x13 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x74)))
 (let (($x65 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x13)))))))
 (let (($x70 (=> (and $x31 (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x17 $x13)))))))
 (let (($x62 (and $x70 $x295)))
 (let (($x72 (and $x62 $x353)))
 (let (($x372 (=> $x72 $x453)))
 (not $x372)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5571X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x327 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x89 (concat ?x327 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv8 32))))))
 (let ((?x113 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x180 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x117 (concat ?x180 (concat ?x113 ?x89))))
 (let (($x333 (= ?x117 ?x117)))
 (let ((?x261 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x76 (concat ?x261 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x268 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x337 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x85 (concat ?x337 (concat ?x268 ?x76))))
 (let (($x242 (= (_ bv0 32) ?x85)))
 (let ((?x265 (ite $x242 (_ bv0 32) (_ bv1 32))))
 (let (($x93 (bvuge ?x265 (_ bv1 32))))
 (let (($x51 (=> $x93 $x333)))
 (let ((?x301 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x278 (concat ?x301 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv4 32))))))
 (let ((?x132 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x281 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x127 (concat ?x281 (concat ?x132 ?x278))))
 (let (($x109 (= ?x127 ?x127)))
 (let (($x272 (=> $x93 $x109)))
 (let ((?x256 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5571X))))
 (let ((?x195 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv2 32))) ?x256)))
 (let ((?x185 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv3 32))) ?x195)))
 (let (($x96 (= ?x185 ?x185)))
 (let (($x199 (=> $x93 $x96)))
 (let ((?x58 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x114 (concat ?x58 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x39 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x74 (bvadd ?x39 (_ bv3 32))))
 (let ((?x69 (concat (select input.dst.llvm-mem ?x74) (concat ?x29 ?x114))))
 (let ((?x252 (bvadd ?x69 (_ bv4 32))))
 (let ((?x266 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv1 32))) (select input.dst.llvm-mem ?x252))))
 (let ((?x470 (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x252 (_ bv2 32))) ?x266))))
 (let (($x436 (= (_ bv0 32) ?x470)))
 (let ((?x367 (ite $x436 (_ bv0 32) (_ bv1 32))))
 (let (($x364 (bvuge ?x367 (_ bv1 32))))
 (let ((?x262 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x85 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x85 (_ bv4 32))))))
 (let ((?x250 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x85 (_ bv4 32)) (_ bv2 32))) ?x262)))
 (let ((?x87 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x85 (_ bv4 32)) (_ bv3 32))) ?x250)))
 (let (($x24 (= (_ bv0 32) ?x87)))
 (let ((?x248 (ite $x24 (_ bv0 32) (_ bv1 32))))
 (let (($x116 (bvuge ?x248 (_ bv1 32))))
 (let (($x27 (= $x116 $x364)))
 (let (($x251 (=> $x93 $x27)))
 (let (($x164 (= false false)))
 (let (($x282 (= ?x248 (_ bv0 32))))
 (let (($x155 (and $x93 $x282)))
 (let (($x215 (=> $x155 $x164)))
 (let (($x404 (= ?x367 (_ bv0 32))))
 (let (($x471 (= $x282 $x404)))
 (let (($x398 (=> $x93 $x471)))
 (let (($x136 (= (_ bv0 32) ?x69)))
 (let ((?x92 (ite $x136 (_ bv0 32) (_ bv1 32))))
 (let (($x241 (bvuge ?x92 (_ bv1 32))))
 (let (($x311 (= $x93 $x241)))
 (let (($x313 (= ?x265 (_ bv0 32))))
 (let (($x358 (=> $x313 $x164)))
 (let (($x370 (and (and (and (and (= ?x85 ?x69) (= $x313 (= ?x92 (_ bv0 32)))) $x358) $x311) $x398)))
 (let (($x342 (and (and (and (and (and $x370 $x215) $x251) $x199) $x272) $x51)))
 (let (($x362 (not true)))
 (let (($x429 (or $x362 $x342)))
 (let (($x310 (= true true)))
 (let (($x293 (and $x310 $x429)))
 (let (($x453 (= $x293 true)))
 (let (($x234 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x363 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x403 (= $x363 $x234)))
 (let (($x40 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x368 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x432 (= $x368 $x40)))
 (let (($x267 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x324 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x244 (= $x324 $x267)))
 (let (($x71 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x325 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x276 (= $x325 $x71)))
 (let (($x240 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x400 (and (and (and (and $x240 $x276) $x244) $x432) $x403)))
 (let (($x59 (= $x400 true)))
 (let (($x335 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x236 (=> $x335 $x164)))
 (let (($x237 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x289 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x396 (= $x289 $x237)))
 (let (($x270 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x331 (= $x335 $x270)))
 (let (($x309 (and (and $x331 $x396) $x236)))
 (let (($x402 (= $x309 true)))
 (let (($x259 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x347 (= $x289 $x259)))
 (let (($x397 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x326 (= $x335 $x397)))
 (let (($x336 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x286 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x308 (= $x286 $x336)))
 (let (($x291 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x170 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x306 (= $x170 $x291)))
 (let (($x233 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x258 (and (and (and (and $x233 $x306) $x308) $x326) $x347)))
 (let (($x253 (= $x258 true)))
 (let (($x225 (=> $x170 $x164)))
 (let (($x221 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x359 (= $x286 $x221)))
 (let (($x305 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x246 (= $x170 $x305)))
 (let (($x332 (and (and $x246 $x359) $x225)))
 (let (($x235 (= $x332 true)))
 (let (($x323 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x154 (=> $x323 $x164)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x307 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x399 (bvuge ?x307 (_ bv1 32))))
 (let (($x135 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x334 (= $x135 $x399)))
 (let (($x357 (= ?x307 (_ bv0 32))))
 (let (($x226 (= $x323 $x357)))
 (let (($x352 (and (and $x226 $x334) $x154)))
 (let (($x280 (= $x352 true)))
 (let ((?x212 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x33 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x430 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x288 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x287 (concat ?x288 (concat ?x430 (concat ?x33 ?x212)))))
 (let (($x349 (= ?x287 input.dst.llvm-%t)))
 (let (($x231 (= $x349 true)))
 (let (($x284 (= $x231 true)))
 (let (($x84 (= (bvand ?x69 (_ bv4294967280 32)) ?x69)))
 (let (($x350 (= (bvand ?x39 (_ bv4294967292 32)) ?x39)))
 (let (($x303 (and $x350 $x84)))
 (let (($x321 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x297 (and true $x321)))
 (let (($x217 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x39 (bvsub ?x39 (_ bv4 32))) (bvult ?x39 (bvsub ?x39 (_ bv4 32))))))
 (let (($x304 (and (and (and $x217 $x297) $x350) $x303)))
 (let (($x52 (= true $x304)))
 (let (($x31 (not $x23)))
 (let (($x99 (=> $x31 $x52)))
 (let (($x5 (= $x99 true)))
 (let (($x177 (= $x5 true)))
 (let (($x131 (= $x177 true)))
 (let (($x49 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x139 (and $x49 $x99)))
 (let (($x55 (not $x136)))
 (let (($x222 (=> $x55 $x52)))
 (let ((?x188 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x193 (concat ?x188 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x192 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x81 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x81 (_ bv3 32))))
 (let ((?x75 (concat (select input.dst.llvm-mem ?x45) (concat ?x192 ?x193))))
 (let (($x197 (= (bvand ?x75 (_ bv4294967280 32)) ?x75)))
 (let (($x203 (= (bvand ?x81 (_ bv4294967292 32)) ?x81)))
 (let (($x202 (and $x203 $x197)))
 (let (($x53 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x81 (bvsub ?x81 (_ bv8 32))) (bvult ?x81 (bvsub ?x81 (_ bv8 32))))))
 (let (($x208 (and (and (and $x53 $x297) $x203) $x202)))
 (let (($x198 (= true $x208)))
 (let (($x207 (=> $x136 $x198)))
 (let (($x32 (and $x207 $x222)))
 (let (($x344 (= true $x32)))
 (let (($x294 (or $x136 $x55)))
 (let (($x320 (and $x31 $x294)))
 (let (($x355 (=> $x320 $x344)))
 (let (($x67 (and $x355 $x139)))
 (let (($x214 (= $x67 true)))
 (let (($x144 (= $x214 true)))
 (let (($x56 (= $x144 true)))
 (let (($x433 (= $x355 true)))
 (let (($x330 (= $x433 true)))
 (let (($x224 (= $x330 true)))
 (let (($x182 (and $x31 $x55)))
 (let (($x57 (= $x182 true)))
 (let (($x123 (= $x57 true)))
 (let (($x354 (= $x123 true)))
 (let (($x169 (= $x49 true)))
 (let (($x196 (= $x169 true)))
 (let (($x392 (= $x196 true)))
 (let ((?x316 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x179 (= (_ bv0 32) ?x316)))
 (let ((?x176 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x173 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x176)))
 (let (($x171 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x160 (and $x171 $x173)))
 (let (($x300 (and $x160 $x179)))
 (let (($x28 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x299 (and $x28 $x300)))
 (let (($x152 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x153 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x174 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x153 $x152)))))))
 (let (($x156 (and $x174 $x299)))
 (let (($x8 (= $x156 true)))
 (let (($x298 (= $x8 true)))
 (let (($x143 (= $x298 true)))
 (let (($x172 (and $x143 $x392)))
 (let (($x205 (and $x172 $x392)))
 (let (($x140 (and $x205 $x354)))
 (let (($x318 (and $x140 $x224)))
 (let (($x315 (and $x318 $x56)))
 (let (($x151 (and $x315 $x131)))
 (let (($x50 (and $x151 $x284)))
 (let (($x63 (and $x50 $x280)))
 (let (($x232 (and $x63 $x235)))
 (let (($x239 (and $x232 $x253)))
 (let (($x346 (and $x239 $x402)))
 (let (($x275 (and $x346 $x59)))
 (let (($x166 (and $x135 $x170)))
 (let (($x249 (and $x166 $x275)))
 (let (($x317 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x243 (and $x317 $x249)))
 (let (($x434 (and $x164 $x243)))
 (let (($x353 (and $x164 $x434)))
 (let (($x94 (bvugt ?x81 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x147 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x137 (=> (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x80 (and $x31 $x136)))
 (let (($x295 (=> (and $x80 (bvule ?x81 (bvsub (bvadd ?x81 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x147 $x94)))))))
 (let (($x13 (bvugt ?x39 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x17 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x74)))
 (let (($x65 (=> (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x17 $x13)))))))
 (let (($x70 (=> (and $x31 (bvule ?x39 (bvsub (bvadd ?x39 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x17 $x13)))))))
 (let (($x62 (and $x70 $x295)))
 (let (($x72 (and $x62 $x353)))
 (let (($x372 (=> $x72 $x453)))
 (not $x372)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 0
==result_count: 3
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
sat
(= input.dst.llvm-%t #b10000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node2-0.L2%13%bbentry.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-right-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.1.0 #b00000000000000000000000000000000)
(= input.spec-%var-node-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.2.0 #b00000000000000000000000000000000)
(= input.spec-%var-left-0.L2%8%d.0 #b00000000000000000000000000000000)
(= input.spec-%var-t-0.0 #b10000000000000000000000000000000)
(= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin #b10000000000000000000000000000000)
(= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end #b10000000000000000000000000000011)
(= input.spec-%var-val-0.L2%8%d #b00000000000000000000000000000000)
(= input.dst.llvm-mem @fun_35)
(function @fun_35
 (type (Array (_ BitVec 32) (_ BitVec 8)))
 (= (@fun_35 #b10000000000000000000000000000011) #b10000000)
 (= (@fun_35 #b10000000000000000000000000000111) #b10000000)
 (default #b00000000))
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 2
==solver_id: 3
==recvd_data
==DATA_START==
sat
(model
(define-fun input.ind-%var5571X () (_ BitVec 32) (_ bv0 32))
(define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)) (store (store (store (store (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) (_ bv0 8)) (_ bv4288560114 32) (_ bv1 8)) (_ bv65540 32) (_ bv128 8)) (_ bv65541 32) (_ bv35 8)) (_ bv65542 32) (_ bv224 8)) (_ bv65543 32) (_ bv162 8)) (_ bv65544 32) (_ bv3 8)))
(define-fun input.dst.llvm-%t () (_ BitVec 32) (_ bv65536 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32) (_ bv1 32))
(define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32) (_ bv0 32))
(define-fun input.spec-%var-t-0.0 () (_ BitVec 32) (_ bv2147483648 32))
(define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32) (_ bv4288560112 32))
(define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32) (_ bv4288560115 32))
(define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32) (_ bv0 32))
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==index: 4
==solver_id: 1
==recvd_data
==DATA_START==
sat
(model 
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32)
    #x2020202c)
  (define-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.0 () (_ BitVec 32)
    #x80000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8))
    (store (store ((as const (Array (_ BitVec 32) (_ BitVec 8))) #x20)
              #x20202028
              #x25)
       #x20202027
       #x1b))
  (define-fun input.dst.llvm-%t () (_ BitVec 32)
    #x20202020)
  (define-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32)
    #x00000000)
  (define-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32)
    #x2020202c)
  (define-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32)
    #x2020202f)
  (define-fun input.ind-%var5571X () (_ BitVec 32)
    #x00000000)
)
==DATA_END==
==solver_result_code: SOLVER_SAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 28
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5571X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x785 (concat ?x121 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv8 32))))))
 (let ((?x787 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x794 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x815 (concat ?x794 (concat ?x787 ?x785))))
 (let (($x793 (= ?x815 ?x815)))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x241 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x395 (concat ?x238 (concat ?x263 ?x311))))
 (let (($x38 (= (_ bv0 32) ?x395)))
 (let ((?x260 (ite $x38 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x260 (_ bv1 32))))
 (let (($x790 (=> $x282 $x793)))
 (let ((?x770 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x783 (concat ?x770 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv4 32))))))
 (let ((?x776 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x775 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x772 (concat ?x775 (concat ?x776 ?x783))))
 (let (($x773 (= ?x772 ?x772)))
 (let (($x782 (=> $x282 $x773)))
 (let ((?x780 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5571X))))
 (let ((?x760 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv2 32))) ?x780)))
 (let ((?x766 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv3 32))) ?x760)))
 (let (($x778 (= ?x766 ?x766)))
 (let (($x781 (=> $x282 $x778)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x58 (concat ?x130 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x124 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x46 (bvadd ?x124 (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x46) (concat ?x104 ?x58))))
 (let ((?x750 (bvadd ?x80 (_ bv4 32))))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd ?x750 (_ bv1 32))) (select input.dst.llvm-mem ?x750))))
 (let ((?x807 (concat (select input.dst.llvm-mem (bvadd ?x750 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x750 (_ bv2 32))) ?x759))))
 (let (($x753 (= (_ bv0 32) ?x807)))
 (let ((?x803 (ite $x753 (_ bv0 32) (_ bv1 32))))
 (let (($x816 (bvuge ?x803 (_ bv1 32))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x395 (_ bv4 32))))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv4 32)) (_ bv2 32))) ?x27)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv4 32)) (_ bv3 32))) ?x102)))
 (let (($x43 (= (_ bv0 32) ?x126)))
 (let ((?x21 (ite $x43 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x21 (_ bv1 32))))
 (let (($x808 (= $x185 $x816)))
 (let (($x77 (=> $x282 $x808)))
 (let (($x317 (= false false)))
 (let (($x220 (= ?x21 (_ bv0 32))))
 (let (($x768 (and $x282 $x220)))
 (let (($x764 (=> $x768 $x317)))
 (let (($x118 (= ?x803 (_ bv0 32))))
 (let (($x761 (= $x220 $x118)))
 (let (($x762 (=> $x282 $x761)))
 (let (($x30 (= (_ bv0 32) ?x80)))
 (let ((?x806 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x799 (bvuge ?x806 (_ bv1 32))))
 (let (($x752 (= $x282 $x799)))
 (let (($x339 (= ?x260 (_ bv0 32))))
 (let (($x748 (=> $x339 $x317)))
 (let (($x786 (and (and (and (and (= ?x395 ?x80) (= $x339 (= ?x806 (_ bv0 32)))) $x748) $x752) $x762)))
 (let (($x115 (and (and (and (and (and $x786 $x764) $x77) $x781) $x782) $x790)))
 (let (($x801 (not true)))
 (let (($x191 (or $x801 $x115)))
 (let (($x795 (= true true)))
 (let (($x54 (and $x795 $x191)))
 (let (($x11 (= $x54 true)))
 (let (($x677 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x485 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x688 (= $x485 $x677)))
 (let (($x265 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x695 (=> $x265 $x688)))
 (let (($x513 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x708 (and $x265 $x513)))
 (let (($x694 (=> $x708 $x317)))
 (let (($x675 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x676 (= $x513 $x675)))
 (let (($x703 (=> $x265 $x676)))
 (let (($x674 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x416 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x728 (= $x416 $x674)))
 (let (($x732 (=> $x265 $x728)))
 (let (($x479 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x714 (and $x265 $x479)))
 (let (($x735 (=> $x714 $x317)))
 (let (($x673 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x687 (= $x479 $x673)))
 (let (($x738 (=> $x265 $x687)))
 (let (($x707 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x727 (=> $x265 $x707)))
 (let (($x353 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x702 (=> $x353 $x317)))
 (let (($x726 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x671 (= $x409 $x726)))
 (let (($x59 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x713 (=> $x59 $x671)))
 (let (($x386 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x701 (and $x59 $x386)))
 (let (($x740 (=> $x701 $x317)))
 (let (($x734 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x670 (= $x386 $x734)))
 (let (($x686 (=> $x59 $x670)))
 (let (($x668 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x383 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x725 (= $x383 $x668)))
 (let (($x685 (=> $x59 $x725)))
 (let (($x445 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x737 (and $x59 $x445)))
 (let (($x684 (=> $x737 $x317)))
 (let (($x34 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x111 (= $x445 $x34)))
 (let (($x692 (=> $x59 $x111)))
 (let (($x691 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x724 (=> $x59 $x691)))
 (let (($x71 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x712 (=> $x71 $x317)))
 (let (($x706 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x690 (= $x265 $x706)))
 (let (($x699 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x19 (= $x353 $x699)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x709 (= $x59 $x667)))
 (let (($x682 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x723 (= $x71 $x682)))
 (let (($x733 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x679 (and (and (and (and (and (and $x733 $x723) $x709) $x19) $x690) $x712) $x724)))
 (let (($x711 (and (and (and (and (and (and $x679 $x692) $x684) $x685) $x686) $x740) $x713)))
 (let (($x744 (and (and (and (and (and (and $x711 $x702) $x727) $x738) $x735) $x732) $x703)))
 (let (($x804 (and (and $x744 $x694) $x695)))
 (let (($x720 (= $x804 true)))
 (let (($x589 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x659 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x629 (= $x659 $x589)))
 (let (($x90 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x248 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x584 (and $x248 $x90)))
 (let (($x590 (=> $x584 $x629)))
 (let (($x646 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x632 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x637 (= $x632 $x646)))
 (let (($x616 (=> $x584 $x637)))
 (let (($x627 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x587 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x628 (= $x587 $x627)))
 (let (($x600 (=> $x584 $x628)))
 (let (($x631 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x636 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x606 (= $x636 $x631)))
 (let (($x612 (=> $x584 $x606)))
 (let (($x614 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x599 (=> $x584 $x614)))
 (let (($x654 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x618 (= $x90 $x654)))
 (let (($x635 (=> $x248 $x618)))
 (let (($x120 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x649 (and $x248 $x120)))
 (let (($x510 (=> $x649 $x317)))
 (let (($x651 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x582 (= $x120 $x651)))
 (let (($x583 (=> $x248 $x582)))
 (let (($x611 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x580 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x581 (= $x580 $x611)))
 (let (($x195 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x596 (and $x248 $x195)))
 (let (($x657 (=> $x596 $x581)))
 (let (($x598 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x577 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x604 (= $x577 $x598)))
 (let (($x579 (=> $x596 $x604)))
 (let (($x610 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x557 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x597 (= $x557 $x610)))
 (let (($x625 (=> $x596 $x597)))
 (let (($x555 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x630 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x556 (= $x630 $x555)))
 (let (($x653 (=> $x596 $x556)))
 (let (($x643 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x634 (=> $x596 $x643)))
 (let (($x602 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x603 (= $x195 $x602)))
 (let (($x552 (=> $x248 $x603)))
 (let (($x155 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x544 (and $x248 $x155)))
 (let (($x495 (=> $x544 $x317)))
 (let (($x645 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x617 (= $x155 $x645)))
 (let (($x595 (=> $x248 $x617)))
 (let (($x550 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x551 (=> $x248 $x550)))
 (let (($x48 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x534 (=> $x48 $x317)))
 (let (($x549 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x601 (= $x248 $x549)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x623 (= $x48 $x640)))
 (let (($x591 (and (and (and (and (and (and $x623 $x601) $x534) $x551) $x595) $x495) $x552)))
 (let (($x658 (and (and (and (and (and (and $x591 $x634) $x653) $x625) $x579) $x657) $x583)))
 (let (($x664 (and (and (and (and (and (and $x658 $x510) $x635) $x599) $x612) $x600) $x616)))
 (let (($x689 (and $x664 $x590)))
 (let (($x665 (= $x689 true)))
 (let (($x561 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x528 (= $x90 $x561)))
 (let (($x511 (=> $x248 $x528)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x497 (= $x120 $x496)))
 (let (($x525 (=> $x248 $x497)))
 (let (($x536 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x570 (= $x195 $x536)))
 (let (($x505 (=> $x248 $x570)))
 (let (($x524 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x504 (= $x155 $x524)))
 (let (($x494 (=> $x248 $x504)))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x535 (=> $x248 $x539)))
 (let (($x569 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x541 (= $x265 $x569)))
 (let (($x258 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x560 (=> $x258 $x541)))
 (let (($x458 (and $x258 $x353)))
 (let (($x484 (=> $x458 $x317)))
 (let (($x492 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x493 (= $x353 $x492)))
 (let (($x527 (=> $x258 $x493)))
 (let (($x533 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x502 (= $x59 $x533)))
 (let (($x503 (=> $x258 $x502)))
 (let (($x473 (and $x258 $x71)))
 (let (($x424 (=> $x473 $x317)))
 (let (($x522 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x491 (= $x71 $x522)))
 (let (($x508 (=> $x258 $x491)))
 (let (($x529 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x559 (=> $x258 $x529)))
 (let (($x100 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x428 (=> $x100 $x317)))
 (let (($x538 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x622 (= $x248 $x538)))
 (let (($x532 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x571 (= $x48 $x532)))
 (let (($x558 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x540 (= $x258 $x558)))
 (let (($x526 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x490 (= $x100 $x526)))
 (let (($x506 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x568 (and (and (and (and (and (and $x506 $x490) $x540) $x571) $x622) $x428) $x559)))
 (let (($x543 (and (and (and (and (and (and $x568 $x508) $x424) $x503) $x527) $x484) $x560)))
 (let (($x574 (and (and (and (and (and (and $x543 $x534) $x535) $x494) $x495) $x505) $x525)))
 (let (($x642 (and (and $x574 $x510) $x511)))
 (let (($x615 (= $x642 true)))
 (let (($x419 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x481 (= $x485 $x419)))
 (let (($x411 (and $x258 $x265)))
 (let (($x442 (=> $x411 $x481)))
 (let (($x475 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x418 (= $x513 $x475)))
 (let (($x463 (=> $x411 $x418)))
 (let (($x452 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x417 (= $x416 $x452)))
 (let (($x446 (=> $x411 $x417)))
 (let (($x427 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x441 (= $x479 $x427)))
 (let (($x415 (=> $x411 $x441)))
 (let (($x413 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x426 (=> $x411 $x413)))
 (let (($x391 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x410 (= $x265 $x391)))
 (let (($x451 (=> $x258 $x410)))
 (let (($x389 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x390 (= $x353 $x389)))
 (let (($x440 (=> $x258 $x390)))
 (let (($x457 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x388 (= $x409 $x457)))
 (let (($x467 (and $x258 $x59)))
 (let (($x462 (=> $x467 $x388)))
 (let (($x425 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x450 (= $x386 $x425)))
 (let (($x439 (=> $x467 $x450)))
 (let (($x515 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x468 (= $x383 $x515)))
 (let (($x384 (=> $x467 $x468)))
 (let (($x474 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x382 (= $x445 $x474)))
 (let (($x478 (=> $x467 $x382)))
 (let (($x449 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x456 (=> $x467 $x449)))
 (let (($x455 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x448 (= $x59 $x455)))
 (let (($x378 (=> $x258 $x448)))
 (let (($x407 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x483 (= $x71 $x407)))
 (let (($x447 (=> $x258 $x483)))
 (let (($x376 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x377 (=> $x258 $x376)))
 (let (($x375 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x438 (= $x258 $x375)))
 (let (($x514 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x444 (= $x100 $x514)))
 (let (($x476 (and (and (and (and (and (and $x444 $x438) $x428) $x377) $x447) $x424) $x378)))
 (let (($x519 (and (and (and (and (and (and $x476 $x456) $x478) $x384) $x439) $x462) $x440)))
 (let (($x489 (and (and (and (and (and (and $x519 $x484) $x451) $x426) $x415) $x446) $x463)))
 (let (($x564 (and $x489 $x442)))
 (let (($x521 (= $x564 true)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x395 (_ bv8 32))))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv8 32)) (_ bv2 32))) ?x290)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv8 32)) (_ bv3 32))) ?x278)))
 (let (($x272 (= (_ bv0 32) ?x109)))
 (let ((?x361 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x113 (bvuge ?x361 (_ bv1 32))))
 (let (($x431 (= $x90 $x113)))
 (let (($x166 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x340 (and $x166 $x248)))
 (let (($x327 (=> $x340 $x431)))
 (let (($x216 (= ?x361 (_ bv0 32))))
 (let (($x61 (= $x120 $x216)))
 (let (($x180 (=> $x340 $x61)))
 (let (($x96 (= $x195 $x185)))
 (let (($x199 (=> $x340 $x96)))
 (let (($x9 (= $x155 $x220)))
 (let (($x256 (=> $x340 $x9)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv1 32))) (select input.dst.llvm-mem ?x395))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv2 32))) ?x283))))
 (let (($x471 (= input.spec-%var-t-0.2.2.2.0 ?x404)))
 (let (($x398 (=> $x340 $x471)))
 (let (($x252 (= $x248 $x282)))
 (let (($x371 (=> $x166 $x252)))
 (let (($x87 (and $x166 $x48)))
 (let (($x24 (=> $x87 $x317)))
 (let (($x262 (= $x48 $x339)))
 (let (($x250 (=> $x166 $x262)))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x296 (concat ?x306 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x335 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (concat ?x335 (concat ?x308 ?x296))))
 (let ((?x72 (bvadd ?x146 (_ bv8 32))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x133))))
 (let (($x76 (= (_ bv0 32) ?x64)))
 (let ((?x277 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x313 (bvuge ?x277 (_ bv1 32))))
 (let (($x92 (= $x265 $x313)))
 (let (($x270 (and $x166 $x258)))
 (let (($x42 (=> $x270 $x92)))
 (let (($x85 (= ?x277 (_ bv0 32))))
 (let (($x365 (= $x353 $x85)))
 (let (($x242 (=> $x270 $x365)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x146 (_ bv4 32))))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv2 32))) ?x244)))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv3 32))) ?x368)))
 (let (($x245 (= (_ bv0 32) ?x432)))
 (let ((?x363 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x363 (_ bv1 32))))
 (let (($x249 (= $x59 $x275)))
 (let (($x243 (=> $x270 $x249)))
 (let (($x234 (= ?x363 (_ bv0 32))))
 (let (($x403 (= $x71 $x234)))
 (let (($x400 (=> $x270 $x403)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x236))))
 (let (($x26 (= input.spec-%var-t-0.2.1.2.0 ?x240)))
 (let (($x325 (=> $x270 $x26)))
 (let (($x397 (= (_ bv0 32) ?x146)))
 (let ((?x326 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x326 (_ bv1 32))))
 (let (($x239 (= $x258 $x253)))
 (let (($x229 (=> $x166 $x239)))
 (let (($x165 (and $x166 $x100)))
 (let (($x347 (=> $x165 $x317)))
 (let (($x328 (= ?x326 (_ bv0 32))))
 (let (($x289 (= $x100 $x328)))
 (let (($x259 (=> $x166 $x289)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x286)))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x279)))
 (let (($x232 (= input.spec-%var-t-0.2.0 ?x235)))
 (let (($x351 (=> $x166 $x232)))
 (let (($x334 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x63 (=> $x334 $x317)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x218 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x352 (bvuge ?x218 (_ bv1 32))))
 (let (($x280 (= $x166 $x352)))
 (let (($x164 (= ?x218 (_ bv0 32))))
 (let (($x154 (= $x334 $x164)))
 (let (($x51 (and (and (and (and (and (and $x154 $x280) $x63) $x351) $x259) $x347) $x229)))
 (let (($x454 (and (and (and (and (and (and $x51 $x325) $x400) $x243) $x242) $x42) $x250)))
 (let (($x437 (and (and (and (and (and (and $x454 $x24) $x371) $x398) $x256) $x199) $x180)))
 (let (($x469 (and $x437 $x327)))
 (let (($x374 (= $x469 true)))
 (let ((?x33 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x323 (concat ?x50 (concat ?x349 (concat ?x219 ?x33)))))
 (let (($x307 (= ?x323 input.dst.llvm-%t)))
 (let (($x357 (= $x307 true)))
 (let (($x226 (= $x357 true)))
 (let (($x304 (= (bvand ?x80 (_ bv4294967280 32)) ?x80)))
 (let (($x84 (= (bvand ?x124 (_ bv4294967292 32)) ?x124)))
 (let (($x52 (and $x84 $x304)))
 (let (($x15 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x203 (and true $x15)))
 (let (($x105 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x124 (bvsub ?x124 (_ bv4 32))) (bvult ?x124 (bvsub ?x124 (_ bv4 32))))))
 (let (($x344 (and (and (and $x105 $x203) $x84) $x52)))
 (let (($x355 (= true $x344)))
 (let (($x31 (not $x23)))
 (let (($x144 (=> $x31 $x355)))
 (let (($x227 (= $x144 true)))
 (let (($x288 (= $x227 true)))
 (let (($x322 (= $x288 true)))
 (let (($x172 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x56 (and $x172 $x144)))
 (let (($x354 (not $x30)))
 (let (($x433 (=> $x354 $x355)))
 (let ((?x188 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x18 (concat ?x188 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x128 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x128 (_ bv3 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem ?x14) (concat ?x194 ?x18))))
 (let (($x208 (= (bvand ?x197 (_ bv4294967280 32)) ?x197)))
 (let (($x36 (= (bvand ?x128 (_ bv4294967292 32)) ?x128)))
 (let (($x198 (and $x36 $x208)))
 (let (($x338 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x128 (bvsub ?x128 (_ bv8 32))) (bvult ?x128 (bvsub ?x128 (_ bv8 32))))))
 (let (($x223 (and (and (and $x338 $x203) $x36) $x198)))
 (let (($x209 (= true $x223)))
 (let (($x211 (=> $x30 $x209)))
 (let (($x330 (and $x211 $x433)))
 (let (($x224 (= true $x330)))
 (let (($x178 (or $x30 $x354)))
 (let (($x190 (and $x31 $x178)))
 (let (($x318 (=> $x190 $x224)))
 (let (($x315 (and $x318 $x56)))
 (let (($x5 (= $x315 true)))
 (let (($x177 (= $x5 true)))
 (let (($x131 (= $x177 true)))
 (let (($x99 (= $x318 true)))
 (let (($x139 (= $x99 true)))
 (let (($x67 (= $x139 true)))
 (let (($x140 (and $x31 $x354)))
 (let (($x294 (= $x140 true)))
 (let (($x320 (= $x294 true)))
 (let (($x183 (= $x320 true)))
 (let (($x205 (= $x172 true)))
 (let (($x55 (= $x205 true)))
 (let (($x182 (= $x55 true)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x8 (= (_ bv0 32) ?x156)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x300 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x299 (and $x316 $x300)))
 (let (($x298 (and $x299 $x8)))
 (let (($x152 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x152 $x298)))
 (let (($x174 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x184 $x174)))))))
 (let (($x401 (and $x160 $x143)))
 (let (($x319 (= $x401 true)))
 (let (($x49 (= $x319 true)))
 (let (($x169 (= $x49 true)))
 (let (($x57 (and $x169 $x182)))
 (let (($x123 (and $x57 $x182)))
 (let (($x189 (and $x123 $x183)))
 (let (($x214 (and $x189 $x67)))
 (let (($x151 (and $x214 $x131)))
 (let (($x430 (and $x151 $x322)))
 (let (($x399 (and $x430 $x226)))
 (let (($x461 (and $x399 $x374)))
 (let (($x567 (and $x461 $x521)))
 (let (($x633 (and $x567 $x615)))
 (let (($x666 (and $x633 $x665)))
 (let (($x805 (and $x666 $x720)))
 (let (($x745 (and $x165 $x805)))
 (let (($x145 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x721 (and $x145 $x745)))
 (let (($x722 (and $x317 $x721)))
 (let (($x811 (and $x317 $x722)))
 (let (($x163 (bvugt ?x128 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x161 (=> (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x81 (and $x31 $x30)))
 (let (($x95 (=> (and $x81 (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x7 (bvugt ?x124 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x46)))
 (let (($x44 (=> (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x20 (=> (and $x31 (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x45 (and $x20 $x95)))
 (let (($x746 (and $x45 $x811)))
 (let (($x97 (=> $x746 $x11)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var5571X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node2-0.L2%13%bbentry.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-node-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(assert
 (let ((?x121 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x785 (concat ?x121 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv8 32))))))
 (let ((?x787 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x794 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x815 (concat ?x794 (concat ?x787 ?x785))))
 (let (($x793 (= ?x815 ?x815)))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x311 (concat ?x241 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x263 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x238 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x395 (concat ?x238 (concat ?x263 ?x311))))
 (let (($x38 (= (_ bv0 32) ?x395)))
 (let ((?x260 (ite $x38 (_ bv0 32) (_ bv1 32))))
 (let (($x282 (bvuge ?x260 (_ bv1 32))))
 (let (($x790 (=> $x282 $x793)))
 (let ((?x770 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x783 (concat ?x770 (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv4 32))))))
 (let ((?x776 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x775 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var5571X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x772 (concat ?x775 (concat ?x776 ?x783))))
 (let (($x773 (= ?x772 ?x772)))
 (let (($x782 (=> $x282 $x773)))
 (let ((?x780 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var5571X))))
 (let ((?x760 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv2 32))) ?x780)))
 (let ((?x766 (concat (select input.dst.llvm-mem (bvadd input.ind-%var5571X (_ bv3 32))) ?x760)))
 (let (($x778 (= ?x766 ?x766)))
 (let (($x781 (=> $x282 $x778)))
 (let ((?x130 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x58 (concat ?x130 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x124 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x46 (bvadd ?x124 (_ bv3 32))))
 (let ((?x80 (concat (select input.dst.llvm-mem ?x46) (concat ?x104 ?x58))))
 (let ((?x750 (bvadd ?x80 (_ bv4 32))))
 (let ((?x759 (concat (select input.dst.llvm-mem (bvadd ?x750 (_ bv1 32))) (select input.dst.llvm-mem ?x750))))
 (let ((?x807 (concat (select input.dst.llvm-mem (bvadd ?x750 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x750 (_ bv2 32))) ?x759))))
 (let (($x753 (= (_ bv0 32) ?x807)))
 (let ((?x803 (ite $x753 (_ bv0 32) (_ bv1 32))))
 (let (($x816 (bvuge ?x803 (_ bv1 32))))
 (let ((?x27 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x395 (_ bv4 32))))))
 (let ((?x102 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv4 32)) (_ bv2 32))) ?x27)))
 (let ((?x126 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv4 32)) (_ bv3 32))) ?x102)))
 (let (($x43 (= (_ bv0 32) ?x126)))
 (let ((?x21 (ite $x43 (_ bv0 32) (_ bv1 32))))
 (let (($x185 (bvuge ?x21 (_ bv1 32))))
 (let (($x808 (= $x185 $x816)))
 (let (($x77 (=> $x282 $x808)))
 (let (($x317 (= false false)))
 (let (($x220 (= ?x21 (_ bv0 32))))
 (let (($x768 (and $x282 $x220)))
 (let (($x764 (=> $x768 $x317)))
 (let (($x118 (= ?x803 (_ bv0 32))))
 (let (($x761 (= $x220 $x118)))
 (let (($x762 (=> $x282 $x761)))
 (let (($x30 (= (_ bv0 32) ?x80)))
 (let ((?x806 (ite $x30 (_ bv0 32) (_ bv1 32))))
 (let (($x799 (bvuge ?x806 (_ bv1 32))))
 (let (($x752 (= $x282 $x799)))
 (let (($x339 (= ?x260 (_ bv0 32))))
 (let (($x748 (=> $x339 $x317)))
 (let (($x786 (and (and (and (and (= ?x395 ?x80) (= $x339 (= ?x806 (_ bv0 32)))) $x748) $x752) $x762)))
 (let (($x115 (and (and (and (and (and $x786 $x764) $x77) $x781) $x782) $x790)))
 (let (($x801 (not true)))
 (let (($x191 (or $x801 $x115)))
 (let (($x795 (= true true)))
 (let (($x54 (and $x795 $x191)))
 (let (($x11 (= $x54 true)))
 (let (($x677 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv1 32))))
 (let (($x485 (bvuge input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv1 32))))
 (let (($x688 (= $x485 $x677)))
 (let (($x265 (bvuge input.spec-%var-t-0.2.1.2.2.0 (_ bv1 32))))
 (let (($x695 (=> $x265 $x688)))
 (let (($x513 (= input.spec-%var-t-0.2.1.2.2.2.2.0 (_ bv0 32))))
 (let (($x708 (and $x265 $x513)))
 (let (($x694 (=> $x708 $x317)))
 (let (($x675 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.2.0 (_ bv0 32))))
 (let (($x676 (= $x513 $x675)))
 (let (($x703 (=> $x265 $x676)))
 (let (($x674 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv1 32))))
 (let (($x416 (bvuge input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv1 32))))
 (let (($x728 (= $x416 $x674)))
 (let (($x732 (=> $x265 $x728)))
 (let (($x479 (= input.spec-%var-t-0.2.1.2.2.2.1.0 (_ bv0 32))))
 (let (($x714 (and $x265 $x479)))
 (let (($x735 (=> $x714 $x317)))
 (let (($x673 (= input.spec-%var-node2-0.L2%13%bbentry.2.2.1.0 (_ bv0 32))))
 (let (($x687 (= $x479 $x673)))
 (let (($x738 (=> $x265 $x687)))
 (let (($x707 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-node2-0.L2%13%bbentry.2.2.0)))
 (let (($x727 (=> $x265 $x707)))
 (let (($x353 (= input.spec-%var-t-0.2.1.2.2.0 (_ bv0 32))))
 (let (($x702 (=> $x353 $x317)))
 (let (($x726 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv1 32))))
 (let (($x409 (bvuge input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv1 32))))
 (let (($x671 (= $x409 $x726)))
 (let (($x59 (bvuge input.spec-%var-t-0.2.1.2.1.0 (_ bv1 32))))
 (let (($x713 (=> $x59 $x671)))
 (let (($x386 (= input.spec-%var-t-0.2.1.2.1.2.2.0 (_ bv0 32))))
 (let (($x701 (and $x59 $x386)))
 (let (($x740 (=> $x701 $x317)))
 (let (($x734 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.2.0 (_ bv0 32))))
 (let (($x670 (= $x386 $x734)))
 (let (($x686 (=> $x59 $x670)))
 (let (($x668 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv1 32))))
 (let (($x383 (bvuge input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv1 32))))
 (let (($x725 (= $x383 $x668)))
 (let (($x685 (=> $x59 $x725)))
 (let (($x445 (= input.spec-%var-t-0.2.1.2.1.2.1.0 (_ bv0 32))))
 (let (($x737 (and $x59 $x445)))
 (let (($x684 (=> $x737 $x317)))
 (let (($x34 (= input.spec-%var-node2-0.L2%13%bbentry.1.2.1.0 (_ bv0 32))))
 (let (($x111 (= $x445 $x34)))
 (let (($x692 (=> $x59 $x111)))
 (let (($x691 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.1.2.0)))
 (let (($x724 (=> $x59 $x691)))
 (let (($x71 (= input.spec-%var-t-0.2.1.2.1.0 (_ bv0 32))))
 (let (($x712 (=> $x71 $x317)))
 (let (($x706 (bvuge input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv1 32))))
 (let (($x690 (= $x265 $x706)))
 (let (($x699 (= input.spec-%var-node2-0.L2%13%bbentry.2.0 (_ bv0 32))))
 (let (($x19 (= $x353 $x699)))
 (let (($x667 (bvuge input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv1 32))))
 (let (($x709 (= $x59 $x667)))
 (let (($x682 (= input.spec-%var-node2-0.L2%13%bbentry.1.0 (_ bv0 32))))
 (let (($x723 (= $x71 $x682)))
 (let (($x733 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node2-0.L2%13%bbentry.0)))
 (let (($x679 (and (and (and (and (and (and $x733 $x723) $x709) $x19) $x690) $x712) $x724)))
 (let (($x711 (and (and (and (and (and (and $x679 $x692) $x684) $x685) $x686) $x740) $x713)))
 (let (($x744 (and (and (and (and (and (and $x711 $x702) $x727) $x738) $x735) $x732) $x703)))
 (let (($x804 (and (and $x744 $x694) $x695)))
 (let (($x720 (= $x804 true)))
 (let (($x589 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x659 (bvuge input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv1 32))))
 (let (($x629 (= $x659 $x589)))
 (let (($x90 (bvuge input.spec-%var-t-0.2.2.2.2.0 (_ bv1 32))))
 (let (($x248 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x584 (and $x248 $x90)))
 (let (($x590 (=> $x584 $x629)))
 (let (($x646 (= input.spec-%var-right-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x632 (= input.spec-%var-t-0.2.2.2.2.2.2.0 (_ bv0 32))))
 (let (($x637 (= $x632 $x646)))
 (let (($x616 (=> $x584 $x637)))
 (let (($x627 (bvuge input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x587 (bvuge input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv1 32))))
 (let (($x628 (= $x587 $x627)))
 (let (($x600 (=> $x584 $x628)))
 (let (($x631 (= input.spec-%var-right-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x636 (= input.spec-%var-t-0.2.2.2.2.2.1.0 (_ bv0 32))))
 (let (($x606 (= $x636 $x631)))
 (let (($x612 (=> $x584 $x606)))
 (let (($x614 (= input.spec-%var-t-0.2.2.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.2.2.0)))
 (let (($x599 (=> $x584 $x614)))
 (let (($x654 (bvuge input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x618 (= $x90 $x654)))
 (let (($x635 (=> $x248 $x618)))
 (let (($x120 (= input.spec-%var-t-0.2.2.2.2.0 (_ bv0 32))))
 (let (($x649 (and $x248 $x120)))
 (let (($x510 (=> $x649 $x317)))
 (let (($x651 (= input.spec-%var-right-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x582 (= $x120 $x651)))
 (let (($x583 (=> $x248 $x582)))
 (let (($x611 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x580 (bvuge input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv1 32))))
 (let (($x581 (= $x580 $x611)))
 (let (($x195 (bvuge input.spec-%var-t-0.2.2.2.1.0 (_ bv1 32))))
 (let (($x596 (and $x248 $x195)))
 (let (($x657 (=> $x596 $x581)))
 (let (($x598 (= input.spec-%var-right-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x577 (= input.spec-%var-t-0.2.2.2.1.2.2.0 (_ bv0 32))))
 (let (($x604 (= $x577 $x598)))
 (let (($x579 (=> $x596 $x604)))
 (let (($x610 (bvuge input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x557 (bvuge input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv1 32))))
 (let (($x597 (= $x557 $x610)))
 (let (($x625 (=> $x596 $x597)))
 (let (($x555 (= input.spec-%var-right-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x630 (= input.spec-%var-t-0.2.2.2.1.2.1.0 (_ bv0 32))))
 (let (($x556 (= $x630 $x555)))
 (let (($x653 (=> $x596 $x556)))
 (let (($x643 (= input.spec-%var-t-0.2.2.2.1.2.0 input.spec-%var-right-0.L2%8%d.2.1.2.0)))
 (let (($x634 (=> $x596 $x643)))
 (let (($x602 (bvuge input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x603 (= $x195 $x602)))
 (let (($x552 (=> $x248 $x603)))
 (let (($x155 (= input.spec-%var-t-0.2.2.2.1.0 (_ bv0 32))))
 (let (($x544 (and $x248 $x155)))
 (let (($x495 (=> $x544 $x317)))
 (let (($x645 (= input.spec-%var-right-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x617 (= $x155 $x645)))
 (let (($x595 (=> $x248 $x617)))
 (let (($x550 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-right-0.L2%8%d.2.0)))
 (let (($x551 (=> $x248 $x550)))
 (let (($x48 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x534 (=> $x48 $x317)))
 (let (($x549 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x601 (= $x248 $x549)))
 (let (($x640 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x623 (= $x48 $x640)))
 (let (($x591 (and (and (and (and (and (and $x623 $x601) $x534) $x551) $x595) $x495) $x552)))
 (let (($x658 (and (and (and (and (and (and $x591 $x634) $x653) $x625) $x579) $x657) $x583)))
 (let (($x664 (and (and (and (and (and (and $x658 $x510) $x635) $x599) $x612) $x600) $x616)))
 (let (($x689 (and $x664 $x590)))
 (let (($x665 (= $x689 true)))
 (let (($x561 (bvuge input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv1 32))))
 (let (($x528 (= $x90 $x561)))
 (let (($x511 (=> $x248 $x528)))
 (let (($x496 (= input.spec-%var-node-0.L2%8%d.2.2.2.0 (_ bv0 32))))
 (let (($x497 (= $x120 $x496)))
 (let (($x525 (=> $x248 $x497)))
 (let (($x536 (bvuge input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv1 32))))
 (let (($x570 (= $x195 $x536)))
 (let (($x505 (=> $x248 $x570)))
 (let (($x524 (= input.spec-%var-node-0.L2%8%d.2.2.1.0 (_ bv0 32))))
 (let (($x504 (= $x155 $x524)))
 (let (($x494 (=> $x248 $x504)))
 (let (($x539 (= input.spec-%var-t-0.2.2.2.0 input.spec-%var-node-0.L2%8%d.2.2.0)))
 (let (($x535 (=> $x248 $x539)))
 (let (($x569 (bvuge input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv1 32))))
 (let (($x541 (= $x265 $x569)))
 (let (($x258 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x560 (=> $x258 $x541)))
 (let (($x458 (and $x258 $x353)))
 (let (($x484 (=> $x458 $x317)))
 (let (($x492 (= input.spec-%var-node-0.L2%8%d.1.2.2.0 (_ bv0 32))))
 (let (($x493 (= $x353 $x492)))
 (let (($x527 (=> $x258 $x493)))
 (let (($x533 (bvuge input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv1 32))))
 (let (($x502 (= $x59 $x533)))
 (let (($x503 (=> $x258 $x502)))
 (let (($x473 (and $x258 $x71)))
 (let (($x424 (=> $x473 $x317)))
 (let (($x522 (= input.spec-%var-node-0.L2%8%d.1.2.1.0 (_ bv0 32))))
 (let (($x491 (= $x71 $x522)))
 (let (($x508 (=> $x258 $x491)))
 (let (($x529 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-node-0.L2%8%d.1.2.0)))
 (let (($x559 (=> $x258 $x529)))
 (let (($x100 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x428 (=> $x100 $x317)))
 (let (($x538 (bvuge input.spec-%var-node-0.L2%8%d.2.0 (_ bv1 32))))
 (let (($x622 (= $x248 $x538)))
 (let (($x532 (= input.spec-%var-node-0.L2%8%d.2.0 (_ bv0 32))))
 (let (($x571 (= $x48 $x532)))
 (let (($x558 (bvuge input.spec-%var-node-0.L2%8%d.1.0 (_ bv1 32))))
 (let (($x540 (= $x258 $x558)))
 (let (($x526 (= input.spec-%var-node-0.L2%8%d.1.0 (_ bv0 32))))
 (let (($x490 (= $x100 $x526)))
 (let (($x506 (= input.spec-%var-t-0.2.0 input.spec-%var-node-0.L2%8%d.0)))
 (let (($x568 (and (and (and (and (and (and $x506 $x490) $x540) $x571) $x622) $x428) $x559)))
 (let (($x543 (and (and (and (and (and (and $x568 $x508) $x424) $x503) $x527) $x484) $x560)))
 (let (($x574 (and (and (and (and (and (and $x543 $x534) $x535) $x494) $x495) $x505) $x525)))
 (let (($x642 (and (and $x574 $x510) $x511)))
 (let (($x615 (= $x642 true)))
 (let (($x419 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv1 32))))
 (let (($x481 (= $x485 $x419)))
 (let (($x411 (and $x258 $x265)))
 (let (($x442 (=> $x411 $x481)))
 (let (($x475 (= input.spec-%var-left-0.L2%8%d.2.2.2.2.0 (_ bv0 32))))
 (let (($x418 (= $x513 $x475)))
 (let (($x463 (=> $x411 $x418)))
 (let (($x452 (bvuge input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv1 32))))
 (let (($x417 (= $x416 $x452)))
 (let (($x446 (=> $x411 $x417)))
 (let (($x427 (= input.spec-%var-left-0.L2%8%d.2.2.2.1.0 (_ bv0 32))))
 (let (($x441 (= $x479 $x427)))
 (let (($x415 (=> $x411 $x441)))
 (let (($x413 (= input.spec-%var-t-0.2.1.2.2.2.0 input.spec-%var-left-0.L2%8%d.2.2.2.0)))
 (let (($x426 (=> $x411 $x413)))
 (let (($x391 (bvuge input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv1 32))))
 (let (($x410 (= $x265 $x391)))
 (let (($x451 (=> $x258 $x410)))
 (let (($x389 (= input.spec-%var-left-0.L2%8%d.2.2.0 (_ bv0 32))))
 (let (($x390 (= $x353 $x389)))
 (let (($x440 (=> $x258 $x390)))
 (let (($x457 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv1 32))))
 (let (($x388 (= $x409 $x457)))
 (let (($x467 (and $x258 $x59)))
 (let (($x462 (=> $x467 $x388)))
 (let (($x425 (= input.spec-%var-left-0.L2%8%d.2.1.2.2.0 (_ bv0 32))))
 (let (($x450 (= $x386 $x425)))
 (let (($x439 (=> $x467 $x450)))
 (let (($x515 (bvuge input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv1 32))))
 (let (($x468 (= $x383 $x515)))
 (let (($x384 (=> $x467 $x468)))
 (let (($x474 (= input.spec-%var-left-0.L2%8%d.2.1.2.1.0 (_ bv0 32))))
 (let (($x382 (= $x445 $x474)))
 (let (($x478 (=> $x467 $x382)))
 (let (($x449 (= input.spec-%var-t-0.2.1.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.1.2.0)))
 (let (($x456 (=> $x467 $x449)))
 (let (($x455 (bvuge input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv1 32))))
 (let (($x448 (= $x59 $x455)))
 (let (($x378 (=> $x258 $x448)))
 (let (($x407 (= input.spec-%var-left-0.L2%8%d.2.1.0 (_ bv0 32))))
 (let (($x483 (= $x71 $x407)))
 (let (($x447 (=> $x258 $x483)))
 (let (($x376 (= input.spec-%var-t-0.2.1.2.0 input.spec-%var-left-0.L2%8%d.2.0)))
 (let (($x377 (=> $x258 $x376)))
 (let (($x375 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x438 (= $x258 $x375)))
 (let (($x514 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x444 (= $x100 $x514)))
 (let (($x476 (and (and (and (and (and (and $x444 $x438) $x428) $x377) $x447) $x424) $x378)))
 (let (($x519 (and (and (and (and (and (and $x476 $x456) $x478) $x384) $x439) $x462) $x440)))
 (let (($x489 (and (and (and (and (and (and $x519 $x484) $x451) $x426) $x415) $x446) $x463)))
 (let (($x564 (and $x489 $x442)))
 (let (($x521 (= $x564 true)))
 (let ((?x290 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv8 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x395 (_ bv8 32))))))
 (let ((?x278 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv8 32)) (_ bv2 32))) ?x290)))
 (let ((?x109 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x395 (_ bv8 32)) (_ bv3 32))) ?x278)))
 (let (($x272 (= (_ bv0 32) ?x109)))
 (let ((?x361 (ite $x272 (_ bv0 32) (_ bv1 32))))
 (let (($x113 (bvuge ?x361 (_ bv1 32))))
 (let (($x431 (= $x90 $x113)))
 (let (($x166 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x340 (and $x166 $x248)))
 (let (($x327 (=> $x340 $x431)))
 (let (($x216 (= ?x361 (_ bv0 32))))
 (let (($x61 (= $x120 $x216)))
 (let (($x180 (=> $x340 $x61)))
 (let (($x96 (= $x195 $x185)))
 (let (($x199 (=> $x340 $x96)))
 (let (($x9 (= $x155 $x220)))
 (let (($x256 (=> $x340 $x9)))
 (let ((?x283 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv1 32))) (select input.dst.llvm-mem ?x395))))
 (let ((?x404 (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x395 (_ bv2 32))) ?x283))))
 (let (($x471 (= input.spec-%var-t-0.2.2.2.0 ?x404)))
 (let (($x398 (=> $x340 $x471)))
 (let (($x252 (= $x248 $x282)))
 (let (($x371 (=> $x166 $x252)))
 (let (($x87 (and $x166 $x48)))
 (let (($x24 (=> $x87 $x317)))
 (let (($x262 (= $x48 $x339)))
 (let (($x250 (=> $x166 $x262)))
 (let ((?x306 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x296 (concat ?x306 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x308 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x335 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x146 (concat ?x335 (concat ?x308 ?x296))))
 (let ((?x72 (bvadd ?x146 (_ bv8 32))))
 (let ((?x133 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv1 32))) (select input.dst.llvm-mem ?x72))))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x72 (_ bv2 32))) ?x133))))
 (let (($x76 (= (_ bv0 32) ?x64)))
 (let ((?x277 (ite $x76 (_ bv0 32) (_ bv1 32))))
 (let (($x313 (bvuge ?x277 (_ bv1 32))))
 (let (($x92 (= $x265 $x313)))
 (let (($x270 (and $x166 $x258)))
 (let (($x42 (=> $x270 $x92)))
 (let (($x85 (= ?x277 (_ bv0 32))))
 (let (($x365 (= $x353 $x85)))
 (let (($x242 (=> $x270 $x365)))
 (let ((?x244 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x146 (_ bv4 32))))))
 (let ((?x368 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv2 32))) ?x244)))
 (let ((?x432 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x146 (_ bv4 32)) (_ bv3 32))) ?x368)))
 (let (($x245 (= (_ bv0 32) ?x432)))
 (let ((?x363 (ite $x245 (_ bv0 32) (_ bv1 32))))
 (let (($x275 (bvuge ?x363 (_ bv1 32))))
 (let (($x249 (= $x59 $x275)))
 (let (($x243 (=> $x270 $x249)))
 (let (($x234 (= ?x363 (_ bv0 32))))
 (let (($x403 (= $x71 $x234)))
 (let (($x400 (=> $x270 $x403)))
 (let ((?x236 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv1 32))) (select input.dst.llvm-mem ?x146))))
 (let ((?x240 (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x146 (_ bv2 32))) ?x236))))
 (let (($x26 (= input.spec-%var-t-0.2.1.2.0 ?x240)))
 (let (($x325 (=> $x270 $x26)))
 (let (($x397 (= (_ bv0 32) ?x146)))
 (let ((?x326 (ite $x397 (_ bv0 32) (_ bv1 32))))
 (let (($x253 (bvuge ?x326 (_ bv1 32))))
 (let (($x239 (= $x258 $x253)))
 (let (($x229 (=> $x166 $x239)))
 (let (($x165 (and $x166 $x100)))
 (let (($x347 (=> $x165 $x317)))
 (let (($x328 (= ?x326 (_ bv0 32))))
 (let (($x289 (= $x100 $x328)))
 (let (($x259 (=> $x166 $x289)))
 (let ((?x286 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv1 32))) (select input.dst.llvm-mem input.dst.llvm-%t))))
 (let ((?x279 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv2 32))) ?x286)))
 (let ((?x235 (concat (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv3 32))) ?x279)))
 (let (($x232 (= input.spec-%var-t-0.2.0 ?x235)))
 (let (($x351 (=> $x166 $x232)))
 (let (($x334 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x63 (=> $x334 $x317)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x218 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x352 (bvuge ?x218 (_ bv1 32))))
 (let (($x280 (= $x166 $x352)))
 (let (($x164 (= ?x218 (_ bv0 32))))
 (let (($x154 (= $x334 $x164)))
 (let (($x51 (and (and (and (and (and (and $x154 $x280) $x63) $x351) $x259) $x347) $x229)))
 (let (($x454 (and (and (and (and (and (and $x51 $x325) $x400) $x243) $x242) $x42) $x250)))
 (let (($x437 (and (and (and (and (and (and $x454 $x24) $x371) $x398) $x256) $x199) $x180)))
 (let (($x469 (and $x437 $x327)))
 (let (($x374 (= $x469 true)))
 (let ((?x33 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x219 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x349 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x50 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x323 (concat ?x50 (concat ?x349 (concat ?x219 ?x33)))))
 (let (($x307 (= ?x323 input.dst.llvm-%t)))
 (let (($x357 (= $x307 true)))
 (let (($x226 (= $x357 true)))
 (let (($x304 (= (bvand ?x80 (_ bv4294967280 32)) ?x80)))
 (let (($x84 (= (bvand ?x124 (_ bv4294967292 32)) ?x124)))
 (let (($x52 (and $x84 $x304)))
 (let (($x15 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x203 (and true $x15)))
 (let (($x105 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x124 (bvsub ?x124 (_ bv4 32))) (bvult ?x124 (bvsub ?x124 (_ bv4 32))))))
 (let (($x344 (and (and (and $x105 $x203) $x84) $x52)))
 (let (($x355 (= true $x344)))
 (let (($x31 (not $x23)))
 (let (($x144 (=> $x31 $x355)))
 (let (($x227 (= $x144 true)))
 (let (($x288 (= $x227 true)))
 (let (($x322 (= $x288 true)))
 (let (($x172 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x56 (and $x172 $x144)))
 (let (($x354 (not $x30)))
 (let (($x433 (=> $x354 $x355)))
 (let ((?x188 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x18 (concat ?x188 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x194 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x128 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x128 (_ bv3 32))))
 (let ((?x197 (concat (select input.dst.llvm-mem ?x14) (concat ?x194 ?x18))))
 (let (($x208 (= (bvand ?x197 (_ bv4294967280 32)) ?x197)))
 (let (($x36 (= (bvand ?x128 (_ bv4294967292 32)) ?x128)))
 (let (($x198 (and $x36 $x208)))
 (let (($x338 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x128 (bvsub ?x128 (_ bv8 32))) (bvult ?x128 (bvsub ?x128 (_ bv8 32))))))
 (let (($x223 (and (and (and $x338 $x203) $x36) $x198)))
 (let (($x209 (= true $x223)))
 (let (($x211 (=> $x30 $x209)))
 (let (($x330 (and $x211 $x433)))
 (let (($x224 (= true $x330)))
 (let (($x178 (or $x30 $x354)))
 (let (($x190 (and $x31 $x178)))
 (let (($x318 (=> $x190 $x224)))
 (let (($x315 (and $x318 $x56)))
 (let (($x5 (= $x315 true)))
 (let (($x177 (= $x5 true)))
 (let (($x131 (= $x177 true)))
 (let (($x99 (= $x318 true)))
 (let (($x139 (= $x99 true)))
 (let (($x67 (= $x139 true)))
 (let (($x140 (and $x31 $x354)))
 (let (($x294 (= $x140 true)))
 (let (($x320 (= $x294 true)))
 (let (($x183 (= $x320 true)))
 (let (($x205 (= $x172 true)))
 (let (($x55 (= $x205 true)))
 (let (($x182 (= $x55 true)))
 (let ((?x156 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x8 (= (_ bv0 32) ?x156)))
 (let ((?x179 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x300 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x179)))
 (let (($x316 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x299 (and $x316 $x300)))
 (let (($x298 (and $x299 $x8)))
 (let (($x152 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x143 (and $x152 $x298)))
 (let (($x174 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x184 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x160 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x184 $x174)))))))
 (let (($x401 (and $x160 $x143)))
 (let (($x319 (= $x401 true)))
 (let (($x49 (= $x319 true)))
 (let (($x169 (= $x49 true)))
 (let (($x57 (and $x169 $x182)))
 (let (($x123 (and $x57 $x182)))
 (let (($x189 (and $x123 $x183)))
 (let (($x214 (and $x189 $x67)))
 (let (($x151 (and $x214 $x131)))
 (let (($x430 (and $x151 $x322)))
 (let (($x399 (and $x430 $x226)))
 (let (($x461 (and $x399 $x374)))
 (let (($x567 (and $x461 $x521)))
 (let (($x633 (and $x567 $x615)))
 (let (($x666 (and $x633 $x665)))
 (let (($x805 (and $x666 $x720)))
 (let (($x745 (and $x165 $x805)))
 (let (($x145 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x721 (and $x145 $x745)))
 (let (($x722 (and $x317 $x721)))
 (let (($x811 (and $x317 $x722)))
 (let (($x163 (bvugt ?x128 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x158 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x161 (=> (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x81 (and $x31 $x30)))
 (let (($x95 (=> (and $x81 (bvule ?x128 (bvsub (bvadd ?x128 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x158 $x163)))))))
 (let (($x7 (bvugt ?x124 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x60 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x46)))
 (let (($x44 (=> (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x20 (=> (and $x31 (bvule ?x124 (bvsub (bvadd ?x124 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x60 $x7)))))))
 (let (($x45 (and $x20 $x95)))
 (let (($x746 (and $x45 $x811)))
 (let (($x97 (=> $x746 $x11)))
 (not $x97))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 29
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6025X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x454 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x87 (concat ?x454 (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv8 32))))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x371 (concat ?x252 (concat ?x106 ?x87))))
 (let (($x16 (= ?x371 ?x371)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x394 (concat ?x348 (concat ?x51 ?x239))))
 (let (($x309 (= (_ bv0 32) ?x394)))
 (let ((?x402 (ite $x309 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x402 (_ bv1 32))))
 (let (($x340 (=> $x237 $x16)))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x263 (concat ?x312 (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv4 32))))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x395 (concat ?x254 (concat ?x241 ?x263))))
 (let (($x38 (= ?x395 ?x395)))
 (let (($x260 (=> $x237 $x38)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6025X))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv2 32))) ?x242)))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv3 32))) ?x313)))
 (let (($x83 (= ?x372 ?x372)))
 (let (($x48 (=> $x237 $x83)))
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x202 (concat ?x197 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x94 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x94 (_ bv3 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem ?x91) (concat ?x198 ?x202))))
 (let ((?x400 (bvadd ?x211 (_ bv4 32))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv1 32))) (select input.dst.llvm-mem ?x400))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv2 32))) ?x249))))
 (let (($x261 (= (_ bv0 32) ?x273)))
 (let ((?x337 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x337 (_ bv1 32))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x394 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x394 (_ bv4 32))))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x394 (_ bv4 32)) (_ bv2 32))) ?x325)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x394 (_ bv4 32)) (_ bv3 32))) ?x71)))
 (let (($x271 (= (_ bv0 32) ?x40)))
 (let ((?x472 (ite $x271 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (bvuge ?x472 (_ bv1 32))))
 (let (($x268 (= $x310 $x133)))
 (let (($x64 (=> $x237 $x268)))
 (let (($x345 (= ?x337 (_ bv0 32))))
 (let (($x324 (= ?x472 (_ bv0 32))))
 (let (($x362 (= $x324 $x345)))
 (let (($x269 (=> $x237 $x362)))
 (let (($x368 (= (_ bv0 32) ?x211)))
 (let ((?x432 (ite $x368 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x432 (_ bv1 32))))
 (let (($x403 (= $x237 $x234)))
 (let (($x245 (= ?x432 (_ bv0 32))))
 (let (($x396 (= ?x402 (_ bv0 32))))
 (let (($x363 (= $x396 $x245)))
 (let (($x244 (= ?x394 ?x211)))
 (let (($x145 (= false false)))
 (let (($x267 (and $x237 $x324)))
 (let (($x264 (=> $x267 $x145)))
 (let (($x285 (=> $x396 $x145)))
 (let (($x119 (and (and (and (and (and (and $x285 $x264) $x244) $x363) $x403) $x269) $x64)))
 (let (($x283 (and (and (and $x119 $x48) $x260) $x340)))
 (let (($x165 (not true)))
 (let (($x470 (or $x165 $x283)))
 (let (($x117 (= true true)))
 (let (($x404 (and $x117 $x470)))
 (let (($x471 (= $x404 true)))
 (let (($x306 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x341 (= $x291 $x306)))
 (let (($x336 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x274 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x308 (= $x274 $x336)))
 (let (($x296 (and $x308 $x341)))
 (let (($x228 (= $x296 true)))
 (let (($x232 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x235 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x351 (= $x235 $x232)))
 (let (($x286 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x168 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x279 (= $x168 $x286)))
 (let (($x360 (and $x279 $x351)))
 (let (($x150 (= $x360 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x63 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x332 (bvuge ?x63 (_ bv1 32))))
 (let (($x184 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x221 (= $x184 $x332)))
 (let (($x89 (= ?x63 (_ bv0 32))))
 (let (($x317 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x225 (= $x317 $x89)))
 (let (($x359 (and $x225 $x221)))
 (let (($x305 (= $x359 true)))
 (let ((?x323 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x357 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x170 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x164 (concat ?x170 (concat ?x357 ?x323)))))
 (let (($x166 (= ?x154 input.dst.llvm-%t)))
 (let (($x352 (= $x166 true)))
 (let (($x280 (= $x352 true)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x130 (concat ?x29 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x103 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x73 (bvadd ?x103 (_ bv3 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem ?x73) (concat ?x69 ?x130))))
 (let (($x224 (= (bvand ?x81 (_ bv4294967280 32)) ?x81)))
 (let (($x433 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x318 (and $x433 $x224)))
 (let (($x193 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x194 (and true $x193)))
 (let (($x344 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv4 32))) (bvult ?x103 (bvsub ?x103 (_ bv4 32))))))
 (let (($x67 (and (and (and $x344 $x194) $x433) $x318)))
 (let (($x214 (= true $x67)))
 (let (($x31 (not $x23)))
 (let (($x288 (=> $x31 $x214)))
 (let (($x212 (= $x288 true)))
 (let (($x219 (= $x212 true)))
 (let (($x33 (= $x219 true)))
 (let (($x320 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x322 (and $x320 $x288)))
 (let (($x149 (= (_ bv0 32) ?x81)))
 (let (($x297 (not $x149)))
 (let (($x144 (=> $x297 $x214)))
 (let (($x217 (= (bvand ?x211 (_ bv4294967280 32)) ?x211)))
 (let (($x192 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x68 (and $x192 $x217)))
 (let (($x108 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x94 (bvsub ?x94 (_ bv8 32))) (bvult ?x94 (bvsub ?x94 (_ bv8 32))))))
 (let (($x222 (and (and (and $x108 $x194) $x192) $x68)))
 (let (($x393 (= true $x222)))
 (let (($x84 (=> $x149 $x393)))
 (let (($x56 (and $x84 $x144)))
 (let (($x315 (= true $x56)))
 (let (($x321 (or $x149 $x297)))
 (let (($x101 (and $x31 $x321)))
 (let (($x5 (=> $x101 $x315)))
 (let (($x430 (and $x5 $x322)))
 (let (($x284 (= $x430 true)))
 (let (($x50 (= $x284 true)))
 (let (($x287 (= $x50 true)))
 (let (($x177 (= $x5 true)))
 (let (($x131 (= $x177 true)))
 (let (($x151 (= $x131 true)))
 (let (($x128 (and $x31 $x149)))
 (let (($x53 (= $x128 true)))
 (let (($x175 (= $x53 true)))
 (let (($x181 (= $x175 true)))
 (let (($x183 (= $x320 true)))
 (let (($x189 (= $x183 true)))
 (let (($x178 (= $x189 true)))
 (let ((?x392 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x172 (= (_ bv0 32) ?x392)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x169 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x49)))
 (let (($x319 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (and $x319 $x169)))
 (let (($x205 (and $x196 $x172)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x55 (and $x160 $x205)))
 (let (($x300 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x401 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x300)))))))
 (let (($x182 (and $x401 $x55)))
 (let (($x57 (= $x182 true)))
 (let (($x123 (= $x57 true)))
 (let (($x354 (= $x123 true)))
 (let (($x190 (and $x354 $x178)))
 (let (($x186 (and $x190 $x178)))
 (let (($x338 (and $x186 $x181)))
 (let (($x227 (and $x338 $x151)))
 (let (($x349 (and $x227 $x287)))
 (let (($x369 (and $x349 $x33)))
 (let (($x366 (and $x369 $x280)))
 (let (($x246 (and $x366 $x305)))
 (let (($x100 (and $x246 $x150)))
 (let (($x146 (and $x100 $x228)))
 (let (($x28 (and $x184 $x168)))
 (let (($x397 (and $x28 $x146)))
 (let (($x173 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x326 (and $x173 $x397)))
 (let (($x328 (and $x145 $x326)))
 (let (($x289 (and $x145 $x328)))
 (let (($x295 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x135 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x142 (=> (and $x128 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x70 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x122 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x70)))))))
 (let (($x74 (=> (and $x31 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x65 $x70)))))))
 (let (($x14 (and $x74 $x142)))
 (let (($x259 (and $x14 $x289)))
 (let (($x398 (=> $x259 $x471)))
 (not $x398)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6025X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x454 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x87 (concat ?x454 (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv8 32))))))
 (let ((?x106 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x252 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x371 (concat ?x252 (concat ?x106 ?x87))))
 (let (($x16 (= ?x371 ?x371)))
 (let ((?x253 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x253 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x51 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x348 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x394 (concat ?x348 (concat ?x51 ?x239))))
 (let (($x309 (= (_ bv0 32) ?x394)))
 (let ((?x402 (ite $x309 (_ bv0 32) (_ bv1 32))))
 (let (($x237 (bvuge ?x402 (_ bv1 32))))
 (let (($x340 (=> $x237 $x16)))
 (let ((?x312 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x263 (concat ?x312 (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv4 32))))))
 (let ((?x241 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6025X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x395 (concat ?x254 (concat ?x241 ?x263))))
 (let (($x38 (= ?x395 ?x395)))
 (let (($x260 (=> $x237 $x38)))
 (let ((?x242 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6025X))))
 (let ((?x313 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv2 32))) ?x242)))
 (let ((?x372 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6025X (_ bv3 32))) ?x313)))
 (let (($x83 (= ?x372 ?x372)))
 (let (($x48 (=> $x237 $x83)))
 (let ((?x197 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x202 (concat ?x197 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x198 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x94 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x91 (bvadd ?x94 (_ bv3 32))))
 (let ((?x211 (concat (select input.dst.llvm-mem ?x91) (concat ?x198 ?x202))))
 (let ((?x400 (bvadd ?x211 (_ bv4 32))))
 (let ((?x249 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv1 32))) (select input.dst.llvm-mem ?x400))))
 (let ((?x273 (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv3 32))) (concat (select input.dst.llvm-mem (bvadd ?x400 (_ bv2 32))) ?x249))))
 (let (($x261 (= (_ bv0 32) ?x273)))
 (let ((?x337 (ite $x261 (_ bv0 32) (_ bv1 32))))
 (let (($x133 (bvuge ?x337 (_ bv1 32))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x394 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x394 (_ bv4 32))))))
 (let ((?x71 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x394 (_ bv4 32)) (_ bv2 32))) ?x325)))
 (let ((?x40 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x394 (_ bv4 32)) (_ bv3 32))) ?x71)))
 (let (($x271 (= (_ bv0 32) ?x40)))
 (let ((?x472 (ite $x271 (_ bv0 32) (_ bv1 32))))
 (let (($x310 (bvuge ?x472 (_ bv1 32))))
 (let (($x268 (= $x310 $x133)))
 (let (($x64 (=> $x237 $x268)))
 (let (($x345 (= ?x337 (_ bv0 32))))
 (let (($x324 (= ?x472 (_ bv0 32))))
 (let (($x362 (= $x324 $x345)))
 (let (($x269 (=> $x237 $x362)))
 (let (($x368 (= (_ bv0 32) ?x211)))
 (let ((?x432 (ite $x368 (_ bv0 32) (_ bv1 32))))
 (let (($x234 (bvuge ?x432 (_ bv1 32))))
 (let (($x403 (= $x237 $x234)))
 (let (($x245 (= ?x432 (_ bv0 32))))
 (let (($x396 (= ?x402 (_ bv0 32))))
 (let (($x363 (= $x396 $x245)))
 (let (($x244 (= ?x394 ?x211)))
 (let (($x145 (= false false)))
 (let (($x267 (and $x237 $x324)))
 (let (($x264 (=> $x267 $x145)))
 (let (($x285 (=> $x396 $x145)))
 (let (($x119 (and (and (and (and (and (and $x285 $x264) $x244) $x363) $x403) $x269) $x64)))
 (let (($x283 (and (and (and $x119 $x48) $x260) $x340)))
 (let (($x165 (not true)))
 (let (($x470 (or $x165 $x283)))
 (let (($x117 (= true true)))
 (let (($x404 (and $x117 $x470)))
 (let (($x471 (= $x404 true)))
 (let (($x306 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x341 (= $x291 $x306)))
 (let (($x336 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x274 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x308 (= $x274 $x336)))
 (let (($x296 (and $x308 $x341)))
 (let (($x228 (= $x296 true)))
 (let (($x232 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x235 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x351 (= $x235 $x232)))
 (let (($x286 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x168 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x279 (= $x168 $x286)))
 (let (($x360 (and $x279 $x351)))
 (let (($x150 (= $x360 true)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x63 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x332 (bvuge ?x63 (_ bv1 32))))
 (let (($x184 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x221 (= $x184 $x332)))
 (let (($x89 (= ?x63 (_ bv0 32))))
 (let (($x317 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x225 (= $x317 $x89)))
 (let (($x359 (and $x225 $x221)))
 (let (($x305 (= $x359 true)))
 (let ((?x323 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x357 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x170 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x164 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x154 (concat ?x164 (concat ?x170 (concat ?x357 ?x323)))))
 (let (($x166 (= ?x154 input.dst.llvm-%t)))
 (let (($x352 (= $x166 true)))
 (let (($x280 (= $x352 true)))
 (let ((?x29 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x130 (concat ?x29 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x103 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x73 (bvadd ?x103 (_ bv3 32))))
 (let ((?x81 (concat (select input.dst.llvm-mem ?x73) (concat ?x69 ?x130))))
 (let (($x224 (= (bvand ?x81 (_ bv4294967280 32)) ?x81)))
 (let (($x433 (= (bvand ?x103 (_ bv4294967292 32)) ?x103)))
 (let (($x318 (and $x433 $x224)))
 (let (($x193 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x194 (and true $x193)))
 (let (($x344 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x103 (bvsub ?x103 (_ bv4 32))) (bvult ?x103 (bvsub ?x103 (_ bv4 32))))))
 (let (($x67 (and (and (and $x344 $x194) $x433) $x318)))
 (let (($x214 (= true $x67)))
 (let (($x31 (not $x23)))
 (let (($x288 (=> $x31 $x214)))
 (let (($x212 (= $x288 true)))
 (let (($x219 (= $x212 true)))
 (let (($x33 (= $x219 true)))
 (let (($x320 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x322 (and $x320 $x288)))
 (let (($x149 (= (_ bv0 32) ?x81)))
 (let (($x297 (not $x149)))
 (let (($x144 (=> $x297 $x214)))
 (let (($x217 (= (bvand ?x211 (_ bv4294967280 32)) ?x211)))
 (let (($x192 (= (bvand ?x94 (_ bv4294967292 32)) ?x94)))
 (let (($x68 (and $x192 $x217)))
 (let (($x108 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x94 (bvsub ?x94 (_ bv8 32))) (bvult ?x94 (bvsub ?x94 (_ bv8 32))))))
 (let (($x222 (and (and (and $x108 $x194) $x192) $x68)))
 (let (($x393 (= true $x222)))
 (let (($x84 (=> $x149 $x393)))
 (let (($x56 (and $x84 $x144)))
 (let (($x315 (= true $x56)))
 (let (($x321 (or $x149 $x297)))
 (let (($x101 (and $x31 $x321)))
 (let (($x5 (=> $x101 $x315)))
 (let (($x430 (and $x5 $x322)))
 (let (($x284 (= $x430 true)))
 (let (($x50 (= $x284 true)))
 (let (($x287 (= $x50 true)))
 (let (($x177 (= $x5 true)))
 (let (($x131 (= $x177 true)))
 (let (($x151 (= $x131 true)))
 (let (($x128 (and $x31 $x149)))
 (let (($x53 (= $x128 true)))
 (let (($x175 (= $x53 true)))
 (let (($x181 (= $x175 true)))
 (let (($x183 (= $x320 true)))
 (let (($x189 (= $x183 true)))
 (let (($x178 (= $x189 true)))
 (let ((?x392 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x172 (= (_ bv0 32) ?x392)))
 (let ((?x49 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x169 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x49)))
 (let (($x319 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x196 (and $x319 $x169)))
 (let (($x205 (and $x196 $x172)))
 (let (($x160 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x55 (and $x160 $x205)))
 (let (($x300 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x401 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x300)))))))
 (let (($x182 (and $x401 $x55)))
 (let (($x57 (= $x182 true)))
 (let (($x123 (= $x57 true)))
 (let (($x354 (= $x123 true)))
 (let (($x190 (and $x354 $x178)))
 (let (($x186 (and $x190 $x178)))
 (let (($x338 (and $x186 $x181)))
 (let (($x227 (and $x338 $x151)))
 (let (($x349 (and $x227 $x287)))
 (let (($x369 (and $x349 $x33)))
 (let (($x366 (and $x369 $x280)))
 (let (($x246 (and $x366 $x305)))
 (let (($x100 (and $x246 $x150)))
 (let (($x146 (and $x100 $x228)))
 (let (($x28 (and $x184 $x168)))
 (let (($x397 (and $x28 $x146)))
 (let (($x173 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x326 (and $x173 $x397)))
 (let (($x328 (and $x145 $x326)))
 (let (($x289 (and $x145 $x328)))
 (let (($x295 (bvugt ?x94 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x137 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x91)))
 (let (($x135 (=> (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x142 (=> (and $x128 (bvule ?x94 (bvsub (bvadd ?x94 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x137 $x295)))))))
 (let (($x70 (bvugt ?x103 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x65 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x73)))
 (let (($x122 (=> (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x65 $x70)))))))
 (let (($x74 (=> (and $x31 (bvule ?x103 (bvsub (bvadd ?x103 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x65 $x70)))))))
 (let (($x14 (and $x74 $x142)))
 (let (($x259 (and $x14 $x289)))
 (let (($x398 (=> $x259 $x471)))
 (not $x398)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 30
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6055X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x329 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x395 (concat ?x329 (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv8 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x252 (concat ?x282 (concat ?x260 ?x395))))
 (let (($x24 (= ?x252 ?x252)))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x333 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x285 (concat ?x396 (concat ?x394 ?x239))))
 (let (($x237 (= (_ bv0 32) ?x285)))
 (let ((?x236 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x342 (bvuge ?x236 (_ bv1 32))))
 (let (($x106 (=> $x342 $x24)))
 (let ((?x372 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x372 (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv4 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x93 (concat ?x254 (concat ?x255 ?x83))))
 (let (($x241 (= ?x93 ?x93)))
 (let (($x238 (=> $x342 $x241)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6055X))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv2 32))) ?x64)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv3 32))) ?x92)))
 (let (($x85 (= ?x265 ?x265)))
 (let (($x365 (=> $x342 $x85)))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x400 (concat ?x266 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x275 (concat ?x59 (concat ?x72 ?x400))))
 (let (($x429 (= (_ bv0 32) ?x275)))
 (let ((?x249 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x249 (_ bv1 32))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x285 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x285 (_ bv4 32))))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x285 (_ bv4 32)) (_ bv2 32))) ?x325)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x285 (_ bv4 32)) (_ bv3 32))) ?x271)))
 (let (($x264 (= (_ bv0 32) ?x267)))
 (let ((?x435 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (bvuge ?x435 (_ bv1 32))))
 (let (($x362 (= $x337 $x345)))
 (let (($x269 (=> $x342 $x362)))
 (let (($x434 (= ?x249 (_ bv0 32))))
 (let (($x244 (= ?x435 (_ bv0 32))))
 (let (($x273 (= $x244 $x434)))
 (let (($x261 (=> $x342 $x273)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x221 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x221 (_ bv1 32))))
 (let (($x363 (= $x342 $x246)))
 (let (($x359 (= ?x221 (_ bv0 32))))
 (let (($x276 (= ?x236 (_ bv0 32))))
 (let (($x245 (= $x276 $x359)))
 (let (($x432 (= ?x285 input.dst.llvm-%t)))
 (let (($x162 (= false false)))
 (let (($x436 (and $x342 $x244)))
 (let (($x368 (=> $x436 $x162)))
 (let (($x86 (=> $x276 $x162)))
 (let (($x371 (and (and (and (and (and (and $x86 $x368) $x432) $x245) $x363) $x261) $x269)))
 (let (($x283 (and (and (and $x371 $x365) $x238) $x106)))
 (let (($x229 (not true)))
 (let (($x470 (or $x229 $x283)))
 (let (($x348 (= true true)))
 (let (($x404 (and $x348 $x470)))
 (let (($x471 (= $x404 true)))
 (let (($x146 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x228 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x397 (= $x228 $x146)))
 (let (($x341 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x291 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x296 (= $x291 $x341)))
 (let (($x326 (and $x296 $x397)))
 (let (($x328 (= $x326 true)))
 (let (($x100 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x150 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x233 (= $x150 $x100)))
 (let (($x351 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x153 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x360 (= $x153 $x351)))
 (let (($x274 (and $x360 $x233)))
 (let (($x335 (= $x274 true)))
 (let (($x168 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x247 (= $x168 $x246)))
 (let (($x332 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x305 (= $x332 $x359)))
 (let (($x286 (and $x305 $x247)))
 (let (($x279 (= $x286 true)))
 (let ((?x307 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x323 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x366 (concat ?x280 (concat ?x154 (concat ?x323 ?x307)))))
 (let (($x317 (= ?x366 input.dst.llvm-%t)))
 (let (($x63 (= $x317 true)))
 (let (($x89 (= $x63 true)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x29 (concat ?x104 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x107 (bvadd ?x17 (_ bv3 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem ?x107) (concat ?x80 ?x29))))
 (let (($x318 (= (bvand ?x128 (_ bv4294967280 32)) ?x128)))
 (let (($x330 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x67 (and $x330 $x318)))
 (let (($x206 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x188 (and true $x206)))
 (let (($x433 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv4 32))) (bvult ?x17 (bvsub ?x17 (_ bv4 32))))))
 (let (($x56 (and (and (and $x433 $x188) $x330) $x67)))
 (let (($x315 (= true $x56)))
 (let (($x31 (not $x23)))
 (let (($x284 (=> $x31 $x315)))
 (let (($x369 (= $x284 true)))
 (let (($x218 (= $x369 true)))
 (let (($x164 (= $x218 true)))
 (let (($x178 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x50 (and $x178 $x284)))
 (let (($x147 (= (_ bv0 32) ?x128)))
 (let (($x15 (not $x147)))
 (let (($x5 (=> $x15 $x315)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x197 (concat ?x75 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x163 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x163 (_ bv3 32))))
 (let ((?x213 (concat (select input.dst.llvm-mem ?x62) (concat ?x202 ?x197))))
 (let (($x68 (= (bvand ?x213 (_ bv4294967280 32)) ?x213)))
 (let (($x209 (= (bvand ?x163 (_ bv4294967292 32)) ?x163)))
 (let (($x222 (and $x209 $x68)))
 (let (($x201 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x163 (bvsub ?x163 (_ bv8 32))) (bvult ?x163 (bvsub ?x163 (_ bv8 32))))))
 (let (($x303 (and (and (and $x201 $x188) $x209) $x222)))
 (let (($x32 (= true $x303)))
 (let (($x304 (=> $x147 $x32)))
 (let (($x177 (and $x304 $x5)))
 (let (($x131 (= true $x177)))
 (let (($x302 (or $x147 $x15)))
 (let (($x203 (and $x31 $x302)))
 (let (($x151 (=> $x203 $x131)))
 (let (($x287 (and $x151 $x50)))
 (let (($x349 (= $x287 true)))
 (let (($x212 (= $x349 true)))
 (let (($x219 (= $x212 true)))
 (let (($x227 (= $x151 true)))
 (let (($x288 (= $x227 true)))
 (let (($x322 (= $x288 true)))
 (let (($x338 (= $x23 true)))
 (let (($x297 (= $x338 true)))
 (let (($x321 (= $x297 true)))
 (let (($x190 (= $x178 true)))
 (let (($x186 (= $x190 true)))
 (let (($x53 (= $x186 true)))
 (let ((?x55 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x182 (= (_ bv0 32) ?x55)))
 (let ((?x392 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x392)))
 (let (($x196 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (and $x196 $x172)))
 (let (($x57 (and $x205 $x182)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (and $x179 $x57)))
 (let (($x298 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x169 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x298)))))))
 (let (($x354 (and $x169 $x123)))
 (let (($x140 (= $x354 true)))
 (let (($x294 (= $x140 true)))
 (let (($x320 (= $x294 true)))
 (let (($x175 (and $x320 $x53)))
 (let (($x181 (and $x175 $x53)))
 (let (($x101 (and $x181 $x321)))
 (let (($x430 (and $x101 $x322)))
 (let (($x33 (and $x430 $x219)))
 (let (($x399 (and $x33 $x164)))
 (let (($x225 (and $x399 $x89)))
 (let (($x235 (and $x225 $x279)))
 (let (($x336 (and $x235 $x335)))
 (let (($x289 (and $x336 $x328)))
 (let (($x152 (and $x168 $x153)))
 (let (($x259 (and $x152 $x289)))
 (let (($x184 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x117 (and $x184 $x259)))
 (let (($x165 (and $x162 $x117)))
 (let (($x347 (and $x162 $x165)))
 (let (($x95 (bvugt ?x163 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x35 (=> (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x95)))))))
 (let (($x94 (and $x31 $x147)))
 (let (($x148 (=> (and $x94 (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x161 $x95)))))))
 (let (($x20 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x47 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x20)))))))
 (let (($x46 (=> (and $x31 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x20)))))))
 (let (($x91 (and $x46 $x148)))
 (let (($x331 (and $x91 $x347)))
 (let (($x398 (=> $x331 $x471)))
 (not $x398)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6055X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x329 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x395 (concat ?x329 (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv8 32))))))
 (let ((?x260 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x282 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x252 (concat ?x282 (concat ?x260 ?x395))))
 (let (($x24 (= ?x252 ?x252)))
 (let ((?x333 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv1 32)))))
 (let ((?x239 (concat ?x333 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv8 32))))))
 (let ((?x394 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv2 32)))))
 (let ((?x396 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv8 32)) (_ bv3 32)))))
 (let ((?x285 (concat ?x396 (concat ?x394 ?x239))))
 (let (($x237 (= (_ bv0 32) ?x285)))
 (let ((?x236 (ite $x237 (_ bv0 32) (_ bv1 32))))
 (let (($x342 (bvuge ?x236 (_ bv1 32))))
 (let (($x106 (=> $x342 $x24)))
 (let ((?x372 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x83 (concat ?x372 (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv4 32))))))
 (let ((?x255 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x254 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6055X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x93 (concat ?x254 (concat ?x255 ?x83))))
 (let (($x241 (= ?x93 ?x93)))
 (let (($x238 (=> $x342 $x241)))
 (let ((?x64 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6055X))))
 (let ((?x92 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv2 32))) ?x64)))
 (let ((?x265 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6055X (_ bv3 32))) ?x92)))
 (let (($x85 (= ?x265 ?x265)))
 (let (($x365 (=> $x342 $x85)))
 (let ((?x266 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv1 32)))))
 (let ((?x400 (concat ?x266 (select input.dst.llvm-mem (bvadd input.dst.llvm-%t (_ bv4 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.dst.llvm-%t (_ bv4 32)) (_ bv3 32)))))
 (let ((?x275 (concat ?x59 (concat ?x72 ?x400))))
 (let (($x429 (= (_ bv0 32) ?x275)))
 (let ((?x249 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x345 (bvuge ?x249 (_ bv1 32))))
 (let ((?x325 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x285 (_ bv4 32)) (_ bv1 32))) (select input.dst.llvm-mem (bvadd ?x285 (_ bv4 32))))))
 (let ((?x271 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x285 (_ bv4 32)) (_ bv2 32))) ?x325)))
 (let ((?x267 (concat (select input.dst.llvm-mem (bvadd (bvadd ?x285 (_ bv4 32)) (_ bv3 32))) ?x271)))
 (let (($x264 (= (_ bv0 32) ?x267)))
 (let ((?x435 (ite $x264 (_ bv0 32) (_ bv1 32))))
 (let (($x337 (bvuge ?x435 (_ bv1 32))))
 (let (($x362 (= $x337 $x345)))
 (let (($x269 (=> $x342 $x362)))
 (let (($x434 (= ?x249 (_ bv0 32))))
 (let (($x244 (= ?x435 (_ bv0 32))))
 (let (($x273 (= $x244 $x434)))
 (let (($x261 (=> $x342 $x273)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x221 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x246 (bvuge ?x221 (_ bv1 32))))
 (let (($x363 (= $x342 $x246)))
 (let (($x359 (= ?x221 (_ bv0 32))))
 (let (($x276 (= ?x236 (_ bv0 32))))
 (let (($x245 (= $x276 $x359)))
 (let (($x432 (= ?x285 input.dst.llvm-%t)))
 (let (($x162 (= false false)))
 (let (($x436 (and $x342 $x244)))
 (let (($x368 (=> $x436 $x162)))
 (let (($x86 (=> $x276 $x162)))
 (let (($x371 (and (and (and (and (and (and $x86 $x368) $x432) $x245) $x363) $x261) $x269)))
 (let (($x283 (and (and (and $x371 $x365) $x238) $x106)))
 (let (($x229 (not true)))
 (let (($x470 (or $x229 $x283)))
 (let (($x348 (= true true)))
 (let (($x404 (and $x348 $x470)))
 (let (($x471 (= $x404 true)))
 (let (($x146 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x228 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x397 (= $x228 $x146)))
 (let (($x341 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x291 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x296 (= $x291 $x341)))
 (let (($x326 (and $x296 $x397)))
 (let (($x328 (= $x326 true)))
 (let (($x100 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x150 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x233 (= $x150 $x100)))
 (let (($x351 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x153 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x360 (= $x153 $x351)))
 (let (($x274 (and $x360 $x233)))
 (let (($x335 (= $x274 true)))
 (let (($x168 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x247 (= $x168 $x246)))
 (let (($x332 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x305 (= $x332 $x359)))
 (let (($x286 (and $x305 $x247)))
 (let (($x279 (= $x286 true)))
 (let ((?x307 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x323 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x154 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x280 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x366 (concat ?x280 (concat ?x154 (concat ?x323 ?x307)))))
 (let (($x317 (= ?x366 input.dst.llvm-%t)))
 (let (($x63 (= $x317 true)))
 (let (($x89 (= $x63 true)))
 (let ((?x104 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x29 (concat ?x104 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x17 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x107 (bvadd ?x17 (_ bv3 32))))
 (let ((?x128 (concat (select input.dst.llvm-mem ?x107) (concat ?x80 ?x29))))
 (let (($x318 (= (bvand ?x128 (_ bv4294967280 32)) ?x128)))
 (let (($x330 (= (bvand ?x17 (_ bv4294967292 32)) ?x17)))
 (let (($x67 (and $x330 $x318)))
 (let (($x206 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x188 (and true $x206)))
 (let (($x433 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x17 (bvsub ?x17 (_ bv4 32))) (bvult ?x17 (bvsub ?x17 (_ bv4 32))))))
 (let (($x56 (and (and (and $x433 $x188) $x330) $x67)))
 (let (($x315 (= true $x56)))
 (let (($x31 (not $x23)))
 (let (($x284 (=> $x31 $x315)))
 (let (($x369 (= $x284 true)))
 (let (($x218 (= $x369 true)))
 (let (($x164 (= $x218 true)))
 (let (($x178 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x50 (and $x178 $x284)))
 (let (($x147 (= (_ bv0 32) ?x128)))
 (let (($x15 (not $x147)))
 (let (($x5 (=> $x15 $x315)))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x197 (concat ?x75 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x202 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x163 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x62 (bvadd ?x163 (_ bv3 32))))
 (let ((?x213 (concat (select input.dst.llvm-mem ?x62) (concat ?x202 ?x197))))
 (let (($x68 (= (bvand ?x213 (_ bv4294967280 32)) ?x213)))
 (let (($x209 (= (bvand ?x163 (_ bv4294967292 32)) ?x163)))
 (let (($x222 (and $x209 $x68)))
 (let (($x201 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x163 (bvsub ?x163 (_ bv8 32))) (bvult ?x163 (bvsub ?x163 (_ bv8 32))))))
 (let (($x303 (and (and (and $x201 $x188) $x209) $x222)))
 (let (($x32 (= true $x303)))
 (let (($x304 (=> $x147 $x32)))
 (let (($x177 (and $x304 $x5)))
 (let (($x131 (= true $x177)))
 (let (($x302 (or $x147 $x15)))
 (let (($x203 (and $x31 $x302)))
 (let (($x151 (=> $x203 $x131)))
 (let (($x287 (and $x151 $x50)))
 (let (($x349 (= $x287 true)))
 (let (($x212 (= $x349 true)))
 (let (($x219 (= $x212 true)))
 (let (($x227 (= $x151 true)))
 (let (($x288 (= $x227 true)))
 (let (($x322 (= $x288 true)))
 (let (($x338 (= $x23 true)))
 (let (($x297 (= $x338 true)))
 (let (($x321 (= $x297 true)))
 (let (($x190 (= $x178 true)))
 (let (($x186 (= $x190 true)))
 (let (($x53 (= $x186 true)))
 (let ((?x55 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x182 (= (_ bv0 32) ?x55)))
 (let ((?x392 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x392)))
 (let (($x196 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (and $x196 $x172)))
 (let (($x57 (and $x205 $x182)))
 (let (($x179 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (and $x179 $x57)))
 (let (($x298 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x8 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x169 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x8 $x298)))))))
 (let (($x354 (and $x169 $x123)))
 (let (($x140 (= $x354 true)))
 (let (($x294 (= $x140 true)))
 (let (($x320 (= $x294 true)))
 (let (($x175 (and $x320 $x53)))
 (let (($x181 (and $x175 $x53)))
 (let (($x101 (and $x181 $x321)))
 (let (($x430 (and $x101 $x322)))
 (let (($x33 (and $x430 $x219)))
 (let (($x399 (and $x33 $x164)))
 (let (($x225 (and $x399 $x89)))
 (let (($x235 (and $x225 $x279)))
 (let (($x336 (and $x235 $x335)))
 (let (($x289 (and $x336 $x328)))
 (let (($x152 (and $x168 $x153)))
 (let (($x259 (and $x152 $x289)))
 (let (($x184 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x117 (and $x184 $x259)))
 (let (($x165 (and $x162 $x117)))
 (let (($x347 (and $x162 $x165)))
 (let (($x95 (bvugt ?x163 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x161 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x62)))
 (let (($x35 (=> (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x161 $x95)))))))
 (let (($x94 (and $x31 $x147)))
 (let (($x148 (=> (and $x94 (bvule ?x163 (bvsub (bvadd ?x163 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x161 $x95)))))))
 (let (($x20 (bvugt ?x17 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x44 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x107)))
 (let (($x47 (=> (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x44 $x20)))))))
 (let (($x46 (=> (and $x31 (bvule ?x17 (bvsub (bvadd ?x17 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x44 $x20)))))))
 (let (($x91 (and $x46 $x148)))
 (let (($x331 (and $x91 $x347)))
 (let (($x398 (=> $x331 $x471)))
 (not $x398)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 31
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6085X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x293 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x59 (concat ?x293 (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv8 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x400 (concat ?x234 (concat ?x72 ?x59))))
 (let (($x243 (= ?x400 ?x400)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x359 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x359 (_ bv1 32))))
 (let (($x275 (=> $x286 $x243)))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x435 (concat ?x264 (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv4 32))))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x432 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x454 (concat ?x432 (concat ?x436 ?x435))))
 (let (($x245 (= ?x454 ?x454)))
 (let (($x262 (=> $x286 $x245)))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6085X))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv2 32))) ?x342)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv3 32))) ?x324)))
 (let (($x346 (= ?x26 ?x26)))
 (let (($x240 (=> $x286 $x346)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x104 (concat ?x69 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x10 (bvadd ?x60 (_ bv3 32))))
 (let ((?x94 (concat (select input.dst.llvm-mem ?x10) (concat ?x81 ?x104))))
 (let (($x158 (= (_ bv0 32) ?x94)))
 (let ((?x253 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x309 (bvuge ?x253 (_ bv1 32))))
 (let (($x285 (= $x286 $x309)))
 (let (($x157 (= false false)))
 (let (($x305 (= ?x359 (_ bv0 32))))
 (let (($x239 (=> $x305 $x157)))
 (let (($x434 (and (and (and (= input.dst.llvm-%t ?x94) (= $x305 (= ?x253 (_ bv0 32)))) $x239) $x285)))
 (let (($x248 (and (and (and $x434 $x240) $x262) $x275)))
 (let (($x270 (not true)))
 (let (($x337 (or $x270 $x248)))
 (let (($x396 (= true true)))
 (let (($x345 (and $x396 $x337)))
 (let (($x362 (= $x345 true)))
 (let (($x289 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x328 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x259 (= $x328 $x289)))
 (let (($x397 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x228 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x326 (= $x228 $x397)))
 (let (($x117 (and $x326 $x259)))
 (let (($x165 (= $x117 true)))
 (let (($x336 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x335 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x308 (= $x335 $x336)))
 (let (($x233 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x150 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x274 (= $x150 $x233)))
 (let (($x291 (and $x274 $x308)))
 (let (($x306 (= $x291 true)))
 (let (($x247 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x279 (= $x247 $x286)))
 (let (($x153 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x246 (= $x153 $x305)))
 (let (($x235 (and $x246 $x279)))
 (let (($x232 (= $x235 true)))
 (let ((?x334 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x357 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x317 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x317 (concat ?x226 (concat ?x357 ?x334)))))
 (let (($x89 (= ?x63 input.dst.llvm-%t)))
 (let (($x225 (= $x89 true)))
 (let (($x332 (= $x225 true)))
 (let (($x224 (= (bvand ?x94 (_ bv4294967280 32)) ?x94)))
 (let (($x330 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x318 (and $x330 $x224)))
 (let (($x188 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x393 (and true $x188)))
 (let (($x214 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv4 32))) (bvult ?x60 (bvsub ?x60 (_ bv4 32))))))
 (let (($x315 (and (and (and $x214 $x393) $x330) $x318)))
 (let (($x5 (= true $x315)))
 (let (($x31 (not $x23)))
 (let (($x50 (=> $x31 $x5)))
 (let (($x218 (= $x50 true)))
 (let (($x164 (= $x218 true)))
 (let (($x399 (= $x164 true)))
 (let (($x178 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x287 (and $x178 $x50)))
 (let (($x338 (not $x158)))
 (let (($x177 (=> $x338 $x5)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x202 (concat ?x18 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x295 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x295 (_ bv3 32))))
 (let ((?x223 (concat (select input.dst.llvm-mem ?x45) (concat ?x75 ?x202))))
 (let (($x217 (= (bvand ?x223 (_ bv4294967280 32)) ?x223)))
 (let (($x209 (= (bvand ?x295 (_ bv4294967292 32)) ?x295)))
 (let (($x68 (and $x209 $x217)))
 (let (($x193 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x295 (bvsub ?x295 (_ bv8 32))) (bvult ?x295 (bvsub ?x295 (_ bv8 32))))))
 (let (($x32 (and (and (and $x193 $x393) $x209) $x68)))
 (let (($x304 (= true $x32)))
 (let (($x344 (=> $x158 $x304)))
 (let (($x131 (and $x344 $x177)))
 (let (($x151 (= true $x131)))
 (let (($x203 (or $x158 $x338)))
 (let (($x108 (and $x31 $x203)))
 (let (($x227 (=> $x108 $x151)))
 (let (($x349 (and $x227 $x287)))
 (let (($x212 (= $x349 true)))
 (let (($x219 (= $x212 true)))
 (let (($x33 (= $x219 true)))
 (let (($x288 (= $x227 true)))
 (let (($x322 (= $x288 true)))
 (let (($x430 (= $x322 true)))
 (let (($x297 (and $x31 $x338)))
 (let (($x321 (= $x297 true)))
 (let (($x101 (= $x321 true)))
 (let (($x15 (= $x101 true)))
 (let (($x190 (= $x178 true)))
 (let (($x186 (= $x190 true)))
 (let (($x53 (= $x186 true)))
 (let ((?x55 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x182 (= (_ bv0 32) ?x55)))
 (let ((?x392 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x392)))
 (let (($x196 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (and $x196 $x172)))
 (let (($x57 (and $x205 $x182)))
 (let (($x299 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (and $x299 $x57)))
 (let (($x401 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x401)))))))
 (let (($x354 (and $x179 $x123)))
 (let (($x140 (= $x354 true)))
 (let (($x294 (= $x140 true)))
 (let (($x320 (= $x294 true)))
 (let (($x175 (and $x320 $x53)))
 (let (($x181 (and $x175 $x53)))
 (let (($x302 (and $x181 $x15)))
 (let (($x284 (and $x302 $x430)))
 (let (($x369 (and $x284 $x33)))
 (let (($x352 (and $x369 $x399)))
 (let (($x221 (and $x352 $x332)))
 (let (($x351 (and $x221 $x232)))
 (let (($x341 (and $x351 $x306)))
 (let (($x347 (and $x341 $x165)))
 (let (($x331 (and $x153 $x347)))
 (let (($x168 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x348 (and $x168 $x331)))
 (let (($x229 (and $x157 $x348)))
 (let (($x51 (and $x157 $x229)))
 (let (($x142 (bvugt ?x295 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x173 (=> (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x163 (and $x31 $x158)))
 (let (($x145 (=> (and $x163 (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x74 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x10)))
 (let (($x114 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x74)))))))
 (let (($x73 (=> (and $x31 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x122 $x74)))))))
 (let (($x62 (and $x73 $x145)))
 (let (($x402 (and $x62 $x51)))
 (let (($x269 (=> $x402 $x362)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6085X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x293 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x59 (concat ?x293 (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv8 32))))))
 (let ((?x72 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x400 (concat ?x234 (concat ?x72 ?x59))))
 (let (($x243 (= ?x400 ?x400)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x359 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x286 (bvuge ?x359 (_ bv1 32))))
 (let (($x275 (=> $x286 $x243)))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x435 (concat ?x264 (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv4 32))))))
 (let ((?x436 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x432 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6085X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x454 (concat ?x432 (concat ?x436 ?x435))))
 (let (($x245 (= ?x454 ?x454)))
 (let (($x262 (=> $x286 $x245)))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6085X))))
 (let ((?x324 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv2 32))) ?x342)))
 (let ((?x26 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6085X (_ bv3 32))) ?x324)))
 (let (($x346 (= ?x26 ?x26)))
 (let (($x240 (=> $x286 $x346)))
 (let ((?x69 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x104 (concat ?x69 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x81 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x60 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x10 (bvadd ?x60 (_ bv3 32))))
 (let ((?x94 (concat (select input.dst.llvm-mem ?x10) (concat ?x81 ?x104))))
 (let (($x158 (= (_ bv0 32) ?x94)))
 (let ((?x253 (ite $x158 (_ bv0 32) (_ bv1 32))))
 (let (($x309 (bvuge ?x253 (_ bv1 32))))
 (let (($x285 (= $x286 $x309)))
 (let (($x157 (= false false)))
 (let (($x305 (= ?x359 (_ bv0 32))))
 (let (($x239 (=> $x305 $x157)))
 (let (($x434 (and (and (and (= input.dst.llvm-%t ?x94) (= $x305 (= ?x253 (_ bv0 32)))) $x239) $x285)))
 (let (($x248 (and (and (and $x434 $x240) $x262) $x275)))
 (let (($x270 (not true)))
 (let (($x337 (or $x270 $x248)))
 (let (($x396 (= true true)))
 (let (($x345 (and $x396 $x337)))
 (let (($x362 (= $x345 true)))
 (let (($x289 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x328 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x259 (= $x328 $x289)))
 (let (($x397 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x228 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x326 (= $x228 $x397)))
 (let (($x117 (and $x326 $x259)))
 (let (($x165 (= $x117 true)))
 (let (($x336 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x335 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x308 (= $x335 $x336)))
 (let (($x233 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x150 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x274 (= $x150 $x233)))
 (let (($x291 (and $x274 $x308)))
 (let (($x306 (= $x291 true)))
 (let (($x247 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x279 (= $x247 $x286)))
 (let (($x153 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x246 (= $x153 $x305)))
 (let (($x235 (and $x246 $x279)))
 (let (($x232 (= $x235 true)))
 (let ((?x334 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x357 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x226 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x317 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x63 (concat ?x317 (concat ?x226 (concat ?x357 ?x334)))))
 (let (($x89 (= ?x63 input.dst.llvm-%t)))
 (let (($x225 (= $x89 true)))
 (let (($x332 (= $x225 true)))
 (let (($x224 (= (bvand ?x94 (_ bv4294967280 32)) ?x94)))
 (let (($x330 (= (bvand ?x60 (_ bv4294967292 32)) ?x60)))
 (let (($x318 (and $x330 $x224)))
 (let (($x188 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x393 (and true $x188)))
 (let (($x214 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x60 (bvsub ?x60 (_ bv4 32))) (bvult ?x60 (bvsub ?x60 (_ bv4 32))))))
 (let (($x315 (and (and (and $x214 $x393) $x330) $x318)))
 (let (($x5 (= true $x315)))
 (let (($x31 (not $x23)))
 (let (($x50 (=> $x31 $x5)))
 (let (($x218 (= $x50 true)))
 (let (($x164 (= $x218 true)))
 (let (($x399 (= $x164 true)))
 (let (($x178 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x287 (and $x178 $x50)))
 (let (($x338 (not $x158)))
 (let (($x177 (=> $x338 $x5)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x202 (concat ?x18 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x75 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x295 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x45 (bvadd ?x295 (_ bv3 32))))
 (let ((?x223 (concat (select input.dst.llvm-mem ?x45) (concat ?x75 ?x202))))
 (let (($x217 (= (bvand ?x223 (_ bv4294967280 32)) ?x223)))
 (let (($x209 (= (bvand ?x295 (_ bv4294967292 32)) ?x295)))
 (let (($x68 (and $x209 $x217)))
 (let (($x193 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x295 (bvsub ?x295 (_ bv8 32))) (bvult ?x295 (bvsub ?x295 (_ bv8 32))))))
 (let (($x32 (and (and (and $x193 $x393) $x209) $x68)))
 (let (($x304 (= true $x32)))
 (let (($x344 (=> $x158 $x304)))
 (let (($x131 (and $x344 $x177)))
 (let (($x151 (= true $x131)))
 (let (($x203 (or $x158 $x338)))
 (let (($x108 (and $x31 $x203)))
 (let (($x227 (=> $x108 $x151)))
 (let (($x349 (and $x227 $x287)))
 (let (($x212 (= $x349 true)))
 (let (($x219 (= $x212 true)))
 (let (($x33 (= $x219 true)))
 (let (($x288 (= $x227 true)))
 (let (($x322 (= $x288 true)))
 (let (($x430 (= $x322 true)))
 (let (($x297 (and $x31 $x338)))
 (let (($x321 (= $x297 true)))
 (let (($x101 (= $x321 true)))
 (let (($x15 (= $x101 true)))
 (let (($x190 (= $x178 true)))
 (let (($x186 (= $x190 true)))
 (let (($x53 (= $x186 true)))
 (let ((?x55 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x182 (= (_ bv0 32) ?x55)))
 (let ((?x392 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x172 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x392)))
 (let (($x196 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x205 (and $x196 $x172)))
 (let (($x57 (and $x205 $x182)))
 (let (($x299 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x123 (and $x299 $x57)))
 (let (($x401 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x298 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x179 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x298 $x401)))))))
 (let (($x354 (and $x179 $x123)))
 (let (($x140 (= $x354 true)))
 (let (($x294 (= $x140 true)))
 (let (($x320 (= $x294 true)))
 (let (($x175 (and $x320 $x53)))
 (let (($x181 (and $x175 $x53)))
 (let (($x302 (and $x181 $x15)))
 (let (($x284 (and $x302 $x430)))
 (let (($x369 (and $x284 $x33)))
 (let (($x352 (and $x369 $x399)))
 (let (($x221 (and $x352 $x332)))
 (let (($x351 (and $x221 $x232)))
 (let (($x341 (and $x351 $x306)))
 (let (($x347 (and $x341 $x165)))
 (let (($x331 (and $x153 $x347)))
 (let (($x168 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x348 (and $x168 $x331)))
 (let (($x229 (and $x157 $x348)))
 (let (($x51 (and $x157 $x229)))
 (let (($x142 (bvugt ?x295 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x135 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x45)))
 (let (($x173 (=> (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x163 (and $x31 $x158)))
 (let (($x145 (=> (and $x163 (bvule ?x295 (bvsub (bvadd ?x295 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x135 $x142)))))))
 (let (($x74 (bvugt ?x60 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x122 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x10)))
 (let (($x114 (=> (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x122 $x74)))))))
 (let (($x73 (=> (and $x31 (bvule ?x60 (bvsub (bvadd ?x60 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x122 $x74)))))))
 (let (($x62 (and $x73 $x145)))
 (let (($x402 (and $x62 $x51)))
 (let (($x269 (=> $x402 $x362)))
 (not $x269))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
==query_number: 32
==CVC4_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6114X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x353 (concat ?x234 (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv8 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x403 (concat ?x59 (concat ?x367 ?x353))))
 (let (($x400 (= ?x403 ?x403)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x247 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x247 (_ bv1 32))))
 (let (($x243 (=> $x232 $x400)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x436 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv4 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x454 (concat ?x368 (concat ?x264 ?x436))))
 (let (($x245 (= ?x454 ?x454)))
 (let (($x262 (=> $x232 $x245)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6114X))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv2 32))) ?x276)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv3 32))) ?x342)))
 (let (($x240 (= ?x346 ?x346)))
 (let (($x273 (=> $x232 $x240)))
 (let (($x174 (= false false)))
 (let (($x286 (= ?x247 (_ bv0 32))))
 (let (($x237 (=> $x286 $x174)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x84 (concat ?x18 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x95 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x95 (_ bv3 32))))
 (let ((?x217 (concat (select input.dst.llvm-mem ?x14) (concat ?x208 ?x84))))
 (let (($x429 (= (_ bv0 32) ?x217)))
 (let ((?x239 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x239 (_ bv1 32))))
 (let (($x434 (= $x232 $x285)))
 (let (($x337 (and (and (and (= input.dst.llvm-%t ?x217) (= $x286 (= ?x239 (_ bv0 32)))) $x434) $x237)))
 (let (($x269 (and (and (and $x337 $x273) $x262) $x243)))
 (let (($x333 (not true)))
 (let (($x371 (or $x333 $x269)))
 (let (($x253 (= true true)))
 (let (($x7 (and $x253 $x371)))
 (let (($x103 (= $x7 true)))
 (let (($x165 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x117 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x347 (= $x117 $x165)))
 (let (($x289 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x326 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x259 (= $x326 $x289)))
 (let (($x331 (and $x259 $x347)))
 (let (($x348 (= $x331 true)))
 (let (($x306 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x341 (= $x291 $x306)))
 (let (($x336 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x274 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x308 (= $x274 $x336)))
 (let (($x296 (and $x308 $x341)))
 (let (($x228 (= $x296 true)))
 (let (($x235 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x351 (= $x235 $x232)))
 (let (($x8 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x279 (= $x8 $x286)))
 (let (($x360 (and $x279 $x351)))
 (let (($x150 (= $x360 true)))
 (let ((?x357 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x323 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x28 (concat ?x221 (concat ?x89 (concat ?x323 ?x357)))))
 (let (($x153 (= ?x28 input.dst.llvm-%t)))
 (let (($x359 (= $x153 true)))
 (let (($x305 (= $x359 true)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x134 (bvadd ?x65 (_ bv3 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem ?x134) (concat ?x128 ?x69))))
 (let (($x315 (= (bvand ?x163 (_ bv4294967280 32)) ?x163)))
 (let (($x224 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x5 (and $x224 $x315)))
 (let (($x105 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x209 (and true $x105)))
 (let (($x56 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv4 32))) (bvult ?x65 (bvsub ?x65 (_ bv4 32))))))
 (let (($x151 (and (and (and $x56 $x209) $x224) $x5)))
 (let (($x227 (= true $x151)))
 (let (($x31 (not $x23)))
 (let (($x219 (=> $x31 $x227)))
 (let (($x366 (= $x219 true)))
 (let (($x317 (= $x366 true)))
 (let (($x307 (= $x317 true)))
 (let (($x181 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x33 (and $x181 $x219)))
 (let (($x137 (= (_ bv0 32) ?x163)))
 (let (($x207 (not $x137)))
 (let (($x288 (=> $x207 $x227)))
 (let (($x32 (= (bvand ?x217 (_ bv4294967280 32)) ?x217)))
 (let (($x198 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x304 (and $x198 $x32)))
 (let (($x206 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv8 32))) (bvult ?x95 (bvsub ?x95 (_ bv8 32))))))
 (let (($x52 (and (and (and $x206 $x209) $x198) $x304)))
 (let (($x355 (= true $x52)))
 (let (($x433 (=> $x137 $x355)))
 (let (($x322 (and $x433 $x288)))
 (let (($x430 (= true $x322)))
 (let (($x204 (or $x137 $x207)))
 (let (($x201 (and $x31 $x204)))
 (let (($x284 (=> $x201 $x430)))
 (let (($x369 (and $x284 $x33)))
 (let (($x218 (= $x369 true)))
 (let (($x164 (= $x218 true)))
 (let (($x399 (= $x164 true)))
 (let (($x50 (= $x284 true)))
 (let (($x287 (= $x50 true)))
 (let (($x349 (= $x287 true)))
 (let (($x295 (and $x31 $x137)))
 (let (($x302 (= $x295 true)))
 (let (($x203 (= $x302 true)))
 (let (($x108 (= $x203 true)))
 (let (($x338 (= $x181 true)))
 (let (($x297 (= $x338 true)))
 (let (($x321 (= $x297 true)))
 (let ((?x140 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x294 (= (_ bv0 32) ?x140)))
 (let ((?x57 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x123 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x57)))
 (let (($x182 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x354 (and $x182 $x123)))
 (let (($x320 (and $x354 $x294)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x183 (and $x176 $x320)))
 (let (($x300 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x55 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x300)))))))
 (let (($x189 (and $x55 $x183)))
 (let (($x178 (= $x189 true)))
 (let (($x190 (= $x178 true)))
 (let (($x186 (= $x190 true)))
 (let (($x101 (and $x186 $x321)))
 (let (($x15 (and $x101 $x321)))
 (let (($x36 (and $x15 $x108)))
 (let (($x212 (and $x36 $x349)))
 (let (($x352 (and $x212 $x399)))
 (let (($x226 (and $x352 $x307)))
 (let (($x246 (and $x226 $x305)))
 (let (($x100 (and $x246 $x150)))
 (let (($x146 (and $x100 $x228)))
 (let (($x229 (and $x146 $x348)))
 (let (($x51 (and $x8 $x229)))
 (let (($x156 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x402 (and $x156 $x51)))
 (let (($x396 (and $x174 $x402)))
 (let (($x270 (and $x174 $x396)))
 (let (($x148 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x184 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x162 (=> (and $x295 (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x46 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x134)))
 (let (($x58 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x107 (=> (and $x31 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x45 (and $x107 $x162)))
 (let (($x394 (and $x45 $x270)))
 (let (($x152 (=> $x394 $x103)))
 (not $x152))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==CVC4_FILE_END==
==SMT2_FILE_START==
; benchmark
(set-info :status unknown)
(set-logic QF_ABV)
(declare-fun input.ind-%var6114X () (_ BitVec 32))
(declare-fun input.dst.llvm-mem () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun input.dst.llvm-%t () (_ BitVec 32))
(declare-fun input.spec-%var-right-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.2.0 () (_ BitVec 32))
(declare-fun input.spec-%var-left-0.L2%8%d.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.1.0 () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.0 () (_ BitVec 32))
(declare-fun input.dst.local./*___y___foo__x__=L0%0%argnum0=/ () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin () (_ BitVec 32))
(declare-fun input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end () (_ BitVec 32))
(declare-fun input.spec-%var-val-0.L2%8%d () (_ BitVec 32))
(declare-fun input.spec-%var-t-0.2.0 () (_ BitVec 32))
(assert
 (let ((?x234 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv8 32)) (_ bv1 32)))))
 (let ((?x353 (concat ?x234 (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv8 32))))))
 (let ((?x367 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv8 32)) (_ bv2 32)))))
 (let ((?x59 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv8 32)) (_ bv3 32)))))
 (let ((?x403 (concat ?x59 (concat ?x367 ?x353))))
 (let (($x400 (= ?x403 ?x403)))
 (let (($x23 (= (_ bv0 32) input.dst.llvm-%t)))
 (let ((?x247 (ite $x23 (_ bv0 32) (_ bv1 32))))
 (let (($x232 (bvuge ?x247 (_ bv1 32))))
 (let (($x243 (=> $x232 $x400)))
 (let ((?x244 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv4 32)) (_ bv1 32)))))
 (let ((?x436 (concat ?x244 (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv4 32))))))
 (let ((?x264 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv4 32)) (_ bv2 32)))))
 (let ((?x368 (select input.dst.llvm-mem (bvadd (bvadd input.ind-%var6114X (_ bv4 32)) (_ bv3 32)))))
 (let ((?x454 (concat ?x368 (concat ?x264 ?x436))))
 (let (($x245 (= ?x454 ?x454)))
 (let (($x262 (=> $x232 $x245)))
 (let ((?x276 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv1 32))) (select input.dst.llvm-mem input.ind-%var6114X))))
 (let ((?x342 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv2 32))) ?x276)))
 (let ((?x346 (concat (select input.dst.llvm-mem (bvadd input.ind-%var6114X (_ bv3 32))) ?x342)))
 (let (($x240 (= ?x346 ?x346)))
 (let (($x273 (=> $x232 $x240)))
 (let (($x174 (= false false)))
 (let (($x286 (= ?x247 (_ bv0 32))))
 (let (($x237 (=> $x286 $x174)))
 (let ((?x18 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x84 (concat ?x18 (select input.dst.llvm-mem (bvadd (_ bv8 32) input.dst.llvm-%t)))))
 (let ((?x208 (select input.dst.llvm-mem (bvadd (bvadd (_ bv8 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x95 (bvadd (_ bv8 32) input.dst.llvm-%t)))
 (let ((?x14 (bvadd ?x95 (_ bv3 32))))
 (let ((?x217 (concat (select input.dst.llvm-mem ?x14) (concat ?x208 ?x84))))
 (let (($x429 (= (_ bv0 32) ?x217)))
 (let ((?x239 (ite $x429 (_ bv0 32) (_ bv1 32))))
 (let (($x285 (bvuge ?x239 (_ bv1 32))))
 (let (($x434 (= $x232 $x285)))
 (let (($x337 (and (and (and (= input.dst.llvm-%t ?x217) (= $x286 (= ?x239 (_ bv0 32)))) $x434) $x237)))
 (let (($x269 (and (and (and $x337 $x273) $x262) $x243)))
 (let (($x333 (not true)))
 (let (($x371 (or $x333 $x269)))
 (let (($x253 (= true true)))
 (let (($x7 (and $x253 $x371)))
 (let (($x103 (= $x7 true)))
 (let (($x165 (bvuge input.spec-%var-right-0.L2%8%d.0 (_ bv1 32))))
 (let (($x117 (bvuge input.spec-%var-t-0.2.2.0 (_ bv1 32))))
 (let (($x347 (= $x117 $x165)))
 (let (($x289 (= input.spec-%var-right-0.L2%8%d.0 (_ bv0 32))))
 (let (($x326 (= input.spec-%var-t-0.2.2.0 (_ bv0 32))))
 (let (($x259 (= $x326 $x289)))
 (let (($x331 (and $x259 $x347)))
 (let (($x348 (= $x331 true)))
 (let (($x306 (bvuge input.spec-%var-left-0.L2%8%d.0 (_ bv1 32))))
 (let (($x291 (bvuge input.spec-%var-t-0.2.1.0 (_ bv1 32))))
 (let (($x341 (= $x291 $x306)))
 (let (($x336 (= input.spec-%var-left-0.L2%8%d.0 (_ bv0 32))))
 (let (($x274 (= input.spec-%var-t-0.2.1.0 (_ bv0 32))))
 (let (($x308 (= $x274 $x336)))
 (let (($x296 (and $x308 $x341)))
 (let (($x228 (= $x296 true)))
 (let (($x235 (bvuge input.spec-%var-t-0.0 (_ bv1 32))))
 (let (($x351 (= $x235 $x232)))
 (let (($x8 (= input.spec-%var-t-0.0 (_ bv0 32))))
 (let (($x279 (= $x8 $x286)))
 (let (($x360 (and $x279 $x351)))
 (let (($x150 (= $x360 true)))
 (let ((?x357 (select input.dst.llvm-mem input.dst.local./*___y___foo__x__=L0%0%argnum0=/)))
 (let ((?x323 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv1 32)))))
 (let ((?x89 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv2 32)))))
 (let ((?x221 (select input.dst.llvm-mem (bvadd input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32)))))
 (let ((?x28 (concat ?x221 (concat ?x89 (concat ?x323 ?x357)))))
 (let (($x153 (= ?x28 input.dst.llvm-%t)))
 (let (($x359 (= $x153 true)))
 (let (($x305 (= $x359 true)))
 (let ((?x80 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv1 32)))))
 (let ((?x69 (concat ?x80 (select input.dst.llvm-mem (bvadd (_ bv4 32) input.dst.llvm-%t)))))
 (let ((?x128 (select input.dst.llvm-mem (bvadd (bvadd (_ bv4 32) input.dst.llvm-%t) (_ bv2 32)))))
 (let ((?x65 (bvadd (_ bv4 32) input.dst.llvm-%t)))
 (let ((?x134 (bvadd ?x65 (_ bv3 32))))
 (let ((?x163 (concat (select input.dst.llvm-mem ?x134) (concat ?x128 ?x69))))
 (let (($x315 (= (bvand ?x163 (_ bv4294967280 32)) ?x163)))
 (let (($x224 (= (bvand ?x65 (_ bv4294967292 32)) ?x65)))
 (let (($x5 (and $x224 $x315)))
 (let (($x105 (ite (bvsge (_ bv0 32) (_ bv0 32)) (bvuge input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))) (bvult input.dst.llvm-%t (bvsub input.dst.llvm-%t (_ bv0 32))))))
 (let (($x209 (and true $x105)))
 (let (($x56 (ite (bvsge (_ bv4 32) (_ bv0 32)) (bvuge ?x65 (bvsub ?x65 (_ bv4 32))) (bvult ?x65 (bvsub ?x65 (_ bv4 32))))))
 (let (($x151 (and (and (and $x56 $x209) $x224) $x5)))
 (let (($x227 (= true $x151)))
 (let (($x31 (not $x23)))
 (let (($x219 (=> $x31 $x227)))
 (let (($x366 (= $x219 true)))
 (let (($x317 (= $x366 true)))
 (let (($x307 (= $x317 true)))
 (let (($x181 (= (bvand input.dst.llvm-%t (_ bv4294967280 32)) input.dst.llvm-%t)))
 (let (($x33 (and $x181 $x219)))
 (let (($x137 (= (_ bv0 32) ?x163)))
 (let (($x207 (not $x137)))
 (let (($x288 (=> $x207 $x227)))
 (let (($x32 (= (bvand ?x217 (_ bv4294967280 32)) ?x217)))
 (let (($x198 (= (bvand ?x95 (_ bv4294967292 32)) ?x95)))
 (let (($x304 (and $x198 $x32)))
 (let (($x206 (ite (bvsge (_ bv8 32) (_ bv0 32)) (bvuge ?x95 (bvsub ?x95 (_ bv8 32))) (bvult ?x95 (bvsub ?x95 (_ bv8 32))))))
 (let (($x52 (and (and (and $x206 $x209) $x198) $x304)))
 (let (($x355 (= true $x52)))
 (let (($x433 (=> $x137 $x355)))
 (let (($x322 (and $x433 $x288)))
 (let (($x430 (= true $x322)))
 (let (($x204 (or $x137 $x207)))
 (let (($x201 (and $x31 $x204)))
 (let (($x284 (=> $x201 $x430)))
 (let (($x369 (and $x284 $x33)))
 (let (($x218 (= $x369 true)))
 (let (($x164 (= $x218 true)))
 (let (($x399 (= $x164 true)))
 (let (($x50 (= $x284 true)))
 (let (($x287 (= $x50 true)))
 (let (($x349 (= $x287 true)))
 (let (($x295 (and $x31 $x137)))
 (let (($x302 (= $x295 true)))
 (let (($x203 (= $x302 true)))
 (let (($x108 (= $x203 true)))
 (let (($x338 (= $x181 true)))
 (let (($x297 (= $x338 true)))
 (let (($x321 (= $x297 true)))
 (let ((?x140 (bvand input.dst.local./*___y___foo__x__=L0%0%argnum0=/ (_ bv3 32))))
 (let (($x294 (= (_ bv0 32) ?x140)))
 (let ((?x57 (bvadd input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (_ bv3 32))))
 (let (($x123 (= input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end ?x57)))
 (let (($x182 (bvule input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x354 (and $x182 $x123)))
 (let (($x320 (and $x354 $x294)))
 (let (($x176 (= input.dst.local./*___y___foo__x__=L0%0%argnum0=/ input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin)))
 (let (($x183 (and $x176 $x320)))
 (let (($x300 (bvugt (_ bv0 32) input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x179 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin (bvadd (_ bv0 32) (_ bv0 32)))))
 (let (($x55 (=> (bvule (_ bv0 32) (bvsub (bvadd (_ bv0 32) (_ bv1 32)) (_ bv1 32))) (or false (or false (and true (or $x179 $x300)))))))
 (let (($x189 (and $x55 $x183)))
 (let (($x178 (= $x189 true)))
 (let (($x190 (= $x178 true)))
 (let (($x186 (= $x190 true)))
 (let (($x101 (and $x186 $x321)))
 (let (($x15 (and $x101 $x321)))
 (let (($x36 (and $x15 $x108)))
 (let (($x212 (and $x36 $x349)))
 (let (($x352 (and $x212 $x399)))
 (let (($x226 (and $x352 $x307)))
 (let (($x246 (and $x226 $x305)))
 (let (($x100 (and $x246 $x150)))
 (let (($x146 (and $x100 $x228)))
 (let (($x229 (and $x146 $x348)))
 (let (($x51 (and $x8 $x229)))
 (let (($x156 (= input.spec-%var-t-0.2.0 input.spec-%var-val-0.L2%8%d)))
 (let (($x402 (and $x156 $x51)))
 (let (($x396 (and $x174 $x402)))
 (let (($x270 (and $x174 $x396)))
 (let (($x148 (bvugt ?x95 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x35 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x14)))
 (let (($x184 (=> (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x162 (=> (and $x295 (bvule ?x95 (bvsub (bvadd ?x95 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x35 $x148)))))))
 (let (($x46 (bvugt ?x65 input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_end)))
 (let (($x47 (bvugt input.dst.memlabel-mem--local./*___y___foo__x__=L0%0%argnum0=/_begin ?x134)))
 (let (($x58 (=> (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x107 (=> (and $x31 (bvule ?x65 (bvsub (bvadd ?x65 (_ bv4 32)) (_ bv1 32)))) (or false (or false (and true (or $x47 $x46)))))))
 (let (($x45 (and $x107 $x162)))
 (let (($x394 (and $x45 $x270)))
 (let (($x152 (=> $x394 $x103)))
 (not $x152))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)
==SMT2_FILE_END==
==ret: 1
==result_count: 1
==index: 0
==solver_id: 2
==recvd_data
==DATA_START==
unsat
(error "the context is unsatisfiable")
==DATA_END==
==solver_result_code: SOLVER_UNSAT
==smt2_file: /tmp/smt-solver-tmp-files/indrajit.1507044/query
