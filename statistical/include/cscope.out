cscope 15 $HOME/superopt-project/superopt-tests/statistical/include               0000007822
	@cephes.h

2 #i‚de‡
_CEPHES_H_


3 
	#_CEPHES_H_


	)

5 
˚phes_igamc
(
a
, 
x
);

6 
˚phes_igam
(
a
, 
x
);

7 
˚phes_lgam
(
x
);

8 
˚phes_p1evl
(
x
, *
c€f
, 
N
);

9 
˚phes_pﬁevl
(
x
, *
c€f
, 
N
);

10 
˚phes_îf
(
x
);

11 
˚phes_îfc
(
x
);

12 
˚phes_n‹mÆ
(
x
);

	@config.h

2 #i‡
deföed
(
__˝lu•lus
)

6 #i‚de‡
_CONFIG_H_


7 
	#_CONFIG_H_


	)

18 #i‚def 
CSTRTD


19 *
	tCSTRTD
;

21 #i‚def 
BSTRTD


22 *
	tBSTRTD
;

25 #i‚def 
BYTE


26 
	tBYTE
;

28 #i‚def 
UINT


29 
	tUINT
;

31 #i‚def 
USHORT


32 
	tUSHORT
;

34 #i‚def 
ULONG


35 
	tULONG
;

37 #i‚def 
DIGIT


38 
USHORT
 
	tDIGIT
;

40 #i‚def 
DBLWORD


41 
ULONG
 
	tDBLWORD
;

44 #i‚def 
WORD64


45 
ULONG
 
	tWORD64
[2];

50 #i‡
deföed
(
__˝lu•lus
)

	@decls.h

2 
	~"ö˛ude/defs.h
"

8 
BôSequí˚
 *
	gïsû⁄
;

9 
TP
 
	gç
;

10 
FILE
 *
	g°©s
[
NUMOFTESTS
+1];

11 
FILE
 *
	gªsu…s
[
NUMOFTESTS
+1];

12 
FILE
 *
	g‰eqÂ
;

13 
FILE
 *
	gsumm¨y
;

14 
	gã°Ve˘‹
[
NUMOFTESTS
+1];

16 
	ggíî©‹Dú
[
NUMOFGENERATORS
][20] = { "AlgorithmTesting", "LCG", "QCG1", "QCG2","CCG", "XOR",

19 
	gã°Names
[
NUMOFTESTS
+1][32] = { " ", "Frequency", "BlockFrequency", "CumulativeSums", "Runs", "LongestRun", "Rank",

	@defs.h

5 
	~"c⁄fig.h
"

11 
	#MAX
(
x
,
y
Ë((xË< (yË? (yË: (x))

	)

12 
	#MIN
(
x
,
y
Ë((xË> (yË? (yË: (x))

	)

13 
	#isN⁄Posôive
(
x
Ë((xË<0.e0 ? 1 : 0)

	)

14 
	#isPosôive
(
x
Ë((xË> 0.e0 ? 1 : 0)

	)

15 
	#isNeg©ive
(
x
Ë((xË< 0.e0 ? 1 : 0)

	)

16 
	#isGª©îTh™O√
(
x
Ë((xË> 1.e0 ? 1 : 0)

	)

17 
	#isZîo
(
x
Ë((xË=0.e0 ? 1 : 0)

	)

18 
	#isO√
(
x
Ë((xË=1.e0 ? 1 : 0)

	)

24 
	#ALPHA
 0.01

	)

25 
	#MAXNUMOFTEMPLATES
 148

	)

26 
	#NUMOFTESTS
 15

	)

27 
	#NUMOFGENERATORS
 10

	)

28 
	#MAXFILESPERMITTEDFORPARTITION
 148

	)

29 
	#TEST_FREQUENCY
 1

	)

30 
	#TEST_BLOCK_FREQUENCY
 2

	)

31 
	#TEST_CUSUM
 3

	)

32 
	#TEST_RUNS
 4

	)

33 
	#TEST_LONGEST_RUN
 5

	)

34 
	#TEST_RANK
 6

	)

35 
	#TEST_FFT
 7

	)

36 
	#TEST_NONPERIODIC
 8

	)

37 
	#TEST_OVERLAPPING
 9

	)

38 
	#TEST_UNIVERSAL
 10

	)

39 
	#TEST_APEN
 11

	)

40 
	#TEST_RND_EXCURSION
 12

	)

41 
	#TEST_RND_EXCURSION_VAR
 13

	)

42 
	#TEST_SERIAL
 14

	)

43 
	#TEST_LINEARCOMPLEXITY
 15

	)

50 
	tBôSequí˚
;

52 
	s_ã°P¨amëîs
 {

53 
	mn
;

54 
	mblockFªquícyBlockLígth
;

55 
	mn⁄OvîœµögTem∂©eBlockLígth
;

56 
	movîœµögTem∂©eBlockLígth
;

57 
	m£rülBlockLígth
;

58 
	mlöórCom∂exôySequí˚Lígth
;

59 
	m≠¥oxim©eE¡r›yBlockLígth
;

60 
	mnumOfBôSåóms
;

61 } 
	tTP
;

	@externs.h

2 
	~"ö˛ude/defs.h
"

8 
BôSequí˚
 *
ïsû⁄
;

9 
TP
 
ç
;

10 
FILE
 *
°©s
[
NUMOFTESTS
+1];

11 
FILE
 *
ªsu…s
[
NUMOFTESTS
+1];

12 
FILE
 *
‰eqÂ
;

13 
FILE
 *
summ¨y
;

14 
ã°Ve˘‹
[
NUMOFTESTS
+1];

16 
gíî©‹Dú
[
NUMOFGENERATORS
][20];

17 
ã°Names
[
NUMOFTESTS
+1][32];

	@generators.h

5 
lcg
();

6 
lcg_ønd
(, , *, );

7 
quadRes1
();

8 
quadRes2
();

9 
cubicRes
();

10 
ex˛usiveOR
();

11 
modExp
();

12 
bbs
();

13 
miˇli_schn‹r
();

14 
SHA1
();

18 
	#CS1
(
x
Ë((((
ULONG
)x)<<1)|(((ULONG)x)>>31))

	)

19 
	#CS5
(
x
Ë((((
ULONG
)x)<<5)|(((ULONG)x)>>27))

	)

20 
	#CS30
(
x
Ë((((
ULONG
)x)<<30)|(((ULONG)x)>>2))

	)

24 
	#K0
 0x5a827999L

	)

25 
	#K1
 0x6ed9eba1L

	)

26 
	#K2
 0x8f1bbcdcL

	)

27 
	#K3
 0xˇ62c1d6L

	)

29 
	#f1
(
x
,
y
,
z
Ë–(x & (y ^ z)Ë^ z )

	)

31 
	#f3
(
x
,
y
,
z
Ë–(x & ( y ^ z )Ë^ (z & yË)

	)

33 
	#f2
(
x
,
y
,
z
Ë–x ^ y ^ z )

	)

35 
	#ex∑nd
(
x
Ë
Wbuff
[x%16] = 
	`CS1
(Wbuff[(x - 3)%16 ] ^ Wbuff[(x - 8)%16 ] ^ Wbuff[(x - 14)%16] ^ Wbuff[x%16])

	)

37 
	#sub1Round1
(
cou¡
) { \

38 
ãmp
 = 
	`CS5
(
A
Ë+ 
	`f1
(
B
, 
C
, 
D
Ë+ 
E
 + 
Wbuff
[
cou¡
] + 
K0
; \

39 
E
 = 
D
; \

40 
D
 = 
C
; \

41 
C
 = 
	`CS30
–
B
 ); \

42 
B
 = 
A
; \

43 
A
 = 
ãmp
; \

45 

	)

46 
	#sub2Round1
(
cou¡
) \

48 
	`ex∑nd
(
cou¡
); \

49 
ãmp
 = 
	`CS5
(
A
Ë+ 
	`f1
(
B
, 
C
, 
D
Ë+ 
E
 + 
Wbuff
[
cou¡
%16] + 
K0
; \

50 
E
 = 
D
; \

51 
D
 = 
C
; \

52 
C
 = 
	`CS30
–
B
 ); \

53 
B
 = 
A
; \

54 
A
 = 
ãmp
; \

56 

	)

57 
	#Round2
(
cou¡
) \

59 
	`ex∑nd
(
cou¡
); \

60 
ãmp
 = 
	`CS5
–
A
 ) + 
	`f2
–
B
, 
C
, 
D
 ) + 
E
 + 
Wbuff
[
cou¡
%16] + 
K1
; \

61 
E
 = 
D
; \

62 
D
 = 
C
; \

63 
C
 = 
	`CS30
–
B
 ); \

64 
B
 = 
A
; \

65 
A
 = 
ãmp
; \

67 

	)

68 
	#Round3
(
cou¡
) \

70 
	`ex∑nd
(
cou¡
); \

71 
ãmp
 = 
	`CS5
–
A
 ) + 
	`f3
–
B
, 
C
, 
D
 ) + 
E
 + 
Wbuff
[
cou¡
%16] + 
K2
; \

72 
E
 = 
D
; \

73 
D
 = 
C
; \

74 
C
 = 
	`CS30
–
B
 ); \

75 
B
 = 
A
; \

76 
A
 = 
ãmp
; \

77 }

	)

79 
	#Round4
(
cou¡
) \

81 
	`ex∑nd
(
cou¡
); \

82 
ãmp
 = 
	`CS5
–
A
 ) + 
	`f2
–
B
, 
C
, 
D
 ) + 
E
 + 
Wbuff
[
cou¡
%16] + 
K3
; \

83 
E
 = 
D
; \

84 
D
 = 
C
; \

85 
C
 = 
	`CS30
–
B
 ); \

86 
B
 = 
A
; \

87 
A
 = 
ãmp
; \

88 }

	)

	@genutils.h

2 #i‚de‡
_GENUTILS_H_


3 
	#_GENUTILS_H_


	)

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~"c⁄fig.h
"

10 
	s_MP_°ru˘
 {

11 
	msize
;

12 
	mbôÀn
;

13 
BYTE
 *
	mvÆ
;

14 } 
	tMP
;

16 
	#FREE
(
A
Ëi‡–(AËË{ 
	`‰ì
((A)); (AË
NULL
; }

	)

17 
	#ASCII2BIN
(
ch
Ë–(((chË>'0'Ë&& ((chË<'9')Ë? ((chË- '0'Ë: (((chË>'A'Ë&& ((chË<'F')Ë? ((chË- 'A' + 10Ë: ((chË- 'a' + 10Ë)

	)

19 #i‚de‡
EXPWD


20 
	#EXPWD
 ((
DBLWORD
)1<<
NUMLEN
)

	)

23 
	#¢iff_bô
(
±r
,
mask
Ë(*’åË& mask)

	)

28 
gª©î
(
BYTE
 *
x
, BYTE *
y
, 
l
);

29 
Àss
(
BYTE
 *
x
, BYTE *
y
, 
l
);

30 
BYTE
 
bshl
(BYTE *
x
, 
l
);

31 
bshr
(
BYTE
 *
x
, 
l
);

32 
Mu…
(
BYTE
 *
A
, BYTE *
B
, 
LB
, BYTE *
C
, 
LC
);

33 
ModSqr
(
BYTE
 *
A
, BYTE *
B
, 
LB
, BYTE *
M
, 
LM
);

34 
ModMu…
(
BYTE
 *
A
, BYTE *
B
, 
LB
, BYTE *
C
, 
LC
, BYTE *
M
, 
LM
);

35 
smu…
(
BYTE
 *
A
, BYTE 
b
, BYTE *
C
, 
L
);

36 
Squ¨e
(
BYTE
 *
A
, BYTE *
B
, 
L
);

37 
ModExp
(
BYTE
 *
A
, BYTE *
B
, 
LB
, BYTE *
C
, 
LC
, BYTE *
M
, 
LM
);

38 
DivMod
(
BYTE
 *
x
, 
Ànx
, BYTE *
n
, 
À¬
, BYTE *
quŸ
, BYTE *
ªm
);

39 
Mod
(
BYTE
 *
x
, 
Ànx
, BYTE *
n
, 
À¬
);

40 
Div
(
BYTE
 *
x
, 
Ànx
, BYTE *
n
, 
À¬
);

41 
sub
(
BYTE
 *
A
, 
LA
, BYTE *
B
, 
LB
);

42 
√g©e
(
BYTE
 *
A
, 
L
);

43 
BYTE
 
add
(BYTE *
A
, 
LA
, BYTE *
B
, 
LB
);

44 
¥ëty¥ötB°r
(*
S
, 
BYTE
 *
A
, 
L
);

45 
byãRevî£
(
ULONG
 *
buf„r
, 
byãCou¡
);

46 
aht›b
 (*
ascii_hex
, 
BYTE
 *
p_bö¨y
, 
bö_Àn
);

	@matrix.h

5 
compuãR™k
(
M
, 
Q
, 
BôSequí˚
 **
m©rix
);

6 
≥rf‹m_ñemíèry_row_›î©i⁄s
(
Êag
, 
i
, 
M
, 
Q
, 
BôSequí˚
 **
A
);

7 
föd_unô_ñemít_™d_sw≠
(
Êag
, 
i
, 
M
, 
Q
, 
BôSequí˚
 **
A
);

8 
sw≠_rows
(
i
, 
ödex
, 
Q
, 
BôSequí˚
 **
A
);

9 
dëîmöe_ønk
(
m
, 
M
, 
Q
, 
BôSequí˚
 **
A
);

10 
BôSequí˚
** 
¸óã_m©rix
(
M
, 
Q
);

11 
di•œy_m©rix
(
M
, 
Q
, 
BôSequí˚
 **
m
);

12 
def_m©rix
(
M
, 
Q
, 
BôSequí˚
 **
m
,
k
);

13 
dñëe_m©rix
(
M
, 
BôSequí˚
 **
m©rix
);

	@stat_fncs.h

6 
Fªquícy
(
n
);

7 
BlockFªquícy
(
M
, 
n
);

8 
CumuœtiveSums
(
n
);

9 
Runs
(
n
);

10 
L⁄ge°RunOfO√s
(
n
);

11 
R™k
(
n
);

12 
Dis¸ëeFourõrTønsf‹m
(
n
);

13 
N⁄OvîœµögTem∂©eM©chögs
(
m
, 
n
);

14 
OvîœµögTem∂©eM©chögs
(
m
, 
n
);

15 
Univîßl
(
n
);

16 
Aµroxim©eE¡r›y
(
m
, 
n
);

17 
R™domExcursi⁄s
(
n
);

18 
R™domExcursi⁄sV¨ü¡
(
n
);

19 
LöórCom∂exôy
(
M
, 
n
);

20 
Sîül
(
m
, 
n
);

	@utilities.h

5 
di•œyGíî©‹O±i⁄s
();

6 
gíî©‹O±i⁄s
(** 
°ªamFûe
);

7 
choo£Te°s
();

8 
fixP¨amëîs
();

9 
fûeBa£dBôSåóms
(*
°ªamFûe
);

10 
ªadBö¨yDigôsInASCIIF‹m©
(
FILE
 *
Â
, *
°ªamFûe
);

11 
ªadHexDigôsInBö¨yF‹m©
(
FILE
 *
Â
);

12 
c⁄vîtToBôs
(
BYTE
 *
x
, 
xBôLígth
, 
bôsNìded
, *
num_0s
, *
num_1s
, *
bôsRód
);

13 
›íOuçutSåóms
(
›ti⁄
);

14 
övokeTe°Suôe
(
›ti⁄
, *
°ªamFûe
);

15 
ni°_ã°_suôe
();

	@
1
.
0
10
100
cephes.h
config.h
decls.h
defs.h
externs.h
generators.h
genutils.h
matrix.h
stat_fncs.h
utilities.h
