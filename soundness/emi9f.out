argv[0] = eq32
argv[1] = --check-safety
argv[2] = --unroll-factor
argv[3] = 3
argv[4] = emi9f.c
argv[5] = emi9f.s
argv[6] = --proof
argv[7] = emi9f.cg
Query dir: /tmp/smt-solver-tmp-files/sbansal.1369293
argv[0] = /home/sbansal/superopt-project/usr/local/bin/clang
argv[1] = -Xclang
argv[2] = -disable-llvm-passes
argv[3] = -Xclang
argv[4] = -disable-O0-optnone
argv[5] = -c
argv[6] = -g
argv[7] = -emit-llvm
argv[8] = -O0
argv[9] = /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.c
argv[10] = -o
argv[11] = /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.c.bc.tmp
argv[12] = -m32

argv[0] = /home/sbansal/superopt-project/usr/local/bin/llvm2tfg
argv[1] = --xml-output-format
argv[2] = text-color
argv[3] = -f
argv[4] = ALL
argv[5] = --call-context-depth
argv[6] = 0
argv[7] = --always-use-call-context-any
argv[8] = /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.c.bc
argv[9] = -o
argv[10] = emi9f.c.etfg
<MSG>0:00 : Converting LLVM IR bitcode to Transfer Function Graph (TFG) for function main</MSG>


tfg_get_simplified_edge_cond_for_edge: num_starts 232 time spent: 0:0:0 [0.000369s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 226 time spent: 0:0:0 [0.000343s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 3302 time spent: 0:0:0 [0.035688s total; 0.000011 per start]
expr_simplify_solver: num_starts 16204 time spent: 0:0:0 [0.371588s total; 0.000023 per start]
expr_simplify_syntactic: num_starts 16204 time spent: 0:0:6 [6.411816s total; 0.000396 per start]
expr_simplify_select_on_store: num_starts 4261 time spent: 0:0:4 [4.619742s total; 0.001084 per start]
expr_simplify_store_on_store: num_starts 3236 time spent: 0:0:0 [0.183096s total; 0.000057 per start]
expr_simplify_using_lhs_set_helper: num_starts 3607 time spent: 0:0:7 [7.041297s total; 0.001952 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 47127 time spent: 0:0:7 [7.006820s total; 0.000149 per start]
expr_evaluates_to_constant: num_starts 40932 time spent: 0:0:0 [0.101029s total; 0.000002 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 9541 time spent: 0:0:0 [0.017252s total; 0.000002 per start]
expr_simplify_eq: num_starts 6 time spent: 0:0:0 [0.000065s total; 0.000011 per start]
expr_simplify_not: num_starts 3 time spent: 0:0:0 [0.000005s total; 0.000002 per start]
expr_simplify_ite: num_starts 8 time spent: 0:0:0 [0.000451s total; 0.000056 per start]
canonicalize_expr_tree: num_starts 2131 time spent: 0:0:0 [0.062163s total; 0.000029 per start]
expr_simplify_memalloc_using_memlabel: num_starts 3234 time spent: 0:0:0 [0.008398s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 5809 time spent: 0:0:4 [4.525965s total; 0.000779 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 1491 time spent: 0:0:0 [0.615187s total; 0.000413 per start]
memlabel_contains_only_readonly_symbols: num_starts 1491 time spent: 0:0:0 [0.000329s total; 0.000000 per start]
memlabels_are_independent: num_starts 3840 time spent: 0:0:0 [0.013163s total; 0.000003 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 747 time spent: 0:0:0 [0.176272s total; 0.000236 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 747 time spent: 0:0:0 [0.170868s total; 0.000229 per start]
is_overlapping_atoms_pair_syntactic: num_starts 747 time spent: 0:0:0 [0.151115s total; 0.000202 per start]
is_overlapping_considering_type_constraints: num_starts 747 time spent: 0:0:0 [0.005225s total; 0.000007 per start]
find_offset_wrt_typed_variable_pointer: num_starts 1494 time spent: 0:0:0 [0.005125s total; 0.000003 per start]
is_gep_inbounds_offset: num_starts 1494 time spent: 0:0:0 [0.000171s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 43084 time spent: 0:0:0 [0.031931s total; 0.000001 per start]
expr_is_variable_start: num_starts 981 time spent: 0:0:0 [0.000084s total; 0.000000 per start]
expr_linear_relation_holds_visit: num_starts 2478 time spent: 0:0:0 [0.013962s total; 0.000006 per start]
expr_is_consts_struct_constant: num_starts 4231 time spent: 0:0:0 [0.002002s total; 0.000000 per start]
expr_do_simplify_helper: num_starts 16329 time spent: 0:0:7 [7.076605s total; 0.000433 per start]
expr_do_simplify_helper_cache: num_starts 16329 time spent: 0:0:0 [0.013764s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 16 time spent: 0:0:0 [0.000008s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 16 time spent: 0:0:0 [0.000040s total; 0.000003 per start]
combo_dfa_xfer_and_meet: num_starts 213 time spent: 0:0:1 [1.760143s total; 0.008264 per start]
alias_val_xfer_and_meet: num_starts 213 time spent: 0:0:1 [1.500186s total; 0.007043 per start]
get_sprel_map_from_avail_exprs: num_starts 271 time spent: 0:0:0 [0.034843s total; 0.000129 per start]
update_memlabels_for_memslot_locs: num_starts 57 time spent: 0:0:0 [0.021276s total; 0.000373 per start]
populate_gen_and_kill_sets_for_edge: num_starts 426 time spent: 0:0:0 [0.072487s total; 0.000170 per start]
compute_simplified_loc_exprs_for_edge: num_starts 1151 time spent: 0:0:6 [6.853175s total; 0.005954 per start]
compute_locs_definitely_written_on_edge: num_starts 426 time spent: 0:0:0 [0.000315s total; 0.000001 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 1860 time spent: 0:0:1 [1.346407s total; 0.000724 per start]
edge_update_memlabel_map_for_mlvars: num_starts 213 time spent: 0:0:0 [0.034584s total; 0.000162 per start]
add_new_locs_based_on_edge: num_starts 213 time spent: 0:0:0 [0.153875s total; 0.000722 per start]
alias_val_meet: num_starts 213 time spent: 0:0:0 [0.036967s total; 0.000174 per start]
expand_locset_to_include_slots_for_memmask: num_starts 1882 time spent: 0:0:0 [0.103460s total; 0.000055 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: -nan per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
remove_function_name_from_symbols.: 1e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_interpret_intrinsic_fcalls.: 1e-06s (num_starts 1; 0.0000s/start)
set_string_contents_for_touched_symbols_at_zero_offset.: 3e-06s (num_starts 1; 0.0000s/start)
set_symbol_map_for_touched_symbols.: 3e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
add_assumes_to_start_edge.: 3.1e-05s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.3e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 4.2e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 6.2e-05s (num_starts 1; 0.0001s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 0.000101s (num_starts 9; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 0.000104s (num_starts 9; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 0.000109s (num_starts 214; 0.0000s/start)
populate_locid2expr_map.: 0.00013s (num_starts 1; 0.0001s/start)
determinize_value_expr_map.: 0.0002s (num_starts 229; 0.0000s/start)
compute_sprel_relations.: 0.00021s (num_starts 1; 0.0002s/start)
propagate_sprels.: 0.000218s (num_starts 1; 0.0002s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000266s (num_starts 38; 0.0000s/start)
expr_is_hidden_reg.: 0.000284s (num_starts 498; 0.0000s/start)
main.3.: 0.000295s (num_starts 1; 0.0003s/start)
expr_is_callee_save_const.: 0.000379s (num_starts 502; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000526s (num_starts 113; 0.0000s/start)
graph_locs_add_all_exvregs.: 0.000582s (num_starts 1; 0.0006s/start)
graph_locs_add_local_vars_for_edge.: 0.000685s (num_starts 113; 0.0000s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.000697s (num_starts 17; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000731s (num_starts 1; 0.0007s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.000819s (num_starts 2; 0.0004s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000884s (num_starts 213; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000976s (num_starts 1; 0.0010s/start)
sp_version_relations_val_t::meet.: 0.001829s (num_starts 5154; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.001988s (num_starts 2; 0.0010s/start)
canonicalize_llvm_nextpcs.: 0.001992s (num_starts 1; 0.0020s/start)
tfg::collect_assumes_around_edge.: 0.001995s (num_starts 226; 0.0000s/start)
expr_represents_llvm_undef.: 0.002032s (num_starts 504; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.002778s (num_starts 1; 0.0028s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.002795s (num_starts 1; 0.0028s/start)
def_analysis::xfer_and_meet.: 0.003205s (num_starts 226; 0.0000s/start)
populate_exit_return_values_for_llvm_method.: 0.00357s (num_starts 1; 0.0036s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.004282s (num_starts 20; 0.0002s/start)
create_closure_matrix.: 0.006239s (num_starts 270; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.006247s (num_starts 208; 0.0000s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.007838s (num_starts 165; 0.0000s/start)
populate_dominator_and_postdominator_relations.: 0.009025s (num_starts 1; 0.0090s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.00994s (num_starts 1; 0.0099s/start)
graph_visit_exprs.: 0.010031s (num_starts 4; 0.0025s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.010154s (num_starts 6612; 0.0000s/start)
expr_linear_relation_holds::visit.var.: 0.011303s (num_starts 914; 0.0000s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.01208s (num_starts 141; 0.0001s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.019647s (num_starts 213; 0.0001s/start)
graph_identify_back_edges.: 0.020243s (num_starts 4; 0.0051s/start)
graph_identify_natural_loops.: 0.020601s (num_starts 4; 0.0052s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.02065s (num_starts 360; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.023334s (num_starts 1; 0.0233s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.023611s (num_starts 1; 0.0236s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.024226s (num_starts 1; 0.0242s/start)
tfg::populate_loc_definedness.before_solve.: 0.026122s (num_starts 2; 0.0131s/start)
create_sp_version_relations_lattice_at_pc.: 0.02676s (num_starts 270; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.027028s (num_starts 2; 0.0135s/start)
compute_regions.: 0.027481s (num_starts 4; 0.0069s/start)
find_dominators.: 0.02755s (num_starts 6; 0.0046s/start)
tfg::populate_loc_definedness.: 0.027778s (num_starts 2; 0.0139s/start)
lr_status_meet.: 0.028037s (num_starts 18491; 0.0000s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.031865s (num_starts 213; 0.0001s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.034354s (num_starts 213; 0.0002s/start)
populate_branch_affecting_locs.: 0.03912s (num_starts 2; 0.0196s/start)
graph_to_stream.: 0.040054s (num_starts 1; 0.0401s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.044324s (num_starts 213; 0.0002s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.049256s (num_starts 213; 0.0002s/start)
tfg_preprocess.src.llvm.main.: 0.054636s (num_starts 1; 0.0546s/start)
tfg::tfg_preprocess.: 0.054637s (num_starts 1; 0.0546s/start)
query:convert_from_z3.: 0.057678s (num_starts 2129; 0.0000s/start)
query:convert_to_z3.: 0.066458s (num_starts 2129; 0.0000s/start)
avail_exprs_create_submap.: 0.070267s (num_starts 639; 0.0001s/start)
get_tfg.: 0.094134s (num_starts 1; 0.0941s/start)
get_function_tfg_map.main.: 0.094225s (num_starts 1; 0.0942s/start)
get_function_tfg_map.: 0.094227s (num_starts 1; 0.0942s/start)
main.2.: 0.113062s (num_starts 1; 0.1131s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.113364s (num_starts 185; 0.0006s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.113652s (num_starts 185; 0.0006s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.121335s (num_starts 213; 0.0006s/start)
compute_lr_status_for_expr.: 0.143788s (num_starts 723; 0.0002s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.162232s (num_starts 1; 0.1622s/start)
query:simplify-z3.: 0.176243s (num_starts 4258; 0.0000s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.298607s (num_starts 3302; 0.0001s/start)
populate_simplified_to_state.: 0.31095s (num_starts 2; 0.1555s/start)
populate_simplified_assets.: 0.321546s (num_starts 4; 0.0804s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.668695s (num_starts 3302; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.672127s (num_starts 3302; 0.0002s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.711979s (num_starts 3302; 0.0002s/start)
compute_new_lr_status_on_locs.: 1.2639s (num_starts 213; 0.0059s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 1.50233s (num_starts 213; 0.0071s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 1.76033s (num_starts 213; 0.0083s/start)
populate_locs_potentially_modified_on_edge.: 2.1503s (num_starts 2; 1.0752s/start)
populate_auxilliary_structures_dependent_on_locs.: 2.47186s (num_starts 2; 1.2359s/start)
parse_consts_db.: 3.83345s (num_starts 1; 3.8334s/start)
liveness_analysis_conservative::xfer_and_meet.: 4.97733s (num_starts 286; 0.0174s/start)
populate_loc_liveness.: 5.01403s (num_starts 2; 2.5070s/start)
expr_do_simplify_using_lhs_set_and_precond.: 7.04602s (num_starts 3607; 0.0020s/start)
tfg_postprocess_after_pointsto_analysis.: 7.59607s (num_starts 1; 7.5961s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 7.80431s (num_starts 1; 7.8043s/start)
ftmap_run_pointsto_analysis.: 9.62495s (num_starts 1; 9.6249s/start)
main.: 13.6874s (num_starts 1; 13.6874s/start)

counters:

flags:

info:


 /home/sbansal/superopt-project/usr/local/bin/harvest32 -functions_only -live_callee_save -allow_unsupported -no_canonicalize_imms -no_eliminate_unreachable_bbls -no_eliminate_duplicates -f ALL -o /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o.harvest -l /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o.harvest.log /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o
Printing stats::get():
timers:
i386_init_costfns.: 1e-06s (num_starts 1; 0.0000s/start)
context_constructor.init.: 4e-06s (num_starts 1; 0.0000s/start)
context_constructor.solver.: 3.2e-05s (num_starts 1; 0.0000s/start)
context_constructor.: 3.9e-05s (num_starts 1; 0.0000s/start)
src_iseq_copy.: 6.3e-05s (num_starts 13; 0.0000s/start)
src_iseq_fetch.: 6.5e-05s (num_starts 2; 0.0000s/start)
obtain_live_outs.: 0.000139s (num_starts 1; 0.0001s/start)
imm_vt_map_copy.: 0.000364s (num_starts 756; 0.0000s/start)
regset_diff.: 0.000481s (num_starts 40; 0.0000s/start)
regset_rename.: 0.000866s (num_starts 84; 0.0000s/start)
i386_insn_init_constants.: 0.001249s (num_starts 1; 0.0012s/start)
gas_init.: 0.001966s (num_starts 1; 0.0020s/start)
src_iseq_get_usedef.: 0.002819s (num_starts 2; 0.0014s/start)
src_iseq_get_usedef_regs.: 0.002829s (num_starts 2; 0.0014s/start)
opctable_init.: 0.005671s (num_starts 1; 0.0057s/start)
insn_db_list_get_all_matches.: 0.008353s (num_starts 35; 0.0002s/start)
insn_db_get_all_matches.: 0.008488s (num_starts 35; 0.0002s/start)
src_insn_get_usedef.: 0.00981s (num_starts 35; 0.0003s/start)
init_input_file.: 0.01161s (num_starts 1; 0.0116s/start)
src_iseq_deserialize.: 3.52187s (num_starts 44336; 0.0001s/start)
opc_init.: 3.58344s (num_starts 1; 3.5834s/start)
i386_init.: 3.58542s (num_starts 2; 1.7927s/start)
parse_consts_db.: 4.51802s (num_starts 1; 4.5180s/start)
src_usedef_tab_read_from_file.: 7.861s (num_starts 1; 7.8610s/start)
src_usedef_tab_init.: 7.86101s (num_starts 1; 7.8610s/start)
usedef_init.: 7.86102s (num_starts 1; 7.8610s/start)

counters:

flags:

info:


Mem-stats:

 /home/sbansal/superopt-project/usr/local/bin/eqgen32 -tfg_llvm emi9f.c.etfg -l /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o.harvest.log -o /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o.tfg -e /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o -f ALL /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o.harvest
Setting max_stack_push_delta = 2147483648
dst_tfg_add_stack_pointer_translation_at_function_entry 2562: out_e = L0%1%d=>L1%1%d
Executing: /home/sbansal/superopt-project/usr/local/bin/harvest-dwarf /home/sbansal/superopt-project/superopt-tests/soundness/emi9f.s.o
main 469:Printing stats:

tfg_get_simplified_edge_cond_for_edge: num_starts 10 time spent: 0:0:0 [0.000010s total; 0.000001 per start]
tfg_get_simplified_assumes_for_edge: num_starts 123 time spent: 0:0:0 [0.000193s total; 0.000002 per start]
expr_label_memlabels_using_memlabel_map: num_starts 1146 time spent: 0:0:0 [0.024231s total; 0.000021 per start]
expr_simplify_solver: num_starts 6215 time spent: 0:0:0 [0.203679s total; 0.000033 per start]
expr_simplify_syntactic: num_starts 6215 time spent: 0:0:2 [2.061500s total; 0.000332 per start]
expr_simplify_select_on_store: num_starts 1343 time spent: 0:0:1 [1.437996s total; 0.001071 per start]
expr_simplify_store_on_store: num_starts 912 time spent: 0:0:0 [0.050308s total; 0.000055 per start]
expr_simplify_using_lhs_set_helper: num_starts 1310 time spent: 0:0:2 [2.377113s total; 0.001815 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 15984 time spent: 0:0:2 [2.363764s total; 0.000148 per start]
expr_evaluates_to_constant: num_starts 8524 time spent: 0:0:0 [0.040880s total; 0.000005 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 3291 time spent: 0:0:0 [0.006798s total; 0.000002 per start]
expr_simplify_eq: num_starts 223 time spent: 0:0:0 [0.002106s total; 0.000009 per start]
expr_simplify_iff: num_starts 32 time spent: 0:0:0 [0.000033s total; 0.000001 per start]
expr_simplify_or: num_starts 16 time spent: 0:0:0 [0.000014s total; 0.000001 per start]
expr_simplify_and: num_starts 55 time spent: 0:0:0 [0.000243s total; 0.000004 per start]
expr_simplify_andnot1: num_starts 2 time spent: 0:0:0 [0.000023s total; 0.000012 per start]
expr_simplify_andnot2: num_starts 10 time spent: 0:0:0 [0.000102s total; 0.000010 per start]
expr_simplify_not: num_starts 38 time spent: 0:0:0 [0.000050s total; 0.000001 per start]
expr_simplify_implies: num_starts 3 time spent: 0:0:0 [0.000019s total; 0.000006 per start]
expr_simplify_ite: num_starts 98 time spent: 0:0:0 [0.002738s total; 0.000028 per start]
canonicalize_expr_tree: num_starts 866 time spent: 0:0:0 [0.023171s total; 0.000027 per start]
expr_simplify_memalloc_using_memlabel: num_starts 1503 time spent: 0:0:0 [0.004352s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 1752 time spent: 0:0:1 [1.413135s total; 0.000807 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 390 time spent: 0:0:0 [0.023803s total; 0.000061 per start]
memlabel_contains_only_readonly_symbols: num_starts 390 time spent: 0:0:0 [0.000057s total; 0.000000 per start]
memlabels_are_independent: num_starts 913 time spent: 0:0:0 [0.002296s total; 0.000003 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 12 time spent: 0:0:0 [0.001015s total; 0.000085 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 12 time spent: 0:0:0 [0.000977s total; 0.000081 per start]
is_overlapping_atoms_pair_syntactic: num_starts 12 time spent: 0:0:0 [0.000906s total; 0.000076 per start]
is_overlapping_considering_type_constraints: num_starts 12 time spent: 0:0:0 [0.000035s total; 0.000003 per start]
find_offset_wrt_typed_variable_pointer: num_starts 17 time spent: 0:0:0 [0.000035s total; 0.000002 per start]
is_gep_inbounds_offset: num_starts 17 time spent: 0:0:0 [0.000002s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 3451 time spent: 0:0:0 [0.003612s total; 0.000001 per start]
expr_is_variable_start: num_starts 10 time spent: 0:0:0 [0.000001s total; 0.000000 per start]
insn_md_assemble: num_starts 10 time spent: 0:0:0 [0.000033s total; 0.000003 per start]
expr_linear_relation_holds_visit: num_starts 278 time spent: 0:0:0 [0.002042s total; 0.000007 per start]
expr_is_consts_struct_constant: num_starts 206 time spent: 0:0:0 [0.000123s total; 0.000001 per start]
expr_do_simplify_helper: num_starts 3981 time spent: 0:0:2 [2.388176s total; 0.000600 per start]
expr_do_simplify_helper_cache: num_starts 3981 time spent: 0:0:0 [0.002918s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 96 time spent: 0:0:0 [0.000038s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 96 time spent: 0:0:0 [0.000228s total; 0.000002 per start]
combo_dfa_xfer_and_meet: num_starts 10 time spent: 0:0:0 [0.218813s total; 0.021881 per start]
alias_val_xfer_and_meet: num_starts 10 time spent: 0:0:0 [0.177303s total; 0.017730 per start]
get_sprel_map_from_avail_exprs: num_starts 18 time spent: 0:0:0 [0.002825s total; 0.000157 per start]
update_memlabels_for_memslot_locs: num_starts 7 time spent: 0:0:0 [0.001409s total; 0.000201 per start]
populate_gen_and_kill_sets_for_edge: num_starts 20 time spent: 0:0:0 [0.011128s total; 0.000556 per start]
compute_simplified_loc_exprs_for_edge: num_starts 163 time spent: 0:0:2 [2.065770s total; 0.012673 per start]
compute_locs_definitely_written_on_edge: num_starts 20 time spent: 0:0:0 [0.000054s total; 0.000003 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 50 time spent: 0:0:0 [0.021447s total; 0.000429 per start]
edge_update_memlabel_map_for_mlvars: num_starts 10 time spent: 0:0:0 [0.001826s total; 0.000183 per start]
add_new_locs_based_on_edge: num_starts 10 time spent: 0:0:0 [0.123943s total; 0.012394 per start]
alias_val_meet: num_starts 10 time spent: 0:0:0 [0.000979s total; 0.000098 per start]
expand_locset_to_include_slots_for_memmask: num_starts 50 time spent: 0:0:0 [0.000816s total; 0.000016 per start]
total: num_starts 1 time spent: 0:0:24 [24.899088s total; 24.899088 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

timers:
graph_with_paths_constructor.src.llvm.main.: 0s (num_starts 1; 0.0000s/start)
etfg_init.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_execution_constructor.src.llvm.main.: 1e-06s (num_starts 1; 0.0000s/start)
i386_init_costfns.: 1e-06s (num_starts 1; 0.0000s/start)
graph_with_ce_constructor.src.llvm.main.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_points_constructor.src.llvm.main.: 2e-06s (num_starts 1; 0.0000s/start)
graph_with_proofs_constructor.src.llvm.main.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_constructor.src.llvm.main.after_populate_assumes_around_edge.: 2e-06s (num_starts 1; 0.0000s/start)
tfg_llvm_constructor.src.llvm.main.before_tfg_llvm_populate_calls.: 2e-06s (num_starts 1; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 3e-06s (num_starts 11; 0.0000s/start)
context_constructor.init.: 3e-06s (num_starts 1; 0.0000s/start)
graph_with_guessing_constructor.src.llvm.main.: 3e-06s (num_starts 1; 0.0000s/start)
vconstants_alloc.: 3e-06s (num_starts 1; 0.0000s/start)
i386_iseq_copy.: 9e-06s (num_starts 1; 0.0000s/start)
expr_is_hidden_reg.: 1.2e-05s (num_starts 19; 0.0000s/start)
expr_is_callee_save_const.: 2.1e-05s (num_starts 27; 0.0000s/start)
context_constructor.solver.: 2.6e-05s (num_starts 1; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 2.8e-05s (num_starts 2; 0.0000s/start)
context_constructor.: 3.4e-05s (num_starts 1; 0.0000s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 3.7e-05s (num_starts 1; 0.0000s/start)
imm_vt_map_copy.: 4.3e-05s (num_starts 108; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 4.5e-05s (num_starts 2; 0.0000s/start)
x86_assemble.: 4.8e-05s (num_starts 1; 0.0000s/start)
add_extra_node_at_start_pc.: 6e-05s (num_starts 1; 0.0001s/start)
populate_dominator_and_postdominator_relations.: 6.3e-05s (num_starts 1; 0.0001s/start)
peep_preprocess_using_regmap.: 6.5e-05s (num_starts 5; 0.0000s/start)
dst_iseq_inv_rename.: 7.3e-05s (num_starts 1; 0.0001s/start)
tfg_eliminate_hidden_regs.: 9.1e-05s (num_starts 5; 0.0000s/start)
llptfg_constructor.: 9.7e-05s (num_starts 1; 0.0001s/start)
tfg::populate_loc_definedness.post_dfa.: 0.0001s (num_starts 1; 0.0001s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.000107s (num_starts 13; 0.0000s/start)
sp_version_relations_val_t::meet.: 0.00013s (num_starts 154; 0.0000s/start)
compute_sprel_relations.: 0.000144s (num_starts 1; 0.0001s/start)
i386_infer_regcons_from_assembly.: 0.000144s (num_starts 1; 0.0001s/start)
dst_iseq_disassemble_with_bin_offsets.: 0.000148s (num_starts 1; 0.0001s/start)
propagate_sprels.: 0.000153s (num_starts 1; 0.0002s/start)
def_analysis::xfer_and_meet.: 0.000167s (num_starts 10; 0.0000s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.000265s (num_starts 10; 0.0000s/start)
expr_represents_llvm_undef.: 0.000344s (num_starts 52; 0.0000s/start)
graph_locs_add_all_llvmvars.: 0.000381s (num_starts 1; 0.0004s/start)
populate_branch_affecting_locs.: 0.000391s (num_starts 1; 0.0004s/start)
regmap_assign_using_regcons.: 0.000395s (num_starts 1; 0.0004s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.0004s (num_starts 2; 0.0002s/start)
graph_locs_add_local_vars_for_edge.: 0.000428s (num_starts 10; 0.0000s/start)
graph_locs_add_all_local_vars.: 0.000432s (num_starts 1; 0.0004s/start)
tfg::populate_loc_definedness.before_solve.: 0.000459s (num_starts 1; 0.0005s/start)
populate_locid2expr_map.: 0.000491s (num_starts 2; 0.0002s/start)
lr_status_meet.: 0.000523s (num_starts 418; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.000573s (num_starts 10; 0.0001s/start)
graph_locs_add_all_exvregs.: 0.000583s (num_starts 1; 0.0006s/start)
determinize_value_expr_map.: 0.000648s (num_starts 363; 0.0000s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.000657s (num_starts 10; 0.0001s/start)
tighten_mem_access_ml.cache_miss.: 0.000848s (num_starts 9; 0.0001s/start)
tighten_mem_access_ml.: 0.000865s (num_starts 9; 0.0001s/start)
tfg::populate_loc_definedness.before_initialize.: 0.000919s (num_starts 1; 0.0009s/start)
dst_iseq_from_string.: 0.000941s (num_starts 1; 0.0009s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.00095s (num_starts 3; 0.0003s/start)
insn_db_list_get_all_matches.: 0.000951s (num_starts 5; 0.0002s/start)
tfg::populate_loc_definedness.: 0.000961s (num_starts 1; 0.0010s/start)
insn_db_get_all_matches.: 0.001022s (num_starts 5; 0.0002s/start)
tfg::collect_assumes_around_edge.: 0.001116s (num_starts 123; 0.0000s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.00115s (num_starts 276; 0.0000s/start)
i386_insn_init_constants.: 0.001203s (num_starts 1; 0.0012s/start)
expr_linear_relation_holds::visit.var.: 0.001268s (num_starts 60; 0.0000s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.001357s (num_starts 10; 0.0001s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.001693s (num_starts 217; 0.0000s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.001814s (num_starts 10; 0.0002s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.001854s (num_starts 30; 0.0001s/start)
gas_init.: 0.001856s (num_starts 1; 0.0019s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.002516s (num_starts 217; 0.0000s/start)
expr_substitute_using_available_exprs_submap.: 0.004s (num_starts 70; 0.0001s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.00452s (num_starts 10; 0.0005s/start)
graph_visit_exprs_const.const.: 0.005353s (num_starts 2; 0.0027s/start)
tfg_preprocess.dst.: 0.006233s (num_starts 1; 0.0062s/start)
tfg::tfg_preprocess.: 0.006237s (num_starts 1; 0.0062s/start)
find_dominators.: 0.0063s (num_starts 13; 0.0005s/start)
tfg_asm_prune_implausible_pc_local_sprel_expr_assumes.: 0.006441s (num_starts 1; 0.0064s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.006619s (num_starts 217; 0.0000s/start)
graph_identify_back_edges.: 0.006644s (num_starts 10; 0.0007s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.006668s (num_starts 10; 0.0007s/start)
opctable_init.: 0.006715s (num_starts 1; 0.0067s/start)
graph_identify_natural_loops.: 0.006772s (num_starts 10; 0.0007s/start)
graph_with_aliasing_constructor.src.llvm.main.: 0.006803s (num_starts 1; 0.0068s/start)
avail_exprs_create_submap.: 0.007115s (num_starts 30; 0.0002s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.007149s (num_starts 10; 0.0007s/start)
graph_with_locs_constructor.src.llvm.main.: 0.007403s (num_starts 1; 0.0074s/start)
identify_address_taken_local_variables.: 0.007864s (num_starts 1; 0.0079s/start)
compute_regions.: 0.008842s (num_starts 10; 0.0009s/start)
create_closure_matrix.: 0.009932s (num_starts 17; 0.0006s/start)
create_sp_version_relations_lattice_at_pc.: 0.012757s (num_starts 17; 0.0008s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.014966s (num_starts 52; 0.0003s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.015033s (num_starts 52; 0.0003s/start)
graph_visit_exprs.: 0.016523s (num_starts 12; 0.0014s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.017511s (num_starts 10; 0.0018s/start)
compute_lr_status_for_expr.: 0.017989s (num_starts 97; 0.0002s/start)
populate_transitive_closure.: 0.018845s (num_starts 7; 0.0027s/start)
graph_with_edge_structures_constructor.src.llvm.main.: 0.019911s (num_starts 1; 0.0199s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.020189s (num_starts 1; 0.0202s/start)
graph_to_stream.: 0.02281s (num_starts 1; 0.0228s/start)
graph_with_simplified_assets_constructor.src.llvm.main.: 0.024265s (num_starts 1; 0.0243s/start)
graph_with_predicates_constructor.src.llvm.main.: 0.030887s (num_starts 1; 0.0309s/start)
query:convert_to_z3.: 0.04316s (num_starts 861; 0.0001s/start)
query:convert_from_z3.: 0.044984s (num_starts 861; 0.0001s/start)
compute_new_lr_status_on_locs.: 0.050242s (num_starts 10; 0.0050s/start)
dst_insn_get_tfg.: 0.052313s (num_starts 5; 0.0105s/start)
query:simplify-z3.: 0.11964s (num_starts 1722; 0.0001s/start)
liveness_analysis_conservative::xfer_and_meet.: 0.141201s (num_starts 10; 0.0141s/start)
populate_loc_liveness.: 0.143609s (num_starts 1; 0.1436s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 0.159337s (num_starts 929; 0.0002s/start)
tfg_postprocess_after_pointsto_analysis.: 0.161078s (num_starts 1; 0.1611s/start)
tfg_asm_t::tfg_postprocess_after_pointsto_analysis.: 0.161586s (num_starts 1; 0.1616s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 0.177355s (num_starts 10; 0.0177s/start)
populate_simplified_to_state.: 0.186997s (num_starts 2; 0.0935s/start)
populate_simplified_assets.: 0.196862s (num_starts 4; 0.0492s/start)
tfg_llvm_constructor.src.llvm.main.before_parsing_potential_scev_relations.: 0.218637s (num_starts 1; 0.2186s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 0.218827s (num_starts 10; 0.0219s/start)
tfg_llvm_constructor.src.llvm.main.before_parsing_PC_to_line_and_column.: 0.218886s (num_starts 1; 0.2189s/start)
ftmap_run_pointsto_analysis.: 0.387669s (num_starts 1; 0.3877s/start)
tfg_run_pointsto_analysis_asm.: 0.387741s (num_starts 1; 0.3877s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 0.431642s (num_starts 929; 0.0005s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 0.432974s (num_starts 1146; 0.0004s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 0.455083s (num_starts 929; 0.0005s/start)
populate_locs_potentially_modified_on_edge.: 1.99359s (num_starts 2; 0.9968s/start)
tfg_constructor.src.llvm.main.after_transitive_closure.: 2.18123s (num_starts 1; 2.1812s/start)
tfg_constructor.src.llvm.main.post_parsing.: 2.18124s (num_starts 1; 2.1812s/start)
tfg_constructor.src.llvm.main.after_string_contents.: 2.18124s (num_starts 1; 2.1812s/start)
tfg_constructor.src.llvm.main.after_compute_max_memlabel_varnum.: 2.18128s (num_starts 1; 2.1813s/start)
tfg_constructor.src.llvm.main.: 2.18128s (num_starts 1; 2.1813s/start)
populate_auxilliary_structures_dependent_on_locs.: 2.19047s (num_starts 2; 1.0952s/start)
expr_do_simplify_using_lhs_set_and_precond.: 2.37892s (num_starts 1310; 0.0018s/start)
dst_parse_sym_exec_db.: 2.88122s (num_starts 1; 2.8812s/start)
opc_init.: 3.81218s (num_starts 1; 3.8122s/start)
i386_init.: 3.81409s (num_starts 1; 3.8141s/start)
read_local_sprel_mapping_data.: 3.82856s (num_starts 1; 3.8286s/start)
parse_consts_db.: 4.39794s (num_starts 1; 4.3979s/start)
dst_iseq_deserialize.: 5.0584s (num_starts 88672; 0.0001s/start)
dst_usedef_tab_read_from_file.: 6.78647s (num_starts 1; 6.7865s/start)
dst_usedef_tab_init.: 6.78647s (num_starts 1; 6.7865s/start)
usedef_init.: 6.78648s (num_starts 1; 6.7865s/start)
gen_tfg_for_dst_iseq-main.: 6.99234s (num_starts 1; 6.9923s/start)

counters:

flags:

info:

Context stats:
exprs: count: 143296
sorts: count: 171
num_proof_queries: 0
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	3981
	        hit ratio:	0.670937
m_simplify_solver:
	----------- total:	6215
	        hit ratio:	0.86066
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	292
	        hit ratio:	0.383562
m_z3_solver_substitution:
	----------- total:	861
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	866
	        hit ratio:	0
m_expr_size:
	----------- total:	12686
	        hit ratio:	0.922276
m_contains_only_constants_or_sp_versions:
	----------- total:	6
	        hit ratio:	0.5
m_expr_evaluates_to_constant_visitor:
	----------- total:	16920
	        hit ratio:	0.777837

z3_solver expr_query_cache entry size: 0

<MSG>0:00 : Converting C source code to LLVM IR bitcode...</MSG>
<MSG>0:04 : Converting LLVM IR bitcode to Transfer Function Graph (TFG)...</MSG>
<MSG>0:18 : Converting assembly code to object file...</MSG>
<MSG>0:18 : Harvesting object code to obtain harvested assembly...</MSG>
<MSG>0:34 : Converting harvested assembly to Transfer Function Graph (TFG)...</MSG>
<MSG>0:59 : Searching for equivalence at unroll factor 3</MSG>
<MSG>1:02 : Computing equivalence for function: main...</MSG>
Computing equivalence for function: main...
remove_node_and_make_composite_edges 609: Warning : removing Lfor.cond%3%d, pdt.size() = 2 (> 1), incoming.size 1, outgoing.size 2
, max_expr_size = 124
<MSG>1:02 : Constructing SSA for LLVM TFG...</MSG>
<MSG>1:13 : Constructing SSA for Assembly TFG...</MSG>
<MSG>1:14 : Finished SSA construction for both TFGs...</MSG>
<MSG>1:14 : Computing equivalence of the two TFGs (LLVM IR and x86 assembly)...</MSG>
<MSG>1:14 : Chose (after CE propagation) product-TFG main (d:0, s:0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: nullptr
  src-full-pathset: nullptr
<MSG>1:14 : product-TFG main: Enumerating correlations for L0%0%d=>E0%0%d[mu 1, delta 1] starting at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : Considering 3 paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta 1] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 2, delta 1] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : Attempting correlation of src pathset L0%0%d=>E0%0%d[mu 3, delta 1] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : Found 9 feasible correlations for paths to src pc E0%0%d as correlation candidates for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : product-TFG main: Found 9 correlations for L0%0%d=>E0%0%d[mu 1, delta 1] starting at L0%0%d_L0%0%d
</MSG>
<MSG>1:14 : product-TFG main created 9 possibilities in group main.A...</MSG>
<MSG>1:14 : Chose (for CE propagation) product-TFG main.A1 (d:0, s:0) from a frontier of size 9...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
<MSG>1:14 : Finished adding lsprel-assumes for allocation to the product-TFG main.A1...</MSG>
<MSG>1:14 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A1...</MSG>
<MSG>1:14 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:14 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:14 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:14 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting select expressions at toPC Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:14 : main.A1: Adding node Lentry%1%allocaI3_L0%1%allocaI3 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%2%d=
<MSG>1:14 : main.A1: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:14 : main.A1: Found 1 alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting select expressions at toPC Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:14 : main.A1: Adding node Lentry%1%allocaI4_L0%1%allocaI4 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%2%d=
<MSG>1:14 : main.A1: Getting alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:14 : main.A1: Found no alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%1%d=
<MSG>1:14 : main.A1: Computing loop hoisting select expressions at toPC Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:14 : main.A1: Adding node Lentry%2%allocaI3_L0%1%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%2%d=
<MSG>1:14 : main.A1: Getting alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:14 : main.A1: Found 1 alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting select expressions at toPC Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:14 : main.A1: Adding node Lentry%2%allocaI4_L0%1%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%2%d=
<MSG>1:14 : main.A1: Getting alloca-ptrs on edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:14 : main.A1: Found no alloca-ptrs on edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%2%d=
<MSG>1:14 : main.A1: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:14 : main.A1: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:14 : main.A1: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>1:14 : main.A1: Getting alloca-ptrs on edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:14 : main.A1: Found no alloca-ptrs on edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:15 : main.A1: Adding edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:15 : main.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:15 : main.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:15 : main.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:15 : main.A1: Propagated 0 out of 3 counter-examples across edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3</MSG>
<MSG>1:15 : main.A1: Added the 0 propagated CEs at PC Lentry%1%allocaI3_L0%1%allocaI3 and propagated further.
</MSG>
<MSG>1:15 : main.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:15 : main.A1: Finished executing CG's add edge function...</MSG>
<MSG>1:15 : main.A1: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:15 : main.A1: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:15 : main.A1: Adding edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:15 : main.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%1%d=
<MSG>1:15 : main.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:15 : main.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:15 : main.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:15 : main.A1: Finished executing CG's add edge function...</MSG>
<MSG>1:15 : main.A1: Computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:15 : main.A1: Done computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:15 : main.A1: Adding edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:15 : main.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:15 : main.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:15 : main.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:15 : main.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:15 : main.A1: Finished executing CG's add edge function...</MSG>
<MSG>1:15 : main.A1: Computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:15 : main.A1: Done computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:15 : main.A1: Adding edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:15 : main.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A1: returning 1 for =Lentry%2%d=
<MSG>1:15 : main.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:15 : main.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:15 : main.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:15 : main.A1: Finished executing CG's add edge function...</MSG>
<MSG>1:15 : main.A1: Computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:15 : main.A1: Done computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:15 : main.A1: Adding edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:15 : main.A1: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:15 : main.A1: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:15 : main.A1: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:15 : main.A1: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:15 : main.A1: Finished executing CG's add edge function...</MSG>
<MSG>1:15 : main.A1: Computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:15 : main.A1: Done computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:15 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:15 : Added correlation to the product-TFG main.A1 (d:0, s:0) and created a correlation entry...</MSG>
<MSG>1:15 : Chose (after CE propagation) product-TFG main.A1 (d:0, s:0) from a frontier of size 9...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3 (C L0%0%d => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d (C line 19 => C E0%0%d at mu 1 delta 1, A line 19 => A E0%0%d at mu 1 delta 1)
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            Lentry%1%allocaI3_L0%1%allocaI3 (C line 19, A line 19)
                Lentry%1%allocaI3_L0%1%allocaI3 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%1%allocaI4_L0%1%allocaI4 (C line 19, A line 19)
                Lentry%1%allocaI4_L0%1%allocaI4 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI3_L0%1%allocaI1 (C line 19, A line 19)
                Lentry%2%allocaI3_L0%1%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 15 bv exprs)
            Lentry%2%allocaI4_L0%1%allocaI2 (C line 19, A line 19)
                Lentry%2%allocaI4_L0%1%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 15 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:
  	L0%1%spver:
  	  local.=Lentry%1%d= == input.dst.local./*___y___main__x__=Lentry%1%d=/
  	  local.=Lentry%2%d= == input.dst.local./*___y___main__x__=Lentry%2%d=/

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
<MSG>1:15 : main.A1: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>1:15 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3, Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4, Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1, Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2, Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:15 : main.A1: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3) ...</MSG>
<MSG>1:15 : main.A1: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: unchanged</MSG>
<MSG>1:15 : main.A1: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>1:15 : main.A1: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3) ...</MSG>
<MSG>1:15 : main.A1: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:15 : main.A1: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:15 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:16 : main.A1: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:16 : main.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:18 : main.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 1 proof-stats=dht11-prove_trivial4-prove7...</MSG>
<MSG>1:18 : main.A1: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:18 : main.A1: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:18 : main.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:18 : main.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:18 : main.A1: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:18 : main.A1: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:18 : main.A1: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:18 : main.A1: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:18 : main.A1: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:18 : main.A1: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>1:18 : main.A1: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: changed ...</MSG>
<MSG>1:19 : main.A1: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: changed( 0, 1 ) ...</MSG>
<MSG>1:19 : main.A1: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4) ...</MSG>
<MSG>1:19 : main.A1: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed</MSG>
<MSG>1:19 : main.A1: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI3_L0%1%allocaI3 ...</MSG>
<MSG>1:19 : main.A1: Relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4) ...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:19 : main.A1: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:19 : main.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:22 : main.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 1 proof-stats=dht21-prove_trivial9-prove12...</MSG>
<MSG>1:22 : main.A1: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:23 : main.A1: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:23 : main.A1: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed ...</MSG>
<MSG>1:24 : main.A1: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed( 1, 1 ) ...</MSG>
<MSG>1:24 : main.A1: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:24 : main.A1: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: unchanged</MSG>
<MSG>1:24 : main.A1: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI4_L0%1%allocaI4 ...</MSG>
<MSG>1:24 : main.A1: Relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:24 : main.A1: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:24 : main.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 15 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht24-prove_trivial16-prove8...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:26 : main.A1: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:26 : main.A1: Done relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: changed ...</MSG>
<MSG>1:26 : main.A1: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: changed( 0, 1 ) ...</MSG>
<MSG>1:26 : main.A1: Relaxing dst graph's memlabels for edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:26 : main.A1: Done relaxing dst graph's memlabels for edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed</MSG>
<MSG>1:26 : main.A1: Checking well-formedness assertions on outgoing edges from Lentry%2%allocaI3_L0%1%allocaI1 ...</MSG>
<MSG>1:27 : main.A1: Relaxing invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:27 : main.A1: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 15 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:27 : main.A1: marking unstable at Lentry%2%allocaI4_L0%1%allocaI2 due to failing condition:
wfcond.from_pcLentry%2%allocaI4_L0%1%allocaI2.to_pcE0%0%d_E0%0%d-dst-edgecond-implies-src-edgecond
140320 : 1 { 0x1 } : BOOL                          : true
146415 : not(140320) : BOOL                        : false

ce =
=counter_example_begin z3v487.ce1111 62716ad6e9d8b9f8b8955d71e6bdc6
=input.dst.exreg.0.4
1 : 1461716136 { 0x572004a8 +1.25014209e47 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 536875596 { 0x2000124c +1.55837e193 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 1073741823 ] -> memlabel-mem--esp, [ 1073741824; 1073741839 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1073741840; 1610616831 ] -> memlabel-mem--esp, [ 1610616832; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1073741839 { 0x4000000f +1.178e1 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 1073741823 ] -> memlabel-mem--esp, [ 1073741824; 1073741839 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1073741840; 1610616831 ] -> memlabel-mem--esp, [ 1610616832; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 536875596 { 0x2000124c +1.55837e193 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 536875596 { 0x2000124c +1.55837e193 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1610608640 { 0x5ffff000 +1.99951171e64 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 8192 { 0x2000 +1.97656e129 } : BV:32
=input.memlabel-mem--esp_end
1 : 1610616831 { 0x60000fff +1.48816e65 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%1%d=/
1 : 1073741824 { 0x40000000 +1.0e1 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 1073741823 ] -> memlabel-mem--esp, [ 1073741824; 1073741839 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1073741840; 1610616831 ] -> memlabel-mem--esp, [ 1610616832; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%2%d=.L0%1%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%1%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 2147483643 ] -> 0, [ 2147483644; 2147483651 ] -> 1, [ 2147483652; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 8191 ] -> memlabel-mem--heap, [ 8192; 1073741823 ] -> memlabel-mem--esp, [ 1073741824; 1073741839 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1073741840; 1610616831 ] -> memlabel-mem--esp, [ 1610616832; 2147483643 ] -> memlabel-mem--heap, [ 2147483644; 2147483651 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 2147483652; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%1%allocaI2
1 : 2147483651 { 0x80000003 -2147483645 -1.35e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%1%allocaI2
1 : 2147483644 { 0x7ffffffc +1.99999952e128 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%allocaI2
1 : 0 { 0x0 } : BOOL
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.L0%1%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
67974802
=counter_example_end


failcond-expr = not(true):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
</MSG>
<MSG>1:27 : main.A1: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:27 : main.A1: Done relaxing invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed ...</MSG>
<MSG>1:27 : main.A1: Done relaxing memlabels and invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed( 1, 1 ) ...</MSG>
<MSG>1:27 : main.A1: edge composition ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)*((Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)*((Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)*((Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)*(Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d))))) became unstable after invariant inference</MSG>
<MSG>1:27 : Chosen product-TFG main.A1 failed the edge correlation criterion (aka well-formedness checks)... (edge composition: ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)*((Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)*((Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)*((Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)*(Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d))))))
</MSG>
<MSG>1:27 : Chose (for CE propagation) product-TFG main.A2 (d:0, s:0) from a frontier of size 8...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
<MSG>1:27 : Finished adding lsprel-assumes for allocation to the product-TFG main.A2...</MSG>
<MSG>1:27 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A2...</MSG>
<MSG>1:27 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:27 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:27 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:27 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting select expressions at toPC Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: Adding node Lentry%1%allocaI3_L0%1%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A2: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A2: returning 0 for =Lentry%2%d=
<MSG>1:27 : main.A2: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: Found 1 alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting select expressions at toPC Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:27 : main.A2: Adding node Lentry%1%allocaI4_L0%1%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A2: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A2: returning 0 for =Lentry%2%d=
<MSG>1:27 : main.A2: Getting alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:27 : main.A2: Found no alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A2: returning 1 for =Lentry%1%d=
<MSG>1:27 : main.A2: Computing loop hoisting select expressions at toPC Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:27 : main.A2: Adding node Lentry%2%allocaI3_L0%2%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A2: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A2: returning 0 for =Lentry%2%d=
<MSG>1:27 : main.A2: Getting alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:27 : main.A2: Found 1 alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting select expressions at toPC Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:27 : main.A2: Adding node Lentry%2%allocaI4_L0%2%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A2: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A2: returning 0 for =Lentry%2%d=
<MSG>1:27 : main.A2: Getting alloca-ptrs on edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:27 : main.A2: Found no alloca-ptrs on edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A2: returning 0 for =Lentry%2%d=
<MSG>1:27 : main.A2: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:27 : main.A2: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:27 : main.A2: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>1:27 : main.A2: Getting alloca-ptrs on edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:27 : main.A2: Found no alloca-ptrs on edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:27 : main.A2: Adding edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:27 : main.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:27 : main.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:27 : main.A2: Propagated 0 out of 3 counter-examples across edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1</MSG>
<MSG>1:27 : main.A2: Added the 0 propagated CEs at PC Lentry%1%allocaI3_L0%1%allocaI1 and propagated further.
</MSG>
<MSG>1:27 : main.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:27 : main.A2: Finished executing CG's add edge function...</MSG>
<MSG>1:27 : main.A2: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:27 : main.A2: Adding edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:27 : main.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A2: returning 1 for =Lentry%1%d=
<MSG>1:27 : main.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:27 : main.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:27 : main.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:27 : main.A2: Finished executing CG's add edge function...</MSG>
<MSG>1:27 : main.A2: Computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:27 : main.A2: Done computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:27 : main.A2: Adding edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:27 : main.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:27 : main.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:27 : main.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:27 : main.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:28 : main.A2: Finished executing CG's add edge function...</MSG>
<MSG>1:28 : main.A2: Computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:28 : main.A2: Done computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:28 : main.A2: Adding edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:28 : main.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A2: returning 0 for =Lentry%2%d=
<MSG>1:28 : main.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:28 : main.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:28 : main.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:28 : main.A2: Finished executing CG's add edge function...</MSG>
<MSG>1:28 : main.A2: Computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:28 : main.A2: Done computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:28 : main.A2: Adding edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:28 : main.A2: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:28 : main.A2: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:28 : main.A2: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:28 : main.A2: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:28 : main.A2: Finished executing CG's add edge function...</MSG>
<MSG>1:28 : main.A2: Computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:28 : main.A2: Done computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:28 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:28 : Added correlation to the product-TFG main.A2 (d:0, s:0) and created a correlation entry...</MSG>
<MSG>1:28 : Chose (after CE propagation) product-TFG main.A2 (d:0, s:0) from a frontier of size 8...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1 (C L0%0%d => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d (C line 19 => C E0%0%d at mu 1 delta 1, A line 19 => A E0%0%d at mu 1 delta 1)
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            Lentry%1%allocaI3_L0%1%allocaI1 (C line 19, A line 19)
                Lentry%1%allocaI3_L0%1%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%1%allocaI4_L0%1%allocaI2 (C line 19, A line 19)
                Lentry%1%allocaI4_L0%1%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI3_L0%2%allocaI1 (C line 19, A line 19)
                Lentry%2%allocaI3_L0%2%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI4_L0%2%allocaI2 (C line 19, A line 19)
                Lentry%2%allocaI4_L0%2%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:
  	L0%1%spver:
  	  local.=Lentry%1%d= == input.dst.local./*___y___main__x__=Lentry%1%d=/
  	L0%2%spver:
  	  local.=Lentry%2%d= == input.dst.sp=L0%2%spver=sp.L0%2%spver

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
<MSG>1:28 : main.A2: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>1:28 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1, Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2, Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1, Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2, Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:28 : main.A2: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:28 : main.A2: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: unchanged</MSG>
<MSG>1:28 : main.A2: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>1:28 : main.A2: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:28 : main.A2: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:28 : main.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht12-prove_trivial4-prove8...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:30 : main.A2: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:30 : main.A2: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: changed ...</MSG>
<MSG>1:30 : main.A2: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: changed( 0, 1 ) ...</MSG>
<MSG>1:30 : main.A2: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:30 : main.A2: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed</MSG>
<MSG>1:30 : main.A2: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI3_L0%1%allocaI1 ...</MSG>
<MSG>1:31 : main.A2: Relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:31 : main.A2: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:31 : main.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:35 : main.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht22-prove_trivial9-prove13...</MSG>
<MSG>1:35 : main.A2: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:35 : main.A2: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:35 : main.A2: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:35 : main.A2: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:35 : main.A2: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:35 : main.A2: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:35 : main.A2: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:35 : main.A2: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:35 : main.A2: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:35 : main.A2: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:35 : main.A2: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed ...</MSG>
<MSG>1:36 : main.A2: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed( 1, 1 ) ...</MSG>
<MSG>1:36 : main.A2: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1) ...</MSG>
<MSG>1:36 : main.A2: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed</MSG>
<MSG>1:36 : main.A2: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI4_L0%1%allocaI2 ...</MSG>
<MSG>1:36 : main.A2: Relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1) ...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:36 : main.A2: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:36 : main.A2: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:37 : main.A2: marking unstable at Lentry%2%allocaI4_L0%2%allocaI2 due to failing condition:
wfcond.from_pcLentry%2%allocaI4_L0%2%allocaI2.to_pcE0%0%d_E0%0%d-dst-edgecond-implies-src-edgecond
140320 : 1 { 0x1 } : BOOL                          : true
146415 : not(140320) : BOOL                        : false

ce =
=counter_example_begin z3.ce2031 b2155361c06a4fad6b5b66963220dde
=input.dst.exreg.0.4
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.6.0
1 : 1716289505 { 0x664c7fe1 +1.59765255e77 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 1753220140, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2969569551 { 0xb100090f -1325397745 -1.27644e227 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 2050657142 { 0x7a3a8b76 +1.45738101e117 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1496470707 { 0x593254b3 +1.39320981e51 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 0 { 0x0 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 1134078308 { 0x4398a964 +1.19266939e8 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 19418817 { 0x1284ec1 +1.31490337e131 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1716287280 { 0x664c7730 +1.59738731e77 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 1134078308 { 0x4398a964 +1.19266939e8 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 19418817 { 0x1284ec1 +1.31490337e131 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2256535552 { 0x86800000 -2038431744 -1.0e142 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 964694016 { 0x39801000 +1.48828e244 } : BV:32
=input.memlabel-mem--esp_end
1 : 3221229567 { 0xc0000fff -1073737729 -1.48816e1 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%1%d=/
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.dst.mem.L0%1%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%1%allocaI1
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%1%allocaI2
1 : 1496470707 { 0x593254b3 +1.39320981e51 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%1%allocaI2
1 : 2050657142 { 0x7a3a8b76 +1.45738101e117 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI2.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI2.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
3213601974
=counter_example_end


failcond-expr = not(true):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
</MSG>
<MSG>1:37 : main.A2: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:37 : main.A2: Done relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed ...</MSG>
<MSG>1:37 : main.A2: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed( 1, 1 ) ...</MSG>
<MSG>1:37 : main.A2: edge composition ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)*((Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)*((Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)*((Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)*(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d))))) became unstable after invariant inference</MSG>
<MSG>1:37 : Chosen product-TFG main.A2 failed the edge correlation criterion (aka well-formedness checks)... (edge composition: ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)*((Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)*((Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)*((Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)*(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d))))))
</MSG>
<MSG>1:37 : Chose (for CE propagation) product-TFG main.A3 (d:0, s:0) from a frontier of size 7...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
<MSG>1:37 : Finished adding lsprel-assumes for allocation to the product-TFG main.A3...</MSG>
<MSG>1:37 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A3...</MSG>
<MSG>1:37 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:37 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:37 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:37 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:37 : main.A3: marking unstable at L0%0%d_L0%0%d due to failing condition:
correlation-failure--failed-to-create-alloc-dealloc-nodes-and-edges
failcond-expr = true:
1 : 1 { 0x1 } : BOOL
</MSG>
<MSG>1:37 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:37 : Failed correlation of src pathset L0%0%d=>E0%0%d[mu 1, delta 1] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d: failcond = correlation-failure--failed-to-create-alloc-dealloc-nodes-and-edges
</MSG>
<MSG>1:37 : Discovered that the correlation was useless for the product-TFG main.A3 (d:0, s:0)...</MSG>
<MSG>1:37 : Chose (for CE propagation) product-TFG main.A4 (d:0, s:0) from a frontier of size 6...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 2, delta 1]
<MSG>1:37 : Finished adding lsprel-assumes for allocation to the product-TFG main.A4...</MSG>
<MSG>1:37 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A4...</MSG>
<MSG>1:37 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:37 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:37 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:37 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting select expressions at toPC Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: Adding node Lentry%1%allocaI3_L0%1%allocaI3 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%2%d=
<MSG>1:37 : main.A4: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: Found 1 alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting select expressions at toPC Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:37 : main.A4: Adding node Lentry%1%allocaI4_L0%1%allocaI4 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%2%d=
<MSG>1:37 : main.A4: Getting alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:37 : main.A4: Found no alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%1%d=
<MSG>1:37 : main.A4: Computing loop hoisting select expressions at toPC Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: Adding node Lentry%2%allocaI3_L0%1%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%2%d=
<MSG>1:37 : main.A4: Getting alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: Found 1 alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting select expressions at toPC Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:37 : main.A4: Adding node Lentry%2%allocaI4_L0%1%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%2%d=
<MSG>1:37 : main.A4: Getting alloca-ptrs on edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:37 : main.A4: Found no alloca-ptrs on edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%2%d=
<MSG>1:37 : main.A4: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:37 : main.A4: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:37 : main.A4: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>1:37 : main.A4: Getting alloca-ptrs on edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:37 : main.A4: Found no alloca-ptrs on edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:37 : main.A4: Adding edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:37 : main.A4: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:37 : main.A4: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:37 : main.A4: Propagated 0 out of 3 counter-examples across edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3</MSG>
<MSG>1:37 : main.A4: Added the 0 propagated CEs at PC Lentry%1%allocaI3_L0%1%allocaI3 and propagated further.
</MSG>
<MSG>1:37 : main.A4: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:37 : main.A4: Finished executing CG's add edge function...</MSG>
<MSG>1:37 : main.A4: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:37 : main.A4: Adding edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:37 : main.A4: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%1%d=
<MSG>1:37 : main.A4: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:37 : main.A4: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:37 : main.A4: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:37 : main.A4: Finished executing CG's add edge function...</MSG>
<MSG>1:37 : main.A4: Computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:37 : main.A4: Done computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:37 : main.A4: Adding edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:37 : main.A4: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:37 : main.A4: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:37 : main.A4: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:37 : main.A4: Finished executing CG's add edge function...</MSG>
<MSG>1:37 : main.A4: Computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: Done computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:37 : main.A4: Adding edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:37 : main.A4: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A4: returning 1 for =Lentry%2%d=
<MSG>1:37 : main.A4: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:37 : main.A4: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:37 : main.A4: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:37 : main.A4: Finished executing CG's add edge function...</MSG>
<MSG>1:37 : main.A4: Computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:37 : main.A4: Done computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:37 : main.A4: Adding edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:37 : main.A4: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:37 : main.A4: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:37 : main.A4: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:37 : main.A4: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
<MSG>1:38 : main.A4: Finished executing CG's add edge function...</MSG>
<MSG>1:38 : main.A4: Computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:38 : main.A4: Done computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:38 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:38 : Added correlation to the product-TFG main.A4 (d:0, s:0) and created a correlation entry...</MSG>
<MSG>1:38 : Chose (after CE propagation) product-TFG main.A4 (d:0, s:0) from a frontier of size 6...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3 (C L0%0%d => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d (C line 19 => C E0%0%d at mu 2 delta 1, A line 19 => A E0%0%d at mu 1 delta 1)
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            Lentry%1%allocaI3_L0%1%allocaI3 (C line 19, A line 19)
                Lentry%1%allocaI3_L0%1%allocaI3 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%1%allocaI4_L0%1%allocaI4 (C line 19, A line 19)
                Lentry%1%allocaI4_L0%1%allocaI4 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI3_L0%1%allocaI1 (C line 19, A line 19)
                Lentry%2%allocaI3_L0%1%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 15 bv exprs)
            Lentry%2%allocaI4_L0%1%allocaI2 (C line 19, A line 19)
                Lentry%2%allocaI4_L0%1%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 15 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:
  	L0%1%spver:
  	  local.=Lentry%1%d= == input.dst.local./*___y___main__x__=Lentry%1%d=/
  	  local.=Lentry%2%d= == input.dst.local./*___y___main__x__=Lentry%2%d=/

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 2, delta 1]
<MSG>1:38 : main.A4: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>1:38 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3, Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4, Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1, Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2, Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:38 : main.A4: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3) ...</MSG>
<MSG>1:38 : main.A4: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: unchanged</MSG>
<MSG>1:38 : main.A4: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>1:38 : main.A4: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3) ...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:38 : main.A4: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:38 : main.A4: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 1 proof-stats=dht13-prove_trivial5-prove8...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:40 : main.A4: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:40 : main.A4: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: changed ...</MSG>
<MSG>1:40 : main.A4: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: changed( 0, 1 ) ...</MSG>
<MSG>1:40 : main.A4: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4) ...</MSG>
<MSG>1:40 : main.A4: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed</MSG>
<MSG>1:40 : main.A4: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI3_L0%1%allocaI3 ...</MSG>
<MSG>1:41 : main.A4: Relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4) ...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:41 : main.A4: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:41 : main.A4: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:44 : main.A4: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 1 proof-stats=dht20-prove_trivial8-prove12...</MSG>
<MSG>1:44 : main.A4: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:44 : main.A4: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:44 : main.A4: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:44 : main.A4: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:44 : main.A4: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed ...</MSG>
<MSG>1:45 : main.A4: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed( 1, 1 ) ...</MSG>
<MSG>1:45 : main.A4: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:45 : main.A4: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: unchanged</MSG>
<MSG>1:45 : main.A4: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI4_L0%1%allocaI4 ...</MSG>
<MSG>1:45 : main.A4: Relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:45 : main.A4: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:45 : main.A4: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 15 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:47 : main.A4: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht24-prove_trivial14-prove10...</MSG>
<MSG>1:47 : main.A4: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:47 : main.A4: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>1:47 : main.A4: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:47 : main.A4: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:47 : main.A4: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:48 : main.A4: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:48 : main.A4: Done relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: changed ...</MSG>
<MSG>1:48 : main.A4: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: changed( 0, 1 ) ...</MSG>
<MSG>1:48 : main.A4: Relaxing dst graph's memlabels for edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:48 : main.A4: Done relaxing dst graph's memlabels for edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed</MSG>
<MSG>1:48 : main.A4: Checking well-formedness assertions on outgoing edges from Lentry%2%allocaI3_L0%1%allocaI1 ...</MSG>
<MSG>1:49 : main.A4: Relaxing invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:49 : main.A4: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 15 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:49 : main.A4: marking unstable at Lentry%2%allocaI4_L0%1%allocaI2 due to failing condition:
wfcond.from_pcLentry%2%allocaI4_L0%1%allocaI2.to_pcE0%0%d_E0%0%d-dst-edgecond-implies-src-edgecond
140320 : 1 { 0x1 } : BOOL                          : true
146415 : not(140320) : BOOL                        : false

ce =
=counter_example_begin z3.ce3264 68b9d0eaa47ad12fcb2052d8a216535
=input.dst.exreg.0.4
1 : 536870913 { 0x20000001 +1.11e193 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1531184143 { 0x5b44040f +1.53137385e55 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1616838656 { 0x605f0000 +1.74218750e65 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 530649088 { 0x1fa11000 +1.25830078e192 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%1%d=/
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%2%d=.L0%1%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%1%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%1%allocaI2
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%1%allocaI2
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%allocaI2
1 : 0 { 0x0 } : BOOL
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.L0%1%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
123473348
=counter_example_end


failcond-expr = not(true):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
</MSG>
<MSG>1:49 : main.A4: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:49 : main.A4: Done relaxing invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed ...</MSG>
<MSG>1:49 : main.A4: Done relaxing memlabels and invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed( 1, 1 ) ...</MSG>
<MSG>1:49 : main.A4: edge composition ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)*((Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)*((Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)*((Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)*(Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d))))) became unstable after invariant inference</MSG>
<MSG>1:49 : Chosen product-TFG main.A4 failed the edge correlation criterion (aka well-formedness checks)... (edge composition: ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)*((Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)*((Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)*((Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)*(Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d))))))
</MSG>
<MSG>1:49 : Chose (for CE propagation) product-TFG main.A5 (d:0, s:0) from a frontier of size 5...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 2, delta 1]
<MSG>1:49 : Finished adding lsprel-assumes for allocation to the product-TFG main.A5...</MSG>
<MSG>1:49 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A5...</MSG>
<MSG>1:49 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:49 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:49 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:49 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting select expressions at toPC Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: Adding node Lentry%1%allocaI3_L0%1%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A5: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A5: returning 0 for =Lentry%2%d=
<MSG>1:49 : main.A5: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: Found 1 alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting select expressions at toPC Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:49 : main.A5: Adding node Lentry%1%allocaI4_L0%1%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A5: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A5: returning 0 for =Lentry%2%d=
<MSG>1:49 : main.A5: Getting alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:49 : main.A5: Found no alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A5: returning 1 for =Lentry%1%d=
<MSG>1:49 : main.A5: Computing loop hoisting select expressions at toPC Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: Adding node Lentry%2%allocaI3_L0%2%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A5: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A5: returning 0 for =Lentry%2%d=
<MSG>1:49 : main.A5: Getting alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: Found 1 alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting select expressions at toPC Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:49 : main.A5: Adding node Lentry%2%allocaI4_L0%2%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A5: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A5: returning 0 for =Lentry%2%d=
<MSG>1:49 : main.A5: Getting alloca-ptrs on edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:49 : main.A5: Found no alloca-ptrs on edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A5: returning 0 for =Lentry%2%d=
<MSG>1:49 : main.A5: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:49 : main.A5: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:49 : main.A5: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>1:49 : main.A5: Getting alloca-ptrs on edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:49 : main.A5: Found no alloca-ptrs on edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:49 : main.A5: Adding edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:49 : main.A5: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:49 : main.A5: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:49 : main.A5: Propagated 0 out of 3 counter-examples across edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1</MSG>
<MSG>1:49 : main.A5: Added the 0 propagated CEs at PC Lentry%1%allocaI3_L0%1%allocaI1 and propagated further.
</MSG>
<MSG>1:49 : main.A5: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:49 : main.A5: Finished executing CG's add edge function...</MSG>
<MSG>1:49 : main.A5: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:49 : main.A5: Adding edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:49 : main.A5: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A5: returning 1 for =Lentry%1%d=
<MSG>1:49 : main.A5: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:49 : main.A5: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:49 : main.A5: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:49 : main.A5: Finished executing CG's add edge function...</MSG>
<MSG>1:49 : main.A5: Computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:49 : main.A5: Done computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:49 : main.A5: Adding edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:49 : main.A5: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:49 : main.A5: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:49 : main.A5: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:49 : main.A5: Finished executing CG's add edge function...</MSG>
<MSG>1:49 : main.A5: Computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: Done computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>1:49 : main.A5: Adding edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:49 : main.A5: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A5: returning 0 for =Lentry%2%d=
<MSG>1:49 : main.A5: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:49 : main.A5: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:49 : main.A5: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:49 : main.A5: Finished executing CG's add edge function...</MSG>
<MSG>1:49 : main.A5: Computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:49 : main.A5: Done computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>1:49 : main.A5: Adding edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:49 : main.A5: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:49 : main.A5: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:49 : main.A5: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:49 : main.A5: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
<MSG>1:50 : main.A5: Finished executing CG's add edge function...</MSG>
<MSG>1:50 : main.A5: Computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:50 : main.A5: Done computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:50 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:50 : Added correlation to the product-TFG main.A5 (d:0, s:0) and created a correlation entry...</MSG>
<MSG>1:50 : Chose (after CE propagation) product-TFG main.A5 (d:0, s:0) from a frontier of size 5...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1 (C L0%0%d => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d (C line 19 => C E0%0%d at mu 2 delta 1, A line 19 => A E0%0%d at mu 1 delta 1)
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            Lentry%1%allocaI3_L0%1%allocaI1 (C line 19, A line 19)
                Lentry%1%allocaI3_L0%1%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%1%allocaI4_L0%1%allocaI2 (C line 19, A line 19)
                Lentry%1%allocaI4_L0%1%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI3_L0%2%allocaI1 (C line 19, A line 19)
                Lentry%2%allocaI3_L0%2%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI4_L0%2%allocaI2 (C line 19, A line 19)
                Lentry%2%allocaI4_L0%2%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:
  	L0%1%spver:
  	  local.=Lentry%1%d= == input.dst.local./*___y___main__x__=Lentry%1%d=/
  	L0%2%spver:
  	  local.=Lentry%2%d= == input.dst.sp=L0%2%spver=sp.L0%2%spver

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 2, delta 1]
<MSG>1:50 : main.A5: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>1:50 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1, Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2, Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1, Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2, Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:50 : main.A5: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:50 : main.A5: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: unchanged</MSG>
<MSG>1:50 : main.A5: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>1:50 : main.A5: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:50 : main.A5: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:50 : main.A5: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht15-prove_trivial5-prove10...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: changed ...</MSG>
<MSG>1:52 : main.A5: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: changed( 0, 1 ) ...</MSG>
<MSG>1:52 : main.A5: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:52 : main.A5: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed</MSG>
<MSG>1:52 : main.A5: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI3_L0%1%allocaI1 ...</MSG>
<MSG>1:52 : main.A5: Relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:52 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:52 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:53 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:53 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:53 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:53 : main.A5: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:53 : main.A5: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:53 : main.A5: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:53 : main.A5: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:53 : main.A5: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:53 : main.A5: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:53 : main.A5: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:57 : main.A5: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht23-prove_trivial11-prove12...</MSG>
<MSG>1:57 : main.A5: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:57 : main.A5: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>1:57 : main.A5: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>1:58 : main.A5: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>1:58 : main.A5: Done relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed ...</MSG>
<MSG>1:58 : main.A5: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed( 1, 1 ) ...</MSG>
<MSG>1:58 : main.A5: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1) ...</MSG>
<MSG>1:58 : main.A5: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed</MSG>
<MSG>1:58 : main.A5: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI4_L0%1%allocaI2 ...</MSG>
<MSG>1:59 : main.A5: Relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1) ...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:59 : main.A5: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>1:59 : main.A5: marking unstable at Lentry%2%allocaI4_L0%2%allocaI2 due to failing condition:
wfcond.from_pcLentry%2%allocaI4_L0%2%allocaI2.to_pcE0%0%d_E0%0%d-dst-edgecond-implies-src-edgecond
140320 : 1 { 0x1 } : BOOL                          : true
146415 : not(140320) : BOOL                        : false

ce =
=counter_example_begin z3.ce4154 1e79713cd92d23b233fccd9553669091
=input.dst.exreg.0.4
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.6.0
1 : 1171803581 { 0x45d84dbd +1.68987238e12 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 1753220140, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2969569551 { 0xb100090f -1325397745 -1.27644e227 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 448318008 { 0x1ab8ca38 +1.44367122e182 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 1583292823 { 0x5e5f2197 +1.74321258e61 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 0 { 0x0 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 434311347 { 0x19e310b3 +1.77394711e180 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 884430226 { 0x34b75592 +1.43229889e234 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.6.0.L0%2%spver
1 : 1171801400 { 0x45d84538 +1.68961238e12 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 434311347 { 0x19e310b3 +1.77394711e180 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 884430226 { 0x34b75592 +1.43229889e234 } : BV:32
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2256535552 { 0x86800000 -2038431744 -1.0e142 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 964694016 { 0x39801000 +1.48828e244 } : BV:32
=input.memlabel-mem--esp_end
1 : 3221229567 { 0xc0000fff -1073737729 -1.48816e1 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%1%d=/
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.dst.mem.L0%1%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%1%allocaI1
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%1%allocaI2
1 : 1583292823 { 0x5e5f2197 +1.74321258e61 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%1%allocaI2
1 : 448318008 { 0x1ab8ca38 +1.44367122e182 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI2.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI2.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
2603794189
=counter_example_end


failcond-expr = not(true):
1 : 1 { 0x1 } : BOOL
2 : not(1) : BOOL
</MSG>
<MSG>1:59 : main.A5: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>1:59 : main.A5: Done relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed ...</MSG>
<MSG>1:59 : main.A5: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed( 1, 1 ) ...</MSG>
<MSG>1:59 : main.A5: edge composition ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)*((Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)*((Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)*((Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)*(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d))))) became unstable after invariant inference</MSG>
<MSG>1:59 : Chosen product-TFG main.A5 failed the edge correlation criterion (aka well-formedness checks)... (edge composition: ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)*((Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)*((Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)*((Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)*(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d))))))
</MSG>
<MSG>1:59 : Chose (for CE propagation) product-TFG main.A6 (d:0, s:0) from a frontier of size 4...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 2, delta 1]
<MSG>1:59 : Finished adding lsprel-assumes for allocation to the product-TFG main.A6...</MSG>
<MSG>1:59 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A6...</MSG>
<MSG>1:59 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:59 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:59 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:59 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:59 : main.A6: marking unstable at L0%0%d_L0%0%d due to failing condition:
correlation-failure--failed-to-create-alloc-dealloc-nodes-and-edges
failcond-expr = true:
1 : 1 { 0x1 } : BOOL
</MSG>
<MSG>1:59 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:59 : Failed correlation of src pathset L0%0%d=>E0%0%d[mu 2, delta 1] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d: failcond = correlation-failure--failed-to-create-alloc-dealloc-nodes-and-edges
</MSG>
<MSG>1:59 : Discovered that the correlation was useless for the product-TFG main.A6 (d:0, s:0)...</MSG>
<MSG>1:59 : Chose (for CE propagation) product-TFG main.A7 (d:0, s:0) from a frontier of size 3...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 3, delta 1]
<MSG>1:59 : Finished adding lsprel-assumes for allocation to the product-TFG main.A7...</MSG>
<MSG>1:59 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A7...</MSG>
<MSG>1:59 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>1:59 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:59 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>1:59 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting select expressions at toPC Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: Adding node Lentry%1%allocaI3_L0%1%allocaI3 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%2%d=
<MSG>1:59 : main.A7: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: Found 1 alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting select expressions at toPC Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:59 : main.A7: Adding node Lentry%1%allocaI4_L0%1%allocaI4 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%2%d=
<MSG>1:59 : main.A7: Getting alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:59 : main.A7: Found no alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%1%d=
<MSG>1:59 : main.A7: Computing loop hoisting select expressions at toPC Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: Adding node Lentry%2%allocaI3_L0%1%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%2%d=
<MSG>1:59 : main.A7: Getting alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: Found 1 alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting select expressions at toPC Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:59 : main.A7: Adding node Lentry%2%allocaI4_L0%1%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%2%d=
<MSG>1:59 : main.A7: Getting alloca-ptrs on edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:59 : main.A7: Found no alloca-ptrs on edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%2%d=
<MSG>1:59 : main.A7: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:59 : main.A7: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>1:59 : main.A7: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>1:59 : main.A7: Getting alloca-ptrs on edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:59 : main.A7: Found no alloca-ptrs on edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:59 : main.A7: Adding edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:59 : main.A7: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:59 : main.A7: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:59 : main.A7: Propagated 0 out of 3 counter-examples across edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3</MSG>
<MSG>1:59 : main.A7: Added the 0 propagated CEs at PC Lentry%1%allocaI3_L0%1%allocaI3 and propagated further.
</MSG>
<MSG>1:59 : main.A7: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:59 : main.A7: Finished executing CG's add edge function...</MSG>
<MSG>1:59 : main.A7: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3...</MSG>
<MSG>1:59 : main.A7: Adding edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:59 : main.A7: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%1%d=
<MSG>1:59 : main.A7: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:59 : main.A7: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:59 : main.A7: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:59 : main.A7: Finished executing CG's add edge function...</MSG>
<MSG>1:59 : main.A7: Computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:59 : main.A7: Done computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4...</MSG>
<MSG>1:59 : main.A7: Adding edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>1:59 : main.A7: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:59 : main.A7: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:59 : main.A7: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:59 : main.A7: Finished executing CG's add edge function...</MSG>
<MSG>1:59 : main.A7: Computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: Done computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1...</MSG>
<MSG>1:59 : main.A7: Adding edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:59 : main.A7: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A7: returning 1 for =Lentry%2%d=
<MSG>1:59 : main.A7: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>1:59 : main.A7: Propagating counter-examples across the newly added edge...</MSG>
<MSG>1:59 : main.A7: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>1:59 : main.A7: Finished executing CG's add edge function...</MSG>
<MSG>1:59 : main.A7: Computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:59 : main.A7: Done computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2...</MSG>
<MSG>1:59 : main.A7: Adding edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>1:59 : main.A7: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>2:00 : main.A7: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>2:00 : main.A7: Propagating counter-examples across the newly added edge...</MSG>
<MSG>2:00 : main.A7: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lfor.body%1%d=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.body%1%d,-1}
operator() 10396: new_te = ((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d)))
operator() 10397: r.m_ec.at(pu) = (Lfor.cond%1%bbentry=>Lfor.body%1%d)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.body%1%d,-1}
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
<MSG>2:00 : main.A7: Finished executing CG's add edge function...</MSG>
<MSG>2:00 : main.A7: Computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:00 : main.A7: Done computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:00 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:00 : Added correlation to the product-TFG main.A7 (d:0, s:0) and created a correlation entry...</MSG>
<MSG>2:00 : Chose (after CE propagation) product-TFG main.A7 (d:0, s:0) from a frontier of size 3...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3 (C L0%0%d => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d (C line 19 => C E0%0%d at mu 3 delta 1, A line 19 => A E0%0%d at mu 1 delta 1)
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            Lentry%1%allocaI3_L0%1%allocaI3 (C line 19, A line 19)
                Lentry%1%allocaI3_L0%1%allocaI3 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%1%allocaI4_L0%1%allocaI4 (C line 19, A line 19)
                Lentry%1%allocaI4_L0%1%allocaI4 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI3_L0%1%allocaI1 (C line 19, A line 19)
                Lentry%2%allocaI3_L0%1%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 15 bv exprs)
            Lentry%2%allocaI4_L0%1%allocaI2 (C line 19, A line 19)
                Lentry%2%allocaI4_L0%1%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 15 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:
  	L0%1%spver:
  	  local.=Lentry%1%d= == input.dst.local./*___y___main__x__=Lentry%1%d=/
  	  local.=Lentry%2%d= == input.dst.local./*___y___main__x__=Lentry%2%d=/

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 3, delta 1]
<MSG>2:00 : main.A7: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>2:00 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3, Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4, Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1, Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2, Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:00 : main.A7: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3) ...</MSG>
<MSG>2:00 : main.A7: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: unchanged</MSG>
<MSG>2:00 : main.A7: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>2:00 : main.A7: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3) ...</MSG>
<MSG>2:00 : main.A7: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:00 : main.A7: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:00 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:00 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:00 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:01 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:01 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:01 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:01 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:01 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:01 : main.A7: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:01 : main.A7: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:01 : main.A7: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:01 : main.A7: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:01 : main.A7: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:01 : main.A7: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:01 : main.A7: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:03 : main.A7: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 1 proof-stats=dht12-prove_trivial4-prove8...</MSG>
<MSG>2:03 : main.A7: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:03 : main.A7: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>2:03 : main.A7: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:03 : main.A7: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:03 : main.A7: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:03 : main.A7: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>2:03 : main.A7: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:03 : main.A7: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:03 : main.A7: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:03 : main.A7: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>2:03 : main.A7: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: changed ...</MSG>
<MSG>2:04 : main.A7: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3), result: changed( 0, 1 ) ...</MSG>
<MSG>2:04 : main.A7: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4) ...</MSG>
<MSG>2:04 : main.A7: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed</MSG>
<MSG>2:04 : main.A7: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI3_L0%1%allocaI3 ...</MSG>
<MSG>2:04 : main.A7: Relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4) ...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:04 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:04 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:05 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:05 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:05 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:05 : main.A7: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:05 : main.A7: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:05 : main.A7: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:05 : main.A7: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:05 : main.A7: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:05 : main.A7: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:05 : main.A7: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:07 : main.A7: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 1 proof-stats=dht22-prove_trivial11-prove11...</MSG>
<MSG>2:07 : main.A7: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:08 : main.A7: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>2:08 : main.A7: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:08 : main.A7: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:08 : main.A7: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:08 : main.A7: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:08 : main.A7: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:08 : main.A7: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:08 : main.A7: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:08 : main.A7: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 1 proof-stats=dht3-prove_trivial2-prove1...</MSG>
<MSG>2:08 : main.A7: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed ...</MSG>
<MSG>2:09 : main.A7: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4), result: changed( 1, 1 ) ...</MSG>
<MSG>2:09 : main.A7: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>2:09 : main.A7: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: unchanged</MSG>
<MSG>2:09 : main.A7: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI4_L0%1%allocaI4 ...</MSG>
<MSG>2:09 : main.A7: Relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:09 : main.A7: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:09 : main.A7: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 15 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:11 : main.A7: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht20-prove_trivial11-prove9...</MSG>
<MSG>2:11 : main.A7: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 3 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:11 : main.A7: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht3-prove_trivial3-prove0...</MSG>
<MSG>2:11 : main.A7: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:11 : main.A7: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:11 : main.A7: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:11 : main.A7: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:11 : main.A7: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:11 : main.A7: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:11 : main.A7: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:11 : main.A7: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:11 : main.A7: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:12 : main.A7: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:12 : main.A7: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:12 : main.A7: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>2:12 : main.A7: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: changed ...</MSG>
<MSG>2:12 : main.A7: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1), result: changed( 0, 1 ) ...</MSG>
<MSG>2:12 : main.A7: Relaxing dst graph's memlabels for edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>2:12 : main.A7: Done relaxing dst graph's memlabels for edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed</MSG>
<MSG>2:12 : main.A7: Checking well-formedness assertions on outgoing edges from Lentry%2%allocaI3_L0%1%allocaI1 ...</MSG>
<MSG>2:12 : main.A7: Relaxing invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>2:12 : main.A7: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:12 : main.A7: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:12 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:13 : main.A7: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 15 exprs and 0 CEs across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:13 : main.A7: marking unstable at Lentry%2%allocaI4_L0%1%allocaI2 due to failing condition:
exit.boolbv.llvm-%ret-reg
141146 : input.src.llvm-%conv.E0%0%d : BV:32       : 0
140298 : 1 { 0x1 +1.11e129 } : BV:32               : 1
166888 : eq(141146, 140298) : BOOL                 : false

ce =
=counter_example_begin z3.ce5304 9d1aa158229ba6861fb7cc985dc6bdb7
=input.dst.exreg.0.4
1 : 536870913 { 0x20000001 +1.11e193 } : BV:32
=input.dst.exreg.6.0
1 : 1806304901 { 0x6baa0685 +1.32832396e88 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.llvm-%hidden-reg
1 : 384582294 { 0x16ec4296 +1.84578204e174 } : BV:32
=input.src.llvm-callee-save.0
1 : 2076951546 { 0x7bcbc3fa +1.59191823e120 } : BV:32
=input.src.llvm-callee-save.1
1 : 420336642 { 0x190dd402 +1.10803246e179 } : BV:32
=input.src.llvm-callee-save.2
1 : 539401226 { 0x20269c0a +1.30163693e193 } : BV:32
=input.src.llvm-callee-save.3
1 : 899671831 { 0x359fe717 +1.24923980e236 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 1531184143 { 0x5b44040f +1.53137385e55 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.llvm-mem.Lfor.cond%1%bbentry
1 : ([ 0; 0 ] -> 2, [ 1; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644992 ] -> 0, [ 530644993; 530644993 ] -> 0, [ 530644994; 530644994 ] -> 0, [ 530644995; 530644995 ] -> 0, [ 530644996; 530644996 ] -> 1, [ 530644997; 530644997 ] -> 0, [ 530644998; 530644998 ] -> 0, [ 530644999; 530644999 ] -> 0, [ 530645000; 1531184131 ] -> 0, [ 1531184132; 1531184132 ] -> 1, [ 1531184133; 1531184139 ] -> 0, [ 1531184140; 1531184140 ] -> 1, [ 1531184141; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%cmp.Lfor.body%1%d
1 : 1 { 0x1 } : BOOL
=input.src.llvm-%2.Lfor.end%1%d
1 : 2 { 0x2 +1.23e129 } : BV:32
=input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 2 { 0x2 +1.23e129 } : BV:32
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : 530644996 { 0x1fa10004 +1.25781297e192 } : BV:32
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%cmp.Lfor.end%1%d
1 : 0 { 0x0 } : BOOL
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.llvm-%0.Lfor.cond%1%bbentry
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.llvm-%9.E0%0%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-%cmp2.E0%0%d
1 : 0 { 0x0 } : BOOL
=input.src.llvm-%1.Lfor.cond%1%bbentry
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-%f1.E0%0%d
1 : 530644996 { 0x1fa10004 +1.25781297e192 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : 1531184136 { 0x5b440408 +1.53137302e55 } : BV:32
=input.src.llvm-%hidden-reg.E0%0%d
1 : 1637035635 { 0x61932e73 +1.14985501e68 } : BV:32
=input.src.llvm-%ret-reg.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-%3.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-indir_tgt.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%2.Lfor.body%1%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-%4.Lfor.cond%1%bbentry
1 : 1531184136 { 0x5b440408 +1.53137302e55 } : BV:32
=input.src.llvm-%5.Lfor.cond%1%bbentry
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%6.Lfor.cond%1%bbentry
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.llvm-%7.Lfor.cond%1%bbentry
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.llvm-%8.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : 1531184136 { 0x5b440408 +1.53137302e55 } : BV:32
=input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.src.llvm-%conv.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%inc.Lfor.cond%1%bbentry
1 : 2 { 0x2 +1.23e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1535639548 { 0x5b87fffc +1.6249952e56 } : BV:32
=input.dst.exreg.0.4.L3%1%spver
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L4%1%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : 378151593 { 0x168a22a9 +1.7918274e174 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 378151593 { 0x168a22a9 +1.7918274e174 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 966701978 { 0x399eb39a +1.23985600e244 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 0 { 0x0 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 0 { 0x0 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : 966701978 { 0x399eb39a +1.23985600e244 } : BV:32
=input.dst.exreg.6.0.L0%2%spver
1 : 1806304784 { 0x6baa0610 +1.32831001e88 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L4%1%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.0.4.E0%0%d
1 : 1535639568 { 0x5b880010 +1.6250190e56 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1535639548 { 0x5b87fffc +1.6249952e56 } : BV:32
=input.dst.exreg.0.4.L1%1%d
1 : 1535639548 { 0x5b87fffc +1.6249952e56 } : BV:32
=input.dst.mem.L1%1%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L1%1%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L1%1%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : 378151593 { 0x168a22a9 +1.7918274e174 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : 966701978 { 0x399eb39a +1.23985600e244 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L1%1%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.0.0.L3%1%spver
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.10.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.mem.L3%1%spver
1 : ([ 0; 0 ] -> 2, [ 1; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.sp=L3%1%spver=sp.L3%1%spver
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.exreg.0.4.L4%1%d
1 : 1535639564 { 0x5b88000c +1.6250143e56 } : BV:32
=input.dst.mem.L4%1%d
1 : ([ 0; 0 ] -> 2, [ 1; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L4%1%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.12.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.6.0.L3%1%spver
1 : 1806304784 { 0x6baa0610 +1.32831001e88 } : BV:32
=input.dst.exreg.7.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.llvm-indir_tgt.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.Lfor.cond%1%bbentry
1 : 2 { 0x2 +1.23e129 } : COUNT
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 1616838656 { 0x605f0000 +1.74218750e65 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 530649088 { 0x1fa11000 +1.25830078e192 } : BV:32
=input.memlabel-mem--esp_end
1 : 2147487743 { 0x80000fff -2147479553 -1.48816e129 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%1%d=/
1 : 1531184128 { 0x5b440400 +1.53137207e55 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%2%d=/
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L0%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.mem.L0%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%1%allocaI4
1 : 378151593 { 0x168a22a9 +1.7918274e174 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%1%allocaI4
1 : 966701978 { 0x399eb39a +1.23985600e244 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%1%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%1%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 530644991 ] -> 0, [ 530644992; 530644999 ] -> 1, [ 530645000; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 530644991 ] -> memlabel-mem--heap, [ 530644992; 530644999 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 530645000; 530649087 ] -> memlabel-mem--heap, [ 530649088; 1531184127 ] -> memlabel-mem--esp, [ 1531184128; 1531184143 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 1531184144; 2147487743 ] -> memlabel-mem--esp, [ 2147487744; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%1%allocaI2
1 : 530644999 { 0x1fa10007 +1.25781333e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%1%allocaI2
1 : 530644992 { 0x1fa10000 +1.25781250e192 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%1%allocaI2
1 : 0 { 0x0 } : BOOL
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI4.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.L0%1%allocaI4.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
1706365723
=counter_example_end


failcond-expr = eq(input.src.llvm-%conv.E0%0%d, 1):
1 : input.src.llvm-%conv.E0%0%d : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : eq(1, 2) : BOOL
</MSG>
<MSG>2:13 : main.A7: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:13 : main.A7: Done relaxing invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed ...</MSG>
<MSG>2:13 : main.A7: Done relaxing memlabels and invariants across the edge composition (Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2), result: changed( 1, 1 ) ...</MSG>
<MSG>2:13 : main.A7: edge composition ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)*((Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)*((Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)*((Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)*(Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d))))) became unstable after invariant inference</MSG>
<MSG>2:13 : Chosen product-TFG main.A7 failed the edge correlation criterion (aka well-formedness checks)... (edge composition: ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3)*((Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4)*((Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1)*((Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2)*(Lentry%2%allocaI4_L0%1%allocaI2=>E0%0%d_E0%0%d))))))
</MSG>
<MSG>2:13 : Chose (for CE propagation) product-TFG main.A8 (d:0, s:0) from a frontier of size 2...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 3, delta 1]
<MSG>2:13 : Finished adding lsprel-assumes for allocation to the product-TFG main.A8...</MSG>
<MSG>2:13 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A8...</MSG>
<MSG>2:13 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>2:13 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:13 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>2:13 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting select expressions at toPC Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: Adding node Lentry%1%allocaI3_L0%1%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A8: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A8: returning 0 for =Lentry%2%d=
<MSG>2:13 : main.A8: Getting alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: Found 1 alloca-ptrs on edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting select expressions at toPC Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting non-linear expressions at toPC Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>2:13 : main.A8: Adding node Lentry%1%allocaI4_L0%1%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A8: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A8: returning 0 for =Lentry%2%d=
<MSG>2:13 : main.A8: Getting alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>2:13 : main.A8: Found no alloca-ptrs on edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A8: returning 1 for =Lentry%1%d=
<MSG>2:13 : main.A8: Computing loop hoisting select expressions at toPC Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: Adding node Lentry%2%allocaI3_L0%2%allocaI1 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A8: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A8: returning 0 for =Lentry%2%d=
<MSG>2:13 : main.A8: Getting alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: Found 1 alloca-ptrs on edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting select expressions at toPC Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting non-linear expressions at toPC Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>2:13 : main.A8: Adding node Lentry%2%allocaI4_L0%2%allocaI2 to the product-TFG...</MSG>
local_is_heap_allocated 3811: main.A8: returning 1 for =Lentry%1%d=
local_is_heap_allocated 3811: main.A8: returning 0 for =Lentry%2%d=
<MSG>2:13 : main.A8: Getting alloca-ptrs on edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>2:13 : main.A8: Found no alloca-ptrs on edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
local_is_heap_allocated 3811: main.A8: returning 0 for =Lentry%2%d=
<MSG>2:13 : main.A8: Computing loop hoisting select expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>2:13 : main.A8: Computing loop hoisting non-linear expressions at toPC E0%0%d_E0%0%d...</MSG>
<MSG>2:13 : main.A8: Adding node E0%0%d_E0%0%d to the product-TFG...</MSG>
<MSG>2:13 : main.A8: Getting alloca-ptrs on edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:13 : main.A8: Found no alloca-ptrs on edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:13 : main.A8: Adding edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>2:13 : main.A8: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>2:13 : main.A8: Propagating counter-examples across the newly added edge...</MSG>
<MSG>2:13 : main.A8: Propagated 0 out of 3 counter-examples across edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1</MSG>
<MSG>2:13 : main.A8: Added the 0 propagated CEs at PC Lentry%1%allocaI3_L0%1%allocaI1 and propagated further.
</MSG>
<MSG>2:13 : main.A8: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>2:13 : main.A8: Finished executing CG's add edge function...</MSG>
<MSG>2:13 : main.A8: Computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: Done computing CG regions after the addition of the edge L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1...</MSG>
<MSG>2:13 : main.A8: Adding edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>2:13 : main.A8: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A8: returning 1 for =Lentry%1%d=
<MSG>2:13 : main.A8: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>2:13 : main.A8: Propagating counter-examples across the newly added edge...</MSG>
<MSG>2:13 : main.A8: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>2:13 : main.A8: Finished executing CG's add edge function...</MSG>
<MSG>2:13 : main.A8: Computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>2:13 : main.A8: Done computing CG regions after the addition of the edge Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2...</MSG>
<MSG>2:13 : main.A8: Adding edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>2:13 : main.A8: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>2:13 : main.A8: Propagating counter-examples across the newly added edge...</MSG>
<MSG>2:13 : main.A8: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>2:13 : main.A8: Finished executing CG's add edge function...</MSG>
<MSG>2:13 : main.A8: Computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: Done computing CG regions after the addition of the edge Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1...</MSG>
<MSG>2:13 : main.A8: Adding edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>2:13 : main.A8: CG's add edge function (corr_graph::add_edge) called...</MSG>
local_is_heap_allocated 3811: main.A8: returning 0 for =Lentry%2%d=
<MSG>2:13 : main.A8: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>2:13 : main.A8: Propagating counter-examples across the newly added edge...</MSG>
<MSG>2:13 : main.A8: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
<MSG>2:13 : main.A8: Finished executing CG's add edge function...</MSG>
<MSG>2:13 : main.A8: Computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>2:13 : main.A8: Done computing CG regions after the addition of the edge Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2...</MSG>
<MSG>2:13 : main.A8: Adding edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:13 : main.A8: CG's add edge function (corr_graph::add_edge) called...</MSG>
<MSG>2:14 : main.A8: graph with counterexample's add edge function (graph_with_ce::add_edge) called...</MSG>
<MSG>2:14 : main.A8: Propagating counter-examples across the newly added edge...</MSG>
<MSG>2:14 : main.A8: finished executing graph with counterexample's add edge function (graph_with_ce::add_edge)...</MSG>
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lfor.body%1%d=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lfor.body%1%d=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.body%1%d,-1}
operator() 10396: new_te = ((Lfor.cond%1%bbentry=>Lfor.body%1%d)*((Lfor.body%1%d=>Lfor.cond%1%bbentry)*(Lfor.cond%1%bbentry=>Lfor.body%1%d)))
operator() 10397: r.m_ec.at(pu) = (Lfor.cond%1%bbentry=>Lfor.body%1%d)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.body%1%d,-1}
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
operator() 10394: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10395: pu = {Lfor.cond%1%bbentry,-1}
operator() 10396: new_te = ((Lentry%2%allocaI4=>Lfor.cond%1%bbentry)*((Lfor.cond%1%bbentry=>Lfor.body%1%d)*(Lfor.body%1%d=>Lfor.cond%1%bbentry)))
operator() 10397: r.m_ec.at(pu) = (Lentry%2%allocaI4=>Lfor.cond%1%bbentry)
operator() 10406: WARNING: the same pc-with-unroll is appearing twice in the graph-ec
operator() 10407: pu = {Lfor.cond%1%bbentry,-1}
<MSG>2:14 : main.A8: Finished executing CG's add edge function...</MSG>
<MSG>2:14 : main.A8: Computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:14 : main.A8: Done computing CG regions after the addition of the edge Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:14 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:14 : Added correlation to the product-TFG main.A8 (d:0, s:0) and created a correlation entry...</MSG>
<MSG>2:14 : Chose (after CE propagation) product-TFG main.A8 (d:0, s:0) from a frontier of size 2...</MSG>
<cg>
  Edges[5]: L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1 (C L0%0%d => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2 (C line 19 => C line 19 at mu 1 delta 1, A line 19 => A line 19 at mu 1 delta 1)
            Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d (C line 19 => C E0%0%d at mu 3 delta 1, A line 19 => A E0%0%d at mu 1 delta 1)
  Nodes[6]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
            Lentry%1%allocaI3_L0%1%allocaI1 (C line 19, A line 19)
                Lentry%1%allocaI3_L0%1%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%1%allocaI4_L0%1%allocaI2 (C line 19, A line 19)
                Lentry%1%allocaI4_L0%1%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI3_L0%2%allocaI1 (C line 19, A line 19)
                Lentry%2%allocaI3_L0%2%allocaI1 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            Lentry%2%allocaI4_L0%2%allocaI2 (C line 19, A line 19)
                Lentry%2%allocaI4_L0%2%allocaI2 [inductive-invariants] contains 0 counterexamples (for correlating 14 bv exprs)
            E0%0%d_E0%0%d (C E0%0%d, A E0%0%d)
                E0%0%d_E0%0%d [inductive-invariants] contains 0 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:
  	L0%1%spver:
  	  local.=Lentry%1%d= == input.dst.local./*___y___main__x__=Lentry%1%d=/
  	L0%2%spver:
  	  local.=Lentry%2%d= == input.dst.sp=L0%2%spver=sp.L0%2%spver

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 3, delta 1]
<MSG>2:14 : main.A8: Updating invariants over the newly added edges in edge composition L0%0%d_L0%0%d=>E0%0%d_E0%0%d and other downstream edges that change due to it...</MSG>
<MSG>2:14 : Constructed infer_invariants_dfa with initial worklist L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1, Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2, Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1, Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2, Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d...</MSG>
<MSG>2:14 : main.A8: Relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>2:14 : main.A8: Done relaxing dst graph's memlabels for edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: unchanged</MSG>
<MSG>2:14 : main.A8: Checking well-formedness assertions on outgoing edges from L0%0%d_L0%0%d ...</MSG>
<MSG>2:14 : main.A8: Relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1) ...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:14 : main.A8: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:14 : main.A8: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht15-prove_trivial7-prove8...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 2 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht4-prove_trivial4-prove0...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:16 : main.A8: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:16 : main.A8: Done relaxing invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: changed ...</MSG>
<MSG>2:16 : main.A8: Done relaxing memlabels and invariants across the edge composition (L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1), result: changed( 0, 1 ) ...</MSG>
<MSG>2:16 : main.A8: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>2:16 : main.A8: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed</MSG>
<MSG>2:16 : main.A8: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI3_L0%1%allocaI1 ...</MSG>
<MSG>2:17 : main.A8: Relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2) ...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:17 : main.A8: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:17 : main.A8: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:20 : main.A8: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht22-prove_trivial10-prove12...</MSG>
<MSG>2:20 : main.A8: Relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:21 : main.A8: Done relaxing invariant eqclass expr-group-region_agrees_with_memlabel (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht3-prove_trivial0-prove3...</MSG>
<MSG>2:21 : main.A8: Relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:21 : main.A8: Done relaxing invariant eqclass local-sizes-are-equal (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:21 : main.A8: Relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:21 : main.A8: Done relaxing invariant eqclass nonarg-locals-iscontiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:21 : main.A8: Relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:21 : main.A8: Done relaxing invariant eqclass nonarg-locals-isprobably-contiguous (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:21 : main.A8: Relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) with 4 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:21 : main.A8: Done relaxing invariant eqclass sp-ml-lb-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:21 : main.A8: Relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass ml-lb-ub-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 1 proof-stats=dht2-prove_trivial0-prove2...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass ml-lb-ub-ineq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass ml-lb-addr-eq (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) with 1 exprs and 1 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass locals-ub-upper-bound (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht0-prove_trivial0-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass local-eq-lsprel-guess (type HOUDINI) across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2). changed = 0 proof-stats=dht2-prove_trivial1-prove1...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed ...</MSG>
<MSG>2:22 : main.A8: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2), result: changed( 1, 1 ) ...</MSG>
<MSG>2:22 : main.A8: Relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1) ...</MSG>
<MSG>2:22 : main.A8: Done relaxing dst graph's memlabels for edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed</MSG>
<MSG>2:22 : main.A8: Checking well-formedness assertions on outgoing edges from Lentry%1%allocaI4_L0%1%allocaI2 ...</MSG>
<MSG>2:22 : main.A8: Relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1) ...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass mem-allocs-equality (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--rodata (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.2.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--symbol.3.0 (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--heap (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/ (type ARR_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass abstract-memlabel-asserts (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial1-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) with 2 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass memlabel-is-absent (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht2-prove_trivial2-prove0...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) with 1 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: Done relaxing invariant eqclass sp-below-isp (type HOUDINI_EXPECTS_STABILITY) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 0 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:22 : main.A8: Relaxing invariant eqclass expr-group-bvs (type BV_EQ) with 14 exprs and 0 CEs across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)...</MSG>
<MSG>2:22 : main.A8: marking unstable at Lentry%2%allocaI4_L0%2%allocaI2 due to failing condition:
exit.boolbv.llvm-%ret-reg
141146 : input.src.llvm-%conv.E0%0%d : BV:32       : 0
140298 : 1 { 0x1 +1.11e129 } : BV:32               : 1
166888 : eq(141146, 140298) : BOOL                 : false

ce =
=counter_example_begin z3.ce6195 24b654c04837854c73507f1f915852
=input.dst.exreg.0.4
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.6.0
1 : 1664696120 { 0x63393f38 +1.44724178e71 } : BV:32
=symbol.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=symbol.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=symbol.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=dst_symbol_addr.1
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=dst_symbol_addr.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=dst_symbol_addr.3
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=callee_save_const.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.1
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.2
1 : 0 { 0x0 +1.0e129 } : BV:32
=callee_save_const.3
1 : 0 { 0x0 +1.0e129 } : BV:32
=retaddr_const
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.sp=L0%0%d=sp
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.src.local./*___y___main__x__=Lentry%1%d=/
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local./*___y___main__x__=Lentry%2%d=/
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.local_alloc_count.=L0%0%d=
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=alloca_ptr
1 : (() -> 1753220140, ) : FUNCTION[COUNT,ARRAY[BV:32 -> MEMLABEL],MEMLABEL,BV:32 -> BV:32]
=input.src.local./*___y___main__x__=Lentry%1%d=/.Lentry%1%allocaI3
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%1%allocaI3
1 : 1 { 0x1 } : BOOL
=input.src.llvm-%hidden-reg
1 : 1551278762 { 0x5c76a2aa +1.92683911e57 } : BV:32
=input.src.llvm-callee-save.0
1 : 977003400 { 0x3a3be388 +1.46788120e245 } : BV:32
=input.src.llvm-callee-save.1
1 : 817765883 { 0x30be1dfb +1.48528993e226 } : BV:32
=input.src.llvm-callee-save.2
1 : 1040043916 { 0x3dfdcf8c +1.98289632e252 } : BV:32
=input.src.llvm-callee-save.3
1 : 1023619453 { 0x3d03317d +1.2494776e251 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.Lentry%1%allocaI4
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.local_size.=Lentry%2%d=.Lentry%2%allocaI3
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-mem.alloc.Lentry%1%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.local_alloc_count.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.local_alloc_count.=Lentry%2%d=.Lentry%2%allocaI3
1 : 0 { 0x0 +1.0e129 } : COUNT
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.Lentry%2%allocaI4
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.Lentry%2%allocaI4
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.Lentry%1%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local_alloc_count.Lentry%1%allocaI3
1 : 4294967295 { 0xffffffff -1 -1.99999988e128 } : COUNT
=input.src.local_size.=Lentry%1%d=.Lentry%1%allocaI3
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.Lentry%2%allocaI4
1 : 0 { 0x0 } : BOOL
=input.src.local./*___y___main__x__=Lentry%2%d=/.Lentry%2%allocaI3
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-mem.Lentry%1%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.Lentry%1%allocaI4
1 : 2969569551 { 0xb100090f -1325397745 -1.27644e227 } : BV:32
=input.src.llvm-mem.Lentry%2%allocaI4
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-mem.alloc.Lentry%2%allocaI4
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.src.llvm-%d.Lentry%2%allocaI3
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-mem.Lfor.cond%1%bbentry
1 : ([ 0; 0 ] -> 2, [ 1; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 1753220143 ] -> 0, [ 1753220144; 1753220144 ] -> 1, [ 1753220145; 2969569539 ] -> 0, [ 2969569540; 2969569540 ] -> 1, [ 2969569541; 2969569547 ] -> 0, [ 2969569548; 2969569548 ] -> 1, [ 2969569549; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.1.total_offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%cmp.Lfor.body%1%d
1 : 1 { 0x1 } : BOOL
=input.src.llvm-%2.Lfor.end%1%d
1 : 2 { 0x2 +1.23e129 } : BV:32
=input.src.llvm-ghostvar.itervar.1.Lfor.cond%1%bbentry
1 : 2 { 0x2 +1.23e129 } : BV:32
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.2.total_offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.gepoffset.3.total_offset.E0%0%d
1 : 1753220144 { 0x68800430 +1.12779e82 } : BV:32
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.1.offset.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%cmp.Lfor.end%1%d
1 : 0 { 0x0 } : BOOL
=input.src.llvm-%8a2a12d0bace9f2387accfabd6577ba.intermediate.gepoffset.2.offset.E0%0%d
1 : 4 { 0x4 +1.47e129 } : BV:32
=input.src.llvm-%0.Lfor.cond%1%bbentry
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.llvm-%9.E0%0%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-%cmp2.E0%0%d
1 : 0 { 0x0 } : BOOL
=input.src.llvm-%1.Lfor.cond%1%bbentry
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-%59b67c677bd055b65f7118456c7bcf.constexpr.Lfor.cond%1%bbentry
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-%f1.E0%0%d
1 : 1753220144 { 0x68800430 +1.12779e82 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : 2969569544 { 0xb1000908 -1325397752 -1.27561e227 } : BV:32
=input.src.llvm-%hidden-reg.E0%0%d
1 : 1443734056 { 0x560da228 +1.10651111e45 } : BV:32
=input.src.llvm-%ret-reg.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%17366ad1b740ab747a6b7cd4a8505fa5.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.src.llvm-%3.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-indir_tgt.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%2.Lfor.body%1%d
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-%4.Lfor.cond%1%bbentry
1 : 2969569544 { 0xb1000908 -1325397752 -1.27561e227 } : BV:32
=input.src.llvm-%5.Lfor.cond%1%bbentry
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.2.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%6.Lfor.cond%1%bbentry
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.3.total_offset.Lfor.cond%1%bbentry
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.llvm-%7.Lfor.cond%1%bbentry
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.llvm-%8.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.1.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%arrayidx.Lfor.cond%1%bbentry
1 : 2969569544 { 0xb1000908 -1325397752 -1.27561e227 } : BV:32
=input.src.llvm-%arrayidx1.Lfor.cond%1%bbentry
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.src.llvm-%conv.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.intermediate.gepoffset.2.offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%fa8d47ba2fecb6c14fd4e0b618fe47c6.gepoffset.1.total_offset.Lfor.cond%1%bbentry
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.src.llvm-%inc.Lfor.cond%1%bbentry
1 : 2 { 0x2 +1.23e129 } : BV:32
=input.dst.exreg.0.3.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.5.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.6.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.7.L0%1%spver
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.exreg.0.4.L0%2%spver
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.exreg.0.4.L3%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.local_size.=Lentry%1%d=.L4%1%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L4%1%d
1 : 1677800820 { 0x64013574 +1.944375e73 } : BV:32
=input.dst.sp=L0%1%spver=sp.L0%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.4.L0%2%d
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.mem.L0%2%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%2%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%2%d
1 : 1677800820 { 0x64013574 +1.944375e73 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%2%d
1 : 356610215 { 0x154170a7 +1.51125037e171 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L0%2%d
1 : 0 { 0x0 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%d
1 : 238760741 { 0xe3b3325 +1.46249830e157 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%d
1 : 749220823 { 0x2ca833d7 +1.31408202e218 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L4%1%d
1 : 356610215 { 0x154170a7 +1.51125037e171 } : BV:32
=input.dst.exreg.6.0.L0%2%spver
1 : 1664694072 { 0x63393738 +1.44699764e71 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L4%1%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L4%1%d
1 : 1 { 0x1 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L4%1%d
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L4%1%d
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L4%1%d
1 : 1 { 0x1 } : BOOL
=input.dst.exreg.0.4.E0%0%d
1 : 1753220160 { 0x68800440 +1.12969e82 } : BV:32
=rodata.size
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.exreg.10.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.sp=L0%2%spver=sp.L0%2%spver
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.exreg.0.4.L1%1%d
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.mem.L1%1%d
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L1%1%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L1%1%d
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L1%1%d
1 : 1677800820 { 0x64013574 +1.944375e73 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L1%1%d
1 : 356610215 { 0x154170a7 +1.51125037e171 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L1%1%d
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_is-absent.L1%1%d
1 : 0 { 0x0 } : BOOL
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L1%1%d
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L1%1%d
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L1%1%d
1 : 0 { 0x0 } : BOOL
=input.dst.exreg.0.0.L3%1%spver
1 : 1 { 0x1 +1.11e129 } : BV:32
=input.dst.exreg.12.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.7.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L0%2%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L0%2%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.10.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.11.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.mem.L3%1%spver
1 : ([ 0; 0 ] -> 2, [ 1; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.sp=L3%1%spver=sp.L3%1%spver
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.exreg.0.4.L4%1%d
1 : 1753220156 { 0x6880043c +1.12922e82 } : BV:32
=input.dst.mem.L4%1%d
1 : ([ 0; 0 ] -> 2, [ 1; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L4%1%d
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.exreg.12.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.13.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.14.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.15.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.16.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.6.0.L3%1%spver
1 : 1664694072 { 0x63393738 +1.44699764e71 } : BV:32
=input.dst.exreg.7.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.exreg.8.0.L3%1%spver
1 : 1 { 0x1 } : BV:1
=input.dst.exreg.9.0.L3%1%spver
1 : 0 { 0x0 } : BV:1
=input.dst.llvm-indir_tgt.E0%0%d
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.local_size.=Lentry%2%d=
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end
1 : 238760741 { 0xe3b3325 +1.46249830e157 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin
1 : 749220823 { 0x2ca833d7 +1.31408202e218 } : BV:32
=input.src.local_alloc_count.Lfor.cond%1%bbentry
1 : 1 { 0x1 +1.11e129 } : COUNT
=input.memlabel-mem--rodata_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--rodata_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=stack.size
1 : 2256535552 { 0x86800000 -2038431744 -1.0e142 } : BV:32
=input.memlabel-mem--symbol.2.0_begin
1 : 0 { 0x0 +1.0e129 } : BV:32
=input.memlabel-mem--symbol.2.0_end
1 : 3 { 0x3 +1.35e129 } : BV:32
=input.memlabel-mem--symbol.1.1_begin
1 : 4056 { 0xfd8 +1.48351e129 } : BV:32
=input.memlabel-mem--symbol.1.1_end
1 : 4063 { 0xfdf +1.48434e129 } : BV:32
=input.memlabel-mem--symbol.3.0_begin
1 : 4064 { 0xfe0 +1.48446e129 } : BV:32
=input.memlabel-mem--symbol.3.0_end
1 : 4095 { 0xfff +1.48816e129 } : BV:32
=input.memlabel-mem--esp_begin
1 : 964694016 { 0x39801000 +1.48828e244 } : BV:32
=input.memlabel-mem--esp_end
1 : 3221229567 { 0xc0000fff -1073737729 -1.48816e1 } : BV:32
=input.dst.local./*___y___main__x__=Lentry%1%d=/
1 : 2969569536 { 0xb1000900 -1325397760 -1.27465e227 } : BV:32
=input.dst.mem.L0%1%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%1%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.local_size.=Lentry%1%d=.L0%1%allocaI1
1 : 16 { 0x10 +1.190e129 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_begin.L0%1%allocaI2
1 : 356610215 { 0x154170a7 +1.51125037e171 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%1%d=/_end.L0%1%allocaI2
1 : 1677800820 { 0x64013574 +1.944375e73 } : BV:32
=input.dst.local_size.=Lentry%2%d=.L0%2%allocaI1
1 : 8 { 0x8 +1.95e129 } : BV:32
=input.dst.mem.L0%2%allocaI2
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=input.dst.mem.alloc.L0%2%allocaI2
1 : ([ 0; 3 ] -> memlabel-mem--symbol.2.0, [ 4; 4055 ] -> memlabel-mem--heap, [ 4056; 4063 ] -> memlabel-mem--rodata, [ 4064; 4095 ] -> memlabel-mem--symbol.3.0, [ 4096; 964694015 ] -> memlabel-mem--heap, [ 964694016; 1753220139 ] -> memlabel-mem--esp, [ 1753220140; 1753220147 ] -> memlabel-mem--local./*___y___main__x__=Lentry%2%d=/, [ 1753220148; 2969569535 ] -> memlabel-mem--esp, [ 2969569536; 2969569551 ] -> memlabel-mem--local./*___y___main__x__=Lentry%1%d=/, [ 2969569552; 3221229567 ] -> memlabel-mem--esp, [ 3221229568; 4294967295 ] -> memlabel-mem--heap, ) : ARRAY[BV:32 -> MEMLABEL]
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_end.L0%2%allocaI2
1 : 1753220147 { 0x68800433 +1.12814e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_begin.L0%2%allocaI2
1 : 1753220140 { 0x6880042c +1.12731e82 } : BV:32
=input.dst.memlabel-mem--local./*___y___main__x__=Lentry%2%d=/_is-absent.L0%2%allocaI2
1 : 0 { 0x0 } : BOOL
=unaliased_memslot.0
1 : 0 { 0x0 +1.0e129 } : BV:32
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI2.cluster.memlabel-mem--rodata
1 : ([ 0; 4059 ] -> 0, [ 4060; 4060 ] -> 1, [ 4061; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=commonMEM.llvm-mem.Lentry%1%allocaI4.mem.L0%1%allocaI2.cluster.memlabel-mem-may-straddle-local./*___y___main__x__=Lentry%1%d=/-local./*___y___main__x__=Lentry%2%d=/-esp
1 : ([ 0; 4294967295 ] -> 0, ) : ARRAY[BV:32 -> BV:8]
=counter_example.random_seed
4274070208
=counter_example_end


failcond-expr = eq(input.src.llvm-%conv.E0%0%d, 1):
1 : input.src.llvm-%conv.E0%0%d : BV:32
2 : 1 { 0x1 +1.11e129 } : BV:32
3 : eq(1, 2) : BOOL
</MSG>
<MSG>2:23 : main.A8: Done relaxing invariant eqclass expr-group-bvs (type BV_EQ) across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1). changed = 1 proof-stats=dht1-prove_trivial0-prove1...</MSG>
<MSG>2:23 : main.A8: Done relaxing invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed ...</MSG>
<MSG>2:23 : main.A8: Done relaxing memlabels and invariants across the edge composition (Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1), result: changed( 1, 1 ) ...</MSG>
<MSG>2:23 : main.A8: edge composition ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)*((Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)*((Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)*((Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)*(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d))))) became unstable after invariant inference</MSG>
<MSG>2:23 : Chosen product-TFG main.A8 failed the edge correlation criterion (aka well-formedness checks)... (edge composition: ((L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1)*((Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2)*((Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1)*((Lentry%2%allocaI3_L0%2%allocaI1=>Lentry%2%allocaI4_L0%2%allocaI2)*(Lentry%2%allocaI4_L0%2%allocaI2=>E0%0%d_E0%0%d))))))
</MSG>
<MSG>2:23 : Chose (for CE propagation) product-TFG main.A9 (d:0, s:0) from a frontier of size 1...</MSG>
<cg>
  Nodes[1]: L0%0%d_L0%0%d (C L0%0%d, A line 19)
                L0%0%d_L0%0%d [inductive-invariants] contains 3 counterexamples (for correlating 0 bv exprs)
  DST PC -> [Local <-> SP version] mappings for alloca:

  DST PC -> [Local <-> SP version] mappings for dealloca:

</cg>
  dst-full-pathset: L0%0%d=>E0%0%d[mu 1, delta 1]
  src-full-pathset: L0%0%d=>E0%0%d[mu 3, delta 1]
<MSG>2:23 : Finished adding lsprel-assumes for allocation to the product-TFG main.A9...</MSG>
<MSG>2:23 : Finished adding lsprel-assumes for deallocation to the product-TFG main.A9...</MSG>
<MSG>2:23 : Creating ssa-path for the src-tfg path L0%0%d --> E0%0%d ending at E0%0%d_E0%0%d
</MSG>
<MSG>2:23 : Adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:23 : Identifying common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d
</MSG>
<MSG>2:23 : Identified 4 common alloc-deallocs in the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:23 : main.A9: marking unstable at L0%0%d_L0%0%d due to failing condition:
correlation-failure--failed-to-create-alloc-dealloc-nodes-and-edges
failcond-expr = true:
1 : 1 { 0x1 } : BOOL
</MSG>
<MSG>2:23 : Done adding a CG edge composition using the src path L0%0%d --> E0%0%d and dst path L0%0%d --> E0%0%d</MSG>
<MSG>2:23 : Failed correlation of src pathset L0%0%d=>E0%0%d[mu 3, delta 1] as correlation candidate for L0%0%d=>E0%0%d[mu 1, delta 1] at L0%0%d_L0%0%d: failcond = correlation-failure--failed-to-create-alloc-dealloc-nodes-and-edges
</MSG>
<MSG>2:23 : Discovered that the correlation was useless for the product-TFG main.A9 (d:0, s:0)...</MSG>
exhausted backtracking correlation search space. elapsed = 68.76 seconds.
check_eq 194: correlation check failed
FAIL equivalence check for function main. 81.18s, query:smt.: 31.497s (num_starts 358; 0.0880s/start), decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start), decide_hoare_triple_helper.: 50.4132s (num_starts 823; 0.0613s/start)ftmap_run_pointsto_analysis.: 11.8852s (num_starts 2; 5.9426s/start)

Printing statistics:

timers:
decide_hoare_triple.ce.: 0s (num_starts 0; -nans/start)
get_paths_with_matching_to_pc.: 3e-06s (num_starts 1; 0.0000s/start)
invariant_inference_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI3_L0%1%allocaI3.: 3.9e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI3_L0%1%allocaI1.: 4.6e-05s (num_starts 3; 0.0000s/start)
corr_graph_add_correlation_and_create_new_correl_entry.after_corr_graph_add_correlation.: 5.4e-05s (num_starts 6; 0.0000s/start)
compute_tfg_pred_eqclass.: 5.6e-05s (num_starts 24; 0.0000s/start)
invariant_inference_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI4_L0%1%allocaI4.: 5.7e-05s (num_starts 3; 0.0000s/start)
invariant_inference_xfer.nonarg-locals-iscontiguous.from.L0%0%d_L0%0%d.: 0.000109s (num_starts 6; 0.0000s/start)
graph_with_paths::path_modifies_memalloc.: 0.000156s (num_starts 48; 0.0000s/start)
alias_val_t::constructor_with_map_arg.: 0.000189s (num_starts 295; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.post_dfa.: 0.000203s (num_starts 1; 0.0002s/start)
remove_complex_bv_exprs.: 0.000268s (num_starts 24; 0.0000s/start)
prove_trivial.: 0.000298s (num_starts 389; 0.0000s/start)
determinize_value_expr_map.: 0.00034s (num_starts 94; 0.0000s/start)
expr_is_hidden_reg.: 0.000372s (num_starts 499; 0.0000s/start)
select_llvmvars_not_defined_on_from_pc_and_add_to_dst.: 0.000399s (num_starts 24; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::conservative_dfa_val_for_newly_defined_loc.: 0.000405s (num_starts 34; 0.0000s/start)
tfg_suffixpath_get_expr_helper.: 0.000409s (num_starts 9; 0.0000s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::conservative_dfa_val_for_newly_defined_loc.: 0.000436s (num_starts 34; 0.0000s/start)
populate_suffixpaths.: 0.00046s (num_starts 1; 0.0005s/start)
prune_dst_memslots.: 0.00047s (num_starts 24; 0.0000s/start)
graph_visit_exprs_const.const.: 0.000488s (num_starts 1; 0.0005s/start)
aliasing_constraints.get_region_agrees_with_memlabel_preds.: 0.000546s (num_starts 1; 0.0005s/start)
expr_is_callee_save_const.: 0.000568s (num_starts 623; 0.0000s/start)
graph_apply_trans_funs_on_aliasing_constraints.addr_pred.computeWP_for_pred_across_ec.: 0.000611s (num_starts 4; 0.0002s/start)
graph_apply_trans_funs_on_aliasing_constraints.mem_alloc.computeWP_for_pred_across_ec.: 0.00063s (num_starts 4; 0.0002s/start)
rdefs_locs_ssa_analysis::xfer_and_meet.: 0.00069s (num_starts 11; 0.0001s/start)
graph_apply_trans_funs_on_aliasing_constraints.guard_pred.computeWP_for_pred_across_ec.: 0.000698s (num_starts 4; 0.0002s/start)
get_memlabel_set_from_mlvarnames.: 0.000798s (num_starts 60; 0.0000s/start)
pred_lhs_rhs_convert_memmask_to_select_for_symbols_and_locals.: 0.001005s (num_starts 823; 0.0000s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_solve.: 0.001091s (num_starts 1; 0.0011s/start)
tfg::populate_loc_definedness.set_loc_definedness().: 0.001121s (num_starts 12; 0.0001s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.before_initialize.: 0.001186s (num_starts 1; 0.0012s/start)
graph_locs_add_all_local_vars.: 0.001209s (num_starts 2; 0.0006s/start)
tfg_llvm_t::tfg_llvm_populate_reaching_definitions.: 0.001236s (num_starts 1; 0.0012s/start)
sp_version_relations_val_t::meet.: 0.00132s (num_starts 2026; 0.0000s/start)
compute_sprel_relations.: 0.001428s (num_starts 2; 0.0007s/start)
graph_locs_add_all_exvregs.: 0.001436s (num_starts 2; 0.0007s/start)
propagate_sprels.: 0.001449s (num_starts 2; 0.0007s/start)
graph_locs_add_all_llvmvars.: 0.001498s (num_starts 2; 0.0007s/start)
graph_get_reduced_graph_with_anchor_nodes_only.: 0.001524s (num_starts 6; 0.0003s/start)
tfg::collect_assumes_around_edge.: 0.001612s (num_starts 110; 0.0000s/start)
get_mask_ranges_for_memlabel.: 0.001613s (num_starts 112; 0.0000s/start)
tfg_llvm_t::tfg_llvm_fill_remaining_llvm_to_source_mappings_using_avail_exprs.: 0.001706s (num_starts 1; 0.0017s/start)
select_llvmvars_live_at_pc_and_add_to_dst.: 0.001807s (num_starts 24; 0.0001s/start)
get_sprel_map_pair.: 0.001956s (num_starts 66; 0.0000s/start)
sp_version_relations_val_t::compute_transitive_closure.: 0.002001s (num_starts 318; 0.0000s/start)
tfg::populate_loc_definedness.post_dfa.: 0.00227s (num_starts 12; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.00228s (num_starts 1; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.002298s (num_starts 1; 0.0023s/start)
graph_locs_add_local_vars_for_edge.: 0.002378s (num_starts 67; 0.0000s/start)
graph_locs_add_exvregs_for_edge.: 0.002402s (num_starts 67; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-ub-eq-houdini-guess;-trivial.: 0.002453s (num_starts 1; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.002455s (num_starts 1; 0.0025s/start)
aliasing_constraints.get_region_agrees_with_memlabel_exprs.: 0.002538s (num_starts 679; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.002544s (num_starts 1; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.002562s (num_starts 1; 0.0026s/start)
compute_loop_hoisting_non_linear_exprs_at_pcpair.: 0.002658s (num_starts 30; 0.0001s/start)
graph_edge_contains_unknown_function_call.: 0.002732s (num_starts 193; 0.0000s/start)
compute_ssa_vars_renaming_map.: 0.002828s (num_starts 2; 0.0014s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.bvcover_weaken_till_arity_within_bound.: 0.002909s (num_starts 284; 0.0000s/start)
tfg_llvm_t::tfg_llvm_compute_pc_to_llvm_to_source_varname_map.: 0.002939s (num_starts 2; 0.0015s/start)
cg_compute_well_formedness_conditions_for_stack_pointer.: 0.003154s (num_starts 30; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.003257s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.003262s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.003268s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.003278s (num_starts 1; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.003294s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.003297s (num_starts 2; 0.0016s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.003303s (num_starts 2; 0.0017s/start)
guarded_predicate_set_eliminate_axpreds.: 0.003307s (num_starts 434; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.003377s (num_starts 2; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.003386s (num_starts 2; 0.0017s/start)
populate_dominator_and_postdominator_relations.: 0.003386s (num_starts 20; 0.0002s/start)
expr_simplify_using_sprel_and_memlabel_maps.sprel.: 0.003419s (num_starts 238; 0.0000s/start)
rdefs_vars_ssa_analysis::xfer_and_meet.: 0.00347s (num_starts 18; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.003549s (num_starts 2; 0.0018s/start)
compute_interesting_exprs_for_invariant_inference_for_pc.: 0.00356s (num_starts 4; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.00356s (num_starts 2; 0.0018s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.003749s (num_starts 2; 0.0019s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess.: 0.003758s (num_starts 2; 0.0019s/start)
ssa_vars_renaming_analysis::xfer_and_meet.: 0.003859s (num_starts 69; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003925s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.003944s (num_starts 1; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess;-trivial.: 0.003958s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess.: 0.003967s (num_starts 2; 0.0020s/start)
get_unrolled_loop_paths_from.: 0.003986s (num_starts 6; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.003993s (num_starts 1; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess.: 0.004006s (num_starts 1; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.004009s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.004019s (num_starts 2; 0.0020s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.004081s (num_starts 1; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess;-trivial.: 0.004092s (num_starts 1; 0.0041s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.0041s (num_starts 1; 0.0041s/start)
def_analysis::xfer_and_meet.: 0.004101s (num_starts 124; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess.: 0.004105s (num_starts 1; 0.0041s/start)
proof_query_is_trivial_helper.: 0.004156s (num_starts 909; 0.0000s/start)
aliasing_constraints.convert_to_expr.: 0.00421s (num_starts 434; 0.0000s/start)
compute_vars_reaching_definitions.: 0.004215s (num_starts 2; 0.0021s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.004341s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.004349s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.004461s (num_starts 2; 0.0022s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess.: 0.004469s (num_starts 2; 0.0022s/start)
populate_locid2expr_map.: 0.004504s (num_starts 53; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.004505s (num_starts 1; 0.0045s/start)
sp_version_relations_val_t::generate_vals_from_gen_set.: 0.004505s (num_starts 111; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.004521s (num_starts 1; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.004582s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.004586s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.004587s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.004587s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.004602s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.004609s (num_starts 1; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.004616s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess.: 0.004617s (num_starts 2; 0.0023s/start)
graph_add_location_slots_using_state_mem_acc_map.calling.compute_lr_status_for_expr.: 0.004643s (num_starts 19; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.004662s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.00469s (num_starts 2; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.004782s (num_starts 2; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.004819s (num_starts 2; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.004831s (num_starts 1; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.005038s (num_starts 1; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.005251s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.005275s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.005309s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality;-trivial.: 0.005319s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.005332s (num_starts 1; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality.: 0.005363s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.005398s (num_starts 1; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-trivial.: 0.005406s (num_starts 1; 0.0054s/start)
cg_with_asm_annotation::mark_graph_unstable.: 0.005445s (num_starts 9; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.005511s (num_starts 2; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.005544s (num_starts 1; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.005548s (num_starts 2; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess;-trivial.: 0.005564s (num_starts 1; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess.: 0.005579s (num_starts 1; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.005586s (num_starts 1; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.005589s (num_starts 2; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.00562s (num_starts 1; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess.: 0.005631s (num_starts 2; 0.0028s/start)
populate_transitive_closure.: 0.005643s (num_starts 69; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-trivial.: 0.005648s (num_starts 1; 0.0056s/start)
graph_identify_back_edges.: 0.005745s (num_starts 76; 0.0001s/start)
sort_exprs_and_compute_bv_eqclass.: 0.00577s (num_starts 24; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.005814s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.005816s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.005834s (num_starts 1; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.005854s (num_starts 1; 0.0059s/start)
graph_identify_natural_loops.: 0.005915s (num_starts 76; 0.0001s/start)
compute_bv_bool_eqclass.: 0.005942s (num_starts 24; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.005967s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.005996s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-trivial.: 0.006023s (num_starts 1; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006096s (num_starts 1; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.006113s (num_starts 1; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.006122s (num_starts 1; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.006173s (num_starts 1; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.006194s (num_starts 1; 0.0062s/start)
expr_simplify_using_sprel_and_memlabel_maps.model.: 0.006303s (num_starts 238; 0.0000s/start)
expr_represents_llvm_undef.: 0.006382s (num_starts 1281; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.006383s (num_starts 1; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.006388s (num_starts 1; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;false-predicate;-trivial.: 0.006425s (num_starts 1; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate;-trivial.: 0.006427s (num_starts 1; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate.: 0.006435s (num_starts 1; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.006696s (num_starts 4; 0.0017s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.006715s (num_starts 4; 0.0017s/start)
identify_address_taken_local_variables.: 0.006788s (num_starts 1; 0.0068s/start)
parse_yices_model.: 0.006796s (num_starts 2; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-ub-eq-houdini-guess;-trivial.: 0.006849s (num_starts 1; 0.0068s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.006851s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.006855s (num_starts 3; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.006866s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.006881s (num_starts 1; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.006899s (num_starts 3; 0.0023s/start)
get_maximal_basic_block_edge_list_ending_at_pc.: 0.006987s (num_starts 925; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality;-trivial.: 0.006994s (num_starts 1; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality.: 0.007044s (num_starts 1; 0.0070s/start)
graph_with_paths::collect_writable_memlabels_for_path.: 0.00715s (num_starts 60; 0.0001s/start)
pth_collect_preds_using_atom_func.: 0.00716s (num_starts 108; 0.0001s/start)
generate_aliasing_constraints_from_expr.: 0.007216s (num_starts 1503; 0.0000s/start)
populate_branch_affecting_locs.: 0.007236s (num_starts 12; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.007505s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess.: 0.007517s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess;-trivial.: 0.007517s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.007522s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.007525s (num_starts 1; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess.: 0.007529s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess.: 0.007534s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.007542s (num_starts 1; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.007595s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.007607s (num_starts 2; 0.0038s/start)
set_result_and_counter_example.: 0.007608s (num_starts 358; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.007609s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.007621s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.007686s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.00769s (num_starts 2; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.0077s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.007702s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.007707s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.007708s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.007719s (num_starts 2; 0.0039s/start)
generate_region_agrees_with_memlabel_constraints_from_expr.: 0.00772s (num_starts 678; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess;-trivial.: 0.007729s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.007741s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.007753s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess.: 0.007755s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess;-trivial.: 0.007821s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess.: 0.007834s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess;-trivial.: 0.007847s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess.: 0.007886s (num_starts 2; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess;-trivial.: 0.008051s (num_starts 2; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess.: 0.008081s (num_starts 2; 0.0040s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.008268s (num_starts 1; 0.0083s/start)
proof_query_is_trivial.: 0.008325s (num_starts 823; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.008459s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.008472s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.008499s (num_starts 1; 0.0085s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.00859s (num_starts 3; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;false-predicate;-trivial.: 0.008642s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate;-trivial.: 0.008644s (num_starts 1; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate.: 0.008655s (num_starts 1; 0.0087s/start)
tfg::populate_loc_definedness.before_solve.: 0.008681s (num_starts 12; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess;-trivial.: 0.008714s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess;-trivial.: 0.008717s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess.: 0.008724s (num_starts 1; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.008757s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.008764s (num_starts 1; 0.0088s/start)
get_uapprox_predicate_list_from_guarded_preds_and_graph_ec.: 0.008776s (num_starts 434; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;local-sizes-are-equal-houdini-guess;-trivial.: 0.008782s (num_starts 3; 0.0029s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-dst-edgecond-implies-src-edgecond;-trivial.: 0.008827s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.008828s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.008833s (num_starts 1; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.008864s (num_starts 2; 0.0044s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.008865s (num_starts 2; 0.0044s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.008887s (num_starts 2; 0.0044s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess.: 0.008897s (num_starts 2; 0.0044s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;sp-below-isp-houdini-guess;-trivial.: 0.008913s (num_starts 3; 0.0030s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.008919s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.008922s (num_starts 4; 0.0022s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate;-trivial.: 0.008933s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;false-predicate;-trivial.: 0.008934s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate;-trivial.: 0.008935s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate.: 0.008946s (num_starts 1; 0.0089s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.00895s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.008952s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.008983s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.008988s (num_starts 2; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.009048s (num_starts 1; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.009051s (num_starts 4; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess.: 0.009071s (num_starts 4; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.009163s (num_starts 1; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.00917s (num_starts 1; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.009247s (num_starts 1; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.009276s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.009291s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.00931s (num_starts 1; 0.0093s/start)
tfg_edge_composition_get_assumes.: 0.009314s (num_starts 108; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.00932s (num_starts 1; 0.0093s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.009337s (num_starts 2; 0.0047s/start)
find_dominators.: 0.009341s (num_starts 135; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.009372s (num_starts 1; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.009392s (num_starts 2; 0.0047s/start)
graph_edge_composition_get_to_state_using_to_state_fn.: 0.009467s (num_starts 108; 0.0001s/start)
get_maximal_basic_block_edge_list_starting_at_pc.: 0.009515s (num_starts 925; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.009631s (num_starts 2; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;sp-below-isp-houdini-guess;-trivial.: 0.009644s (num_starts 2; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess.: 0.009683s (num_starts 2; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.009759s (num_starts 1; 0.0098s/start)
graph_visit_exprs_and_keys.: 0.00977s (num_starts 2; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.009968s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-trivial.: 0.009992s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.010032s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010039s (num_starts 1; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.010054s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess.: 0.010057s (num_starts 1; 0.0101s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess.: 0.010087s (num_starts 2; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.010119s (num_starts 3; 0.0034s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.010182s (num_starts 1; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.010197s (num_starts 1; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess;-trivial.: 0.010217s (num_starts 2; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess.: 0.010249s (num_starts 2; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality;-trivial.: 0.010497s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality.: 0.010514s (num_starts 1; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.010521s (num_starts 2; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess.: 0.010561s (num_starts 2; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality;-trivial.: 0.010655s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.010659s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.010674s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-trivial.: 0.010683s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality.: 0.010688s (num_starts 1; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-trivial.: 0.010787s (num_starts 1; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.010823s (num_starts 1; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.010836s (num_starts 1; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.010944s (num_starts 1; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-ub-eq-houdini-guess;-trivial.: 0.010951s (num_starts 1; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.010954s (num_starts 1; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.010962s (num_starts 1; 0.0110s/start)
tfg::get_aliasing_constraints_for_edge.: 0.01102s (num_starts 115; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess;-trivial.: 0.011055s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess.: 0.01107s (num_starts 1; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-addr-eq-houdini-guess;-trivial.: 0.011095s (num_starts 4; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-addr-eq-houdini-guess.: 0.011168s (num_starts 4; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.011297s (num_starts 1; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.011338s (num_starts 1; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.011395s (num_starts 1; 0.0114s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-dst-edgecond-implies-src-edgecond;-trivial.: 0.011569s (num_starts 1; 0.0116s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.01157s (num_starts 1; 0.0116s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.011577s (num_starts 1; 0.0116s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess;-trivial.: 0.011586s (num_starts 2; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.011616s (num_starts 1; 0.0116s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess.: 0.011622s (num_starts 2; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.011995s (num_starts 3; 0.0040s/start)
compute_regions.: 0.012215s (num_starts 76; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.012253s (num_starts 1; 0.0123s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.012267s (num_starts 1; 0.0123s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.012741s (num_starts 2; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.012749s (num_starts 2; 0.0064s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;mem-allocs-equality;-trivial.: 0.012957s (num_starts 2; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-trivial.: 0.012958s (num_starts 4; 0.0032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.013132s (num_starts 4; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-.: 0.01323s (num_starts 4; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.013419s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.013426s (num_starts 1; 0.0134s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.013598s (num_starts 3; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.013606s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.013621s (num_starts 1; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.013647s (num_starts 3; 0.0045s/start)
graph_add_location_slots_using_state_mem_acc_map.: 0.013819s (num_starts 20; 0.0007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.013834s (num_starts 1; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.013836s (num_starts 1; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess.: 0.013842s (num_starts 1; 0.0138s/start)
expr_simplify_using_sprel_and_memlabel_maps.: 0.014098s (num_starts 238; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.014718s (num_starts 1; 0.0147s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.014721s (num_starts 1; 0.0147s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.014726s (num_starts 1; 0.0147s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.01473s (num_starts 1; 0.0147s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.015172s (num_starts 4; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;false-predicate;-trivial.: 0.01518s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate;-trivial.: 0.015182s (num_starts 1; 0.0152s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate.: 0.01519s (num_starts 1; 0.0152s/start)
graph_visit_exprs.: 0.0152s (num_starts 5; 0.0030s/start)
tfg::populate_loc_definedness.before_initialize.: 0.015222s (num_starts 12; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.015305s (num_starts 4; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.015328s (num_starts 4; 0.0038s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.015456s (num_starts 4; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess.: 0.01548s (num_starts 4; 0.0039s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.015532s (num_starts 4; 0.0039s/start)
tfg_llvm_t::tfg_llvm_populate_varname_lr_status.: 0.01555s (num_starts 1; 0.0155s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.015608s (num_starts 2; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;sp-below-isp-houdini-guess;-trivial.: 0.015623s (num_starts 2; 0.0078s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess.: 0.015654s (num_starts 2; 0.0078s/start)
ce_perform_memory_fuzzing.: 0.015727s (num_starts 290; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.015812s (num_starts 1; 0.0158s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.015834s (num_starts 1; 0.0158s/start)
tfg::populate_loc_definedness.: 0.015913s (num_starts 12; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.01614s (num_starts 3; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-;-trivial.: 0.016257s (num_starts 5; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;memlabel-is-absent-houdini-guess;-trivial.: 0.016307s (num_starts 5; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.016315s (num_starts 6; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-.: 0.016368s (num_starts 5; 0.0033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;sp-ml-lb-ineq-houdini-guess.: 0.016416s (num_starts 6; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-trivial.: 0.016442s (num_starts 1; 0.0164s/start)
corr_graph::get_aliasing_constraints_for_edge_helper.: 0.016511s (num_starts 42; 0.0004s/start)
corr_graph::get_aliasing_constraints_for_edge.: 0.016618s (num_starts 42; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.016633s (num_starts 3; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality;-trivial.: 0.016635s (num_starts 1; 0.0166s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality.: 0.01665s (num_starts 1; 0.0167s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.016673s (num_starts 4; 0.0042s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;mem-allocs-equality;-trivial.: 0.016674s (num_starts 3; 0.0056s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.016929s (num_starts 1; 0.0169s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.017157s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess.: 0.017207s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.017234s (num_starts 1; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.017247s (num_starts 1; 0.0172s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-addr-eq-houdini-guess;-trivial.: 0.017254s (num_starts 5; 0.0035s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.017263s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.017277s (num_starts 2; 0.0086s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.017373s (num_starts 1; 0.0174s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.017384s (num_starts 1; 0.0174s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess;-trivial.: 0.017418s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess;-trivial.: 0.017425s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.017432s (num_starts 3; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess.: 0.017438s (num_starts 2; 0.0087s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.017464s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-dst-edgecond-implies-src-edgecond;-trivial.: 0.017464s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.017468s (num_starts 1; 0.0175s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.017517s (num_starts 3; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality;-trivial.: 0.017705s (num_starts 1; 0.0177s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality.: 0.017718s (num_starts 1; 0.0177s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.017815s (num_starts 1; 0.0178s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-trivial.: 0.017939s (num_starts 1; 0.0179s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-ub-eq-houdini-guess;-trivial.: 0.017947s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.01795s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.017969s (num_starts 1; 0.0180s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.017972s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess;-trivial.: 0.018s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.018001s (num_starts 3; 0.0060s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess;-trivial.: 0.018007s (num_starts 2; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess.: 0.018029s (num_starts 2; 0.0090s/start)
invariant_inference_xfer.sp-below-isp.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.018034s (num_starts 3; 0.0060s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.018059s (num_starts 3; 0.0060s/start)
get_unrolled_paths_from.: 0.01806s (num_starts 21; 0.0009s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.018093s (num_starts 1; 0.0181s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;local-sizes-are-equal-houdini-guess;-trivial.: 0.018122s (num_starts 5; 0.0036s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.018151s (num_starts 3; 0.0061s/start)
decide_hoare_triple_helper_get_aliasing_cons.: 0.018217s (num_starts 43; 0.0004s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.018243s (num_starts 3; 0.0061s/start)
removeMostPromising.: 0.018453s (num_starts 17; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.018465s (num_starts 4; 0.0046s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;local-sizes-are-equal-houdini-guess;-trivial.: 0.018467s (num_starts 3; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-trivial.: 0.018504s (num_starts 1; 0.0185s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.01857s (num_starts 1; 0.0186s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.018574s (num_starts 1; 0.0186s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.018603s (num_starts 1; 0.0186s/start)
invariant_inference_xfer.sp-below-isp.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.018668s (num_starts 3; 0.0062s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.018687s (num_starts 1; 0.0187s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.018816s (num_starts 1; 0.0188s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.018821s (num_starts 4; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-.: 0.018885s (num_starts 4; 0.0047s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-addr-eq-houdini-guess;-trivial.: 0.019187s (num_starts 4; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-addr-eq-houdini-guess.: 0.019257s (num_starts 4; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.019299s (num_starts 1; 0.0193s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.019318s (num_starts 1; 0.0193s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.01935s (num_starts 3; 0.0065s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.01943s (num_starts 3; 0.0065s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.019453s (num_starts 3; 0.0065s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.019479s (num_starts 3; 0.0065s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.019483s (num_starts 3; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.019486s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.019499s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.019519s (num_starts 1; 0.0195s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.019534s (num_starts 1; 0.0195s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.01955s (num_starts 3; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.019741s (num_starts 1; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess.: 0.019754s (num_starts 1; 0.0198s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.01986s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.019868s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.019869s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.019872s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.019873s (num_starts 2; 0.0099s/start)
do_ssa_transformation.: 0.019874s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.019878s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.019881s (num_starts 2; 0.0099s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.019912s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess;-trivial.: 0.019915s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.019919s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess.: 0.019923s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.019925s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess.: 0.019932s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.020067s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.020075s (num_starts 2; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.020426s (num_starts 2; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess.: 0.020434s (num_starts 2; 0.0102s/start)
collect_aliasing_constraints_around_path_helper.: 0.020438s (num_starts 212; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.020694s (num_starts 2; 0.0103s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess;-trivial.: 0.020701s (num_starts 3; 0.0069s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.020702s (num_starts 2; 0.0104s/start)
collect_aliasing_constraints_around_path.: 0.020737s (num_starts 128; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-below-isp-houdini-guess.: 0.020786s (num_starts 3; 0.0069s/start)
cg_src_dst_tfg_copy.: 0.020919s (num_starts 9; 0.0023s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess;-trivial.: 0.020959s (num_starts 3; 0.0070s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-below-isp-houdini-guess.: 0.021045s (num_starts 3; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.021146s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.021175s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.021193s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.021221s (num_starts 2; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.021328s (num_starts 2; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.02133s (num_starts 2; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess.: 0.021359s (num_starts 2; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.021408s (num_starts 1; 0.0214s/start)
graph_with_guessing_sync_preds.: 0.021458s (num_starts 823; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.021531s (num_starts 2; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.021559s (num_starts 2; 0.0108s/start)
invariant_inference_xfer.sp-below-isp.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.02161s (num_starts 3; 0.0072s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess;-trivial.: 0.021803s (num_starts 2; 0.0109s/start)
corr_graph_generate_local_sprel_expr_guesses_for_locals.: 0.021811s (num_starts 3; 0.0073s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess;-trivial.: 0.021812s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess.: 0.021832s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess.: 0.021838s (num_starts 2; 0.0109s/start)
get_path_wp_exprs_for_cg_invariant_inference.computeWP_for_pred_across_ec.: 0.021841s (num_starts 108; 0.0002s/start)
invariant_inference_xfer.sp-below-isp.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.021868s (num_starts 3; 0.0073s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.021895s (num_starts 2; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.021931s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.02195s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.022063s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess.: 0.022092s (num_starts 2; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-trivial.: 0.0221s (num_starts 9; 0.0025s/start)
interesting_wp_exprs_apply_trans_funs.: 0.022246s (num_starts 108; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.022265s (num_starts 3; 0.0074s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.022347s (num_starts 3; 0.0074s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-;-trivial.: 0.022444s (num_starts 1; 0.0224s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-;-trivial.: 0.02245s (num_starts 1; 0.0225s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.022476s (num_starts 3; 0.0075s/start)
corr_graph_enumerate_correlations.: 0.022532s (num_starts 1; 0.0225s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-ub-eq-houdini-guess;-trivial.: 0.022612s (num_starts 3; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-trivial.: 0.023342s (num_starts 1; 0.0233s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;sp-below-isp-houdini-guess;-trivial.: 0.023365s (num_starts 4; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;sp-below-isp-houdini-guess.: 0.023443s (num_starts 4; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-trivial.: 0.02357s (num_starts 1; 0.0236s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;memlabel-is-absent-houdini-guess;-trivial.: 0.023716s (num_starts 5; 0.0047s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.023792s (num_starts 3; 0.0079s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.023883s (num_starts 2; 0.0119s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.024232s (num_starts 3; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.024366s (num_starts 7; 0.0035s/start)
lr_status_meet.: 0.024478s (num_starts 16114; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-trivial.: 0.024485s (num_starts 9; 0.0027s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.024627s (num_starts 3; 0.0082s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.024632s (num_starts 3; 0.0082s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.024644s (num_starts 3; 0.0082s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-;-trivial.: 0.024747s (num_starts 5; 0.0049s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-.: 0.024828s (num_starts 5; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.025026s (num_starts 4; 0.0063s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;sp-below-isp-houdini-guess;-trivial.: 0.025537s (num_starts 2; 0.0128s/start)
get_next_potential_correlations.: 0.025913s (num_starts 1; 0.0259s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.026219s (num_starts 2; 0.0131s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.026434s (num_starts 3; 0.0088s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.026522s (num_starts 3; 0.0088s/start)
collect_dst_to_src_submap_preds.: 0.026844s (num_starts 823; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.026984s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess.: 0.027011s (num_starts 2; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.027032s (num_starts 3; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.027038s (num_starts 3; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.027049s (num_starts 6; 0.0045s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.027058s (num_starts 3; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-addr-eq-houdini-guess;-trivial.: 0.027093s (num_starts 5; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess;-trivial.: 0.027298s (num_starts 2; 0.0136s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess.: 0.027306s (num_starts 2; 0.0137s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.027346s (num_starts 1; 0.0273s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;local-sizes-are-equal-houdini-guess;-trivial.: 0.027348s (num_starts 5; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.02735s (num_starts 1; 0.0273s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.028433s (num_starts 3; 0.0095s/start)
get_path_wp_exprs_for_cg_invariant_inference.: 0.028676s (num_starts 54; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.028847s (num_starts 4; 0.0072s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;mem-allocs-equality;-trivial.: 0.028949s (num_starts 3; 0.0096s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;mem-allocs-equality.: 0.02902s (num_starts 3; 0.0097s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.029554s (num_starts 3; 0.0099s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.029644s (num_starts 3; 0.0099s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess;-trivial.: 0.029845s (num_starts 3; 0.0099s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-below-isp-houdini-guess.: 0.029899s (num_starts 3; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate;-trivial.: 0.030242s (num_starts 3; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);false-predicate.: 0.030306s (num_starts 3; 0.0101s/start)
tighten_mem_access_ml.cache_miss.: 0.030446s (num_starts 80; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.030569s (num_starts 2; 0.0153s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.030577s (num_starts 2; 0.0153s/start)
tighten_mem_access_ml.: 0.030623s (num_starts 87; 0.0004s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.030699s (num_starts 6; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-ub-eq-houdini-guess;-trivial.: 0.030724s (num_starts 2; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.030727s (num_starts 2; 0.0154s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.030743s (num_starts 2; 0.0154s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.030798s (num_starts 6; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.030843s (num_starts 3; 0.0103s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.030884s (num_starts 6; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.030902s (num_starts 3; 0.0103s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.030904s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.030982s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.030991s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;sp-ml-lb-ineq-houdini-guess.: 0.031004s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.03105s (num_starts 3; 0.0103s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.031087s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.031126s (num_starts 3; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.031159s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;abstract-memlabel-asserts-houdini-guess.: 0.031181s (num_starts 3; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;mem-allocs-equality;-trivial.: 0.031222s (num_starts 3; 0.0104s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-eq-lsprel-guess-houdini-guess.: 0.03125s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.031288s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess;-trivial.: 0.031367s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.03139s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-addr-eq-houdini-guess.: 0.031461s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.031463s (num_starts 6; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.031464s (num_starts 3; 0.0105s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.03156s (num_starts 6; 0.0053s/start)
eqspace::smallest_point_cover_houdini_expects_stability_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.031749s (num_starts 1349; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.031992s (num_starts 3; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.032296s (num_starts 3; 0.0108s/start)
invariant_inference_xfer.mem-allocs-equality.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.032308s (num_starts 3; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.032339s (num_starts 3; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.032353s (num_starts 3; 0.0108s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess;-trivial.: 0.03239s (num_starts 6; 0.0054s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-trivial.: 0.032425s (num_starts 3; 0.0108s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;abstract-memlabel-asserts-houdini-guess.: 0.032427s (num_starts 3; 0.0108s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.032433s (num_starts 3; 0.0108s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-trivial.: 0.032439s (num_starts 3; 0.0108s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-ineq-houdini-guess.: 0.032484s (num_starts 6; 0.0054s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality;-trivial.: 0.0325s (num_starts 3; 0.0108s/start)
compute_loop_hoisting_select_exprs_at_pcpair.: 0.032592s (num_starts 30; 0.0011s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);mem-allocs-equality.: 0.032635s (num_starts 3; 0.0109s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;sp-below-isp-houdini-guess;-trivial.: 0.032652s (num_starts 3; 0.0109s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.032654s (num_starts 3; 0.0109s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.03276s (num_starts 6; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.032851s (num_starts 6; 0.0055s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.033137s (num_starts 3; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.033548s (num_starts 4; 0.0084s/start)
collect_assumes_around_edge.: 0.033554s (num_starts 30; 0.0011s/start)
expr_linear_relation_holds::visit.var.: 0.033651s (num_starts 1867; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality;-trivial.: 0.033662s (num_starts 3; 0.0112s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.033744s (num_starts 3; 0.0112s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.033774s (num_starts 3; 0.0113s/start)
invariant_inference_xfer.mem-allocs-equality.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.033783s (num_starts 3; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);mem-allocs-equality.: 0.033816s (num_starts 3; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);abstract-memlabel-asserts-houdini-guess.: 0.033856s (num_starts 3; 0.0113s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-trivial.: 0.034109s (num_starts 3; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality;-trivial.: 0.034127s (num_starts 3; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.034219s (num_starts 3; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);mem-allocs-equality.: 0.034259s (num_starts 3; 0.0114s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.034642s (num_starts 6; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.034763s (num_starts 6; 0.0058s/start)
decide_hoare_triple_helper;per-query-type;nonarg-locals-iscontiguous-houdini-guess;-trivial.: 0.034768s (num_starts 6; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-trivial.: 0.034812s (num_starts 3; 0.0116s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.034814s (num_starts 6; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.034834s (num_starts 6; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);nonarg-locals-iscontiguous-houdini-guess.: 0.034921s (num_starts 6; 0.0058s/start)
invariant_inference_xfer.mem-allocs-equality.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.034964s (num_starts 3; 0.0117s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.034996s (num_starts 6; 0.0058s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess;-trivial.: 0.03512s (num_starts 6; 0.0059s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-sizes-are-equal-houdini-guess.: 0.035275s (num_starts 6; 0.0059s/start)
invariant_inference_xfer.mem-allocs-equality.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.035499s (num_starts 3; 0.0118s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-trivial.: 0.03567s (num_starts 3; 0.0119s/start)
invariant_inference_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.035842s (num_starts 3; 0.0119s/start)
invariant_inference_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.035904s (num_starts 3; 0.0120s/start)
invariant_inference_xfer.memlabel-is-absent.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.036005s (num_starts 3; 0.0120s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.036141s (num_starts 4; 0.0090s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;abstract-memlabel-asserts-houdini-guess.: 0.036225s (num_starts 4; 0.0091s/start)
invariant_inference_xfer.local-sizes-are-equal.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.03629s (num_starts 3; 0.0121s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality;-trivial.: 0.036343s (num_starts 3; 0.0121s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.036507s (num_starts 3; 0.0122s/start)
ldr_decomposition.: 0.03662s (num_starts 284; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-trivial.: 0.036678s (num_starts 6; 0.0061s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.036909s (num_starts 6; 0.0062s/start)
populate_memlabel_map.visit1.calling.compute_lr_status_for_expr.: 0.037076s (num_starts 391; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-trivial.: 0.037108s (num_starts 7; 0.0053s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.037307s (num_starts 16; 0.0023s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;memlabel-is-absent-houdini-guess;-trivial.: 0.037333s (num_starts 5; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.037434s (num_starts 3; 0.0125s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.037512s (num_starts 3; 0.0125s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.037679s (num_starts 6; 0.0063s/start)
invariant_inference_xfer.mem-allocs-equality.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.037692s (num_starts 3; 0.0126s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;local-sizes-are-equal-houdini-guess;-trivial.: 0.037847s (num_starts 3; 0.0126s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memlabel-is-absent-houdini-guess.: 0.037849s (num_starts 6; 0.0063s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-trivial.: 0.03786s (num_starts 3; 0.0126s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-trivial.: 0.03786s (num_starts 3; 0.0126s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-trivial.: 0.037864s (num_starts 3; 0.0126s/start)
invariant_inference_xfer.memlabel-is-absent.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.037905s (num_starts 3; 0.0126s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.038145s (num_starts 3; 0.0127s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);abstract-memlabel-asserts-houdini-guess.: 0.038245s (num_starts 3; 0.0127s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.03847s (num_starts 3; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-trivial.: 0.038807s (num_starts 8; 0.0049s/start)
invariant_inference_xfer.memlabel-is-absent.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.038845s (num_starts 3; 0.0129s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-trivial.: 0.039177s (num_starts 4; 0.0098s/start)
identify_assumed_eqclasses.: 0.039317s (num_starts 30; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-;-trivial.: 0.039392s (num_starts 2; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-;-trivial.: 0.039398s (num_starts 2; 0.0197s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.039812s (num_starts 5; 0.0080s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.039901s (num_starts 4; 0.0100s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.039917s (num_starts 4; 0.0100s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess;-trivial.: 0.040025s (num_starts 6; 0.0067s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-addr-eq-houdini-guess.: 0.040206s (num_starts 6; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.040655s (num_starts 4; 0.0102s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess.: 0.040671s (num_starts 4; 0.0102s/start)
expr_contains_only_constants_or_sp_versions_or_count_sort_vars.: 0.040902s (num_starts 8339; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess;-trivial.: 0.041218s (num_starts 6; 0.0069s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-addr-eq-houdini-guess.: 0.0414s (num_starts 6; 0.0069s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1.: 0.04141s (num_starts 3; 0.0138s/start)
invariant_inference_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.041484s (num_starts 3; 0.0138s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-addr-eq-houdini-guess;-trivial.: 0.041665s (num_starts 4; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-addr-eq-houdini-guess.: 0.041718s (num_starts 4; 0.0104s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.041833s (num_starts 4; 0.0105s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.042355s (num_starts 7; 0.0061s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.042561s (num_starts 3; 0.0142s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess;-trivial.: 0.04279s (num_starts 6; 0.0071s/start)
invariant_inference_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.0428s (num_starts 3; 0.0143s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);local-sizes-are-equal-houdini-guess.: 0.042959s (num_starts 6; 0.0072s/start)
graph_locs_map_update_memlabels_for_memslot_locs_with_memalloc.calling.compute_lr_status_for_expr.: 0.043829s (num_starts 149; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.043851s (num_starts 3; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.043855s (num_starts 3; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.043867s (num_starts 3; 0.0146s/start)
populate_lr_status_for_sprel_locs_map.calling.compute_lr_status_for_expr.: 0.045125s (num_starts 771; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-;-trivial.: 0.045364s (num_starts 4; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-;-trivial.: 0.045373s (num_starts 4; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.045394s (num_starts 5; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-.: 0.045398s (num_starts 4; 0.0113s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-.: 0.045426s (num_starts 5; 0.0091s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;memlabel-is-absent-houdini-guess;-trivial.: 0.045603s (num_starts 7; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;memeq-;-trivial.: 0.045887s (num_starts 4; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.045894s (num_starts 4; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-.: 0.045952s (num_starts 4; 0.0115s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-trivial.: 0.04691s (num_starts 2; 0.0235s/start)
construct_linear_combination_exprs.: 0.047432s (num_starts 3353; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-trivial.: 0.047832s (num_starts 4; 0.0120s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;mem-allocs-equality;-trivial.: 0.048604s (num_starts 3; 0.0162s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;mem-allocs-equality.: 0.04865s (num_starts 3; 0.0162s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.049604s (num_starts 6; 0.0083s/start)
compute_region_agrees_with_memlabel_eqclass.: 0.049632s (num_starts 24; 0.0021s/start)
get_masked_array_constant.: 0.050143s (num_starts 112; 0.0004s/start)
graph_to_stream.: 0.050591s (num_starts 2; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.051299s (num_starts 3; 0.0171s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;linear;-trivial.: 0.051456s (num_starts 15; 0.0034s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.052196s (num_starts 6; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);sp-ml-lb-ineq-houdini-guess.: 0.052419s (num_starts 6; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.052717s (num_starts 9; 0.0059s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.052939s (num_starts 9; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;mem-allocs-equality;-trivial.: 0.053042s (num_starts 3; 0.0177s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.0537s (num_starts 4; 0.0134s/start)
invariant_inference_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.054342s (num_starts 3; 0.0181s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.054396s (num_starts 3; 0.0181s/start)
evaluate_memmask.: 0.054755s (num_starts 112; 0.0005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.054882s (num_starts 3; 0.0183s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.055315s (num_starts 4; 0.0138s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-trivial.: 0.055526s (num_starts 5; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.055988s (num_starts 4; 0.0140s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-;-trivial.: 0.056158s (num_starts 5; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-trivial.: 0.056184s (num_starts 11; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-.: 0.056232s (num_starts 5; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057746s (num_starts 1; 0.0577s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.057956s (num_starts 1; 0.0580s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.057966s (num_starts 1; 0.0580s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058258s (num_starts 1; 0.0583s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058265s (num_starts 1; 0.0583s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.058269s (num_starts 1; 0.0583s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.058278s (num_starts 1; 0.0583s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;memeq-;-trivial.: 0.058913s (num_starts 6; 0.0098s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.059225s (num_starts 4; 0.0148s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess;-trivial.: 0.059337s (num_starts 3; 0.0198s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);abstract-memlabel-asserts-houdini-guess.: 0.059387s (num_starts 3; 0.0198s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;memlabel-is-absent-houdini-guess;-trivial.: 0.059522s (num_starts 5; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-addr-eq-houdini-guess;-trivial.: 0.059523s (num_starts 5; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.060441s (num_starts 3; 0.0201s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;abstract-memlabel-asserts-houdini-guess.: 0.060489s (num_starts 3; 0.0202s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess;-trivial.: 0.060552s (num_starts 6; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memlabel-is-absent-houdini-guess.: 0.060645s (num_starts 6; 0.0101s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.061854s (num_starts 12; 0.0052s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.06204s (num_starts 12; 0.0052s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.06256s (num_starts 9; 0.0070s/start)
populate_locs_potentially_modified_on_edge.: 0.064004s (num_starts 72; 0.0009s/start)
invariant_inference_xfer.ml-lb-addr-eq.from.L0%0%d_L0%0%d.: 0.06426s (num_starts 6; 0.0107s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.064504s (num_starts 1; 0.0645s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06451s (num_starts 1; 0.0645s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess.: 0.06452s (num_starts 1; 0.0645s/start)
invariant_inference_xfer.local-eq-lsprel-guess.from.L0%0%d_L0%0%d.: 0.06476s (num_starts 6; 0.0108s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess;-trivial.: 0.065094s (num_starts 12; 0.0054s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-ml-lb-ineq-houdini-guess.: 0.065292s (num_starts 12; 0.0054s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065349s (num_starts 1; 0.0653s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.065567s (num_starts 1; 0.0656s/start)
invariant_inference_xfer.nonarg-locals-isprobably-contiguous.from.L0%0%d_L0%0%d.: 0.065852s (num_starts 6; 0.0110s/start)
invariant_inference_xfer.ml-lb-ub-ineq.from.L0%0%d_L0%0%d.: 0.065933s (num_starts 6; 0.0110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066035s (num_starts 1; 0.0660s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.066048s (num_starts 1; 0.0660s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066149s (num_starts 1; 0.0661s/start)
parse_cvc4_model.: 0.066715s (num_starts 10; 0.0067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066801s (num_starts 1; 0.0668s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.066805s (num_starts 1; 0.0668s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess.: 0.066816s (num_starts 1; 0.0668s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.066877s (num_starts 6; 0.0111s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;sp-ml-lb-ineq-houdini-guess.: 0.066948s (num_starts 6; 0.0112s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;local-sizes-are-equal-houdini-guess;-trivial.: 0.067328s (num_starts 5; 0.0135s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067494s (num_starts 1; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0675s (num_starts 1; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067919s (num_starts 1; 0.0679s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067992s (num_starts 1; 0.0680s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.067997s (num_starts 1; 0.0680s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069491s (num_starts 1; 0.0695s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069496s (num_starts 1; 0.0695s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality.: 0.069517s (num_starts 1; 0.0695s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.06963s (num_starts 1; 0.0696s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.069637s (num_starts 1; 0.0696s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.069655s (num_starts 14; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.070023s (num_starts 1; 0.0700s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07003s (num_starts 1; 0.0700s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;memeq-;-trivial.: 0.070122s (num_starts 10; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071088s (num_starts 1; 0.0711s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess.: 0.071253s (num_starts 2; 0.0356s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;mem-allocs-equality.: 0.071338s (num_starts 3; 0.0238s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;memlabel-is-absent-houdini-guess;-trivial.: 0.071439s (num_starts 5; 0.0143s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071457s (num_starts 1; 0.0715s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack.: 0.07149s (num_starts 1; 0.0715s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071542s (num_starts 1; 0.0715s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071547s (num_starts 1; 0.0715s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess.: 0.071656s (num_starts 2; 0.0358s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071797s (num_starts 1; 0.0718s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.071859s (num_starts 1; 0.0719s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.071959s (num_starts 1; 0.0720s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.071983s (num_starts 1; 0.0720s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;linear;-trivial.: 0.072323s (num_starts 29; 0.0025s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072507s (num_starts 1; 0.0725s/start)
propagate_nodece_across_edge.: 0.072529s (num_starts 193; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072563s (num_starts 1; 0.0726s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072797s (num_starts 1; 0.0728s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072806s (num_starts 1; 0.0728s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072865s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.072878s (num_starts 1; 0.0729s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.0729s (num_starts 2; 0.0365s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.073241s (num_starts 2; 0.0366s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;sp-below-isp-houdini-guess.: 0.073502s (num_starts 4; 0.0184s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073839s (num_starts 1; 0.0738s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.073849s (num_starts 1; 0.0738s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess.: 0.0739s (num_starts 1; 0.0739s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07409s (num_starts 1; 0.0741s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074096s (num_starts 1; 0.0741s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality.: 0.074107s (num_starts 1; 0.0741s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074417s (num_starts 1; 0.0744s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074768s (num_starts 1; 0.0748s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.074788s (num_starts 1; 0.0748s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074814s (num_starts 1; 0.0748s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow.: 0.074837s (num_starts 1; 0.0748s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.074893s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0749s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess.: 0.074912s (num_starts 1; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075036s (num_starts 1; 0.0750s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075047s (num_starts 1; 0.0750s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075084s (num_starts 1; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075151s (num_starts 1; 0.0752s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075171s (num_starts 1; 0.0752s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero.: 0.075175s (num_starts 1; 0.0752s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.075205s (num_starts 1; 0.0752s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075461s (num_starts 1; 0.0755s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075506s (num_starts 1; 0.0755s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075516s (num_starts 1; 0.0755s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075527s (num_starts 1; 0.0755s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075613s (num_starts 1; 0.0756s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.075617s (num_starts 1; 0.0756s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess.: 0.076031s (num_starts 2; 0.0380s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076053s (num_starts 1; 0.0761s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.076106s (num_starts 1; 0.0761s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076183s (num_starts 1; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076187s (num_starts 1; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076219s (num_starts 1; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess.: 0.07623s (num_starts 1; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076598s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076603s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.076633s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-region-was-stack.: 0.076636s (num_starts 1; 0.0766s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076646s (num_starts 1; 0.0766s/start)
invariant_inference_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.: 0.076654s (num_starts 6; 0.0128s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07667s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076675s (num_starts 1; 0.0767s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.076881s (num_starts 1; 0.0769s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077131s (num_starts 1; 0.0771s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077158s (num_starts 1; 0.0772s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.077166s (num_starts 1; 0.0772s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07717s (num_starts 1; 0.0772s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::sp_version_relations_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 0.077419s (num_starts 111; 0.0007s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077601s (num_starts 1; 0.0776s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack.: 0.077623s (num_starts 1; 0.0776s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.077801s (num_starts 12; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.077886s (num_starts 1; 0.0779s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned.: 0.077922s (num_starts 1; 0.0779s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078022s (num_starts 1; 0.0780s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero.: 0.078058s (num_starts 1; 0.0781s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);memeq-.: 0.078153s (num_starts 12; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.078155s (num_starts 2; 0.0391s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078244s (num_starts 1; 0.0782s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned.: 0.078267s (num_starts 1; 0.0783s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.078274s (num_starts 2; 0.0391s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078605s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078611s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078619s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078621s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078629s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.078643s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-addr-neq-zero.: 0.078646s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.078649s (num_starts 1; 0.0786s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078691s (num_starts 1; 0.0787s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078695s (num_starts 1; 0.0787s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.078727s (num_starts 1; 0.0787s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow.: 0.078763s (num_starts 1; 0.0788s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;abstract-memlabel-asserts-houdini-guess.: 0.078879s (num_starts 4; 0.0197s/start)
create_closure_matrix.: 0.07904s (num_starts 216; 0.0004s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess.: 0.079092s (num_starts 2; 0.0395s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079423s (num_starts 1; 0.0794s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.07943s (num_starts 1; 0.0794s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess.: 0.079442s (num_starts 1; 0.0794s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess.: 0.079704s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079714s (num_starts 1; 0.0797s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.079718s (num_starts 1; 0.0797s/start)
smallest_point_cover_arr.recompute_preds_for_points.: 0.079829s (num_starts 1564; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.079881s (num_starts 2; 0.0399s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080093s (num_starts 1; 0.0801s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.080118s (num_starts 1; 0.0801s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess.: 0.080148s (num_starts 2; 0.0401s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess.: 0.080305s (num_starts 2; 0.0402s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080306s (num_starts 1; 0.0803s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080323s (num_starts 1; 0.0803s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.080353s (num_starts 1; 0.0804s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.080364s (num_starts 1; 0.0804s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080418s (num_starts 1; 0.0804s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080459s (num_starts 1; 0.0805s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.080471s (num_starts 1; 0.0805s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.080501s (num_starts 1; 0.0805s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080521s (num_starts 1; 0.0805s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08053s (num_starts 1; 0.0805s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess.: 0.080574s (num_starts 1; 0.0806s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.080684s (num_starts 7; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.0807s (num_starts 1; 0.0807s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero.: 0.080726s (num_starts 1; 0.0807s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08081s (num_starts 1; 0.0808s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080818s (num_starts 1; 0.0808s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080822s (num_starts 1; 0.0808s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.080855s (num_starts 2; 0.0404s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.080866s (num_starts 1; 0.0809s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.080975s (num_starts 1; 0.0810s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.081002s (num_starts 1; 0.0810s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081378s (num_starts 1; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08138s (num_starts 1; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081387s (num_starts 1; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.081415s (num_starts 1; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-addr-neq-zero.: 0.08142s (num_starts 1; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.081427s (num_starts 1; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081557s (num_starts 1; 0.0816s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081565s (num_starts 1; 0.0816s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.081607s (num_starts 1; 0.0816s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-region-was-stack.: 0.081611s (num_starts 1; 0.0816s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.081688s (num_starts 2; 0.0408s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081702s (num_starts 1; 0.0817s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack.: 0.081725s (num_starts 1; 0.0817s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081858s (num_starts 1; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081863s (num_starts 1; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.081896s (num_starts 1; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-addr-no-overflow.: 0.081903s (num_starts 1; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.081907s (num_starts 1; 0.0819s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);mem-allocs-equality.: 0.082205s (num_starts 3; 0.0274s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082265s (num_starts 1; 0.0823s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082272s (num_starts 1; 0.0823s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess.: 0.082317s (num_starts 2; 0.0412s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082334s (num_starts 1; 0.0823s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.082386s (num_starts 1; 0.0824s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess.: 0.082387s (num_starts 2; 0.0412s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.082669s (num_starts 1; 0.0827s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.082722s (num_starts 1; 0.0827s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;local-eq-lsprel-guess-houdini-guess.: 0.083126s (num_starts 4; 0.0208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083255s (num_starts 1; 0.0833s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.083299s (num_starts 1; 0.0833s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083499s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083506s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083511s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083516s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.083539s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.083539s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.083547s (num_starts 1; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-alloca-addr-is-aligned.: 0.083553s (num_starts 1; 0.0836s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083598s (num_starts 1; 0.0836s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.083641s (num_starts 1; 0.0836s/start)
counter_example_falsifies_preds.: 0.083678s (num_starts 293; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083688s (num_starts 1; 0.0837s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.083694s (num_starts 1; 0.0837s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-ub-ineq-houdini-guess.: 0.083732s (num_starts 4; 0.0209s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-ub-ineq-houdini-guess.: 0.083746s (num_starts 4; 0.0209s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.084111s (num_starts 1; 0.0841s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow.: 0.084133s (num_starts 1; 0.0841s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess.: 0.084422s (num_starts 2; 0.0422s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.085002s (num_starts 2; 0.0425s/start)
edge_update_memlabel_map_for_mlvars.populate_memlabel_map.: 0.085275s (num_starts 111; 0.0008s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085522s (num_starts 1; 0.0855s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085526s (num_starts 1; 0.0855s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.085552s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess.: 0.085557s (num_starts 2; 0.0428s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-addr-no-overflow.: 0.085559s (num_starts 1; 0.0856s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.085867s (num_starts 1; 0.0859s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.085922s (num_starts 1; 0.0859s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess.: 0.086291s (num_starts 2; 0.0431s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086474s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08648s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.086505s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-addr-neq-zero.: 0.086512s (num_starts 1; 0.0865s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086924s (num_starts 1; 0.0869s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.086929s (num_starts 1; 0.0869s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.086958s (num_starts 1; 0.0870s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-addr-is-aligned.: 0.086965s (num_starts 1; 0.0870s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.087283s (num_starts 2; 0.0436s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087478s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.087485s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.087511s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-addr-no-overflow.: 0.087517s (num_starts 1; 0.0875s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;memeq-;-trivial.: 0.087755s (num_starts 9; 0.0098s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess.: 0.087825s (num_starts 2; 0.0439s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.088138s (num_starts 2; 0.0441s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088257s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.088301s (num_starts 1; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088489s (num_starts 1; 0.0885s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.088531s (num_starts 1; 0.0885s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess.: 0.088533s (num_starts 2; 0.0443s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088647s (num_starts 1; 0.0886s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned.: 0.088673s (num_starts 1; 0.0887s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088835s (num_starts 1; 0.0888s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.088878s (num_starts 1; 0.0889s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.088936s (num_starts 1; 0.0889s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.088992s (num_starts 1; 0.0890s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089018s (num_starts 1; 0.0890s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089031s (num_starts 1; 0.0890s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess.: 0.089082s (num_starts 1; 0.0891s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;memeq-;-trivial.: 0.089188s (num_starts 11; 0.0081s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.08924s (num_starts 1; 0.0892s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089243s (num_starts 1; 0.0892s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.089267s (num_starts 1; 0.0893s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-alloca-region-was-stack.: 0.089271s (num_starts 1; 0.0893s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;sp-below-isp-houdini-guess.: 0.08956s (num_starts 3; 0.0299s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089599s (num_starts 1; 0.0896s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.089604s (num_starts 1; 0.0896s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;local-sizes-are-equal-houdini-guess.: 0.089699s (num_starts 4; 0.0224s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-addr-eq-houdini-guess.: 0.090223s (num_starts 6; 0.0150s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090431s (num_starts 1; 0.0904s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090583s (num_starts 1; 0.0906s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess.: 0.090591s (num_starts 2; 0.0453s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090729s (num_starts 1; 0.0907s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.090735s (num_starts 1; 0.0907s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.090762s (num_starts 1; 0.0908s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-alloca-addr-is-aligned.: 0.090771s (num_starts 1; 0.0908s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091214s (num_starts 1; 0.0912s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091256s (num_starts 1; 0.0913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.091258s (num_starts 1; 0.0913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09126s (num_starts 1; 0.0913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-.: 0.091338s (num_starts 5; 0.0183s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.091364s (num_starts 1; 0.0914s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.091403s (num_starts 1; 0.0914s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-ub-eq-houdini-guess;-trivial.: 0.091523s (num_starts 10; 0.0092s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.092404s (num_starts 3; 0.0308s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess.: 0.092442s (num_starts 2; 0.0462s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;sp-ml-lb-ineq-houdini-guess.: 0.092555s (num_starts 8; 0.0116s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess.: 0.093037s (num_starts 2; 0.0465s/start)
add_fresh_counterexample_at_pc_and_propagate.Lentry%2%allocaI3_L0%1%allocaI1.inductive-invariants.: 0.094328s (num_starts 3; 0.0314s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.094923s (num_starts 2; 0.0475s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;local-sizes-are-equal-houdini-guess.: 0.094936s (num_starts 6; 0.0158s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;local-eq-lsprel-guess-houdini-guess.: 0.09545s (num_starts 4; 0.0239s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.095484s (num_starts 9; 0.0106s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.095647s (num_starts 9; 0.0106s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.096501s (num_starts 2; 0.0483s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-;-trivial.: 0.097106s (num_starts 15; 0.0065s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);memeq-.: 0.097524s (num_starts 15; 0.0065s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-trivial.: 0.097826s (num_starts 15; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.09783s (num_starts 1; 0.0978s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.097835s (num_starts 1; 0.0978s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality.: 0.097846s (num_starts 1; 0.0978s/start)
decide_hoare_triple_helper;per-query-type;nonarg-locals-isprobably-contiguous-houdini-guess;-trivial.: 0.098279s (num_starts 18; 0.0055s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;local-sizes-are-equal-houdini-guess.: 0.098315s (num_starts 4; 0.0246s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess.: 0.098405s (num_starts 2; 0.0492s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;sp-below-isp-houdini-guess.: 0.09876s (num_starts 3; 0.0329s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;local-sizes-are-equal-houdini-guess.: 0.099081s (num_starts 6; 0.0165s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;memlabel-is-absent-houdini-guess.: 0.100086s (num_starts 6; 0.0167s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;mem-allocs-equality.: 0.100884s (num_starts 4; 0.0252s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.101139s (num_starts 2; 0.0506s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess.: 0.102349s (num_starts 2; 0.0512s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-addr-eq-houdini-guess.: 0.102799s (num_starts 6; 0.0171s/start)
eqspace::smallest_point_cover_houdini_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 0.104989s (num_starts 3124; 0.0000s/start)
get_sprel_map_pair_at_pc.: 0.106059s (num_starts 434; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;sp-below-isp-houdini-guess.: 0.106145s (num_starts 3; 0.0354s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;sp-below-isp-houdini-guess.: 0.107638s (num_starts 4; 0.0269s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess.: 0.108167s (num_starts 2; 0.0541s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.108577s (num_starts 2; 0.0543s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess.: 0.109254s (num_starts 2; 0.0546s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.109325s (num_starts 2; 0.0547s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;memeq-;-trivial.: 0.111026s (num_starts 8; 0.0139s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;sp-ml-lb-ineq-houdini-guess.: 0.112602s (num_starts 8; 0.0141s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-ub-ineq-houdini-guess.: 0.113128s (num_starts 4; 0.0283s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;mem-allocs-equality.: 0.114668s (num_starts 4; 0.0287s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;memlabel-is-absent-houdini-guess.: 0.114669s (num_starts 6; 0.0191s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.114786s (num_starts 10; 0.0115s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;memlabel-is-absent-houdini-guess.: 0.115479s (num_starts 8; 0.0144s/start)
decide_hoare_triple_helper;per-query-type;sp-below-isp-houdini-guess;-trivial.: 0.115716s (num_starts 16; 0.0072s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;linear;-trivial.: 0.118713s (num_starts 20; 0.0059s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;local-eq-lsprel-guess-houdini-guess.: 0.122249s (num_starts 4; 0.0306s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.123372s (num_starts 2; 0.0617s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-trivial.: 0.125128s (num_starts 10; 0.0125s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.126094s (num_starts 11; 0.0115s/start)
add_fresh_counterexample_at_pc_and_propagate.Lentry%1%allocaI4_L0%1%allocaI2.inductive-invariants.: 0.127017s (num_starts 3; 0.0423s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;mem-allocs-equality.: 0.127221s (num_starts 4; 0.0318s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.129135s (num_starts 2; 0.0646s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess.: 0.129157s (num_starts 2; 0.0646s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;local-sizes-are-equal-houdini-guess.: 0.129194s (num_starts 4; 0.0323s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;abstract-memlabel-asserts-houdini-guess.: 0.130811s (num_starts 4; 0.0327s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.130928s (num_starts 2; 0.0655s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.L0%0%d_L0%0%d.: 0.131014s (num_starts 3; 0.0437s/start)
invariant_inference_xfer.sp-ml-lb-ineq.from.L0%0%d_L0%0%d.: 0.13119s (num_starts 6; 0.0219s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.133251s (num_starts 2; 0.0666s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-trivial.: 0.133767s (num_starts 12; 0.0111s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--heap.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.134589s (num_starts 3; 0.0449s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-trivial.: 0.134876s (num_starts 11; 0.0123s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.135017s (num_starts 3; 0.0450s/start)
create_sp_version_relations_lattice_at_pc.: 0.1375s (num_starts 216; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-addr-eq-houdini-guess.: 0.138275s (num_starts 6; 0.0230s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.139205s (num_starts 2; 0.0696s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.139377s (num_starts 2; 0.0697s/start)
expr_try_breaking_bvextracts_to_fresh_vars.: 0.140921s (num_starts 434; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.144211s (num_starts 2; 0.0721s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.144223s (num_starts 2; 0.0721s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess.: 0.14432s (num_starts 2; 0.0722s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.src_tfg.computeWP_for_pred_across_ec.: 0.145265s (num_starts 904; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;linear;-trivial.: 0.145521s (num_starts 29; 0.0050s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.1457s (num_starts 2; 0.0728s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess.: 0.145722s (num_starts 2; 0.0729s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146207s (num_starts 2; 0.0731s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146215s (num_starts 2; 0.0731s/start)
compute_expr_eqclasses_at_pc.: 0.146887s (num_starts 24; 0.0061s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.146964s (num_starts 2; 0.0735s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.147571s (num_starts 2; 0.0738s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);sp-below-isp-houdini-guess.: 0.148199s (num_starts 3; 0.0494s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;nonarg-locals-iscontiguous-houdini-guess.: 0.148953s (num_starts 4; 0.0372s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-ub-ineq-houdini-guess.: 0.148978s (num_starts 6; 0.0248s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149297s (num_starts 2; 0.0746s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149312s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess.: 0.149418s (num_starts 2; 0.0747s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149837s (num_starts 2; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.149848s (num_starts 2; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.149932s (num_starts 2; 0.0750s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.150235s (num_starts 2; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.150249s (num_starts 2; 0.0751s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess.: 0.150357s (num_starts 2; 0.0752s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;nonarg-locals-iscontiguous-houdini-guess.: 0.150367s (num_starts 2; 0.0752s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.151748s (num_starts 2; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-region-was-stack.: 0.151851s (num_starts 2; 0.0759s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152097s (num_starts 2; 0.0760s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152315s (num_starts 2; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152319s (num_starts 2; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.152324s (num_starts 2; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess.: 0.152424s (num_starts 2; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;nonarg-locals-iscontiguous-houdini-guess.: 0.152437s (num_starts 2; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;memlabel-is-absent-houdini-guess.: 0.153827s (num_starts 6; 0.0256s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.154922s (num_starts 1; 0.1549s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate.: 0.154957s (num_starts 1; 0.1550s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.155801s (num_starts 2; 0.0779s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.155812s (num_starts 2; 0.0779s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.155848s (num_starts 1; 0.1558s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate.: 0.15588s (num_starts 1; 0.1559s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.1559s (num_starts 2; 0.0780s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.155964s (num_starts 2; 0.0780s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-addr-neq-zero.: 0.156052s (num_starts 2; 0.0780s/start)
graph_with_guessing_add_node_invariants_top_or_boundary.: 0.15688s (num_starts 31; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;local-sizes-are-equal-houdini-guess.: 0.157062s (num_starts 6; 0.0262s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.157782s (num_starts 2; 0.0789s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.157795s (num_starts 2; 0.0789s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.157904s (num_starts 2; 0.0790s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-ub-ineq-houdini-guess;-trivial.: 0.158014s (num_starts 21; 0.0075s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.158306s (num_starts 2; 0.0792s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;nonarg-locals-iscontiguous-houdini-guess.: 0.158333s (num_starts 4; 0.0396s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-addr-no-overflow.: 0.158389s (num_starts 2; 0.0792s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;nonarg-locals-isprobably-contiguous-houdini-guess.: 0.158916s (num_starts 6; 0.0265s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;nonarg-locals-isprobably-contiguous-houdini-guess.: 0.159226s (num_starts 4; 0.0398s/start)
cg_add_node.: 0.159478s (num_starts 31; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159787s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159804s (num_starts 2; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159817s (num_starts 2; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate.: 0.159827s (num_starts 1; 0.1598s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.159941s (num_starts 2; 0.0800s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.159981s (num_starts 2; 0.0800s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);abstract-memlabel-asserts-houdini-guess.: 0.160146s (num_starts 3; 0.0534s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160259s (num_starts 2; 0.0801s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.160342s (num_starts 2; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-region-was-stack.: 0.160352s (num_starts 2; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-addr-neq-zero.: 0.160456s (num_starts 2; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.160646s (num_starts 3; 0.0535s/start)
check_node_stability_after_CE_addition.: 0.161607s (num_starts 287; 0.0006s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161656s (num_starts 2; 0.0808s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.161829s (num_starts 2; 0.0809s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-alloca-addr-is-aligned.: 0.161916s (num_starts 2; 0.0810s/start)
decide_hoare_triple_helper;per-path;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);-trivial.: 0.162083s (num_starts 17; 0.0095s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;local-eq-lsprel-guess-houdini-guess.: 0.162359s (num_starts 6; 0.0271s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16374s (num_starts 2; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-addr-is-aligned.: 0.163858s (num_starts 2; 0.0819s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.163959s (num_starts 2; 0.0820s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.164212s (num_starts 2; 0.0821s/start)
decide_hoare_triple_helper;per-query-type;local-eq-lsprel-guess-houdini-guess;-trivial.: 0.165197s (num_starts 21; 0.0079s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.16765s (num_starts 2; 0.0838s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;nonarg-locals-isprobably-contiguous-houdini-guess.: 0.167681s (num_starts 4; 0.0419s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-alloca-addr-no-overflow.: 0.16777s (num_starts 2; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.168942s (num_starts 2; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.168949s (num_starts 2; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.168962s (num_starts 2; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-addr-neq-zero.: 0.16904s (num_starts 2; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess.: 0.169052s (num_starts 2; 0.0845s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.170192s (num_starts 2; 0.0851s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-region-was-stack.: 0.17028s (num_starts 2; 0.0851s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;-dst-edgecond-implies-src-edgecond.: 0.17167s (num_starts 3; 0.0572s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.172013s (num_starts 1; 0.1720s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate.: 0.172053s (num_starts 1; 0.1721s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.172792s (num_starts 1; 0.1728s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate.: 0.172824s (num_starts 1; 0.1728s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-ub-ineq-houdini-guess.: 0.172837s (num_starts 6; 0.0288s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;-dst-edgecond-implies-src-edgecond.: 0.173148s (num_starts 3; 0.0577s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.17361s (num_starts 2; 0.0868s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.173625s (num_starts 2; 0.0868s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.17371s (num_starts 2; 0.0869s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;nonarg-locals-isprobably-contiguous-houdini-guess.: 0.174671s (num_starts 6; 0.0291s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175151s (num_starts 2; 0.0876s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175161s (num_starts 2; 0.0876s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess.: 0.17525s (num_starts 2; 0.0876s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;nonarg-locals-iscontiguous-houdini-guess.: 0.175262s (num_starts 2; 0.0876s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175314s (num_starts 2; 0.0877s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-addr-no-overflow.: 0.175405s (num_starts 2; 0.0877s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-addr-eq-houdini-guess;-trivial.: 0.175782s (num_starts 27; 0.0065s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.175793s (num_starts 1; 0.1758s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate.: 0.175825s (num_starts 1; 0.1758s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.177281s (num_starts 1; 0.1773s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.177284s (num_starts 1; 0.1773s/start)
decide_hoare_triple_helper;per-query-type;local-sizes-are-equal-houdini-guess;-trivial.: 0.177842s (num_starts 24; 0.0074s/start)
invariant_inference_xfer.sp-below-isp.from.L0%0%d_L0%0%d.: 0.179615s (num_starts 6; 0.0299s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18s (num_starts 2; 0.0900s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-alloca-addr-is-aligned.: 0.180091s (num_starts 2; 0.0900s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;local-eq-lsprel-guess-houdini-guess.: 0.181242s (num_starts 6; 0.0302s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;-dst-edgecond-implies-src-edgecond.: 0.181527s (num_starts 3; 0.0605s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.182681s (num_starts 2; 0.0913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.182692s (num_starts 2; 0.0913s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.182781s (num_starts 2; 0.0914s/start)
bv_const_ref_map2expr_map.: 0.182812s (num_starts 3353; 0.0001s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.3.0.from.L0%0%d_L0%0%d.: 0.183419s (num_starts 6; 0.0306s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--heap.from.L0%0%d_L0%0%d.: 0.183471s (num_starts 6; 0.0306s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.dst_tfg.computeWP_for_pred_across_ec.: 0.184077s (num_starts 904; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-.: 0.185842s (num_starts 5; 0.0372s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.18678s (num_starts 1; 0.1868s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate.: 0.186823s (num_starts 1; 0.1868s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.187587s (num_starts 1; 0.1876s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate.: 0.187624s (num_starts 1; 0.1876s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.187709s (num_starts 3; 0.0626s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.188614s (num_starts 3; 0.0629s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.189243s (num_starts 3; 0.0631s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.189534s (num_starts 1; 0.1895s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate.: 0.189577s (num_starts 1; 0.1896s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;nonarg-locals-iscontiguous-houdini-guess.: 0.19043s (num_starts 4; 0.0476s/start)
decide_hoare_triple_helper;per-query-type;mem-allocs-equality;-trivial.: 0.191424s (num_starts 17; 0.0113s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.2.0.from.L0%0%d_L0%0%d.: 0.192784s (num_starts 6; 0.0321s/start)
tfg_asm_t::tfg_postprocess_after_pointsto_analysis.: 0.193251s (num_starts 1; 0.1933s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.193491s (num_starts 1; 0.1935s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.193693s (num_starts 1; 0.1937s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.194688s (num_starts 3; 0.0649s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.194834s (num_starts 1; 0.1948s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate.: 0.194876s (num_starts 1; 0.1949s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);-trivial.: 0.195307s (num_starts 27; 0.0072s/start)
create_new_corr_graph_edge.new_node.: 0.195422s (num_starts 30; 0.0065s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-trivial.: 0.195653s (num_starts 28; 0.0070s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.195994s (num_starts 2; 0.0980s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.197142s (num_starts 3; 0.0657s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.19836s (num_starts 2; 0.0992s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198634s (num_starts 1; 0.1986s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate.: 0.198677s (num_starts 1; 0.1987s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198713s (num_starts 3; 0.0662s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198716s (num_starts 3; 0.0662s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.198945s (num_starts 1; 0.1989s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess.: 0.199291s (num_starts 3; 0.0664s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.20054s (num_starts 1; 0.2005s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate.: 0.200577s (num_starts 1; 0.2006s/start)
check_wfconds_on_edge.L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3.: 0.202391s (num_starts 3; 0.0675s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;nonarg-locals-isprobably-contiguous-houdini-guess.: 0.20268s (num_starts 4; 0.0507s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.202843s (num_starts 1; 0.2028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate.: 0.202878s (num_starts 1; 0.2029s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.204126s (num_starts 25; 0.0082s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-trivial.: 0.205664s (num_starts 30; 0.0069s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-trivial.: 0.207465s (num_starts 22; 0.0094s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-ub-ineq-houdini-guess.: 0.207821s (num_starts 6; 0.0346s/start)
recomputed_preds_would_be_different_from_current_preds.: 0.209563s (num_starts 5140; 0.0000s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209779s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon);-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209779s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.20978s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main;dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209781s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209782s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.209805s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.209816s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main;dst_edge_composition_proves_false.: 0.209819s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-query-type;dst_edge_composition_proves_false.: 0.20982s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);dst_edge_composition_proves_false.: 0.209822s (num_starts 1; 0.2098s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.209947s (num_starts 2; 0.1050s/start)
decide_hoare_triple.: 0.210344s (num_starts 1; 0.2103s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;memlabel-is-absent-houdini-guess.: 0.211203s (num_starts 8; 0.0264s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.213935s (num_starts 1; 0.2139s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate.: 0.213989s (num_starts 1; 0.2140s/start)
create_new_corr_graph_edge.: 0.215427s (num_starts 30; 0.0072s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;nonarg-locals-isprobably-contiguous-houdini-guess.: 0.215614s (num_starts 6; 0.0359s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.21581s (num_starts 3; 0.0719s/start)
counter_example_satisfies_preds.: 0.216123s (num_starts 1472; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.217049s (num_starts 3; 0.0723s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.217235s (num_starts 3; 0.0724s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;local-eq-lsprel-guess-houdini-guess.: 0.217814s (num_starts 6; 0.0363s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.218101s (num_starts 3; 0.0727s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.220941s (num_starts 3; 0.0736s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.222106s (num_starts 3; 0.0740s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.222468s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate.: 0.222519s (num_starts 1; 0.2225s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess;-trivial.: 0.223346s (num_starts 19; 0.0118s/start)
invariant_inference_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.: 0.226682s (num_starts 6; 0.0378s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.226867s (num_starts 3; 0.0756s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-addr-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.226895s (num_starts 3; 0.0756s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);sp-ml-lb-ineq-houdini-guess.: 0.227139s (num_starts 7; 0.0324s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.227189s (num_starts 3; 0.0757s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.227351s (num_starts 3; 0.0758s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.22758s (num_starts 3; 0.0759s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.227817s (num_starts 3; 0.0759s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.228402s (num_starts 3; 0.0761s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229146s (num_starts 3; 0.0764s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229167s (num_starts 3; 0.0764s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.229247s (num_starts 1; 0.2292s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate.: 0.22926s (num_starts 1; 0.2293s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.229424s (num_starts 3; 0.0765s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI4;(epsilon).: 0.229436s (num_starts 3; 0.0765s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.230707s (num_starts 3; 0.0769s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-region-was-stack.: 0.230869s (num_starts 3; 0.0770s/start)
check_wfconds_on_edge.Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1.: 0.231742s (num_starts 3; 0.0772s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.232472s (num_starts 3; 0.0775s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-trivial.: 0.232913s (num_starts 41; 0.0057s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.233824s (num_starts 3; 0.0779s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-neq-zero.: 0.234003s (num_starts 3; 0.0780s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.234052s (num_starts 1; 0.2341s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.234064s (num_starts 1; 0.2341s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.235169s (num_starts 3; 0.0784s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.235562s (num_starts 3; 0.0785s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.235917s (num_starts 3; 0.0786s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.23646s (num_starts 3; 0.0788s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.236706s (num_starts 1; 0.2367s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate.: 0.236717s (num_starts 1; 0.2367s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.236747s (num_starts 6; 0.0395s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.237612s (num_starts 3; 0.0792s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.237766s (num_starts 3; 0.0793s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-no-overflow.: 0.237784s (num_starts 3; 0.0793s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.238839s (num_starts 2; 0.1194s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess.: 0.238917s (num_starts 2; 0.1195s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.239695s (num_starts 3; 0.0799s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;linear;-trivial.: 0.239879s (num_starts 20; 0.0120s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.24052s (num_starts 3; 0.0802s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.240936s (num_starts 2; 0.1205s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.241379s (num_starts 3; 0.0805s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);mem-allocs-equality.: 0.241519s (num_starts 3; 0.0805s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.242412s (num_starts 3; 0.0808s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.243039s (num_starts 3; 0.0810s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.243238s (num_starts 3; 0.0811s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.243331s (num_starts 3; 0.0811s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.243479s (num_starts 2; 0.1217s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess.: 0.243555s (num_starts 2; 0.1218s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);sp-below-isp-houdini-guess.: 0.243589s (num_starts 3; 0.0812s/start)
invariant_inference_xfer.sp-below-isp.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.244366s (num_starts 3; 0.0815s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-.: 0.244688s (num_starts 4; 0.0612s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.244728s (num_starts 3; 0.0816s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-alloca-addr-is-aligned.: 0.24491s (num_starts 3; 0.0816s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245009s (num_starts 3; 0.0817s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245023s (num_starts 3; 0.0817s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245264s (num_starts 3; 0.0818s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.245266s (num_starts 3; 0.0818s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI2;(epsilon).: 0.245288s (num_starts 3; 0.0818s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-dst-edgecond-implies-src-edgecond.: 0.245502s (num_starts 3; 0.0818s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245859s (num_starts 2; 0.1229s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.245869s (num_starts 2; 0.1229s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.245942s (num_starts 3; 0.0820s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess.: 0.245958s (num_starts 2; 0.1230s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.246427s (num_starts 3; 0.0821s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.246607s (num_starts 3; 0.0822s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.247338s (num_starts 3; 0.0824s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.247559s (num_starts 3; 0.0825s/start)
check_wfconds_on_edge.Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1.: 0.247981s (num_starts 3; 0.0827s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-ineq-houdini-guess.: 0.248182s (num_starts 6; 0.0414s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--rodata.from.L0%0%d_L0%0%d.: 0.248196s (num_starts 6; 0.0414s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.248376s (num_starts 3; 0.0828s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-ineq-houdini-guess.: 0.249075s (num_starts 6; 0.0415s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-ineq-houdini-guess.: 0.249277s (num_starts 6; 0.0415s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memlabel-is-absent-houdini-guess.: 0.249825s (num_starts 6; 0.0416s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.249858s (num_starts 3; 0.0833s/start)
ldr_decompose_and_linear_solve.: 0.250066s (num_starts 284; 0.0009s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.250291s (num_starts 3; 0.0834s/start)
invariant_inference_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.250399s (num_starts 3; 0.0835s/start)
invariant_inference_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.25097s (num_starts 3; 0.0837s/start)
invariant_inference_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.251116s (num_starts 3; 0.0837s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.251365s (num_starts 3; 0.0838s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.251432s (num_starts 3; 0.0838s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-neq-zero.: 0.251599s (num_starts 3; 0.0839s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-region-was-stack.: 0.251664s (num_starts 3; 0.0839s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.25173s (num_starts 3; 0.0839s/start)
invariant_inference_xfer.memlabel-is-absent.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.251754s (num_starts 3; 0.0839s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.253308s (num_starts 3; 0.0844s/start)
decide_hoare_triple_helper;per-query-type;memlabel-is-absent-houdini-guess;-trivial.: 0.253853s (num_starts 32; 0.0079s/start)
invariant_inference_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.254143s (num_starts 3; 0.0847s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-eq-lsprel-guess-houdini-guess.: 0.254463s (num_starts 6; 0.0424s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.254839s (num_starts 3; 0.0849s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.255023s (num_starts 3; 0.0850s/start)
invariant_inference_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.256377s (num_starts 3; 0.0855s/start)
query:convert_to_z3.: 0.258109s (num_starts 5404; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-.: 0.259717s (num_starts 4; 0.0649s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-addr-eq-houdini-guess.: 0.259724s (num_starts 6; 0.0433s/start)
bv_linear_solve.: 0.259798s (num_starts 284; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.260787s (num_starts 3; 0.0869s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.261014s (num_starts 3; 0.0870s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.261099s (num_starts 3; 0.0870s/start)
query:bv_solve.: 0.261225s (num_starts 284; 0.0009s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-is-aligned.: 0.261321s (num_starts 3; 0.0871s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);sp-ml-lb-ineq-houdini-guess.: 0.261411s (num_starts 6; 0.0436s/start)
decide_hoare_triple_helper;per-query-type;sp-ml-lb-ineq-houdini-guess;-trivial.: 0.261446s (num_starts 39; 0.0067s/start)
invariant_inference_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.261939s (num_starts 3; 0.0873s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.262202s (num_starts 2; 0.1311s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess.: 0.262273s (num_starts 2; 0.1311s/start)
invariant_inference_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.263145s (num_starts 3; 0.0877s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.263492s (num_starts 4; 0.0659s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-.: 0.263535s (num_starts 4; 0.0659s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.263602s (num_starts 3; 0.0879s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-alloca-addr-no-overflow.: 0.263836s (num_starts 3; 0.0879s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;ml-lb-ub-eq-houdini-guess.: 0.263944s (num_starts 4; 0.0660s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.267706s (num_starts 2; 0.1339s/start)
copy_masked_mappings.: 0.268192s (num_starts 12391; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268713s (num_starts 2; 0.1344s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.268728s (num_starts 2; 0.1344s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess.: 0.2688s (num_starts 2; 0.1344s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-eq-lsprel-guess-houdini-guess.: 0.269346s (num_starts 6; 0.0449s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.269868s (num_starts 2; 0.1349s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memlabel-is-absent-houdini-guess.: 0.270174s (num_starts 6; 0.0450s/start)
invariant_inference_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.271262s (num_starts 3; 0.0904s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-.: 0.272024s (num_starts 5; 0.0544s/start)
invariant_inference_xfer.memlabel-is-absent.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.272194s (num_starts 3; 0.0907s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);local-sizes-are-equal-houdini-guess.: 0.272966s (num_starts 6; 0.0455s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.274786s (num_starts 4; 0.0687s/start)
invariant_inference_xfer.local-sizes-are-equal.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.275706s (num_starts 3; 0.0919s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);local-eq-lsprel-guess-houdini-guess.: 0.275813s (num_starts 6; 0.0460s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-.: 0.276844s (num_starts 4; 0.0692s/start)
invariant_inference_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.278002s (num_starts 3; 0.0927s/start)
invariant_inference_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.281293s (num_starts 3; 0.0938s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);local-sizes-are-equal-houdini-guess.: 0.286236s (num_starts 6; 0.0477s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;memlabel-is-absent-houdini-guess.: 0.287314s (num_starts 8; 0.0359s/start)
invariant_inference_xfer.local-sizes-are-equal.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.288914s (num_starts 3; 0.0963s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.289726s (num_starts 6; 0.0483s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.290195s (num_starts 4; 0.0725s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.29064s (num_starts 4; 0.0727s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;-dst-edgecond-implies-src-edgecond.: 0.290802s (num_starts 4; 0.0727s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memlabel-is-absent-houdini-guess.: 0.292384s (num_starts 6; 0.0487s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;ml-lb-ub-eq-houdini-guess.: 0.292642s (num_starts 5; 0.0585s/start)
counter_example_evaluate_preds.: 0.296153s (num_starts 1765; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.297758s (num_starts 4; 0.0744s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;-dst-edgecond-implies-src-edgecond.: 0.297982s (num_starts 4; 0.0745s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;ml-lb-ub-eq-houdini-guess.: 0.299558s (num_starts 4; 0.0749s/start)
decide_hoare_triple_helper;per-query-type;mem-allocs-equality;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.299654s (num_starts 4; 0.0749s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.299834s (num_starts 4; 0.0750s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-.: 0.299881s (num_starts 4; 0.0750s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.300737s (num_starts 3; 0.1002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.300881s (num_starts 3; 0.1003s/start)
expr_try_converting_unaliased_memslots_to_fresh_vars.: 0.301658s (num_starts 434; 0.0007s/start)
bv_solve_returning_intermediate_structures.: 0.302111s (num_starts 284; 0.0011s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.304772s (num_starts 4; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-.: 0.305s (num_starts 4; 0.0762s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;linear;-trivial.: 0.308751s (num_starts 26; 0.0119s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.309628s (num_starts 3; 0.1032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.309634s (num_starts 3; 0.1032s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.309761s (num_starts 3; 0.1033s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.312035s (num_starts 4; 0.0780s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;-dst-edgecond-implies-src-edgecond.: 0.312236s (num_starts 4; 0.0781s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.314214s (num_starts 3; 0.1047s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.314237s (num_starts 3; 0.1047s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.314354s (num_starts 3; 0.1048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.31439s (num_starts 3; 0.1048s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.314515s (num_starts 3; 0.1048s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);memeq-.: 0.322708s (num_starts 15; 0.0215s/start)
invariant_inference_xfer.mem-allocs-equality.from.L0%0%d_L0%0%d.: 0.325406s (num_starts 6; 0.0542s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.328632s (num_starts 5; 0.0657s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.334438s (num_starts 6; 0.0557s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.336612s (num_starts 4; 0.0842s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-.: 0.336856s (num_starts 4; 0.0842s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.339311s (num_starts 4; 0.0848s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-.: 0.339497s (num_starts 4; 0.0849s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.341474s (num_starts 6; 0.0569s/start)
bvsolve_cache_query.miss1.: 0.342527s (num_starts 284; 0.0012s/start)
populate_simplified_to_state.: 0.344527s (num_starts 72; 0.0048s/start)
bvsolve_cache_query.: 0.346772s (num_starts 284; 0.0012s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;sp-ml-lb-ineq-houdini-guess.: 0.348572s (num_starts 9; 0.0387s/start)
dst_edge_composition_proves_false.: 0.352136s (num_starts 1; 0.3521s/start)
populate_simplified_assets.: 0.352394s (num_starts 144; 0.0024s/start)
get_next_dst_edge_composition_to_correlate.: 0.353419s (num_starts 1; 0.3534s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.354194s (num_starts 3; 0.1181s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.354322s (num_starts 3; 0.1181s/start)
invariant_inference_xfer.memlabel-is-absent.from.L0%0%d_L0%0%d.: 0.356075s (num_starts 6; 0.0593s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.356385s (num_starts 2; 0.1782s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.362542s (num_starts 3; 0.1208s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.362565s (num_starts 3; 0.1209s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.362705s (num_starts 3; 0.1209s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;false-predicate.: 0.362905s (num_starts 3; 0.1210s/start)
decide_hoare_triple_helper;per-query-type;abstract-memlabel-asserts-houdini-guess.: 0.370081s (num_starts 21; 0.0176s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.370643s (num_starts 2; 0.1853s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.378631s (num_starts 2; 0.1893s/start)
src_tfg_counter_example_translate_on_edge_composition.delta1.: 0.379246s (num_starts 286; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;false-predicate.: 0.3794s (num_starts 3; 0.1265s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;memeq-.: 0.37978s (num_starts 15; 0.0253s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.380474s (num_starts 4; 0.0951s/start)
src_tfg_counter_example_translate_on_edge_composition.: 0.380537s (num_starts 286; 0.0013s/start)
decide_hoare_triple_helper;per-query-type;sp-below-isp-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.382735s (num_starts 5; 0.0765s/start)
dst_tfg_counter_example_translate_on_edge_composition.: 0.384246s (num_starts 286; 0.0013s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.38816s (num_starts 9; 0.0431s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;false-predicate.: 0.39391s (num_starts 3; 0.1313s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-addr-eq-houdini-guess.: 0.403516s (num_starts 30; 0.0135s/start)
decide_hoare_triple_helper;per-query-type;sp-ml-lb-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.405698s (num_starts 4; 0.1014s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.406592s (num_starts 6; 0.0678s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.411526s (num_starts 5; 0.0823s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.411553s (num_starts 5; 0.0823s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-.: 0.411803s (num_starts 5; 0.0824s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.412694s (num_starts 2; 0.2063s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess.: 0.412745s (num_starts 2; 0.2064s/start)
src_dst_cg_path_tuple_apply_trans_funs_on_pred.: 0.413676s (num_starts 904; 0.0005s/start)
edge_composition_apply_trans_funs_on_pred.: 0.414261s (num_starts 847; 0.0005s/start)
populate_auxilliary_structures_dependent_on_locs.: 0.416632s (num_starts 72; 0.0058s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.420607s (num_starts 9; 0.0467s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.42408s (num_starts 5; 0.0848s/start)
solve_for_bv_points.: 0.424957s (num_starts 284; 0.0015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.433342s (num_starts 2; 0.2167s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess.: 0.433364s (num_starts 2; 0.2167s/start)
query:convert_from_z3.: 0.433415s (num_starts 5404; 0.0001s/start)
expr_substitute_using_available_exprs_submap.: 0.44092s (num_starts 1501; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.44109s (num_starts 5; 0.0882s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-.: 0.441293s (num_starts 5; 0.0883s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.442826s (num_starts 9; 0.0492s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(epsilon).: 0.446601s (num_starts 7; 0.0638s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.462382s (num_starts 6; 0.0771s/start)
decide_hoare_triple_helper;per-query-type;memeq-;-trivial.: 0.462845s (num_starts 48; 0.0096s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-iscontiguous-houdini-guess.: 0.462876s (num_starts 6; 0.0771s/start)
predicate_canonicalized.: 0.46295s (num_starts 4824; 0.0001s/start)
invariant_inference_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.46504s (num_starts 3; 0.1550s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.465949s (num_starts 2; 0.2330s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.472884s (num_starts 3; 0.1576s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);false-predicate.: 0.474962s (num_starts 3; 0.1583s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.4776s (num_starts 6; 0.0796s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-iscontiguous-houdini-guess.: 0.478124s (num_starts 6; 0.0797s/start)
graph_edge_composition_get_simplified_edge_cond.: 0.478665s (num_starts 19830; 0.0000s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;ml-lb-ub-eq-houdini-guess.: 0.479867s (num_starts 4; 0.1200s/start)
invariant_inference_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.48046s (num_starts 3; 0.1602s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.481159s (num_starts 6; 0.0802s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.481638s (num_starts 6; 0.0803s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;memeq-.: 0.482103s (num_starts 15; 0.0321s/start)
invariant_inference_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.484503s (num_starts 3; 0.1615s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.48747s (num_starts 3; 0.1625s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);false-predicate.: 0.487634s (num_starts 3; 0.1625s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.: 0.488575s (num_starts 6; 0.0814s/start)
decide_hoare_triple_helper;per-query-type;local-sizes-are-equal-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.489537s (num_starts 6; 0.0816s/start)
decide_hoare_triple_helper;per-query-type;mem-allocs-equality.: 0.491881s (num_starts 21; 0.0234s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.493357s (num_starts 5; 0.0987s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.49821s (num_starts 6; 0.0830s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);nonarg-locals-isprobably-contiguous-houdini-guess.: 0.498716s (num_starts 6; 0.0831s/start)
decide_hoare_triple_helper;per-query-type;sp-below-isp-houdini-guess.: 0.499112s (num_starts 21; 0.0238s/start)
invariant_inference_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.501679s (num_starts 3; 0.1672s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.503627s (num_starts 3; 0.1679s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);false-predicate.: 0.503788s (num_starts 3; 0.1679s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);-trivial.: 0.50476s (num_starts 72; 0.0070s/start)
tfg_run_pointsto_analysis_asm.: 0.517802s (num_starts 1; 0.5178s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recomputed_preds_would_be_different_from_current_preds.: 0.524864s (num_starts 284; 0.0018s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);-trivial.: 0.528139s (num_starts 62; 0.0085s/start)
graph_per_loc_dfa_val_t<avail_exprs_val_t>::meet.: 0.52892s (num_starts 111; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.540645s (num_starts 7; 0.0772s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;expr-group-region_agrees_with_memlabel-houdini-guess.: 0.547345s (num_starts 9; 0.0608s/start)
compute_new_lr_status_on_locs.calling.compute_lr_status_for_expr.: 0.551436s (num_starts 1206; 0.0005s/start)
compute_new_lr_status_on_locs.loc_lr_status.simplify_and_compute_lr_status.: 0.553242s (num_starts 1206; 0.0005s/start)
tfg_edge_composition_get_edge_cond_using_econd_fn.: 0.554208s (num_starts 2454; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.Lentry%1%allocaI4_L0%1%allocaI4.inductive-invariants.: 0.557323s (num_starts 54; 0.0103s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);-trivial.: 0.562862s (num_starts 65; 0.0087s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.563219s (num_starts 8; 0.0704s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.563242s (num_starts 3; 0.1877s/start)
avail_exprs_val_t::generate_vals_from_gen_set.: 0.566127s (num_starts 111; 0.0051s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.571925s (num_starts 3; 0.1906s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.571969s (num_starts 7; 0.0817s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);false-predicate.: 0.572101s (num_starts 3; 0.1907s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;false-predicate.: 0.572354s (num_starts 4; 0.1431s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.581782s (num_starts 5; 0.1164s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);ml-lb-ub-eq-houdini-guess.: 0.582109s (num_starts 5; 0.1164s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.586108s (num_starts 3; 0.1954s/start)
graph_with_guessing_relax_dst_memlabels_on_ec_for_corr_graph.: 0.596476s (num_starts 21; 0.0284s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.602002s (num_starts 3; 0.2007s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);false-predicate.: 0.602177s (num_starts 3; 0.2007s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);ml-lb-ub-eq-houdini-guess.: 0.604358s (num_starts 6; 0.1007s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);memeq-.: 0.608935s (num_starts 12; 0.0507s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.623147s (num_starts 3; 0.2077s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);false-predicate.: 0.623356s (num_starts 3; 0.2078s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;memeq-.: 0.629065s (num_starts 16; 0.0393s/start)
compute_lr_status_for_expr.: 0.635677s (num_starts 2536; 0.0003s/start)
avail_exprs_create_submap.: 0.640245s (num_starts 333; 0.0019s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-ub-ineq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.651204s (num_starts 9; 0.0724s/start)
decide_hoare_triple_helper;per-query-type;sp-ml-lb-ineq-houdini-guess.: 0.668188s (num_starts 43; 0.0155s/start)
decide_hoare_triple_helper;per-query-type;local-sizes-are-equal-houdini-guess.: 0.668397s (num_starts 30; 0.0223s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;memeq-.: 0.683416s (num_starts 15; 0.0456s/start)
invariant_inference_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.691321s (num_starts 3; 0.2304s/start)
guarded_predicate_set_and.: 0.692648s (num_starts 434; 0.0016s/start)
decide_hoare_triple_helper;per-query-type;local-eq-lsprel-guess-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.695862s (num_starts 9; 0.0773s/start)
invariant_inference_xfer.expr-group-bvs.from.Lentry%2%allocaI3_L0%1%allocaI1.: 0.725229s (num_starts 3; 0.2417s/start)
decide_hoare_triple_helper;per-query-type;memlabel-is-absent-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.727445s (num_starts 10; 0.0727s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);-trivial.: 0.728872s (num_starts 110; 0.0066s/start)
decide_hoare_triple_helper;per-query-type;-alloca-region-was-stack;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.729546s (num_starts 9; 0.0811s/start)
decide_hoare_triple_helper;per-query-type;-alloca-region-was-stack.: 0.73005s (num_starts 9; 0.0811s/start)
decide_hoare_triple_helper;per-query-type;-alloca-addr-neq-zero;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.731649s (num_starts 9; 0.0813s/start)
decide_hoare_triple_helper;per-query-type;-alloca-addr-neq-zero.: 0.732173s (num_starts 9; 0.0814s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.738861s (num_starts 10; 0.0739s/start)
../../include/graph/smallest_point_cover.h.smallest_point_cover_add_point_using_CE.: 0.748189s (num_starts 5424; 0.0001s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.753332s (num_starts 6; 0.1256s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);ml-lb-ub-eq-houdini-guess.: 0.753739s (num_starts 6; 0.1256s/start)
decide_hoare_triple_helper;per-query-type;-alloca-addr-no-overflow;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.756088s (num_starts 9; 0.0840s/start)
decide_hoare_triple_helper;per-query-type;-alloca-addr-no-overflow.: 0.756606s (num_starts 9; 0.0841s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.758526s (num_starts 4; 0.1896s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;false-predicate.: 0.758677s (num_starts 4; 0.1897s/start)
decide_hoare_triple_helper;per-query-type;-alloca-addr-is-aligned;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.766648s (num_starts 9; 0.0852s/start)
decide_hoare_triple_helper;per-query-type;-alloca-addr-is-aligned.: 0.767207s (num_starts 9; 0.0852s/start)
lhs_set_sort.: 0.771982s (num_starts 434; 0.0018s/start)
invariant_inference_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI4_L0%1%allocaI4.: 0.77762s (num_starts 3; 0.2592s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;memeq-.: 0.798352s (num_starts 16; 0.0499s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-ub-ineq-houdini-guess.: 0.81033s (num_starts 30; 0.0270s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.82566s (num_starts 10; 0.0826s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.826783s (num_starts 4; 0.2067s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;false-predicate.: 0.826954s (num_starts 4; 0.2067s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.845306s (num_starts 6; 0.1409s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.846002s (num_starts 4; 0.2115s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.849646s (num_starts 5; 0.1699s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;ml-lb-ub-eq-houdini-guess.: 0.852313s (num_starts 6; 0.1421s/start)
decide_hoare_triple_helper;per-query-type;local-eq-lsprel-guess-houdini-guess.: 0.862333s (num_starts 30; 0.0287s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);ml-lb-ub-eq-houdini-guess.: 0.864184s (num_starts 6; 0.1440s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.866016s (num_starts 11; 0.0787s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);memeq-.: 0.87355s (num_starts 12; 0.0728s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);memeq-.: 0.889317s (num_starts 12; 0.0741s/start)
add_fresh_counterexample_at_pc_and_propagate.Lentry%1%allocaI3_L0%1%allocaI3.inductive-invariants.: 0.893392s (num_starts 61; 0.0146s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.894462s (num_starts 5; 0.1789s/start)
collect_inductive_preds_around_path.: 0.898217s (num_starts 989; 0.0009s/start)
query:simplify-z3.: 0.899375s (num_starts 10808; 0.0001s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;ml-lb-ub-eq-houdini-guess.: 0.905607s (num_starts 6; 0.1509s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);-trivial.: 0.909718s (num_starts 110; 0.0083s/start)
invariant_inference_xfer.expr-group-bvs.from.Lentry%1%allocaI4_L0%1%allocaI2.: 0.912643s (num_starts 3; 0.3042s/start)
segment_memory_and_perform_commonMEM_optimization.: 0.926407s (num_starts 434; 0.0021s/start)
decide_hoare_triple_helper;per-query-type;linear;-trivial.: 0.936453s (num_starts 139; 0.0067s/start)
gen_pred_from_coeff_row.simplify.: 0.938673s (num_starts 3353; 0.0003s/start)
decide_hoare_triple_helper;per-query-type;nonarg-locals-iscontiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.940057s (num_starts 12; 0.0783s/start)
counter_example_translate_on_edge_composition_helper.: 0.947686s (num_starts 1732; 0.0005s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.969133s (num_starts 9; 0.1077s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.969827s (num_starts 9; 0.1078s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI3_L0%1%allocaI3.: 0.973523s (num_starts 3; 0.3245s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.975679s (num_starts 12; 0.0813s/start)
decide_hoare_triple_helper;per-query-type;nonarg-locals-iscontiguous-houdini-guess.: 0.975854s (num_starts 18; 0.0542s/start)
decide_hoare_triple_helper;per-query-type;nonarg-locals-isprobably-contiguous-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.979431s (num_starts 12; 0.0816s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.979624s (num_starts 5; 0.1959s/start)
decide_hoare_triple_helper;per-query-type;memlabel-is-absent-houdini-guess.: 0.982685s (num_starts 42; 0.0234s/start)
add_fresh_counterexample_at_pc_and_propagate.Lentry%1%allocaI3_L0%1%allocaI1.inductive-invariants.: 0.985799s (num_starts 66; 0.0149s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 0.98628s (num_starts 9; 0.1096s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);expr-group-region_agrees_with_memlabel-houdini-guess.: 0.986976s (num_starts 9; 0.1097s/start)
invariant_inference_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI3_L0%1%allocaI1.: 0.990509s (num_starts 3; 0.3302s/start)
reconcile_memvar_using_constituents.: 0.998277s (num_starts 2020; 0.0005s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.sprel.: 1.00089s (num_starts 5908; 0.0002s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear.: 1.00684s (num_starts 11; 0.0915s/start)
invariant_inference_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI3_L0%1%allocaI1.: 1.00764s (num_starts 3; 0.3359s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.01983s (num_starts 5; 0.2040s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;memeq-.: 1.02225s (num_starts 16; 0.0639s/start)
reconcile_segmentation_in_counter_example.: 1.02254s (num_starts 189; 0.0054s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI2;(Lentry%1%allocaI4_L0%1%allocaI2=>Lentry%2%allocaI3_L0%2%allocaI1).: 1.04203s (num_starts 33; 0.0316s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_expr_is_provable.: 1.04236s (num_starts 434; 0.0024s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.04602s (num_starts 6; 0.1743s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear.: 1.05908s (num_starts 10; 0.1059s/start)
decide_hoare_triple_helper;per-query-type;nonarg-locals-isprobably-contiguous-houdini-guess.: 1.07888s (num_starts 30; 0.0360s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear.: 1.08256s (num_starts 14; 0.0773s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.08489s (num_starts 13; 0.0835s/start)
apply_mask_and_overlay_array_constant.mk_array_constant.: 1.11824s (num_starts 4028; 0.0003s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.12291s (num_starts 4; 0.2807s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);memeq-.: 1.12529s (num_starts 15; 0.0750s/start)
ce_reconcile_sorts.: 1.14507s (num_starts 263; 0.0044s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.15096s (num_starts 7; 0.1644s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.1632s (num_starts 7; 0.1662s/start)
eqspace::graph_per_loc_dfa_val_t<eqspace::avail_exprs_val_t>::ftmap_xfer_and_meet_flow_insensitive.: 1.16339s (num_starts 111; 0.0105s/start)
lhs_set_eliminate_constructs_that_the_solver_cannot_handle.: 1.1661s (num_starts 434; 0.0027s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.17397s (num_starts 15; 0.0783s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI3;(epsilon).: 1.175s (num_starts 15; 0.0783s/start)
check_wfconds_on_edge.Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4.: 1.18526s (num_starts 3; 0.3951s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear.: 1.18875s (num_starts 23; 0.0517s/start)
prove_spawn_and_join.eliminate_constructs_that_the_solver_cannot_handle1.: 1.19848s (num_starts 434; 0.0028s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear.: 1.21113s (num_starts 11; 0.1101s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear.: 1.2378s (num_starts 14; 0.0884s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.25266s (num_starts 15; 0.0835s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.25349s (num_starts 5; 0.2507s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI1;(epsilon).: 1.25385s (num_starts 15; 0.0836s/start)
check_wfconds_on_edge.Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2.: 1.26449s (num_starts 3; 0.4215s/start)
decide_hoare_triple_helper;per-path;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.27235s (num_starts 15; 0.0848s/start)
decide_hoare_triple_helper;per-path;Lentry%2%allocaI3_L0%1%allocaI1;(epsilon).: 1.2737s (num_starts 15; 0.0849s/start)
check_wfconds_on_edge.Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2.: 1.28459s (num_starts 3; 0.4282s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear.: 1.29073s (num_starts 12; 0.1076s/start)
put_smtlib_string_in_file.: 1.32289s (num_starts 716; 0.0018s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.38846s (num_starts 18; 0.0771s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.41571s (num_starts 8; 0.1770s/start)
apply_mask_and_overlay_array_constant.: 1.42488s (num_starts 4028; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;-dst-edgecond-implies-src-edgecond.: 1.42745s (num_starts 21; 0.0680s/start)
decide_hoare_triple_helper;per-path;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.44873s (num_starts 13; 0.1114s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.52697s (num_starts 9; 0.1697s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear.: 1.54225s (num_starts 19; 0.0812s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.59248s (num_starts 10; 0.1592s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear.: 1.59726s (num_starts 23; 0.0694s/start)
decide_hoare_triple_helper;per-path;Lentry%2%allocaI3_L0%1%allocaI1;(Lentry%2%allocaI3_L0%1%allocaI1=>Lentry%2%allocaI4_L0%1%allocaI2).: 1.61277s (num_starts 30; 0.0538s/start)
invariant_inference_xfer.ml-lb-ub-eq.from.L0%0%d_L0%0%d.: 1.70376s (num_starts 6; 0.2840s/start)
tfg_relax_pointsto_vals_on_edge.: 1.71567s (num_starts 91; 0.0189s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A7;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear.: 1.72787s (num_starts 21; 0.0823s/start)
gen_pred_from_coeff_row.: 1.73488s (num_starts 3353; 0.0005s/start)
compute_preds_for_bv_points.: 1.76778s (num_starts 307; 0.0058s/start)
eqspace::smallest_point_cover_bv_t<eqspace::pcpair, eqspace::corr_graph_node, eqspace::corr_graph_edge, eqspace::predicate>.recompute_preds_for_points.: 1.76932s (num_starts 346; 0.0051s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 1.78953s (num_starts 11; 0.1627s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A8;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear.: 1.91516s (num_starts 21; 0.0912s/start)
update_dst_edge_for_local_allocations_and_deallocations.: 2.03048s (num_starts 9; 0.2256s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.09948s (num_starts 11; 0.1909s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A4;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear.: 2.13894s (num_starts 19; 0.1126s/start)
parse_z3_model_neo.: 2.21285s (num_starts 251; 0.0088s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.21647s (num_starts 11; 0.2015s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A1;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear.: 2.23909s (num_starts 20; 0.1120s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().graph_ec_apply_trans_funs_using_wp_fn.: 2.25611s (num_starts 13868; 0.0002s/start)
add_fresh_counterexample_at_pc_and_propagate.L0%0%d_L0%0%d.inductive-invariants.: 2.26525s (num_starts 97; 0.0234s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.28416s (num_starts 23; 0.0993s/start)
read_counter_examples_from_channel.: 2.35907s (num_starts 132; 0.0179s/start)
graph_ec_apply_trans_funs_helper.0.: 2.38998s (num_starts 15688; 0.0002s/start)
expr_label_memlabels_using_memlabel_map_visitor.simplify.: 2.48693s (num_starts 6146; 0.0004s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.model.: 2.48753s (num_starts 5908; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;expr-group-region_agrees_with_memlabel-houdini-guess.: 2.49341s (num_starts 45; 0.0554s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.532s (num_starts 12; 0.2110s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A2;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear.: 2.55706s (num_starts 21; 0.1218s/start)
expr_simplify_using_sprel_pair_and_memlabel_maps.: 2.61503s (num_starts 5908; 0.0004s/start)
compute_new_lr_status_on_locs.: 2.7272s (num_starts 111; 0.0246s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 2.91235s (num_starts 15; 0.1942s/start)
graph_ec_apply_trans_funs_helper.1.: 2.91848s (num_starts 7148; 0.0004s/start)
pth_collect_preds_using_atom_func_and_wp_fn.operator().: 2.93328s (num_starts 10016; 0.0003s/start)
tfg_get_preimage_for_expr_across_edge_composition.computeWP_for_pred_across_ec.: 2.97648s (num_starts 7040; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-ub-eq-houdini-guess;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.00134s (num_starts 19; 0.1580s/start)
decide_hoare_triple_helper;per-query-type;ml-lb-ub-eq-houdini-guess.: 3.09401s (num_starts 29; 0.1067s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.12219s (num_starts 14; 0.2230s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A8;linear.: 3.15305s (num_starts 35; 0.0901s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.18399s (num_starts 11; 0.2895s/start)
decide_hoare_triple_helper;per-graph-per-path-per-query-type;main.A5;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear.: 3.24085s (num_starts 22; 0.1473s/start)
decide_hoare_triple_helper;per-query-type;false-predicate;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.25415s (num_starts 17; 0.1914s/start)
computeWP_for_pred_across_ec.graph_ec_apply_trans_funs_using_wp_fn.: 3.28749s (num_starts 8968; 0.0004s/start)
decide_hoare_triple_helper;per-query-type;false-predicate.: 3.29426s (num_starts 21; 0.1569s/start)
computeWP_for_pred_across_ec.: 3.30741s (num_starts 8968; 0.0004s/start)
ftmap_pointsto_analysis_combo_dfa_t.alias_val_xfer_and_meet.: 3.32169s (num_starts 20; 0.1661s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);linear.: 3.32745s (num_starts 39; 0.0853s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.46249s (num_starts 18; 0.1924s/start)
ftmap_pointsto_analysis_combo_dfa_t.ftmap_dfa_flow_insensitive_xfer_and_meet.: 3.48912s (num_starts 20; 0.1745s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.51155s (num_starts 17; 0.2066s/start)
decide_hoare_triple_helper;per-query-type;memeq-;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.52862s (num_starts 45; 0.0784s/start)
decide_hoare_triple_helper;per-path-and-query-type;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);linear.: 3.56114s (num_starts 33; 0.1079s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A2;linear.: 3.56397s (num_starts 32; 0.1114s/start)
pth_collect_preds_using_atom_func_and_wp_fn.: 3.57319s (num_starts 4308; 0.0008s/start)
pth_collect_simplified_preds_using_atom_func.: 3.57883s (num_starts 4200; 0.0009s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 3.60303s (num_starts 19; 0.1896s/start)
decide_hoare_triple_helper;-trivial.: 3.6588s (num_starts 466; 0.0079s/start)
corr_graph::add_edge().: 3.81311s (num_starts 30; 0.1271s/start)
decide_hoare_triple_helper;per-query-type;memeq-.: 3.99522s (num_starts 93; 0.0430s/start)
corr_graph_create_and_add_cg_edge_composition_using_src_and_dst_fp.: 4.09255s (num_starts 9; 0.4547s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.09334s (num_starts 24; 0.1706s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.17125s (num_starts 25; 0.1668s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.20372s (num_starts 16; 0.2627s/start)
corr_graph::get_simplified_non_mem_assumes_helper.: 4.23965s (num_starts 3345; 0.0013s/start)
corr_graph::get_simplified_non_mem_assumes.: 4.24601s (num_starts 3345; 0.0013s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A5;linear.: 4.32352s (num_starts 36; 0.1201s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);linear.: 4.32864s (num_starts 65; 0.0666s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.41336s (num_starts 24; 0.1839s/start)
check_preds_on_edge_compositions.dhd_with_ce_propagation.: 4.4319s (num_starts 57; 0.0778s/start)
collect_assumes_around_path_helper.: 4.45716s (num_starts 925; 0.0048s/start)
check_preds_on_edge_compositions.: 4.45734s (num_starts 21; 0.2123s/start)
check_wfconds_on_edge.: 4.45808s (num_starts 21; 0.2123s/start)
graph_with_paths::collect_assumes_around_path.: 4.45988s (num_starts 925; 0.0048s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A7;linear.: 4.48138s (num_starts 51; 0.0879s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A1;linear.: 4.48702s (num_starts 53; 0.0847s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI1).: 4.51616s (num_starts 129; 0.0350s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 4.87981s (num_starts 25; 0.1952s/start)
add_fresh_counterexample_at_pc_and_propagate.: 4.9254s (num_starts 284; 0.0173s/start)
decide_hoare_triple_helper;per-graph-per-query-type;main.A4;linear.: 5.02707s (num_starts 54; 0.0931s/start)
graph_ec_apply_trans_funs_helper.: 5.37044s (num_starts 22836; 0.0002s/start)
graph_ec_apply_trans_funs_using_wp_fn.: 5.40877s (num_starts 22836; 0.0002s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 5.90802s (num_starts 32; 0.1846s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);linear.: 6.10627s (num_starts 60; 0.1018s/start)
corr_graph_add_correlation.: 6.12336s (num_starts 9; 0.6804s/start)
corr_graph_add_correlation_and_create_new_correl_entry.: 6.12356s (num_starts 9; 0.6804s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.16333s (num_starts 42; 0.1467s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 6.46785s (num_starts 48; 0.1347s/start)
invariant_inference_xfer.expr-group-bvs.from.Lentry%1%allocaI4_L0%1%allocaI4.: 6.57697s (num_starts 3; 2.1923s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI4_L0%1%allocaI4;(Lentry%1%allocaI4_L0%1%allocaI4=>Lentry%2%allocaI3_L0%1%allocaI1).: 6.89902s (num_starts 152; 0.0454s/start)
decide_hoare_triple_helper;per-path;L0%0%d_L0%0%d;(L0%0%d_L0%0%d=>Lentry%1%allocaI3_L0%1%allocaI3).: 6.97629s (num_starts 120; 0.0581s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 7.50506s (num_starts 34; 0.2207s/start)
decide_hoare_triple_helper;per-path-and-query-type;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);linear.: 7.7135s (num_starts 64; 0.1205s/start)
tfg_llvm_t::tfg_postprocess_after_pointsto_analysis.: 8.18279s (num_starts 1; 8.1828s/start)
invariant_inference_xfer.expr-group-bvs.from.Lentry%1%allocaI3_L0%1%allocaI3.: 8.34416s (num_starts 3; 2.7814s/start)
tfg_postprocess_after_pointsto_analysis.: 8.35552s (num_starts 2; 4.1778s/start)
liveness_analysis_conservative::xfer_and_meet.: 8.64294s (num_starts 126; 0.0686s/start)
populate_loc_liveness.: 8.6714s (num_starts 12; 0.7226s/start)
corr_graph_update_dst_to_src_submaps_for_cg_edge.: 9.81937s (num_starts 166; 0.0592s/start)
invariant_inference_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.: 10.8231s (num_starts 6; 1.8038s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 10.8243s (num_starts 85; 0.1273s/start)
decide_hoare_triple_with_alias_cons.ce.: 11.1577s (num_starts 766; 0.0146s/start)
invariant_inference_xfer.expr-group-bvs.from.Lentry%1%allocaI3_L0%1%allocaI1.: 11.2417s (num_starts 3; 3.7472s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI3;(Lentry%1%allocaI3_L0%1%allocaI3=>Lentry%1%allocaI4_L0%1%allocaI4).: 11.3614s (num_starts 147; 0.0773s/start)
tfg_run_pointsto_analysis.: 11.3675s (num_starts 1; 11.3675s/start)
ftmap_run_pointsto_analysis.: 11.8852s (num_starts 2; 5.9426s/start)
tfg_populate_structs_after_ssa_construction.: 11.8991s (num_starts 2; 5.9495s/start)
tfg_ssa_construct_from_non_ssa_tfg.: 11.922s (num_starts 2; 5.9610s/start)
expr_do_simplify_using_lhs_set_and_precond.: 12.6452s (num_starts 3348; 0.0038s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2);-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 12.749s (num_starts 89; 0.1432s/start)
decide_hoare_triple_helper;per-path;Lentry%1%allocaI3_L0%1%allocaI1;(Lentry%1%allocaI3_L0%1%allocaI1=>Lentry%1%allocaI4_L0%1%allocaI2).: 13.3214s (num_starts 154; 0.0865s/start)
decide_hoare_triple_helper;per-query-type;linear;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 24.0915s (num_starts 122; 0.1975s/start)
decide_hoare_triple_helper;per-query-type;linear.: 25.0365s (num_starts 261; 0.0959s/start)
query:smt.: 31.497s (num_starts 358; 0.0880s/start)
solver_provable.: 37.9611s (num_starts 434; 0.0875s/start)
solver_satisfiable-cache-miss.: 38.069s (num_starts 358; 0.1063s/start)
solver_satisfiable.: 38.0727s (num_starts 435; 0.0875s/start)
expr_is_provable.: 38.4275s (num_starts 434; 0.0885s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_commonMEM_optimization.: 39.4756s (num_starts 434; 0.0910s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_aliasing_constraints_generation.: 41.0598s (num_starts 434; 0.0946s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_simplify_and_add_auxiliary_structures.: 41.0715s (num_starts 434; 0.0946s/start)
is_expr_equal_using_lhs_set_and_precond_helper_miss_after_precond_is_false.: 41.8692s (num_starts 434; 0.0965s/start)
is_expr_equal_using_lhs_set_and_precond_helper.syntactic_check_failed.: 41.8983s (num_starts 434; 0.0965s/start)
is_expr_equal_using_lhs_set_and_precond_helper.: 41.9075s (num_starts 434; 0.0966s/start)
is_expr_equal_using_lhs_set_and_precond.: 41.9163s (num_starts 434; 0.0966s/start)
prove.: 41.9251s (num_starts 434; 0.0966s/start)
prove_spawn_and_join_helper.: 41.9273s (num_starts 434; 0.0966s/start)
prove_spawn_and_join.: 44.0255s (num_starts 434; 0.1014s/start)
prove_wrapper.proof_query_not_trivial.: 44.2577s (num_starts 434; 0.1020s/start)
prove_wrapper.: 44.3755s (num_starts 823; 0.0539s/start)
decide_hoare_triple_check_ub.: 44.8379s (num_starts 823; 0.0545s/start)
decide_hoare_triple_helper;-used-quantifiers-stack-not-modeled-as-separate-mem-nonstack-not-modeled-as-common-mem.: 46.4991s (num_starts 356; 0.1306s/start)
decide_hoare_triple_helper.: 50.4132s (num_starts 823; 0.0613s/start)
decide_hoare_triple_with_alias_cons.: 61.5855s (num_starts 823; 0.0748s/start)
update_invariant_state_for_edges.: 62.4076s (num_starts 6; 10.4013s/start)
cg_check_new_cg_ec.: 62.4079s (num_starts 6; 10.4013s/start)
correl_entry_apply.: 62.4079s (num_starts 6; 10.4013s/start)
expandProductCFG.: 62.7875s (num_starts 7; 8.9696s/start)
bestFirstSearch.: 69.0984s (num_starts 1; 69.0984s/start)
Time taken for equivalence check.: 69.0994s (num_starts 1; 69.0994s/start)

counters:
# of Paths Prunned through CE propagation.: 3
# of assume sat failures for cg-edge-assume-alloca-ptr-eq.: 221
# of assume sat failures for cg-edge-assume-unknown.: 262
# of correlations rejected by -dst-edgecond-implies-src-edgecond check.: 4
# of correlations rejected by unknown.: 2
# of paths enumerated.: 6
# of paths expanded.: 6
# of queries to linear solver.: 284
# of smt-solver-queries.: 358
Memory Fuzing CE.: 3
num-backtrackings.: 5
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.abstract-memlabel-asserts.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.abstract-memlabel-asserts.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.iters.: 41
smallest_point_cover_xfer.expr-group-bvs.from.L0%0%d_L0%0%d.prove_queries.: 49
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 34
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 37
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 31
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 35
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 3
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 27
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 27
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.expr-group-bvs.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.L0%0%d_L0%0%d.prove_queries.: 18
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 9
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 9
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.expr-group-region_agrees_with_memlabel.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.local-eq-lsprel-guess.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.local-eq-lsprel-guess.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.local-eq-lsprel-guess.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.local-sizes-are-equal.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.local-sizes-are-equal.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.local-sizes-are-equal.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 0
smallest_point_cover_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 0
smallest_point_cover_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 0
smallest_point_cover_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 0
smallest_point_cover_xfer.locals-ub-upper-bound.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.mem-allocs-equality.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.mem-allocs-equality.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 0
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.mem-allocs-equality.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.memlabel-is-absent.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.memlabel-is-absent.from.L0%0%d_L0%0%d.prove_queries.: 12
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memlabel-is-absent.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--heap.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.L0%0%d_L0%0%d.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.L0%0%d_L0%0%d.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--local./*___y___main__x__=Lentry%2%d=/.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--rodata.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.2.0.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.memory-equality-memlabel-mem--symbol.3.0.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.ml-lb-addr-eq.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.ml-lb-addr-eq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 0
smallest_point_cover_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.ml-lb-addr-eq.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 3
smallest_point_cover_xfer.ml-lb-ub-eq.from.L0%0%d_L0%0%d.iters.: 12
smallest_point_cover_xfer.ml-lb-ub-eq.from.L0%0%d_L0%0%d.prove_queries.: 12
smallest_point_cover_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 6
smallest_point_cover_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 6
smallest_point_cover_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 5
smallest_point_cover_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 5
smallest_point_cover_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 6
smallest_point_cover_xfer.ml-lb-ub-eq.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 3
smallest_point_cover_xfer.ml-lb-ub-ineq.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.ml-lb-ub-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 3
smallest_point_cover_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 3
smallest_point_cover_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.ml-lb-ub-ineq.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 3
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.L0%0%d_L0%0%d.iters.: 0
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 6
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 6
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.nonarg-locals-iscontiguous.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 6
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 6
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.nonarg-locals-isprobably-contiguous.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.sp-below-isp.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.sp-below-isp.from.L0%0%d_L0%0%d.prove_queries.: 6
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 3
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 0
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI4_L0%1%allocaI2.iters.: 3
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI4_L0%1%allocaI2.prove_queries.: 3
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.sp-below-isp.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 0
smallest_point_cover_xfer.sp-below-isp.from.Lentry%2%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.sp-below-isp.from.Lentry%2%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.sp-ml-lb-ineq.from.L0%0%d_L0%0%d.iters.: 6
smallest_point_cover_xfer.sp-ml-lb-ineq.from.L0%0%d_L0%0%d.prove_queries.: 0
smallest_point_cover_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI3_L0%1%allocaI1.iters.: 3
smallest_point_cover_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI3_L0%1%allocaI1.prove_queries.: 0
smallest_point_cover_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI3_L0%1%allocaI3.iters.: 4
smallest_point_cover_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI3_L0%1%allocaI3.prove_queries.: 1
smallest_point_cover_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI4_L0%1%allocaI4.iters.: 3
smallest_point_cover_xfer.sp-ml-lb-ineq.from.Lentry%1%allocaI4_L0%1%allocaI4.prove_queries.: 3
smt-queries-cache-hits.: 77
smt-queries-cvc4-sat.: 10
smt-queries-yices-sat.: 2
smt-queries-z3-sat.: 251
total-correlation-possibilities.: 10
total-correlation-possibilities-mod-lsprels.: 4
total-correlations-explored.: 7

flags:
dst-aloc.: 5
dst-edges.: 7
dst-nodes.: 8
dst-sp-updates.: 3
src-allocation-stmts.: 2
src-edges.: 9
src-nodes.: 9
timeout-occured.: 0

info:
eq-state.: find_correlation

Context stats:
exprs: count: 171050
sorts: count: 174
num_proof_queries: 434
num_proof_queries_answered_by_syntactic_check: 0
cache_stats:
m_simplify:
	----------- total:	146905
	        hit ratio:	0.983118
m_simplify_solver:
	----------- total:	20326
	        hit ratio:	0.733789
m_prune_obviously_false_branches_using_assume_clause:
	----------- total:	414
	        hit ratio:	0.369565
m_z3_solver_substitution:
	----------- total:	5404
	        hit ratio:	0
m_replace_donotsimplify_using_solver_expressions_by_free_vars:
	----------- total:	5411
	        hit ratio:	0
m_expr_size:
	----------- total:	61508
	        hit ratio:	0.897899
m_contains_only_constants_or_sp_versions:
	----------- total:	278
	        hit ratio:	0.845324
m_expr_evaluates_to_constant_visitor:
	----------- total:	537188
	        hit ratio:	0.952845

z3_solver expr_query_cache entry size: 358
	----------- total:	435
	             hits:	77
	        hit ratio:	0.177011
histogram (time taken by solver in ms):
[  38.3740,   53.2954) (avg.   45.7226)  : 196
[  53.2954,   74.0189) (avg.   61.8662)  : 19
[  74.0189,  102.8006) (avg.   94.7815)  : 37
[ 102.8006,  142.7739) (avg.  118.3084)  : 62
[ 142.7739,  198.2904) (avg.  166.9746)  : 35
[ 198.2904,  275.3941) (avg.  250.8203)  : 3
[ 275.3941,  382.4789) (avg.  303.9330)  : 1
[ 382.4789,  531.2028) (avg.  461.5860)  : 1
[ 531.2028,  737.7569) (avg.  680.1105)  : 2
[ 737.7569, 1024.6280) (avg.  895.6000)  : 2
histogram (number of quantifiers in query)
[0, 2) (avg. 1)                          : 277
[2, 4) (avg. 0)                          : 0
[4, 6) (avg. 5)                          : 65
[6, 7) (avg. 6)                          : 10
[7, 9) (avg. 7)                          : 6
[9, 11) (avg. 0)                         : 0
[11, 12) (avg. 0)                        : 0
[12, 14) (avg. 0)                        : 0
[14, 16) (avg. 0)                        : 0
[16, 17) (avg. 0)                        : 0
histogram (number of nodes in z3 ast)
[223, 299) (avg. 223)                    : 1
[299, 374) (avg. 318)                    : 1
[374, 450) (avg.   0)                    : 0
[450, 525) (avg. 512)                    : 3
[525, 601) (avg. 573)                    : 64
[601, 676) (avg. 604)                    : 3
[676, 752) (avg. 730)                    : 182
[752, 827) (avg. 793)                    : 22
[827, 903) (avg. 893)                    : 52
[903, 978) (avg. 938)                    : 30
Top 10 highest time taking queries:
1. [1.024s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear2-32-free_var_idx.65.from_pcLentry%1%allocaI3_L0%1%allocaI1.cond_apply_set_elem0_of_1.1
2. [0.768s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.65.from_pcLentry%1%allocaI3_L0%1%allocaI1.cond_apply_set_elem0_of_1.0
3. [0.686s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.60.from_pcLentry%1%allocaI3_L0%1%allocaI3.cond_apply_set_elem0_of_1.0
4. [0.674s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.65.from_pcLentry%1%allocaI3_L0%1%allocaI1.cond_apply_set_elem0_of_1.1
5. [0.462s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.60.from_pcLentry%1%allocaI3_L0%1%allocaI3.cond_apply_set_elem0_of_1.1
6. [0.304s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear8-32-free_var_idx.23.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
7. [0.271s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear8-32-free_var_idx.20.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
8. [0.254s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear6-32-free_var_idx.23.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0
9. [0.227s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear6-32-free_var_idx.23.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.1
10. [0.197s] SOLVER_RES_TRUE decide_hoare_triple_check_ub.expr-group-bvs.linear1-32-free_var_idx.24.from_pcL0%0%d_L0%0%d.cond_apply_set_elem0_of_1.0

Could not ascertain equivalence for function main
<ERR>Could not ascertain equivalence for function main</ERR>

tfg_edge_expr_wp_fn: num_starts 4812 time spent: 0:0:0 [0.531163s total; 0.000110 per start]
tfg_computeWP: num_starts 37971 time spent: 0:0:4 [4.781325s total; 0.000126 per start]
tfg_get_simplified_to_state_for_edge: num_starts 48143 time spent: 0:0:0 [0.072707s total; 0.000002 per start]
tfg_get_simplified_edge_cond_for_edge: num_starts 10752 time spent: 0:0:0 [0.016733s total; 0.000002 per start]
tfg_get_simplified_assumes_for_edge: num_starts 14769 time spent: 0:0:0 [0.023832s total; 0.000002 per start]
add_nodeces_at_pc_and_propagate: num_starts 290 time spent: 0:0:4 [4.020310s total; 0.013863 per start]
graph_with_ce_propagate_CEs_across_new_edge_for_reason: num_starts 60 time spent: 0:0:0 [0.004853s total; 0.000081 per start]
tfg_counter_example_translate_on_edge_helper: num_starts 696 time spent: 0:0:0 [0.749026s total; 0.001076 per start]
corr_graph_edge_well_formedness_conditions_falsified_by_counter_example: num_starts 293 time spent: 0:0:0 [0.171887s total; 0.000587 per start]
counter_example_translate_using_to_state_mapping_assigning_random_consts_as_needed: num_starts 694 time spent: 0:0:0 [0.641829s total; 0.000925 per start]
ce_evaluate_expr_assigning_random_consts_as_needed: num_starts 12556 time spent: 0:0:0 [0.751962s total; 0.000060 per start]
tfg_edge_assumes_satisfied_by_counter_example: num_starts 694 time spent: 0:0:0 [0.056109s total; 0.000081 per start]
tfg_graph_get_vars_written_on_edge: num_starts 694 time spent: 0:0:0 [0.023865s total; 0.000034 per start]
cg_with_rank_add_CE_at_pc: num_starts 287 time spent: 0:0:3 [3.942164s total; 0.013736 per start]
graph_with_ce_add_CE_at_pc: num_starts 202 time spent: 0:0:0 [0.005591s total; 0.000028 per start]
graph_with_guessing_add_CE_at_pc: num_starts 287 time spent: 0:0:3 [3.935222s total; 0.013712 per start]
point_set_add_point_using_CE: num_starts 3784 time spent: 0:0:1 [1.310390s total; 0.000346 per start]
graph_with_points_add_point_using_CE_at_pc: num_starts 3784 time spent: 0:0:1 [1.319441s total; 0.000349 per start]
graph_with_guessing_add_point_using_CE_at_pc: num_starts 284 time spent: 0:0:3 [3.761136s total; 0.013243 per start]
invariant_state_add_point_using_CE_at_pc: num_starts 284 time spent: 0:0:2 [2.423639s total; 0.008534 per start]
expr_label_memlabels_using_memlabel_map: num_starts 70100 time spent: 0:0:0 [0.981156s total; 0.000014 per start]
evaluate_expr_assigning_random_consts_and_check_bounds: num_starts 11331 time spent: 0:0:0 [0.437585s total; 0.000039 per start]
expr_simplify_solver: num_starts 25929 time spent: 0:0:1 [1.494769s total; 0.000058 per start]
expr_simplify_syntactic: num_starts 25929 time spent: 0:0:12 [12.742130s total; 0.000491 per start]
expr_simplify_select_on_store: num_starts 3086 time spent: 0:0:9 [9.909555s total; 0.003211 per start]
expr_simplify_store_on_store: num_starts 3243 time spent: 0:0:1 [1.199034s total; 0.000370 per start]
expr_simplify_using_lhs_set_helper: num_starts 4464 time spent: 0:0:14 [14.671071s total; 0.003287 per start]
expr_simplify_using_lhs_set_visit_function: num_starts 50439 time spent: 0:0:14 [14.628453s total; 0.000290 per start]
expr_evaluates_to_constant: num_starts 502531 time spent: 0:0:0 [0.657620s total; 0.000001 per start]
expr_simplify_sort_args_to_canonicalize: num_starts 28977 time spent: 0:0:0 [0.060901s total; 0.000002 per start]
expr_simplify_eq: num_starts 842 time spent: 0:0:0 [0.010445s total; 0.000012 per start]
expr_simplify_iff: num_starts 68 time spent: 0:0:0 [0.000025s total; 0.000000 per start]
expr_simplify_or: num_starts 107 time spent: 0:0:0 [0.000121s total; 0.000001 per start]
expr_simplify_and: num_starts 609 time spent: 0:0:0 [0.002573s total; 0.000004 per start]
expr_simplify_andnot1: num_starts 106 time spent: 0:0:0 [0.001005s total; 0.000009 per start]
expr_simplify_andnot2: num_starts 38 time spent: 0:0:0 [0.000486s total; 0.000013 per start]
expr_simplify_not: num_starts 218 time spent: 0:0:0 [0.000338s total; 0.000002 per start]
expr_simplify_implies: num_starts 44 time spent: 0:0:0 [0.000324s total; 0.000007 per start]
expr_simplify_ite: num_starts 206 time spent: 0:0:0 [0.005709s total; 0.000028 per start]
canonicalize_expr_tree: num_starts 5967 time spent: 0:0:0 [0.165550s total; 0.000028 per start]
expr_simplify_memalloc_using_memlabel: num_starts 2528 time spent: 0:0:0 [0.007904s total; 0.000003 per start]
expr_simplify_select_on_store_visit_function: num_starts 13238 time spent: 0:0:9 [9.829966s total; 0.000743 per start]
expr_simplify_select_on_store_visit_function_store_op: num_starts 10085 time spent: 0:0:6 [6.933208s total; 0.000687 per start]
memlabel_contains_only_readonly_symbols: num_starts 16037 time spent: 0:0:0 [0.002886s total; 0.000000 per start]
memlabels_are_independent: num_starts 42905 time spent: 0:0:0 [0.219921s total; 0.000005 per start]
is_overlapping_using_lhs_set_and_precond: num_starts 8450 time spent: 0:0:2 [2.081842s total; 0.000246 per start]
is_overlapping_syntactic_using_lhs_set_and_precond: num_starts 8450 time spent: 0:0:2 [2.020815s total; 0.000239 per start]
is_overlapping_atoms_pair_syntactic: num_starts 8450 time spent: 0:0:1 [1.788486s total; 0.000212 per start]
is_overlapping_considering_type_constraints: num_starts 8450 time spent: 0:0:0 [0.059352s total; 0.000007 per start]
find_offset_wrt_typed_variable_pointer: num_starts 12180 time spent: 0:0:0 [0.058649s total; 0.000005 per start]
is_gep_inbounds_offset: num_starts 12180 time spent: 0:0:0 [0.001776s total; 0.000000 per start]
get_arithmetic_addsub_atoms: num_starts 1460679 time spent: 0:0:0 [0.604656s total; 0.000000 per start]
expr_is_variable_start: num_starts 16052 time spent: 0:0:0 [0.001071s total; 0.000000 per start]
insn_md_assemble: num_starts 10 time spent: 0:0:0 [0.000034s total; 0.000003 per start]
expr_linear_relation_holds_visit: num_starts 5774 time spent: 0:0:0 [0.043549s total; 0.000008 per start]
expr_is_consts_struct_constant: num_starts 12665 time spent: 0:0:0 [0.005258s total; 0.000000 per start]
expr_do_simplify_helper: num_starts 149011 time spent: 0:0:14 [14.727020s total; 0.000099 per start]
expr_do_simplify_helper_cache: num_starts 149011 time spent: 0:0:0 [0.120662s total; 0.000001 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor_cache: num_starts 212 time spent: 0:0:0 [0.000051s total; 0.000000 per start]
expr_prune_obviously_false_branches_using_assume_clause_visitor: num_starts 212 time spent: 0:0:0 [0.000482s total; 0.000002 per start]
evaluate_expr_and_check_bounds: num_starts 16677 time spent: 0:0:1 [1.186521s total; 0.000071 per start]
combo_dfa_xfer_and_meet: num_starts 20 time spent: 0:0:3 [3.489095s total; 0.174455 per start]
alias_val_xfer_and_meet: num_starts 20 time spent: 0:0:3 [3.321469s total; 0.166073 per start]
get_sprel_map_from_avail_exprs: num_starts 91 time spent: 0:0:0 [0.067867s total; 0.000746 per start]
update_memlabels_for_memslot_locs: num_starts 81 time spent: 0:0:0 [0.044793s total; 0.000553 per start]
populate_gen_and_kill_sets_for_edge: num_starts 222 time spent: 0:0:0 [0.125948s total; 0.000567 per start]
compute_simplified_loc_exprs_for_edge: num_starts 676 time spent: 0:0:11 [11.419770s total; 0.016893 per start]
compute_locs_definitely_written_on_edge: num_starts 222 time spent: 0:0:0 [0.002053s total; 0.000009 per start]
get_locs_potentially_read_in_expr_using_locs_map: num_starts 1018 time spent: 0:0:1 [1.017304s total; 0.000999 per start]
edge_update_memlabel_map_for_mlvars: num_starts 111 time spent: 0:0:0 [0.085447s total; 0.000770 per start]
add_new_locs_based_on_edge: num_starts 20 time spent: 0:0:0 [0.842133s total; 0.042107 per start]
alias_val_meet: num_starts 111 time spent: 0:0:0 [0.043725s total; 0.000394 per start]
expand_locset_to_include_slots_for_memmask: num_starts 1028 time spent: 0:0:0 [0.023235s total; 0.000023 per start]
total: num_starts 1 time spent: 0:2:26 [146.866876s total; 146.866876 per start]
num_syntactic_match_tests = 0.
num_execution_tests = 0.
num_boolean_tests = 0.
fingerprinting rate: 0.00 per second (total), -nan per second (itable_enumerate_timer), -nan per second (excluding execution/boolean tests).

Time taken for equivalence check: 81.23s.
ftmap_run_pointsto_analysis.: 11.8852s (num_starts 2; 5.9426s/start)s.
EQ Time after pointsto analysis: 69.3405s.
EQ Time after pointsto analysis and smt_query: 24.965s.
EQ Time after pointsto analysis and smt_query and bv-solve: 24.6182s.
Equivalence proof not found after an exhaustive search.
